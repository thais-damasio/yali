; ModuleID = 'Project_CodeNet_C++1400/p03718/s234106525.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s234106525.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.__gnu_cxx::__normal_iterator" = type { i8* }
%"struct.std::random_access_iterator_tag" = type { i8 }
%struct.max_flow = type { i32, %"class.std::vector", %"class.std::vector.8", %"class.std::vector.8" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl" = type { %"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl" }
%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl" = type { %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"* }
%"struct.max_flow::Edge" = type { i32, i32, i32 }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.5" = type { i8 }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator.0" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.13" = type { %"class.std::vector.3"* }
%"class.__gnu_cxx::__normal_iterator.14" = type { %"struct.max_flow::Edge"* }
%"class.__gnu_cxx::__normal_iterator.15" = type { %"struct.max_flow::Edge"* }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::move_iterator" = type { %"struct.max_flow::Edge"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.std::allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.17" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.19" = type { i32* }

$_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_ = comdat any

$_ZN8max_flowC2Ei = comdat any

$_ZN8max_flow8add_edgeEiii = comdat any

$_ZN8max_flow3runEii = comdat any

$_ZN8max_flowD2Ev = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE6assignEmRKS3_ = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE14_M_fill_assignEmRKS3_ = comdat any

$_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE8capacityEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_ = comdat any

$_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RKT0_ = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE5beginEv = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZSt6fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8max_sizeEv = comdat any

$_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZSt4swapIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvRT_S7_ = comdat any

$_ZSt4moveIRPSt6vectorIN8max_flow4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZSt8__fill_aIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEaSERKS3_ = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv = comdat any

$_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_ = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv = comdat any

$_ZSt4copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_ = comdat any

$_ZSt22__uninitialized_copy_aIPN8max_flow4EdgeES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE11_M_allocateEm = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt13__copy_move_aILb0EPKN8max_flow4EdgeEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZSt8_DestroyIPN8max_flow4EdgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN8max_flow4EdgeEEEvT_S5_ = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE10deallocateEPS2_m = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEEvT_S9_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPN8max_flow4EdgeEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt18uninitialized_copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN8max_flow4EdgeES4_EET0_T_S6_S5_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN8max_flow4EdgeESaIS4_EEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIN8max_flow4EdgeESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIN8max_flow4EdgeESaIS2_EEEPT_RS5_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvT_S6_ = comdat any

$_ZSt7forwardIRKSt6vectorIN8max_flow4EdgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN8max_flow4EdgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN8max_flow4EdgeEED2Ev = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EED2Ev = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN8max_flow4EdgeEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEED2Ev = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN8max_flow4EdgeESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorIN8max_flow4EdgeESaIS2_EEEvPT_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZSt10__fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_ = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EELb0EE7_S_baseES5_ = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN8max_flow4EdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN8max_flow4EdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN8max_flow4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN8max_flow4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN8max_flow4EdgeEES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN8max_flow4EdgeEEENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN8max_flow4EdgeEELb1EE7_S_baseES4_ = comdat any

$_ZNKSt13move_iteratorIPN8max_flow4EdgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN8max_flow4EdgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE7destroyIS2_EEvPT_ = comdat any

$_ZN8max_flow3bfsEi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZN8max_flow3dfsEiii = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZN9__gnu_cxxneIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEixEm = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_ = comdat any

$_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv = comdat any

$_ZN9__gnu_cxxltIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_EvT_T0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv = comdat any

$_ZSt4swapIcEvRT_S1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv = comdat any

$_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@.str.1 = private unnamed_addr constant [4 x i8] c"-1\0A\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"%lld\0A\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s234106525.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define void @_Z5tostrxRNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE(i64, %"class.std::__cxx11::basic_string"* dereferenceable(32)) #0 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store i64 %0, i64* %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %7 = alloca i32
  store i32 -1920407921, i32* %7
  br label %8

; <label>:8:                                      ; preds = %2, %39
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -1920407921, label %11
    i32 1974556082, label %15
    i32 269320877, label %28
  ]

; <label>:10:                                     ; preds = %8
  br label %39

; <label>:11:                                     ; preds = %8
  %12 = load i64, i64* %3, align 8
  %13 = icmp ne i64 %12, 0
  %14 = select i1 %13, i32 1974556082, i32 269320877
  store i32 %14, i32* %7
  br label %39

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %3, align 8
  %17 = srem i64 %16, 10
  %18 = sub i64 0, 48
  %19 = sub i64 0, %17
  %20 = add i64 %18, %19
  %21 = sub i64 0, %20
  %22 = add nsw i64 48, %17
  %23 = trunc i64 %21 to i8
  %24 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %25 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(%"class.std::__cxx11::basic_string"* %24, i8 signext %23)
  %26 = load i64, i64* %3, align 8
  %27 = sdiv i64 %26, 10
  store i64 %27, i64* %3, align 8
  store i32 -1920407921, i32* %7
  br label %39

; <label>:28:                                     ; preds = %8
  %29 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %30 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"* %29) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store i8* %30, i8** %31, align 8
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %33 = call i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"* %32) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_(i8* %36, i8* %38)
  ret void

; <label>:39:                                     ; preds = %15, %11, %10
  br label %8
}

declare dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc(%"class.std::__cxx11::basic_string"*, i8 signext) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_(i8*, i8*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.std::random_access_iterator_tag", align 1
  %8 = alloca %"struct.std::random_access_iterator_tag", align 1
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i8* %1, i8** %10, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %3)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_St26random_access_iterator_tag(i8* %16, i8* %18)
  ret void
}

; Function Attrs: nounwind
declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv(%"class.std::__cxx11::basic_string"*) #2

; Function Attrs: nounwind
declare i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv(%"class.std::__cxx11::basic_string"*) #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca %struct.max_flow, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8, align 1
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i64, align 8
  store i32 0, i32* %1, align 4
  %13 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32* %2, i32* %3)
  %14 = load i32, i32* %2, align 4
  %15 = load i32, i32* %3, align 4
  %16 = sub i32 0, %14
  %17 = sub i32 0, %15
  %18 = add i32 %16, %17
  %19 = sub i32 0, %18
  %20 = add nsw i32 %14, %15
  %21 = sub i32 %19, 731099684
  %22 = add i32 %21, 2
  %23 = add i32 %22, 731099684
  %24 = add nsw i32 %19, 2
  call void @_ZN8max_flowC2Ei(%struct.max_flow* %4, i32 %23)
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* %3, align 4
  %27 = sub i32 0, %26
  %28 = sub i32 %25, %27
  %29 = add nsw i32 %25, %26
  store i32 %28, i32* %5, align 4
  %30 = load i32, i32* %2, align 4
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %30, 1015575198
  %33 = add i32 %32, %31
  %34 = sub i32 %33, 1015575198
  %35 = add nsw i32 %30, %31
  %36 = sub i32 0, 1
  %37 = sub i32 %34, %36
  %38 = add nsw i32 %34, 1
  store i32 %37, i32* %6, align 4
  store i32 0, i32* %7, align 4
  br label %39

; <label>:39:                                     ; preds = %387, %0
  %40 = load i32, i32* %7, align 4
  %41 = load i32, i32* %2, align 4
  %42 = icmp slt i32 %40, %41
  br i1 %42, label %43, label %393

; <label>:43:                                     ; preds = %39
  store i32 0, i32* %8, align 4
  br label %44

; <label>:44:                                     ; preds = %385, %43
  %45 = load i32, i32* @x.8
  %46 = load i32, i32* @y.9
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %543

; <label>:58:                                     ; preds = %44, %543
  %59 = load i32, i32* %8, align 4
  %60 = load i32, i32* %3, align 4
  %61 = icmp slt i32 %59, %60
  %62 = load i32, i32* @x.8
  %63 = load i32, i32* @y.9
  %64 = add i32 %62, -157500605
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -157500605
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %543

; <label>:88:                                     ; preds = %58
  br i1 %61, label %89, label %386

; <label>:89:                                     ; preds = %88
  %90 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %9)
          to label %91 unwind label %214

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* @x.8
  %93 = load i32, i32* @y.9
  %94 = sub i32 %92, -42764824
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -42764824
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %547

; <label>:118:                                    ; preds = %91, %547
  %119 = load i8, i8* %9, align 1
  %120 = sext i8 %119 to i32
  %121 = icmp eq i32 %120, 83
  %122 = load i32, i32* @x.8
  %123 = load i32, i32* @y.9
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 false, true
  %134 = and i1 %131, false
  %135 = and i1 %129, %133
  %136 = and i1 %132, false
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 false, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %547

; <label>:147:                                    ; preds = %118
  br i1 %121, label %148, label %218

; <label>:148:                                    ; preds = %147
  %149 = load i32, i32* @x.8
  %150 = load i32, i32* @y.9
  %151 = add i32 %149, -369032377
  %152 = sub i32 %151, 1
  %153 = sub i32 %152, -369032377
  %154 = sub i32 %149, 1
  %155 = mul i32 %149, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %150, 10
  %159 = xor i1 %157, true
  %160 = xor i1 %158, true
  %161 = xor i1 false, true
  %162 = and i1 %159, false
  %163 = and i1 %157, %161
  %164 = and i1 %160, false
  %165 = and i1 %158, %161
  %166 = or i1 %162, %163
  %167 = or i1 %164, %165
  %168 = xor i1 %166, %167
  %169 = or i1 %159, %160
  %170 = xor i1 %169, true
  %171 = or i1 false, %161
  %172 = and i1 %170, %171
  %173 = or i1 %168, %172
  %174 = or i1 %157, %158
  br i1 %173, label %175, label %551

; <label>:175:                                    ; preds = %148, %551
  %176 = load i32, i32* %5, align 4
  %177 = load i32, i32* %7, align 4
  %178 = load i32, i32* @x.8
  %179 = load i32, i32* @y.9
  %180 = add i32 %178, -1910785278
  %181 = sub i32 %180, 1
  %182 = sub i32 %181, -1910785278
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 false, true
  %191 = and i1 %188, false
  %192 = and i1 %186, %190
  %193 = and i1 %189, false
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 false, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  br i1 %202, label %204, label %551

; <label>:204:                                    ; preds = %175
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %176, i32 %177, i32 1073741823)
          to label %205 unwind label %214

; <label>:205:                                    ; preds = %204
  %206 = load i32, i32* %5, align 4
  %207 = load i32, i32* %8, align 4
  %208 = load i32, i32* %2, align 4
  %209 = add i32 %207, -291713142
  %210 = add i32 %209, %208
  %211 = sub i32 %210, -291713142
  %212 = add nsw i32 %207, %208
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %206, i32 %211, i32 1073741823)
          to label %213 unwind label %214

; <label>:213:                                    ; preds = %205
  br label %218

; <label>:214:                                    ; preds = %491, %446, %393, %300, %292, %286, %222, %205, %204, %89
  %215 = landingpad { i8*, i32 }
          cleanup
  %216 = extractvalue { i8*, i32 } %215, 0
  store i8* %216, i8** %10, align 8
  %217 = extractvalue { i8*, i32 } %215, 1
  store i32 %217, i32* %11, align 4
  call void @_ZN8max_flowD2Ev(%struct.max_flow* %4) #3
  br label %538

; <label>:218:                                    ; preds = %213, %147
  %219 = load i8, i8* %9, align 1
  %220 = sext i8 %219 to i32
  %221 = icmp eq i32 %220, 84
  br i1 %221, label %222, label %288

; <label>:222:                                    ; preds = %218
  %223 = load i32, i32* %7, align 4
  %224 = load i32, i32* %6, align 4
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %223, i32 %224, i32 1073741823)
          to label %225 unwind label %214

; <label>:225:                                    ; preds = %222
  %226 = load i32, i32* @x.8
  %227 = load i32, i32* @y.9
  %228 = sub i32 %226, -1308458527
  %229 = sub i32 %228, 1
  %230 = add i32 %229, -1308458527
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 false, true
  %239 = and i1 %236, false
  %240 = and i1 %234, %238
  %241 = and i1 %237, false
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 false, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  br i1 %250, label %252, label %554

; <label>:252:                                    ; preds = %225, %554
  %253 = load i32, i32* %8, align 4
  %254 = load i32, i32* %2, align 4
  %255 = sub i32 0, %253
  %256 = sub i32 0, %254
  %257 = add i32 %255, %256
  %258 = sub i32 0, %257
  %259 = add nsw i32 %253, %254
  %260 = load i32, i32* %6, align 4
  %261 = load i32, i32* @x.8
  %262 = load i32, i32* @y.9
  %263 = sub i32 0, 1
  %264 = add i32 %261, %263
  %265 = sub i32 %261, 1
  %266 = mul i32 %261, %264
  %267 = urem i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = icmp slt i32 %262, 10
  %270 = xor i1 %268, true
  %271 = xor i1 %269, true
  %272 = xor i1 true, true
  %273 = and i1 %270, true
  %274 = and i1 %268, %272
  %275 = and i1 %271, true
  %276 = and i1 %269, %272
  %277 = or i1 %273, %274
  %278 = or i1 %275, %276
  %279 = xor i1 %277, %278
  %280 = or i1 %270, %271
  %281 = xor i1 %280, true
  %282 = or i1 true, %272
  %283 = and i1 %281, %282
  %284 = or i1 %279, %283
  %285 = or i1 %268, %269
  br i1 %284, label %286, label %554

; <label>:286:                                    ; preds = %252
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %258, i32 %260, i32 1073741823)
          to label %287 unwind label %214

; <label>:287:                                    ; preds = %286
  br label %288

; <label>:288:                                    ; preds = %287, %218
  %289 = load i8, i8* %9, align 1
  %290 = sext i8 %289 to i32
  %291 = icmp eq i32 %290, 111
  br i1 %291, label %292, label %309

; <label>:292:                                    ; preds = %288
  %293 = load i32, i32* %7, align 4
  %294 = load i32, i32* %8, align 4
  %295 = load i32, i32* %2, align 4
  %296 = sub i32 %294, -1640236983
  %297 = add i32 %296, %295
  %298 = add i32 %297, -1640236983
  %299 = add nsw i32 %294, %295
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %293, i32 %298, i32 1)
          to label %300 unwind label %214

; <label>:300:                                    ; preds = %292
  %301 = load i32, i32* %8, align 4
  %302 = load i32, i32* %2, align 4
  %303 = add i32 %301, -1685140977
  %304 = add i32 %303, %302
  %305 = sub i32 %304, -1685140977
  %306 = add nsw i32 %301, %302
  %307 = load i32, i32* %7, align 4
  invoke void @_ZN8max_flow8add_edgeEiii(%struct.max_flow* %4, i32 %305, i32 %307, i32 1)
          to label %308 unwind label %214

; <label>:308:                                    ; preds = %300
  br label %309

; <label>:309:                                    ; preds = %308, %288
  %310 = load i32, i32* @x.8
  %311 = load i32, i32* @y.9
  %312 = sub i32 0, 1
  %313 = add i32 %310, %312
  %314 = sub i32 %310, 1
  %315 = mul i32 %310, %313
  %316 = urem i32 %315, 2
  %317 = icmp eq i32 %316, 0
  %318 = icmp slt i32 %311, 10
  %319 = and i1 %317, %318
  %320 = xor i1 %317, %318
  %321 = or i1 %319, %320
  %322 = or i1 %317, %318
  br i1 %321, label %323, label %582

; <label>:323:                                    ; preds = %309, %582
  %324 = load i32, i32* @x.8
  %325 = load i32, i32* @y.9
  %326 = sub i32 %324, 1242290580
  %327 = sub i32 %326, 1
  %328 = add i32 %327, 1242290580
  %329 = sub i32 %324, 1
  %330 = mul i32 %324, %328
  %331 = urem i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = icmp slt i32 %325, 10
  %334 = and i1 %332, %333
  %335 = xor i1 %332, %333
  %336 = or i1 %334, %335
  %337 = or i1 %332, %333
  br i1 %336, label %338, label %582

; <label>:338:                                    ; preds = %323
  br label %339

; <label>:339:                                    ; preds = %338
  %340 = load i32, i32* @x.8
  %341 = load i32, i32* @y.9
  %342 = sub i32 %340, -928130887
  %343 = sub i32 %342, 1
  %344 = add i32 %343, -928130887
  %345 = sub i32 %340, 1
  %346 = mul i32 %340, %344
  %347 = urem i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = icmp slt i32 %341, 10
  %350 = and i1 %348, %349
  %351 = xor i1 %348, %349
  %352 = or i1 %350, %351
  %353 = or i1 %348, %349
  br i1 %352, label %354, label %583

; <label>:354:                                    ; preds = %339, %583
  %355 = load i32, i32* %8, align 4
  %356 = sub i32 0, 1
  %357 = sub i32 %355, %356
  %358 = add nsw i32 %355, 1
  store i32 %357, i32* %8, align 4
  %359 = load i32, i32* @x.8
  %360 = load i32, i32* @y.9
  %361 = sub i32 %359, -1980342903
  %362 = sub i32 %361, 1
  %363 = add i32 %362, -1980342903
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = xor i1 %367, true
  %370 = xor i1 %368, true
  %371 = xor i1 true, true
  %372 = and i1 %369, true
  %373 = and i1 %367, %371
  %374 = and i1 %370, true
  %375 = and i1 %368, %371
  %376 = or i1 %372, %373
  %377 = or i1 %374, %375
  %378 = xor i1 %376, %377
  %379 = or i1 %369, %370
  %380 = xor i1 %379, true
  %381 = or i1 true, %371
  %382 = and i1 %380, %381
  %383 = or i1 %378, %382
  %384 = or i1 %367, %368
  br i1 %383, label %385, label %583

; <label>:385:                                    ; preds = %354
  br label %44

; <label>:386:                                    ; preds = %88
  br label %387

; <label>:387:                                    ; preds = %386
  %388 = load i32, i32* %7, align 4
  %389 = sub i32 %388, 2023740662
  %390 = add i32 %389, 1
  %391 = add i32 %390, 2023740662
  %392 = add nsw i32 %388, 1
  store i32 %391, i32* %7, align 4
  br label %39

; <label>:393:                                    ; preds = %39
  %394 = load i32, i32* %5, align 4
  %395 = load i32, i32* %6, align 4
  %396 = invoke i64 @_ZN8max_flow3runEii(%struct.max_flow* %4, i32 %394, i32 %395)
          to label %397 unwind label %214

; <label>:397:                                    ; preds = %393
  store i64 %396, i64* %12, align 8
  %398 = load i64, i64* %12, align 8
  %399 = load i32, i32* %2, align 4
  %400 = load i32, i32* %3, align 4
  %401 = mul nsw i32 %399, %400
  %402 = sext i32 %401 to i64
  %403 = icmp sgt i64 %398, %402
  br i1 %403, label %404, label %449

; <label>:404:                                    ; preds = %397
  %405 = load i32, i32* @x.8
  %406 = load i32, i32* @y.9
  %407 = add i32 %405, 345697521
  %408 = sub i32 %407, 1
  %409 = sub i32 %408, 345697521
  %410 = sub i32 %405, 1
  %411 = mul i32 %405, %409
  %412 = urem i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = icmp slt i32 %406, 10
  %415 = and i1 %413, %414
  %416 = xor i1 %413, %414
  %417 = or i1 %415, %416
  %418 = or i1 %413, %414
  br i1 %417, label %419, label %590

; <label>:419:                                    ; preds = %404, %590
  %420 = load i32, i32* @x.8
  %421 = load i32, i32* @y.9
  %422 = add i32 %420, 1793958298
  %423 = sub i32 %422, 1
  %424 = sub i32 %423, 1793958298
  %425 = sub i32 %420, 1
  %426 = mul i32 %420, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %421, 10
  %430 = xor i1 %428, true
  %431 = xor i1 %429, true
  %432 = xor i1 true, true
  %433 = and i1 %430, true
  %434 = and i1 %428, %432
  %435 = and i1 %431, true
  %436 = and i1 %429, %432
  %437 = or i1 %433, %434
  %438 = or i1 %435, %436
  %439 = xor i1 %437, %438
  %440 = or i1 %430, %431
  %441 = xor i1 %440, true
  %442 = or i1 true, %432
  %443 = and i1 %441, %442
  %444 = or i1 %439, %443
  %445 = or i1 %428, %429
  br i1 %444, label %446, label %590

; <label>:446:                                    ; preds = %419
  %447 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.1, i32 0, i32 0))
          to label %448 unwind label %214

; <label>:448:                                    ; preds = %446
  br label %536

; <label>:449:                                    ; preds = %397
  %450 = load i32, i32* @x.8
  %451 = load i32, i32* @y.9
  %452 = sub i32 %450, 1437017103
  %453 = sub i32 %452, 1
  %454 = add i32 %453, 1437017103
  %455 = sub i32 %450, 1
  %456 = mul i32 %450, %454
  %457 = urem i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = icmp slt i32 %451, 10
  %460 = and i1 %458, %459
  %461 = xor i1 %458, %459
  %462 = or i1 %460, %461
  %463 = or i1 %458, %459
  br i1 %462, label %464, label %591

; <label>:464:                                    ; preds = %449, %591
  %465 = load i64, i64* %12, align 8
  %466 = load i32, i32* @x.8
  %467 = load i32, i32* @y.9
  %468 = sub i32 0, 1
  %469 = add i32 %466, %468
  %470 = sub i32 %466, 1
  %471 = mul i32 %466, %469
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %467, 10
  %475 = xor i1 %473, true
  %476 = xor i1 %474, true
  %477 = xor i1 false, true
  %478 = and i1 %475, false
  %479 = and i1 %473, %477
  %480 = and i1 %476, false
  %481 = and i1 %474, %477
  %482 = or i1 %478, %479
  %483 = or i1 %480, %481
  %484 = xor i1 %482, %483
  %485 = or i1 %475, %476
  %486 = xor i1 %485, true
  %487 = or i1 false, %477
  %488 = and i1 %486, %487
  %489 = or i1 %484, %488
  %490 = or i1 %473, %474
  br i1 %489, label %491, label %591

; <label>:491:                                    ; preds = %464
  %492 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i32 0, i32 0), i64 %465)
          to label %493 unwind label %214

; <label>:493:                                    ; preds = %491
  %494 = load i32, i32* @x.8
  %495 = load i32, i32* @y.9
  %496 = sub i32 %494, -678242728
  %497 = sub i32 %496, 1
  %498 = add i32 %497, -678242728
  %499 = sub i32 %494, 1
  %500 = mul i32 %494, %498
  %501 = urem i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = icmp slt i32 %495, 10
  %504 = and i1 %502, %503
  %505 = xor i1 %502, %503
  %506 = or i1 %504, %505
  %507 = or i1 %502, %503
  br i1 %506, label %508, label %593

; <label>:508:                                    ; preds = %493, %593
  %509 = load i32, i32* @x.8
  %510 = load i32, i32* @y.9
  %511 = add i32 %509, 1678115780
  %512 = sub i32 %511, 1
  %513 = sub i32 %512, 1678115780
  %514 = sub i32 %509, 1
  %515 = mul i32 %509, %513
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %510, 10
  %519 = xor i1 %517, true
  %520 = xor i1 %518, true
  %521 = xor i1 false, true
  %522 = and i1 %519, false
  %523 = and i1 %517, %521
  %524 = and i1 %520, false
  %525 = and i1 %518, %521
  %526 = or i1 %522, %523
  %527 = or i1 %524, %525
  %528 = xor i1 %526, %527
  %529 = or i1 %519, %520
  %530 = xor i1 %529, true
  %531 = or i1 false, %521
  %532 = and i1 %530, %531
  %533 = or i1 %528, %532
  %534 = or i1 %517, %518
  br i1 %533, label %535, label %593

; <label>:535:                                    ; preds = %508
  br label %536

; <label>:536:                                    ; preds = %535, %448
  store i32 0, i32* %1, align 4
  call void @_ZN8max_flowD2Ev(%struct.max_flow* %4) #3
  %537 = load i32, i32* %1, align 4
  ret i32 %537

; <label>:538:                                    ; preds = %214
  %539 = load i8*, i8** %10, align 8
  %540 = load i32, i32* %11, align 4
  %541 = insertvalue { i8*, i32 } undef, i8* %539, 0
  %542 = insertvalue { i8*, i32 } %541, i32 %540, 1
  resume { i8*, i32 } %542

; <label>:543:                                    ; preds = %58, %44
  %544 = load i32, i32* %8, align 4
  %545 = load i32, i32* %3, align 4
  %546 = icmp slt i32 %544, %545
  br label %58

; <label>:547:                                    ; preds = %118, %91
  %548 = load i8, i8* %9, align 1
  %549 = sext i8 %548 to i32
  %550 = icmp eq i32 %549, 83
  br label %118

; <label>:551:                                    ; preds = %175, %148
  %552 = load i32, i32* %5, align 4
  %553 = load i32, i32* %7, align 4
  br label %175

; <label>:554:                                    ; preds = %252, %225
  %555 = load i32, i32* %8, align 4
  %556 = load i32, i32* %2, align 4
  %557 = sub i32 0, %555
  %558 = add i32 0, %557
  %559 = sub i32 0, %555
  %560 = sub i32 %558, 921657529
  %561 = add i32 %560, %556
  %562 = add i32 %561, 921657529
  %563 = add i32 %558, %556
  %564 = sub i32 0, %555
  %565 = add i32 0, %564
  %566 = sub i32 0, %555
  %567 = sub i32 0, %556
  %568 = sub i32 %565, %567
  %569 = add i32 %565, %556
  %570 = sub i32 0, %555
  %571 = add i32 0, %570
  %572 = sub i32 0, %555
  %573 = add i32 %571, -1550471822
  %574 = add i32 %573, %556
  %575 = sub i32 %574, -1550471822
  %576 = add i32 %571, %556
  %577 = add i32 %555, -1432586621
  %578 = add i32 %577, %556
  %579 = sub i32 %578, -1432586621
  %580 = add nsw i32 %555, %556
  %581 = load i32, i32* %6, align 4
  br label %252

; <label>:582:                                    ; preds = %323, %309
  br label %323

; <label>:583:                                    ; preds = %354, %339
  %584 = load i32, i32* %8, align 4
  %585 = shl i32 %584, 1
  %586 = sub i32 %584, 1678195879
  %587 = add i32 %586, 1
  %588 = add i32 %587, 1678195879
  %589 = add nsw i32 %584, 1
  store i32 %588, i32* %8, align 4
  br label %354

; <label>:590:                                    ; preds = %419, %404
  br label %419

; <label>:591:                                    ; preds = %464, %449
  %592 = load i64, i64* %12, align 8
  br label %464

; <label>:593:                                    ; preds = %508, %493
  br label %508
}

declare i32 @scanf(i8*, ...) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8max_flowC2Ei(%struct.max_flow*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.max_flow*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.3", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %struct.max_flow* %0, %struct.max_flow** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.max_flow*, %struct.max_flow** %3, align 8
  %9 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %8, i32 0, i32 0
  %10 = load i32, i32* %4, align 4
  store i32 %10, i32* %9, align 8
  %11 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %8, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector"* %11) #3
  %12 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %8, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %12) #3
  %13 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %8, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"* %13) #3
  %14 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %8, i32 0, i32 1
  %15 = load i32, i32* %4, align 4
  %16 = sext i32 %15 to i64
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2Ev(%"class.std::vector.3"* %5) #3
  invoke void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE6assignEmRKS3_(%"class.std::vector"* %14, i64 %16, %"class.std::vector.3"* dereferenceable(24) %5)
          to label %17 unwind label %71

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.10
  %19 = load i32, i32* @y.11
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %80

; <label>:43:                                     ; preds = %17, %80
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"* %5) #3
  %44 = load i32, i32* @x.10
  %45 = load i32, i32* @y.11
  %46 = sub i32 %44, -422034090
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -422034090
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %80

; <label>:70:                                     ; preds = %43
  ret void

; <label>:71:                                     ; preds = %2
  %72 = landingpad { i8*, i32 }
          cleanup
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %6, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %7, align 4
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"* %5) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %13) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %12) #3
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %11) #3
  br label %75

; <label>:75:                                     ; preds = %71
  %76 = load i8*, i8** %6, align 8
  %77 = load i32, i32* %7, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  resume { i8*, i32 } %79

; <label>:80:                                     ; preds = %43, %17
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"* %5) #3
  br label %43
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8max_flow8add_edgeEiii(%struct.max_flow*, i32, i32, i32) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.12
  %8 = load i32, i32* @y.13
  %9 = sub i32 %7, 608909812
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 608909812
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1747299139, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %173
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1747299139, label %21
    i32 1507195481, label %41
    i32 823460752, label %97
    i32 1764906279, label %98
  ]

; <label>:20:                                     ; preds = %18
  br label %173

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1507195481, i32 1764906279
  store i32 %40, i32* %17
  br label %173

; <label>:41:                                     ; preds = %18
  %42 = alloca %struct.max_flow*, align 8
  %43 = alloca i32, align 4
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca %"struct.max_flow::Edge", align 4
  %47 = alloca %"struct.max_flow::Edge", align 4
  store %struct.max_flow* %0, %struct.max_flow** %42, align 8
  store i32 %1, i32* %43, align 4
  store i32 %2, i32* %44, align 4
  store i32 %3, i32* %45, align 4
  %48 = load %struct.max_flow*, %struct.max_flow** %42, align 8
  %49 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %48, i32 0, i32 1
  %50 = load i32, i32* %43, align 4
  %51 = sext i32 %50 to i64
  %52 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %49, i64 %51) #3
  %53 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %46, i32 0, i32 0
  %54 = load i32, i32* %44, align 4
  store i32 %54, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %46, i32 0, i32 1
  %56 = load i32, i32* %45, align 4
  store i32 %56, i32* %55, align 4
  %57 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %46, i32 0, i32 2
  %58 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %48, i32 0, i32 1
  %59 = load i32, i32* %44, align 4
  %60 = sext i32 %59 to i64
  %61 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %58, i64 %60) #3
  %62 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %61) #3
  %63 = trunc i64 %62 to i32
  store i32 %63, i32* %57, align 4
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.3"* %52, %"struct.max_flow::Edge"* dereferenceable(12) %46)
  %64 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %48, i32 0, i32 1
  %65 = load i32, i32* %44, align 4
  %66 = sext i32 %65 to i64
  %67 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %64, i64 %66) #3
  %68 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %47, i32 0, i32 0
  %69 = load i32, i32* %43, align 4
  store i32 %69, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %47, i32 0, i32 1
  store i32 0, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %47, i32 0, i32 2
  %72 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %48, i32 0, i32 1
  %73 = load i32, i32* %43, align 4
  %74 = sext i32 %73 to i64
  %75 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %72, i64 %74) #3
  %76 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %75) #3
  %77 = trunc i64 %76 to i32
  %78 = sub i32 %77, 595289733
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 595289733
  %81 = sub nsw i32 %77, 1
  store i32 %80, i32* %71, align 4
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.3"* %67, %"struct.max_flow::Edge"* dereferenceable(12) %47)
  %82 = load i32, i32* @x.12
  %83 = load i32, i32* @y.13
  %84 = add i32 %82, 1551294777
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1551294777
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 823460752, i32 1764906279
  store i32 %96, i32* %17
  br label %173

; <label>:97:                                     ; preds = %18
  ret void

; <label>:98:                                     ; preds = %18
  %99 = alloca %struct.max_flow*, align 8
  %100 = alloca i32, align 4
  %101 = alloca i32, align 4
  %102 = alloca i32, align 4
  %103 = alloca %"struct.max_flow::Edge", align 4
  %104 = alloca %"struct.max_flow::Edge", align 4
  store %struct.max_flow* %0, %struct.max_flow** %99, align 8
  store i32 %1, i32* %100, align 4
  store i32 %2, i32* %101, align 4
  store i32 %3, i32* %102, align 4
  %105 = load %struct.max_flow*, %struct.max_flow** %99, align 8
  %106 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %105, i32 0, i32 1
  %107 = load i32, i32* %100, align 4
  %108 = sext i32 %107 to i64
  %109 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %106, i64 %108) #3
  %110 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %103, i32 0, i32 0
  %111 = load i32, i32* %101, align 4
  store i32 %111, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %103, i32 0, i32 1
  %113 = load i32, i32* %102, align 4
  store i32 %113, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %103, i32 0, i32 2
  %115 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %105, i32 0, i32 1
  %116 = load i32, i32* %101, align 4
  %117 = sext i32 %116 to i64
  %118 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %115, i64 %117) #3
  %119 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %118) #3
  %120 = trunc i64 %119 to i32
  store i32 %120, i32* %114, align 4
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.3"* %109, %"struct.max_flow::Edge"* dereferenceable(12) %103)
  %121 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %105, i32 0, i32 1
  %122 = load i32, i32* %101, align 4
  %123 = sext i32 %122 to i64
  %124 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %121, i64 %123) #3
  %125 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %104, i32 0, i32 0
  %126 = load i32, i32* %100, align 4
  store i32 %126, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %104, i32 0, i32 1
  store i32 0, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %104, i32 0, i32 2
  %129 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %105, i32 0, i32 1
  %130 = load i32, i32* %100, align 4
  %131 = sext i32 %130 to i64
  %132 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %129, i64 %131) #3
  %133 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %132) #3
  %134 = trunc i64 %133 to i32
  %135 = shl i32 %134, 1
  %136 = sub i32 0, 952977614
  %137 = sub i32 %136, %134
  %138 = add i32 %137, 952977614
  %139 = sub i32 0, %134
  %140 = sub i32 0, %138
  %141 = sub i32 0, 1
  %142 = add i32 %140, %141
  %143 = sub i32 0, %142
  %144 = add i32 %138, 1
  %145 = sub i32 0, %134
  %146 = add i32 0, %145
  %147 = sub i32 0, %134
  %148 = sub i32 0, 1
  %149 = sub i32 %146, %148
  %150 = add i32 %146, 1
  %151 = sub i32 %134, 784816587
  %152 = sub i32 %151, 1
  %153 = add i32 %152, 784816587
  %154 = sub i32 %134, 1
  %155 = mul i32 %153, 1
  %156 = sub i32 %134, 2002226375
  %157 = sub i32 %156, 1
  %158 = add i32 %157, 2002226375
  %159 = sub i32 %134, 1
  %160 = mul i32 %158, 1
  %161 = sub i32 0, -213055263
  %162 = sub i32 %161, %134
  %163 = add i32 %162, -213055263
  %164 = sub i32 0, %134
  %165 = sub i32 0, %163
  %166 = sub i32 0, 1
  %167 = add i32 %165, %166
  %168 = sub i32 0, %167
  %169 = add i32 %163, 1
  %170 = sub i32 0, 1
  %171 = add i32 %134, %170
  %172 = sub nsw i32 %134, 1
  store i32 %171, i32* %128, align 4
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.3"* %124, %"struct.max_flow::Edge"* dereferenceable(12) %104)
  store i32 1507195481, i32* %17
  br label %173

; <label>:173:                                    ; preds = %98, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN8max_flow3runEii(%struct.max_flow*, i32, i32) #0 comdat align 2 {
  %4 = alloca %struct.max_flow*
  %5 = alloca %struct.max_flow*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.max_flow* %0, %struct.max_flow** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load %struct.max_flow*, %struct.max_flow** %5, align 8
  store %struct.max_flow* %11, %struct.max_flow** %4
  store i64 0, i64* %8, align 8
  %12 = alloca i32
  store i32 670195409, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %50
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 670195409, label %16
    i32 1666756484, label %27
    i32 258059633, label %34
    i32 -572752078, label %41
    i32 -26761516, label %47
    i32 178139085, label %48
  ]

; <label>:15:                                     ; preds = %13
  br label %50

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = load volatile %struct.max_flow*, %struct.max_flow** %4
  call void @_ZN8max_flow3bfsEi(%struct.max_flow* %18, i32 %17)
  %19 = load volatile %struct.max_flow*, %struct.max_flow** %4
  %20 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %19, i32 0, i32 3
  %21 = load i32, i32* %7, align 4
  %22 = sext i32 %21 to i64
  %23 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %20, i64 %22) #3
  %24 = load i32, i32* %23, align 4
  %25 = icmp sge i32 %24, 0
  %26 = select i1 %25, i32 1666756484, i32 178139085
  store i32 %26, i32* %12
  br label %50

; <label>:27:                                     ; preds = %13
  %28 = load volatile %struct.max_flow*, %struct.max_flow** %4
  %29 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %28, i32 0, i32 2
  %30 = load volatile %struct.max_flow*, %struct.max_flow** %4
  %31 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"* %29, i64 %33, i32* dereferenceable(4) %10)
  store i32 258059633, i32* %12
  br label %50

; <label>:34:                                     ; preds = %13
  %35 = load i32, i32* %6, align 4
  %36 = load i32, i32* %7, align 4
  %37 = load volatile %struct.max_flow*, %struct.max_flow** %4
  %38 = call i64 @_ZN8max_flow3dfsEiii(%struct.max_flow* %37, i32 %35, i32 %36, i32 1073741823)
  store i64 %38, i64* %9, align 8
  %39 = icmp sgt i64 %38, 0
  %40 = select i1 %39, i32 -572752078, i32 -26761516
  store i32 %40, i32* %12
  br label %50

; <label>:41:                                     ; preds = %13
  %42 = load i64, i64* %9, align 8
  %43 = load i64, i64* %8, align 8
  %44 = sub i64 0, %42
  %45 = sub i64 %43, %44
  %46 = add nsw i64 %43, %42
  store i64 %45, i64* %8, align 8
  store i32 258059633, i32* %12
  br label %50

; <label>:47:                                     ; preds = %13
  store i32 670195409, i32* %12
  br label %50

; <label>:48:                                     ; preds = %13
  %49 = load i64, i64* %8, align 8
  ret i64 %49

; <label>:50:                                     ; preds = %47, %41, %34, %27, %16, %15
  br label %13
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN8max_flowD2Ev(%struct.max_flow*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %struct.max_flow*, align 8
  store %struct.max_flow* %0, %struct.max_flow** %2, align 8
  %3 = load %struct.max_flow*, %struct.max_flow** %2, align 8
  %4 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %3, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %4) #3
  %5 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %3, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %5) #3
  %6 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %3, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.18
  %3 = load i32, i32* @y.19
  %4 = sub i32 %2, 274548846
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 274548846
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %38

; <label>:16:                                     ; preds = %1, %38
  %17 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  %18 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %19 = bitcast %"class.std::vector"* %18 to %"struct.std::_Vector_base"*
  %20 = load i32, i32* @x.18
  %21 = load i32, i32* @y.19
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %38

; <label>:33:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base"* %19)
          to label %34 unwind label %35

; <label>:34:                                     ; preds = %33
  ret void

; <label>:35:                                     ; preds = %33
  %36 = landingpad { i8*, i32 }
          catch i8* null
  %37 = extractvalue { i8*, i32 } %36, 0
  call void @__clang_call_terminate(i8* %37) #11
  unreachable

; <label>:38:                                     ; preds = %16, %1
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.20
  %3 = load i32, i32* @y.21
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %91

; <label>:27:                                     ; preds = %1, %91
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = load i32, i32* @x.20
  %32 = load i32, i32* @y.21
  %33 = add i32 %31, -2112812399
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -2112812399
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %91

; <label>:45:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"* %30)
          to label %46 unwind label %88

; <label>:46:                                     ; preds = %45
  %47 = load i32, i32* @x.20
  %48 = load i32, i32* @y.21
  %49 = add i32 %47, -936797823
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -936797823
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %95

; <label>:73:                                     ; preds = %46, %95
  %74 = load i32, i32* @x.20
  %75 = load i32, i32* @y.21
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %95

; <label>:87:                                     ; preds = %73
  ret void

; <label>:88:                                     ; preds = %45
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  call void @__clang_call_terminate(i8* %90) #11
  unreachable

; <label>:91:                                     ; preds = %27, %1
  %92 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %92, align 8
  %93 = load %"class.std::vector.8"*, %"class.std::vector.8"** %92, align 8
  %94 = bitcast %"class.std::vector.8"* %93 to %"struct.std::_Vector_base.9"*
  br label %27

; <label>:95:                                     ; preds = %73, %46
  br label %73
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE6assignEmRKS3_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE14_M_fill_assignEmRKS3_(%"class.std::vector"* %7, i64 %8, %"class.std::vector.3"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.24
  %7 = load i32, i32* @y.25
  %8 = sub i32 %6, -1081912977
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1081912977
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %50

; <label>:32:                                     ; preds = %5, %50
  %33 = load i32, i32* @x.24
  %34 = load i32, i32* @y.25
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %32
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %12, align 8
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %14) #3
  invoke void @_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E(%"struct.max_flow::Edge"* %9, %"struct.max_flow::Edge"* %13, %"class.std::allocator.5"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.26
  %25 = load i32, i32* @y.27
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %78

; <label>:49:                                     ; preds = %23, %78
  %50 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %50) #11
  %51 = load i32, i32* @x.26
  %52 = load i32, i32* @y.27
  %53 = sub i32 %51, 1470746550
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 1470746550
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %78

; <label>:77:                                     ; preds = %49
  unreachable

; <label>:78:                                     ; preds = %49, %23
  %79 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %79) #11
  br label %49
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.28
  %3 = load i32, i32* @y.29
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %94

; <label>:27:                                     ; preds = %1, %94
  %28 = alloca %"class.std::vector.8"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %32 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %41 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %40) #3
  %42 = load i32, i32* @x.28
  %43 = load i32, i32* @y.29
  %44 = add i32 %42, -835787308
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -835787308
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %94

; <label>:56:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %35, i32* %39, %"class.std::allocator.10"* dereferenceable(1) %41)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %58) #3
  ret void

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* @x.28
  %61 = load i32, i32* @y.29
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %109

; <label>:73:                                     ; preds = %59, %109
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %29, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %30, align 4
  %77 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %77) #3
  %78 = load i32, i32* @x.28
  %79 = load i32, i32* @y.29
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %109

; <label>:91:                                     ; preds = %73
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %93) #11
  unreachable

; <label>:94:                                     ; preds = %27, %1
  %95 = alloca %"class.std::vector.8"*, align 8
  %96 = alloca i8*
  %97 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %95, align 8
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %95, align 8
  %99 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %100, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %104, i32 0, i32 1
  %106 = load i32*, i32** %105, align 8
  %107 = bitcast %"class.std::vector.8"* %98 to %"struct.std::_Vector_base.9"*
  %108 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %107) #3
  br label %27

; <label>:109:                                    ; preds = %73, %59
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %29, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %30, align 4
  %113 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %113) #3
  br label %73
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.30
  %3 = load i32, i32* @y.31
  %4 = sub i32 %2, -1215029399
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1215029399
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %67

; <label>:28:                                     ; preds = %1, %67
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %35, align 8
  %37 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %39, align 8
  %41 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %42 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %41) #3
  %43 = load i32, i32* @x.30
  %44 = load i32, i32* @y.31
  %45 = sub i32 %43, 1951916234
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1951916234
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %67

; <label>:57:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.3"* %36, %"class.std::vector.3"* %40, %"class.std::allocator.0"* dereferenceable(1) %42)
          to label %58 unwind label %60

; <label>:58:                                     ; preds = %57
  %59 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %59) #3
  ret void

; <label>:60:                                     ; preds = %57
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %30, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %31, align 4
  %64 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %66) #11
  unreachable

; <label>:67:                                     ; preds = %28, %1
  %68 = alloca %"class.std::vector"*, align 8
  %69 = alloca i8*
  %70 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %68, align 8
  %71 = load %"class.std::vector"*, %"class.std::vector"** %68, align 8
  %72 = bitcast %"class.std::vector"* %71 to %"struct.std::_Vector_base"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %73, i32 0, i32 0
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %76 = bitcast %"class.std::vector"* %71 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"class.std::vector.3"*, %"class.std::vector.3"** %78, align 8
  %80 = bitcast %"class.std::vector"* %71 to %"struct.std::_Vector_base"*
  %81 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %80) #3
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2Ev(%"class.std::allocator.0"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.40
  %5 = load i32, i32* @y.41
  %6 = add i32 %4, -602887129
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -602887129
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 364091856, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 364091856, label %18
    i32 1495308260, label %38
    i32 -385349212, label %55
    i32 -1115496531, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1495308260, i32 -1115496531
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %39, align 8
  %41 = load i32, i32* @x.40
  %42 = load i32, i32* @y.41
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -385349212, i32 -1115496531
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %57, align 8
  store i32 1495308260, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.42
  %5 = load i32, i32* @y.43
  %6 = sub i32 %4, 1368514895
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1368514895
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 818411878, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 818411878, label %18
    i32 -319968898, label %26
    i32 -1089143168, label %45
    i32 -1440990685, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -319968898, i32 -1440990685
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %27, align 8
  %28 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.42
  %31 = load i32, i32* @y.43
  %32 = add i32 %30, 2120826310
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 2120826310
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1089143168, i32 -1440990685
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %47, align 8
  %48 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49)
  store i32 -319968898, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.44
  %5 = load i32, i32* @y.45
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -36849459, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %67
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -36849459, label %17
    i32 -573311445, label %37
    i32 150758828, label %59
    i32 -735626818, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %67

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -573311445, i32 -735626818
  store i32 %36, i32* %13
  br label %67

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 1
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 2
  store i32* null, i32** %43, align 8
  %44 = load i32, i32* @x.44
  %45 = load i32, i32* @y.45
  %46 = sub i32 %44, -2023150367
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -2023150367
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 150758828, i32 -735626818
  store i32 %58, i32* %13
  br label %67

; <label>:59:                                     ; preds = %14
  ret void

; <label>:60:                                     ; preds = %14
  %61 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %61, align 8
  %62 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %61, align 8
  %63 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %63) #3
  %64 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 0
  store i32* null, i32** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62, i32 0, i32 2
  store i32* null, i32** %66, align 8
  store i32 -573311445, i32* %13
  br label %67

; <label>:67:                                     ; preds = %60, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE14_M_fill_assignEmRKS3_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector"*
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca %"class.std::vector", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %9, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %16 = call i64 @_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -112161208, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -112161208, label %21
    i32 1974457404, label %26
    i32 574037341, label %37
    i32 -17966475, label %43
    i32 -1952316605, label %76
    i32 -1764803387, label %86
    i32 -1777939768, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 1974457404, i32 574037341
  store i32 %25, i32* %17
  br label %88

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %30) #3
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"* %10, i64 %27, %"class.std::vector.3"* dereferenceable(24) %28, %"class.std::allocator.0"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %35 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %33, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %10) #3
  store i32 -1777939768, i32* %17
  br label %88

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %40 = call i64 @_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 -17966475, i32 -1952316605
  store i32 %42, i32* %17
  br label %88

; <label>:43:                                     ; preds = %18
  %44 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %45 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  store %"class.std::vector.3"* %45, %"class.std::vector.3"** %46, align 8
  %47 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %48 = call %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %12, i32 0, i32 0
  store %"class.std::vector.3"* %48, %"class.std::vector.3"** %49, align 8
  %50 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  %52 = load %"class.std::vector.3"*, %"class.std::vector.3"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %12, i32 0, i32 0
  %54 = load %"class.std::vector.3"*, %"class.std::vector.3"** %53, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RKT0_(%"class.std::vector.3"* %52, %"class.std::vector.3"* %54, %"class.std::vector.3"* dereferenceable(24) %50)
  %55 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %56 = bitcast %"class.std::vector"* %55 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"class.std::vector.3"*, %"class.std::vector.3"** %58, align 8
  %60 = load i64, i64* %8, align 8
  %61 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %62 = call i64 @_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %61) #3
  %63 = add i64 %60, 1146599486210706507
  %64 = sub i64 %63, %62
  %65 = sub i64 %64, 1146599486210706507
  %66 = sub i64 %60, %62
  %67 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %68 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %69 = bitcast %"class.std::vector"* %68 to %"struct.std::_Vector_base"*
  %70 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %69) #3
  %71 = call %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %59, i64 %65, %"class.std::vector.3"* dereferenceable(24) %67, %"class.std::allocator.0"* dereferenceable(1) %70)
  %72 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %73 = bitcast %"class.std::vector"* %72 to %"struct.std::_Vector_base"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %74, i32 0, i32 1
  store %"class.std::vector.3"* %71, %"class.std::vector.3"** %75, align 8
  store i32 -1764803387, i32* %17
  br label %88

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %78 = bitcast %"class.std::vector"* %77 to %"struct.std::_Vector_base"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %82 = load i64, i64* %8, align 8
  %83 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %84 = call %"class.std::vector.3"* @_ZSt6fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"* %81, i64 %82, %"class.std::vector.3"* dereferenceable(24) %83)
  %85 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  call void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector"* %85, %"class.std::vector.3"* %84) #3
  store i32 -1764803387, i32* %17
  br label %88

; <label>:86:                                     ; preds = %18
  store i32 -1777939768, i32* %17
  br label %88

; <label>:87:                                     ; preds = %18
  ret void

; <label>:88:                                     ; preds = %86, %76, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE8capacityEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.52
  %6 = load i32, i32* @y.53
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1926730181, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %101
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1926730181, label %18
    i32 -839478690, label %26
    i32 -1148083243, label %70
    i32 -1481664965, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %101

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -839478690, i32 -1481664965
  store i32 %25, i32* %14
  br label %101

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %29 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %30, i32 0, i32 2
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %33 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %35, align 8
  %37 = ptrtoint %"class.std::vector.3"* %32 to i64
  %38 = ptrtoint %"class.std::vector.3"* %36 to i64
  %39 = sub i64 %37, -4775362746719035189
  %40 = sub i64 %39, %38
  %41 = add i64 %40, -4775362746719035189
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 24
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.52
  %45 = load i32, i32* @y.53
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1148083243, i32 -1481664965
  store i32 %69, i32* %14
  br label %101

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %76, i32 0, i32 2
  %78 = load %"class.std::vector.3"*, %"class.std::vector.3"** %77, align 8
  %79 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %83 = ptrtoint %"class.std::vector.3"* %78 to i64
  %84 = ptrtoint %"class.std::vector.3"* %82 to i64
  %85 = sub i64 %83, 7954014280695884169
  %86 = sub i64 %85, %84
  %87 = add i64 %86, 7954014280695884169
  %88 = sub i64 %83, %84
  %89 = mul i64 %87, %84
  %90 = sub i64 %83, -5913326588681891166
  %91 = sub i64 %90, %84
  %92 = add i64 %91, -5913326588681891166
  %93 = sub i64 %83, %84
  %94 = shl i64 %92, 24
  %95 = add i64 %92, -7185195059530062545
  %96 = sub i64 %95, 24
  %97 = sub i64 %96, -7185195059530062545
  %98 = sub i64 %92, 24
  %99 = mul i64 %97, 24
  %100 = sdiv exact i64 %92, 24
  store i32 -839478690, i32* %14
  br label %101

; <label>:101:                                    ; preds = %72, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24), %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.56
  %6 = load i32, i32* @y.57
  %7 = add i32 %5, -456180744
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -456180744
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 false, true
  %18 = and i1 %15, false
  %19 = and i1 %13, %17
  %20 = and i1 %16, false
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 false, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %182

; <label>:31:                                     ; preds = %4, %182
  %32 = alloca %"class.std::vector"*, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::vector.3"*, align 8
  %35 = alloca %"class.std::allocator.0"*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %32, align 8
  store i64 %1, i64* %33, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %34, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %35, align 8
  %38 = load %"class.std::vector"*, %"class.std::vector"** %32, align 8
  %39 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  %40 = load i64, i64* %33, align 8
  %41 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %35, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %39, i64 %40, %"class.std::allocator.0"* dereferenceable(1) %41)
  %42 = load i64, i64* %33, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %34, align 8
  %44 = load i32, i32* @x.56
  %45 = load i32, i32* @y.57
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %182

; <label>:57:                                     ; preds = %31
  invoke void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"* %38, i64 %42, %"class.std::vector.3"* dereferenceable(24) %43)
          to label %58 unwind label %101

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.56
  %60 = load i32, i32* @y.57
  %61 = add i32 %59, -1807801492
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, -1807801492
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %195

; <label>:85:                                     ; preds = %58, %195
  %86 = load i32, i32* @x.56
  %87 = load i32, i32* @y.57
  %88 = sub i32 %86, 429072025
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 429072025
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %195

; <label>:100:                                    ; preds = %85
  ret void

; <label>:101:                                    ; preds = %57
  %102 = load i32, i32* @x.56
  %103 = load i32, i32* @y.57
  %104 = add i32 %102, -438246007
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -438246007
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = and i1 %110, %111
  %113 = xor i1 %110, %111
  %114 = or i1 %112, %113
  %115 = or i1 %110, %111
  br i1 %114, label %116, label %196

; <label>:116:                                    ; preds = %101, %196
  %117 = landingpad { i8*, i32 }
          cleanup
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %36, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %37, align 4
  %120 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %120) #3
  %121 = load i32, i32* @x.56
  %122 = load i32, i32* @y.57
  %123 = sub i32 %121, 687500577
  %124 = sub i32 %123, 1
  %125 = add i32 %124, 687500577
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %196

; <label>:135:                                    ; preds = %116
  br label %136

; <label>:136:                                    ; preds = %135
  %137 = load i32, i32* @x.56
  %138 = load i32, i32* @y.57
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %201

; <label>:150:                                    ; preds = %136, %201
  %151 = load i8*, i8** %36, align 8
  %152 = load i32, i32* %37, align 4
  %153 = insertvalue { i8*, i32 } undef, i8* %151, 0
  %154 = insertvalue { i8*, i32 } %153, i32 %152, 1
  %155 = load i32, i32* @x.56
  %156 = load i32, i32* @y.57
  %157 = sub i32 %155, 1415426697
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 1415426697
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %201

; <label>:181:                                    ; preds = %150
  resume { i8*, i32 } %154

; <label>:182:                                    ; preds = %31, %4
  %183 = alloca %"class.std::vector"*, align 8
  %184 = alloca i64, align 8
  %185 = alloca %"class.std::vector.3"*, align 8
  %186 = alloca %"class.std::allocator.0"*, align 8
  %187 = alloca i8*
  %188 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %183, align 8
  store i64 %1, i64* %184, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %185, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %186, align 8
  %189 = load %"class.std::vector"*, %"class.std::vector"** %183, align 8
  %190 = bitcast %"class.std::vector"* %189 to %"struct.std::_Vector_base"*
  %191 = load i64, i64* %184, align 8
  %192 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %186, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %190, i64 %191, %"class.std::allocator.0"* dereferenceable(1) %192)
  %193 = load i64, i64* %184, align 8
  %194 = load %"class.std::vector.3"*, %"class.std::vector.3"** %185, align 8
  br label %31

; <label>:195:                                    ; preds = %85, %58
  br label %85

; <label>:196:                                    ; preds = %116, %101
  %197 = landingpad { i8*, i32 }
          cleanup
  %198 = extractvalue { i8*, i32 } %197, 0
  store i8* %198, i8** %36, align 8
  %199 = extractvalue { i8*, i32 } %197, 1
  store i32 %199, i32* %37, align 4
  %200 = bitcast %"class.std::vector"* %38 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %200) #3
  br label %116

; <label>:201:                                    ; preds = %150, %136
  %202 = load i8*, i8** %36, align 8
  %203 = load i32, i32* %37, align 4
  %204 = insertvalue { i8*, i32 } undef, i8* %202, 0
  %205 = insertvalue { i8*, i32 } %204, i32 %203, 1
  br label %150
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_impl12_M_swap_dataERS7_(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %1, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %6, %"class.std::vector.3"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %9, %"class.std::vector.3"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8) %12, %"class.std::vector.3"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.60
  %6 = load i32, i32* @y.61
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -168369436, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %135
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -168369436, label %18
    i32 420799498, label %26
    i32 -296384731, label %70
    i32 720503633, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %135

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 420799498, i32 720503633
  store i32 %25, i32* %14
  br label %135

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %29 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  %33 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.3"*, %"class.std::vector.3"** %35, align 8
  %37 = ptrtoint %"class.std::vector.3"* %32 to i64
  %38 = ptrtoint %"class.std::vector.3"* %36 to i64
  %39 = add i64 %37, 4655364694624880734
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, 4655364694624880734
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 24
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.60
  %45 = load i32, i32* @y.61
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -296384731, i32 720503633
  store i32 %69, i32* %14
  br label %135

; <label>:70:                                     ; preds = %15
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %76, i32 0, i32 1
  %78 = load %"class.std::vector.3"*, %"class.std::vector.3"** %77, align 8
  %79 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %83 = ptrtoint %"class.std::vector.3"* %78 to i64
  %84 = ptrtoint %"class.std::vector.3"* %82 to i64
  %85 = add i64 0, 8043804385592309306
  %86 = sub i64 %85, %83
  %87 = sub i64 %86, 8043804385592309306
  %88 = sub i64 0, %83
  %89 = add i64 %87, -3563351052775753044
  %90 = add i64 %89, %84
  %91 = sub i64 %90, -3563351052775753044
  %92 = add i64 %87, %84
  %93 = add i64 0, 5008877996406076283
  %94 = sub i64 %93, %83
  %95 = sub i64 %94, 5008877996406076283
  %96 = sub i64 0, %83
  %97 = sub i64 0, %84
  %98 = sub i64 %95, %97
  %99 = add i64 %95, %84
  %100 = sub i64 %83, -3031864294910086292
  %101 = sub i64 %100, %84
  %102 = add i64 %101, -3031864294910086292
  %103 = sub i64 %83, %84
  %104 = mul i64 %102, %84
  %105 = add i64 %83, -7976317577868147011
  %106 = sub i64 %105, %84
  %107 = sub i64 %106, -7976317577868147011
  %108 = sub i64 %83, %84
  %109 = mul i64 %107, %84
  %110 = shl i64 %83, %84
  %111 = shl i64 %83, %84
  %112 = sub i64 0, %84
  %113 = add i64 %83, %112
  %114 = sub i64 %83, %84
  %115 = mul i64 %113, %84
  %116 = add i64 %83, -852370094271331432
  %117 = sub i64 %116, %84
  %118 = sub i64 %117, -852370094271331432
  %119 = sub i64 %83, %84
  %120 = shl i64 %118, 24
  %121 = add i64 %118, 7564203602204511523
  %122 = sub i64 %121, 24
  %123 = sub i64 %122, 7564203602204511523
  %124 = sub i64 %118, 24
  %125 = mul i64 %123, 24
  %126 = shl i64 %118, 24
  %127 = add i64 %118, -1991045058540761294
  %128 = sub i64 %127, 24
  %129 = sub i64 %128, -1991045058540761294
  %130 = sub i64 %118, 24
  %131 = mul i64 %129, 24
  %132 = shl i64 %118, 24
  %133 = shl i64 %118, 24
  %134 = sdiv exact i64 %118, 24
  store i32 420799498, i32* %14
  br label %135

; <label>:135:                                    ; preds = %72, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEES6_EvT_SB_RKT0_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %4, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %10, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %7, i32 0, i32 0
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = call %"class.std::vector.3"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::vector.3"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %8, i32 0, i32 0
  %19 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %20 = call %"class.std::vector.3"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::vector.3"* %19)
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.3"* %15, %"class.std::vector.3"* %20, %"class.std::vector.3"* dereferenceable(24) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.13"* %2, %"class.std::vector.3"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  ret %"class.std::vector.3"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.66
  %6 = load i32, i32* @y.67
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 443025914, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 443025914, label %18
    i32 -1672690688, label %26
    i32 -350198017, label %50
    i32 394168628, label %52
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1672690688, i32 394168628
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %31, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.13"* %27, %"class.std::vector.3"** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %27, i32 0, i32 0
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %33, align 8
  store %"class.std::vector.3"* %34, %"class.std::vector.3"** %2
  %35 = load i32, i32* @x.66
  %36 = load i32, i32* @y.67
  %37 = sub i32 %35, -695273542
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -695273542
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -350198017, i32 394168628
  store i32 %49, i32* %14
  br label %61

; <label>:50:                                     ; preds = %15
  %51 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %51

; <label>:52:                                     ; preds = %15
  %53 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %54 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %54, align 8
  %55 = load %"class.std::vector"*, %"class.std::vector"** %54, align 8
  %56 = bitcast %"class.std::vector"* %55 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %57, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.13"* %53, %"class.std::vector.3"** dereferenceable(8) %58) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %53, i32 0, i32 0
  %60 = load %"class.std::vector.3"*, %"class.std::vector.3"** %59, align 8
  store i32 -1672690688, i32* %14
  br label %61

; <label>:61:                                     ; preds = %52, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %12 = call %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"* %9, i64 %10, %"class.std::vector.3"* dereferenceable(24) %11)
  ret %"class.std::vector.3"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector"*, %"class.std::vector.3"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.3"* %6, %"class.std::vector.3"* %10, %"class.std::allocator.0"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.70
  %20 = load i32, i32* @y.71
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %61

; <label>:32:                                     ; preds = %18, %61
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.70
  %36 = load i32, i32* @y.71
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %61

; <label>:60:                                     ; preds = %32
  unreachable

; <label>:61:                                     ; preds = %32, %18
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #11
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt6fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %8 = call %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.3"* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %11 = call %"class.std::vector.3"* @_ZSt10__fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_(%"class.std::vector.3"* %8, i64 %9, %"class.std::vector.3"* dereferenceable(24) %10)
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %10, %"class.std::allocator.0"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.74
  %20 = load i32, i32* @y.75
  %21 = add i32 %19, 1075387222
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1075387222
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %53

; <label>:33:                                     ; preds = %18, %53
  %34 = load i8*, i8** %7, align 8
  %35 = load i32, i32* %8, align 4
  %36 = insertvalue { i8*, i32 } undef, i8* %34, 0
  %37 = insertvalue { i8*, i32 } %36, i32 %35, 1
  %38 = load i32, i32* @x.74
  %39 = load i32, i32* @y.75
  %40 = sub i32 %38, 468467033
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 468467033
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %53

; <label>:52:                                     ; preds = %33
  resume { i8*, i32 } %37

; <label>:53:                                     ; preds = %33, %18
  %54 = load i8*, i8** %7, align 8
  %55 = load i32, i32* %8, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::vector.3"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.3"* %11, i64 %12, %"class.std::vector.3"* dereferenceable(24) %13, %"class.std::allocator.0"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.3"* %16, %"class.std::vector.3"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = ptrtoint %"class.std::vector.3"* %11 to i64
  %16 = ptrtoint %"class.std::vector.3"* %14 to i64
  %17 = sub i64 %15, -6644024109975581228
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -6644024109975581228
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.3"* %8, i64 %21)
          to label %22 unwind label %54

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.78
  %24 = load i32, i32* @y.79
  %25 = add i32 %23, 1285224633
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, 1285224633
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %61

; <label>:37:                                     ; preds = %22, %61
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %38) #3
  %39 = load i32, i32* @x.78
  %40 = load i32, i32* @y.79
  %41 = sub i32 %39, 2038039191
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 2038039191
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %61

; <label>:53:                                     ; preds = %37
  ret void

; <label>:54:                                     ; preds = %1
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  %58 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %58) #3
  br label %59

; <label>:59:                                     ; preds = %54
  %60 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %37, %22
  %62 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %62) #3
  br label %37
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5 to %"class.std::allocator.0"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  call void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"* %6, %"class.std::allocator.0"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.3"* %7, %"class.std::vector.3"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.3"*, %"class.std::vector.3"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.3"* %12, %"class.std::vector.3"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.3"* %19, %"class.std::vector.3"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEED2Ev(%"class.std::allocator.0"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEEC2ERKS4_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.86
  %6 = load i32, i32* @y.87
  %7 = add i32 %5, -1660618981
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1660618981
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 547087501, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 547087501, label %19
    i32 -509631881, label %39
    i32 303208051, label %73
    i32 -1981429463, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -509631881, i32 -1981429463
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.0"*, align 8
  %41 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %40, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %41, align 8
  %42 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %40, align 8
  %43 = bitcast %"class.std::allocator.0"* %42 to %"class.__gnu_cxx::new_allocator.1"*
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  %45 = bitcast %"class.std::allocator.0"* %44 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.1"* %43, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %45) #3
  %46 = load i32, i32* @x.86
  %47 = load i32, i32* @y.87
  %48 = sub i32 %46, -1245516105
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1245516105
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 303208051, i32 -1981429463
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.0"*, align 8
  %76 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %75, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %76, align 8
  %77 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %75, align 8
  %78 = bitcast %"class.std::allocator.0"* %77 to %"class.__gnu_cxx::new_allocator.1"*
  %79 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %76, align 8
  %80 = bitcast %"class.std::allocator.0"* %79 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.1"* %78, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %80) #3
  store i32 -509631881, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.88
  %6 = load i32, i32* @y.89
  %7 = add i32 %5, -581191037
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -581191037
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 957249888, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 957249888, label %19
    i32 2059386815, label %27
    i32 821768827, label %46
    i32 1450891844, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2059386815, i32 1450891844
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %28, align 8
  %31 = load i32, i32* @x.88
  %32 = load i32, i32* @y.89
  %33 = sub i32 %31, -458210451
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -458210451
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 821768827, i32 1450891844
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %48, align 8
  store i32 2059386815, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -349943548, i32* %9
  %10 = alloca %"class.std::vector.3"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -349943548, label %14
    i32 237475297, label %18
    i32 781160415, label %24
    i32 854210212, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 237475297, i32 781160415
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %20 to %"class.std::allocator.0"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.0"* dereferenceable(1) %21, i64 %22)
  store i32 854210212, i32* %9
  store %"class.std::vector.3"* %23, %"class.std::vector.3"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 854210212, i32* %9
  store %"class.std::vector.3"* null, %"class.std::vector.3"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10
  ret %"class.std::vector.3"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret %"class.std::vector.3"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -323125508, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -323125508, label %16
    i32 553635230, label %21
    i32 -1776834020, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 553635230, i32 -1776834020
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN8max_flow4EdgeESaIS1_EEED2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN8max_flow4EdgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %10, %"class.std::vector.3"** %4
  %11 = alloca i32
  store i32 1723909384, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1723909384, label %15
    i32 1852690869, label %19
    i32 -2043794940, label %25
    i32 1969617960, label %41
    i32 -565704082, label %68
    i32 741647812, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %17 = icmp ne %"class.std::vector.3"* %16, null
  %18 = select i1 %17, i32 1852690869, i32 -2043794940
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.0"*
  %23 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.0"* dereferenceable(1) %22, %"class.std::vector.3"* %23, i64 %24)
  store i32 -2043794940, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.102
  %27 = load i32, i32* @y.103
  %28 = sub i32 %26, -1350537589
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -1350537589
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1969617960, i32 741647812
  store i32 %40, i32* %11
  br label %70

; <label>:41:                                     ; preds = %12
  %42 = load i32, i32* @x.102
  %43 = load i32, i32* @y.103
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -565704082, i32 741647812
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 1969617960, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %41, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN8max_flow4EdgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.0"* dereferenceable(1), %"class.std::vector.3"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.1"* %8, %"class.std::vector.3"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN8max_flow4EdgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.1"*, %"class.std::vector.3"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.106
  %7 = load i32, i32* @y.107
  %8 = add i32 %6, -1000197945
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1000197945
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1742208927, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1742208927, label %20
    i32 315778485, label %40
    i32 -910117314, label %74
    i32 855321739, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 315778485, i32 855321739
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %41, align 8
  %45 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  %46 = bitcast %"class.std::vector.3"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.106
  %48 = load i32, i32* @y.107
  %49 = sub i32 %47, 776764048
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 776764048
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -910117314, i32 855321739
  store i32 %73, i32* %16
  br label %82

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %77 = alloca %"class.std::vector.3"*, align 8
  %78 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %76, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %76, align 8
  %80 = load %"class.std::vector.3"*, %"class.std::vector.3"** %77, align 8
  %81 = bitcast %"class.std::vector.3"* %80 to i8*
  call void @_ZdlPv(i8* %81) #3
  store i32 315778485, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvRT_S7_(%"class.std::vector.3"** dereferenceable(8), %"class.std::vector.3"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.std::vector.3"**, align 8
  %4 = alloca %"class.std::vector.3"**, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"** %0, %"class.std::vector.3"*** %3, align 8
  store %"class.std::vector.3"** %1, %"class.std::vector.3"*** %4, align 8
  %6 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %3, align 8
  %7 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN8max_flow4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %6) #3
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5, align 8
  %9 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  %10 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN8max_flow4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %9) #3
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %10, align 8
  %12 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %3, align 8
  store %"class.std::vector.3"* %11, %"class.std::vector.3"** %12, align 8
  %13 = call dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN8max_flow4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8) %5) #3
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %13, align 8
  %15 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.3"** @_ZSt4moveIRPSt6vectorIN8max_flow4EdgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.3"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"class.std::vector.3"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.110
  %6 = load i32, i32* @y.111
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1078085475, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1078085475, label %18
    i32 369553535, label %26
    i32 847314073, label %56
    i32 -1026476676, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 369553535, i32 -1026476676
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"**, align 8
  store %"class.std::vector.3"** %0, %"class.std::vector.3"*** %27, align 8
  %28 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %27, align 8
  store %"class.std::vector.3"** %28, %"class.std::vector.3"*** %2
  %29 = load i32, i32* @x.110
  %30 = load i32, i32* @y.111
  %31 = add i32 %29, 660851471
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 660851471
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 847314073, i32 -1026476676
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %2
  ret %"class.std::vector.3"** %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::vector.3"**, align 8
  store %"class.std::vector.3"** %0, %"class.std::vector.3"*** %59, align 8
  %60 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %59, align 8
  store i32 369553535, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %7, align 8
  %8 = alloca i32
  store i32 -93827020, i32* %8
  br label %9

; <label>:9:                                      ; preds = %3, %86
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 -93827020, label %12
    i32 381259078, label %40
    i32 -69211982, label %71
    i32 -366904946, label %74
    i32 1957555541, label %78
    i32 -590245661, label %81
    i32 -1957012415, label %82
  ]

; <label>:11:                                     ; preds = %9
  br label %86

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.112
  %14 = load i32, i32* @y.113
  %15 = add i32 %13, -1158006394
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -1158006394
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 381259078, i32 -1957012415
  store i32 %39, i32* %8
  br label %86

; <label>:40:                                     ; preds = %9
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %42 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %43 = icmp ne %"class.std::vector.3"* %41, %42
  store i1 %43, i1* %4
  %44 = load i32, i32* @x.112
  %45 = load i32, i32* @y.113
  %46 = add i32 %44, 203774249
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 203774249
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -69211982, i32 -1957012415
  store i32 %70, i32* %8
  br label %86

; <label>:71:                                     ; preds = %9
  %72 = load volatile i1, i1* %4
  %73 = select i1 %72, i32 -366904946, i32 -590245661
  store i32 %73, i32* %8
  br label %86

; <label>:74:                                     ; preds = %9
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %76 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %77 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEaSERKS3_(%"class.std::vector.3"* %76, %"class.std::vector.3"* dereferenceable(24) %75)
  store i32 1957555541, i32* %8
  br label %86

; <label>:78:                                     ; preds = %9
  %79 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %80 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %79, i32 1
  store %"class.std::vector.3"* %80, %"class.std::vector.3"** %5, align 8
  store i32 -93827020, i32* %8
  br label %86

; <label>:81:                                     ; preds = %9
  ret void

; <label>:82:                                     ; preds = %9
  %83 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %84 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %85 = icmp ne %"class.std::vector.3"* %83, %84
  store i32 381259078, i32* %8
  br label %86

; <label>:86:                                     ; preds = %82, %78, %74, %71, %40, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"class.std::vector.3"*) #0 comdat {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.114
  %6 = load i32, i32* @y.115
  %7 = add i32 %5, 1977849302
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1977849302
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1694217212, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1694217212, label %19
    i32 673148971, label %39
    i32 1525848986, label %63
    i32 700660776, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 673148971, i32 700660776
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %41 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %41, i32 0, i32 0
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %45, align 8
  %47 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_(%"class.std::vector.3"* %46)
  store %"class.std::vector.3"* %47, %"class.std::vector.3"** %2
  %48 = load i32, i32* @x.114
  %49 = load i32, i32* @y.115
  %50 = sub i32 %48, 1883480025
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1883480025
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1525848986, i32 700660776
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %66, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %67 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.13"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %67, i32 0, i32 0
  %72 = load %"class.std::vector.3"*, %"class.std::vector.3"** %71, align 8
  %73 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_(%"class.std::vector.3"* %72)
  store i32 673148971, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEaSERKS3_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*
  %4 = alloca %"class.std::vector.3"*
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.max_flow::Edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %6, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  store %"class.std::vector.3"* %16, %"class.std::vector.3"** %4
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %17, %"class.std::vector.3"** %3
  %18 = alloca i32
  store i32 -386651835, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %238
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -386651835, label %22
    i32 1970764956, label %27
    i32 1822673888, label %35
    i32 1071790227, label %102
    i32 -1777273904, label %108
    i32 1019109489, label %136
    i32 41400636, label %178
    i32 -453453794, label %194
    i32 1440000806, label %222
    i32 -1192796550, label %223
    i32 -653941050, label %235
    i32 -903978984, label %237
  ]

; <label>:21:                                     ; preds = %19
  br label %238

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %24 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %3
  %25 = icmp ne %"class.std::vector.3"* %24, %23
  %26 = select i1 %25, i32 1970764956, i32 -653941050
  store i32 %26, i32* %18
  br label %238

; <label>:27:                                     ; preds = %19
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %29 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %28) #3
  store i64 %29, i64* %7, align 8
  %30 = load i64, i64* %7, align 8
  %31 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %32 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8capacityEv(%"class.std::vector.3"* %31) #3
  %33 = icmp ugt i64 %30, %32
  %34 = select i1 %33, i32 1822673888, i32 1071790227
  store i32 %34, i32* %18
  br label %238

; <label>:35:                                     ; preds = %19
  %36 = load i64, i64* %7, align 8
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %38 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"* %37) #3
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.max_flow::Edge"* %38, %"struct.max_flow::Edge"** %39, align 8
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %41 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"* %40) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  store %"struct.max_flow::Edge"* %41, %"struct.max_flow::Edge"** %42, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %44 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %46 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %45, align 8
  %47 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %48 = call %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.3"* %47, i64 %36, %"struct.max_flow::Edge"* %44, %"struct.max_flow::Edge"* %46)
  store %"struct.max_flow::Edge"* %48, %"struct.max_flow::Edge"** %8, align 8
  %49 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %50 = bitcast %"class.std::vector.3"* %49 to %"struct.std::_Vector_base.4"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %52, align 8
  %54 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %55 = bitcast %"class.std::vector.3"* %54 to %"struct.std::_Vector_base.4"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %57, align 8
  %59 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %60 = bitcast %"class.std::vector.3"* %59 to %"struct.std::_Vector_base.4"*
  %61 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %60) #3
  call void @_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E(%"struct.max_flow::Edge"* %53, %"struct.max_flow::Edge"* %58, %"class.std::allocator.5"* dereferenceable(1) %61)
  %62 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %63 = bitcast %"class.std::vector.3"* %62 to %"struct.std::_Vector_base.4"*
  %64 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %65 = bitcast %"class.std::vector.3"* %64 to %"struct.std::_Vector_base.4"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %67, align 8
  %69 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %70 = bitcast %"class.std::vector.3"* %69 to %"struct.std::_Vector_base.4"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %71, i32 0, i32 2
  %73 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %72, align 8
  %74 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %75 = bitcast %"class.std::vector.3"* %74 to %"struct.std::_Vector_base.4"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %76, i32 0, i32 0
  %78 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %77, align 8
  %79 = ptrtoint %"struct.max_flow::Edge"* %73 to i64
  %80 = ptrtoint %"struct.max_flow::Edge"* %78 to i64
  %81 = sub i64 %79, 1050680862735710034
  %82 = sub i64 %81, %80
  %83 = add i64 %82, 1050680862735710034
  %84 = sub i64 %79, %80
  %85 = sdiv exact i64 %83, 12
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %63, %"struct.max_flow::Edge"* %68, i64 %85)
  %86 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %8, align 8
  %87 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %88 = bitcast %"class.std::vector.3"* %87 to %"struct.std::_Vector_base.4"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %89, i32 0, i32 0
  store %"struct.max_flow::Edge"* %86, %"struct.max_flow::Edge"** %90, align 8
  %91 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %92 = bitcast %"class.std::vector.3"* %91 to %"struct.std::_Vector_base.4"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %94, align 8
  %96 = load i64, i64* %7, align 8
  %97 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %95, i64 %96
  %98 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %99 = bitcast %"class.std::vector.3"* %98 to %"struct.std::_Vector_base.4"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %100, i32 0, i32 2
  store %"struct.max_flow::Edge"* %97, %"struct.max_flow::Edge"** %101, align 8
  store i32 -1192796550, i32* %18
  br label %238

; <label>:102:                                    ; preds = %19
  %103 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %104 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %103) #3
  %105 = load i64, i64* %7, align 8
  %106 = icmp uge i64 %104, %105
  %107 = select i1 %106, i32 -1777273904, i32 1019109489
  store i32 %107, i32* %18
  br label %238

; <label>:108:                                    ; preds = %19
  %109 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %110 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"* %109) #3
  %111 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %12, i32 0, i32 0
  store %"struct.max_flow::Edge"* %110, %"struct.max_flow::Edge"** %111, align 8
  %112 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %113 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"* %112) #3
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %13, i32 0, i32 0
  store %"struct.max_flow::Edge"* %113, %"struct.max_flow::Edge"** %114, align 8
  %115 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %116 = call %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"* %115) #3
  %117 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  store %"struct.max_flow::Edge"* %116, %"struct.max_flow::Edge"** %117, align 8
  %118 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %12, i32 0, i32 0
  %119 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %118, align 8
  %120 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %13, i32 0, i32 0
  %121 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %120, align 8
  %122 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  %123 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %122, align 8
  %124 = call %"struct.max_flow::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.max_flow::Edge"* %119, %"struct.max_flow::Edge"* %121, %"struct.max_flow::Edge"* %123)
  %125 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %11, i32 0, i32 0
  store %"struct.max_flow::Edge"* %124, %"struct.max_flow::Edge"** %125, align 8
  %126 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %127 = call %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"* %126) #3
  %128 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %15, i32 0, i32 0
  store %"struct.max_flow::Edge"* %127, %"struct.max_flow::Edge"** %128, align 8
  %129 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %130 = bitcast %"class.std::vector.3"* %129 to %"struct.std::_Vector_base.4"*
  %131 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %130) #3
  %132 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %11, i32 0, i32 0
  %133 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %132, align 8
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %15, i32 0, i32 0
  %135 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %134, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.max_flow::Edge"* %133, %"struct.max_flow::Edge"* %135, %"class.std::allocator.5"* dereferenceable(1) %131)
  store i32 41400636, i32* %18
  br label %238

; <label>:136:                                    ; preds = %19
  %137 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %138 = bitcast %"class.std::vector.3"* %137 to %"struct.std::_Vector_base.4"*
  %139 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %138, i32 0, i32 0
  %140 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %139, i32 0, i32 0
  %141 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %140, align 8
  %142 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %143 = bitcast %"class.std::vector.3"* %142 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %144, i32 0, i32 0
  %146 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %145, align 8
  %147 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %148 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %147) #3
  %149 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %146, i64 %148
  %150 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %151 = bitcast %"class.std::vector.3"* %150 to %"struct.std::_Vector_base.4"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %152, i32 0, i32 0
  %154 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %153, align 8
  %155 = call %"struct.max_flow::Edge"* @_ZSt4copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_(%"struct.max_flow::Edge"* %141, %"struct.max_flow::Edge"* %149, %"struct.max_flow::Edge"* %154)
  %156 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %157 = bitcast %"class.std::vector.3"* %156 to %"struct.std::_Vector_base.4"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %158, i32 0, i32 0
  %160 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %159, align 8
  %161 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %162 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %161) #3
  %163 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %160, i64 %162
  %164 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %165 = bitcast %"class.std::vector.3"* %164 to %"struct.std::_Vector_base.4"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %166, i32 0, i32 1
  %168 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %167, align 8
  %169 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %170 = bitcast %"class.std::vector.3"* %169 to %"struct.std::_Vector_base.4"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %171, i32 0, i32 1
  %173 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %172, align 8
  %174 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %175 = bitcast %"class.std::vector.3"* %174 to %"struct.std::_Vector_base.4"*
  %176 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %175) #3
  %177 = call %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aIPN8max_flow4EdgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.max_flow::Edge"* %163, %"struct.max_flow::Edge"* %168, %"struct.max_flow::Edge"* %173, %"class.std::allocator.5"* dereferenceable(1) %176)
  store i32 41400636, i32* %18
  br label %238

; <label>:178:                                    ; preds = %19
  %179 = load i32, i32* @x.116
  %180 = load i32, i32* @y.117
  %181 = sub i32 %179, 681649813
  %182 = sub i32 %181, 1
  %183 = add i32 %182, 681649813
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  %193 = select i1 %191, i32 -453453794, i32 -903978984
  store i32 %193, i32* %18
  br label %238

; <label>:194:                                    ; preds = %19
  %195 = load i32, i32* @x.116
  %196 = load i32, i32* @y.117
  %197 = add i32 %195, -168702358
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, -168702358
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = xor i1 %203, true
  %206 = xor i1 %204, true
  %207 = xor i1 false, true
  %208 = and i1 %205, false
  %209 = and i1 %203, %207
  %210 = and i1 %206, false
  %211 = and i1 %204, %207
  %212 = or i1 %208, %209
  %213 = or i1 %210, %211
  %214 = xor i1 %212, %213
  %215 = or i1 %205, %206
  %216 = xor i1 %215, true
  %217 = or i1 false, %207
  %218 = and i1 %216, %217
  %219 = or i1 %214, %218
  %220 = or i1 %203, %204
  %221 = select i1 %219, i32 1440000806, i32 -903978984
  store i32 %221, i32* %18
  br label %238

; <label>:222:                                    ; preds = %19
  store i32 -1192796550, i32* %18
  br label %238

; <label>:223:                                    ; preds = %19
  %224 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %225 = bitcast %"class.std::vector.3"* %224 to %"struct.std::_Vector_base.4"*
  %226 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %226, i32 0, i32 0
  %228 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %227, align 8
  %229 = load i64, i64* %7, align 8
  %230 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %228, i64 %229
  %231 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  %232 = bitcast %"class.std::vector.3"* %231 to %"struct.std::_Vector_base.4"*
  %233 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %233, i32 0, i32 1
  store %"struct.max_flow::Edge"* %230, %"struct.max_flow::Edge"** %234, align 8
  store i32 -653941050, i32* %18
  br label %238

; <label>:235:                                    ; preds = %19
  %236 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %4
  ret %"class.std::vector.3"* %236

; <label>:237:                                    ; preds = %19
  store i32 -453453794, i32* %18
  br label %238

; <label>:238:                                    ; preds = %237, %223, %222, %194, %178, %136, %108, %102, %35, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.118
  %6 = load i32, i32* @y.119
  %7 = add i32 %5, 373653376
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 373653376
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1316068631, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %107
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1316068631, label %19
    i32 583299245, label %27
    i32 -1621301716, label %71
    i32 -1945495044, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %107

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 583299245, i32 -1945495044
  store i32 %26, i32* %15
  br label %107

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %28, align 8
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %32, align 8
  %34 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %36, align 8
  %38 = ptrtoint %"struct.max_flow::Edge"* %33 to i64
  %39 = ptrtoint %"struct.max_flow::Edge"* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 12
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.118
  %45 = load i32, i32* @y.119
  %46 = add i32 %44, 1829271357
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1829271357
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1621301716, i32 -1945495044
  store i32 %70, i32* %15
  br label %107

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %74, align 8
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %76 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %78, align 8
  %80 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %82, align 8
  %84 = ptrtoint %"struct.max_flow::Edge"* %79 to i64
  %85 = ptrtoint %"struct.max_flow::Edge"* %83 to i64
  %86 = sub i64 0, %84
  %87 = add i64 0, %86
  %88 = sub i64 0, %84
  %89 = sub i64 %87, 5753763823658435872
  %90 = add i64 %89, %85
  %91 = add i64 %90, 5753763823658435872
  %92 = add i64 %87, %85
  %93 = sub i64 0, %85
  %94 = add i64 %84, %93
  %95 = sub i64 %84, %85
  %96 = mul i64 %94, %85
  %97 = sub i64 %84, 33701879856550417
  %98 = sub i64 %97, %85
  %99 = add i64 %98, 33701879856550417
  %100 = sub i64 %84, %85
  %101 = sub i64 0, 12
  %102 = add i64 %99, %101
  %103 = sub i64 %99, 12
  %104 = mul i64 %102, 12
  %105 = shl i64 %99, 12
  %106 = sdiv exact i64 %99, 12
  store i32 583299245, i32* %15
  br label %107

; <label>:107:                                    ; preds = %73, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8capacityEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %10, align 8
  %12 = ptrtoint %"struct.max_flow::Edge"* %7 to i64
  %13 = ptrtoint %"struct.max_flow::Edge"* %11 to i64
  %14 = add i64 %12, 1761866765114377186
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 1761866765114377186
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 12
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.3"*, i64, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.max_flow::Edge"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.max_flow::Edge"* %3, %"struct.max_flow::Edge"** %15, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %17 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"struct.max_flow::Edge"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %17, i64 %18)
  store %"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %9, align 8
  %25 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %26 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %28 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %11, i32 0, i32 0
  %30 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %31 = invoke %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.max_flow::Edge"* %28, %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"* %24, %"class.std::allocator.5"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %9, align 8
  ret %"struct.max_flow::Edge"* %33

; <label>:34:                                     ; preds = %4
  %35 = load i32, i32* @x.122
  %36 = load i32, i32* @y.123
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %194

; <label>:48:                                     ; preds = %34, %194
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %12, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %13, align 4
  %52 = load i32, i32* @x.122
  %53 = load i32, i32* @y.123
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %194

; <label>:77:                                     ; preds = %48
  br label %78

; <label>:78:                                     ; preds = %77
  %79 = load i32, i32* @x.122
  %80 = load i32, i32* @y.123
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %198

; <label>:104:                                    ; preds = %78, %198
  %105 = load i8*, i8** %12, align 8
  %106 = call i8* @__cxa_begin_catch(i8* %105) #3
  %107 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %108 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %9, align 8
  %109 = load i64, i64* %8, align 8
  %110 = load i32, i32* @x.122
  %111 = load i32, i32* @y.123
  %112 = add i32 %110, 770039889
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 770039889
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 true, true
  %123 = and i1 %120, true
  %124 = and i1 %118, %122
  %125 = and i1 %121, true
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 true, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %198

; <label>:136:                                    ; preds = %104
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %107, %"struct.max_flow::Edge"* %108, i64 %109)
          to label %137 unwind label %138

; <label>:137:                                    ; preds = %136
  invoke void @__cxa_rethrow() #12
          to label %193 unwind label %138

; <label>:138:                                    ; preds = %137, %136
  %139 = landingpad { i8*, i32 }
          cleanup
  %140 = extractvalue { i8*, i32 } %139, 0
  store i8* %140, i8** %12, align 8
  %141 = extractvalue { i8*, i32 } %139, 1
  store i32 %141, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %142 unwind label %149

; <label>:142:                                    ; preds = %138
  br label %144
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:144:                                    ; preds = %142
  %145 = load i8*, i8** %12, align 8
  %146 = load i32, i32* %13, align 4
  %147 = insertvalue { i8*, i32 } undef, i8* %145, 0
  %148 = insertvalue { i8*, i32 } %147, i32 %146, 1
  resume { i8*, i32 } %148

; <label>:149:                                    ; preds = %138
  %150 = load i32, i32* @x.122
  %151 = load i32, i32* @y.123
  %152 = sub i32 %150, -654449477
  %153 = sub i32 %152, 1
  %154 = add i32 %153, -654449477
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  br i1 %162, label %164, label %204

; <label>:164:                                    ; preds = %149, %204
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #11
  %167 = load i32, i32* @x.122
  %168 = load i32, i32* @y.123
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  br i1 %190, label %192, label %204

; <label>:192:                                    ; preds = %164
  unreachable

; <label>:193:                                    ; preds = %137
  unreachable

; <label>:194:                                    ; preds = %48, %34
  %195 = landingpad { i8*, i32 }
          catch i8* null
  %196 = extractvalue { i8*, i32 } %195, 0
  store i8* %196, i8** %12, align 8
  %197 = extractvalue { i8*, i32 } %195, 1
  store i32 %197, i32* %13, align 4
  br label %48

; <label>:198:                                    ; preds = %104, %78
  %199 = load i8*, i8** %12, align 8
  %200 = call i8* @__cxa_begin_catch(i8* %199) #3
  %201 = bitcast %"class.std::vector.3"* %16 to %"struct.std::_Vector_base.4"*
  %202 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %9, align 8
  %203 = load i64, i64* %8, align 8
  br label %104

; <label>:204:                                    ; preds = %164, %149
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #11
  br label %164
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.124
  %6 = load i32, i32* @y.125
  %7 = add i32 %5, 1890746697
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1890746697
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1483422200, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1483422200, label %19
    i32 -1328963199, label %27
    i32 -973187773, label %53
    i32 1646587518, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1328963199, i32 1646587518
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  %31 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %32 = bitcast %"class.std::vector.3"* %31 to %"struct.std::_Vector_base.4"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %34, align 8
  store %"struct.max_flow::Edge"* %35, %"struct.max_flow::Edge"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %28, %"struct.max_flow::Edge"** dereferenceable(8) %30) #3
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  %37 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %36, align 8
  store %"struct.max_flow::Edge"* %37, %"struct.max_flow::Edge"** %2
  %38 = load i32, i32* @x.124
  %39 = load i32, i32* @y.125
  %40 = add i32 %38, 1426525166
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1426525166
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -973187773, i32 1646587518
  store i32 %52, i32* %15
  br label %66

; <label>:53:                                     ; preds = %16
  %54 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %54

; <label>:55:                                     ; preds = %16
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %57 = alloca %"class.std::vector.3"*, align 8
  %58 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %57, align 8
  %59 = load %"class.std::vector.3"*, %"class.std::vector.3"** %57, align 8
  %60 = bitcast %"class.std::vector.3"* %59 to %"struct.std::_Vector_base.4"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %62, align 8
  store %"struct.max_flow::Edge"* %63, %"struct.max_flow::Edge"** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %56, %"struct.max_flow::Edge"** dereferenceable(8) %58) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %56, i32 0, i32 0
  %65 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %64, align 8
  store i32 -1328963199, i32* %15
  br label %66

; <label>:66:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.126
  %6 = load i32, i32* @y.127
  %7 = sub i32 %5, 1685094294
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1685094294
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -485877873, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -485877873, label %19
    i32 -1328131432, label %39
    i32 1931965099, label %76
    i32 1012539079, label %78
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1328131432, i32 1012539079
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %46, align 8
  store %"struct.max_flow::Edge"* %47, %"struct.max_flow::Edge"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %40, %"struct.max_flow::Edge"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %40, i32 0, i32 0
  %49 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %48, align 8
  store %"struct.max_flow::Edge"* %49, %"struct.max_flow::Edge"** %2
  %50 = load i32, i32* @x.126
  %51 = load i32, i32* @y.127
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1931965099, i32 1012539079
  store i32 %75, i32* %15
  br label %89

; <label>:76:                                     ; preds = %16
  %77 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %77

; <label>:78:                                     ; preds = %16
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %80 = alloca %"class.std::vector.3"*, align 8
  %81 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %80, align 8
  %82 = load %"class.std::vector.3"*, %"class.std::vector.3"** %80, align 8
  %83 = bitcast %"class.std::vector.3"* %82 to %"struct.std::_Vector_base.4"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %84, i32 0, i32 1
  %86 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %85, align 8
  store %"struct.max_flow::Edge"* %86, %"struct.max_flow::Edge"** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %79, %"struct.max_flow::Edge"** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %79, i32 0, i32 0
  %88 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %87, align 8
  store i32 -1328131432, i32* %15
  br label %89

; <label>:89:                                     ; preds = %78, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  call void @_ZSt8_DestroyIPN8max_flow4EdgeEEvT_S3_(%"struct.max_flow::Edge"* %7, %"struct.max_flow::Edge"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"*, %"struct.max_flow::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca i64*
  %7 = alloca %"struct.max_flow::Edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.132
  %11 = load i32, i32* @y.133
  %12 = sub i32 %10, 376527359
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 376527359
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1285062255, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %88
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1285062255, label %24
    i32 -1408990882, label %44
    i32 1154760903, label %69
    i32 -694016360, label %72
    i32 -1384336030, label %80
    i32 817197061, label %81
  ]

; <label>:23:                                     ; preds = %21
  br label %88

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1408990882, i32 817197061
  store i32 %43, i32* %20
  br label %88

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.4"*, align 8
  %46 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"** %46, %"struct.max_flow::Edge"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %45, align 8
  %48 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %45, align 8
  store %"struct.std::_Vector_base.4"* %50, %"struct.std::_Vector_base.4"** %5
  %51 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  %52 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %51, align 8
  %53 = icmp ne %"struct.max_flow::Edge"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.132
  %55 = load i32, i32* @y.133
  %56 = add i32 %54, 1227685197
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 1227685197
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1154760903, i32 817197061
  store i32 %68, i32* %20
  br label %88

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 -694016360, i32 -1384336030
  store i32 %71, i32* %20
  br label %88

; <label>:72:                                     ; preds = %21
  %73 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %74 to %"class.std::allocator.5"*
  %76 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  %77 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %76, align 8
  %78 = load volatile i64*, i64** %6
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.5"* dereferenceable(1) %75, %"struct.max_flow::Edge"* %77, i64 %79)
  store i32 -1384336030, i32* %20
  br label %88

; <label>:80:                                     ; preds = %21
  ret void

; <label>:81:                                     ; preds = %21
  %82 = alloca %"struct.std::_Vector_base.4"*, align 8
  %83 = alloca %"struct.max_flow::Edge"*, align 8
  %84 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %82, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %83, align 8
  store i64 %2, i64* %84, align 8
  %85 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %82, align 8
  %86 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %83, align 8
  %87 = icmp ne %"struct.max_flow::Edge"* %86, null
  store i32 -1408990882, i32* %20
  br label %88

; <label>:88:                                     ; preds = %81, %72, %69, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %10, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %16 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %18 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.max_flow::Edge"* %16, %"struct.max_flow::Edge"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.max_flow::Edge"* %20, %"struct.max_flow::Edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %11, i32 0, i32 0
  %25 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %24, align 8
  %26 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  store %"struct.max_flow::Edge"* %26, %"struct.max_flow::Edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %31 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %12, i32 0, i32 0
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %34, align 8
  %36 = call %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.max_flow::Edge"* %31, %"struct.max_flow::Edge"* %33, %"struct.max_flow::Edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %36, %"struct.max_flow::Edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %39 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %38, align 8
  ret %"struct.max_flow::Edge"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %2, %"struct.max_flow::Edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %8, align 8
  ret %"struct.max_flow::Edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.140
  %6 = load i32, i32* @y.141
  %7 = sub i32 %5, 1979907924
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1979907924
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -732958322, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -732958322, label %19
    i32 1960817306, label %27
    i32 -957318939, label %51
    i32 1629020997, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1960817306, i32 1629020997
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  %30 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %31 = bitcast %"class.std::vector.3"* %30 to %"struct.std::_Vector_base.4"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %32, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %28, %"struct.max_flow::Edge"** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %34, align 8
  store %"struct.max_flow::Edge"* %35, %"struct.max_flow::Edge"** %2
  %36 = load i32, i32* @x.140
  %37 = load i32, i32* @y.141
  %38 = sub i32 %36, -1768265248
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1768265248
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -957318939, i32 1629020997
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %55 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %55, align 8
  %56 = load %"class.std::vector.3"*, %"class.std::vector.3"** %55, align 8
  %57 = bitcast %"class.std::vector.3"* %56 to %"struct.std::_Vector_base.4"*
  %58 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %58, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %54, %"struct.max_flow::Edge"** dereferenceable(8) %59) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %54, i32 0, i32 0
  %61 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %60, align 8
  store i32 1960817306, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt4copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %8 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIPN8max_flow4EdgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %7)
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIPN8max_flow4EdgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %9)
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %12 = call %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"* %10, %"struct.max_flow::Edge"* %11)
  ret %"struct.max_flow::Edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aIPN8max_flow4EdgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %6, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %12 = call %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_(%"struct.max_flow::Edge"* %9, %"struct.max_flow::Edge"* %10, %"struct.max_flow::Edge"* %11)
  ret %"struct.max_flow::Edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.4"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.146
  %9 = load i32, i32* @y.147
  %10 = add i32 %8, 675754466
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 675754466
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -341061942, i32* %18
  %19 = alloca %"struct.max_flow::Edge"*
  br label %20

; <label>:20:                                     ; preds = %2, %85
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -341061942, label %23
    i32 -1265836856, label %31
    i32 514423428, label %66
    i32 -2026200890, label %69
    i32 -1224816156, label %76
    i32 -485119569, label %77
    i32 1209851175, label %79
  ]

; <label>:22:                                     ; preds = %20
  br label %85

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1265836856, i32 1209851175
  store i32 %30, i32* %18
  br label %85

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.4"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %32, align 8
  store %"struct.std::_Vector_base.4"* %35, %"struct.std::_Vector_base.4"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.146
  %40 = load i32, i32* @y.147
  %41 = sub i32 %39, 1691498754
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1691498754
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 514423428, i32 1209851175
  store i32 %65, i32* %18
  br label %85

; <label>:66:                                     ; preds = %20
  %67 = load volatile i1, i1* %3
  %68 = select i1 %67, i32 -2026200890, i32 -1224816156
  store i32 %68, i32* %18
  br label %85

; <label>:69:                                     ; preds = %20
  %70 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4
  %71 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %71 to %"class.std::allocator.5"*
  %73 = load volatile i64*, i64** %5
  %74 = load i64, i64* %73, align 8
  %75 = call %"struct.max_flow::Edge"* @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8allocateERS2_m(%"class.std::allocator.5"* dereferenceable(1) %72, i64 %74)
  store i32 -485119569, i32* %18
  store %"struct.max_flow::Edge"* %75, %"struct.max_flow::Edge"** %19
  br label %85

; <label>:76:                                     ; preds = %20
  store i32 -485119569, i32* %18
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %19
  br label %85

; <label>:77:                                     ; preds = %20
  %78 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %19
  ret %"struct.max_flow::Edge"* %78

; <label>:79:                                     ; preds = %20
  %80 = alloca %"struct.std::_Vector_base.4"*, align 8
  %81 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %80, align 8
  store i64 %1, i64* %81, align 8
  %82 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %80, align 8
  %83 = load i64, i64* %81, align 8
  %84 = icmp ne i64 %83, 0
  store i32 -1265836856, i32* %18
  br label %85

; <label>:85:                                     ; preds = %79, %76, %69, %66, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %12, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %21 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %20, align 8
  %22 = call %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"* %21, %"struct.max_flow::Edge"* %17)
  ret %"struct.max_flow::Edge"* %22
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8allocateERS2_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.max_flow::Edge"* @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"struct.max_flow::Edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 667691167, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 667691167, label %16
    i32 -782430219, label %21
    i32 -513352961, label %37
    i32 84577289, label %65
    i32 770421049, label %66
    i32 492355558, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -782430219, i32 770421049
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.152
  %23 = load i32, i32* @y.153
  %24 = add i32 %22, 227777317
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 227777317
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -513352961, i32 492355558
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.152
  %39 = load i32, i32* @y.153
  %40 = sub i32 %38, 450983130
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 450983130
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 84577289, i32 492355558
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 12
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to %"struct.max_flow::Edge"*
  ret %"struct.max_flow::Edge"* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -513352961, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.154
  %5 = load i32, i32* @y.155
  %6 = sub i32 %4, 1863373007
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1863373007
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 261159309, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 261159309, label %18
    i32 -1946419438, label %26
    i32 -1055668221, label %56
    i32 1126684483, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1946419438, i32 1126684483
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %29 = load i32, i32* @x.154
  %30 = load i32, i32* @y.155
  %31 = sub i32 %29, -1579745566
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1579745566
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1055668221, i32 1126684483
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 1537228672809129301

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 -1946419438, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.156
  %8 = load i32, i32* @y.157
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1298714488, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1298714488, label %20
    i32 -737212396, label %40
    i32 -2146814724, label %74
    i32 889673791, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -737212396, i32 889673791
  store i32 %39, i32* %16
  br label %95

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %43 = alloca %"struct.max_flow::Edge"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %41, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %42, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %48, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %46 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %45, i32 0, i32 0
  %55 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %54, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %46, i32 0, i32 0
  %57 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %56, align 8
  %58 = call %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.max_flow::Edge"* %55, %"struct.max_flow::Edge"* %57, %"struct.max_flow::Edge"* %53)
  store %"struct.max_flow::Edge"* %58, %"struct.max_flow::Edge"** %4
  %59 = load i32, i32* @x.156
  %60 = load i32, i32* @y.157
  %61 = sub i32 %59, 1605989355
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1605989355
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -2146814724, i32 889673791
  store i32 %73, i32* %16
  br label %95

; <label>:74:                                     ; preds = %17
  %75 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  ret %"struct.max_flow::Edge"* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %79 = alloca %"struct.max_flow::Edge"*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %77, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %78, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %84, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %81 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %82 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %79, align 8
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %81, i32 0, i32 0
  %91 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %90, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %82, i32 0, i32 0
  %93 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %92, align 8
  %94 = call %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.max_flow::Edge"* %91, %"struct.max_flow::Edge"* %93, %"struct.max_flow::Edge"* %89)
  store i32 -737212396, i32* %16
  br label %95

; <label>:95:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %10, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %17 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = call %"struct.max_flow::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.max_flow::Edge"* %17, %"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"* %15)
  ret %"struct.max_flow::Edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %12, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %16 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %15, align 8
  %17 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  store %"struct.max_flow::Edge"* %17, %"struct.max_flow::Edge"** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %22 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %21, align 8
  %23 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.max_flow::Edge"* %23, %"struct.max_flow::Edge"** %24, align 8
  %25 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %27 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %29 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %28, align 8
  %30 = call %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.max_flow::Edge"* %27, %"struct.max_flow::Edge"* %29, %"struct.max_flow::Edge"* %25)
  ret %"struct.max_flow::Edge"* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.162
  %8 = load i32, i32* @y.163
  %9 = sub i32 %7, -624639339
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -624639339
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 978509773, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %112
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 978509773, label %21
    i32 832373816, label %41
    i32 -962661692, label %89
    i32 -1749812756, label %91
  ]

; <label>:20:                                     ; preds = %18
  br label %112

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 832373816, i32 -1749812756
  store i32 %40, i32* %17
  br label %112

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %44 = alloca %"struct.max_flow::Edge"*, align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %42, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %47, align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %43, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %48, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %44, align 8
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %45 to i8*
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %45, i32 0, i32 0
  %52 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %51, align 8
  %53 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %52)
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %46 to i8*
  %55 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %54, i8* %55, i64 8, i32 8, i1 false)
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %46, i32 0, i32 0
  %57 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %56, align 8
  %58 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %57)
  %59 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %44, align 8
  %60 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %59)
  %61 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPKN8max_flow4EdgeEPS1_ET1_T0_S6_S5_(%"struct.max_flow::Edge"* %53, %"struct.max_flow::Edge"* %58, %"struct.max_flow::Edge"* %60)
  store %"struct.max_flow::Edge"* %61, %"struct.max_flow::Edge"** %4
  %62 = load i32, i32* @x.162
  %63 = load i32, i32* @y.163
  %64 = sub i32 %62, 373256522
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 373256522
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -962661692, i32 -1749812756
  store i32 %88, i32* %17
  br label %112

; <label>:89:                                     ; preds = %18
  %90 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  ret %"struct.max_flow::Edge"* %90

; <label>:91:                                     ; preds = %18
  %92 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %93 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %94 = alloca %"struct.max_flow::Edge"*, align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %96 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %92, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %97, align 8
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %93, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %98, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %94, align 8
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %95 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %92 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %95, i32 0, i32 0
  %102 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %101, align 8
  %103 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %102)
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %96 to i8*
  %105 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %104, i8* %105, i64 8, i32 8, i1 false)
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %96, i32 0, i32 0
  %107 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %106, align 8
  %108 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %107)
  %109 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %94, align 8
  %110 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %109)
  %111 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPKN8max_flow4EdgeEPS1_ET1_T0_S6_S5_(%"struct.max_flow::Edge"* %103, %"struct.max_flow::Edge"* %108, %"struct.max_flow::Edge"* %110)
  store i32 832373816, i32* %17
  br label %112

; <label>:112:                                    ; preds = %91, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.164
  %6 = load i32, i32* @y.165
  %7 = add i32 %5, -81395789
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -81395789
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -473116979, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -473116979, label %19
    i32 275836815, label %27
    i32 -1126090027, label %54
    i32 -596672555, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 275836815, i32 -596672555
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %29, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %30, i32 0, i32 0
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %34, align 8
  %36 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.max_flow::Edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  store %"struct.max_flow::Edge"* %36, %"struct.max_flow::Edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  %39 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %38, align 8
  store %"struct.max_flow::Edge"* %39, %"struct.max_flow::Edge"** %2
  %40 = load i32, i32* @x.164
  %41 = load i32, i32* @y.165
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1126090027, i32 -596672555
  store i32 %53, i32* %15
  br label %69

; <label>:54:                                     ; preds = %16
  %55 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %55

; <label>:56:                                     ; preds = %16
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %58, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %60, align 8
  %61 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %59 to i8*
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %61, i8* %62, i64 8, i32 8, i1 false)
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %59, i32 0, i32 0
  %64 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %63, align 8
  %65 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.max_flow::Edge"* %64)
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %57, i32 0, i32 0
  store %"struct.max_flow::Edge"* %65, %"struct.max_flow::Edge"** %66, align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %57, i32 0, i32 0
  %68 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %67, align 8
  store i32 275836815, i32* %15
  br label %69

; <label>:69:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPKN8max_flow4EdgeEPS1_ET1_T0_S6_S5_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %11 = call %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"* %9, %"struct.max_flow::Edge"* %10)
  ret %"struct.max_flow::Edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %9 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.max_flow::Edge"* %8)
  ret %"struct.max_flow::Edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.170
  %6 = load i32, i32* @y.171
  %7 = sub i32 %5, 510453234
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 510453234
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 499286353, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 499286353, label %19
    i32 1600717181, label %39
    i32 -1803896865, label %57
    i32 745640249, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1600717181, i32 745640249
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %40, align 8
  %41 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %40, align 8
  %42 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_(%"struct.max_flow::Edge"* %41)
  store %"struct.max_flow::Edge"* %42, %"struct.max_flow::Edge"** %2
  %43 = load i32, i32* @x.170
  %44 = load i32, i32* @y.171
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1803896865, i32 745640249
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %60, align 8
  %61 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %60, align 8
  %62 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_(%"struct.max_flow::Edge"* %61)
  store i32 1600717181, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %"struct.max_flow::Edge"**
  %7 = alloca %"struct.max_flow::Edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.172
  %11 = load i32, i32* @y.173
  %12 = add i32 %10, 261398035
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 261398035
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -75407041, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %252
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -75407041, label %24
    i32 -558820067, label %44
    i32 -1970089156, label %80
    i32 -143675465, label %83
    i32 542484136, label %111
    i32 35331161, label %148
    i32 -1336990841, label %149
    i32 -1575917551, label %155
    i32 713813614, label %226
  ]

; <label>:23:                                     ; preds = %21
  br label %252

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -558820067, i32 -1575917551
  store i32 %43, i32* %20
  br label %252

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"** %45, %"struct.max_flow::Edge"*** %7
  %46 = alloca %"struct.max_flow::Edge"*, align 8
  %47 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"** %47, %"struct.max_flow::Edge"*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %49, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %46, align 8
  %50 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %6
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %50, align 8
  %51 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %46, align 8
  %52 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  %53 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %52, align 8
  %54 = ptrtoint %"struct.max_flow::Edge"* %51 to i64
  %55 = ptrtoint %"struct.max_flow::Edge"* %53 to i64
  %56 = add i64 %54, -8356195257991037180
  %57 = sub i64 %56, %55
  %58 = sub i64 %57, -8356195257991037180
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 12
  %61 = load volatile i64*, i64** %5
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %5
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %4
  %65 = load i32, i32* @x.172
  %66 = load i32, i32* @y.173
  %67 = add i32 %65, 932870728
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 932870728
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -1970089156, i32 -1575917551
  store i32 %79, i32* %20
  br label %252

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -143675465, i32 -1336990841
  store i32 %82, i32* %20
  br label %252

; <label>:83:                                     ; preds = %21
  %84 = load i32, i32* @x.172
  %85 = load i32, i32* @y.173
  %86 = add i32 %84, 514642079
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 514642079
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 542484136, i32 713813614
  store i32 %110, i32* %20
  br label %252

; <label>:111:                                    ; preds = %21
  %112 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %6
  %113 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %112, align 8
  %114 = bitcast %"struct.max_flow::Edge"* %113 to i8*
  %115 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  %116 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %115, align 8
  %117 = bitcast %"struct.max_flow::Edge"* %116 to i8*
  %118 = load volatile i64*, i64** %5
  %119 = load i64, i64* %118, align 8
  %120 = mul i64 12, %119
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %114, i8* %117, i64 %120, i32 4, i1 false)
  %121 = load i32, i32* @x.172
  %122 = load i32, i32* @y.173
  %123 = add i32 %121, -1604792625
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -1604792625
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  %147 = select i1 %145, i32 35331161, i32 713813614
  store i32 %147, i32* %20
  br label %252

; <label>:148:                                    ; preds = %21
  store i32 -1336990841, i32* %20
  br label %252

; <label>:149:                                    ; preds = %21
  %150 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %6
  %151 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %150, align 8
  %152 = load volatile i64*, i64** %5
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %151, i64 %153
  ret %"struct.max_flow::Edge"* %154

; <label>:155:                                    ; preds = %21
  %156 = alloca %"struct.max_flow::Edge"*, align 8
  %157 = alloca %"struct.max_flow::Edge"*, align 8
  %158 = alloca %"struct.max_flow::Edge"*, align 8
  %159 = alloca i64, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %156, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %157, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %158, align 8
  %160 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %157, align 8
  %161 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %156, align 8
  %162 = ptrtoint %"struct.max_flow::Edge"* %160 to i64
  %163 = ptrtoint %"struct.max_flow::Edge"* %161 to i64
  %164 = shl i64 %162, %163
  %165 = sub i64 0, %163
  %166 = add i64 %162, %165
  %167 = sub i64 %162, %163
  %168 = mul i64 %166, %163
  %169 = sub i64 0, %163
  %170 = add i64 %162, %169
  %171 = sub i64 %162, %163
  %172 = sub i64 0, 12
  %173 = add i64 %170, %172
  %174 = sub i64 %170, 12
  %175 = mul i64 %173, 12
  %176 = sub i64 0, %170
  %177 = add i64 0, %176
  %178 = sub i64 0, %170
  %179 = sub i64 %177, 7715224368890209167
  %180 = add i64 %179, 12
  %181 = add i64 %180, 7715224368890209167
  %182 = add i64 %177, 12
  %183 = sub i64 0, -290344430022547599
  %184 = sub i64 %183, %170
  %185 = add i64 %184, -290344430022547599
  %186 = sub i64 0, %170
  %187 = sub i64 %185, 8008273696709899546
  %188 = add i64 %187, 12
  %189 = add i64 %188, 8008273696709899546
  %190 = add i64 %185, 12
  %191 = add i64 0, 4837622445354096207
  %192 = sub i64 %191, %170
  %193 = sub i64 %192, 4837622445354096207
  %194 = sub i64 0, %170
  %195 = sub i64 0, 12
  %196 = sub i64 %193, %195
  %197 = add i64 %193, 12
  %198 = sub i64 0, %170
  %199 = add i64 0, %198
  %200 = sub i64 0, %170
  %201 = add i64 %199, -1473928681599293469
  %202 = add i64 %201, 12
  %203 = sub i64 %202, -1473928681599293469
  %204 = add i64 %199, 12
  %205 = add i64 %170, -2905986277646936504
  %206 = sub i64 %205, 12
  %207 = sub i64 %206, -2905986277646936504
  %208 = sub i64 %170, 12
  %209 = mul i64 %207, 12
  %210 = sub i64 %170, -4088957369674601271
  %211 = sub i64 %210, 12
  %212 = add i64 %211, -4088957369674601271
  %213 = sub i64 %170, 12
  %214 = mul i64 %212, 12
  %215 = sub i64 0, -1290418704718278835
  %216 = sub i64 %215, %170
  %217 = add i64 %216, -1290418704718278835
  %218 = sub i64 0, %170
  %219 = sub i64 0, 12
  %220 = sub i64 %217, %219
  %221 = add i64 %217, 12
  %222 = shl i64 %170, 12
  %223 = sdiv exact i64 %170, 12
  store i64 %223, i64* %159, align 8
  %224 = load i64, i64* %159, align 8
  %225 = icmp ne i64 %224, 0
  store i32 -558820067, i32* %20
  br label %252

; <label>:226:                                    ; preds = %21
  %227 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %6
  %228 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %227, align 8
  %229 = bitcast %"struct.max_flow::Edge"* %228 to i8*
  %230 = load volatile %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %7
  %231 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %230, align 8
  %232 = bitcast %"struct.max_flow::Edge"* %231 to i8*
  %233 = load volatile i64*, i64** %5
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 12, -6554815642428425774
  %236 = sub i64 %235, %234
  %237 = add i64 %236, -6554815642428425774
  %238 = sub i64 12, %234
  %239 = mul i64 %237, %234
  %240 = sub i64 0, 12
  %241 = add i64 0, %240
  %242 = sub i64 0, 12
  %243 = sub i64 0, %234
  %244 = sub i64 %241, %243
  %245 = add i64 %241, %234
  %246 = sub i64 12, 7556432668587302391
  %247 = sub i64 %246, %234
  %248 = add i64 %247, 7556432668587302391
  %249 = sub i64 12, %234
  %250 = mul i64 %248, %234
  %251 = mul i64 12, %234
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %229, i8* %232, i64 %251, i32 4, i1 false)
  store i32 542484136, i32* %20
  br label %252

; <label>:252:                                    ; preds = %226, %155, %148, %111, %83, %80, %44, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.max_flow::Edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"* %2) #3
  %5 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  ret %"struct.max_flow::Edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  ret %"struct.max_flow::Edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_(%"struct.max_flow::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %2, align 8
  %3 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2, align 8
  ret %"struct.max_flow::Edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.max_flow::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.180
  %6 = load i32, i32* @y.181
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1059445573, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1059445573, label %18
    i32 1665868072, label %26
    i32 -1156264034, label %61
    i32 -785459496, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1665868072, i32 -785459496
  store i32 %25, i32* %14
  br label %71

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %29, align 8
  %30 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %27 to i8*
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %30, i8* %31, i64 8, i32 8, i1 false)
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %27, i32 0, i32 0
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %32, align 8
  store %"struct.max_flow::Edge"* %33, %"struct.max_flow::Edge"** %2
  %34 = load i32, i32* @x.180
  %35 = load i32, i32* @y.181
  %36 = add i32 %34, -165803433
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -165803433
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1156264034, i32 -785459496
  store i32 %60, i32* %14
  br label %71

; <label>:61:                                     ; preds = %15
  %62 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %65, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %66, align 8
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %64 to i8*
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %67, i8* %68, i64 8, i32 8, i1 false)
  %69 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %64, i32 0, i32 0
  %70 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %69, align 8
  store i32 1665868072, i32* %14
  br label %71

; <label>:71:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"*, %"struct.max_flow::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.182
  %6 = load i32, i32* @y.183
  %7 = sub i32 %5, -702079095
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -702079095
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1078469517, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1078469517, label %19
    i32 409883447, label %27
    i32 768180955, label %61
    i32 1868194849, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 409883447, i32 1868194849
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  %29 = alloca %"struct.max_flow::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %28, align 8
  store %"struct.max_flow::Edge"** %1, %"struct.max_flow::Edge"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %30, i32 0, i32 0
  %32 = load %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %29, align 8
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %32, align 8
  store %"struct.max_flow::Edge"* %33, %"struct.max_flow::Edge"** %31, align 8
  %34 = load i32, i32* @x.182
  %35 = load i32, i32* @y.183
  %36 = add i32 %34, 862468031
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 862468031
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 768180955, i32 1868194849
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  %64 = alloca %"struct.max_flow::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %63, align 8
  store %"struct.max_flow::Edge"** %1, %"struct.max_flow::Edge"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %65, i32 0, i32 0
  %67 = load %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %64, align 8
  %68 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %67, align 8
  store %"struct.max_flow::Edge"* %68, %"struct.max_flow::Edge"** %66, align 8
  store i32 409883447, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN8max_flow4EdgeEEvT_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %3 = alloca %"struct.max_flow::Edge"*, align 8
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %3, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %4, align 8
  %5 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %3, align 8
  %6 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN8max_flow4EdgeEEEvT_S5_(%"struct.max_flow::Edge"* %5, %"struct.max_flow::Edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN8max_flow4EdgeEEEvT_S5_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.186
  %6 = load i32, i32* @y.187
  %7 = add i32 %5, 970528545
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 970528545
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1733704486, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1733704486, label %19
    i32 -478436071, label %27
    i32 332782913, label %45
    i32 -1747463506, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -478436071, i32 -1747463506
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.max_flow::Edge"*, align 8
  %29 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %28, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %29, align 8
  %30 = load i32, i32* @x.186
  %31 = load i32, i32* @y.187
  %32 = sub i32 %30, -348837427
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -348837427
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 332782913, i32 -1747463506
  store i32 %44, i32* %15
  br label %49

; <label>:45:                                     ; preds = %16
  ret void

; <label>:46:                                     ; preds = %16
  %47 = alloca %"struct.max_flow::Edge"*, align 8
  %48 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %47, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %48, align 8
  store i32 -478436071, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.5"* dereferenceable(1), %"struct.max_flow::Edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"struct.max_flow::Edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.6"*, %"struct.max_flow::Edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %9 = bitcast %"struct.max_flow::Edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %14 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %6, i32 0, i32 0
  %16 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.max_flow::Edge"* %14, %"struct.max_flow::Edge"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"struct.max_flow::Edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %18 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %17, align 8
  %19 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %23 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %22, align 8
  %24 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.max_flow::Edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %11, i32 0, i32 0
  %28 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %27, align 8
  %29 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.max_flow::Edge"* %28)
  %30 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPKN8max_flow4EdgeEPS1_ET1_T0_S6_S5_(%"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"* %24, %"struct.max_flow::Edge"* %29)
  store %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %4, %"struct.max_flow::Edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %32 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %31, align 8
  ret %"struct.max_flow::Edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.198
  %6 = load i32, i32* @y.199
  %7 = sub i32 %5, 525432151
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 525432151
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -439853083, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -439853083, label %19
    i32 -1663233362, label %27
    i32 1706974261, label %63
    i32 511034255, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1663233362, i32 511034255
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %29, i32 0, i32 0
  %34 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %33, align 8
  %35 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.max_flow::Edge"* %34)
  store %"struct.max_flow::Edge"* %35, %"struct.max_flow::Edge"** %2
  %36 = load i32, i32* @x.198
  %37 = load i32, i32* @y.199
  %38 = add i32 %36, 1690547619
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1690547619
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1706974261, i32 511034255
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %66, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %67 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %67, i32 0, i32 0
  %72 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %71, align 8
  %73 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.max_flow::Edge"* %72)
  store i32 -1663233362, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"*, %"struct.max_flow::Edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"struct.max_flow::Edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"struct.max_flow::Edge"** %1, %"struct.max_flow::Edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %7 = load %"struct.max_flow::Edge"**, %"struct.max_flow::Edge"*** %4, align 8
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  store %"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.max_flow::Edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.202
  %6 = load i32, i32* @y.203
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1330238490, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1330238490, label %18
    i32 -1032350119, label %38
    i32 -870262789, label %70
    i32 -1053910380, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1032350119, i32 -1053910380
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %39, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %40, align 8
  %41 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %39) #3
  %42 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %41, align 8
  store %"struct.max_flow::Edge"* %42, %"struct.max_flow::Edge"** %2
  %43 = load i32, i32* @x.202
  %44 = load i32, i32* @y.203
  %45 = sub i32 %43, 296538418
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 296538418
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -870262789, i32 -1053910380
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %73, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %74, align 8
  %75 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %73) #3
  %76 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %75, align 8
  store i32 -1032350119, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  ret %"struct.max_flow::Edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.206
  %8 = load i32, i32* @y.207
  %9 = add i32 %7, 1348650335
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1348650335
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -456874702, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -456874702, label %21
    i32 -285143686, label %41
    i32 -454929079, label %67
    i32 -1690932114, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -285143686, i32 -1690932114
  store i32 %40, i32* %17
  br label %80

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.max_flow::Edge"*, align 8
  %43 = alloca %"struct.max_flow::Edge"*, align 8
  %44 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %42, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %43, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %44, align 8
  %45 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %42, align 8
  %46 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %45)
  %47 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %48 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %47)
  %49 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %44, align 8
  %50 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %49)
  %51 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"* %46, %"struct.max_flow::Edge"* %48, %"struct.max_flow::Edge"* %50)
  store %"struct.max_flow::Edge"* %51, %"struct.max_flow::Edge"** %4
  %52 = load i32, i32* @x.206
  %53 = load i32, i32* @y.207
  %54 = sub i32 %52, -1534679564
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -1534679564
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -454929079, i32 -1690932114
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  ret %"struct.max_flow::Edge"* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %"struct.max_flow::Edge"*, align 8
  %71 = alloca %"struct.max_flow::Edge"*, align 8
  %72 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %70, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %71, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %72, align 8
  %73 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %70, align 8
  %74 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %73)
  %75 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %71, align 8
  %76 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %75)
  %77 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %72, align 8
  %78 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %77)
  %79 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"* %74, %"struct.max_flow::Edge"* %76, %"struct.max_flow::Edge"* %78)
  store i32 -285143686, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__miter_baseIPN8max_flow4EdgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"*) #5 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.208
  %6 = load i32, i32* @y.209
  %7 = sub i32 %5, 610951165
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 610951165
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 382404457, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 382404457, label %19
    i32 -1465497684, label %27
    i32 1347833144, label %58
    i32 -1091749584, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1465497684, i32 -1091749584
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %28, align 8
  %29 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %28, align 8
  %30 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_(%"struct.max_flow::Edge"* %29)
  store %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"** %2
  %31 = load i32, i32* @x.208
  %32 = load i32, i32* @y.209
  %33 = add i32 %31, -207074778
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -207074778
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1347833144, i32 -1091749584
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %61, align 8
  %62 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %61, align 8
  %63 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseIPN8max_flow4EdgeELb0EE7_S_baseES2_(%"struct.max_flow::Edge"* %62)
  store i32 -1465497684, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb0EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #5 comdat {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %11 = call %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"* %9, %"struct.max_flow::Edge"* %10)
  ret %"struct.max_flow::Edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.212
  %8 = load i32, i32* @y.213
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -584946715, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %63
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -584946715, label %20
    i32 -772733757, label %28
    i32 1546523019, label %52
    i32 904043798, label %54
  ]

; <label>:19:                                     ; preds = %17
  br label %63

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -772733757, i32 904043798
  store i32 %27, i32* %16
  br label %63

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.max_flow::Edge"*, align 8
  %30 = alloca %"struct.max_flow::Edge"*, align 8
  %31 = alloca %"struct.max_flow::Edge"*, align 8
  %32 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %29, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %30, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %34 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %30, align 8
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %31, align 8
  %36 = call %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN8max_flow4EdgeES4_EET0_T_S6_S5_(%"struct.max_flow::Edge"* %33, %"struct.max_flow::Edge"* %34, %"struct.max_flow::Edge"* %35)
  store %"struct.max_flow::Edge"* %36, %"struct.max_flow::Edge"** %4
  %37 = load i32, i32* @x.212
  %38 = load i32, i32* @y.213
  %39 = sub i32 %37, 946215519
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 946215519
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1546523019, i32 904043798
  store i32 %51, i32* %16
  br label %63

; <label>:52:                                     ; preds = %17
  %53 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  ret %"struct.max_flow::Edge"* %53

; <label>:54:                                     ; preds = %17
  %55 = alloca %"struct.max_flow::Edge"*, align 8
  %56 = alloca %"struct.max_flow::Edge"*, align 8
  %57 = alloca %"struct.max_flow::Edge"*, align 8
  %58 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %55, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %56, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %57, align 8
  store i8 1, i8* %58, align 1
  %59 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %55, align 8
  %60 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %56, align 8
  %61 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %57, align 8
  %62 = call %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN8max_flow4EdgeES4_EET0_T_S6_S5_(%"struct.max_flow::Edge"* %59, %"struct.max_flow::Edge"* %60, %"struct.max_flow::Edge"* %61)
  store i32 -772733757, i32* %16
  br label %63

; <label>:63:                                     ; preds = %54, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN8max_flow4EdgeES4_EET0_T_S6_S5_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %10 = call %"struct.max_flow::Edge"* @_ZSt4copyIPN8max_flow4EdgeES2_ET0_T_S4_S3_(%"struct.max_flow::Edge"* %7, %"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"* %9)
  ret %"struct.max_flow::Edge"* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS4_EES2_IS6_SaIS6_EEEELb1EE7_S_baseESA_(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %2, i32 0, i32 0
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = call dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %2) #3
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.3"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.218
  %6 = load i32, i32* @y.219
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1493125797, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1493125797, label %18
    i32 323552273, label %26
    i32 1941485219, label %45
    i32 -2006043592, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 323552273, i32 -2006043592
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %28, i32 0, i32 0
  store %"class.std::vector.3"** %29, %"class.std::vector.3"*** %2
  %30 = load i32, i32* @x.218
  %31 = load i32, i32* @y.219
  %32 = sub i32 %30, -1533269348
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -1533269348
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1941485219, i32 -2006043592
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::vector.3"**, %"class.std::vector.3"*** %2
  ret %"class.std::vector.3"** %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %48, align 8
  %49 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %49, i32 0, i32 0
  store i32 323552273, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN8max_flow4EdgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.std::vector.3"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.std::vector.3"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.std::vector.3"** %1, %"class.std::vector.3"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.3"**, %"class.std::vector.3"*** %4, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt20uninitialized_fill_nIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %11 = call %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN8max_flow4EdgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.3"* %8, i64 %9, %"class.std::vector.3"* dereferenceable(24) %10)
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN8max_flow4EdgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %10, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %19, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %36

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %16 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN8max_flow4EdgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24) %15) #3
  %17 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN8max_flow4EdgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.3"* %16, %"class.std::vector.3"* dereferenceable(24) %17)
          to label %18 unwind label %26

; <label>:18:                                     ; preds = %14
  br label %19

; <label>:19:                                     ; preds = %18
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, -1
  %22 = sub i64 %20, %21
  %23 = add i64 %20, -1
  store i64 %22, i64* %5, align 8
  %24 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %25 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %24, i32 1
  store %"class.std::vector.3"* %25, %"class.std::vector.3"** %7, align 8
  br label %11

; <label>:26:                                     ; preds = %14
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %8, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %9, align 4
  br label %30

; <label>:30:                                     ; preds = %26
  %31 = load i8*, i8** %8, align 8
  %32 = call i8* @__cxa_begin_catch(i8* %31) #3
  %33 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %33, %"class.std::vector.3"* %34)
          to label %35 unwind label %38

; <label>:35:                                     ; preds = %30
  invoke void @__cxa_rethrow() #12
          to label %52 unwind label %38

; <label>:36:                                     ; preds = %11
  %37 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  ret %"class.std::vector.3"* %37

; <label>:38:                                     ; preds = %35, %30
  %39 = landingpad { i8*, i32 }
          cleanup
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %8, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %42 unwind label %49

; <label>:42:                                     ; preds = %38
  br label %44
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:44:                                     ; preds = %42
  %45 = load i8*, i8** %8, align 8
  %46 = load i32, i32* %9, align 4
  %47 = insertvalue { i8*, i32 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i32 } %47, i32 %46, 1
  resume { i8*, i32 } %48

; <label>:49:                                     ; preds = %38
  %50 = landingpad { i8*, i32 }
          catch i8* null
  %51 = extractvalue { i8*, i32 } %50, 0
  call void @__clang_call_terminate(i8* %51) #11
  unreachable

; <label>:52:                                     ; preds = %35
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN8max_flow4EdgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.226
  %6 = load i32, i32* @y.227
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1089263762, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %58
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1089263762, label %18
    i32 -1065250203, label %26
    i32 -846762413, label %49
    i32 892345059, label %50
  ]

; <label>:17:                                     ; preds = %15
  br label %58

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1065250203, i32 892345059
  store i32 %25, i32* %14
  br label %58

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"*, align 8
  %28 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %27, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %28, align 8
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  %30 = bitcast %"class.std::vector.3"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.3"*
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %33 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIN8max_flow4EdgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24) %32) #3
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.3"* %31, %"class.std::vector.3"* dereferenceable(24) %33)
  %34 = load i32, i32* @x.226
  %35 = load i32, i32* @y.227
  %36 = add i32 %34, -1422798799
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1422798799
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -846762413, i32 892345059
  store i32 %48, i32* %14
  br label %58

; <label>:49:                                     ; preds = %15
  ret void

; <label>:50:                                     ; preds = %15
  %51 = alloca %"class.std::vector.3"*, align 8
  %52 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %51, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %52, align 8
  %53 = load %"class.std::vector.3"*, %"class.std::vector.3"** %51, align 8
  %54 = bitcast %"class.std::vector.3"* %53 to i8*
  %55 = bitcast i8* %54 to %"class.std::vector.3"*
  %56 = load %"class.std::vector.3"*, %"class.std::vector.3"** %52, align 8
  %57 = call dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIN8max_flow4EdgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24) %56) #3
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.3"* %55, %"class.std::vector.3"* dereferenceable(24) %57)
  store i32 -1065250203, i32* %14
  br label %58

; <label>:58:                                     ; preds = %50, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN8max_flow4EdgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.3"*
  ret %"class.std::vector.3"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvT_S6_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN8max_flow4EdgeESaIS4_EEEEvT_S8_(%"class.std::vector.3"* %5, %"class.std::vector.3"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZSt7forwardIRKSt6vectorIN8max_flow4EdgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.3"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  ret %"class.std::vector.3"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEC2ERKS3_(%"class.std::vector.3"*, %"class.std::vector.3"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.234
  %4 = load i32, i32* @y.235
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %123

; <label>:16:                                     ; preds = %2, %123
  %17 = alloca %"class.std::vector.3"*, align 8
  %18 = alloca %"class.std::vector.3"*, align 8
  %19 = alloca %"class.std::allocator.5", align 1
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %23 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %17, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %18, align 8
  %24 = load %"class.std::vector.3"*, %"class.std::vector.3"** %17, align 8
  %25 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %26 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %27 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %26) #3
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %29 = bitcast %"class.std::vector.3"* %28 to %"struct.std::_Vector_base.4"*
  %30 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %29) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN8max_flow4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.5"* sret %19, %"class.std::allocator.5"* dereferenceable(1) %30)
  %31 = load i32, i32* @x.234
  %32 = load i32, i32* @y.235
  %33 = add i32 %31, -57378018
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -57378018
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %123

; <label>:45:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.4"* %25, i64 %27, %"class.std::allocator.5"* dereferenceable(1) %19)
          to label %46 unwind label %109

; <label>:46:                                     ; preds = %45
  call void @_ZNSaIN8max_flow4EdgeEED2Ev(%"class.std::allocator.5"* %19) #3
  %47 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %48 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %22, i32 0, i32 0
  store %"struct.max_flow::Edge"* %48, %"struct.max_flow::Edge"** %49, align 8
  %50 = load %"class.std::vector.3"*, %"class.std::vector.3"** %18, align 8
  %51 = call %"struct.max_flow::Edge"* @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"* %50) #3
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %23, i32 0, i32 0
  store %"struct.max_flow::Edge"* %51, %"struct.max_flow::Edge"** %52, align 8
  %53 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %54, i32 0, i32 0
  %56 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %55, align 8
  %57 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %58 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %57) #3
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %22, i32 0, i32 0
  %60 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %59, align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %23, i32 0, i32 0
  %62 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %61, align 8
  %63 = invoke %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN8max_flow4EdgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.max_flow::Edge"* %60, %"struct.max_flow::Edge"* %62, %"struct.max_flow::Edge"* %56, %"class.std::allocator.5"* dereferenceable(1) %58)
          to label %64 unwind label %113

; <label>:64:                                     ; preds = %46
  %65 = load i32, i32* @x.234
  %66 = load i32, i32* @y.235
  %67 = add i32 %65, 2071931332
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 2071931332
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %138

; <label>:91:                                     ; preds = %64, %138
  %92 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %93, i32 0, i32 1
  store %"struct.max_flow::Edge"* %63, %"struct.max_flow::Edge"** %94, align 8
  %95 = load i32, i32* @x.234
  %96 = load i32, i32* @y.235
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %138

; <label>:108:                                    ; preds = %91
  ret void

; <label>:109:                                    ; preds = %45
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %20, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %21, align 4
  call void @_ZNSaIN8max_flow4EdgeEED2Ev(%"class.std::allocator.5"* %19) #3
  br label %118

; <label>:113:                                    ; preds = %46
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %20, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %21, align 4
  %117 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"* %117) #3
  br label %118

; <label>:118:                                    ; preds = %113, %109
  %119 = load i8*, i8** %20, align 8
  %120 = load i32, i32* %21, align 4
  %121 = insertvalue { i8*, i32 } undef, i8* %119, 0
  %122 = insertvalue { i8*, i32 } %121, i32 %120, 1
  resume { i8*, i32 } %122

; <label>:123:                                    ; preds = %16, %2
  %124 = alloca %"class.std::vector.3"*, align 8
  %125 = alloca %"class.std::vector.3"*, align 8
  %126 = alloca %"class.std::allocator.5", align 1
  %127 = alloca i8*
  %128 = alloca i32
  %129 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %130 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %124, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %125, align 8
  %131 = load %"class.std::vector.3"*, %"class.std::vector.3"** %124, align 8
  %132 = bitcast %"class.std::vector.3"* %131 to %"struct.std::_Vector_base.4"*
  %133 = load %"class.std::vector.3"*, %"class.std::vector.3"** %125, align 8
  %134 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %133) #3
  %135 = load %"class.std::vector.3"*, %"class.std::vector.3"** %125, align 8
  %136 = bitcast %"class.std::vector.3"* %135 to %"struct.std::_Vector_base.4"*
  %137 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %136) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN8max_flow4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.5"* sret %126, %"class.std::allocator.5"* dereferenceable(1) %137)
  br label %16

; <label>:138:                                    ; preds = %91, %64
  %139 = bitcast %"class.std::vector.3"* %24 to %"struct.std::_Vector_base.4"*
  %140 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %140, i32 0, i32 1
  store %"struct.max_flow::Edge"* %63, %"struct.max_flow::Edge"** %141, align 8
  br label %91
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN8max_flow4EdgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %3, align 8
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.5"* sret %0, %"class.std::allocator.5"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.4"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.240
  %5 = load i32, i32* @y.241
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %104

; <label>:17:                                     ; preds = %3, %104
  %18 = alloca %"struct.std::_Vector_base.4"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator.5"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %20, align 8
  %23 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %20, align 8
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %24, %"class.std::allocator.5"* dereferenceable(1) %25) #3
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.240
  %28 = load i32, i32* @y.241
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %104

; <label>:40:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"* %23, i64 %26)
          to label %41 unwind label %95

; <label>:41:                                     ; preds = %40
  %42 = load i32, i32* @x.240
  %43 = load i32, i32* @y.241
  %44 = add i32 %42, -1295408900
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1295408900
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %114

; <label>:68:                                     ; preds = %41, %114
  %69 = load i32, i32* @x.240
  %70 = load i32, i32* @y.241
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %114

; <label>:94:                                     ; preds = %68
  ret void

; <label>:95:                                     ; preds = %40
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %21, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %24) #3
  br label %99

; <label>:99:                                     ; preds = %95
  %100 = load i8*, i8** %21, align 8
  %101 = load i32, i32* %22, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  resume { i8*, i32 } %103

; <label>:104:                                    ; preds = %17, %3
  %105 = alloca %"struct.std::_Vector_base.4"*, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::allocator.5"*, align 8
  %108 = alloca i8*
  %109 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %105, align 8
  store i64 %1, i64* %106, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %107, align 8
  %110 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %105, align 8
  %111 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %110, i32 0, i32 0
  %112 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %107, align 8
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %111, %"class.std::allocator.5"* dereferenceable(1) %112) #3
  %113 = load i64, i64* %106, align 8
  br label %17

; <label>:114:                                    ; preds = %68, %41
  br label %68
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN8max_flow4EdgeEED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %13, align 8
  %15 = ptrtoint %"struct.max_flow::Edge"* %11 to i64
  %16 = ptrtoint %"struct.max_flow::Edge"* %14 to i64
  %17 = sub i64 %15, 8470907238754576462
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 8470907238754576462
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 12
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %5, %"struct.max_flow::Edge"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %3, align 8
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  call void @_ZNSaIN8max_flow4EdgeEEC2ERKS1_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN8max_flow4EdgeEEC2ERKS1_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.248
  %6 = load i32, i32* @y.249
  %7 = sub i32 %5, 1324417027
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1324417027
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1264679452, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1264679452, label %19
    i32 -883116419, label %27
    i32 -615809415, label %60
    i32 -192517515, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -883116419, i32 -192517515
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  %29 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %29, align 8
  %30 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %31 = bitcast %"class.std::allocator.5"* %30 to %"class.__gnu_cxx::new_allocator.6"*
  %32 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %29, align 8
  %33 = bitcast %"class.std::allocator.5"* %32 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.6"* %31, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.248
  %35 = load i32, i32* @y.249
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -615809415, i32 -192517515
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.5"*, align 8
  %63 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %62, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %63, align 8
  %64 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %62, align 8
  %65 = bitcast %"class.std::allocator.5"* %64 to %"class.__gnu_cxx::new_allocator.6"*
  %66 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %63, align 8
  %67 = bitcast %"class.std::allocator.5"* %66 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.6"* %65, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %67) #3
  store i32 -883116419, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %5 to %"class.std::allocator.5"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSaIN8max_flow4EdgeEEC2ERKS1_(%"class.std::allocator.5"* %6, %"class.std::allocator.5"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.4"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.max_flow::Edge"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.max_flow::Edge"* %7, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.max_flow::Edge"* %12, %"struct.max_flow::Edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.256
  %5 = load i32, i32* @y.257
  %6 = add i32 %4, 1240699730
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1240699730
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -754740, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -754740, label %18
    i32 -2116261109, label %26
    i32 -1232512434, label %45
    i32 -936120287, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2116261109, i32 -936120287
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %28 to %"class.std::allocator.5"*
  call void @_ZNSaIN8max_flow4EdgeEED2Ev(%"class.std::allocator.5"* %29) #3
  %30 = load i32, i32* @x.256
  %31 = load i32, i32* @y.257
  %32 = add i32 %30, 1658915019
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1658915019
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1232512434, i32 -936120287
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %47, align 8
  %48 = load %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %48 to %"class.std::allocator.5"*
  call void @_ZNSaIN8max_flow4EdgeEED2Ev(%"class.std::allocator.5"* %49) #3
  store i32 -2116261109, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN8max_flow4EdgeESaIS4_EEEEvT_S8_(%"class.std::vector.3"*, %"class.std::vector.3"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %5, align 8
  %6 = alloca i32
  store i32 526821801, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %129
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 526821801, label %10
    i32 -383233743, label %26
    i32 -686172312, label %56
    i32 606365367, label %59
    i32 -963308053, label %87
    i32 -1396430131, label %117
    i32 -1370412604, label %118
    i32 -1744624218, label %121
    i32 1323813947, label %122
    i32 968680999, label %126
  ]

; <label>:9:                                      ; preds = %7
  br label %129

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.260
  %12 = load i32, i32* @y.261
  %13 = sub i32 %11, -2058003479
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -2058003479
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -383233743, i32 1323813947
  store i32 %25, i32* %6
  br label %129

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %29 = icmp ne %"class.std::vector.3"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.260
  %31 = load i32, i32* @y.261
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -686172312, i32 1323813947
  store i32 %55, i32* %6
  br label %129

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 606365367, i32 -1744624218
  store i32 %58, i32* %6
  br label %129

; <label>:59:                                     ; preds = %7
  %60 = load i32, i32* @x.260
  %61 = load i32, i32* @y.261
  %62 = add i32 %60, 386865880
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 386865880
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -963308053, i32 968680999
  store i32 %86, i32* %6
  br label %129

; <label>:87:                                     ; preds = %7
  %88 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %89 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN8max_flow4EdgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24) %88) #3
  call void @_ZSt8_DestroyISt6vectorIN8max_flow4EdgeESaIS2_EEEvPT_(%"class.std::vector.3"* %89)
  %90 = load i32, i32* @x.260
  %91 = load i32, i32* @y.261
  %92 = sub i32 %90, 1663271253
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1663271253
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -1396430131, i32 968680999
  store i32 %116, i32* %6
  br label %129

; <label>:117:                                    ; preds = %7
  store i32 -1370412604, i32* %6
  br label %129

; <label>:118:                                    ; preds = %7
  %119 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %120 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %119, i32 1
  store %"class.std::vector.3"* %120, %"class.std::vector.3"** %4, align 8
  store i32 526821801, i32* %6
  br label %129

; <label>:121:                                    ; preds = %7
  ret void

; <label>:122:                                    ; preds = %7
  %123 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %124 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %125 = icmp ne %"class.std::vector.3"* %123, %124
  store i32 -383233743, i32* %6
  br label %129

; <label>:126:                                    ; preds = %7
  %127 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %128 = call %"class.std::vector.3"* @_ZSt11__addressofISt6vectorIN8max_flow4EdgeESaIS2_EEEPT_RS5_(%"class.std::vector.3"* dereferenceable(24) %127) #3
  call void @_ZSt8_DestroyISt6vectorIN8max_flow4EdgeESaIS2_EEEvPT_(%"class.std::vector.3"* %128)
  store i32 -963308053, i32* %6
  br label %129

; <label>:129:                                    ; preds = %126, %122, %118, %117, %87, %59, %56, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN8max_flow4EdgeESaIS2_EEEvPT_(%"class.std::vector.3"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.262
  %5 = load i32, i32* @y.263
  %6 = sub i32 %4, 831302732
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 831302732
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1886471391, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1886471391, label %18
    i32 1171906908, label %38
    i32 -1180227362, label %56
    i32 -1995249391, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1171906908, i32 -1995249391
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %39, align 8
  %40 = load %"class.std::vector.3"*, %"class.std::vector.3"** %39, align 8
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"* %40) #3
  %41 = load i32, i32* @x.262
  %42 = load i32, i32* @y.263
  %43 = add i32 %41, 1937139983
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1937139983
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1180227362, i32 -1995249391
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %58, align 8
  %59 = load %"class.std::vector.3"*, %"class.std::vector.3"** %58, align 8
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EED2Ev(%"class.std::vector.3"* %59) #3
  store i32 1171906908, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.3"*, %"class.std::vector.3"*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.264
  %7 = load i32, i32* @y.265
  %8 = add i32 %6, 1564471833
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1564471833
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -658194021, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %68
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -658194021, label %20
    i32 1890449150, label %40
    i32 1295782724, label %61
    i32 1280875685, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %68

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1890449150, i32 1280875685
  store i32 %39, i32* %16
  br label %68

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"class.std::vector.3"*, align 8
  %43 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %42, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %43, align 8
  %44 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %45 = load %"class.std::vector.3"*, %"class.std::vector.3"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %44, %"class.std::vector.3"* %45)
  %46 = load i32, i32* @x.264
  %47 = load i32, i32* @y.265
  %48 = sub i32 %46, -928927643
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -928927643
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1295782724, i32 1280875685
  store i32 %60, i32* %16
  br label %68

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.std::vector.3"*, align 8
  %64 = alloca %"class.std::vector.3"*, align 8
  %65 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %63, align 8
  store %"class.std::vector.3"* %1, %"class.std::vector.3"** %64, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %65, align 8
  %66 = load %"class.std::vector.3"*, %"class.std::vector.3"** %63, align 8
  %67 = load %"class.std::vector.3"*, %"class.std::vector.3"** %64, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN8max_flow4EdgeESaIS2_EEEvT_S6_(%"class.std::vector.3"* %66, %"class.std::vector.3"* %67)
  store i32 1890449150, i32* %16
  br label %68

; <label>:68:                                     ; preds = %62, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt10__fill_n_aIPSt6vectorIN8max_flow4EdgeESaIS2_EEmS4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT1_EE7__valueET_E6__typeES9_T0_RKS8_(%"class.std::vector.3"*, i64, %"class.std::vector.3"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.3"* %2, %"class.std::vector.3"** %6, align 8
  %8 = load i64, i64* %5, align 8
  store i64 %8, i64* %7, align 8
  %9 = alloca i32
  store i32 1654270436, i32* %9
  br label %10

; <label>:10:                                     ; preds = %3, %79
  %11 = load i32, i32* %9
  switch i32 %11, label %12 [
    i32 1654270436, label %13
    i32 -1611987924, label %17
    i32 624406530, label %45
    i32 -667741799, label %64
    i32 1135958396, label %65
    i32 985720540, label %73
    i32 -1847563642, label %75
  ]

; <label>:12:                                     ; preds = %10
  br label %79

; <label>:13:                                     ; preds = %10
  %14 = load i64, i64* %7, align 8
  %15 = icmp ugt i64 %14, 0
  %16 = select i1 %15, i32 -1611987924, i32 985720540
  store i32 %16, i32* %9
  br label %79

; <label>:17:                                     ; preds = %10
  %18 = load i32, i32* @x.266
  %19 = load i32, i32* @y.267
  %20 = add i32 %18, -946039187
  %21 = sub i32 %20, 1
  %22 = sub i32 %21, -946039187
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  %44 = select i1 %42, i32 624406530, i32 -1847563642
  store i32 %44, i32* %9
  br label %79

; <label>:45:                                     ; preds = %10
  %46 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %47 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %48 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEaSERKS3_(%"class.std::vector.3"* %47, %"class.std::vector.3"* dereferenceable(24) %46)
  %49 = load i32, i32* @x.266
  %50 = load i32, i32* @y.267
  %51 = sub i32 %49, 1877852844
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1877852844
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -667741799, i32 -1847563642
  store i32 %63, i32* %9
  br label %79

; <label>:64:                                     ; preds = %10
  store i32 1135958396, i32* %9
  br label %79

; <label>:65:                                     ; preds = %10
  %66 = load i64, i64* %7, align 8
  %67 = sub i64 %66, 2978254960510013603
  %68 = add i64 %67, -1
  %69 = add i64 %68, 2978254960510013603
  %70 = add i64 %66, -1
  store i64 %69, i64* %7, align 8
  %71 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %72 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %71, i32 1
  store %"class.std::vector.3"* %72, %"class.std::vector.3"** %4, align 8
  store i32 1654270436, i32* %9
  br label %79

; <label>:73:                                     ; preds = %10
  %74 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  ret %"class.std::vector.3"* %74

; <label>:75:                                     ; preds = %10
  %76 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %78 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEaSERKS3_(%"class.std::vector.3"* %77, %"class.std::vector.3"* dereferenceable(24) %76)
  store i32 624406530, i32* %9
  br label %79

; <label>:79:                                     ; preds = %75, %65, %64, %45, %17, %13, %12
  br label %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.3"* @_ZSt12__niter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.3"*) #0 comdat {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = call %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.3"* %3)
  ret %"class.std::vector.3"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.3"* @_ZNSt10_Iter_baseIPSt6vectorIN8max_flow4EdgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.270
  %6 = load i32, i32* @y.271
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1557308932, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1557308932, label %18
    i32 1020318098, label %26
    i32 -495635092, label %44
    i32 1853800008, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1020318098, i32 1853800008
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %27, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  store %"class.std::vector.3"* %28, %"class.std::vector.3"** %2
  %29 = load i32, i32* @x.270
  %30 = load i32, i32* @y.271
  %31 = sub i32 %29, 889670780
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 889670780
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -495635092, i32 1853800008
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %2
  ret %"class.std::vector.3"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %47, align 8
  %48 = load %"class.std::vector.3"*, %"class.std::vector.3"** %47, align 8
  store i32 1020318098, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.272
  %5 = load i32, i32* @y.273
  %6 = sub i32 %4, 743138631
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 743138631
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2114736814, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2114736814, label %18
    i32 -1424272971, label %26
    i32 -282624825, label %56
    i32 -1822577484, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1424272971, i32 -1822577484
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %27, align 8
  %28 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.272
  %31 = load i32, i32* @y.273
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -282624825, i32 -1822577484
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %58, align 8
  %59 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %60)
  store i32 -1424272971, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"*, %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaIN8max_flow4EdgeEEC2Ev(%"class.std::allocator.5"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN8max_flow4EdgeEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.282
  %6 = load i32, i32* @y.283
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1610380195, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1610380195, label %18
    i32 1165798443, label %38
    i32 -956880696, label %57
    i32 1787497853, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1165798443, i32 1787497853
  store i32 %37, i32* %14
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %39, align 8
  %40 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %40, i32 0, i32 0
  %42 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %42, %"class.std::allocator.10"** %2
  %43 = load i32, i32* @x.282
  %44 = load i32, i32* @y.283
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -956880696, i32 1787497853
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %60, align 8
  %61 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %60, align 8
  %62 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %62 to %"class.std::allocator.10"*
  store i32 1165798443, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 686693245534997565
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 686693245534997565
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i32, i32* @x.284
  %31 = load i32, i32* @y.285
  %32 = add i32 %30, -363190453
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -363190453
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %72

; <label>:56:                                     ; preds = %29, %72
  %57 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %57) #11
  %58 = load i32, i32* @x.284
  %59 = load i32, i32* @y.285
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %72

; <label>:71:                                     ; preds = %56
  unreachable

; <label>:72:                                     ; preds = %56, %29
  %73 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %73) #11
  br label %56
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.286
  %6 = load i32, i32* @y.287
  %7 = sub i32 %5, -409964406
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -409964406
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2076710194, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2076710194, label %19
    i32 272147280, label %39
    i32 322304904, label %71
    i32 -1110065264, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 272147280, i32 -1110065264
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32*, i32** %40, align 8
  %43 = load i32*, i32** %41, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %42, i32* %43)
  %44 = load i32, i32* @x.286
  %45 = load i32, i32* @y.287
  %46 = sub i32 %44, 159110742
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 159110742
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 322304904, i32 -1110065264
  store i32 %70, i32* %15
  br label %77

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca i32*, align 8
  %74 = alloca i32*, align 8
  store i32* %0, i32** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load i32*, i32** %73, align 8
  %76 = load i32*, i32** %74, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %75, i32* %76)
  store i32 272147280, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.288
  %6 = load i32, i32* @y.289
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1495317062, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1495317062, label %18
    i32 -417662942, label %38
    i32 448366308, label %68
    i32 409749172, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -417662942, i32 409749172
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  %40 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load i32, i32* @x.288
  %42 = load i32, i32* @y.289
  %43 = sub i32 %41, 956676115
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 956676115
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 448366308, i32 409749172
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  store i32* %0, i32** %70, align 8
  store i32* %1, i32** %71, align 8
  store i32 -417662942, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.9"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.290
  %11 = load i32, i32* @y.291
  %12 = sub i32 %10, -1789513534
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -1789513534
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1139584675, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %87
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1139584675, label %24
    i32 275793127, label %32
    i32 -646869425, label %68
    i32 -780543903, label %71
    i32 -823685780, label %79
    i32 -250624852, label %80
  ]

; <label>:23:                                     ; preds = %21
  br label %87

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 275793127, i32 -250624852
  store i32 %31, i32* %20
  br label %87

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.9"*, align 8
  %34 = alloca i32*, align 8
  store i32** %34, i32*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %33, align 8
  %36 = load volatile i32**, i32*** %7
  store i32* %1, i32** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %33, align 8
  store %"struct.std::_Vector_base.9"* %38, %"struct.std::_Vector_base.9"** %5
  %39 = load volatile i32**, i32*** %7
  %40 = load i32*, i32** %39, align 8
  %41 = icmp ne i32* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.290
  %43 = load i32, i32* @y.291
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -646869425, i32 -250624852
  store i32 %67, i32* %20
  br label %87

; <label>:68:                                     ; preds = %21
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 -780543903, i32 -823685780
  store i32 %70, i32* %20
  br label %87

; <label>:71:                                     ; preds = %21
  %72 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %73 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73 to %"class.std::allocator.10"*
  %75 = load volatile i32**, i32*** %7
  %76 = load i32*, i32** %75, align 8
  %77 = load volatile i64*, i64** %6
  %78 = load i64, i64* %77, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %74, i32* %76, i64 %78)
  store i32 -823685780, i32* %20
  br label %87

; <label>:79:                                     ; preds = %21
  ret void

; <label>:80:                                     ; preds = %21
  %81 = alloca %"struct.std::_Vector_base.9"*, align 8
  %82 = alloca i32*, align 8
  %83 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %81, align 8
  store i32* %1, i32** %82, align 8
  store i64 %2, i64* %83, align 8
  %84 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %81, align 8
  %85 = load i32*, i32** %82, align 8
  %86 = icmp ne i32* %85, null
  store i32 275793127, i32* %20
  br label %87

; <label>:87:                                     ; preds = %80, %71, %68, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.11"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> >, std::allocator<std::vector<max_flow::Edge, std::allocator<max_flow::Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.3", %"class.std::vector.3"* %9, i64 %10
  ret %"class.std::vector.3"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE9push_backEOS1_(%"class.std::vector.3"*, %"struct.max_flow::Edge"* dereferenceable(12)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %7 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt4moveIRN8max_flow4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.max_flow::Edge"* dereferenceable(12) %6) #3
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.3"* %5, %"struct.max_flow::Edge"* dereferenceable(12) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.3"*, %"struct.max_flow::Edge"* dereferenceable(12)) #0 comdat align 2 {
  %3 = alloca %"struct.max_flow::Edge"*
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %7, align 8
  %8 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  store %"class.std::vector.3"* %8, %"class.std::vector.3"** %5
  %9 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %10 = bitcast %"class.std::vector.3"* %9 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %12, align 8
  store %"struct.max_flow::Edge"* %13, %"struct.max_flow::Edge"** %4
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %15 = bitcast %"class.std::vector.3"* %14 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %17, align 8
  store %"struct.max_flow::Edge"* %18, %"struct.max_flow::Edge"** %3
  %19 = alloca i32
  store i32 604300932, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %132
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 604300932, label %23
    i32 1039551635, label %28
    i32 1880384293, label %46
    i32 998929583, label %62
    i32 -1825726225, label %81
    i32 1991140936, label %82
    i32 1647189505, label %98
    i32 -1387335408, label %126
    i32 -1984236367, label %127
    i32 -587350114, label %131
  ]

; <label>:22:                                     ; preds = %20
  br label %132

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  %25 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %3
  %26 = icmp ne %"struct.max_flow::Edge"* %24, %25
  %27 = select i1 %26, i32 1039551635, i32 1880384293
  store i32 %27, i32* %19
  br label %132

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %31 to %"class.std::allocator.5"*
  %33 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %34 = bitcast %"class.std::vector.3"* %33 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %36, align 8
  %38 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %39 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %38) #3
  call void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %32, %"struct.max_flow::Edge"* %37, %"struct.max_flow::Edge"* dereferenceable(12) %39)
  %40 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %41 = bitcast %"class.std::vector.3"* %40 to %"struct.std::_Vector_base.4"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %44, i32 1
  store %"struct.max_flow::Edge"* %45, %"struct.max_flow::Edge"** %43, align 8
  store i32 1991140936, i32* %19
  br label %132

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.306
  %48 = load i32, i32* @y.307
  %49 = sub i32 %47, 1233145311
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1233145311
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 998929583, i32 -1984236367
  store i32 %61, i32* %19
  br label %132

; <label>:62:                                     ; preds = %20
  %63 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %64 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %63) #3
  %65 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.3"* %65, %"struct.max_flow::Edge"* dereferenceable(12) %64)
  %66 = load i32, i32* @x.306
  %67 = load i32, i32* @y.307
  %68 = sub i32 %66, 2112161979
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 2112161979
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  %80 = select i1 %78, i32 -1825726225, i32 -1984236367
  store i32 %80, i32* %19
  br label %132

; <label>:81:                                     ; preds = %20
  store i32 1991140936, i32* %19
  br label %132

; <label>:82:                                     ; preds = %20
  %83 = load i32, i32* @x.306
  %84 = load i32, i32* @y.307
  %85 = add i32 %83, -816680119
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -816680119
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 1647189505, i32 -587350114
  store i32 %97, i32* %19
  br label %132

; <label>:98:                                     ; preds = %20
  %99 = load i32, i32* @x.306
  %100 = load i32, i32* @y.307
  %101 = sub i32 %99, -1426685684
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1426685684
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -1387335408, i32 -587350114
  store i32 %125, i32* %19
  br label %132

; <label>:126:                                    ; preds = %20
  ret void

; <label>:127:                                    ; preds = %20
  %128 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %129 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %128) #3
  %130 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.3"* %130, %"struct.max_flow::Edge"* dereferenceable(12) %129)
  store i32 998929583, i32* %19
  br label %132

; <label>:131:                                    ; preds = %20
  store i32 1647189505, i32* %19
  br label %132

; <label>:132:                                    ; preds = %131, %127, %98, %82, %81, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt4moveIRN8max_flow4EdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.max_flow::Edge"* dereferenceable(12)) #5 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.308
  %6 = load i32, i32* @y.309
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2135595598, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2135595598, label %18
    i32 -1613986739, label %26
    i32 1251105837, label %44
    i32 -1038455721, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1613986739, i32 -1038455721
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %27, align 8
  %28 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %27, align 8
  store %"struct.max_flow::Edge"* %28, %"struct.max_flow::Edge"** %2
  %29 = load i32, i32* @x.308
  %30 = load i32, i32* @y.309
  %31 = sub i32 %29, -2037903507
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -2037903507
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1251105837, i32 -1038455721
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %47, align 8
  %48 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %47, align 8
  store i32 -1613986739, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"* dereferenceable(12)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.310
  %7 = load i32, i32* @y.311
  %8 = sub i32 %6, -1645452015
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1645452015
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1210531416, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1210531416, label %20
    i32 -508518097, label %40
    i32 1516650423, label %64
    i32 -1050259695, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -508518097, i32 -1050259695
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.5"*, align 8
  %42 = alloca %"struct.max_flow::Edge"*, align 8
  %43 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %41, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %42, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %43, align 8
  %44 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %41, align 8
  %45 = bitcast %"class.std::allocator.5"* %44 to %"class.__gnu_cxx::new_allocator.6"*
  %46 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %42, align 8
  %47 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %48 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %45, %"struct.max_flow::Edge"* %46, %"struct.max_flow::Edge"* dereferenceable(12) %48)
  %49 = load i32, i32* @x.310
  %50 = load i32, i32* @y.311
  %51 = add i32 %49, 214691523
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 214691523
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1516650423, i32 -1050259695
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::allocator.5"*, align 8
  %67 = alloca %"struct.max_flow::Edge"*, align 8
  %68 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %66, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %67, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %68, align 8
  %69 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %66, align 8
  %70 = bitcast %"class.std::allocator.5"* %69 to %"class.__gnu_cxx::new_allocator.6"*
  %71 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %67, align 8
  %72 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %68, align 8
  %73 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %70, %"struct.max_flow::Edge"* %71, %"struct.max_flow::Edge"* dereferenceable(12) %73)
  store i32 -508518097, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12)) #5 comdat {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.312
  %6 = load i32, i32* @y.313
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 956446701, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 956446701, label %18
    i32 -225135909, label %26
    i32 139504069, label %55
    i32 -126868463, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -225135909, i32 -126868463
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %27, align 8
  %28 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %27, align 8
  store %"struct.max_flow::Edge"* %28, %"struct.max_flow::Edge"** %2
  %29 = load i32, i32* @x.312
  %30 = load i32, i32* @y.313
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 139504069, i32 -126868463
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %58, align 8
  %59 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %58, align 8
  store i32 -225135909, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.3"*, %"struct.max_flow::Edge"* dereferenceable(12)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %4, align 8
  %10 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.max_flow::Edge"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %12, i64 %13)
  store %"struct.max_flow::Edge"* %14, %"struct.max_flow::Edge"** %6, align 8
  %15 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  store %"struct.max_flow::Edge"* %15, %"struct.max_flow::Edge"** %7, align 8
  %16 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %17 to %"class.std::allocator.5"*
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %10) #3
  %21 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %19, i64 %20
  %22 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %23 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, %"struct.max_flow::Edge"* %21, %"struct.max_flow::Edge"* dereferenceable(12) %23)
          to label %24 unwind label %124

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.314
  %26 = load i32, i32* @y.315
  %27 = add i32 %25, 2005213322
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 2005213322
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %334

; <label>:51:                                     ; preds = %24, %334
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %7, align 8
  %52 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %54, align 8
  %56 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %58, align 8
  %60 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %61 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %62 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %61) #3
  %63 = load i32, i32* @x.314
  %64 = load i32, i32* @y.315
  %65 = sub i32 %63, -568602877
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -568602877
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %334

; <label>:89:                                     ; preds = %51
  %90 = invoke %"struct.max_flow::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN8max_flow4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.max_flow::Edge"* %55, %"struct.max_flow::Edge"* %59, %"struct.max_flow::Edge"* %60, %"class.std::allocator.5"* dereferenceable(1) %62)
          to label %91 unwind label %124

; <label>:91:                                     ; preds = %89
  %92 = load i32, i32* @x.314
  %93 = load i32, i32* @y.315
  %94 = sub i32 %92, 959080491
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 959080491
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %346

; <label>:106:                                    ; preds = %91, %346
  store %"struct.max_flow::Edge"* %90, %"struct.max_flow::Edge"** %7, align 8
  %107 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %108 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %107, i32 1
  store %"struct.max_flow::Edge"* %108, %"struct.max_flow::Edge"** %7, align 8
  %109 = load i32, i32* @x.314
  %110 = load i32, i32* @y.315
  %111 = add i32 %109, 661174149
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 661174149
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %346

; <label>:123:                                    ; preds = %106
  br label %239

; <label>:124:                                    ; preds = %89, %2
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %8, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %9, align 4
  br label %128

; <label>:128:                                    ; preds = %124
  %129 = load i8*, i8** %8, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %132 = icmp ne %"struct.max_flow::Edge"* %131, null
  br i1 %132, label %186, label %133

; <label>:133:                                    ; preds = %128
  %134 = load i32, i32* @x.314
  %135 = load i32, i32* @y.315
  %136 = add i32 %134, -748152994
  %137 = sub i32 %136, 1
  %138 = sub i32 %137, -748152994
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 false, true
  %147 = and i1 %144, false
  %148 = and i1 %142, %146
  %149 = and i1 %145, false
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 false, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %349

; <label>:160:                                    ; preds = %133, %349
  %161 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %161, i32 0, i32 0
  %163 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %162 to %"class.std::allocator.5"*
  %164 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %165 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %10) #3
  %166 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %164, i64 %165
  %167 = load i32, i32* @x.314
  %168 = load i32, i32* @y.315
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  br i1 %178, label %180, label %349

; <label>:180:                                    ; preds = %160
  invoke void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.5"* dereferenceable(1) %163, %"struct.max_flow::Edge"* %166)
          to label %181 unwind label %182

; <label>:181:                                    ; preds = %180
  br label %233

; <label>:182:                                    ; preds = %237, %233, %186, %180
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %8, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %238 unwind label %289

; <label>:186:                                    ; preds = %128
  %187 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %188 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %189 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %190 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %189) #3
  invoke void @_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E(%"struct.max_flow::Edge"* %187, %"struct.max_flow::Edge"* %188, %"class.std::allocator.5"* dereferenceable(1) %190)
          to label %191 unwind label %182

; <label>:191:                                    ; preds = %186
  %192 = load i32, i32* @x.314
  %193 = load i32, i32* @y.315
  %194 = add i32 %192, 47548840
  %195 = sub i32 %194, 1
  %196 = sub i32 %195, 47548840
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = xor i1 %200, true
  %203 = xor i1 %201, true
  %204 = xor i1 false, true
  %205 = and i1 %202, false
  %206 = and i1 %200, %204
  %207 = and i1 %203, false
  %208 = and i1 %201, %204
  %209 = or i1 %205, %206
  %210 = or i1 %207, %208
  %211 = xor i1 %209, %210
  %212 = or i1 %202, %203
  %213 = xor i1 %212, true
  %214 = or i1 false, %204
  %215 = and i1 %213, %214
  %216 = or i1 %211, %215
  %217 = or i1 %200, %201
  br i1 %216, label %218, label %356

; <label>:218:                                    ; preds = %191, %356
  %219 = load i32, i32* @x.314
  %220 = load i32, i32* @y.315
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = and i1 %226, %227
  %229 = xor i1 %226, %227
  %230 = or i1 %228, %229
  %231 = or i1 %226, %227
  br i1 %230, label %232, label %356

; <label>:232:                                    ; preds = %218
  br label %233

; <label>:233:                                    ; preds = %232, %181
  %234 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %235 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %236 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %234, %"struct.max_flow::Edge"* %235, i64 %236)
          to label %237 unwind label %182

; <label>:237:                                    ; preds = %233
  invoke void @__cxa_rethrow() #12
          to label %292 unwind label %182

; <label>:238:                                    ; preds = %182
  br label %284

; <label>:239:                                    ; preds = %123
  %240 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %241, i32 0, i32 0
  %243 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %242, align 8
  %244 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %245, i32 0, i32 1
  %247 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %246, align 8
  %248 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %249 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %248) #3
  call void @_ZSt8_DestroyIPN8max_flow4EdgeES1_EvT_S3_RSaIT0_E(%"struct.max_flow::Edge"* %243, %"struct.max_flow::Edge"* %247, %"class.std::allocator.5"* dereferenceable(1) %249)
  %250 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %251 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %252 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %251, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %252, i32 0, i32 0
  %254 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %253, align 8
  %255 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %256 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %255, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %256, i32 0, i32 2
  %258 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %257, align 8
  %259 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %260 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %260, i32 0, i32 0
  %262 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %261, align 8
  %263 = ptrtoint %"struct.max_flow::Edge"* %258 to i64
  %264 = ptrtoint %"struct.max_flow::Edge"* %262 to i64
  %265 = add i64 %263, -8698250777438106874
  %266 = sub i64 %265, %264
  %267 = sub i64 %266, -8698250777438106874
  %268 = sub i64 %263, %264
  %269 = sdiv exact i64 %267, 12
  call void @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.4"* %250, %"struct.max_flow::Edge"* %254, i64 %269)
  %270 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %271 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %272 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %271, i32 0, i32 0
  %273 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %272, i32 0, i32 0
  store %"struct.max_flow::Edge"* %270, %"struct.max_flow::Edge"** %273, align 8
  %274 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %275 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %276 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %276, i32 0, i32 1
  store %"struct.max_flow::Edge"* %274, %"struct.max_flow::Edge"** %277, align 8
  %278 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %279 = load i64, i64* %5, align 8
  %280 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %278, i64 %279
  %281 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %282, i32 0, i32 2
  store %"struct.max_flow::Edge"* %280, %"struct.max_flow::Edge"** %283, align 8
  ret void

; <label>:284:                                    ; preds = %238
  %285 = load i8*, i8** %8, align 8
  %286 = load i32, i32* %9, align 4
  %287 = insertvalue { i8*, i32 } undef, i8* %285, 0
  %288 = insertvalue { i8*, i32 } %287, i32 %286, 1
  resume { i8*, i32 } %288

; <label>:289:                                    ; preds = %182
  %290 = landingpad { i8*, i32 }
          catch i8* null
  %291 = extractvalue { i8*, i32 } %290, 0
  call void @__clang_call_terminate(i8* %291) #11
  unreachable

; <label>:292:                                    ; preds = %237
  %293 = load i32, i32* @x.314
  %294 = load i32, i32* @y.315
  %295 = sub i32 0, 1
  %296 = add i32 %293, %295
  %297 = sub i32 %293, 1
  %298 = mul i32 %293, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %294, 10
  %302 = and i1 %300, %301
  %303 = xor i1 %300, %301
  %304 = or i1 %302, %303
  %305 = or i1 %300, %301
  br i1 %304, label %306, label %357

; <label>:306:                                    ; preds = %292, %357
  %307 = load i32, i32* @x.314
  %308 = load i32, i32* @y.315
  %309 = add i32 %307, -1115108974
  %310 = sub i32 %309, 1
  %311 = sub i32 %310, -1115108974
  %312 = sub i32 %307, 1
  %313 = mul i32 %307, %311
  %314 = urem i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = icmp slt i32 %308, 10
  %317 = xor i1 %315, true
  %318 = xor i1 %316, true
  %319 = xor i1 false, true
  %320 = and i1 %317, false
  %321 = and i1 %315, %319
  %322 = and i1 %318, false
  %323 = and i1 %316, %319
  %324 = or i1 %320, %321
  %325 = or i1 %322, %323
  %326 = xor i1 %324, %325
  %327 = or i1 %317, %318
  %328 = xor i1 %327, true
  %329 = or i1 false, %319
  %330 = and i1 %328, %329
  %331 = or i1 %326, %330
  %332 = or i1 %315, %316
  br i1 %331, label %333, label %357

; <label>:333:                                    ; preds = %306
  unreachable

; <label>:334:                                    ; preds = %51, %24
  store %"struct.max_flow::Edge"* null, %"struct.max_flow::Edge"** %7, align 8
  %335 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %336 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %335, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %336, i32 0, i32 0
  %338 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %337, align 8
  %339 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %340, i32 0, i32 1
  %342 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %341, align 8
  %343 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %344 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %345 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %344) #3
  br label %51

; <label>:346:                                    ; preds = %106, %91
  store %"struct.max_flow::Edge"* %90, %"struct.max_flow::Edge"** %7, align 8
  %347 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %348 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %347, i32 1
  store %"struct.max_flow::Edge"* %348, %"struct.max_flow::Edge"** %7, align 8
  br label %106

; <label>:349:                                    ; preds = %160, %133
  %350 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %351 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %350, i32 0, i32 0
  %352 = bitcast %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %351 to %"class.std::allocator.5"*
  %353 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %354 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %10) #3
  %355 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %353, i64 %354
  br label %160

; <label>:356:                                    ; preds = %218, %191
  br label %218

; <label>:357:                                    ; preds = %306, %292
  br label %306
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"* dereferenceable(12)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %9 = bitcast %"struct.max_flow::Edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.max_flow::Edge"*
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %12 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZSt7forwardIN8max_flow4EdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.max_flow::Edge"* dereferenceable(12) %11) #3
  %13 = bitcast %"struct.max_flow::Edge"* %10 to i8*
  %14 = bitcast %"struct.max_flow::Edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 12, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %13, %"class.std::vector.3"** %7
  %14 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %15 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %14) #3
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %17 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %16) #3
  %18 = sub i64 %15, -707988081904324147
  %19 = sub i64 %18, %17
  %20 = add i64 %19, -707988081904324147
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 282317746, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %157
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 282317746, label %28
    i32 1512932899, label %33
    i32 353510799, label %60
    i32 -601210186, label %77
    i32 -1195975057, label %78
    i32 -198738434, label %94
    i32 158173142, label %100
    i32 41865364, label %116
    i32 511926958, label %146
    i32 877140934, label %148
    i32 1652543433, label %150
    i32 -332070603, label %152
    i32 1911440735, label %154
  ]

; <label>:27:                                     ; preds = %25
  br label %157

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 1512932899, i32 -1195975057
  store i32 %32, i32* %23
  br label %157

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.318
  %35 = load i32, i32* @y.319
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 353510799, i32 -332070603
  store i32 %59, i32* %23
  br label %157

; <label>:60:                                     ; preds = %25
  %61 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %61) #12
  %62 = load i32, i32* @x.318
  %63 = load i32, i32* @y.319
  %64 = add i32 %62, -734435057
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -734435057
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -601210186, i32 -332070603
  store i32 %76, i32* %23
  br label %157

; <label>:77:                                     ; preds = %25
  unreachable

; <label>:78:                                     ; preds = %25
  %79 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %80 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %79) #3
  %81 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %82 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %81) #3
  store i64 %82, i64* %12, align 8
  %83 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %84 = load i64, i64* %83, align 8
  %85 = sub i64 %80, -2966073484018402431
  %86 = add i64 %85, %84
  %87 = add i64 %86, -2966073484018402431
  %88 = add i64 %80, %84
  store i64 %87, i64* %11, align 8
  %89 = load i64, i64* %11, align 8
  %90 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %91 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %90) #3
  %92 = icmp ult i64 %89, %91
  %93 = select i1 %92, i32 158173142, i32 -198738434
  store i32 %93, i32* %23
  br label %157

; <label>:94:                                     ; preds = %25
  %95 = load i64, i64* %11, align 8
  %96 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %97 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %96) #3
  %98 = icmp ugt i64 %95, %97
  %99 = select i1 %98, i32 158173142, i32 877140934
  store i32 %99, i32* %23
  br label %157

; <label>:100:                                    ; preds = %25
  %101 = load i32, i32* @x.318
  %102 = load i32, i32* @y.319
  %103 = sub i32 %101, -1156014127
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -1156014127
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 41865364, i32 1911440735
  store i32 %115, i32* %23
  br label %157

; <label>:116:                                    ; preds = %25
  %117 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %118 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %117) #3
  store i64 %118, i64* %4
  %119 = load i32, i32* @x.318
  %120 = load i32, i32* @y.319
  %121 = add i32 %119, -1181419936
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -1181419936
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 511926958, i32 1911440735
  store i32 %145, i32* %23
  br label %157

; <label>:146:                                    ; preds = %25
  store i32 1652543433, i32* %23
  %147 = load volatile i64, i64* %4
  store i64 %147, i64* %24
  br label %157

; <label>:148:                                    ; preds = %25
  %149 = load i64, i64* %11, align 8
  store i32 1652543433, i32* %23
  store i64 %149, i64* %24
  br label %157

; <label>:150:                                    ; preds = %25
  %151 = load i64, i64* %24
  ret i64 %151

; <label>:152:                                    ; preds = %25
  %153 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %153) #12
  store i32 353510799, i32* %23
  br label %157

; <label>:154:                                    ; preds = %25
  %155 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %156 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"* %155) #3
  store i32 41865364, i32* %23
  br label %157

; <label>:157:                                    ; preds = %154, %152, %148, %146, %116, %100, %94, %78, %60, %33, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN8max_flow4EdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.max_flow::Edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.320
  %9 = load i32, i32* @y.321
  %10 = add i32 %8, -1387986125
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1387986125
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 352345502, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %111
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 352345502, label %22
    i32 1984629705, label %42
    i32 -652041236, label %89
    i32 -1873381761, label %91
  ]

; <label>:21:                                     ; preds = %19
  br label %111

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1984629705, i32 -1873381761
  store i32 %41, i32* %18
  br label %111

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.max_flow::Edge"*, align 8
  %44 = alloca %"struct.max_flow::Edge"*, align 8
  %45 = alloca %"struct.max_flow::Edge"*, align 8
  %46 = alloca %"class.std::allocator.5"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %43, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %44, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %45, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %46, align 8
  %49 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %43, align 8
  %50 = call %"struct.max_flow::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.max_flow::Edge"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store %"struct.max_flow::Edge"* %50, %"struct.max_flow::Edge"** %51, align 8
  %52 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %44, align 8
  %53 = call %"struct.max_flow::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.max_flow::Edge"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  store %"struct.max_flow::Edge"* %53, %"struct.max_flow::Edge"** %54, align 8
  %55 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %45, align 8
  %56 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %60 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %59, align 8
  %61 = call %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN8max_flow4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.max_flow::Edge"* %58, %"struct.max_flow::Edge"* %60, %"struct.max_flow::Edge"* %55, %"class.std::allocator.5"* dereferenceable(1) %56)
  store %"struct.max_flow::Edge"* %61, %"struct.max_flow::Edge"** %5
  %62 = load i32, i32* @x.320
  %63 = load i32, i32* @y.321
  %64 = add i32 %62, 619210552
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 619210552
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -652041236, i32 -1873381761
  store i32 %88, i32* %18
  br label %111

; <label>:89:                                     ; preds = %19
  %90 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5
  ret %"struct.max_flow::Edge"* %90

; <label>:91:                                     ; preds = %19
  %92 = alloca %"struct.max_flow::Edge"*, align 8
  %93 = alloca %"struct.max_flow::Edge"*, align 8
  %94 = alloca %"struct.max_flow::Edge"*, align 8
  %95 = alloca %"class.std::allocator.5"*, align 8
  %96 = alloca %"class.std::move_iterator", align 8
  %97 = alloca %"class.std::move_iterator", align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %92, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %93, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %94, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %95, align 8
  %98 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %92, align 8
  %99 = call %"struct.max_flow::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.max_flow::Edge"* %98)
  %100 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  store %"struct.max_flow::Edge"* %99, %"struct.max_flow::Edge"** %100, align 8
  %101 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %93, align 8
  %102 = call %"struct.max_flow::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.max_flow::Edge"* %101)
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %97, i32 0, i32 0
  store %"struct.max_flow::Edge"* %102, %"struct.max_flow::Edge"** %103, align 8
  %104 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %94, align 8
  %105 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %95, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  %107 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %106, align 8
  %108 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %97, i32 0, i32 0
  %109 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %108, align 8
  %110 = call %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN8max_flow4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.max_flow::Edge"* %107, %"struct.max_flow::Edge"* %109, %"struct.max_flow::Edge"* %104, %"class.std::allocator.5"* dereferenceable(1) %105)
  store i32 1984629705, i32* %18
  br label %111

; <label>:111:                                    ; preds = %91, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.5"* dereferenceable(1), %"struct.max_flow::Edge"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.322
  %6 = load i32, i32* @y.323
  %7 = add i32 %5, 257611488
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 257611488
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 601311962, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 601311962, label %19
    i32 -1266891720, label %27
    i32 1035231168, label %60
    i32 -1489534574, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1266891720, i32 -1489534574
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  %29 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %28, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %29, align 8
  %30 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  %31 = bitcast %"class.std::allocator.5"* %30 to %"class.__gnu_cxx::new_allocator.6"*
  %32 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %31, %"struct.max_flow::Edge"* %32)
  %33 = load i32, i32* @x.322
  %34 = load i32, i32* @y.323
  %35 = sub i32 %33, -947528026
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -947528026
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1035231168, i32 -1489534574
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.5"*, align 8
  %63 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %62, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %63, align 8
  %64 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %62, align 8
  %65 = bitcast %"class.std::allocator.5"* %64 to %"class.__gnu_cxx::new_allocator.6"*
  %66 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.6"* %65, %"struct.max_flow::Edge"* %66)
  store i32 -1266891720, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.324
  %6 = load i32, i32* @y.325
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -448354629, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -448354629, label %18
    i32 -1931380227, label %26
    i32 -240582870, label %58
    i32 1112541401, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1931380227, i32 1112541401
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %27, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %28 to %"struct.std::_Vector_base.4"*
  %30 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %29) #3
  %31 = call i64 @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.5"* dereferenceable(1) %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.324
  %33 = load i32, i32* @y.325
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -240582870, i32 1112541401
  store i32 %57, i32* %14
  br label %66

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %61, align 8
  %62 = load %"class.std::vector.3"*, %"class.std::vector.3"** %61, align 8
  %63 = bitcast %"class.std::vector.3"* %62 to %"struct.std::_Vector_base.4"*
  %64 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIN8max_flow4EdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %63) #3
  %65 = call i64 @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.5"* dereferenceable(1) %64) #3
  store i32 -1931380227, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -322145444, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %119
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -322145444, label %17
    i32 459348097, label %22
    i32 1729728358, label %49
    i32 -140311924, label %78
    i32 47591185, label %79
    i32 1885993316, label %81
    i32 -467431486, label %97
    i32 115311957, label %113
    i32 1737633005, label %115
    i32 -1490702766, label %117
  ]

; <label>:16:                                     ; preds = %14
  br label %119

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 459348097, i32 47591185
  store i32 %21, i32* %13
  br label %119

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.326
  %24 = load i32, i32* @y.327
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 false, true
  %35 = and i1 %32, false
  %36 = and i1 %30, %34
  %37 = and i1 %33, false
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 false, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 1729728358, i32 1737633005
  store i32 %48, i32* %13
  br label %119

; <label>:49:                                     ; preds = %14
  %50 = load i64*, i64** %8, align 8
  store i64* %50, i64** %6, align 8
  %51 = load i32, i32* @x.326
  %52 = load i32, i32* @y.327
  %53 = sub i32 %51, -1099137124
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1099137124
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -140311924, i32 1737633005
  store i32 %77, i32* %13
  br label %119

; <label>:78:                                     ; preds = %14
  store i32 1885993316, i32* %13
  br label %119

; <label>:79:                                     ; preds = %14
  %80 = load i64*, i64** %7, align 8
  store i64* %80, i64** %6, align 8
  store i32 1885993316, i32* %13
  br label %119

; <label>:81:                                     ; preds = %14
  %82 = load i32, i32* @x.326
  %83 = load i32, i32* @y.327
  %84 = add i32 %82, 1226987629
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1226987629
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -467431486, i32 -1490702766
  store i32 %96, i32* %13
  br label %119

; <label>:97:                                     ; preds = %14
  %98 = load i64*, i64** %6, align 8
  store i64* %98, i64** %3
  %99 = load i32, i32* @x.326
  %100 = load i32, i32* @y.327
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 115311957, i32 -1490702766
  store i32 %112, i32* %13
  br label %119

; <label>:113:                                    ; preds = %14
  %114 = load volatile i64*, i64** %3
  ret i64* %114

; <label>:115:                                    ; preds = %14
  %116 = load i64*, i64** %8, align 8
  store i64* %116, i64** %6, align 8
  store i32 1729728358, i32* %13
  br label %119

; <label>:117:                                    ; preds = %14
  %118 = load i64*, i64** %6, align 8
  store i32 -467431486, i32* %13
  br label %119

; <label>:119:                                    ; preds = %117, %115, %97, %81, %79, %78, %49, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN8max_flow4EdgeEEE8max_sizeERKS2_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN8max_flow4EdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %12, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %20, align 8
  %22 = call %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_(%"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"* %21, %"struct.max_flow::Edge"* %17)
  ret %"struct.max_flow::Edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN8max_flow4EdgeESt13move_iteratorIS2_EET0_T_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %3, align 8
  %4 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN8max_flow4EdgeEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.max_flow::Edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  ret %"struct.max_flow::Edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %11, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %19, align 8
  %21 = call %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN8max_flow4EdgeEES5_EET0_T_S8_S7_(%"struct.max_flow::Edge"* %18, %"struct.max_flow::Edge"* %20, %"struct.max_flow::Edge"* %16)
  ret %"struct.max_flow::Edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN8max_flow4EdgeEES5_EET0_T_S8_S7_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %10, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %17 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = call %"struct.max_flow::Edge"* @_ZSt4copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_(%"struct.max_flow::Edge"* %17, %"struct.max_flow::Edge"* %19, %"struct.max_flow::Edge"* %15)
  ret %"struct.max_flow::Edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt4copyISt13move_iteratorIPN8max_flow4EdgeEES3_ET0_T_S6_S5_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %10, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %13, align 8
  %15 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseISt13move_iteratorIPN8max_flow4EdgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.max_flow::Edge"* %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %18, align 8
  %20 = call %"struct.max_flow::Edge"* @_ZSt12__miter_baseISt13move_iteratorIPN8max_flow4EdgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.max_flow::Edge"* %19)
  %21 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %22 = call %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"* %15, %"struct.max_flow::Edge"* %20, %"struct.max_flow::Edge"* %21)
  ret %"struct.max_flow::Edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt14__copy_move_a2ILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %6, align 8
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %8 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %7)
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %10 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %9)
  %11 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %12 = call %"struct.max_flow::Edge"* @_ZSt12__niter_baseIPN8max_flow4EdgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.max_flow::Edge"* %11)
  %13 = call %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"* %8, %"struct.max_flow::Edge"* %10, %"struct.max_flow::Edge"* %12)
  ret %"struct.max_flow::Edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt12__miter_baseISt13move_iteratorIPN8max_flow4EdgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.max_flow::Edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::move_iterator", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %8 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %9 = call %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN8max_flow4EdgeEELb1EE7_S_baseES4_(%"struct.max_flow::Edge"* %8)
  ret %"struct.max_flow::Edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZSt13__copy_move_aILb1EPN8max_flow4EdgeES2_ET1_T0_S4_S3_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #0 comdat {
  %4 = alloca %"struct.max_flow::Edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.344
  %8 = load i32, i32* @y.345
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 565212996, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 565212996, label %20
    i32 1122219640, label %28
    i32 -1837063964, label %63
    i32 -1452207927, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1122219640, i32 -1452207927
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.max_flow::Edge"*, align 8
  %30 = alloca %"struct.max_flow::Edge"*, align 8
  %31 = alloca %"struct.max_flow::Edge"*, align 8
  %32 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %29, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %30, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %34 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %30, align 8
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %31, align 8
  %36 = call %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"* %33, %"struct.max_flow::Edge"* %34, %"struct.max_flow::Edge"* %35)
  store %"struct.max_flow::Edge"* %36, %"struct.max_flow::Edge"** %4
  %37 = load i32, i32* @x.344
  %38 = load i32, i32* @y.345
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1837063964, i32 -1452207927
  store i32 %62, i32* %16
  br label %74

; <label>:63:                                     ; preds = %17
  %64 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4
  ret %"struct.max_flow::Edge"* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca %"struct.max_flow::Edge"*, align 8
  %67 = alloca %"struct.max_flow::Edge"*, align 8
  %68 = alloca %"struct.max_flow::Edge"*, align 8
  %69 = alloca i8, align 1
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %66, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %67, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %68, align 8
  store i8 1, i8* %69, align 1
  %70 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %66, align 8
  %71 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %67, align 8
  %72 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %68, align 8
  %73 = call %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"* %70, %"struct.max_flow::Edge"* %71, %"struct.max_flow::Edge"* %72)
  store i32 1122219640, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN8max_flow4EdgeEEEPT_PKS5_S8_S6_(%"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.max_flow::Edge"*, align 8
  %6 = alloca %"struct.max_flow::Edge"*, align 8
  %7 = alloca %"struct.max_flow::Edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %5, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %6, align 8
  store %"struct.max_flow::Edge"* %2, %"struct.max_flow::Edge"** %7, align 8
  %9 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %6, align 8
  %10 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %11 = ptrtoint %"struct.max_flow::Edge"* %9 to i64
  %12 = ptrtoint %"struct.max_flow::Edge"* %10 to i64
  %13 = sub i64 %11, 8739493241279810554
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 8739493241279810554
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 12
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 206668694, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 206668694, label %23
    i32 472797072, label %27
    i32 729833261, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 472797072, i32 729833261
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %29 = bitcast %"struct.max_flow::Edge"* %28 to i8*
  %30 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %5, align 8
  %31 = bitcast %"struct.max_flow::Edge"* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 12, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 729833261, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %35, i64 %36
  ret %"struct.max_flow::Edge"* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN8max_flow4EdgeEELb1EE7_S_baseES4_(%"struct.max_flow::Edge"*) #0 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.348
  %6 = load i32, i32* @y.349
  %7 = sub i32 %5, 1104758806
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1104758806
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 221809221, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 221809221, label %19
    i32 655483508, label %27
    i32 -1558071881, label %46
    i32 1235522349, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 655483508, i32 1235522349
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator", align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %29, align 8
  %30 = call %"struct.max_flow::Edge"* @_ZNKSt13move_iteratorIPN8max_flow4EdgeEE4baseEv(%"class.std::move_iterator"* %28)
  store %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"** %2
  %31 = load i32, i32* @x.348
  %32 = load i32, i32* @y.349
  %33 = sub i32 %31, 1631324275
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1631324275
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1558071881, i32 1235522349
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::move_iterator", align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %49, i32 0, i32 0
  store %"struct.max_flow::Edge"* %0, %"struct.max_flow::Edge"** %50, align 8
  %51 = call %"struct.max_flow::Edge"* @_ZNKSt13move_iteratorIPN8max_flow4EdgeEE4baseEv(%"class.std::move_iterator"* %49)
  store i32 655483508, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.max_flow::Edge"* @_ZNKSt13move_iteratorIPN8max_flow4EdgeEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.350
  %6 = load i32, i32* @y.351
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1046971312, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1046971312, label %18
    i32 -1932480097, label %26
    i32 -1267857580, label %46
    i32 948180404, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1932480097, i32 948180404
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %27, align 8
  %28 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %27, align 8
  %29 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  %30 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  store %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"** %2
  %31 = load i32, i32* @x.350
  %32 = load i32, i32* @y.351
  %33 = add i32 %31, 13169232
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 13169232
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1267857580, i32 948180404
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %51, align 8
  store i32 -1932480097, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN8max_flow4EdgeEEC2ES2_(%"class.std::move_iterator"*, %"struct.max_flow::Edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  store %"struct.max_flow::Edge"* %7, %"struct.max_flow::Edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN8max_flow4EdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.6"*, %"struct.max_flow::Edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"struct.max_flow::Edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"struct.max_flow::Edge"* %1, %"struct.max_flow::Edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  %6 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN8max_flow3bfsEi(%struct.max_flow*, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.356
  %4 = load i32, i32* @y.357
  %5 = add i32 %3, -1473687003
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1473687003
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %302

; <label>:17:                                     ; preds = %2, %302
  %18 = alloca %struct.max_flow*, align 8
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::queue", align 8
  %22 = alloca %"class.std::deque", align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = alloca i32, align 4
  %26 = alloca %"class.std::vector.3"*, align 8
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"struct.max_flow::Edge"*, align 8
  store %struct.max_flow* %0, %struct.max_flow** %18, align 8
  store i32 %1, i32* %19, align 4
  %30 = load %struct.max_flow*, %struct.max_flow** %18, align 8
  %31 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 3
  %32 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 0
  %33 = load i32, i32* %32, align 8
  %34 = sext i32 %33 to i64
  store i32 -1, i32* %20, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"* %31, i64 %34, i32* dereferenceable(4) %20)
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %22)
  %35 = load i32, i32* @x.356
  %36 = load i32, i32* @y.357
  %37 = add i32 %35, 1857288206
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1857288206
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %302

; <label>:61:                                     ; preds = %17
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %21, %"class.std::deque"* dereferenceable(80) %22)
          to label %62 unwind label %201

; <label>:62:                                     ; preds = %61
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %22) #3
  %63 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 3
  %64 = load i32, i32* %19, align 4
  %65 = sext i32 %64 to i64
  %66 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %63, i64 %65) #3
  store i32 0, i32* %66, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %21, i32* dereferenceable(4) %19)
          to label %67 unwind label %247

; <label>:67:                                     ; preds = %62
  br label %68

; <label>:68:                                     ; preds = %295, %67
  %69 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %21)
          to label %70 unwind label %247

; <label>:70:                                     ; preds = %68
  %71 = load i32, i32* @x.356
  %72 = load i32, i32* @y.357
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %320

; <label>:84:                                     ; preds = %70, %320
  %85 = xor i1 %69, true
  %86 = and i1 false, %85
  %87 = xor i1 false, true
  %88 = and i1 %69, %87
  %89 = xor i1 true, true
  %90 = and i1 %89, false
  %91 = and i1 true, %87
  %92 = or i1 %86, %88
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = xor i1 %69, true
  %96 = load i32, i32* @x.356
  %97 = load i32, i32* @y.357
  %98 = sub i32 0, 1
  %99 = add i32 %96, %98
  %100 = sub i32 %96, 1
  %101 = mul i32 %96, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %97, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  br i1 %119, label %121, label %320

; <label>:121:                                    ; preds = %84
  br i1 %94, label %122, label %296

; <label>:122:                                    ; preds = %121
  %123 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %21)
          to label %124 unwind label %247

; <label>:124:                                    ; preds = %122
  %125 = load i32, i32* %123, align 4
  store i32 %125, i32* %25, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %21)
          to label %126 unwind label %247

; <label>:126:                                    ; preds = %124
  %127 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 1
  %128 = load i32, i32* %25, align 4
  %129 = sext i32 %128 to i64
  %130 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %127, i64 %129) #3
  store %"class.std::vector.3"* %130, %"class.std::vector.3"** %26, align 8
  %131 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %132 = call %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE5beginEv(%"class.std::vector.3"* %131) #3
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %27, i32 0, i32 0
  store %"struct.max_flow::Edge"* %132, %"struct.max_flow::Edge"** %133, align 8
  %134 = load %"class.std::vector.3"*, %"class.std::vector.3"** %26, align 8
  %135 = call %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EE3endEv(%"class.std::vector.3"* %134) #3
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store %"struct.max_flow::Edge"* %135, %"struct.max_flow::Edge"** %136, align 8
  br label %137

; <label>:137:                                    ; preds = %293, %126
  %138 = load i32, i32* @x.356
  %139 = load i32, i32* @y.357
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  br i1 %149, label %151, label %369

; <label>:151:                                    ; preds = %137, %369
  %152 = call zeroext i1 @_ZN9__gnu_cxxneIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %27, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %28) #3
  %153 = load i32, i32* @x.356
  %154 = load i32, i32* @y.357
  %155 = add i32 %153, -664767615
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, -664767615
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %369

; <label>:167:                                    ; preds = %151
  br i1 %152, label %168, label %295

; <label>:168:                                    ; preds = %167
  %169 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %27) #3
  store %"struct.max_flow::Edge"* %169, %"struct.max_flow::Edge"** %29, align 8
  %170 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %171 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = icmp sgt i32 %172, 0
  br i1 %173, label %174, label %292

; <label>:174:                                    ; preds = %168
  %175 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 3
  %176 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %177 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %176, i32 0, i32 0
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %175, i64 %179) #3
  %181 = load i32, i32* %180, align 4
  %182 = icmp slt i32 %181, 0
  br i1 %182, label %183, label %292

; <label>:183:                                    ; preds = %174
  %184 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 3
  %185 = load i32, i32* %25, align 4
  %186 = sext i32 %185 to i64
  %187 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %184, i64 %186) #3
  %188 = load i32, i32* %187, align 4
  %189 = sub i32 0, 1
  %190 = sub i32 %188, %189
  %191 = add nsw i32 %188, 1
  %192 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %30, i32 0, i32 3
  %193 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %194 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %193, i32 0, i32 0
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %192, i64 %196) #3
  store i32 %190, i32* %197, align 4
  %198 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  %199 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %198, i32 0, i32 0
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %21, i32* dereferenceable(4) %199)
          to label %200 unwind label %247

; <label>:200:                                    ; preds = %183
  br label %292

; <label>:201:                                    ; preds = %61
  %202 = load i32, i32* @x.356
  %203 = load i32, i32* @y.357
  %204 = sub i32 %202, 1919886608
  %205 = sub i32 %204, 1
  %206 = add i32 %205, 1919886608
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  br i1 %214, label %216, label %371

; <label>:216:                                    ; preds = %201, %371
  %217 = landingpad { i8*, i32 }
          cleanup
  %218 = extractvalue { i8*, i32 } %217, 0
  store i8* %218, i8** %23, align 8
  %219 = extractvalue { i8*, i32 } %217, 1
  store i32 %219, i32* %24, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %22) #3
  %220 = load i32, i32* @x.356
  %221 = load i32, i32* @y.357
  %222 = sub i32 %220, 749353417
  %223 = sub i32 %222, 1
  %224 = add i32 %223, 749353417
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 true, true
  %233 = and i1 %230, true
  %234 = and i1 %228, %232
  %235 = and i1 %231, true
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 true, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %371

; <label>:246:                                    ; preds = %216
  br label %297

; <label>:247:                                    ; preds = %183, %124, %122, %68, %62
  %248 = load i32, i32* @x.356
  %249 = load i32, i32* @y.357
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  br i1 %259, label %261, label %375

; <label>:261:                                    ; preds = %247, %375
  %262 = landingpad { i8*, i32 }
          cleanup
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %23, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %24, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %21) #3
  %265 = load i32, i32* @x.356
  %266 = load i32, i32* @y.357
  %267 = sub i32 %265, 1595755773
  %268 = sub i32 %267, 1
  %269 = add i32 %268, 1595755773
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 true, true
  %278 = and i1 %275, true
  %279 = and i1 %273, %277
  %280 = and i1 %276, true
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 true, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  br i1 %289, label %291, label %375

; <label>:291:                                    ; preds = %261
  br label %297

; <label>:292:                                    ; preds = %200, %174, %168
  br label %293

; <label>:293:                                    ; preds = %292
  %294 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"* %27) #3
  br label %137

; <label>:295:                                    ; preds = %167
  br label %68

; <label>:296:                                    ; preds = %121
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %21) #3
  ret void

; <label>:297:                                    ; preds = %291, %246
  %298 = load i8*, i8** %23, align 8
  %299 = load i32, i32* %24, align 4
  %300 = insertvalue { i8*, i32 } undef, i8* %298, 0
  %301 = insertvalue { i8*, i32 } %300, i32 %299, 1
  resume { i8*, i32 } %301

; <label>:302:                                    ; preds = %17, %2
  %303 = alloca %struct.max_flow*, align 8
  %304 = alloca i32, align 4
  %305 = alloca i32, align 4
  %306 = alloca %"class.std::queue", align 8
  %307 = alloca %"class.std::deque", align 8
  %308 = alloca i8*
  %309 = alloca i32
  %310 = alloca i32, align 4
  %311 = alloca %"class.std::vector.3"*, align 8
  %312 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %313 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %314 = alloca %"struct.max_flow::Edge"*, align 8
  store %struct.max_flow* %0, %struct.max_flow** %303, align 8
  store i32 %1, i32* %304, align 4
  %315 = load %struct.max_flow*, %struct.max_flow** %303, align 8
  %316 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %315, i32 0, i32 3
  %317 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %315, i32 0, i32 0
  %318 = load i32, i32* %317, align 8
  %319 = sext i32 %318 to i64
  store i32 -1, i32* %305, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"* %316, i64 %319, i32* dereferenceable(4) %305)
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %307)
  br label %17

; <label>:320:                                    ; preds = %84, %70
  %321 = shl i1 %69, true
  %322 = sub i1 %69, true
  %323 = sub i1 %322, true
  %324 = add i1 %323, true
  %325 = sub i1 %69, true
  %326 = mul i1 %324, true
  %327 = sub i1 false, false
  %328 = sub i1 %327, %69
  %329 = add i1 %328, false
  %330 = sub i1 false, %69
  %331 = add i1 %329, true
  %332 = add i1 %331, true
  %333 = sub i1 %332, true
  %334 = add i1 %329, true
  %335 = sub i1 false, false
  %336 = sub i1 %335, %69
  %337 = add i1 %336, false
  %338 = sub i1 false, %69
  %339 = add i1 %337, true
  %340 = add i1 %339, true
  %341 = sub i1 %340, true
  %342 = add i1 %337, true
  %343 = shl i1 %69, true
  %344 = sub i1 false, true
  %345 = add i1 %69, %344
  %346 = sub i1 %69, true
  %347 = mul i1 %345, true
  %348 = sub i1 %69, false
  %349 = sub i1 %348, true
  %350 = add i1 %349, false
  %351 = sub i1 %69, true
  %352 = mul i1 %350, true
  %353 = add i1 %69, false
  %354 = sub i1 %353, true
  %355 = sub i1 %354, false
  %356 = sub i1 %69, true
  %357 = mul i1 %355, true
  %358 = xor i1 %69, true
  %359 = and i1 false, %358
  %360 = xor i1 false, true
  %361 = and i1 %69, %360
  %362 = xor i1 true, true
  %363 = and i1 %362, false
  %364 = and i1 true, %360
  %365 = or i1 %359, %361
  %366 = or i1 %363, %364
  %367 = xor i1 %365, %366
  %368 = xor i1 %69, true
  br label %84

; <label>:369:                                    ; preds = %151, %137
  %370 = call zeroext i1 @_ZN9__gnu_cxxneIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %27, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %28) #3
  br label %151

; <label>:371:                                    ; preds = %216, %201
  %372 = landingpad { i8*, i32 }
          cleanup
  %373 = extractvalue { i8*, i32 } %372, 0
  store i8* %373, i8** %23, align 8
  %374 = extractvalue { i8*, i32 } %372, 1
  store i32 %374, i32* %24, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %22) #3
  br label %216

; <label>:375:                                    ; preds = %261, %247
  %376 = landingpad { i8*, i32 }
          cleanup
  %377 = extractvalue { i8*, i32 } %376, 0
  store i8* %377, i8** %23, align 8
  %378 = extractvalue { i8*, i32 } %376, 1
  store i32 %378, i32* %24, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %21) #3
  br label %261
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"*, i64) #5 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.358
  %7 = load i32, i32* @y.359
  %8 = add i32 %6, 933630531
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 933630531
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1661106383, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1661106383, label %20
    i32 1497757311, label %28
    i32 810768805, label %65
    i32 -1164861606, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1497757311, i32 -1164861606
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %32 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  store i32* %37, i32** %3
  %38 = load i32, i32* @x.358
  %39 = load i32, i32* @y.359
  %40 = add i32 %38, 868383703
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 868383703
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 810768805, i32 -1164861606
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i32*, i32** %3
  ret i32* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.8"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  %71 = bitcast %"class.std::vector.8"* %70 to %"struct.std::_Vector_base.9"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds i32, i32* %74, i64 %75
  store i32 1497757311, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.8"* %7, i64 %8, i32* dereferenceable(4) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN8max_flow3dfsEiii(%struct.max_flow*, i32, i32, i32) #0 comdat align 2 {
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca %struct.max_flow*
  %8 = alloca i64, align 8
  %9 = alloca %struct.max_flow*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32*, align 8
  %14 = alloca %"struct.max_flow::Edge"*, align 8
  %15 = alloca i64, align 8
  store %struct.max_flow* %0, %struct.max_flow** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i32 %3, i32* %12, align 4
  %16 = load %struct.max_flow*, %struct.max_flow** %9, align 8
  store %struct.max_flow* %16, %struct.max_flow** %7
  %17 = load i32, i32* %10, align 4
  store i32 %17, i32* %6
  %18 = load i32, i32* %11, align 4
  store i32 %18, i32* %5
  %19 = alloca i32
  store i32 1590938611, i32* %19
  br label %20

; <label>:20:                                     ; preds = %4, %290
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1590938611, label %23
    i32 1024731572, label %28
    i32 -504090035, label %31
    i32 641992239, label %59
    i32 2068948939, label %80
    i32 1590179934, label %81
    i32 1254685908, label %93
    i32 -1336178081, label %108
    i32 -1447769187, label %125
    i32 1596404263, label %139
    i32 1419545433, label %172
    i32 1468747176, label %188
    i32 -1719674887, label %204
    i32 -1833434152, label %205
    i32 931000797, label %206
    i32 -503799743, label %222
    i32 869785652, label %256
    i32 -671343774, label %257
    i32 -1642322509, label %258
    i32 1461433685, label %260
    i32 -1477304384, label %266
    i32 1114665488, label %267
  ]

; <label>:22:                                     ; preds = %20
  br label %290

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32, i32* %6
  %25 = load volatile i32, i32* %5
  %26 = icmp eq i32 %24, %25
  %27 = select i1 %26, i32 1024731572, i32 -504090035
  store i32 %27, i32* %19
  br label %290

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* %12, align 4
  %30 = sext i32 %29 to i64
  store i64 %30, i64* %8, align 8
  store i32 -1642322509, i32* %19
  br label %290

; <label>:31:                                     ; preds = %20
  %32 = load i32, i32* @x.362
  %33 = load i32, i32* @y.363
  %34 = add i32 %32, 1630670460
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1630670460
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 641992239, i32 1461433685
  store i32 %58, i32* %19
  br label %290

; <label>:59:                                     ; preds = %20
  %60 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %61 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %60, i32 0, i32 2
  %62 = load i32, i32* %10, align 4
  %63 = sext i32 %62 to i64
  %64 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %61, i64 %63) #3
  store i32* %64, i32** %13, align 8
  %65 = load i32, i32* @x.362
  %66 = load i32, i32* @y.363
  %67 = sub i32 %65, -660332165
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -660332165
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 2068948939, i32 1461433685
  store i32 %79, i32* %19
  br label %290

; <label>:80:                                     ; preds = %20
  store i32 1590179934, i32* %19
  br label %290

; <label>:81:                                     ; preds = %20
  %82 = load i32*, i32** %13, align 8
  %83 = load i32, i32* %82, align 4
  %84 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %85 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %84, i32 0, i32 1
  %86 = load i32, i32* %10, align 4
  %87 = sext i32 %86 to i64
  %88 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %85, i64 %87) #3
  %89 = call i64 @_ZNKSt6vectorIN8max_flow4EdgeESaIS1_EE4sizeEv(%"class.std::vector.3"* %88) #3
  %90 = trunc i64 %89 to i32
  %91 = icmp slt i32 %83, %90
  %92 = select i1 %91, i32 1254685908, i32 -671343774
  store i32 %92, i32* %19
  br label %290

; <label>:93:                                     ; preds = %20
  %94 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %95 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %94, i32 0, i32 1
  %96 = load i32, i32* %10, align 4
  %97 = sext i32 %96 to i64
  %98 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %95, i64 %97) #3
  %99 = load i32*, i32** %13, align 8
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEixEm(%"class.std::vector.3"* %98, i64 %101) #3
  store %"struct.max_flow::Edge"* %102, %"struct.max_flow::Edge"** %14, align 8
  %103 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %104 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %103, i32 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = icmp sgt i32 %105, 0
  %107 = select i1 %106, i32 -1336178081, i32 -1833434152
  store i32 %107, i32* %19
  br label %290

; <label>:108:                                    ; preds = %20
  %109 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %110 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %109, i32 0, i32 3
  %111 = load i32, i32* %10, align 4
  %112 = sext i32 %111 to i64
  %113 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %110, i64 %112) #3
  %114 = load i32, i32* %113, align 4
  %115 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %116 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %115, i32 0, i32 3
  %117 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %118 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %117, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %116, i64 %120) #3
  %122 = load i32, i32* %121, align 4
  %123 = icmp slt i32 %114, %122
  %124 = select i1 %123, i32 -1447769187, i32 -1833434152
  store i32 %124, i32* %19
  br label %290

; <label>:125:                                    ; preds = %20
  %126 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %127 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %126, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = load i32, i32* %11, align 4
  %130 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %131 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %130, i32 0, i32 1
  %132 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %12, i32* dereferenceable(4) %131)
  %133 = load i32, i32* %132, align 4
  %134 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %135 = call i64 @_ZN8max_flow3dfsEiii(%struct.max_flow* %134, i32 %128, i32 %129, i32 %133)
  store i64 %135, i64* %15, align 8
  %136 = load i64, i64* %15, align 8
  %137 = icmp sgt i64 %136, 0
  %138 = select i1 %137, i32 1596404263, i32 1419545433
  store i32 %138, i32* %19
  br label %290

; <label>:139:                                    ; preds = %20
  %140 = load i64, i64* %15, align 8
  %141 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %142 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %141, i32 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = sext i32 %143 to i64
  %145 = sub i64 %144, -8420816006081705599
  %146 = sub i64 %145, %140
  %147 = add i64 %146, -8420816006081705599
  %148 = sub nsw i64 %144, %140
  %149 = trunc i64 %147 to i32
  store i32 %149, i32* %142, align 4
  %150 = load i64, i64* %15, align 8
  %151 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %152 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %151, i32 0, i32 1
  %153 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %154 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %153, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = sext i32 %155 to i64
  %157 = call dereferenceable(24) %"class.std::vector.3"* @_ZNSt6vectorIS_IN8max_flow4EdgeESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %152, i64 %156) #3
  %158 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %14, align 8
  %159 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %158, i32 0, i32 2
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = call dereferenceable(12) %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEixEm(%"class.std::vector.3"* %157, i64 %161) #3
  %163 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %162, i32 0, i32 1
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = sub i64 %165, 7249870898917101627
  %167 = add i64 %166, %150
  %168 = add i64 %167, 7249870898917101627
  %169 = add nsw i64 %165, %150
  %170 = trunc i64 %168 to i32
  store i32 %170, i32* %163, align 4
  %171 = load i64, i64* %15, align 8
  store i64 %171, i64* %8, align 8
  store i32 -1642322509, i32* %19
  br label %290

; <label>:172:                                    ; preds = %20
  %173 = load i32, i32* @x.362
  %174 = load i32, i32* @y.363
  %175 = add i32 %173, 1037170729
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 1037170729
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  %187 = select i1 %185, i32 1468747176, i32 -1477304384
  store i32 %187, i32* %19
  br label %290

; <label>:188:                                    ; preds = %20
  %189 = load i32, i32* @x.362
  %190 = load i32, i32* @y.363
  %191 = add i32 %189, -1289041063
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, -1289041063
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  %203 = select i1 %201, i32 -1719674887, i32 -1477304384
  store i32 %203, i32* %19
  br label %290

; <label>:204:                                    ; preds = %20
  store i32 -1833434152, i32* %19
  br label %290

; <label>:205:                                    ; preds = %20
  store i32 931000797, i32* %19
  br label %290

; <label>:206:                                    ; preds = %20
  %207 = load i32, i32* @x.362
  %208 = load i32, i32* @y.363
  %209 = add i32 %207, -1935310134
  %210 = sub i32 %209, 1
  %211 = sub i32 %210, -1935310134
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  %221 = select i1 %219, i32 -503799743, i32 1114665488
  store i32 %221, i32* %19
  br label %290

; <label>:222:                                    ; preds = %20
  %223 = load i32*, i32** %13, align 8
  %224 = load i32, i32* %223, align 4
  %225 = add i32 %224, 1425086439
  %226 = add i32 %225, 1
  %227 = sub i32 %226, 1425086439
  %228 = add nsw i32 %224, 1
  store i32 %227, i32* %223, align 4
  %229 = load i32, i32* @x.362
  %230 = load i32, i32* @y.363
  %231 = add i32 %229, -100995927
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, -100995927
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = xor i1 %237, true
  %240 = xor i1 %238, true
  %241 = xor i1 false, true
  %242 = and i1 %239, false
  %243 = and i1 %237, %241
  %244 = and i1 %240, false
  %245 = and i1 %238, %241
  %246 = or i1 %242, %243
  %247 = or i1 %244, %245
  %248 = xor i1 %246, %247
  %249 = or i1 %239, %240
  %250 = xor i1 %249, true
  %251 = or i1 false, %241
  %252 = and i1 %250, %251
  %253 = or i1 %248, %252
  %254 = or i1 %237, %238
  %255 = select i1 %253, i32 869785652, i32 1114665488
  store i32 %255, i32* %19
  br label %290

; <label>:256:                                    ; preds = %20
  store i32 1590179934, i32* %19
  br label %290

; <label>:257:                                    ; preds = %20
  store i64 0, i64* %8, align 8
  store i32 -1642322509, i32* %19
  br label %290

; <label>:258:                                    ; preds = %20
  %259 = load i64, i64* %8, align 8
  ret i64 %259

; <label>:260:                                    ; preds = %20
  %261 = load volatile %struct.max_flow*, %struct.max_flow** %7
  %262 = getelementptr inbounds %struct.max_flow, %struct.max_flow* %261, i32 0, i32 2
  %263 = load i32, i32* %10, align 4
  %264 = sext i32 %263 to i64
  %265 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.8"* %262, i64 %264) #3
  store i32* %265, i32** %13, align 8
  store i32 641992239, i32* %19
  br label %290

; <label>:266:                                    ; preds = %20
  store i32 1468747176, i32* %19
  br label %290

; <label>:267:                                    ; preds = %20
  %268 = load i32*, i32** %13, align 8
  %269 = load i32, i32* %268, align 4
  %270 = shl i32 %269, 1
  %271 = shl i32 %269, 1
  %272 = shl i32 %269, 1
  %273 = shl i32 %269, 1
  %274 = sub i32 %269, 1986206672
  %275 = sub i32 %274, 1
  %276 = add i32 %275, 1986206672
  %277 = sub i32 %269, 1
  %278 = mul i32 %276, 1
  %279 = shl i32 %269, 1
  %280 = sub i32 %269, -1803843861
  %281 = sub i32 %280, 1
  %282 = add i32 %281, -1803843861
  %283 = sub i32 %269, 1
  %284 = mul i32 %282, 1
  %285 = shl i32 %269, 1
  %286 = sub i32 %269, -2000106548
  %287 = add i32 %286, 1
  %288 = add i32 %287, -2000106548
  %289 = add nsw i32 %269, 1
  store i32 %288, i32* %268, align 4
  store i32 -503799743, i32* %19
  br label %290

; <label>:290:                                    ; preds = %267, %266, %260, %257, %256, %222, %206, %205, %204, %188, %172, %139, %125, %108, %93, %81, %80, %59, %31, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.10"* dereferenceable(1) %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %11) #3
  ret void

; <label>:12:                                     ; preds = %1
  %13 = load i32, i32* @x.368
  %14 = load i32, i32* @y.369
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %101

; <label>:26:                                     ; preds = %12, %101
  %27 = landingpad { i8*, i32 }
          catch i8* null
  %28 = extractvalue { i8*, i32 } %27, 0
  store i8* %28, i8** %5, align 8
  %29 = extractvalue { i8*, i32 } %27, 1
  store i32 %29, i32* %6, align 4
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %30) #3
  %31 = load i32, i32* @x.368
  %32 = load i32, i32* @y.369
  %33 = sub i32 %31, 45411838
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 45411838
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %101

; <label>:57:                                     ; preds = %26
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i32, i32* @x.368
  %60 = load i32, i32* @y.369
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %106

; <label>:72:                                     ; preds = %58, %106
  %73 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %73) #11
  %74 = load i32, i32* @x.368
  %75 = load i32, i32* @y.369
  %76 = sub i32 %74, -1721014480
  %77 = sub i32 %76, 1
  %78 = add i32 %77, -1721014480
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %106

; <label>:100:                                    ; preds = %72
  unreachable

; <label>:101:                                    ; preds = %26, %12
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %5, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %6, align 4
  %105 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %105) #3
  br label %26

; <label>:106:                                    ; preds = %72, %58
  %107 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %107) #11
  br label %72
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.374
  %6 = load i32, i32* @y.375
  %7 = sub i32 %5, 63795561
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 63795561
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1770644663, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1770644663, label %19
    i32 1276131482, label %27
    i32 161768984, label %59
    i32 1296665323, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1276131482, i32 1296665323
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %28, align 8
  %29 = load %"class.std::queue"*, %"class.std::queue"** %28, align 8
  %30 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %29, i32 0, i32 0
  %31 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %30) #3
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.374
  %33 = load i32, i32* @y.375
  %34 = add i32 %32, 1083338356
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1083338356
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 161768984, i32 1296665323
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %62, align 8
  %63 = load %"class.std::queue"*, %"class.std::queue"** %62, align 8
  %64 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %63, i32 0, i32 0
  %65 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %64) #3
  store i32 1276131482, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.378
  %7 = load i32, i32* @y.379
  %8 = sub i32 %6, -1370632242
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1370632242
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -402814194, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -402814194, label %20
    i32 563761303, label %40
    i32 1009948621, label %77
    i32 -1817010000, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 563761303, i32 -1817010000
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %41, align 8
  %44 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %43) #3
  %45 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %42, align 8
  %47 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %46) #3
  %48 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %47, align 8
  %49 = icmp ne %"struct.max_flow::Edge"* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.378
  %51 = load i32, i32* @y.379
  %52 = sub i32 %50, -116274390
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -116274390
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1009948621, i32 -1817010000
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile i1, i1* %3
  ret i1 %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %80, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %81, align 8
  %82 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %80, align 8
  %83 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %82) #3
  %84 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %83, align 8
  %85 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %81, align 8
  %86 = call dereferenceable(8) %"struct.max_flow::Edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %85) #3
  %87 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %86, align 8
  %88 = icmp ne %"struct.max_flow::Edge"* %84, %87
  store i32 563761303, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.max_flow::Edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"struct.max_flow::Edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.380
  %6 = load i32, i32* @y.381
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 714137949, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 714137949, label %18
    i32 2113806848, label %26
    i32 -1295592095, label %45
    i32 -1140065125, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2113806848, i32 -1140065125
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  %30 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %29, align 8
  store %"struct.max_flow::Edge"* %30, %"struct.max_flow::Edge"** %2
  %31 = load i32, i32* @x.380
  %32 = load i32, i32* @y.381
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1295592095, i32 -1140065125
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %2
  ret %"struct.max_flow::Edge"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %48, align 8
  %49 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %49, i32 0, i32 0
  %51 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %50, align 8
  store i32 2113806848, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN8max_flow4EdgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %5 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %5, i32 1
  store %"struct.max_flow::Edge"* %6, %"struct.max_flow::Edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.15"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.384
  %5 = load i32, i32* @y.385
  %6 = sub i32 %4, 943954090
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 943954090
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1914533395, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1914533395, label %18
    i32 507594046, label %38
    i32 842753868, label %57
    i32 -2034834081, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 507594046, i32 -2034834081
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %39, align 8
  %40 = load %"class.std::queue"*, %"class.std::queue"** %39, align 8
  %41 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %40, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %41) #3
  %42 = load i32, i32* @x.384
  %43 = load i32, i32* @y.385
  %44 = sub i32 %42, -375512208
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -375512208
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 842753868, i32 -2034834081
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %59, align 8
  %60 = load %"class.std::queue"*, %"class.std::queue"** %59, align 8
  %61 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %60, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %61) #3
  store i32 507594046, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %8

; <label>:7:                                      ; preds = %1
  ret void

; <label>:8:                                      ; preds = %1
  %9 = landingpad { i8*, i32 }
          cleanup
  %10 = extractvalue { i8*, i32 } %9, 0
  store i8* %10, i8** %3, align 8
  %11 = extractvalue { i8*, i32 } %9, 1
  store i32 %11, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #3
  br label %12

; <label>:12:                                     ; preds = %8
  %13 = load i32, i32* @x.386
  %14 = load i32, i32* @y.387
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  br i1 %24, label %26, label %58

; <label>:26:                                     ; preds = %12, %58
  %27 = load i8*, i8** %3, align 8
  %28 = load i32, i32* %4, align 4
  %29 = insertvalue { i8*, i32 } undef, i8* %27, 0
  %30 = insertvalue { i8*, i32 } %29, i32 %28, 1
  %31 = load i32, i32* @x.386
  %32 = load i32, i32* @y.387
  %33 = sub i32 %31, -1959299680
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1959299680
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %58

; <label>:57:                                     ; preds = %26
  resume { i8*, i32 } %30

; <label>:58:                                     ; preds = %26, %12
  %59 = load i8*, i8** %3, align 8
  %60 = load i32, i32* %4, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.10"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 0
  store i32** null, i32*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.390
  %4 = load i32, i32* @y.391
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %238

; <label>:28:                                     ; preds = %2, %238
  %29 = alloca %"class.std::_Deque_base"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32**, align 8
  %35 = alloca i32**, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %29, align 8
  store i64 %1, i64* %30, align 8
  %38 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %29, align 8
  %39 = load i64, i64* %30, align 8
  %40 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %41 = udiv i64 %39, %40
  %42 = sub i64 0, 1
  %43 = sub i64 %41, %42
  %44 = add i64 %41, 1
  store i64 %43, i64* %31, align 8
  store i64 8, i64* %32, align 8
  %45 = load i64, i64* %31, align 8
  %46 = add i64 %45, -4531325212630255523
  %47 = add i64 %46, 2
  %48 = sub i64 %47, -4531325212630255523
  %49 = add i64 %45, 2
  store i64 %48, i64* %33, align 8
  %50 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %32, i64* dereferenceable(8) %33)
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  store i64 %51, i64* %53, align 8
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %38, i64 %56)
  %58 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %58, i32 0, i32 0
  store i32** %57, i32*** %59, align 8
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60, i32 0, i32 0
  %62 = load i32**, i32*** %61, align 8
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = load i64, i64* %31, align 8
  %67 = sub i64 0, %66
  %68 = add i64 %65, %67
  %69 = sub i64 %65, %66
  %70 = udiv i64 %68, 2
  %71 = getelementptr inbounds i32*, i32** %62, i64 %70
  store i32** %71, i32*** %34, align 8
  %72 = load i32**, i32*** %34, align 8
  %73 = load i64, i64* %31, align 8
  %74 = getelementptr inbounds i32*, i32** %72, i64 %73
  store i32** %74, i32*** %35, align 8
  %75 = load i32**, i32*** %34, align 8
  %76 = load i32**, i32*** %35, align 8
  %77 = load i32, i32* @x.390
  %78 = load i32, i32* @y.391
  %79 = sub i32 %77, -216681378
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -216681378
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %238

; <label>:91:                                     ; preds = %28
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %38, i32** %75, i32** %76)
          to label %92 unwind label %93

; <label>:92:                                     ; preds = %91
  br label %144

; <label>:93:                                     ; preds = %91
  %94 = landingpad { i8*, i32 }
          catch i8* null
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %36, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %37, align 4
  br label %97

; <label>:97:                                     ; preds = %93
  %98 = load i32, i32* @x.390
  %99 = load i32, i32* @y.391
  %100 = add i32 %98, -579199237
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -579199237
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %395

; <label>:112:                                    ; preds = %97, %395
  %113 = load i8*, i8** %36, align 8
  %114 = call i8* @__cxa_begin_catch(i8* %113) #3
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %115, i32 0, i32 0
  %117 = load i32**, i32*** %116, align 8
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %118, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %38, i32** %117, i64 %120) #3
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %121, i32 0, i32 0
  store i32** null, i32*** %122, align 8
  %123 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %123, i32 0, i32 1
  store i64 0, i64* %124, align 8
  %125 = load i32, i32* @x.390
  %126 = load i32, i32* @y.391
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %395

; <label>:138:                                    ; preds = %112
  invoke void @__cxa_rethrow() #12
          to label %208 unwind label %139

; <label>:139:                                    ; preds = %138
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %36, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %37, align 4
  invoke void @__cxa_end_catch()
          to label %143 unwind label %205

; <label>:143:                                    ; preds = %139
  br label %200

; <label>:144:                                    ; preds = %92
  %145 = load i32, i32* @x.390
  %146 = load i32, i32* @y.391
  %147 = sub i32 %145, 294770111
  %148 = sub i32 %147, 1
  %149 = add i32 %148, 294770111
  %150 = sub i32 %145, 1
  %151 = mul i32 %145, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %146, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %408

; <label>:159:                                    ; preds = %144, %408
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 2
  %162 = load i32**, i32*** %34, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %161, i32** %162) #3
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %163, i32 0, i32 3
  %165 = load i32**, i32*** %35, align 8
  %166 = getelementptr inbounds i32*, i32** %165, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %164, i32** %166) #3
  %167 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %167, i32 0, i32 2
  %169 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %168, i32 0, i32 1
  %170 = load i32*, i32** %169, align 8
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %171, i32 0, i32 2
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %172, i32 0, i32 0
  store i32* %170, i32** %173, align 8
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %174, i32 0, i32 3
  %176 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %175, i32 0, i32 1
  %177 = load i32*, i32** %176, align 8
  %178 = load i64, i64* %30, align 8
  %179 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %180 = urem i64 %178, %179
  %181 = getelementptr inbounds i32, i32* %177, i64 %180
  %182 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %182, i32 0, i32 3
  %184 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %183, i32 0, i32 0
  store i32* %181, i32** %184, align 8
  %185 = load i32, i32* @x.390
  %186 = load i32, i32* @y.391
  %187 = sub i32 %185, -1001339511
  %188 = sub i32 %187, 1
  %189 = add i32 %188, -1001339511
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %408

; <label>:199:                                    ; preds = %159
  ret void

; <label>:200:                                    ; preds = %143
  %201 = load i8*, i8** %36, align 8
  %202 = load i32, i32* %37, align 4
  %203 = insertvalue { i8*, i32 } undef, i8* %201, 0
  %204 = insertvalue { i8*, i32 } %203, i32 %202, 1
  resume { i8*, i32 } %204

; <label>:205:                                    ; preds = %139
  %206 = landingpad { i8*, i32 }
          catch i8* null
  %207 = extractvalue { i8*, i32 } %206, 0
  call void @__clang_call_terminate(i8* %207) #11
  unreachable

; <label>:208:                                    ; preds = %138
  %209 = load i32, i32* @x.390
  %210 = load i32, i32* @y.391
  %211 = sub i32 %209, -234324102
  %212 = sub i32 %211, 1
  %213 = add i32 %212, -234324102
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  br i1 %221, label %223, label %458

; <label>:223:                                    ; preds = %208, %458
  %224 = load i32, i32* @x.390
  %225 = load i32, i32* @y.391
  %226 = sub i32 0, 1
  %227 = add i32 %224, %226
  %228 = sub i32 %224, 1
  %229 = mul i32 %224, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %225, 10
  %233 = and i1 %231, %232
  %234 = xor i1 %231, %232
  %235 = or i1 %233, %234
  %236 = or i1 %231, %232
  br i1 %235, label %237, label %458

; <label>:237:                                    ; preds = %223
  unreachable

; <label>:238:                                    ; preds = %28, %2
  %239 = alloca %"class.std::_Deque_base"*, align 8
  %240 = alloca i64, align 8
  %241 = alloca i64, align 8
  %242 = alloca i64, align 8
  %243 = alloca i64, align 8
  %244 = alloca i32**, align 8
  %245 = alloca i32**, align 8
  %246 = alloca i8*
  %247 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %239, align 8
  store i64 %1, i64* %240, align 8
  %248 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %239, align 8
  %249 = load i64, i64* %240, align 8
  %250 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %251 = shl i64 %249, %250
  %252 = shl i64 %249, %250
  %253 = shl i64 %249, %250
  %254 = udiv i64 %249, %250
  %255 = add i64 0, 2437553092652305345
  %256 = sub i64 %255, %254
  %257 = sub i64 %256, 2437553092652305345
  %258 = sub i64 0, %254
  %259 = sub i64 0, %257
  %260 = sub i64 0, 1
  %261 = add i64 %259, %260
  %262 = sub i64 0, %261
  %263 = add i64 %257, 1
  %264 = add i64 0, 1294197022023090268
  %265 = sub i64 %264, %254
  %266 = sub i64 %265, 1294197022023090268
  %267 = sub i64 0, %254
  %268 = sub i64 0, 1
  %269 = sub i64 %266, %268
  %270 = add i64 %266, 1
  %271 = add i64 0, 1551865411404541217
  %272 = sub i64 %271, %254
  %273 = sub i64 %272, 1551865411404541217
  %274 = sub i64 0, %254
  %275 = sub i64 0, 1
  %276 = sub i64 %273, %275
  %277 = add i64 %273, 1
  %278 = sub i64 %254, -2798903094566692842
  %279 = add i64 %278, 1
  %280 = add i64 %279, -2798903094566692842
  %281 = add i64 %254, 1
  store i64 %280, i64* %241, align 8
  store i64 8, i64* %242, align 8
  %282 = load i64, i64* %241, align 8
  %283 = sub i64 %282, 8288067020776702990
  %284 = sub i64 %283, 2
  %285 = add i64 %284, 8288067020776702990
  %286 = sub i64 %282, 2
  %287 = mul i64 %285, 2
  %288 = shl i64 %282, 2
  %289 = sub i64 0, %282
  %290 = sub i64 0, 2
  %291 = add i64 %289, %290
  %292 = sub i64 0, %291
  %293 = add i64 %282, 2
  store i64 %292, i64* %243, align 8
  %294 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %242, i64* dereferenceable(8) %243)
  %295 = load i64, i64* %294, align 8
  %296 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %248, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %296, i32 0, i32 1
  store i64 %295, i64* %297, align 8
  %298 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %248, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %298, i32 0, i32 1
  %300 = load i64, i64* %299, align 8
  %301 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %248, i64 %300)
  %302 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %248, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %302, i32 0, i32 0
  store i32** %301, i32*** %303, align 8
  %304 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %248, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %304, i32 0, i32 0
  %306 = load i32**, i32*** %305, align 8
  %307 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %248, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %307, i32 0, i32 1
  %309 = load i64, i64* %308, align 8
  %310 = load i64, i64* %241, align 8
  %311 = sub i64 0, %309
  %312 = add i64 0, %311
  %313 = sub i64 0, %309
  %314 = sub i64 0, %312
  %315 = sub i64 0, %310
  %316 = add i64 %314, %315
  %317 = sub i64 0, %316
  %318 = add i64 %312, %310
  %319 = sub i64 0, -2523690578830867985
  %320 = sub i64 %319, %309
  %321 = add i64 %320, -2523690578830867985
  %322 = sub i64 0, %309
  %323 = sub i64 0, %321
  %324 = sub i64 0, %310
  %325 = add i64 %323, %324
  %326 = sub i64 0, %325
  %327 = add i64 %321, %310
  %328 = add i64 0, 1526687578470862376
  %329 = sub i64 %328, %309
  %330 = sub i64 %329, 1526687578470862376
  %331 = sub i64 0, %309
  %332 = sub i64 0, %310
  %333 = sub i64 %330, %332
  %334 = add i64 %330, %310
  %335 = add i64 0, 6881289984766532830
  %336 = sub i64 %335, %309
  %337 = sub i64 %336, 6881289984766532830
  %338 = sub i64 0, %309
  %339 = sub i64 0, %337
  %340 = sub i64 0, %310
  %341 = add i64 %339, %340
  %342 = sub i64 0, %341
  %343 = add i64 %337, %310
  %344 = shl i64 %309, %310
  %345 = sub i64 0, %309
  %346 = add i64 0, %345
  %347 = sub i64 0, %309
  %348 = sub i64 %346, 1328811347152079125
  %349 = add i64 %348, %310
  %350 = add i64 %349, 1328811347152079125
  %351 = add i64 %346, %310
  %352 = shl i64 %309, %310
  %353 = add i64 %309, -6108593410699201236
  %354 = sub i64 %353, %310
  %355 = sub i64 %354, -6108593410699201236
  %356 = sub i64 %309, %310
  %357 = mul i64 %355, %310
  %358 = add i64 %309, 3282661741249652833
  %359 = sub i64 %358, %310
  %360 = sub i64 %359, 3282661741249652833
  %361 = sub i64 %309, %310
  %362 = sub i64 %360, 7131814979241763739
  %363 = sub i64 %362, 2
  %364 = add i64 %363, 7131814979241763739
  %365 = sub i64 %360, 2
  %366 = mul i64 %364, 2
  %367 = shl i64 %360, 2
  %368 = shl i64 %360, 2
  %369 = sub i64 0, 2
  %370 = add i64 %360, %369
  %371 = sub i64 %360, 2
  %372 = mul i64 %370, 2
  %373 = add i64 0, -5048999166839168571
  %374 = sub i64 %373, %360
  %375 = sub i64 %374, -5048999166839168571
  %376 = sub i64 0, %360
  %377 = sub i64 %375, 1933528425141713602
  %378 = add i64 %377, 2
  %379 = add i64 %378, 1933528425141713602
  %380 = add i64 %375, 2
  %381 = add i64 %360, 1402009860591616523
  %382 = sub i64 %381, 2
  %383 = sub i64 %382, 1402009860591616523
  %384 = sub i64 %360, 2
  %385 = mul i64 %383, 2
  %386 = shl i64 %360, 2
  %387 = shl i64 %360, 2
  %388 = udiv i64 %360, 2
  %389 = getelementptr inbounds i32*, i32** %306, i64 %388
  store i32** %389, i32*** %244, align 8
  %390 = load i32**, i32*** %244, align 8
  %391 = load i64, i64* %241, align 8
  %392 = getelementptr inbounds i32*, i32** %390, i64 %391
  store i32** %392, i32*** %245, align 8
  %393 = load i32**, i32*** %244, align 8
  %394 = load i32**, i32*** %245, align 8
  br label %28

; <label>:395:                                    ; preds = %112, %97
  %396 = load i8*, i8** %36, align 8
  %397 = call i8* @__cxa_begin_catch(i8* %396) #3
  %398 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %398, i32 0, i32 0
  %400 = load i32**, i32*** %399, align 8
  %401 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %402 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %401, i32 0, i32 1
  %403 = load i64, i64* %402, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %38, i32** %400, i64 %403) #3
  %404 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %405 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %404, i32 0, i32 0
  store i32** null, i32*** %405, align 8
  %406 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %406, i32 0, i32 1
  store i64 0, i64* %407, align 8
  br label %112

; <label>:408:                                    ; preds = %159, %144
  %409 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %409, i32 0, i32 2
  %411 = load i32**, i32*** %34, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %410, i32** %411) #3
  %412 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %413 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %412, i32 0, i32 3
  %414 = load i32**, i32*** %35, align 8
  %415 = getelementptr inbounds i32*, i32** %414, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %413, i32** %415) #3
  %416 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %417 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %416, i32 0, i32 2
  %418 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %417, i32 0, i32 1
  %419 = load i32*, i32** %418, align 8
  %420 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %421 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %420, i32 0, i32 2
  %422 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %421, i32 0, i32 0
  store i32* %419, i32** %422, align 8
  %423 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %424 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %423, i32 0, i32 3
  %425 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %424, i32 0, i32 1
  %426 = load i32*, i32** %425, align 8
  %427 = load i64, i64* %30, align 8
  %428 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %429 = add i64 %427, 6165269427070652907
  %430 = sub i64 %429, %428
  %431 = sub i64 %430, 6165269427070652907
  %432 = sub i64 %427, %428
  %433 = mul i64 %431, %428
  %434 = shl i64 %427, %428
  %435 = shl i64 %427, %428
  %436 = sub i64 0, %428
  %437 = add i64 %427, %436
  %438 = sub i64 %427, %428
  %439 = mul i64 %437, %428
  %440 = shl i64 %427, %428
  %441 = shl i64 %427, %428
  %442 = sub i64 0, %427
  %443 = add i64 0, %442
  %444 = sub i64 0, %427
  %445 = sub i64 0, %428
  %446 = sub i64 %443, %445
  %447 = add i64 %443, %428
  %448 = add i64 %427, -7603857853325650309
  %449 = sub i64 %448, %428
  %450 = sub i64 %449, -7603857853325650309
  %451 = sub i64 %427, %428
  %452 = mul i64 %450, %428
  %453 = urem i64 %427, %428
  %454 = getelementptr inbounds i32, i32* %426, i64 %453
  %455 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %455, i32 0, i32 3
  %457 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %456, i32 0, i32 0
  store i32* %454, i32** %457, align 8
  br label %159

; <label>:458:                                    ; preds = %223, %208
  br label %223
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.394
  %5 = load i32, i32* @y.395
  %6 = add i32 %4, 962345696
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 962345696
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -464544246, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -464544246, label %18
    i32 1838855864, label %38
    i32 -500384803, label %60
    i32 520786968, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1838855864, i32 520786968
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %39, align 8
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 0
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 1
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 2
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 3
  store i32** null, i32*** %44, align 8
  %45 = load i32, i32* @x.394
  %46 = load i32, i32* @y.395
  %47 = add i32 %45, -438630733
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -438630733
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -500384803, i32 520786968
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %62, align 8
  %63 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 0
  store i32* null, i32** %64, align 8
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 1
  store i32* null, i32** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 2
  store i32* null, i32** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %63, i32 0, i32 3
  store i32** null, i32*** %67, align 8
  store i32 1838855864, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i1
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.396
  %7 = load i32, i32* @y.397
  %8 = add i32 %6, 468339162
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 468339162
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -102762723, i32* %16
  %17 = alloca i64
  br label %18

; <label>:18:                                     ; preds = %1, %88
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -102762723, label %21
    i32 1458060379, label %41
    i32 -408521714, label %74
    i32 1914181043, label %77
    i32 -1419933796, label %81
    i32 -613863849, label %82
    i32 103261305, label %84
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %5
  %23 = load volatile i1, i1* %4
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1458060379, i32 103261305
  store i32 %40, i32* %16
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca i64, align 8
  store i64* %42, i64** %3
  %43 = load volatile i64*, i64** %3
  store i64 %0, i64* %43, align 8
  %44 = load volatile i64*, i64** %3
  %45 = load i64, i64* %44, align 8
  %46 = icmp ult i64 %45, 512
  store i1 %46, i1* %2
  %47 = load i32, i32* @x.396
  %48 = load i32, i32* @y.397
  %49 = sub i32 %47, -1797187910
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1797187910
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -408521714, i32 103261305
  store i32 %73, i32* %16
  br label %88

; <label>:74:                                     ; preds = %18
  %75 = load volatile i1, i1* %2
  %76 = select i1 %75, i32 1914181043, i32 -1419933796
  store i32 %76, i32* %16
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile i64*, i64** %3
  %79 = load i64, i64* %78, align 8
  %80 = udiv i64 512, %79
  store i32 -613863849, i32* %16
  store i64 %80, i64* %17
  br label %88

; <label>:81:                                     ; preds = %18
  store i32 -613863849, i32* %16
  store i64 1, i64* %17
  br label %88

; <label>:82:                                     ; preds = %18
  %83 = load i64, i64* %17
  ret i64 %83

; <label>:84:                                     ; preds = %18
  %85 = alloca i64, align 8
  store i64 %0, i64* %85, align 8
  %86 = load i64, i64* %85, align 8
  %87 = icmp ult i64 %86, 512
  store i32 1458060379, i32* %16
  br label %88

; <label>:88:                                     ; preds = %84, %81, %77, %74, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.16", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.16"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.16"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.16"* %5) #3
  ret i32** %10

; <label>:12:                                     ; preds = %2
  %13 = landingpad { i8*, i32 }
          cleanup
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %6, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.16"* %5) #3
  br label %16

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.398
  %18 = load i32, i32* @y.399
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  br i1 %40, label %42, label %62

; <label>:42:                                     ; preds = %16, %62
  %43 = load i8*, i8** %6, align 8
  %44 = load i32, i32* %7, align 4
  %45 = insertvalue { i8*, i32 } undef, i8* %43, 0
  %46 = insertvalue { i8*, i32 } %45, i32 %44, 1
  %47 = load i32, i32* @x.398
  %48 = load i32, i32* @y.399
  %49 = add i32 %47, 623279359
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 623279359
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %62

; <label>:61:                                     ; preds = %42
  resume { i8*, i32 } %46

; <label>:62:                                     ; preds = %42, %16
  %63 = load i8*, i8** %6, align 8
  %64 = load i32, i32* %7, align 4
  %65 = insertvalue { i8*, i32 } undef, i8* %63, 0
  %66 = insertvalue { i8*, i32 } %65, i32 %64, 1
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %62, %3
  %13 = load i32, i32* @x.400
  %14 = load i32, i32* @y.401
  %15 = add i32 %13, 1956165674
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 1956165674
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %132

; <label>:39:                                     ; preds = %12, %132
  %40 = load i32**, i32*** %7, align 8
  %41 = load i32**, i32*** %6, align 8
  %42 = icmp ult i32** %40, %41
  %43 = load i32, i32* @x.400
  %44 = load i32, i32* @y.401
  %45 = sub i32 %43, -987742286
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -987742286
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %132

; <label>:57:                                     ; preds = %39
  br i1 %42, label %58, label %74

; <label>:58:                                     ; preds = %57
  %59 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %60 unwind label %65

; <label>:60:                                     ; preds = %58
  %61 = load i32**, i32*** %7, align 8
  store i32* %59, i32** %61, align 8
  br label %62

; <label>:62:                                     ; preds = %60
  %63 = load i32**, i32*** %7, align 8
  %64 = getelementptr inbounds i32*, i32** %63, i32 1
  store i32** %64, i32*** %7, align 8
  br label %12

; <label>:65:                                     ; preds = %58
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %8, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %9, align 4
  br label %69

; <label>:69:                                     ; preds = %65
  %70 = load i8*, i8** %8, align 8
  %71 = call i8* @__cxa_begin_catch(i8* %70) #3
  %72 = load i32**, i32*** %5, align 8
  %73 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %72, i32** %73) #3
  invoke void @__cxa_rethrow() #12
          to label %131 unwind label %75

; <label>:74:                                     ; preds = %57
  br label %80

; <label>:75:                                     ; preds = %69
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %8, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %79 unwind label %128

; <label>:79:                                     ; preds = %75
  br label %81

; <label>:80:                                     ; preds = %74
  ret void

; <label>:81:                                     ; preds = %79
  %82 = load i32, i32* @x.400
  %83 = load i32, i32* @y.401
  %84 = sub i32 %82, 1428746845
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 1428746845
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %136

; <label>:96:                                     ; preds = %81, %136
  %97 = load i8*, i8** %8, align 8
  %98 = load i32, i32* %9, align 4
  %99 = insertvalue { i8*, i32 } undef, i8* %97, 0
  %100 = insertvalue { i8*, i32 } %99, i32 %98, 1
  %101 = load i32, i32* @x.400
  %102 = load i32, i32* @y.401
  %103 = sub i32 %101, 846781779
  %104 = sub i32 %103, 1
  %105 = add i32 %104, 846781779
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %136

; <label>:127:                                    ; preds = %96
  resume { i8*, i32 } %100

; <label>:128:                                    ; preds = %75
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #11
  unreachable

; <label>:131:                                    ; preds = %69
  unreachable

; <label>:132:                                    ; preds = %39, %12
  %133 = load i32**, i32*** %7, align 8
  %134 = load i32**, i32*** %6, align 8
  %135 = icmp ult i32** %133, %134
  br label %39

; <label>:136:                                    ; preds = %96, %81
  %137 = load i8*, i8** %8, align 8
  %138 = load i32, i32* %9, align 4
  %139 = insertvalue { i8*, i32 } undef, i8* %137, 0
  %140 = insertvalue { i8*, i32 } %139, i32 %138, 1
  br label %96
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.402
  %5 = load i32, i32* @y.403
  %6 = add i32 %4, -77880976
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -77880976
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %115

; <label>:30:                                     ; preds = %3, %115
  %31 = alloca %"class.std::_Deque_base"*, align 8
  %32 = alloca i32**, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::allocator.16", align 1
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %31, align 8
  store i32** %1, i32*** %32, align 8
  store i64 %2, i64* %33, align 8
  %37 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %31, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.16"* sret %34, %"class.std::_Deque_base"* %37) #3
  %38 = load i32**, i32*** %32, align 8
  %39 = load i64, i64* %33, align 8
  %40 = load i32, i32* @x.402
  %41 = load i32, i32* @y.403
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %115

; <label>:65:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.16"* dereferenceable(1) %34, i32** %38, i64 %39)
          to label %66 unwind label %109

; <label>:66:                                     ; preds = %65
  %67 = load i32, i32* @x.402
  %68 = load i32, i32* @y.403
  %69 = sub i32 %67, -118099908
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -118099908
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %125

; <label>:93:                                     ; preds = %66, %125
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.16"* %34) #3
  %94 = load i32, i32* @x.402
  %95 = load i32, i32* @y.403
  %96 = add i32 %94, 317235614
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 317235614
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %125

; <label>:108:                                    ; preds = %93
  ret void

; <label>:109:                                    ; preds = %65
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %35, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %36, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.16"* %34) #3
  br label %113

; <label>:113:                                    ; preds = %109
  %114 = load i8*, i8** %35, align 8
  call void @__clang_call_terminate(i8* %114) #11
  unreachable

; <label>:115:                                    ; preds = %30, %3
  %116 = alloca %"class.std::_Deque_base"*, align 8
  %117 = alloca i32**, align 8
  %118 = alloca i64, align 8
  %119 = alloca %"class.std::allocator.16", align 1
  %120 = alloca i8*
  %121 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %116, align 8
  store i32** %1, i32*** %117, align 8
  store i64 %2, i64* %118, align 8
  %122 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %116, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.16"* sret %119, %"class.std::_Deque_base"* %122) #3
  %123 = load i32**, i32*** %117, align 8
  %124 = load i64, i64* %118, align 8
  br label %30

; <label>:125:                                    ; preds = %93, %66
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.16"* %34) #3
  br label %93
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.404
  %6 = load i32, i32* @y.405
  %7 = add i32 %5, -403217411
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -403217411
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 7400678, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 7400678, label %19
    i32 1517875913, label %39
    i32 586393998, label %68
    i32 -639930424, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1517875913, i32 -639930424
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %43 = load i32**, i32*** %41, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  store i32** %43, i32*** %44, align 8
  %45 = load i32**, i32*** %41, align 8
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  store i32* %46, i32** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 1
  %49 = load i32*, i32** %48, align 8
  %50 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %51 = getelementptr inbounds i32, i32* %49, i64 %50
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  store i32* %51, i32** %52, align 8
  %53 = load i32, i32* @x.404
  %54 = load i32, i32* @y.405
  %55 = add i32 %53, -1479134084
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1479134084
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 586393998, i32 -639930424
  store i32 %67, i32* %15
  br label %83

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.std::_Deque_iterator"*, align 8
  %71 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %70, align 8
  store i32** %1, i32*** %71, align 8
  %72 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %73 = load i32**, i32*** %71, align 8
  %74 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 3
  store i32** %73, i32*** %74, align 8
  %75 = load i32**, i32*** %71, align 8
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 1
  store i32* %76, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %81 = getelementptr inbounds i32, i32* %79, i64 %80
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 2
  store i32* %81, i32** %82, align 8
  store i32 1517875913, i32* %15
  br label %83

; <label>:83:                                     ; preds = %69, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.16"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.16"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.16"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.16"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %2, align 8
  %3 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %2, align 8
  %4 = bitcast %"class.std::allocator.16"* %3 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.17"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.16"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.16"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %3, align 8
  %6 = bitcast %"class.std::allocator.16"* %5 to %"class.__gnu_cxx::new_allocator.17"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.17"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.17"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 800087242, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 800087242, label %16
    i32 95920382, label %21
    i32 -1019457026, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 95920382, i32 -1019457026
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32**
  ret i32** %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.17"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.422
  %5 = load i32, i32* @y.423
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1070044175, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1070044175, label %17
    i32 -1219426109, label %37
    i32 -213195591, label %55
    i32 -1312922381, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1219426109, i32 -1312922381
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %38, align 8
  %40 = load i32, i32* @x.422
  %41 = load i32, i32* @y.423
  %42 = add i32 %40, 3825898
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 3825898
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -213195591, i32 -1312922381
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %57, align 8
  store i32 -1219426109, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.424
  %6 = load i32, i32* @y.425
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1997387026, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1997387026, label %18
    i32 -208767997, label %26
    i32 747977259, label %60
    i32 677704357, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -208767997, i32 677704357
  store i32 %25, i32* %14
  br label %69

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %27, align 8
  %28 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %27, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29 to %"class.std::allocator.10"*
  %31 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %32 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %30, i64 %31)
  store i32* %32, i32** %2
  %33 = load i32, i32* @x.424
  %34 = load i32, i32* @y.425
  %35 = sub i32 %33, 838624193
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 838624193
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 747977259, i32 677704357
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  %61 = load volatile i32*, i32** %2
  ret i32* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %63, align 8
  %64 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %63, align 8
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65 to %"class.std::allocator.10"*
  %67 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %68 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %66, i64 %67)
  store i32 -208767997, i32* %14
  br label %69

; <label>:69:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 997071665, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %134
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 997071665, label %15
    i32 251444103, label %20
    i32 1344536684, label %48
    i32 -437613624, label %79
    i32 -1152937962, label %80
    i32 -1236933969, label %95
    i32 -921172324, label %125
    i32 -1939419942, label %126
    i32 -1007142784, label %127
    i32 253738773, label %131
  ]

; <label>:14:                                     ; preds = %12
  br label %134

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 251444103, i32 -1939419942
  store i32 %19, i32* %11
  br label %134

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.426
  %22 = load i32, i32* @y.427
  %23 = sub i32 %21, -1292133143
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -1292133143
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 1344536684, i32 -1007142784
  store i32 %47, i32* %11
  br label %134

; <label>:48:                                     ; preds = %12
  %49 = load i32**, i32*** %8, align 8
  %50 = load i32*, i32** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %51, i32* %50) #3
  %52 = load i32, i32* @x.426
  %53 = load i32, i32* @y.427
  %54 = add i32 %52, 492764592
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 492764592
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -437613624, i32 -1007142784
  store i32 %78, i32* %11
  br label %134

; <label>:79:                                     ; preds = %12
  store i32 -1152937962, i32* %11
  br label %134

; <label>:80:                                     ; preds = %12
  %81 = load i32, i32* @x.426
  %82 = load i32, i32* @y.427
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -1236933969, i32 253738773
  store i32 %94, i32* %11
  br label %134

; <label>:95:                                     ; preds = %12
  %96 = load i32**, i32*** %8, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i32 1
  store i32** %97, i32*** %8, align 8
  %98 = load i32, i32* @x.426
  %99 = load i32, i32* @y.427
  %100 = add i32 %98, -1496129229
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -1496129229
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -921172324, i32 253738773
  store i32 %124, i32* %11
  br label %134

; <label>:125:                                    ; preds = %12
  store i32 997071665, i32* %11
  br label %134

; <label>:126:                                    ; preds = %12
  ret void

; <label>:127:                                    ; preds = %12
  %128 = load i32**, i32*** %8, align 8
  %129 = load i32*, i32** %128, align 8
  %130 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %130, i32* %129) #3
  store i32 1344536684, i32* %11
  br label %134

; <label>:131:                                    ; preds = %12
  %132 = load i32**, i32*** %8, align 8
  %133 = getelementptr inbounds i32*, i32** %132, i32 1
  store i32** %133, i32*** %8, align 8
  store i32 -1236933969, i32* %11
  br label %134

; <label>:134:                                    ; preds = %131, %127, %125, %95, %80, %79, %48, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.430
  %10 = load i32, i32* @y.431
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 7646998, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %202
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 7646998, label %22
    i32 1592489800, label %42
    i32 -702420811, label %78
    i32 2111948163, label %81
    i32 -260028556, label %97
    i32 -158231585, label %112
    i32 -544537102, label %113
    i32 -996457864, label %129
    i32 -878497515, label %162
    i32 751256393, label %164
    i32 1506907100, label %172
    i32 -1284038037, label %173
  ]

; <label>:21:                                     ; preds = %19
  br label %202

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1592489800, i32 751256393
  store i32 %41, i32* %18
  br label %202

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %6
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %43, align 8
  %46 = load volatile i64*, i64** %6
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %43, align 8
  %48 = load volatile i64*, i64** %6
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %5
  %52 = load i32, i32* @x.430
  %53 = load i32, i32* @y.431
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -702420811, i32 751256393
  store i32 %77, i32* %18
  br label %202

; <label>:78:                                     ; preds = %19
  %79 = load volatile i1, i1* %5
  %80 = select i1 %79, i32 2111948163, i32 -544537102
  store i32 %80, i32* %18
  br label %202

; <label>:81:                                     ; preds = %19
  %82 = load i32, i32* @x.430
  %83 = load i32, i32* @y.431
  %84 = add i32 %82, 1773454131
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, 1773454131
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -260028556, i32 1506907100
  store i32 %96, i32* %18
  br label %202

; <label>:97:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %98 = load i32, i32* @x.430
  %99 = load i32, i32* @y.431
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -158231585, i32 1506907100
  store i32 %111, i32* %18
  br label %202

; <label>:112:                                    ; preds = %19
  unreachable

; <label>:113:                                    ; preds = %19
  %114 = load i32, i32* @x.430
  %115 = load i32, i32* @y.431
  %116 = sub i32 %114, -2045497747
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -2045497747
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 -996457864, i32 -1284038037
  store i32 %128, i32* %18
  br label %202

; <label>:129:                                    ; preds = %19
  %130 = load volatile i64*, i64** %6
  %131 = load i64, i64* %130, align 8
  %132 = mul i64 %131, 4
  %133 = call i8* @_Znwm(i64 %132)
  %134 = bitcast i8* %133 to i32*
  store i32* %134, i32** %4
  %135 = load i32, i32* @x.430
  %136 = load i32, i32* @y.431
  %137 = sub i32 %135, -906602773
  %138 = sub i32 %137, 1
  %139 = add i32 %138, -906602773
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = xor i1 %143, true
  %146 = xor i1 %144, true
  %147 = xor i1 false, true
  %148 = and i1 %145, false
  %149 = and i1 %143, %147
  %150 = and i1 %146, false
  %151 = and i1 %144, %147
  %152 = or i1 %148, %149
  %153 = or i1 %150, %151
  %154 = xor i1 %152, %153
  %155 = or i1 %145, %146
  %156 = xor i1 %155, true
  %157 = or i1 false, %147
  %158 = and i1 %156, %157
  %159 = or i1 %154, %158
  %160 = or i1 %143, %144
  %161 = select i1 %159, i32 -878497515, i32 -1284038037
  store i32 %161, i32* %18
  br label %202

; <label>:162:                                    ; preds = %19
  %163 = load volatile i32*, i32** %4
  ret i32* %163

; <label>:164:                                    ; preds = %19
  %165 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %166 = alloca i64, align 8
  %167 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %165, align 8
  store i64 %1, i64* %166, align 8
  store i8* %2, i8** %167, align 8
  %168 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %165, align 8
  %169 = load i64, i64* %166, align 8
  %170 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %168) #3
  %171 = icmp ugt i64 %169, %170
  store i32 1592489800, i32* %18
  br label %202

; <label>:172:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -260028556, i32* %18
  br label %202

; <label>:173:                                    ; preds = %19
  %174 = load volatile i64*, i64** %6
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 0, -3405437593794420266
  %177 = sub i64 %176, %175
  %178 = add i64 %177, -3405437593794420266
  %179 = sub i64 0, %175
  %180 = add i64 %178, -3228914955438166560
  %181 = add i64 %180, 4
  %182 = sub i64 %181, -3228914955438166560
  %183 = add i64 %178, 4
  %184 = sub i64 0, %175
  %185 = add i64 0, %184
  %186 = sub i64 0, %175
  %187 = sub i64 0, 4
  %188 = sub i64 %185, %187
  %189 = add i64 %185, 4
  %190 = sub i64 %175, 975133991893234329
  %191 = sub i64 %190, 4
  %192 = add i64 %191, 975133991893234329
  %193 = sub i64 %175, 4
  %194 = mul i64 %192, 4
  %195 = sub i64 0, 4
  %196 = add i64 %175, %195
  %197 = sub i64 %175, 4
  %198 = mul i64 %196, 4
  %199 = mul i64 %175, 4
  %200 = call i8* @_Znwm(i64 %199)
  %201 = bitcast i8* %200 to i32*
  store i32 -996457864, i32* %18
  br label %202

; <label>:202:                                    ; preds = %173, %172, %164, %129, %113, %97, %81, %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.434
  %4 = load i32, i32* @y.435
  %5 = sub i32 %3, -1909799132
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1909799132
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %57

; <label>:17:                                     ; preds = %2, %57
  %18 = alloca %"class.std::_Deque_base"*, align 8
  %19 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %18, align 8
  store i32* %1, i32** %19, align 8
  %20 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %18, align 8
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21 to %"class.std::allocator.10"*
  %23 = load i32*, i32** %19, align 8
  %24 = load i32, i32* @x.434
  %25 = load i32, i32* @y.435
  %26 = add i32 %24, -277970439
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -277970439
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %57

; <label>:50:                                     ; preds = %17
  %51 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %52 unwind label %54

; <label>:52:                                     ; preds = %50
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.10"* dereferenceable(1) %22, i32* %23, i64 %51)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %52
  ret void

; <label>:54:                                     ; preds = %52, %50
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  call void @__clang_call_terminate(i8* %56) #11
  unreachable

; <label>:57:                                     ; preds = %17, %2
  %58 = alloca %"class.std::_Deque_base"*, align 8
  %59 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %58, align 8
  store i32* %1, i32** %59, align 8
  %60 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %58, align 8
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %60, i32 0, i32 0
  %62 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61 to %"class.std::allocator.10"*
  %63 = load i32*, i32** %59, align 8
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.16"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.436
  %7 = load i32, i32* @y.437
  %8 = sub i32 %6, -1380053928
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1380053928
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1628644453, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1628644453, label %20
    i32 -1414366525, label %28
    i32 -131018994, label %63
    i32 250215251, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1414366525, i32 250215251
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.16"*, align 8
  %30 = alloca i32**, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %29, align 8
  store i32** %1, i32*** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %29, align 8
  %33 = bitcast %"class.std::allocator.16"* %32 to %"class.__gnu_cxx::new_allocator.17"*
  %34 = load i32**, i32*** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.17"* %33, i32** %34, i64 %35)
  %36 = load i32, i32* @x.436
  %37 = load i32, i32* @y.437
  %38 = add i32 %36, 1994901189
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1994901189
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -131018994, i32 250215251
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.16"*, align 8
  %66 = alloca i32**, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.16"* %0, %"class.std::allocator.16"** %65, align 8
  store i32** %1, i32*** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.16"*, %"class.std::allocator.16"** %65, align 8
  %69 = bitcast %"class.std::allocator.16"* %68 to %"class.__gnu_cxx::new_allocator.17"*
  %70 = load i32**, i32*** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.17"* %69, i32** %70, i64 %71)
  store i32 -1414366525, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.17"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.17"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.17"* %0, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.17"*, %"class.__gnu_cxx::new_allocator.17"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %44

; <label>:2:                                      ; preds = %0
  %3 = load i32, i32* @x.440
  %4 = load i32, i32* @y.441
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %47

; <label>:16:                                     ; preds = %2, %47
  %17 = load i32, i32* @x.440
  %18 = load i32, i32* @y.441
  %19 = add i32 %17, 272552031
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 272552031
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %47

; <label>:43:                                     ; preds = %16
  ret i64 %1

; <label>:44:                                     ; preds = %0
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #11
  unreachable

; <label>:47:                                     ; preds = %16, %2
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.446
  %6 = load i32, i32* @y.447
  %7 = add i32 %5, 1220485620
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1220485620
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -40980053, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -40980053, label %19
    i32 532155550, label %39
    i32 -1497499096, label %74
    i32 -1048392575, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 532155550, i32 -1048392575
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  %41 = alloca %"class.std::_Deque_base"*, align 8
  %42 = alloca %"struct.std::integral_constant", align 1
  %43 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %41, align 8
  %44 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %45 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %41, align 8
  %46 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %45) #3
  %47 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %43 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %44, %"class.std::_Deque_base"* dereferenceable(80) %46)
  %48 = load i32, i32* @x.446
  %49 = load i32, i32* @y.447
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1497499096, i32 -1048392575
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::_Deque_base"*, align 8
  %77 = alloca %"class.std::_Deque_base"*, align 8
  %78 = alloca %"struct.std::integral_constant", align 1
  %79 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %76, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %77, align 8
  %80 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %76, align 8
  %81 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %77, align 8
  %82 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %81) #3
  %83 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %79 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %80, %"class.std::_Deque_base"* dereferenceable(80) %82)
  store i32 532155550, i32* %15
  br label %84

; <label>:84:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.448
  %6 = load i32, i32* @y.449
  %7 = add i32 %5, 922207234
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 922207234
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1798484409, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1798484409, label %19
    i32 -830711564, label %39
    i32 382769234, label %57
    i32 36228768, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -830711564, i32 36228768
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  store %"class.std::_Deque_base"* %41, %"class.std::_Deque_base"** %2
  %42 = load i32, i32* @x.448
  %43 = load i32, i32* @y.449
  %44 = add i32 %42, -1468320123
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1468320123
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 382769234, i32 36228768
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2
  ret %"class.std::_Deque_base"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %60, align 8
  %61 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %60, align 8
  store i32 -830711564, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.10"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %67

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %21 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %22) #3
  br label %67

; <label>:23:                                     ; preds = %2
  %24 = load i32, i32* @x.450
  %25 = load i32, i32* @y.451
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  br i1 %35, label %37, label %114

; <label>:37:                                     ; preds = %23, %114
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %6, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  %41 = load i32, i32* @x.450
  %42 = load i32, i32* @y.451
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %114

; <label>:66:                                     ; preds = %37
  br label %109

; <label>:67:                                     ; preds = %19, %13
  %68 = load i32, i32* @x.450
  %69 = load i32, i32* @y.451
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %118

; <label>:81:                                     ; preds = %67, %118
  %82 = load i32, i32* @x.450
  %83 = load i32, i32* @y.451
  %84 = add i32 %82, -1709248170
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1709248170
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %118

; <label>:108:                                    ; preds = %81
  ret void

; <label>:109:                                    ; preds = %66
  %110 = load i8*, i8** %6, align 8
  %111 = load i32, i32* %7, align 4
  %112 = insertvalue { i8*, i32 } undef, i8* %110, 0
  %113 = insertvalue { i8*, i32 } %112, i32 %111, 1
  resume { i8*, i32 } %113

; <label>:114:                                    ; preds = %37, %23
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %6, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %37

; <label>:118:                                    ; preds = %81, %67
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  ret %"class.std::allocator.10"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.454
  %6 = load i32, i32* @y.455
  %7 = sub i32 %5, 1717093019
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1717093019
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -734773385, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -734773385, label %19
    i32 -1384023128, label %39
    i32 -588157273, label %71
    i32 1507777160, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1384023128, i32 1507777160
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %43, %"class.std::allocator.10"** %2
  %44 = load i32, i32* @x.454
  %45 = load i32, i32* @y.455
  %46 = sub i32 %44, 915441822
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 915441822
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -588157273, i32 1507777160
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %74, align 8
  %75 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76 to %"class.std::allocator.10"*
  store i32 -1384023128, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i32***, align 8
  %4 = alloca i32***, align 8
  %5 = alloca i32**, align 8
  store i32*** %0, i32**** %3, align 8
  store i32*** %1, i32**** %4, align 8
  %6 = load i32***, i32**** %3, align 8
  %7 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %6) #3
  %8 = load i32**, i32*** %7, align 8
  store i32** %8, i32*** %5, align 8
  %9 = load i32***, i32**** %4, align 8
  %10 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %9) #3
  %11 = load i32**, i32*** %10, align 8
  %12 = load i32***, i32**** %3, align 8
  store i32** %11, i32*** %12, align 8
  %13 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %5) #3
  %14 = load i32**, i32*** %13, align 8
  %15 = load i32***, i32**** %4, align 8
  store i32** %14, i32*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.470
  %6 = load i32, i32* @y.471
  %7 = add i32 %5, -45983162
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -45983162
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1352776292, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1352776292, label %19
    i32 2024308590, label %39
    i32 933056897, label %57
    i32 1955202777, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2024308590, i32 1955202777
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"** %2
  %42 = load i32, i32* @x.470
  %43 = load i32, i32* @y.471
  %44 = add i32 %42, 1282251568
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1282251568
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 933056897, i32 1955202777
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %60, align 8
  %61 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %60, align 8
  store i32 2024308590, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.484
  %7 = load i32, i32* @y.485
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1283034795, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %108
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1283034795, label %19
    i32 525715547, label %39
    i32 -1315755783, label %73
    i32 -723880810, label %76
    i32 -328279945, label %98
    i32 523420555, label %101
  ]

; <label>:18:                                     ; preds = %16
  br label %108

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 525715547, i32 523420555
  store i32 %38, i32* %15
  br label %108

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  store %"class.std::_Deque_base"* %41, %"class.std::_Deque_base"** %3
  %42 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 0
  %45 = load i32**, i32*** %44, align 8
  %46 = icmp ne i32** %45, null
  store i1 %46, i1* %2
  %47 = load i32, i32* @x.484
  %48 = load i32, i32* @y.485
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1315755783, i32 523420555
  store i32 %72, i32* %15
  br label %108

; <label>:73:                                     ; preds = %16
  %74 = load volatile i1, i1* %2
  %75 = select i1 %74, i32 -723880810, i32 -328279945
  store i32 %75, i32* %15
  br label %108

; <label>:76:                                     ; preds = %16
  %77 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %78 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %78, i32 0, i32 2
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %79, i32 0, i32 3
  %81 = load i32**, i32*** %80, align 8
  %82 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 3
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 3
  %86 = load i32**, i32*** %85, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i64 1
  %88 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %88, i32** %81, i32** %87) #3
  %89 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %90, i32 0, i32 0
  %92 = load i32**, i32*** %91, align 8
  %93 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 1
  %96 = load i64, i64* %95, align 8
  %97 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %97, i32** %92, i64 %96) #3
  store i32 -328279945, i32* %15
  br label %108

; <label>:98:                                     ; preds = %16
  %99 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %100 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %99, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100) #3
  ret void

; <label>:101:                                    ; preds = %16
  %102 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %102, align 8
  %103 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %102, align 8
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %104, i32 0, i32 0
  %106 = load i32**, i32*** %105, align 8
  %107 = icmp ne i32** %106, null
  store i32 525715547, i32* %15
  br label %108

; <label>:108:                                    ; preds = %101, %76, %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.486
  %9 = load i32, i32* @y.487
  %10 = sub i32 %8, 1487302446
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1487302446
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -660477671, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %156
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -660477671, label %22
    i32 -1241109158, label %30
    i32 -168237094, label %64
    i32 949266639, label %67
    i32 -994256102, label %87
    i32 -1832651650, label %103
    i32 -1655846429, label %134
    i32 -301568712, label %135
    i32 -53443763, label %136
    i32 -514871260, label %152
  ]

; <label>:21:                                     ; preds = %19
  br label %156

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1241109158, i32 -53443763
  store i32 %29, i32* %18
  br label %156

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::deque"* %0, %"class.std::deque"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %31, align 8
  store %"class.std::deque"* %34, %"class.std::deque"** %4
  %35 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %36 = bitcast %"class.std::deque"* %35 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 2
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 -1
  %48 = icmp ne i32* %40, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.486
  %50 = load i32, i32* @y.487
  %51 = sub i32 %49, 722420370
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 722420370
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -168237094, i32 -53443763
  store i32 %63, i32* %18
  br label %156

; <label>:64:                                     ; preds = %19
  %65 = load volatile i1, i1* %3
  %66 = select i1 %65, i32 949266639, i32 -994256102
  store i32 %66, i32* %18
  br label %156

; <label>:67:                                     ; preds = %19
  %68 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %69 = bitcast %"class.std::deque"* %68 to %"class.std::_Deque_base"*
  %70 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %70 to %"class.std::allocator.10"*
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 3
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = load volatile i32**, i32*** %5
  %79 = load i32*, i32** %78, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %71, i32* %77, i32* dereferenceable(4) %79)
  %80 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %81 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %86, i32** %84, align 8
  store i32 -301568712, i32* %18
  br label %156

; <label>:87:                                     ; preds = %19
  %88 = load i32, i32* @x.486
  %89 = load i32, i32* @y.487
  %90 = add i32 %88, -342591870
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -342591870
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 -1832651650, i32 -514871260
  store i32 %102, i32* %18
  br label %156

; <label>:103:                                    ; preds = %19
  %104 = load volatile i32**, i32*** %5
  %105 = load i32*, i32** %104, align 8
  %106 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %106, i32* dereferenceable(4) %105)
  %107 = load i32, i32* @x.486
  %108 = load i32, i32* @y.487
  %109 = sub i32 %107, 1517418183
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 1517418183
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  %133 = select i1 %131, i32 -1655846429, i32 -514871260
  store i32 %133, i32* %18
  br label %156

; <label>:134:                                    ; preds = %19
  store i32 -301568712, i32* %18
  br label %156

; <label>:135:                                    ; preds = %19
  ret void

; <label>:136:                                    ; preds = %19
  %137 = alloca %"class.std::deque"*, align 8
  %138 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %137, align 8
  store i32* %1, i32** %138, align 8
  %139 = load %"class.std::deque"*, %"class.std::deque"** %137, align 8
  %140 = bitcast %"class.std::deque"* %139 to %"class.std::_Deque_base"*
  %141 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %140, i32 0, i32 0
  %142 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %141, i32 0, i32 3
  %143 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %142, i32 0, i32 0
  %144 = load i32*, i32** %143, align 8
  %145 = bitcast %"class.std::deque"* %139 to %"class.std::_Deque_base"*
  %146 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %146, i32 0, i32 3
  %148 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %147, i32 0, i32 2
  %149 = load i32*, i32** %148, align 8
  %150 = getelementptr inbounds i32, i32* %149, i64 -1
  %151 = icmp ne i32* %144, %150
  store i32 -1241109158, i32* %18
  br label %156

; <label>:152:                                    ; preds = %19
  %153 = load volatile i32**, i32*** %5
  %154 = load i32*, i32** %153, align 8
  %155 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %155, i32* dereferenceable(4) %154)
  store i32 -1832651650, i32* %18
  br label %156

; <label>:156:                                    ; preds = %152, %136, %134, %103, %87, %67, %64, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.10"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %65

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load i32**, i32*** %56, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 1
  %59 = load i32*, i32** %58, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %52, i32* %59) #3
  invoke void @__cxa_rethrow() #12
          to label %127 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %64 unwind label %124

; <label>:64:                                     ; preds = %60
  br label %66

; <label>:65:                                     ; preds = %26
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i32, i32* @x.490
  %68 = load i32, i32* @y.491
  %69 = sub i32 0, 1
  %70 = add i32 %67, %69
  %71 = sub i32 %67, 1
  %72 = mul i32 %67, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %68, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %128

; <label>:92:                                     ; preds = %66, %128
  %93 = load i8*, i8** %5, align 8
  %94 = load i32, i32* %6, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  %97 = load i32, i32* @x.490
  %98 = load i32, i32* @y.491
  %99 = add i32 %97, 697728109
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 697728109
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  br i1 %121, label %123, label %128

; <label>:123:                                    ; preds = %92
  resume { i8*, i32 } %96

; <label>:124:                                    ; preds = %60
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  call void @__clang_call_terminate(i8* %126) #11
  unreachable

; <label>:127:                                    ; preds = %49
  unreachable

; <label>:128:                                    ; preds = %92, %66
  %129 = load i8*, i8** %5, align 8
  %130 = load i32, i32* %6, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  br label %92
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.492
  %7 = load i32, i32* @y.493
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1008073635, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1008073635, label %19
    i32 506382274, label %27
    i32 271981441, label %52
    i32 1548264472, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 506382274, i32 1548264472
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = bitcast i32* %32 to i8*
  %34 = bitcast i8* %33 to i32*
  %35 = load i32*, i32** %30, align 8
  %36 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %35) #3
  %37 = load i32, i32* %36, align 4
  store i32 %37, i32* %34, align 4
  %38 = load i32, i32* @x.492
  %39 = load i32, i32* @y.493
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 271981441, i32 1548264472
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %55 = alloca i32*, align 8
  %56 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %54, align 8
  store i32* %1, i32** %55, align 8
  store i32* %2, i32** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %54, align 8
  %58 = load i32*, i32** %55, align 8
  %59 = bitcast i32* %58 to i8*
  %60 = bitcast i8* %59 to i32*
  %61 = load i32*, i32** %56, align 8
  %62 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %61) #3
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %60, align 4
  store i32 506382274, i32* %15
  br label %64

; <label>:64:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, -1900892372484120171
  %11 = add i64 %10, 1
  %12 = sub i64 %11, -1900892372484120171
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 8
  %36 = add i64 %18, 7522050644562119719
  %37 = sub i64 %36, %35
  %38 = sub i64 %37, 7522050644562119719
  %39 = sub i64 %18, %35
  store i64 %38, i64* %3
  %40 = alloca i32
  store i32 2014495874, i32* %40
  br label %41

; <label>:41:                                     ; preds = %2, %132
  %42 = load i32, i32* %40
  switch i32 %42, label %43 [
    i32 2014495874, label %44
    i32 1804965336, label %49
    i32 -565614563, label %64
    i32 77634726, label %82
    i32 134935237, label %83
    i32 1240829443, label %111
    i32 1383464888, label %127
    i32 556686894, label %128
    i32 461097819, label %131
  ]

; <label>:43:                                     ; preds = %41
  br label %132

; <label>:44:                                     ; preds = %41
  %45 = load volatile i64, i64* %4
  %46 = load volatile i64, i64* %3
  %47 = icmp ugt i64 %45, %46
  %48 = select i1 %47, i32 1804965336, i32 134935237
  store i32 %48, i32* %40
  br label %132

; <label>:49:                                     ; preds = %41
  %50 = load i32, i32* @x.496
  %51 = load i32, i32* @y.497
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -565614563, i32 556686894
  store i32 %63, i32* %40
  br label %132

; <label>:64:                                     ; preds = %41
  %65 = load i64, i64* %7, align 8
  %66 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %66, i64 %65, i1 zeroext false)
  %67 = load i32, i32* @x.496
  %68 = load i32, i32* @y.497
  %69 = add i32 %67, -1648460493
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1648460493
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 77634726, i32 556686894
  store i32 %81, i32* %40
  br label %132

; <label>:82:                                     ; preds = %41
  store i32 134935237, i32* %40
  br label %132

; <label>:83:                                     ; preds = %41
  %84 = load i32, i32* @x.496
  %85 = load i32, i32* @y.497
  %86 = sub i32 %84, 593001017
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 593001017
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 1240829443, i32 461097819
  store i32 %110, i32* %40
  br label %132

; <label>:111:                                    ; preds = %41
  %112 = load i32, i32* @x.496
  %113 = load i32, i32* @y.497
  %114 = add i32 %112, 381481885
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, 381481885
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 1383464888, i32 461097819
  store i32 %126, i32* %40
  br label %132

; <label>:127:                                    ; preds = %41
  ret void

; <label>:128:                                    ; preds = %41
  %129 = load i64, i64* %7, align 8
  %130 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %130, i64 %129, i1 zeroext false)
  store i32 -565614563, i32* %40
  br label %132

; <label>:131:                                    ; preds = %41
  store i32 1240829443, i32* %40
  br label %132

; <label>:132:                                    ; preds = %131, %128, %111, %83, %82, %64, %49, %44, %43
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i32**
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::deque"*
  %9 = alloca %"class.std::deque"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32**, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %9, align 8
  store i64 %1, i64* %10, align 8
  %17 = zext i1 %2 to i8
  store i8 %17, i8* %11, align 1
  %18 = load %"class.std::deque"*, %"class.std::deque"** %9, align 8
  store %"class.std::deque"* %18, %"class.std::deque"** %8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 3
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %24 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = add i64 %31, -5902445791996131136
  %34 = sub i64 %33, %32
  %35 = sub i64 %34, -5902445791996131136
  %36 = sub i64 %31, %32
  %37 = sdiv exact i64 %35, 8
  %38 = add i64 %37, 4307074478274422913
  %39 = add i64 %38, 1
  %40 = sub i64 %39, 4307074478274422913
  %41 = add nsw i64 %37, 1
  store i64 %40, i64* %12, align 8
  %42 = load i64, i64* %12, align 8
  %43 = load i64, i64* %10, align 8
  %44 = add i64 %42, -3897994744001087009
  %45 = add i64 %44, %43
  %46 = sub i64 %45, -3897994744001087009
  %47 = add i64 %42, %43
  store i64 %46, i64* %13, align 8
  %48 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %49 = bitcast %"class.std::deque"* %48 to %"class.std::_Deque_base"*
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %50, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %7
  %53 = load i64, i64* %13, align 8
  %54 = mul i64 2, %53
  store i64 %54, i64* %6
  %55 = alloca i32
  store i32 909702499, i32* %55
  %56 = alloca i64
  %57 = alloca i64
  br label %58

; <label>:58:                                     ; preds = %3, %290
  %59 = load i32, i32* %55
  switch i32 %59, label %60 [
    i32 909702499, label %61
    i32 105408732, label %66
    i32 1374545060, label %87
    i32 689313414, label %89
    i32 640170807, label %90
    i32 -1622201471, label %103
    i32 -321134645, label %119
    i32 1229511672, label %146
    i32 -2072057491, label %178
    i32 778069928, label %179
    i32 1553415515, label %180
    i32 1917915002, label %214
    i32 1661537031, label %216
    i32 -491099739, label %217
    i32 -1771017042, label %258
    i32 -961957205, label %272
  ]

; <label>:60:                                     ; preds = %58
  br label %290

; <label>:61:                                     ; preds = %58
  %62 = load volatile i64, i64* %7
  %63 = load volatile i64, i64* %6
  %64 = icmp ugt i64 %62, %63
  %65 = select i1 %64, i32 105408732, i32 1553415515
  store i32 %65, i32* %55
  br label %290

; <label>:66:                                     ; preds = %58
  %67 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %68 = bitcast %"class.std::deque"* %67 to %"class.std::_Deque_base"*
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 0
  %71 = load i32**, i32*** %70, align 8
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = load i64, i64* %13, align 8
  %78 = sub i64 %76, 8003285786737330860
  %79 = sub i64 %78, %77
  %80 = add i64 %79, 8003285786737330860
  %81 = sub i64 %76, %77
  %82 = udiv i64 %80, 2
  %83 = getelementptr inbounds i32*, i32** %71, i64 %82
  store i32** %83, i32*** %5
  %84 = load i8, i8* %11, align 1
  %85 = trunc i8 %84 to i1
  %86 = select i1 %85, i32 1374545060, i32 689313414
  store i32 %86, i32* %55
  br label %290

; <label>:87:                                     ; preds = %58
  %88 = load i64, i64* %10, align 8
  store i32 640170807, i32* %55
  store i64 %88, i64* %56
  br label %290

; <label>:89:                                     ; preds = %58
  store i32 640170807, i32* %55
  store i64 0, i64* %56
  br label %290

; <label>:90:                                     ; preds = %58
  %91 = load i64, i64* %56
  %92 = load volatile i32**, i32*** %5
  %93 = getelementptr inbounds i32*, i32** %92, i64 %91
  store i32** %93, i32*** %14, align 8
  %94 = load i32**, i32*** %14, align 8
  %95 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %96 = bitcast %"class.std::deque"* %95 to %"class.std::_Deque_base"*
  %97 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %97, i32 0, i32 2
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %98, i32 0, i32 3
  %100 = load i32**, i32*** %99, align 8
  %101 = icmp ult i32** %94, %100
  %102 = select i1 %101, i32 -1622201471, i32 -321134645
  store i32 %102, i32* %55
  br label %290

; <label>:103:                                    ; preds = %58
  %104 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %105 = bitcast %"class.std::deque"* %104 to %"class.std::_Deque_base"*
  %106 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %106, i32 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 3
  %109 = load i32**, i32*** %108, align 8
  %110 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %111 = bitcast %"class.std::deque"* %110 to %"class.std::_Deque_base"*
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %112, i32 0, i32 3
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %113, i32 0, i32 3
  %115 = load i32**, i32*** %114, align 8
  %116 = getelementptr inbounds i32*, i32** %115, i64 1
  %117 = load i32**, i32*** %14, align 8
  %118 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %109, i32** %116, i32** %117)
  store i32 778069928, i32* %55
  br label %290

; <label>:119:                                    ; preds = %58
  %120 = load i32, i32* @x.498
  %121 = load i32, i32* @y.499
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 false, true
  %132 = and i1 %129, false
  %133 = and i1 %127, %131
  %134 = and i1 %130, false
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 false, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 1229511672, i32 -961957205
  store i32 %145, i32* %55
  br label %290

; <label>:146:                                    ; preds = %58
  %147 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %148 = bitcast %"class.std::deque"* %147 to %"class.std::_Deque_base"*
  %149 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %149, i32 0, i32 2
  %151 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %150, i32 0, i32 3
  %152 = load i32**, i32*** %151, align 8
  %153 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %154 = bitcast %"class.std::deque"* %153 to %"class.std::_Deque_base"*
  %155 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %155, i32 0, i32 3
  %157 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %156, i32 0, i32 3
  %158 = load i32**, i32*** %157, align 8
  %159 = getelementptr inbounds i32*, i32** %158, i64 1
  %160 = load i32**, i32*** %14, align 8
  %161 = load i64, i64* %12, align 8
  %162 = getelementptr inbounds i32*, i32** %160, i64 %161
  %163 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %152, i32** %159, i32** %162)
  %164 = load i32, i32* @x.498
  %165 = load i32, i32* @y.499
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  %177 = select i1 %175, i32 -2072057491, i32 -961957205
  store i32 %177, i32* %55
  br label %290

; <label>:178:                                    ; preds = %58
  store i32 778069928, i32* %55
  br label %290

; <label>:179:                                    ; preds = %58
  store i32 -1771017042, i32* %55
  br label %290

; <label>:180:                                    ; preds = %58
  %181 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %182 = bitcast %"class.std::deque"* %181 to %"class.std::_Deque_base"*
  %183 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %183, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %187 = bitcast %"class.std::deque"* %186 to %"class.std::_Deque_base"*
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 1
  %190 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %189, i64* dereferenceable(8) %10)
  %191 = load i64, i64* %190, align 8
  %192 = sub i64 0, %191
  %193 = sub i64 %185, %192
  %194 = add i64 %185, %191
  %195 = sub i64 0, 2
  %196 = sub i64 %193, %195
  %197 = add i64 %193, 2
  store i64 %196, i64* %15, align 8
  %198 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %199 = bitcast %"class.std::deque"* %198 to %"class.std::_Deque_base"*
  %200 = load i64, i64* %15, align 8
  %201 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %199, i64 %200)
  store i32** %201, i32*** %16, align 8
  %202 = load i32**, i32*** %16, align 8
  %203 = load i64, i64* %15, align 8
  %204 = load i64, i64* %13, align 8
  %205 = add i64 %203, 4383241626831110333
  %206 = sub i64 %205, %204
  %207 = sub i64 %206, 4383241626831110333
  %208 = sub i64 %203, %204
  %209 = udiv i64 %207, 2
  %210 = getelementptr inbounds i32*, i32** %202, i64 %209
  store i32** %210, i32*** %4
  %211 = load i8, i8* %11, align 1
  %212 = trunc i8 %211 to i1
  %213 = select i1 %212, i32 1917915002, i32 1661537031
  store i32 %213, i32* %55
  br label %290

; <label>:214:                                    ; preds = %58
  %215 = load i64, i64* %10, align 8
  store i32 -491099739, i32* %55
  store i64 %215, i64* %57
  br label %290

; <label>:216:                                    ; preds = %58
  store i32 -491099739, i32* %55
  store i64 0, i64* %57
  br label %290

; <label>:217:                                    ; preds = %58
  %218 = load i64, i64* %57
  %219 = load volatile i32**, i32*** %4
  %220 = getelementptr inbounds i32*, i32** %219, i64 %218
  store i32** %220, i32*** %14, align 8
  %221 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %222 = bitcast %"class.std::deque"* %221 to %"class.std::_Deque_base"*
  %223 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %223, i32 0, i32 2
  %225 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %224, i32 0, i32 3
  %226 = load i32**, i32*** %225, align 8
  %227 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %228 = bitcast %"class.std::deque"* %227 to %"class.std::_Deque_base"*
  %229 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %229, i32 0, i32 3
  %231 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %230, i32 0, i32 3
  %232 = load i32**, i32*** %231, align 8
  %233 = getelementptr inbounds i32*, i32** %232, i64 1
  %234 = load i32**, i32*** %14, align 8
  %235 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %226, i32** %233, i32** %234)
  %236 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %237 = bitcast %"class.std::deque"* %236 to %"class.std::_Deque_base"*
  %238 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %239 = bitcast %"class.std::deque"* %238 to %"class.std::_Deque_base"*
  %240 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %240, i32 0, i32 0
  %242 = load i32**, i32*** %241, align 8
  %243 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %244 = bitcast %"class.std::deque"* %243 to %"class.std::_Deque_base"*
  %245 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %245, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %237, i32** %242, i64 %247) #3
  %248 = load i32**, i32*** %16, align 8
  %249 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %250 = bitcast %"class.std::deque"* %249 to %"class.std::_Deque_base"*
  %251 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %251, i32 0, i32 0
  store i32** %248, i32*** %252, align 8
  %253 = load i64, i64* %15, align 8
  %254 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %255 = bitcast %"class.std::deque"* %254 to %"class.std::_Deque_base"*
  %256 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %255, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %256, i32 0, i32 1
  store i64 %253, i64* %257, align 8
  store i32 -1771017042, i32* %55
  br label %290

; <label>:258:                                    ; preds = %58
  %259 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %260 = bitcast %"class.std::deque"* %259 to %"class.std::_Deque_base"*
  %261 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %260, i32 0, i32 0
  %262 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %261, i32 0, i32 2
  %263 = load i32**, i32*** %14, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %262, i32** %263) #3
  %264 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %265 = bitcast %"class.std::deque"* %264 to %"class.std::_Deque_base"*
  %266 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %266, i32 0, i32 3
  %268 = load i32**, i32*** %14, align 8
  %269 = load i64, i64* %12, align 8
  %270 = getelementptr inbounds i32*, i32** %268, i64 %269
  %271 = getelementptr inbounds i32*, i32** %270, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %267, i32** %271) #3
  ret void

; <label>:272:                                    ; preds = %58
  %273 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %274 = bitcast %"class.std::deque"* %273 to %"class.std::_Deque_base"*
  %275 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %275, i32 0, i32 2
  %277 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %276, i32 0, i32 3
  %278 = load i32**, i32*** %277, align 8
  %279 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %280 = bitcast %"class.std::deque"* %279 to %"class.std::_Deque_base"*
  %281 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %280, i32 0, i32 0
  %282 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %281, i32 0, i32 3
  %283 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %282, i32 0, i32 3
  %284 = load i32**, i32*** %283, align 8
  %285 = getelementptr inbounds i32*, i32** %284, i64 1
  %286 = load i32**, i32*** %14, align 8
  %287 = load i64, i64* %12, align 8
  %288 = getelementptr inbounds i32*, i32** %286, i64 %287
  %289 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %278, i32** %285, i32** %288)
  store i32 1229511672, i32* %55
  br label %290

; <label>:290:                                    ; preds = %272, %217, %216, %214, %180, %179, %178, %146, %119, %103, %90, %89, %87, %66, %61, %60
  br label %58
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.500
  %8 = load i32, i32* @y.501
  %9 = sub i32 %7, -1460909882
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1460909882
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1443424388, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %78
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1443424388, label %21
    i32 -1410734833, label %29
    i32 1914811899, label %66
    i32 -2081715907, label %68
  ]

; <label>:20:                                     ; preds = %18
  br label %78

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1410734833, i32 -2081715907
  store i32 %28, i32* %17
  br label %78

; <label>:29:                                     ; preds = %18
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i32**, align 8
  store i32** %0, i32*** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i32** %2, i32*** %32, align 8
  %33 = load i32**, i32*** %30, align 8
  %34 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %33)
  %35 = load i32**, i32*** %31, align 8
  %36 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %35)
  %37 = load i32**, i32*** %32, align 8
  %38 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %34, i32** %36, i32** %37)
  store i32** %38, i32*** %4
  %39 = load i32, i32* @x.500
  %40 = load i32, i32* @y.501
  %41 = sub i32 %39, -1693330145
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -1693330145
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 1914811899, i32 -2081715907
  store i32 %65, i32* %17
  br label %78

; <label>:66:                                     ; preds = %18
  %67 = load volatile i32**, i32*** %4
  ret i32** %67

; <label>:68:                                     ; preds = %18
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i32**, align 8
  store i32** %0, i32*** %69, align 8
  store i32** %1, i32*** %70, align 8
  store i32** %2, i32*** %71, align 8
  %72 = load i32**, i32*** %69, align 8
  %73 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %72)
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %74)
  %76 = load i32**, i32*** %71, align 8
  %77 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %73, i32** %75, i32** %76)
  store i32 -1410734833, i32* %17
  br label %78

; <label>:78:                                     ; preds = %68, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, -5618028893677341618
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -5618028893677341618
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -269001396, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -269001396, label %23
    i32 1653825720, label %27
    i32 -1534061177, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 1653825720, i32 -1534061177
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %5, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 -1534061177, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32**, i32*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %36
  ret i32** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.514
  %6 = load i32, i32* @y.515
  %7 = add i32 %5, 926197438
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 926197438
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -6322820, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -6322820, label %19
    i32 1826398279, label %27
    i32 1969831018, label %45
    i32 -727109099, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1826398279, i32 -727109099
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  store i32** %29, i32*** %2
  %30 = load i32, i32* @x.514
  %31 = load i32, i32* @y.515
  %32 = add i32 %30, 866783368
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 866783368
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1969831018, i32 -727109099
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile i32**, i32*** %2
  ret i32** %46

; <label>:47:                                     ; preds = %16
  %48 = alloca i32**, align 8
  store i32** %0, i32*** %48, align 8
  %49 = load i32**, i32*** %48, align 8
  store i32 1826398279, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 16330126, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %151
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 16330126, label %22
    i32 -2110434886, label %26
    i32 161279755, label %42
    i32 -1814329317, label %69
    i32 -920122286, label %70
    i32 -1902370316, label %77
  ]

; <label>:21:                                     ; preds = %19
  br label %151

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -2110434886, i32 -920122286
  store i32 %25, i32* %18
  br label %151

; <label>:26:                                     ; preds = %19
  %27 = load i32, i32* @x.520
  %28 = load i32, i32* @y.521
  %29 = add i32 %27, 1517333057
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1517333057
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 161279755, i32 -1902370316
  store i32 %41, i32* %18
  br label %151

; <label>:42:                                     ; preds = %19
  %43 = load i32**, i32*** %7, align 8
  %44 = load i64, i64* %8, align 8
  %45 = add i64 0, 6247744053492042378
  %46 = sub i64 %45, %44
  %47 = sub i64 %46, 6247744053492042378
  %48 = sub i64 0, %44
  %49 = getelementptr inbounds i32*, i32** %43, i64 %47
  %50 = bitcast i32** %49 to i8*
  %51 = load i32**, i32*** %5, align 8
  %52 = bitcast i32** %51 to i8*
  %53 = load i64, i64* %8, align 8
  %54 = mul i64 8, %53
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %50, i8* %52, i64 %54, i32 8, i1 false)
  %55 = load i32, i32* @x.520
  %56 = load i32, i32* @y.521
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -1814329317, i32 -1902370316
  store i32 %68, i32* %18
  br label %151

; <label>:69:                                     ; preds = %19
  store i32 -920122286, i32* %18
  br label %151

; <label>:70:                                     ; preds = %19
  %71 = load i32**, i32*** %7, align 8
  %72 = load i64, i64* %8, align 8
  %73 = sub i64 0, %72
  %74 = add i64 0, %73
  %75 = sub i64 0, %72
  %76 = getelementptr inbounds i32*, i32** %71, i64 %74
  ret i32** %76

; <label>:77:                                     ; preds = %19
  %78 = load i32**, i32*** %7, align 8
  %79 = load i64, i64* %8, align 8
  %80 = shl i64 0, %79
  %81 = sub i64 0, -3468840393796533768
  %82 = sub i64 %81, 0
  %83 = add i64 %82, -3468840393796533768
  %84 = sub i64 0, 0
  %85 = sub i64 %83, -6606277026773901860
  %86 = add i64 %85, %79
  %87 = add i64 %86, -6606277026773901860
  %88 = add i64 %83, %79
  %89 = shl i64 0, %79
  %90 = sub i64 0, 0
  %91 = add i64 0, %90
  %92 = sub i64 0, 0
  %93 = sub i64 0, %91
  %94 = sub i64 0, %79
  %95 = add i64 %93, %94
  %96 = sub i64 0, %95
  %97 = add i64 %91, %79
  %98 = add i64 0, -4813021904459205199
  %99 = sub i64 %98, 0
  %100 = sub i64 %99, -4813021904459205199
  %101 = sub i64 0, 0
  %102 = sub i64 %100, 6923370639956265072
  %103 = add i64 %102, %79
  %104 = add i64 %103, 6923370639956265072
  %105 = add i64 %100, %79
  %106 = sub i64 0, %79
  %107 = add i64 0, %106
  %108 = sub i64 0, %79
  %109 = getelementptr inbounds i32*, i32** %78, i64 %107
  %110 = bitcast i32** %109 to i8*
  %111 = load i32**, i32*** %5, align 8
  %112 = bitcast i32** %111 to i8*
  %113 = load i64, i64* %8, align 8
  %114 = sub i64 0, -9074259773565612507
  %115 = sub i64 %114, 8
  %116 = add i64 %115, -9074259773565612507
  %117 = sub i64 0, 8
  %118 = add i64 %116, -8166267429476351399
  %119 = add i64 %118, %113
  %120 = sub i64 %119, -8166267429476351399
  %121 = add i64 %116, %113
  %122 = shl i64 8, %113
  %123 = shl i64 8, %113
  %124 = add i64 8, 3262864816311337296
  %125 = sub i64 %124, %113
  %126 = sub i64 %125, 3262864816311337296
  %127 = sub i64 8, %113
  %128 = mul i64 %126, %113
  %129 = add i64 0, -4122319418196345789
  %130 = sub i64 %129, 8
  %131 = sub i64 %130, -4122319418196345789
  %132 = sub i64 0, 8
  %133 = sub i64 0, %113
  %134 = sub i64 %131, %133
  %135 = add i64 %131, %113
  %136 = sub i64 0, 8
  %137 = add i64 0, %136
  %138 = sub i64 0, 8
  %139 = sub i64 0, %137
  %140 = sub i64 0, %113
  %141 = add i64 %139, %140
  %142 = sub i64 0, %141
  %143 = add i64 %137, %113
  %144 = shl i64 8, %113
  %145 = add i64 8, -1861157484965505018
  %146 = sub i64 %145, %113
  %147 = sub i64 %146, -1861157484965505018
  %148 = sub i64 8, %113
  %149 = mul i64 %147, %113
  %150 = mul i64 8, %113
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %110, i8* %112, i64 %150, i32 8, i1 false)
  store i32 161279755, i32* %18
  br label %151

; <label>:151:                                    ; preds = %77, %69, %42, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.524
  %7 = load i32, i32* @y.525
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1479918370, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1479918370, label %19
    i32 -1091451903, label %27
    i32 -427514810, label %64
    i32 358657815, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1091451903, i32 358657815
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  %30 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = icmp eq i32* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.524
  %38 = load i32, i32* @y.525
  %39 = sub i32 %37, 796807616
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 796807616
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -427514810, i32 358657815
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Deque_iterator"*, align 8
  %68 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %67, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %68, align 8
  %69 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  %71 = load i32*, i32** %70, align 8
  %72 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %68, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 0
  %74 = load i32*, i32** %73, align 8
  %75 = icmp eq i32* %71, %74
  store i32 -1091451903, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.10"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %77

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %29, align 8
  br label %76

; <label>:32:                                     ; preds = %1
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %33 unwind label %77

; <label>:33:                                     ; preds = %32
  %34 = load i32, i32* @x.530
  %35 = load i32, i32* @y.531
  %36 = add i32 %34, -409789676
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -409789676
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %80

; <label>:48:                                     ; preds = %33, %80
  %49 = load i32, i32* @x.530
  %50 = load i32, i32* @y.531
  %51 = sub i32 %49, 808614198
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 808614198
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %80

; <label>:75:                                     ; preds = %48
  br label %76

; <label>:76:                                     ; preds = %75, %25
  ret void

; <label>:77:                                     ; preds = %32, %16
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  call void @__clang_call_terminate(i8* %79) #11
  unreachable

; <label>:80:                                     ; preds = %48, %33
  br label %48
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.534
  %5 = load i32, i32* @y.535
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1133762504, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %121
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1133762504, label %17
    i32 -1428468449, label %37
    i32 -716424346, label %86
    i32 67088745, label %87
  ]

; <label>:16:                                     ; preds = %14
  br label %121

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1428468449, i32 67088745
  store i32 %36, i32* %13
  br label %121

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %38, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %38, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %40) #3
  %42 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %41, i32* %46)
  %47 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %48 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 1
  %52 = load i32*, i32** %51, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %47, i32* %52) #3
  %53 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 2
  %56 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 3
  %60 = load i32**, i32*** %59, align 8
  %61 = getelementptr inbounds i32*, i32** %60, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %55, i32** %61) #3
  %62 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  store i32* %66, i32** %70, align 8
  %71 = load i32, i32* @x.534
  %72 = load i32, i32* @y.535
  %73 = add i32 %71, -1117399887
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1117399887
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -716424346, i32 67088745
  store i32 %85, i32* %13
  br label %121

; <label>:86:                                     ; preds = %14
  ret void

; <label>:87:                                     ; preds = %14
  %88 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %88, align 8
  %89 = load %"class.std::deque"*, %"class.std::deque"** %88, align 8
  %90 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %91 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %90) #3
  %92 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 2
  %95 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %94, i32 0, i32 0
  %96 = load i32*, i32** %95, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.10"* dereferenceable(1) %91, i32* %96)
  %97 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %98 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %99 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %99, i32 0, i32 2
  %101 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %100, i32 0, i32 1
  %102 = load i32*, i32** %101, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %97, i32* %102) #3
  %103 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %104, i32 0, i32 2
  %106 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %107 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %107, i32 0, i32 2
  %109 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %108, i32 0, i32 3
  %110 = load i32**, i32*** %109, align 8
  %111 = getelementptr inbounds i32*, i32** %110, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %105, i32** %111) #3
  %112 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %113 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %113, i32 0, i32 2
  %115 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %114, i32 0, i32 1
  %116 = load i32*, i32** %115, align 8
  %117 = bitcast %"class.std::deque"* %89 to %"class.std::_Deque_base"*
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %118, i32 0, i32 2
  %120 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %119, i32 0, i32 0
  store i32* %116, i32** %120, align 8
  store i32 -1428468449, i32* %13
  br label %121

; <label>:121:                                    ; preds = %87, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.11"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19"*
  %8 = alloca %"class.std::vector.8"*
  %9 = alloca i32**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.538
  %14 = load i32, i32* @y.539
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 235441457, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %239
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 235441457, label %26
    i32 -1005022956, label %46
    i32 1527182466, label %88
    i32 454436662, label %91
    i32 -1152584046, label %119
    i32 -1269687863, label %150
    i32 542423522, label %151
    i32 -1574702418, label %158
    i32 -832651776, label %198
    i32 410951849, label %210
    i32 604849697, label %211
    i32 -152711428, label %212
    i32 818007261, label %223
  ]

; <label>:25:                                     ; preds = %23
  br label %239

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -1005022956, i32 -152711428
  store i32 %45, i32* %22
  br label %239

; <label>:46:                                     ; preds = %23
  %47 = alloca %"class.std::vector.8"*, align 8
  %48 = alloca i64, align 8
  store i64* %48, i64** %10
  %49 = alloca i32*, align 8
  store i32** %49, i32*** %9
  %50 = alloca %"class.std::vector.8", align 8
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %51, %"class.__gnu_cxx::__normal_iterator.19"** %7
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %52, %"class.__gnu_cxx::__normal_iterator.19"** %6
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %47, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile i32**, i32*** %9
  store i32* %2, i32** %54, align 8
  %55 = load %"class.std::vector.8"*, %"class.std::vector.8"** %47, align 8
  store %"class.std::vector.8"* %55, %"class.std::vector.8"** %5
  %56 = load volatile i64*, i64** %10
  %57 = load i64, i64* %56, align 8
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %59 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.8"* %58) #3
  %60 = icmp ugt i64 %57, %59
  store i1 %60, i1* %4
  %61 = load i32, i32* @x.538
  %62 = load i32, i32* @y.539
  %63 = sub i32 %61, 2076873896
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 2076873896
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 1527182466, i32 -152711428
  store i32 %87, i32* %22
  br label %239

; <label>:88:                                     ; preds = %23
  %89 = load volatile i1, i1* %4
  %90 = select i1 %89, i32 454436662, i32 542423522
  store i32 %90, i32* %22
  br label %239

; <label>:91:                                     ; preds = %23
  %92 = load i32, i32* @x.538
  %93 = load i32, i32* @y.539
  %94 = add i32 %92, -671802812
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -671802812
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 -1152584046, i32 818007261
  store i32 %118, i32* %22
  br label %239

; <label>:119:                                    ; preds = %23
  %120 = load volatile i64*, i64** %10
  %121 = load i64, i64* %120, align 8
  %122 = load volatile i32**, i32*** %9
  %123 = load i32*, i32** %122, align 8
  %124 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %125 = bitcast %"class.std::vector.8"* %124 to %"struct.std::_Vector_base.9"*
  %126 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %125) #3
  %127 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"* %127, i64 %121, i32* dereferenceable(4) %123, %"class.std::allocator.10"* dereferenceable(1) %126)
  %128 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %129 = bitcast %"class.std::vector.8"* %128 to %"struct.std::_Vector_base.9"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %129, i32 0, i32 0
  %131 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %132 = bitcast %"class.std::vector.8"* %131 to %"struct.std::_Vector_base.9"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %132, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %130, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %133) #3
  %134 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %134) #3
  %135 = load i32, i32* @x.538
  %136 = load i32, i32* @y.539
  %137 = add i32 %135, -1679050787
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -1679050787
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -1269687863, i32 818007261
  store i32 %149, i32* %22
  br label %239

; <label>:150:                                    ; preds = %23
  store i32 604849697, i32* %22
  br label %239

; <label>:151:                                    ; preds = %23
  %152 = load volatile i64*, i64** %10
  %153 = load i64, i64* %152, align 8
  %154 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %155 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %154) #3
  %156 = icmp ugt i64 %153, %155
  %157 = select i1 %156, i32 -1574702418, i32 -832651776
  store i32 %157, i32* %22
  br label %239

; <label>:158:                                    ; preds = %23
  %159 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %160 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"* %159) #3
  %161 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %7
  %162 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %161, i32 0, i32 0
  store i32* %160, i32** %162, align 8
  %163 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %164 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"* %163) #3
  %165 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %165, i32 0, i32 0
  store i32* %164, i32** %166, align 8
  %167 = load volatile i32**, i32*** %9
  %168 = load i32*, i32** %167, align 8
  %169 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %7
  %170 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %169, i32 0, i32 0
  %171 = load i32*, i32** %170, align 8
  %172 = load volatile %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %6
  %173 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %172, i32 0, i32 0
  %174 = load i32*, i32** %173, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %171, i32* %174, i32* dereferenceable(4) %168)
  %175 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %176 = bitcast %"class.std::vector.8"* %175 to %"struct.std::_Vector_base.9"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %177, i32 0, i32 1
  %179 = load i32*, i32** %178, align 8
  %180 = load volatile i64*, i64** %10
  %181 = load i64, i64* %180, align 8
  %182 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %183 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"* %182) #3
  %184 = add i64 %181, 2904336535085751331
  %185 = sub i64 %184, %183
  %186 = sub i64 %185, 2904336535085751331
  %187 = sub i64 %181, %183
  %188 = load volatile i32**, i32*** %9
  %189 = load i32*, i32** %188, align 8
  %190 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %191 = bitcast %"class.std::vector.8"* %190 to %"struct.std::_Vector_base.9"*
  %192 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %191) #3
  %193 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %179, i64 %186, i32* dereferenceable(4) %189, %"class.std::allocator.10"* dereferenceable(1) %192)
  %194 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %195 = bitcast %"class.std::vector.8"* %194 to %"struct.std::_Vector_base.9"*
  %196 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %195, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %196, i32 0, i32 1
  store i32* %193, i32** %197, align 8
  store i32 410951849, i32* %22
  br label %239

; <label>:198:                                    ; preds = %23
  %199 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %200 = bitcast %"class.std::vector.8"* %199 to %"struct.std::_Vector_base.9"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %201, i32 0, i32 0
  %203 = load i32*, i32** %202, align 8
  %204 = load volatile i64*, i64** %10
  %205 = load i64, i64* %204, align 8
  %206 = load volatile i32**, i32*** %9
  %207 = load i32*, i32** %206, align 8
  %208 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %203, i64 %205, i32* dereferenceable(4) %207)
  %209 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"* %209, i32* %208) #3
  store i32 410951849, i32* %22
  br label %239

; <label>:210:                                    ; preds = %23
  store i32 604849697, i32* %22
  br label %239

; <label>:211:                                    ; preds = %23
  ret void

; <label>:212:                                    ; preds = %23
  %213 = alloca %"class.std::vector.8"*, align 8
  %214 = alloca i64, align 8
  %215 = alloca i32*, align 8
  %216 = alloca %"class.std::vector.8", align 8
  %217 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %218 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %213, align 8
  store i64 %1, i64* %214, align 8
  store i32* %2, i32** %215, align 8
  %219 = load %"class.std::vector.8"*, %"class.std::vector.8"** %213, align 8
  %220 = load i64, i64* %214, align 8
  %221 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.8"* %219) #3
  %222 = icmp ugt i64 %220, %221
  store i32 -1005022956, i32* %22
  br label %239

; <label>:223:                                    ; preds = %23
  %224 = load volatile i64*, i64** %10
  %225 = load i64, i64* %224, align 8
  %226 = load volatile i32**, i32*** %9
  %227 = load i32*, i32** %226, align 8
  %228 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %229 = bitcast %"class.std::vector.8"* %228 to %"struct.std::_Vector_base.9"*
  %230 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %229) #3
  %231 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"* %231, i64 %225, i32* dereferenceable(4) %227, %"class.std::allocator.10"* dereferenceable(1) %230)
  %232 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  %233 = bitcast %"class.std::vector.8"* %232 to %"struct.std::_Vector_base.9"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %233, i32 0, i32 0
  %235 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %236 = bitcast %"class.std::vector.8"* %235 to %"struct.std::_Vector_base.9"*
  %237 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %236, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %234, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %237) #3
  %238 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.8"* %238) #3
  store i32 -1152584046, i32* %22
  br label %239

; <label>:239:                                    ; preds = %223, %212, %210, %198, %158, %151, %150, %119, %91, %88, %46, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.540
  %6 = load i32, i32* @y.541
  %7 = sub i32 %5, -1427954693
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1427954693
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1973386368, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %144
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1973386368, label %19
    i32 -1469353754, label %39
    i32 -428440602, label %72
    i32 331347589, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %144

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1469353754, i32 331347589
  store i32 %38, i32* %15
  br label %144

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %42 = bitcast %"class.std::vector.8"* %41 to %"struct.std::_Vector_base.9"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 2
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %"class.std::vector.8"* %41 to %"struct.std::_Vector_base.9"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %45 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = sub i64 %50, -281112740473896588
  %53 = sub i64 %52, %51
  %54 = add i64 %53, -281112740473896588
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 4
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.540
  %58 = load i32, i32* @y.541
  %59 = sub i32 %57, 233222236
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 233222236
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -428440602, i32 331347589
  store i32 %71, i32* %15
  br label %144

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %75, align 8
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %75, align 8
  %77 = bitcast %"class.std::vector.8"* %76 to %"struct.std::_Vector_base.9"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 2
  %80 = load i32*, i32** %79, align 8
  %81 = bitcast %"class.std::vector.8"* %76 to %"struct.std::_Vector_base.9"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = ptrtoint i32* %80 to i64
  %86 = ptrtoint i32* %84 to i64
  %87 = add i64 0, -2413444047495683104
  %88 = sub i64 %87, %85
  %89 = sub i64 %88, -2413444047495683104
  %90 = sub i64 0, %85
  %91 = sub i64 0, %86
  %92 = sub i64 %89, %91
  %93 = add i64 %89, %86
  %94 = add i64 %85, 5996725369038233221
  %95 = sub i64 %94, %86
  %96 = sub i64 %95, 5996725369038233221
  %97 = sub i64 %85, %86
  %98 = mul i64 %96, %86
  %99 = sub i64 %85, 1793508579530757103
  %100 = sub i64 %99, %86
  %101 = add i64 %100, 1793508579530757103
  %102 = sub i64 %85, %86
  %103 = mul i64 %101, %86
  %104 = shl i64 %85, %86
  %105 = shl i64 %85, %86
  %106 = add i64 0, 5702864601124734271
  %107 = sub i64 %106, %85
  %108 = sub i64 %107, 5702864601124734271
  %109 = sub i64 0, %85
  %110 = sub i64 0, %108
  %111 = sub i64 0, %86
  %112 = add i64 %110, %111
  %113 = sub i64 0, %112
  %114 = add i64 %108, %86
  %115 = sub i64 0, %86
  %116 = add i64 %85, %115
  %117 = sub i64 %85, %86
  %118 = mul i64 %116, %86
  %119 = sub i64 0, %86
  %120 = add i64 %85, %119
  %121 = sub i64 %85, %86
  %122 = sub i64 %120, -8654216610841962657
  %123 = sub i64 %122, 4
  %124 = add i64 %123, -8654216610841962657
  %125 = sub i64 %120, 4
  %126 = mul i64 %124, 4
  %127 = shl i64 %120, 4
  %128 = shl i64 %120, 4
  %129 = shl i64 %120, 4
  %130 = add i64 0, -5933755137916754005
  %131 = sub i64 %130, %120
  %132 = sub i64 %131, -5933755137916754005
  %133 = sub i64 0, %120
  %134 = sub i64 %132, -5874616662043163784
  %135 = add i64 %134, 4
  %136 = add i64 %135, -5874616662043163784
  %137 = add i64 %132, 4
  %138 = sub i64 0, 4
  %139 = add i64 %120, %138
  %140 = sub i64 %120, 4
  %141 = mul i64 %139, 4
  %142 = shl i64 %120, 4
  %143 = sdiv exact i64 %120, 4
  store i32 -1469353754, i32* %15
  br label %144

; <label>:144:                                    ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.8"*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"* %12, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.542
  %20 = load i32, i32* @y.543
  %21 = add i32 %19, 837527687
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 837527687
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %112

; <label>:45:                                     ; preds = %18, %112
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %9, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %10, align 4
  %49 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %49) #3
  %50 = load i32, i32* @x.542
  %51 = load i32, i32* @y.543
  %52 = sub i32 %50, -1472639247
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1472639247
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %112

; <label>:64:                                     ; preds = %45
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.542
  %67 = load i32, i32* @y.543
  %68 = add i32 %66, -211308307
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, -211308307
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %117

; <label>:92:                                     ; preds = %65, %117
  %93 = load i8*, i8** %9, align 8
  %94 = load i32, i32* %10, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  %97 = load i32, i32* @x.542
  %98 = load i32, i32* @y.543
  %99 = sub i32 %97, 1263561065
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 1263561065
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %117

; <label>:111:                                    ; preds = %92
  resume { i8*, i32 } %96

; <label>:112:                                    ; preds = %45, %18
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %9, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %10, align 4
  %116 = bitcast %"class.std::vector.8"* %11 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.9"* %116) #3
  br label %45

; <label>:117:                                    ; preds = %92, %65
  %118 = load i8*, i8** %9, align 8
  %119 = load i32, i32* %10, align 4
  %120 = insertvalue { i8*, i32 } undef, i8* %118, 0
  %121 = insertvalue { i8*, i32 } %120, i32 %119, 1
  br label %92
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 %12, -3220859640010112290
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -3220859640010112290
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.19"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.19"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.554
  %9 = load i32, i32* @y.555
  %10 = sub i32 %8, 1860439869
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1860439869
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1413127320, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %89
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1413127320, label %22
    i32 1650303987, label %42
    i32 771416390, label %78
    i32 -493862633, label %80
  ]

; <label>:21:                                     ; preds = %19
  br label %89

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1650303987, i32 -493862633
  store i32 %41, i32* %18
  br label %89

; <label>:42:                                     ; preds = %19
  %43 = alloca i32*, align 8
  %44 = alloca i64, align 8
  %45 = alloca i32*, align 8
  %46 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %43, align 8
  store i64 %1, i64* %44, align 8
  store i32* %2, i32** %45, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %46, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = load i64, i64* %44, align 8
  %49 = load i32*, i32** %45, align 8
  %50 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %47, i64 %48, i32* dereferenceable(4) %49)
  store i32* %50, i32** %5
  %51 = load i32, i32* @x.554
  %52 = load i32, i32* @y.555
  %53 = sub i32 %51, 328047718
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 328047718
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 771416390, i32 -493862633
  store i32 %77, i32* %18
  br label %89

; <label>:78:                                     ; preds = %19
  %79 = load volatile i32*, i32** %5
  ret i32* %79

; <label>:80:                                     ; preds = %19
  %81 = alloca i32*, align 8
  %82 = alloca i64, align 8
  %83 = alloca i32*, align 8
  %84 = alloca %"class.std::allocator.10"*, align 8
  store i32* %0, i32** %81, align 8
  store i64 %1, i64* %82, align 8
  store i32* %2, i32** %83, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %84, align 8
  %85 = load i32*, i32** %81, align 8
  %86 = load i64, i64* %82, align 8
  %87 = load i32*, i32** %83, align 8
  %88 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %85, i64 %86, i32* dereferenceable(4) %87)
  store i32 1650303987, i32* %18
  br label %89

; <label>:89:                                     ; preds = %80, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.8"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.556
  %4 = load i32, i32* @y.557
  %5 = add i32 %3, 1509416802
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1509416802
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %75

; <label>:29:                                     ; preds = %2, %75
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %33 = load i32*, i32** %31, align 8
  %34 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %39 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %38) #3
  %40 = load i32, i32* @x.556
  %41 = load i32, i32* @y.557
  %42 = sub i32 %40, 597000049
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 597000049
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %75

; <label>:66:                                     ; preds = %29
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %33, i32* %37, %"class.std::allocator.10"* dereferenceable(1) %39)
          to label %67 unwind label %72

; <label>:67:                                     ; preds = %66
  %68 = load i32*, i32** %31, align 8
  %69 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 1
  store i32* %68, i32** %71, align 8
  ret void

; <label>:72:                                     ; preds = %66
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #11
  unreachable

; <label>:75:                                     ; preds = %29, %2
  %76 = alloca %"class.std::vector.8"*, align 8
  %77 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %76, align 8
  store i32* %1, i32** %77, align 8
  %78 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  %79 = load i32*, i32** %77, align 8
  %80 = bitcast %"class.std::vector.8"* %78 to %"struct.std::_Vector_base.9"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 1
  %83 = load i32*, i32** %82, align 8
  %84 = bitcast %"class.std::vector.8"* %78 to %"struct.std::_Vector_base.9"*
  %85 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %84) #3
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %56

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.560
  %15 = load i32, i32* @y.561
  %16 = add i32 %14, -1744805630
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1744805630
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %65

; <label>:40:                                     ; preds = %13, %65
  %41 = load i32, i32* @x.560
  %42 = load i32, i32* @y.561
  %43 = sub i32 %41, 584214118
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 584214118
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %65

; <label>:55:                                     ; preds = %40
  ret void

; <label>:56:                                     ; preds = %3
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %7, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %7, align 8
  %62 = load i32, i32* %8, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %40, %13
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.8"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.10"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.8"* %7 to %"struct.std::_Vector_base.9"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.564
  %6 = load i32, i32* @y.565
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 736758021, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 736758021, label %18
    i32 -350960618, label %38
    i32 1686874445, label %74
    i32 -834557320, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -350960618, i32 -834557320
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %40 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %40, align 8
  %41 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41 to %"class.std::allocator.10"*
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %42, %"class.std::allocator.10"* dereferenceable(1) %43) #3
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 0
  store i32* null, i32** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  store i32* null, i32** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 2
  store i32* null, i32** %46, align 8
  %47 = load i32, i32* @x.564
  %48 = load i32, i32* @y.565
  %49 = add i32 %47, 1395087752
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 1395087752
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1686874445, i32 -834557320
  store i32 %73, i32* %14
  br label %84

; <label>:74:                                     ; preds = %15
  ret void

; <label>:75:                                     ; preds = %15
  %76 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %77 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %76, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %77, align 8
  %78 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %76, align 8
  %79 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78 to %"class.std::allocator.10"*
  %80 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %77, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.10"* %79, %"class.std::allocator.10"* dereferenceable(1) %80) #3
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  store i32* null, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 1
  store i32* null, i32** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 2
  store i32* null, i32** %83, align 8
  store i32 -350960618, i32* %14
  br label %84

; <label>:84:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.566
  %6 = load i32, i32* @y.567
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 28244069, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 28244069, label %18
    i32 1261486002, label %26
    i32 -435558950, label %73
    i32 158638115, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1261486002, i32 158638115
  store i32 %25, i32* %14
  br label %94

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.9"*, align 8
  %28 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %27, align 8
  %30 = load i64, i64* %28, align 8
  %31 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"* %29, i64 %30)
  %32 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  store i32* %31, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  store i32* %36, i32** %38, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i64, i64* %28, align 8
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %29, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 2
  store i32* %43, i32** %45, align 8
  %46 = load i32, i32* @x.566
  %47 = load i32, i32* @y.567
  %48 = add i32 %46, -1408623162
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1408623162
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -435558950, i32 158638115
  store i32 %72, i32* %14
  br label %94

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Vector_base.9"*, align 8
  %76 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %75, align 8
  %78 = load i64, i64* %76, align 8
  %79 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"* %77, i64 %78)
  %80 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 0
  store i32* %79, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %85, i32 0, i32 1
  store i32* %84, i32** %86, align 8
  %87 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load i64, i64* %76, align 8
  %91 = getelementptr inbounds i32, i32* %89, i64 %90
  %92 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %92, i32 0, i32 2
  store i32* %91, i32** %93, align 8
  store i32 1261486002, i32* %14
  br label %94

; <label>:94:                                     ; preds = %74, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %8, %"struct.std::_Vector_base.9"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -1961693558, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %130
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -1961693558, label %15
    i32 -1289848331, label %19
    i32 1084378283, label %25
    i32 1418869275, label %40
    i32 1820253654, label %68
    i32 -1491075958, label %69
    i32 -1012327895, label %98
    i32 -1039159701, label %126
    i32 -1364499212, label %128
    i32 1266662931, label %129
  ]

; <label>:14:                                     ; preds = %12
  br label %130

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1289848331, i32 1084378283
  store i32 %18, i32* %10
  br label %130

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load i64, i64* %7, align 8
  %24 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.10"* dereferenceable(1) %22, i64 %23)
  store i32 -1491075958, i32* %10
  store i32* %24, i32** %11
  br label %130

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.568
  %27 = load i32, i32* @y.569
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1418869275, i32 -1364499212
  store i32 %39, i32* %10
  br label %130

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.568
  %42 = load i32, i32* @y.569
  %43 = add i32 %41, -661300293
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -661300293
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1820253654, i32 -1364499212
  store i32 %67, i32* %10
  br label %130

; <label>:68:                                     ; preds = %12
  store i32 -1491075958, i32* %10
  store i32* null, i32** %11
  br label %130

; <label>:69:                                     ; preds = %12
  %70 = load i32*, i32** %11
  store i32* %70, i32** %3
  %71 = load i32, i32* @x.568
  %72 = load i32, i32* @y.569
  %73 = sub i32 %71, 1662346332
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1662346332
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -1012327895, i32 1266662931
  store i32 %97, i32* %10
  br label %130

; <label>:98:                                     ; preds = %12
  %99 = load i32, i32* @x.568
  %100 = load i32, i32* @y.569
  %101 = sub i32 %99, 1339937152
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1339937152
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 -1039159701, i32 1266662931
  store i32 %125, i32* %10
  br label %130

; <label>:126:                                    ; preds = %12
  %127 = load volatile i32*, i32** %3
  ret i32* %127

; <label>:128:                                    ; preds = %12
  store i32 1418869275, i32* %10
  br label %130

; <label>:129:                                    ; preds = %12
  store i32 -1012327895, i32* %10
  br label %130

; <label>:130:                                    ; preds = %129, %128, %98, %69, %68, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.570
  %6 = load i32, i32* @y.571
  %7 = add i32 %5, -654343840
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -654343840
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 844696627, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 844696627, label %19
    i32 -1757549876, label %39
    i32 210117552, label %80
    i32 -557167878, label %81
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1757549876, i32 -557167878
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  %41 = alloca i32**, align 8
  %42 = alloca i32*, align 8
  store i32** %0, i32*** %40, align 8
  store i32** %1, i32*** %41, align 8
  %43 = load i32**, i32*** %40, align 8
  %44 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %43) #3
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %42, align 8
  %46 = load i32**, i32*** %41, align 8
  %47 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %46) #3
  %48 = load i32*, i32** %47, align 8
  %49 = load i32**, i32*** %40, align 8
  store i32* %48, i32** %49, align 8
  %50 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %42) #3
  %51 = load i32*, i32** %50, align 8
  %52 = load i32**, i32*** %41, align 8
  store i32* %51, i32** %52, align 8
  %53 = load i32, i32* @x.570
  %54 = load i32, i32* @y.571
  %55 = sub i32 %53, 254323987
  %56 = sub i32 %55, 1
  %57 = add i32 %56, 254323987
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 210117552, i32 -557167878
  store i32 %79, i32* %15
  br label %95

; <label>:80:                                     ; preds = %16
  ret void

; <label>:81:                                     ; preds = %16
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  %84 = alloca i32*, align 8
  store i32** %0, i32*** %82, align 8
  store i32** %1, i32*** %83, align 8
  %85 = load i32**, i32*** %82, align 8
  %86 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %85) #3
  %87 = load i32*, i32** %86, align 8
  store i32* %87, i32** %84, align 8
  %88 = load i32**, i32*** %83, align 8
  %89 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %88) #3
  %90 = load i32*, i32** %89, align 8
  %91 = load i32**, i32*** %82, align 8
  store i32* %90, i32** %91, align 8
  %92 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %84) #3
  %93 = load i32*, i32** %92, align 8
  %94 = load i32**, i32*** %83, align 8
  store i32* %93, i32** %94, align 8
  store i32 -1757549876, i32* %15
  br label %95

; <label>:95:                                     ; preds = %81, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 1350231660, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %105
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1350231660, label %14
    i32 225145656, label %19
    i32 908520085, label %47
    i32 -1225847964, label %65
    i32 583164357, label %66
    i32 -813508092, label %69
    i32 -327632518, label %84
    i32 542406888, label %100
    i32 786352695, label %101
    i32 -545237777, label %104
  ]

; <label>:13:                                     ; preds = %11
  br label %105

; <label>:14:                                     ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = icmp ne i32* %15, %16
  %18 = select i1 %17, i32 225145656, i32 -813508092
  store i32 %18, i32* %10
  br label %105

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* @x.574
  %21 = load i32, i32* @y.575
  %22 = sub i32 %20, -1048137808
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -1048137808
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 908520085, i32 786352695
  store i32 %46, i32* %10
  br label %105

; <label>:47:                                     ; preds = %11
  %48 = load i32, i32* %7, align 4
  %49 = load i32*, i32** %4, align 8
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* @x.574
  %51 = load i32, i32* @y.575
  %52 = add i32 %50, -166156880
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -166156880
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1225847964, i32 786352695
  store i32 %64, i32* %10
  br label %105

; <label>:65:                                     ; preds = %11
  store i32 583164357, i32* %10
  br label %105

; <label>:66:                                     ; preds = %11
  %67 = load i32*, i32** %4, align 8
  %68 = getelementptr inbounds i32, i32* %67, i32 1
  store i32* %68, i32** %4, align 8
  store i32 1350231660, i32* %10
  br label %105

; <label>:69:                                     ; preds = %11
  %70 = load i32, i32* @x.574
  %71 = load i32, i32* @y.575
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -327632518, i32 -545237777
  store i32 %83, i32* %10
  br label %105

; <label>:84:                                     ; preds = %11
  %85 = load i32, i32* @x.574
  %86 = load i32, i32* @y.575
  %87 = add i32 %85, 1432935842
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, 1432935842
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 542406888, i32 -545237777
  store i32 %99, i32* %10
  br label %105

; <label>:100:                                    ; preds = %11
  ret void

; <label>:101:                                    ; preds = %11
  %102 = load i32, i32* %7, align 4
  %103 = load i32*, i32** %4, align 8
  store i32 %102, i32* %103, align 4
  store i32 908520085, i32* %10
  br label %105

; <label>:104:                                    ; preds = %11
  store i32 -327632518, i32* %10
  br label %105

; <label>:105:                                    ; preds = %104, %101, %84, %69, %66, %65, %47, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.19"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.19", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.19"*) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.580
  %6 = load i32, i32* @y.581
  %7 = add i32 %5, 7873320
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 7873320
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 164151135, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 164151135, label %19
    i32 1442465056, label %39
    i32 -1423787754, label %57
    i32 1792219580, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1442465056, i32 1792219580
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %41, i32 0, i32 0
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.580
  %44 = load i32, i32* @y.581
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1423787754, i32 1792219580
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %61, i32 0, i32 0
  store i32 1442465056, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.19"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.19"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.19"* %0, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.19"*, %"class.__gnu_cxx::__normal_iterator.19"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.19", %"class.__gnu_cxx::__normal_iterator.19"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.584
  %8 = load i32, i32* @y.585
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 522873092, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 522873092, label %20
    i32 -1435926373, label %28
    i32 -1756690945, label %64
    i32 996380289, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1435926373, i32 996380289
  store i32 %27, i32* %16
  br label %75

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i32*, i32** %29, align 8
  %34 = load i64, i64* %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %33, i64 %34, i32* dereferenceable(4) %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.584
  %38 = load i32, i32* @y.585
  %39 = sub i32 %37, 1519143383
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1519143383
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1756690945, i32 996380289
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i8, align 1
  store i32* %0, i32** %67, align 8
  store i64 %1, i64* %68, align 8
  store i32* %2, i32** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i32*, i32** %67, align 8
  %72 = load i64, i64* %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %71, i64 %72, i32* dereferenceable(4) %73)
  store i32 -1435926373, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -2125123458, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %91
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2125123458, label %16
    i32 -881814906, label %20
    i32 1028011645, label %47
    i32 1184631608, label %76
    i32 -1503289758, label %77
    i32 508986422, label %86
    i32 -274440570, label %88
  ]

; <label>:15:                                     ; preds = %13
  br label %91

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -881814906, i32 508986422
  store i32 %19, i32* %12
  br label %91

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* @x.588
  %22 = load i32, i32* @y.589
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1028011645, i32 -274440570
  store i32 %46, i32* %12
  br label %91

; <label>:47:                                     ; preds = %13
  %48 = load i32, i32* %7, align 4
  %49 = load i32*, i32** %4, align 8
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* @x.588
  %51 = load i32, i32* @y.589
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1184631608, i32 -274440570
  store i32 %75, i32* %12
  br label %91

; <label>:76:                                     ; preds = %13
  store i32 -1503289758, i32* %12
  br label %91

; <label>:77:                                     ; preds = %13
  %78 = load i64, i64* %8, align 8
  %79 = sub i64 0, %78
  %80 = sub i64 0, -1
  %81 = add i64 %79, %80
  %82 = sub i64 0, %81
  %83 = add i64 %78, -1
  store i64 %82, i64* %8, align 8
  %84 = load i32*, i32** %4, align 8
  %85 = getelementptr inbounds i32, i32* %84, i32 1
  store i32* %85, i32** %4, align 8
  store i32 -2125123458, i32* %12
  br label %91

; <label>:86:                                     ; preds = %13
  %87 = load i32*, i32** %4, align 8
  ret i32* %87

; <label>:88:                                     ; preds = %13
  %89 = load i32, i32* %7, align 4
  %90 = load i32*, i32** %4, align 8
  store i32 %89, i32* %90, align 4
  store i32 1028011645, i32* %12
  br label %91

; <label>:91:                                     ; preds = %88, %77, %76, %47, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.max_flow::Edge"* @_ZNSt6vectorIN8max_flow4EdgeESaIS1_EEixEm(%"class.std::vector.3"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.max_flow::Edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.594
  %7 = load i32, i32* @y.595
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1702049062, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1702049062, label %19
    i32 1155725948, label %39
    i32 916518350, label %64
    i32 -1970742158, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1155725948, i32 -1970742158
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %43 = bitcast %"class.std::vector.3"* %42 to %"struct.std::_Vector_base.4"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %46, i64 %47
  store %"struct.max_flow::Edge"* %48, %"struct.max_flow::Edge"** %3
  %49 = load i32, i32* @x.594
  %50 = load i32, i32* @y.595
  %51 = add i32 %49, -633015505
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -633015505
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 916518350, i32 -1970742158
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %3
  ret %"struct.max_flow::Edge"* %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.std::vector.3"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector.3"*, %"class.std::vector.3"** %67, align 8
  %70 = bitcast %"class.std::vector.3"* %69 to %"struct.std::_Vector_base.4"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl", %"struct.std::_Vector_base<max_flow::Edge, std::allocator<max_flow::Edge> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"struct.max_flow::Edge"*, %"struct.max_flow::Edge"** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds %"struct.max_flow::Edge", %"struct.max_flow::Edge"* %73, i64 %74
  store i32 1155725948, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %3
  %12 = alloca i32
  store i32 -458106102, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -458106102, label %16
    i32 2092792848, label %21
    i32 1208729336, label %23
    i32 699861979, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i32, i32* %4
  %18 = load volatile i32, i32* %3
  %19 = icmp slt i32 %17, %18
  %20 = select i1 %19, i32 2092792848, i32 1208729336
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i32*, i32** %7, align 8
  store i32* %22, i32** %5, align 8
  store i32 699861979, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i32*, i32** %6, align 8
  store i32* %24, i32** %5, align 8
  store i32 699861979, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i32*, i32** %5, align 8
  ret i32* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt9__reverseIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEvT_SA_St26random_access_iterator_tag(i8*, i8*) #0 comdat {
  %3 = alloca i1
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.598
  %11 = load i32, i32* @y.599
  %12 = add i32 %10, 294912060
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 294912060
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1665543763, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %169
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1665543763, label %24
    i32 284298109, label %44
    i32 409459324, label %84
    i32 -1128054629, label %87
    i32 -888689946, label %88
    i32 1002406305, label %91
    i32 1613101504, label %96
    i32 1396384972, label %115
    i32 1812526291, label %131
    i32 -1168447866, label %158
    i32 816567902, label %159
    i32 1249910167, label %168
  ]

; <label>:23:                                     ; preds = %21
  br label %169

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 284298109, i32 816567902
  store i32 %43, i32* %20
  br label %169

; <label>:44:                                     ; preds = %21
  %45 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %45, %"class.__gnu_cxx::__normal_iterator"** %7
  %46 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %46, %"class.__gnu_cxx::__normal_iterator"** %6
  %47 = alloca %"struct.std::random_access_iterator_tag", align 1
  %48 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %48, %"class.__gnu_cxx::__normal_iterator"** %5
  %49 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %49, %"class.__gnu_cxx::__normal_iterator"** %4
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store i8* %0, i8** %51, align 8
  %52 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  store i8* %1, i8** %53, align 8
  %54 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %55 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %56 = call zeroext i1 @_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %54, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %55) #3
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.598
  %58 = load i32, i32* @y.599
  %59 = sub i32 %57, -557769920
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -557769920
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 409459324, i32 816567902
  store i32 %83, i32* %20
  br label %169

; <label>:84:                                     ; preds = %21
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 -1128054629, i32 -888689946
  store i32 %86, i32* %20
  br label %169

; <label>:87:                                     ; preds = %21
  store i32 1396384972, i32* %20
  br label %169

; <label>:88:                                     ; preds = %21
  %89 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %90 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %89) #3
  store i32 1002406305, i32* %20
  br label %169

; <label>:91:                                     ; preds = %21
  %92 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %93 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %94 = call zeroext i1 @_ZN9__gnu_cxxltIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %92, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %93) #3
  %95 = select i1 %94, i32 1613101504, i32 1396384972
  store i32 %95, i32* %20
  br label %169

; <label>:96:                                     ; preds = %21
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator"* %97 to i8*
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %100, i64 8, i32 8, i1 false)
  %101 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %102 = bitcast %"class.__gnu_cxx::__normal_iterator"* %101 to i8*
  %103 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %104 = bitcast %"class.__gnu_cxx::__normal_iterator"* %103 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %102, i8* %104, i64 8, i32 8, i1 false)
  %105 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %106 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %105, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %108, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  call void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_EvT_T0_(i8* %107, i8* %110)
  %111 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %112 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %111) #3
  %113 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %114 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"* %113) #3
  store i32 1002406305, i32* %20
  br label %169

; <label>:115:                                    ; preds = %21
  %116 = load i32, i32* @x.598
  %117 = load i32, i32* @y.599
  %118 = add i32 %116, 1143018028
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 1143018028
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 1812526291, i32 1249910167
  store i32 %130, i32* %20
  br label %169

; <label>:131:                                    ; preds = %21
  %132 = load i32, i32* @x.598
  %133 = load i32, i32* @y.599
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 -1168447866, i32 1249910167
  store i32 %157, i32* %20
  br label %169

; <label>:158:                                    ; preds = %21
  ret void

; <label>:159:                                    ; preds = %21
  %160 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %161 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %162 = alloca %"struct.std::random_access_iterator_tag", align 1
  %163 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %164 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %160, i32 0, i32 0
  store i8* %0, i8** %165, align 8
  %166 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %161, i32 0, i32 0
  store i8* %1, i8** %166, align 8
  %167 = call zeroext i1 @_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %160, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %161) #3
  store i32 284298109, i32* %20
  br label %169

; <label>:168:                                    ; preds = %21
  store i32 1812526291, i32* %20
  br label %169

; <label>:169:                                    ; preds = %168, %159, %131, %115, %96, %91, %88, %87, %84, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEENSt15iterator_traitsIT_E17iterator_categoryERKSB_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxeqIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load i8*, i8** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp eq i8* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEmmEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.604
  %6 = load i32, i32* @y.605
  %7 = add i32 %5, 271353393
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 271353393
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -779576063, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -779576063, label %19
    i32 -996606764, label %27
    i32 -364891855, label %49
    i32 -283618077, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -996606764, i32 -283618077
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 -1
  store i8* %33, i8** %31, align 8
  %34 = load i32, i32* @x.604
  %35 = load i32, i32* @y.605
  %36 = sub i32 %34, 515514033
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 515514033
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -364891855, i32 -283618077
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  %56 = getelementptr inbounds i8, i8* %55, i32 -1
  store i8* %56, i8** %54, align 8
  store i32 -996606764, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxltIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load i8*, i8** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load i8*, i8** %9, align 8
  %11 = icmp ult i8* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9iter_swapIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEES9_EvT_T0_(i8*, i8*) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  store i8* %0, i8** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store i8* %1, i8** %6, align 8
  %7 = call dereferenceable(1) i8* @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %3) #3
  %8 = call dereferenceable(1) i8* @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  call void @_ZSt4swapIcEvRT_S1_(i8* dereferenceable(1) %7, i8* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.610
  %6 = load i32, i32* @y.611
  %7 = add i32 %5, 140520831
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 140520831
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1874653330, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1874653330, label %19
    i32 1970983287, label %27
    i32 -1041303571, label %48
    i32 742809659, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1970983287, i32 742809659
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds i8, i8* %32, i32 1
  store i8* %33, i8** %31, align 8
  %34 = load i32, i32* @x.610
  %35 = load i32, i32* @y.611
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1041303571, i32 742809659
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %51, align 8
  %52 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %52, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = getelementptr inbounds i8, i8* %54, i32 1
  store i8* %55, i8** %53, align 8
  store i32 1970983287, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca i8**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.612
  %6 = load i32, i32* @y.613
  %7 = add i32 %5, 404328371
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 404328371
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1460174746, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1460174746, label %19
    i32 1525116938, label %27
    i32 -1753570488, label %46
    i32 -1612761301, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1525116938, i32 -1612761301
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store i8** %30, i8*** %2
  %31 = load i32, i32* @x.612
  %32 = load i32, i32* @y.613
  %33 = add i32 %31, -92645140
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -92645140
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1753570488, i32 -1612761301
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i8**, i8*** %2
  ret i8** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store i32 1525116938, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIcEvRT_S1_(i8* dereferenceable(1), i8* dereferenceable(1)) #5 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %6 = load i8*, i8** %3, align 8
  %7 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* dereferenceable(1) %6) #3
  %8 = load i8, i8* %7, align 1
  store i8 %8, i8* %5, align 1
  %9 = load i8*, i8** %4, align 8
  %10 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* dereferenceable(1) %9) #3
  %11 = load i8, i8* %10, align 1
  %12 = load i8*, i8** %3, align 8
  store i8 %11, i8* %12, align 1
  %13 = call dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* dereferenceable(1) %5) #3
  %14 = load i8, i8* %13, align 1
  %15 = load i8*, i8** %4, align 8
  store i8 %14, i8* %15, align 1
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZSt4moveIRcEONSt16remove_referenceIT_E4typeEOS2_(i8* dereferenceable(1)) #5 comdat {
  %2 = alloca i8*, align 8
  store i8* %0, i8** %2, align 8
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s234106525.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
