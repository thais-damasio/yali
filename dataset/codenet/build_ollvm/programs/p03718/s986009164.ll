; ModuleID = 'Project_CodeNet_C++1400/p03718/s986009164.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s986009164.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%struct.Template_MPM = type { i64, %"class.std::vector", %"class.std::vector.0", %"class.std::vector.5", %"class.std::vector.5", %"class.std::vector.10", %"class.std::vector.10", %"class.std::vector.18", %"class.std::vector.5", i32, i32, i32, i32, %"class.std::vector.23", %"class.std::vector.23", i32, i32 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl" }
%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl" = type { %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"* }
%"struct.Template_MPM::FlowEdge" = type { i32, i32, i64, i64 }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" }
%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl" = type { i8*, i8*, i8* }
%"class.std::vector.10" = type { %"struct.std::_Vector_base.11" }
%"struct.std::_Vector_base.11" = type { %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"* }
%"class.std::__cxx11::list" = type { %"class.std::__cxx11::_List_base" }
%"class.std::__cxx11::_List_base" = type { %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl" }
%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl" = type { %"struct.std::_List_node" }
%"struct.std::_List_node" = type { %"struct.std::__detail::_List_node_base", i64 }
%"struct.std::__detail::_List_node_base" = type { %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"* }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl" = type { %"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::vector.23"* }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" }
%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl" = type { i64*, i64*, i64* }
%"class.std::vector.23" = type { %"struct.std::_Vector_base.24" }
%"struct.std::_Vector_base.24" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator.7" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.std::allocator.12" = type { i8 }
%"class.__gnu_cxx::new_allocator.13" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.std::allocator.25" = type { i8 }
%"class.__gnu_cxx::new_allocator.26" = type { i8 }
%"struct.std::_List_node.28" = type <{ %"struct.std::__detail::_List_node_base", i32, [4 x i8] }>
%"class.std::allocator.15" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.std::move_iterator" = type { i64* }
%"class.std::move_iterator.29" = type { i32* }
%"class.std::move_iterator.30" = type { %"class.std::vector.23"* }
%"class.std::move_iterator.31" = type { %"class.std::__cxx11::list"* }
%"class.std::move_iterator.32" = type { %"struct.Template_MPM::FlowEdge"* }
%"class.__gnu_cxx::__normal_iterator.33" = type { i32* }
%"struct.std::_List_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"struct.std::_List_const_iterator" = type { %"struct.std::__detail::_List_node_base"* }
%"class.__gnu_cxx::__normal_iterator" = type { i64* }
%"class.__gnu_cxx::__normal_iterator.34" = type { i8* }
%"struct.__gnu_cxx::__ops::_Iter_equals_val" = type { i32* }
%"struct.std::input_iterator_tag" = type { i8 }
%"struct.std::bidirectional_iterator_tag" = type { i8 }

$_ZN12Template_MPMC2Ev = comdat any

$_ZN12Template_MPMD2Ev = comdat any

$_ZN12Template_MPM4initEiii = comdat any

$_ZN12Template_MPM8add_edgeEiix = comdat any

$_ZN12Template_MPM4flowEv = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIcSaIcEEC2Ev = comdat any

$_ZNSt6vectorIxSaIxEEC2Ev = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN12Template_MPM8FlowEdgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEEC2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEEC2Ev = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2Ev = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev = comdat any

$_ZNSaIxEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implC2Ev = comdat any

$_ZNSaINSt7__cxx114listIiSaIiEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIxSaIxEED2Ev = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev = comdat any

$_ZNSt6vectorIcSaIcEED2Ev = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIxSaIxEED2Ev = comdat any

$_ZSt8_DestroyIPxEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm = comdat any

$_ZNSaIxED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIxED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_ = comdat any

$_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m = comdat any

$_ZNSaISt6vectorIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev = comdat any

$_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEEEvT_S5_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx114listIiSaIiEEEEEvT_S7_ = comdat any

$_ZSt8_DestroyINSt7__cxx114listIiSaIiEEEEvPT_ = comdat any

$_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_ = comdat any

$_ZNSt7__cxx114listIiSaIiEED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEED2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE8_M_clearEv = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implD2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m = comdat any

$_ZNSaISt10_List_nodeIiEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEED2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE13_M_deallocateEPS3_m = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE10deallocateEPS4_m = comdat any

$_ZNSaINSt7__cxx114listIiSaIiEEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEED2Ev = comdat any

$_ZSt8_DestroyIPccEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIcSaIcEED2Ev = comdat any

$_ZSt8_DestroyIPcEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm = comdat any

$_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPN12Template_MPM8FlowEdgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN12Template_MPM8FlowEdgeEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE10deallocateEPS2_m = comdat any

$_ZNSaIN12Template_MPM8FlowEdgeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEED2Ev = comdat any

$_ZN12Template_MPM6resizeEi = comdat any

$_ZNSt6vectorIxSaIxEE6resizeEm = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm = comdat any

$_ZNKSt6vectorIxSaIxEE4sizeEv = comdat any

$_ZNSt6vectorIxSaIxEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx = comdat any

$_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPxmET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_ = comdat any

$_ZSt6fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIxSaIxEE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIxEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPxE4baseEv = comdat any

$_ZNSt13move_iteratorIPxEC2ES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv = comdat any

$_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_ = comdat any

$_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZSt27__uninitialized_default_n_aIPNSt7__cxx114listIiSaIiEEEmS3_ET_S5_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx114listIiSaIiEEES4_SaIS3_EET0_T_S7_S6_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPNSt7__cxx114listIiSaIiEEEmET_S5_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx114listIiSaIiEEEmEET_S7_T0_ = comdat any

$_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJEEvPT_DpOT0_ = comdat any

$_ZNSt7__cxx114listIiSaIiEEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv = comdat any

$_ZNSaISt10_List_nodeIiEEC2Ev = comdat any

$_ZNSt10_List_nodeImEC2IJEEEDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_set_sizeEm = comdat any

$_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8max_sizeERKS4_ = comdat any

$_ZNKSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_S4_ET0_T_S8_S7_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx114listIiSaIiEEESt13move_iteratorIS4_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_ET0_T_S8_S7_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES7_EET0_T_SA_S9_ = comdat any

$_ZStneIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_ = comdat any

$_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJS3_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEdeEv = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEppEv = comdat any

$_ZSteqIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_ = comdat any

$_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEE4baseEv = comdat any

$_ZSt7forwardINSt7__cxx114listIiSaIiEEEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZNSt7__cxx114listIiSaIiEEC2EOS2_ = comdat any

$_ZSt4moveIRNSt7__cxx114listIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEEC2EOS2_ = comdat any

$_ZSt4moveIRSaISt10_List_nodeIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2EOSaISt10_List_nodeIiEE = comdat any

$_ZSt11__addressofISt10_List_nodeImEEPT_RS2_ = comdat any

$_ZNKSt7__cxx1110_List_baseIiSaIiEE11_M_get_sizeEv = comdat any

$_ZNSaISt10_List_nodeIiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2ERKS3_ = comdat any

$_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEC2ES4_ = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZN12Template_MPM8FlowEdgeC2Eiix = comdat any

$_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZNSt6vectorIiSaIiEE9push_backEOi = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN12Template_MPM8FlowEdgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN12Template_MPM8FlowEdgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8max_sizeERKS2_ = comdat any

$_ZNKSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN12Template_MPM8FlowEdgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructIN12Template_MPM8FlowEdgeEJS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN12Template_MPM8FlowEdgeEEPT_RS2_ = comdat any

$_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEppEv = comdat any

$_ZSteqIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_ = comdat any

$_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIxSaIxEE6assignEmRKx = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZNSt6vectorIcSaIcEE6assignEmRKc = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZN12Template_MPM3bfsEv = comdat any

$_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm = comdat any

$_ZNSt7__cxx114listIiSaIiEE5clearEv = comdat any

$_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm = comdat any

$_ZNSt7__cxx114listIiSaIiEE9push_backERKi = comdat any

$_ZNSt6vectorIxSaIxEEixEm = comdat any

$_ZNSt6vectorIcSaIcEEixEm = comdat any

$_ZN12Template_MPM3potEi = comdat any

$_ZN12Template_MPM11remove_nodeEi = comdat any

$_ZN12Template_MPM4pushEiixb = comdat any

$_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx = comdat any

$_ZNKSt6vectorIxSaIxEE8capacityEv = comdat any

$_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIxSaIxEE5beginEv = comdat any

$_ZNSt6vectorIxSaIxEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx = comdat any

$_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm = comdat any

$_ZNSaIxEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_ = comdat any

$_ZSt4swapIPxEvRT_S2_ = comdat any

$_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZNSt6vectorIcSaIcEE14_M_fill_assignEmRKc = comdat any

$_ZNKSt6vectorIcSaIcEE8capacityEv = comdat any

$_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNKSt6vectorIcSaIcEE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEcEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIcSaIcEE5beginEv = comdat any

$_ZNSt6vectorIcSaIcEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIcSaIcEE15_M_erase_at_endEPc = comdat any

$_ZSt6fill_nIPcmcET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc = comdat any

$_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIcEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv = comdat any

$_ZSt4swapIPcEvRT_S2_ = comdat any

$_ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_ = comdat any

$_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_ = comdat any

$_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv = comdat any

$_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_ = comdat any

$_ZNSt7__cxx114listIiSaIiEE3endEv = comdat any

$_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_ = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIS2_JRKiEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8max_sizeEv = comdat any

$_ZNSt10_List_nodeIiEC2IJRKiEEEDpOT_ = comdat any

$_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt7__cxx114listIiSaIiEE5beginEv = comdat any

$_ZNKSt14_List_iteratorIiEneERKS0_ = comdat any

$_ZNKSt14_List_iteratorIiEdeEv = comdat any

$_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_ = comdat any

$_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE = comdat any

$_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE = comdat any

$_ZNSt14_List_iteratorIiEppEv = comdat any

$_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_ = comdat any

$_ZN9__gnu_cxx5__ops17__iter_equals_valIKiEENS0_16_Iter_equals_valIT_EERS4_ = comdat any

$_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_St18input_iterator_tag = comdat any

$_ZSt19__iterator_categoryISt14_List_iteratorIiEENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEclISt14_List_iteratorIiEEEbT_ = comdat any

$_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEC2ERS2_ = comdat any

$_ZNSt7__cxx114listIiSaIiEE8_M_eraseESt14_List_iteratorIiE = comdat any

$_ZNKSt20_List_const_iteratorIiE13_M_const_castEv = comdat any

$_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_dec_sizeEm = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@MPM = global %struct.Template_MPM zeroinitializer, align 8
@h = global i32 0, align 4
@w = global i32 0, align 4
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s986009164.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.3 = common global i32 0
@y.4 = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0
@x.713 = common global i32 0
@y.714 = common global i32 0
@x.715 = common global i32 0
@y.716 = common global i32 0
@x.717 = common global i32 0
@y.718 = common global i32 0
@x.719 = common global i32 0
@y.720 = common global i32 0
@x.721 = common global i32 0
@y.722 = common global i32 0
@x.723 = common global i32 0
@y.724 = common global i32 0
@x.725 = common global i32 0
@y.726 = common global i32 0
@x.727 = common global i32 0
@y.728 = common global i32 0
@x.729 = common global i32 0
@y.730 = common global i32 0
@x.731 = common global i32 0
@y.732 = common global i32 0
@x.733 = common global i32 0
@y.734 = common global i32 0
@x.735 = common global i32 0
@y.736 = common global i32 0
@x.737 = common global i32 0
@y.738 = common global i32 0
@x.739 = common global i32 0
@y.740 = common global i32 0
@x.741 = common global i32 0
@y.742 = common global i32 0
@x.743 = common global i32 0
@y.744 = common global i32 0
@x.745 = common global i32 0
@y.746 = common global i32 0
@x.747 = common global i32 0
@y.748 = common global i32 0
@x.749 = common global i32 0
@y.750 = common global i32 0
@x.751 = common global i32 0
@y.752 = common global i32 0
@x.753 = common global i32 0
@y.754 = common global i32 0
@x.755 = common global i32 0
@y.756 = common global i32 0
@x.757 = common global i32 0
@y.758 = common global i32 0
@x.759 = common global i32 0
@y.760 = common global i32 0
@x.761 = common global i32 0
@y.762 = common global i32 0
@x.763 = common global i32 0
@y.764 = common global i32 0
@x.765 = common global i32 0
@y.766 = common global i32 0
@x.767 = common global i32 0
@y.768 = common global i32 0
@x.769 = common global i32 0
@y.770 = common global i32 0
@x.771 = common global i32 0
@y.772 = common global i32 0
@x.773 = common global i32 0
@y.774 = common global i32 0
@x.775 = common global i32 0
@y.776 = common global i32 0
@x.777 = common global i32 0
@y.778 = common global i32 0
@x.779 = common global i32 0
@y.780 = common global i32 0
@x.781 = common global i32 0
@y.782 = common global i32 0
@x.783 = common global i32 0
@y.784 = common global i32 0
@x.785 = common global i32 0
@y.786 = common global i32 0
@x.787 = common global i32 0
@y.788 = common global i32 0
@x.789 = common global i32 0
@y.790 = common global i32 0
@x.791 = common global i32 0
@y.792 = common global i32 0
@x.793 = common global i32 0
@y.794 = common global i32 0
@x.795 = common global i32 0
@y.796 = common global i32 0
@x.797 = common global i32 0
@y.798 = common global i32 0
@x.799 = common global i32 0
@y.800 = common global i32 0
@x.801 = common global i32 0
@y.802 = common global i32 0
@x.803 = common global i32 0
@y.804 = common global i32 0
@x.805 = common global i32 0
@y.806 = common global i32 0
@x.807 = common global i32 0
@y.808 = common global i32 0
@x.809 = common global i32 0
@y.810 = common global i32 0
@x.811 = common global i32 0
@y.812 = common global i32 0
@x.813 = common global i32 0
@y.814 = common global i32 0
@x.815 = common global i32 0
@y.816 = common global i32 0
@x.817 = common global i32 0
@y.818 = common global i32 0
@x.819 = common global i32 0
@y.820 = common global i32 0
@x.821 = common global i32 0
@y.822 = common global i32 0
@x.823 = common global i32 0
@y.824 = common global i32 0
@x.825 = common global i32 0
@y.826 = common global i32 0
@x.827 = common global i32 0
@y.828 = common global i32 0
@x.829 = common global i32 0
@y.830 = common global i32 0
@x.831 = common global i32 0
@y.832 = common global i32 0
@x.833 = common global i32 0
@y.834 = common global i32 0
@x.835 = common global i32 0
@y.836 = common global i32 0
@x.837 = common global i32 0
@y.838 = common global i32 0
@x.839 = common global i32 0
@y.840 = common global i32 0
@x.841 = common global i32 0
@y.842 = common global i32 0
@x.843 = common global i32 0
@y.844 = common global i32 0
@x.845 = common global i32 0
@y.846 = common global i32 0
@x.847 = common global i32 0
@y.848 = common global i32 0
@x.849 = common global i32 0
@y.850 = common global i32 0
@x.851 = common global i32 0
@y.852 = common global i32 0
@x.853 = common global i32 0
@y.854 = common global i32 0
@x.855 = common global i32 0
@y.856 = common global i32 0
@x.857 = common global i32 0
@y.858 = common global i32 0
@x.859 = common global i32 0
@y.860 = common global i32 0
@x.861 = common global i32 0
@y.862 = common global i32 0
@x.863 = common global i32 0
@y.864 = common global i32 0
@x.865 = common global i32 0
@y.866 = common global i32 0
@x.867 = common global i32 0
@y.868 = common global i32 0
@x.869 = common global i32 0
@y.870 = common global i32 0
@x.871 = common global i32 0
@y.872 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  call void @_ZN12Template_MPMC2Ev(%struct.Template_MPM* @MPM)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%struct.Template_MPM*)* @_ZN12Template_MPMD2Ev to void (i8*)*), i8* bitcast (%struct.Template_MPM* @MPM to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12Template_MPMC2Ev(%struct.Template_MPM*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Template_MPM*, align 8
  store %struct.Template_MPM* %0, %struct.Template_MPM** %2, align 8
  %3 = load %struct.Template_MPM*, %struct.Template_MPM** %2, align 8
  %4 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 0
  store i64 1000000000000000000, i64* %4, align 8
  %5 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev(%"class.std::vector"* %5) #3
  %6 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 2
  call void @_ZNSt6vectorIcSaIcEEC2Ev(%"class.std::vector.0"* %6) #3
  %7 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 3
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.5"* %7) #3
  %8 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 4
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.5"* %8) #3
  %9 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 5
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev(%"class.std::vector.10"* %9) #3
  %10 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 6
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev(%"class.std::vector.10"* %10) #3
  %11 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 7
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.18"* %11) #3
  %12 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 8
  call void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.5"* %12) #3
  %13 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 10
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 13
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.23"* %14) #3
  %15 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 14
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.23"* %15) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12Template_MPMD2Ev(%struct.Template_MPM*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Template_MPM*, align 8
  store %struct.Template_MPM* %0, %struct.Template_MPM** %2, align 8
  %3 = load %struct.Template_MPM*, %struct.Template_MPM** %2, align 8
  %4 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 14
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"* %4) #3
  %5 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 13
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"* %5) #3
  %6 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 8
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.5"* %6) #3
  %7 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 7
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.18"* %7) #3
  %8 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 6
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"class.std::vector.10"* %8) #3
  %9 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 5
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"class.std::vector.10"* %9) #3
  %10 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 4
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.5"* %10) #3
  %11 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 3
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.5"* %11) #3
  %12 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 2
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %12) #3
  %13 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %3, i32 0, i32 1
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"class.std::vector"* %13) #3
  ret void
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 {
  %1 = alloca i32
  %2 = alloca i1
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i8, align 1
  %7 = alloca i64, align 8
  store i32 0, i32* %3, align 4
  %8 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %9 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %10 = getelementptr i8, i8* %9, i64 -24
  %11 = bitcast i8* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %12
  %14 = bitcast i8* %13 to %"class.std::basic_ios"*
  %15 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %14, %"class.std::basic_ostream"* null)
  %16 = load i8*, i8** bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8**), align 8
  %17 = getelementptr i8, i8* %16, i64 -24
  %18 = bitcast i8* %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_ostream"* @_ZSt4cout to i8*), i64 %19
  %21 = bitcast i8* %20 to %"class.std::basic_ios"*
  %22 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %21, %"class.std::basic_ostream"* null)
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) @h)
  %24 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %23, i32* dereferenceable(4) @w)
  call void @_ZN12Template_MPM4initEiii(%struct.Template_MPM* @MPM, i32 500, i32 0, i32 201)
  store i32 1, i32* %4, align 4
  %25 = alloca i32
  store i32 623329556, i32* %25
  br label %26

; <label>:26:                                     ; preds = %0, %386
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 623329556, label %29
    i32 -632098402, label %34
    i32 211941530, label %62
    i32 1146179140, label %90
    i32 1222139234, label %91
    i32 -1823504059, label %96
    i32 -230748614, label %102
    i32 823962270, label %110
    i32 -211743559, label %115
    i32 -836737491, label %123
    i32 284580173, label %128
    i32 888083109, label %135
    i32 314821150, label %136
    i32 -1744438795, label %137
    i32 1803138969, label %138
    i32 -1328357417, label %145
    i32 1705475698, label %160
    i32 1085595030, label %188
    i32 -1286665127, label %189
    i32 1355769036, label %217
    i32 2055271152, label %239
    i32 1639730262, label %240
    i32 -1416374762, label %268
    i32 286573945, label %288
    i32 1587964329, label %291
    i32 386676846, label %293
    i32 -1681267880, label %296
    i32 1570261517, label %324
    i32 -1761426988, label %340
    i32 -1777726123, label %342
    i32 623016932, label %343
    i32 83092045, label %344
    i32 492533143, label %379
    i32 -1617799737, label %384
  ]

; <label>:28:                                     ; preds = %26
  br label %386

; <label>:29:                                     ; preds = %26
  %30 = load i32, i32* %4, align 4
  %31 = load i32, i32* @h, align 4
  %32 = icmp sle i32 %30, %31
  %33 = select i1 %32, i32 -632098402, i32 1639730262
  store i32 %33, i32* %25
  br label %386

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.9
  %36 = load i32, i32* @y.10
  %37 = add i32 %35, 132103180
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 132103180
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 211941530, i32 -1777726123
  store i32 %61, i32* %25
  br label %386

; <label>:62:                                     ; preds = %26
  store i32 1, i32* %5, align 4
  %63 = load i32, i32* @x.9
  %64 = load i32, i32* @y.10
  %65 = add i32 %63, -830776473
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, -830776473
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  %89 = select i1 %87, i32 1146179140, i32 -1777726123
  store i32 %89, i32* %25
  br label %386

; <label>:90:                                     ; preds = %26
  store i32 1222139234, i32* %25
  br label %386

; <label>:91:                                     ; preds = %26
  %92 = load i32, i32* %5, align 4
  %93 = load i32, i32* @w, align 4
  %94 = icmp sle i32 %92, %93
  %95 = select i1 %94, i32 -1823504059, i32 -1328357417
  store i32 %95, i32* %25
  br label %386

; <label>:96:                                     ; preds = %26
  %97 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %6)
  %98 = load i8, i8* %6, align 1
  %99 = sext i8 %98 to i32
  %100 = icmp eq i32 %99, 83
  %101 = select i1 %100, i32 -230748614, i32 823962270
  store i32 %101, i32* %25
  br label %386

; <label>:102:                                    ; preds = %26
  %103 = load i32, i32* %4, align 4
  call void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM* @MPM, i32 0, i32 %103, i64 1000000000)
  %104 = load i32, i32* %5, align 4
  %105 = sub i32 0, %104
  %106 = sub i32 0, 100
  %107 = add i32 %105, %106
  %108 = sub i32 0, %107
  %109 = add nsw i32 %104, 100
  call void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM* @MPM, i32 0, i32 %108, i64 1000000000)
  store i32 -1744438795, i32* %25
  br label %386

; <label>:110:                                    ; preds = %26
  %111 = load i8, i8* %6, align 1
  %112 = sext i8 %111 to i32
  %113 = icmp eq i32 %112, 84
  %114 = select i1 %113, i32 -211743559, i32 -836737491
  store i32 %114, i32* %25
  br label %386

; <label>:115:                                    ; preds = %26
  %116 = load i32, i32* %4, align 4
  call void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM* @MPM, i32 %116, i32 201, i64 1000000000)
  %117 = load i32, i32* %5, align 4
  %118 = sub i32 0, %117
  %119 = sub i32 0, 100
  %120 = add i32 %118, %119
  %121 = sub i32 0, %120
  %122 = add nsw i32 %117, 100
  call void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM* @MPM, i32 %121, i32 201, i64 1000000000)
  store i32 314821150, i32* %25
  br label %386

; <label>:123:                                    ; preds = %26
  %124 = load i8, i8* %6, align 1
  %125 = sext i8 %124 to i32
  %126 = icmp eq i32 %125, 111
  %127 = select i1 %126, i32 284580173, i32 888083109
  store i32 %127, i32* %25
  br label %386

; <label>:128:                                    ; preds = %26
  %129 = load i32, i32* %4, align 4
  %130 = load i32, i32* %5, align 4
  %131 = sub i32 %130, 2078400527
  %132 = add i32 %131, 100
  %133 = add i32 %132, 2078400527
  %134 = add nsw i32 %130, 100
  call void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM* @MPM, i32 %129, i32 %133, i64 1)
  store i32 888083109, i32* %25
  br label %386

; <label>:135:                                    ; preds = %26
  store i32 314821150, i32* %25
  br label %386

; <label>:136:                                    ; preds = %26
  store i32 -1744438795, i32* %25
  br label %386

; <label>:137:                                    ; preds = %26
  store i32 1803138969, i32* %25
  br label %386

; <label>:138:                                    ; preds = %26
  %139 = load i32, i32* %5, align 4
  %140 = sub i32 0, %139
  %141 = sub i32 0, 1
  %142 = add i32 %140, %141
  %143 = sub i32 0, %142
  %144 = add nsw i32 %139, 1
  store i32 %143, i32* %5, align 4
  store i32 1222139234, i32* %25
  br label %386

; <label>:145:                                    ; preds = %26
  %146 = load i32, i32* @x.9
  %147 = load i32, i32* @y.10
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  %159 = select i1 %157, i32 1705475698, i32 623016932
  store i32 %159, i32* %25
  br label %386

; <label>:160:                                    ; preds = %26
  %161 = load i32, i32* @x.9
  %162 = load i32, i32* @y.10
  %163 = sub i32 %161, -814105999
  %164 = sub i32 %163, 1
  %165 = add i32 %164, -814105999
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 false, true
  %174 = and i1 %171, false
  %175 = and i1 %169, %173
  %176 = and i1 %172, false
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 false, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  %187 = select i1 %185, i32 1085595030, i32 623016932
  store i32 %187, i32* %25
  br label %386

; <label>:188:                                    ; preds = %26
  store i32 -1286665127, i32* %25
  br label %386

; <label>:189:                                    ; preds = %26
  %190 = load i32, i32* @x.9
  %191 = load i32, i32* @y.10
  %192 = add i32 %190, -1734826917
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, -1734826917
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  %216 = select i1 %214, i32 1355769036, i32 83092045
  store i32 %216, i32* %25
  br label %386

; <label>:217:                                    ; preds = %26
  %218 = load i32, i32* %4, align 4
  %219 = sub i32 0, %218
  %220 = sub i32 0, 1
  %221 = add i32 %219, %220
  %222 = sub i32 0, %221
  %223 = add nsw i32 %218, 1
  store i32 %222, i32* %4, align 4
  %224 = load i32, i32* @x.9
  %225 = load i32, i32* @y.10
  %226 = add i32 %224, -1677326255
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, -1677326255
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = and i1 %232, %233
  %235 = xor i1 %232, %233
  %236 = or i1 %234, %235
  %237 = or i1 %232, %233
  %238 = select i1 %236, i32 2055271152, i32 83092045
  store i32 %238, i32* %25
  br label %386

; <label>:239:                                    ; preds = %26
  store i32 623329556, i32* %25
  br label %386

; <label>:240:                                    ; preds = %26
  %241 = load i32, i32* @x.9
  %242 = load i32, i32* @y.10
  %243 = sub i32 %241, -695729313
  %244 = sub i32 %243, 1
  %245 = add i32 %244, -695729313
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = xor i1 %249, true
  %252 = xor i1 %250, true
  %253 = xor i1 true, true
  %254 = and i1 %251, true
  %255 = and i1 %249, %253
  %256 = and i1 %252, true
  %257 = and i1 %250, %253
  %258 = or i1 %254, %255
  %259 = or i1 %256, %257
  %260 = xor i1 %258, %259
  %261 = or i1 %251, %252
  %262 = xor i1 %261, true
  %263 = or i1 true, %253
  %264 = and i1 %262, %263
  %265 = or i1 %260, %264
  %266 = or i1 %249, %250
  %267 = select i1 %265, i32 -1416374762, i32 492533143
  store i32 %267, i32* %25
  br label %386

; <label>:268:                                    ; preds = %26
  %269 = call i64 @_ZN12Template_MPM4flowEv(%struct.Template_MPM* @MPM)
  store i64 %269, i64* %7, align 8
  %270 = load i64, i64* %7, align 8
  %271 = sitofp i64 %270 to double
  %272 = fcmp oge double %271, 1.000000e+09
  store i1 %272, i1* %2
  %273 = load i32, i32* @x.9
  %274 = load i32, i32* @y.10
  %275 = add i32 %273, 1217548600
  %276 = sub i32 %275, 1
  %277 = sub i32 %276, 1217548600
  %278 = sub i32 %273, 1
  %279 = mul i32 %273, %277
  %280 = urem i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = icmp slt i32 %274, 10
  %283 = and i1 %281, %282
  %284 = xor i1 %281, %282
  %285 = or i1 %283, %284
  %286 = or i1 %281, %282
  %287 = select i1 %285, i32 286573945, i32 492533143
  store i32 %287, i32* %25
  br label %386

; <label>:288:                                    ; preds = %26
  %289 = load volatile i1, i1* %2
  %290 = select i1 %289, i32 1587964329, i32 386676846
  store i32 %290, i32* %25
  br label %386

; <label>:291:                                    ; preds = %26
  %292 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 -1)
  store i32 -1681267880, i32* %25
  br label %386

; <label>:293:                                    ; preds = %26
  %294 = load i64, i64* %7, align 8
  %295 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %294)
  store i32 -1681267880, i32* %25
  br label %386

; <label>:296:                                    ; preds = %26
  %297 = load i32, i32* @x.9
  %298 = load i32, i32* @y.10
  %299 = sub i32 %297, -357229494
  %300 = sub i32 %299, 1
  %301 = add i32 %300, -357229494
  %302 = sub i32 %297, 1
  %303 = mul i32 %297, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %298, 10
  %307 = xor i1 %305, true
  %308 = xor i1 %306, true
  %309 = xor i1 false, true
  %310 = and i1 %307, false
  %311 = and i1 %305, %309
  %312 = and i1 %308, false
  %313 = and i1 %306, %309
  %314 = or i1 %310, %311
  %315 = or i1 %312, %313
  %316 = xor i1 %314, %315
  %317 = or i1 %307, %308
  %318 = xor i1 %317, true
  %319 = or i1 false, %309
  %320 = and i1 %318, %319
  %321 = or i1 %316, %320
  %322 = or i1 %305, %306
  %323 = select i1 %321, i32 1570261517, i32 -1617799737
  store i32 %323, i32* %25
  br label %386

; <label>:324:                                    ; preds = %26
  %325 = load i32, i32* %3, align 4
  store i32 %325, i32* %1
  %326 = load i32, i32* @x.9
  %327 = load i32, i32* @y.10
  %328 = sub i32 0, 1
  %329 = add i32 %326, %328
  %330 = sub i32 %326, 1
  %331 = mul i32 %326, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %327, 10
  %335 = and i1 %333, %334
  %336 = xor i1 %333, %334
  %337 = or i1 %335, %336
  %338 = or i1 %333, %334
  %339 = select i1 %337, i32 -1761426988, i32 -1617799737
  store i32 %339, i32* %25
  br label %386

; <label>:340:                                    ; preds = %26
  %341 = load volatile i32, i32* %1
  ret i32 %341

; <label>:342:                                    ; preds = %26
  store i32 1, i32* %5, align 4
  store i32 211941530, i32* %25
  br label %386

; <label>:343:                                    ; preds = %26
  store i32 1705475698, i32* %25
  br label %386

; <label>:344:                                    ; preds = %26
  %345 = load i32, i32* %4, align 4
  %346 = shl i32 %345, 1
  %347 = sub i32 0, 1
  %348 = add i32 %345, %347
  %349 = sub i32 %345, 1
  %350 = mul i32 %348, 1
  %351 = sub i32 0, -119128069
  %352 = sub i32 %351, %345
  %353 = add i32 %352, -119128069
  %354 = sub i32 0, %345
  %355 = sub i32 %353, -706249924
  %356 = add i32 %355, 1
  %357 = add i32 %356, -706249924
  %358 = add i32 %353, 1
  %359 = add i32 0, -1125891980
  %360 = sub i32 %359, %345
  %361 = sub i32 %360, -1125891980
  %362 = sub i32 0, %345
  %363 = sub i32 %361, 762408233
  %364 = add i32 %363, 1
  %365 = add i32 %364, 762408233
  %366 = add i32 %361, 1
  %367 = add i32 0, -1571875665
  %368 = sub i32 %367, %345
  %369 = sub i32 %368, -1571875665
  %370 = sub i32 0, %345
  %371 = sub i32 0, %369
  %372 = sub i32 0, 1
  %373 = add i32 %371, %372
  %374 = sub i32 0, %373
  %375 = add i32 %369, 1
  %376 = sub i32 0, 1
  %377 = sub i32 %345, %376
  %378 = add nsw i32 %345, 1
  store i32 %377, i32* %4, align 4
  store i32 1355769036, i32* %25
  br label %386

; <label>:379:                                    ; preds = %26
  %380 = call i64 @_ZN12Template_MPM4flowEv(%struct.Template_MPM* @MPM)
  store i64 %380, i64* %7, align 8
  %381 = load i64, i64* %7, align 8
  %382 = sitofp i64 %381 to double
  %383 = fcmp oge double %382, 1.000000e+09
  store i32 -1416374762, i32* %25
  br label %386

; <label>:384:                                    ; preds = %26
  %385 = load i32, i32* %3, align 4
  store i32 1570261517, i32* %25
  br label %386

; <label>:386:                                    ; preds = %384, %379, %344, %343, %342, %324, %296, %293, %291, %288, %268, %240, %239, %217, %189, %188, %160, %145, %138, %137, %136, %135, %128, %123, %115, %110, %102, %96, %91, %90, %62, %34, %29, %28
  br label %26
}

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12Template_MPM4initEiii(%struct.Template_MPM*, i32, i32, i32) #0 comdat align 2 {
  %5 = alloca %struct.Template_MPM*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32 %3, i32* %8, align 4
  %9 = load %struct.Template_MPM*, %struct.Template_MPM** %5, align 8
  %10 = load i32, i32* %6, align 4
  call void @_ZN12Template_MPM6resizeEi(%struct.Template_MPM* %9, i32 %10)
  %11 = load i32, i32* %7, align 4
  %12 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %9, i32 0, i32 11
  store i32 %11, i32* %12, align 8
  %13 = load i32, i32* %8, align 4
  %14 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %9, i32 0, i32 12
  store i32 %13, i32* %14, align 4
  ret void
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12Template_MPM8add_edgeEiix(%struct.Template_MPM*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.13
  %8 = load i32, i32* @y.14
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 784125151, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %189
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 784125151, label %20
    i32 1047893207, label %40
    i32 1360175788, label %94
    i32 -1306509052, label %95
  ]

; <label>:19:                                     ; preds = %17
  br label %189

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1047893207, i32 -1306509052
  store i32 %39, i32* %16
  br label %189

; <label>:40:                                     ; preds = %17
  %41 = alloca %struct.Template_MPM*, align 8
  %42 = alloca i32, align 4
  %43 = alloca i32, align 4
  %44 = alloca i64, align 8
  %45 = alloca %"struct.Template_MPM::FlowEdge", align 8
  %46 = alloca %"struct.Template_MPM::FlowEdge", align 8
  %47 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %41, align 8
  store i32 %1, i32* %42, align 4
  store i32 %2, i32* %43, align 4
  store i64 %3, i64* %44, align 8
  %48 = load %struct.Template_MPM*, %struct.Template_MPM** %41, align 8
  %49 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 1
  %50 = load i32, i32* %42, align 4
  %51 = load i32, i32* %43, align 4
  %52 = load i64, i64* %44, align 8
  call void @_ZN12Template_MPM8FlowEdgeC2Eiix(%"struct.Template_MPM::FlowEdge"* %45, i32 %50, i32 %51, i64 %52)
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_(%"class.std::vector"* %49, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %45)
  %53 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 1
  %54 = load i32, i32* %43, align 4
  %55 = load i32, i32* %42, align 4
  %56 = load i64, i64* %44, align 8
  call void @_ZN12Template_MPM8FlowEdgeC2Eiix(%"struct.Template_MPM::FlowEdge"* %46, i32 %54, i32 %55, i64 %56)
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_(%"class.std::vector"* %53, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %46)
  %57 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 7
  %58 = load i32, i32* %42, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"* %57, i64 %59) #3
  %61 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 10
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.23"* %60, i32* dereferenceable(4) %61)
  %62 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 7
  %63 = load i32, i32* %43, align 4
  %64 = sext i32 %63 to i64
  %65 = call dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"* %62, i64 %64) #3
  %66 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 10
  %67 = load i32, i32* %66, align 4
  %68 = sub i32 0, %67
  %69 = sub i32 0, 1
  %70 = add i32 %68, %69
  %71 = sub i32 0, %70
  %72 = add nsw i32 %67, 1
  store i32 %71, i32* %47, align 4
  call void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector.23"* %65, i32* dereferenceable(4) %47)
  %73 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 10
  %74 = load i32, i32* %73, align 4
  %75 = sub i32 0, %74
  %76 = sub i32 0, 2
  %77 = add i32 %75, %76
  %78 = sub i32 0, %77
  %79 = add nsw i32 %74, 2
  store i32 %78, i32* %73, align 4
  %80 = load i32, i32* @x.13
  %81 = load i32, i32* @y.14
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1360175788, i32 -1306509052
  store i32 %93, i32* %16
  br label %189

; <label>:94:                                     ; preds = %17
  ret void

; <label>:95:                                     ; preds = %17
  %96 = alloca %struct.Template_MPM*, align 8
  %97 = alloca i32, align 4
  %98 = alloca i32, align 4
  %99 = alloca i64, align 8
  %100 = alloca %"struct.Template_MPM::FlowEdge", align 8
  %101 = alloca %"struct.Template_MPM::FlowEdge", align 8
  %102 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %96, align 8
  store i32 %1, i32* %97, align 4
  store i32 %2, i32* %98, align 4
  store i64 %3, i64* %99, align 8
  %103 = load %struct.Template_MPM*, %struct.Template_MPM** %96, align 8
  %104 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 1
  %105 = load i32, i32* %97, align 4
  %106 = load i32, i32* %98, align 4
  %107 = load i64, i64* %99, align 8
  call void @_ZN12Template_MPM8FlowEdgeC2Eiix(%"struct.Template_MPM::FlowEdge"* %100, i32 %105, i32 %106, i64 %107)
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_(%"class.std::vector"* %104, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %100)
  %108 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 1
  %109 = load i32, i32* %98, align 4
  %110 = load i32, i32* %97, align 4
  %111 = load i64, i64* %99, align 8
  call void @_ZN12Template_MPM8FlowEdgeC2Eiix(%"struct.Template_MPM::FlowEdge"* %101, i32 %109, i32 %110, i64 %111)
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_(%"class.std::vector"* %108, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %101)
  %112 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 7
  %113 = load i32, i32* %97, align 4
  %114 = sext i32 %113 to i64
  %115 = call dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"* %112, i64 %114) #3
  %116 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 10
  call void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.23"* %115, i32* dereferenceable(4) %116)
  %117 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 7
  %118 = load i32, i32* %98, align 4
  %119 = sext i32 %118 to i64
  %120 = call dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"* %117, i64 %119) #3
  %121 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 10
  %122 = load i32, i32* %121, align 4
  %123 = add i32 0, -1462780265
  %124 = sub i32 %123, %122
  %125 = sub i32 %124, -1462780265
  %126 = sub i32 0, %122
  %127 = sub i32 %125, -1054367012
  %128 = add i32 %127, 1
  %129 = add i32 %128, -1054367012
  %130 = add i32 %125, 1
  %131 = shl i32 %122, 1
  %132 = sub i32 0, %122
  %133 = add i32 0, %132
  %134 = sub i32 0, %122
  %135 = sub i32 0, 1
  %136 = sub i32 %133, %135
  %137 = add i32 %133, 1
  %138 = shl i32 %122, 1
  %139 = shl i32 %122, 1
  %140 = sub i32 %122, -1487035422
  %141 = add i32 %140, 1
  %142 = add i32 %141, -1487035422
  %143 = add nsw i32 %122, 1
  store i32 %142, i32* %102, align 4
  call void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector.23"* %120, i32* dereferenceable(4) %102)
  %144 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %103, i32 0, i32 10
  %145 = load i32, i32* %144, align 4
  %146 = shl i32 %145, 2
  %147 = sub i32 0, 2
  %148 = add i32 %145, %147
  %149 = sub i32 %145, 2
  %150 = mul i32 %148, 2
  %151 = add i32 0, 1145606342
  %152 = sub i32 %151, %145
  %153 = sub i32 %152, 1145606342
  %154 = sub i32 0, %145
  %155 = sub i32 0, 2
  %156 = sub i32 %153, %155
  %157 = add i32 %153, 2
  %158 = sub i32 %145, 1901759733
  %159 = sub i32 %158, 2
  %160 = add i32 %159, 1901759733
  %161 = sub i32 %145, 2
  %162 = mul i32 %160, 2
  %163 = add i32 0, 1653005338
  %164 = sub i32 %163, %145
  %165 = sub i32 %164, 1653005338
  %166 = sub i32 0, %145
  %167 = sub i32 0, %165
  %168 = sub i32 0, 2
  %169 = add i32 %167, %168
  %170 = sub i32 0, %169
  %171 = add i32 %165, 2
  %172 = sub i32 0, 1574686416
  %173 = sub i32 %172, %145
  %174 = add i32 %173, 1574686416
  %175 = sub i32 0, %145
  %176 = sub i32 0, %174
  %177 = sub i32 0, 2
  %178 = add i32 %176, %177
  %179 = sub i32 0, %178
  %180 = add i32 %174, 2
  %181 = add i32 %145, -1545252857
  %182 = sub i32 %181, 2
  %183 = sub i32 %182, -1545252857
  %184 = sub i32 %145, 2
  %185 = mul i32 %183, 2
  %186 = sub i32 0, 2
  %187 = sub i32 %145, %186
  %188 = add nsw i32 %145, 2
  store i32 %187, i32* %144, align 4
  store i32 1047893207, i32* %16
  br label %189

; <label>:189:                                    ; preds = %95, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN12Template_MPM4flowEv(%struct.Template_MPM*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %struct.Template_MPM*
  %6 = alloca i64*
  %7 = alloca i32*
  %8 = alloca i32*
  %9 = alloca i32*
  %10 = alloca i32*
  %11 = alloca i32*
  %12 = alloca i32*
  %13 = alloca i8*
  %14 = alloca i32*
  %15 = alloca i64*
  %16 = alloca i64*
  %17 = alloca i64*
  %18 = alloca i1
  %19 = alloca i1
  %20 = load i32, i32* @x.15
  %21 = load i32, i32* @y.16
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %19
  %28 = icmp slt i32 %21, 10
  store i1 %28, i1* %18
  %29 = alloca i32
  store i32 1987992835, i32* %29
  br label %30

; <label>:30:                                     ; preds = %1, %1088
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 1987992835, label %33
    i32 -1746238597, label %41
    i32 1652784257, label %84
    i32 566847738, label %85
    i32 2098489817, label %138
    i32 506549413, label %166
    i32 70590238, label %194
    i32 -59029959, label %195
    i32 1563833213, label %197
    i32 1032778552, label %213
    i32 -262478831, label %247
    i32 569603051, label %250
    i32 1787447227, label %278
    i32 -681322171, label %306
    i32 1634732256, label %307
    i32 -1705498190, label %315
    i32 -1095997309, label %343
    i32 -1378918746, label %360
    i32 774665544, label %361
    i32 500817387, label %369
    i32 130288391, label %392
    i32 -1389780881, label %408
    i32 181353556, label %424
    i32 -1662376861, label %425
    i32 1669836019, label %464
    i32 1172149169, label %482
    i32 1959091052, label %490
    i32 -1471728589, label %567
    i32 -2046237626, label %568
    i32 -103973675, label %584
    i32 378343979, label %607
    i32 273798438, label %608
    i32 -823717617, label %626
    i32 936987433, label %642
    i32 -687032952, label %660
    i32 669004826, label %661
    i32 -1848017057, label %669
    i32 470630507, label %679
    i32 -311931609, label %680
    i32 -760691920, label %685
    i32 -1663777491, label %713
    i32 -1007665593, label %749
    i32 -842010144, label %752
    i32 -918534520, label %756
    i32 1920513536, label %757
    i32 1410455849, label %765
    i32 1936555242, label %770
    i32 1244866997, label %785
    i32 492176577, label %801
    i32 1760732984, label %802
    i32 682114330, label %818
    i32 1334702077, label %850
    i32 -1449062842, label %853
    i32 -960527842, label %869
    i32 1154932548, label %906
    i32 -538314820, label %907
    i32 -2086185985, label %946
    i32 1334819829, label %973
    i32 -79007173, label %1000
    i32 1539037007, label %1001
    i32 550023879, label %1004
    i32 454625499, label %1019
    i32 434896032, label %1020
    i32 746410709, label %1027
    i32 -1056652448, label %1040
    i32 465662236, label %1042
    i32 -96473576, label %1043
    i32 -889565516, label %1057
    i32 -225322394, label %1060
    i32 -1031636326, label %1070
    i32 -1482766673, label %1071
    i32 -525397016, label %1077
    i32 -815418992, label %1087
  ]

; <label>:32:                                     ; preds = %30
  br label %1088

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %19
  %35 = load volatile i1, i1* %18
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1746238597, i32 550023879
  store i32 %40, i32* %29
  br label %1088

; <label>:41:                                     ; preds = %30
  %42 = alloca %struct.Template_MPM*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %17
  %44 = alloca i64, align 8
  store i64* %44, i64** %16
  %45 = alloca i64, align 8
  store i64* %45, i64** %15
  %46 = alloca i32, align 4
  store i32* %46, i32** %14
  %47 = alloca i8, align 1
  store i8* %47, i8** %13
  %48 = alloca i32, align 4
  store i32* %48, i32** %12
  %49 = alloca i32, align 4
  store i32* %49, i32** %11
  %50 = alloca i32, align 4
  store i32* %50, i32** %10
  %51 = alloca i32, align 4
  store i32* %51, i32** %9
  %52 = alloca i32, align 4
  store i32* %52, i32** %8
  %53 = alloca i32, align 4
  store i32* %53, i32** %7
  %54 = alloca i64, align 8
  store i64* %54, i64** %6
  store %struct.Template_MPM* %0, %struct.Template_MPM** %42, align 8
  %55 = load %struct.Template_MPM*, %struct.Template_MPM** %42, align 8
  store %struct.Template_MPM* %55, %struct.Template_MPM** %5
  %56 = load volatile i64*, i64** %17
  store i64 0, i64* %56, align 8
  %57 = load i32, i32* @x.15
  %58 = load i32, i32* @y.16
  %59 = add i32 %57, 440756681
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 440756681
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 1652784257, i32 550023879
  store i32 %83, i32* %29
  br label %1088

; <label>:84:                                     ; preds = %30
  store i32 566847738, i32* %29
  br label %1088

; <label>:85:                                     ; preds = %30
  %86 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %87 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %86, i32 0, i32 3
  %88 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %89 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %88, i32 0, i32 9
  %90 = load i32, i32* %89, align 8
  %91 = sext i32 %90 to i64
  %92 = load volatile i64*, i64** %16
  store i64 0, i64* %92, align 8
  %93 = load volatile i64*, i64** %16
  call void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.5"* %87, i64 %91, i64* dereferenceable(8) %93)
  %94 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %95 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %94, i32 0, i32 4
  %96 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %97 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %96, i32 0, i32 9
  %98 = load i32, i32* %97, align 8
  %99 = sext i32 %98 to i64
  %100 = load volatile i64*, i64** %15
  store i64 0, i64* %100, align 8
  %101 = load volatile i64*, i64** %15
  call void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.5"* %95, i64 %99, i64* dereferenceable(8) %101)
  %102 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %103 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %102, i32 0, i32 13
  %104 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %105 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %104, i32 0, i32 9
  %106 = load i32, i32* %105, align 8
  %107 = sext i32 %106 to i64
  %108 = load volatile i32*, i32** %14
  store i32 -1, i32* %108, align 4
  %109 = load volatile i32*, i32** %14
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.23"* %103, i64 %107, i32* dereferenceable(4) %109)
  %110 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %111 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %110, i32 0, i32 2
  %112 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %113 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %112, i32 0, i32 9
  %114 = load i32, i32* %113, align 8
  %115 = sext i32 %114 to i64
  %116 = load volatile i8*, i8** %13
  store i8 1, i8* %116, align 1
  %117 = load volatile i8*, i8** %13
  call void @_ZNSt6vectorIcSaIcEE6assignEmRKc(%"class.std::vector.0"* %111, i64 %115, i8* dereferenceable(1) %117)
  %118 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %119 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %118, i32 0, i32 13
  %120 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %121 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %120, i32 0, i32 11
  %122 = load i32, i32* %121, align 8
  %123 = sext i32 %122 to i64
  %124 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %119, i64 %123) #3
  store i32 0, i32* %124, align 4
  %125 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %126 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %125, i32 0, i32 15
  store i32 0, i32* %126, align 8
  %127 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %128 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %127, i32 0, i32 16
  store i32 1, i32* %128, align 4
  %129 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %130 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %129, i32 0, i32 11
  %131 = load i32, i32* %130, align 8
  %132 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %133 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %132, i32 0, i32 14
  %134 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %133, i64 0) #3
  store i32 %131, i32* %134, align 4
  %135 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %136 = call zeroext i1 @_ZN12Template_MPM3bfsEv(%struct.Template_MPM* %135)
  %137 = select i1 %136, i32 -59029959, i32 2098489817
  store i32 %137, i32* %29
  br label %1088

; <label>:138:                                    ; preds = %30
  %139 = load i32, i32* @x.15
  %140 = load i32, i32* @y.16
  %141 = add i32 %139, 1743713920
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, 1743713920
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = xor i1 %147, true
  %150 = xor i1 %148, true
  %151 = xor i1 false, true
  %152 = and i1 %149, false
  %153 = and i1 %147, %151
  %154 = and i1 %150, false
  %155 = and i1 %148, %151
  %156 = or i1 %152, %153
  %157 = or i1 %154, %155
  %158 = xor i1 %156, %157
  %159 = or i1 %149, %150
  %160 = xor i1 %159, true
  %161 = or i1 false, %151
  %162 = and i1 %160, %161
  %163 = or i1 %158, %162
  %164 = or i1 %147, %148
  %165 = select i1 %163, i32 506549413, i32 454625499
  store i32 %165, i32* %29
  br label %1088

; <label>:166:                                    ; preds = %30
  %167 = load i32, i32* @x.15
  %168 = load i32, i32* @y.16
  %169 = sub i32 %167, -559105894
  %170 = sub i32 %169, 1
  %171 = add i32 %170, -559105894
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 true, true
  %180 = and i1 %177, true
  %181 = and i1 %175, %179
  %182 = and i1 %178, true
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 true, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  %193 = select i1 %191, i32 70590238, i32 454625499
  store i32 %193, i32* %29
  br label %1088

; <label>:194:                                    ; preds = %30
  store i32 1539037007, i32* %29
  br label %1088

; <label>:195:                                    ; preds = %30
  %196 = load volatile i32*, i32** %12
  store i32 0, i32* %196, align 4
  store i32 1563833213, i32* %29
  br label %1088

; <label>:197:                                    ; preds = %30
  %198 = load i32, i32* @x.15
  %199 = load i32, i32* @y.16
  %200 = sub i32 %198, -1789430291
  %201 = sub i32 %200, 1
  %202 = add i32 %201, -1789430291
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  %212 = select i1 %210, i32 1032778552, i32 434896032
  store i32 %212, i32* %29
  br label %1088

; <label>:213:                                    ; preds = %30
  %214 = load volatile i32*, i32** %12
  %215 = load i32, i32* %214, align 4
  %216 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %217 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %216, i32 0, i32 9
  %218 = load i32, i32* %217, align 8
  %219 = icmp slt i32 %215, %218
  store i1 %219, i1* %4
  %220 = load i32, i32* @x.15
  %221 = load i32, i32* @y.16
  %222 = sub i32 %220, -324360034
  %223 = sub i32 %222, 1
  %224 = add i32 %223, -324360034
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 false, true
  %233 = and i1 %230, false
  %234 = and i1 %228, %232
  %235 = and i1 %231, false
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 false, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  %246 = select i1 %244, i32 -262478831, i32 434896032
  store i32 %246, i32* %29
  br label %1088

; <label>:247:                                    ; preds = %30
  %248 = load volatile i1, i1* %4
  %249 = select i1 %248, i32 569603051, i32 -1705498190
  store i32 %249, i32* %29
  br label %1088

; <label>:250:                                    ; preds = %30
  %251 = load i32, i32* @x.15
  %252 = load i32, i32* @y.16
  %253 = add i32 %251, -1525064495
  %254 = sub i32 %253, 1
  %255 = sub i32 %254, -1525064495
  %256 = sub i32 %251, 1
  %257 = mul i32 %251, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %252, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 true, true
  %264 = and i1 %261, true
  %265 = and i1 %259, %263
  %266 = and i1 %262, true
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 true, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  %277 = select i1 %275, i32 1787447227, i32 746410709
  store i32 %277, i32* %29
  br label %1088

; <label>:278:                                    ; preds = %30
  %279 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %280 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %279, i32 0, i32 6
  %281 = load volatile i32*, i32** %12
  %282 = load i32, i32* %281, align 4
  %283 = sext i32 %282 to i64
  %284 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %280, i64 %283) #3
  call void @_ZNSt7__cxx114listIiSaIiEE5clearEv(%"class.std::__cxx11::list"* %284) #3
  %285 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %286 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %285, i32 0, i32 5
  %287 = load volatile i32*, i32** %12
  %288 = load i32, i32* %287, align 4
  %289 = sext i32 %288 to i64
  %290 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %286, i64 %289) #3
  call void @_ZNSt7__cxx114listIiSaIiEE5clearEv(%"class.std::__cxx11::list"* %290) #3
  %291 = load i32, i32* @x.15
  %292 = load i32, i32* @y.16
  %293 = sub i32 %291, 1240547242
  %294 = sub i32 %293, 1
  %295 = add i32 %294, 1240547242
  %296 = sub i32 %291, 1
  %297 = mul i32 %291, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %292, 10
  %301 = and i1 %299, %300
  %302 = xor i1 %299, %300
  %303 = or i1 %301, %302
  %304 = or i1 %299, %300
  %305 = select i1 %303, i32 -681322171, i32 746410709
  store i32 %305, i32* %29
  br label %1088

; <label>:306:                                    ; preds = %30
  store i32 1634732256, i32* %29
  br label %1088

; <label>:307:                                    ; preds = %30
  %308 = load volatile i32*, i32** %12
  %309 = load i32, i32* %308, align 4
  %310 = add i32 %309, 1901425788
  %311 = add i32 %310, 1
  %312 = sub i32 %311, 1901425788
  %313 = add nsw i32 %309, 1
  %314 = load volatile i32*, i32** %12
  store i32 %312, i32* %314, align 4
  store i32 1563833213, i32* %29
  br label %1088

; <label>:315:                                    ; preds = %30
  %316 = load i32, i32* @x.15
  %317 = load i32, i32* @y.16
  %318 = sub i32 %316, 1865190050
  %319 = sub i32 %318, 1
  %320 = add i32 %319, 1865190050
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = xor i1 %324, true
  %327 = xor i1 %325, true
  %328 = xor i1 false, true
  %329 = and i1 %326, false
  %330 = and i1 %324, %328
  %331 = and i1 %327, false
  %332 = and i1 %325, %328
  %333 = or i1 %329, %330
  %334 = or i1 %331, %332
  %335 = xor i1 %333, %334
  %336 = or i1 %326, %327
  %337 = xor i1 %336, true
  %338 = or i1 false, %328
  %339 = and i1 %337, %338
  %340 = or i1 %335, %339
  %341 = or i1 %324, %325
  %342 = select i1 %340, i32 -1095997309, i32 -1056652448
  store i32 %342, i32* %29
  br label %1088

; <label>:343:                                    ; preds = %30
  %344 = load volatile i32*, i32** %11
  store i32 0, i32* %344, align 4
  %345 = load i32, i32* @x.15
  %346 = load i32, i32* @y.16
  %347 = sub i32 %345, 1264316466
  %348 = sub i32 %347, 1
  %349 = add i32 %348, 1264316466
  %350 = sub i32 %345, 1
  %351 = mul i32 %345, %349
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %346, 10
  %355 = and i1 %353, %354
  %356 = xor i1 %353, %354
  %357 = or i1 %355, %356
  %358 = or i1 %353, %354
  %359 = select i1 %357, i32 -1378918746, i32 -1056652448
  store i32 %359, i32* %29
  br label %1088

; <label>:360:                                    ; preds = %30
  store i32 774665544, i32* %29
  br label %1088

; <label>:361:                                    ; preds = %30
  %362 = load volatile i32*, i32** %11
  %363 = load i32, i32* %362, align 4
  %364 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %365 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %364, i32 0, i32 10
  %366 = load i32, i32* %365, align 4
  %367 = icmp slt i32 %363, %366
  %368 = select i1 %367, i32 500817387, i32 273798438
  store i32 %368, i32* %29
  br label %1088

; <label>:369:                                    ; preds = %30
  %370 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %371 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %370, i32 0, i32 1
  %372 = load volatile i32*, i32** %11
  %373 = load i32, i32* %372, align 4
  %374 = sext i32 %373 to i64
  %375 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %371, i64 %374) #3
  %376 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %375, i32 0, i32 2
  %377 = load i64, i64* %376, align 8
  %378 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %379 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %378, i32 0, i32 1
  %380 = load volatile i32*, i32** %11
  %381 = load i32, i32* %380, align 4
  %382 = sext i32 %381 to i64
  %383 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %379, i64 %382) #3
  %384 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %383, i32 0, i32 3
  %385 = load i64, i64* %384, align 8
  %386 = add i64 %377, 8592883934244011432
  %387 = sub i64 %386, %385
  %388 = sub i64 %387, 8592883934244011432
  %389 = sub nsw i64 %377, %385
  %390 = icmp eq i64 %388, 0
  %391 = select i1 %390, i32 130288391, i32 -1662376861
  store i32 %391, i32* %29
  br label %1088

; <label>:392:                                    ; preds = %30
  %393 = load i32, i32* @x.15
  %394 = load i32, i32* @y.16
  %395 = add i32 %393, -793111737
  %396 = sub i32 %395, 1
  %397 = sub i32 %396, -793111737
  %398 = sub i32 %393, 1
  %399 = mul i32 %393, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %394, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  %407 = select i1 %405, i32 -1389780881, i32 465662236
  store i32 %407, i32* %29
  br label %1088

; <label>:408:                                    ; preds = %30
  %409 = load i32, i32* @x.15
  %410 = load i32, i32* @y.16
  %411 = sub i32 %409, -186792989
  %412 = sub i32 %411, 1
  %413 = add i32 %412, -186792989
  %414 = sub i32 %409, 1
  %415 = mul i32 %409, %413
  %416 = urem i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = icmp slt i32 %410, 10
  %419 = and i1 %417, %418
  %420 = xor i1 %417, %418
  %421 = or i1 %419, %420
  %422 = or i1 %417, %418
  %423 = select i1 %421, i32 181353556, i32 465662236
  store i32 %423, i32* %29
  br label %1088

; <label>:424:                                    ; preds = %30
  store i32 -2046237626, i32* %29
  br label %1088

; <label>:425:                                    ; preds = %30
  %426 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %427 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %426, i32 0, i32 1
  %428 = load volatile i32*, i32** %11
  %429 = load i32, i32* %428, align 4
  %430 = sext i32 %429 to i64
  %431 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %427, i64 %430) #3
  %432 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %431, i32 0, i32 0
  %433 = load i32, i32* %432, align 8
  %434 = load volatile i32*, i32** %10
  store i32 %433, i32* %434, align 4
  %435 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %436 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %435, i32 0, i32 1
  %437 = load volatile i32*, i32** %11
  %438 = load i32, i32* %437, align 4
  %439 = sext i32 %438 to i64
  %440 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %436, i64 %439) #3
  %441 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %440, i32 0, i32 1
  %442 = load i32, i32* %441, align 4
  %443 = load volatile i32*, i32** %9
  store i32 %442, i32* %443, align 4
  %444 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %445 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %444, i32 0, i32 13
  %446 = load volatile i32*, i32** %10
  %447 = load i32, i32* %446, align 4
  %448 = sext i32 %447 to i64
  %449 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %445, i64 %448) #3
  %450 = load i32, i32* %449, align 4
  %451 = sub i32 %450, 635924588
  %452 = add i32 %451, 1
  %453 = add i32 %452, 635924588
  %454 = add nsw i32 %450, 1
  %455 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %456 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %455, i32 0, i32 13
  %457 = load volatile i32*, i32** %9
  %458 = load i32, i32* %457, align 4
  %459 = sext i32 %458 to i64
  %460 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %456, i64 %459) #3
  %461 = load i32, i32* %460, align 4
  %462 = icmp eq i32 %453, %461
  %463 = select i1 %462, i32 1669836019, i32 -1471728589
  store i32 %463, i32* %29
  br label %1088

; <label>:464:                                    ; preds = %30
  %465 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %466 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %465, i32 0, i32 13
  %467 = load volatile i32*, i32** %9
  %468 = load i32, i32* %467, align 4
  %469 = sext i32 %468 to i64
  %470 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %466, i64 %469) #3
  %471 = load i32, i32* %470, align 4
  %472 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %473 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %472, i32 0, i32 13
  %474 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %475 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %474, i32 0, i32 12
  %476 = load i32, i32* %475, align 4
  %477 = sext i32 %476 to i64
  %478 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %473, i64 %477) #3
  %479 = load i32, i32* %478, align 4
  %480 = icmp slt i32 %471, %479
  %481 = select i1 %480, i32 1959091052, i32 1172149169
  store i32 %481, i32* %29
  br label %1088

; <label>:482:                                    ; preds = %30
  %483 = load volatile i32*, i32** %9
  %484 = load i32, i32* %483, align 4
  %485 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %486 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %485, i32 0, i32 12
  %487 = load i32, i32* %486, align 4
  %488 = icmp eq i32 %484, %487
  %489 = select i1 %488, i32 1959091052, i32 -1471728589
  store i32 %489, i32* %29
  br label %1088

; <label>:490:                                    ; preds = %30
  %491 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %492 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %491, i32 0, i32 5
  %493 = load volatile i32*, i32** %9
  %494 = load i32, i32* %493, align 4
  %495 = sext i32 %494 to i64
  %496 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %492, i64 %495) #3
  %497 = load volatile i32*, i32** %11
  call void @_ZNSt7__cxx114listIiSaIiEE9push_backERKi(%"class.std::__cxx11::list"* %496, i32* dereferenceable(4) %497)
  %498 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %499 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %498, i32 0, i32 6
  %500 = load volatile i32*, i32** %10
  %501 = load i32, i32* %500, align 4
  %502 = sext i32 %501 to i64
  %503 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %499, i64 %502) #3
  %504 = load volatile i32*, i32** %11
  call void @_ZNSt7__cxx114listIiSaIiEE9push_backERKi(%"class.std::__cxx11::list"* %503, i32* dereferenceable(4) %504)
  %505 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %506 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %505, i32 0, i32 1
  %507 = load volatile i32*, i32** %11
  %508 = load i32, i32* %507, align 4
  %509 = sext i32 %508 to i64
  %510 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %506, i64 %509) #3
  %511 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %510, i32 0, i32 2
  %512 = load i64, i64* %511, align 8
  %513 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %514 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %513, i32 0, i32 1
  %515 = load volatile i32*, i32** %11
  %516 = load i32, i32* %515, align 4
  %517 = sext i32 %516 to i64
  %518 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %514, i64 %517) #3
  %519 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %518, i32 0, i32 3
  %520 = load i64, i64* %519, align 8
  %521 = add i64 %512, -582851986440917629
  %522 = sub i64 %521, %520
  %523 = sub i64 %522, -582851986440917629
  %524 = sub nsw i64 %512, %520
  %525 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %526 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %525, i32 0, i32 3
  %527 = load volatile i32*, i32** %9
  %528 = load i32, i32* %527, align 4
  %529 = sext i32 %528 to i64
  %530 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %526, i64 %529) #3
  %531 = load i64, i64* %530, align 8
  %532 = sub i64 0, %531
  %533 = sub i64 0, %523
  %534 = add i64 %532, %533
  %535 = sub i64 0, %534
  %536 = add nsw i64 %531, %523
  store i64 %535, i64* %530, align 8
  %537 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %538 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %537, i32 0, i32 1
  %539 = load volatile i32*, i32** %11
  %540 = load i32, i32* %539, align 4
  %541 = sext i32 %540 to i64
  %542 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %538, i64 %541) #3
  %543 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %542, i32 0, i32 2
  %544 = load i64, i64* %543, align 8
  %545 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %546 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %545, i32 0, i32 1
  %547 = load volatile i32*, i32** %11
  %548 = load i32, i32* %547, align 4
  %549 = sext i32 %548 to i64
  %550 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %546, i64 %549) #3
  %551 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %550, i32 0, i32 3
  %552 = load i64, i64* %551, align 8
  %553 = add i64 %544, 4687675304868034365
  %554 = sub i64 %553, %552
  %555 = sub i64 %554, 4687675304868034365
  %556 = sub nsw i64 %544, %552
  %557 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %558 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %557, i32 0, i32 4
  %559 = load volatile i32*, i32** %10
  %560 = load i32, i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %558, i64 %561) #3
  %563 = load i64, i64* %562, align 8
  %564 = sub i64 0, %555
  %565 = sub i64 %563, %564
  %566 = add nsw i64 %563, %555
  store i64 %565, i64* %562, align 8
  store i32 -1471728589, i32* %29
  br label %1088

; <label>:567:                                    ; preds = %30
  store i32 -2046237626, i32* %29
  br label %1088

; <label>:568:                                    ; preds = %30
  %569 = load i32, i32* @x.15
  %570 = load i32, i32* @y.16
  %571 = sub i32 %569, -585578007
  %572 = sub i32 %571, 1
  %573 = add i32 %572, -585578007
  %574 = sub i32 %569, 1
  %575 = mul i32 %569, %573
  %576 = urem i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = icmp slt i32 %570, 10
  %579 = and i1 %577, %578
  %580 = xor i1 %577, %578
  %581 = or i1 %579, %580
  %582 = or i1 %577, %578
  %583 = select i1 %581, i32 -103973675, i32 -96473576
  store i32 %583, i32* %29
  br label %1088

; <label>:584:                                    ; preds = %30
  %585 = load volatile i32*, i32** %11
  %586 = load i32, i32* %585, align 4
  %587 = sub i32 %586, 1064711860
  %588 = add i32 %587, 1
  %589 = add i32 %588, 1064711860
  %590 = add nsw i32 %586, 1
  %591 = load volatile i32*, i32** %11
  store i32 %589, i32* %591, align 4
  %592 = load i32, i32* @x.15
  %593 = load i32, i32* @y.16
  %594 = sub i32 %592, -42556209
  %595 = sub i32 %594, 1
  %596 = add i32 %595, -42556209
  %597 = sub i32 %592, 1
  %598 = mul i32 %592, %596
  %599 = urem i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = icmp slt i32 %593, 10
  %602 = and i1 %600, %601
  %603 = xor i1 %600, %601
  %604 = or i1 %602, %603
  %605 = or i1 %600, %601
  %606 = select i1 %604, i32 378343979, i32 -96473576
  store i32 %606, i32* %29
  br label %1088

; <label>:607:                                    ; preds = %30
  store i32 774665544, i32* %29
  br label %1088

; <label>:608:                                    ; preds = %30
  %609 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %610 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %609, i32 0, i32 0
  %611 = load i64, i64* %610, align 8
  %612 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %613 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %612, i32 0, i32 4
  %614 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %615 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %614, i32 0, i32 12
  %616 = load i32, i32* %615, align 4
  %617 = sext i32 %616 to i64
  %618 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %613, i64 %617) #3
  store i64 %611, i64* %618, align 8
  %619 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %620 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %619, i32 0, i32 3
  %621 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %622 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %621, i32 0, i32 11
  %623 = load i32, i32* %622, align 8
  %624 = sext i32 %623 to i64
  %625 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %620, i64 %624) #3
  store i64 %611, i64* %625, align 8
  store i32 -823717617, i32* %29
  br label %1088

; <label>:626:                                    ; preds = %30
  %627 = load i32, i32* @x.15
  %628 = load i32, i32* @y.16
  %629 = add i32 %627, -798594365
  %630 = sub i32 %629, 1
  %631 = sub i32 %630, -798594365
  %632 = sub i32 %627, 1
  %633 = mul i32 %627, %631
  %634 = urem i32 %633, 2
  %635 = icmp eq i32 %634, 0
  %636 = icmp slt i32 %628, 10
  %637 = and i1 %635, %636
  %638 = xor i1 %635, %636
  %639 = or i1 %637, %638
  %640 = or i1 %635, %636
  %641 = select i1 %639, i32 936987433, i32 -889565516
  store i32 %641, i32* %29
  br label %1088

; <label>:642:                                    ; preds = %30
  %643 = load volatile i32*, i32** %8
  store i32 -1, i32* %643, align 4
  %644 = load volatile i32*, i32** %7
  store i32 0, i32* %644, align 4
  %645 = load i32, i32* @x.15
  %646 = load i32, i32* @y.16
  %647 = add i32 %645, 81683888
  %648 = sub i32 %647, 1
  %649 = sub i32 %648, 81683888
  %650 = sub i32 %645, 1
  %651 = mul i32 %645, %649
  %652 = urem i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = icmp slt i32 %646, 10
  %655 = and i1 %653, %654
  %656 = xor i1 %653, %654
  %657 = or i1 %655, %656
  %658 = or i1 %653, %654
  %659 = select i1 %657, i32 -687032952, i32 -889565516
  store i32 %659, i32* %29
  br label %1088

; <label>:660:                                    ; preds = %30
  store i32 669004826, i32* %29
  br label %1088

; <label>:661:                                    ; preds = %30
  %662 = load volatile i32*, i32** %7
  %663 = load i32, i32* %662, align 4
  %664 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %665 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %664, i32 0, i32 9
  %666 = load i32, i32* %665, align 8
  %667 = icmp slt i32 %663, %666
  %668 = select i1 %667, i32 -1848017057, i32 1410455849
  store i32 %668, i32* %29
  br label %1088

; <label>:669:                                    ; preds = %30
  %670 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %671 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %670, i32 0, i32 2
  %672 = load volatile i32*, i32** %7
  %673 = load i32, i32* %672, align 4
  %674 = sext i32 %673 to i64
  %675 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %671, i64 %674) #3
  %676 = load i8, i8* %675, align 1
  %677 = icmp ne i8 %676, 0
  %678 = select i1 %677, i32 -311931609, i32 470630507
  store i32 %678, i32* %29
  br label %1088

; <label>:679:                                    ; preds = %30
  store i32 1920513536, i32* %29
  br label %1088

; <label>:680:                                    ; preds = %30
  %681 = load volatile i32*, i32** %8
  %682 = load i32, i32* %681, align 4
  %683 = icmp eq i32 %682, -1
  %684 = select i1 %683, i32 -842010144, i32 -760691920
  store i32 %684, i32* %29
  br label %1088

; <label>:685:                                    ; preds = %30
  %686 = load i32, i32* @x.15
  %687 = load i32, i32* @y.16
  %688 = sub i32 %686, 329269286
  %689 = sub i32 %688, 1
  %690 = add i32 %689, 329269286
  %691 = sub i32 %686, 1
  %692 = mul i32 %686, %690
  %693 = urem i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = icmp slt i32 %687, 10
  %696 = xor i1 %694, true
  %697 = xor i1 %695, true
  %698 = xor i1 true, true
  %699 = and i1 %696, true
  %700 = and i1 %694, %698
  %701 = and i1 %697, true
  %702 = and i1 %695, %698
  %703 = or i1 %699, %700
  %704 = or i1 %701, %702
  %705 = xor i1 %703, %704
  %706 = or i1 %696, %697
  %707 = xor i1 %706, true
  %708 = or i1 true, %698
  %709 = and i1 %707, %708
  %710 = or i1 %705, %709
  %711 = or i1 %694, %695
  %712 = select i1 %710, i32 -1663777491, i32 -225322394
  store i32 %712, i32* %29
  br label %1088

; <label>:713:                                    ; preds = %30
  %714 = load volatile i32*, i32** %7
  %715 = load i32, i32* %714, align 4
  %716 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %717 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %716, i32 %715)
  %718 = load volatile i32*, i32** %8
  %719 = load i32, i32* %718, align 4
  %720 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %721 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %720, i32 %719)
  %722 = icmp slt i64 %717, %721
  store i1 %722, i1* %3
  %723 = load i32, i32* @x.15
  %724 = load i32, i32* @y.16
  %725 = sub i32 0, 1
  %726 = add i32 %723, %725
  %727 = sub i32 %723, 1
  %728 = mul i32 %723, %726
  %729 = urem i32 %728, 2
  %730 = icmp eq i32 %729, 0
  %731 = icmp slt i32 %724, 10
  %732 = xor i1 %730, true
  %733 = xor i1 %731, true
  %734 = xor i1 true, true
  %735 = and i1 %732, true
  %736 = and i1 %730, %734
  %737 = and i1 %733, true
  %738 = and i1 %731, %734
  %739 = or i1 %735, %736
  %740 = or i1 %737, %738
  %741 = xor i1 %739, %740
  %742 = or i1 %732, %733
  %743 = xor i1 %742, true
  %744 = or i1 true, %734
  %745 = and i1 %743, %744
  %746 = or i1 %741, %745
  %747 = or i1 %730, %731
  %748 = select i1 %746, i32 -1007665593, i32 -225322394
  store i32 %748, i32* %29
  br label %1088

; <label>:749:                                    ; preds = %30
  %750 = load volatile i1, i1* %3
  %751 = select i1 %750, i32 -842010144, i32 -918534520
  store i32 %751, i32* %29
  br label %1088

; <label>:752:                                    ; preds = %30
  %753 = load volatile i32*, i32** %7
  %754 = load i32, i32* %753, align 4
  %755 = load volatile i32*, i32** %8
  store i32 %754, i32* %755, align 4
  store i32 -918534520, i32* %29
  br label %1088

; <label>:756:                                    ; preds = %30
  store i32 1920513536, i32* %29
  br label %1088

; <label>:757:                                    ; preds = %30
  %758 = load volatile i32*, i32** %7
  %759 = load i32, i32* %758, align 4
  %760 = add i32 %759, 1127001318
  %761 = add i32 %760, 1
  %762 = sub i32 %761, 1127001318
  %763 = add nsw i32 %759, 1
  %764 = load volatile i32*, i32** %7
  store i32 %762, i32* %764, align 4
  store i32 669004826, i32* %29
  br label %1088

; <label>:765:                                    ; preds = %30
  %766 = load volatile i32*, i32** %8
  %767 = load i32, i32* %766, align 4
  %768 = icmp eq i32 %767, -1
  %769 = select i1 %768, i32 1936555242, i32 1760732984
  store i32 %769, i32* %29
  br label %1088

; <label>:770:                                    ; preds = %30
  %771 = load i32, i32* @x.15
  %772 = load i32, i32* @y.16
  %773 = sub i32 0, 1
  %774 = add i32 %771, %773
  %775 = sub i32 %771, 1
  %776 = mul i32 %771, %774
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %772, 10
  %780 = and i1 %778, %779
  %781 = xor i1 %778, %779
  %782 = or i1 %780, %781
  %783 = or i1 %778, %779
  %784 = select i1 %782, i32 1244866997, i32 -1031636326
  store i32 %784, i32* %29
  br label %1088

; <label>:785:                                    ; preds = %30
  %786 = load i32, i32* @x.15
  %787 = load i32, i32* @y.16
  %788 = sub i32 %786, -188049530
  %789 = sub i32 %788, 1
  %790 = add i32 %789, -188049530
  %791 = sub i32 %786, 1
  %792 = mul i32 %786, %790
  %793 = urem i32 %792, 2
  %794 = icmp eq i32 %793, 0
  %795 = icmp slt i32 %787, 10
  %796 = and i1 %794, %795
  %797 = xor i1 %794, %795
  %798 = or i1 %796, %797
  %799 = or i1 %794, %795
  %800 = select i1 %798, i32 492176577, i32 -1031636326
  store i32 %800, i32* %29
  br label %1088

; <label>:801:                                    ; preds = %30
  store i32 -2086185985, i32* %29
  br label %1088

; <label>:802:                                    ; preds = %30
  %803 = load i32, i32* @x.15
  %804 = load i32, i32* @y.16
  %805 = sub i32 %803, -1378634836
  %806 = sub i32 %805, 1
  %807 = add i32 %806, -1378634836
  %808 = sub i32 %803, 1
  %809 = mul i32 %803, %807
  %810 = urem i32 %809, 2
  %811 = icmp eq i32 %810, 0
  %812 = icmp slt i32 %804, 10
  %813 = and i1 %811, %812
  %814 = xor i1 %811, %812
  %815 = or i1 %813, %814
  %816 = or i1 %811, %812
  %817 = select i1 %815, i32 682114330, i32 -1482766673
  store i32 %817, i32* %29
  br label %1088

; <label>:818:                                    ; preds = %30
  %819 = load volatile i32*, i32** %8
  %820 = load i32, i32* %819, align 4
  %821 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %822 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %821, i32 %820)
  %823 = icmp eq i64 %822, 0
  store i1 %823, i1* %2
  %824 = load i32, i32* @x.15
  %825 = load i32, i32* @y.16
  %826 = sub i32 0, 1
  %827 = add i32 %824, %826
  %828 = sub i32 %824, 1
  %829 = mul i32 %824, %827
  %830 = urem i32 %829, 2
  %831 = icmp eq i32 %830, 0
  %832 = icmp slt i32 %825, 10
  %833 = xor i1 %831, true
  %834 = xor i1 %832, true
  %835 = xor i1 false, true
  %836 = and i1 %833, false
  %837 = and i1 %831, %835
  %838 = and i1 %834, false
  %839 = and i1 %832, %835
  %840 = or i1 %836, %837
  %841 = or i1 %838, %839
  %842 = xor i1 %840, %841
  %843 = or i1 %833, %834
  %844 = xor i1 %843, true
  %845 = or i1 false, %835
  %846 = and i1 %844, %845
  %847 = or i1 %842, %846
  %848 = or i1 %831, %832
  %849 = select i1 %847, i32 1334702077, i32 -1482766673
  store i32 %849, i32* %29
  br label %1088

; <label>:850:                                    ; preds = %30
  %851 = load volatile i1, i1* %2
  %852 = select i1 %851, i32 -1449062842, i32 -538314820
  store i32 %852, i32* %29
  br label %1088

; <label>:853:                                    ; preds = %30
  %854 = load i32, i32* @x.15
  %855 = load i32, i32* @y.16
  %856 = add i32 %854, -1189052013
  %857 = sub i32 %856, 1
  %858 = sub i32 %857, -1189052013
  %859 = sub i32 %854, 1
  %860 = mul i32 %854, %858
  %861 = urem i32 %860, 2
  %862 = icmp eq i32 %861, 0
  %863 = icmp slt i32 %855, 10
  %864 = and i1 %862, %863
  %865 = xor i1 %862, %863
  %866 = or i1 %864, %865
  %867 = or i1 %862, %863
  %868 = select i1 %866, i32 -960527842, i32 -525397016
  store i32 %868, i32* %29
  br label %1088

; <label>:869:                                    ; preds = %30
  %870 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %871 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %870, i32 0, i32 2
  %872 = load volatile i32*, i32** %8
  %873 = load i32, i32* %872, align 4
  %874 = sext i32 %873 to i64
  %875 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %871, i64 %874) #3
  store i8 0, i8* %875, align 1
  %876 = load volatile i32*, i32** %8
  %877 = load i32, i32* %876, align 4
  %878 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  call void @_ZN12Template_MPM11remove_nodeEi(%struct.Template_MPM* %878, i32 %877)
  %879 = load i32, i32* @x.15
  %880 = load i32, i32* @y.16
  %881 = add i32 %879, -1951012782
  %882 = sub i32 %881, 1
  %883 = sub i32 %882, -1951012782
  %884 = sub i32 %879, 1
  %885 = mul i32 %879, %883
  %886 = urem i32 %885, 2
  %887 = icmp eq i32 %886, 0
  %888 = icmp slt i32 %880, 10
  %889 = xor i1 %887, true
  %890 = xor i1 %888, true
  %891 = xor i1 true, true
  %892 = and i1 %889, true
  %893 = and i1 %887, %891
  %894 = and i1 %890, true
  %895 = and i1 %888, %891
  %896 = or i1 %892, %893
  %897 = or i1 %894, %895
  %898 = xor i1 %896, %897
  %899 = or i1 %889, %890
  %900 = xor i1 %899, true
  %901 = or i1 true, %891
  %902 = and i1 %900, %901
  %903 = or i1 %898, %902
  %904 = or i1 %887, %888
  %905 = select i1 %903, i32 1154932548, i32 -525397016
  store i32 %905, i32* %29
  br label %1088

; <label>:906:                                    ; preds = %30
  store i32 -823717617, i32* %29
  br label %1088

; <label>:907:                                    ; preds = %30
  %908 = load volatile i32*, i32** %8
  %909 = load i32, i32* %908, align 4
  %910 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %911 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %910, i32 %909)
  %912 = load volatile i64*, i64** %6
  store i64 %911, i64* %912, align 8
  %913 = load volatile i64*, i64** %6
  %914 = load i64, i64* %913, align 8
  %915 = load volatile i64*, i64** %17
  %916 = load i64, i64* %915, align 8
  %917 = sub i64 0, %914
  %918 = sub i64 %916, %917
  %919 = add nsw i64 %916, %914
  %920 = load volatile i64*, i64** %17
  store i64 %918, i64* %920, align 8
  %921 = load volatile i32*, i32** %8
  %922 = load i32, i32* %921, align 4
  %923 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %924 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %923, i32 0, i32 11
  %925 = load i32, i32* %924, align 8
  %926 = load volatile i64*, i64** %6
  %927 = load i64, i64* %926, align 8
  %928 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  call void @_ZN12Template_MPM4pushEiixb(%struct.Template_MPM* %928, i32 %922, i32 %925, i64 %927, i1 zeroext false)
  %929 = load volatile i32*, i32** %8
  %930 = load i32, i32* %929, align 4
  %931 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %932 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %931, i32 0, i32 12
  %933 = load i32, i32* %932, align 4
  %934 = load volatile i64*, i64** %6
  %935 = load i64, i64* %934, align 8
  %936 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  call void @_ZN12Template_MPM4pushEiixb(%struct.Template_MPM* %936, i32 %930, i32 %933, i64 %935, i1 zeroext true)
  %937 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %938 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %937, i32 0, i32 2
  %939 = load volatile i32*, i32** %8
  %940 = load i32, i32* %939, align 4
  %941 = sext i32 %940 to i64
  %942 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %938, i64 %941) #3
  store i8 0, i8* %942, align 1
  %943 = load volatile i32*, i32** %8
  %944 = load i32, i32* %943, align 4
  %945 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  call void @_ZN12Template_MPM11remove_nodeEi(%struct.Template_MPM* %945, i32 %944)
  store i32 -823717617, i32* %29
  br label %1088

; <label>:946:                                    ; preds = %30
  %947 = load i32, i32* @x.15
  %948 = load i32, i32* @y.16
  %949 = sub i32 0, 1
  %950 = add i32 %947, %949
  %951 = sub i32 %947, 1
  %952 = mul i32 %947, %950
  %953 = urem i32 %952, 2
  %954 = icmp eq i32 %953, 0
  %955 = icmp slt i32 %948, 10
  %956 = xor i1 %954, true
  %957 = xor i1 %955, true
  %958 = xor i1 true, true
  %959 = and i1 %956, true
  %960 = and i1 %954, %958
  %961 = and i1 %957, true
  %962 = and i1 %955, %958
  %963 = or i1 %959, %960
  %964 = or i1 %961, %962
  %965 = xor i1 %963, %964
  %966 = or i1 %956, %957
  %967 = xor i1 %966, true
  %968 = or i1 true, %958
  %969 = and i1 %967, %968
  %970 = or i1 %965, %969
  %971 = or i1 %954, %955
  %972 = select i1 %970, i32 1334819829, i32 -815418992
  store i32 %972, i32* %29
  br label %1088

; <label>:973:                                    ; preds = %30
  %974 = load i32, i32* @x.15
  %975 = load i32, i32* @y.16
  %976 = sub i32 0, 1
  %977 = add i32 %974, %976
  %978 = sub i32 %974, 1
  %979 = mul i32 %974, %977
  %980 = urem i32 %979, 2
  %981 = icmp eq i32 %980, 0
  %982 = icmp slt i32 %975, 10
  %983 = xor i1 %981, true
  %984 = xor i1 %982, true
  %985 = xor i1 false, true
  %986 = and i1 %983, false
  %987 = and i1 %981, %985
  %988 = and i1 %984, false
  %989 = and i1 %982, %985
  %990 = or i1 %986, %987
  %991 = or i1 %988, %989
  %992 = xor i1 %990, %991
  %993 = or i1 %983, %984
  %994 = xor i1 %993, true
  %995 = or i1 false, %985
  %996 = and i1 %994, %995
  %997 = or i1 %992, %996
  %998 = or i1 %981, %982
  %999 = select i1 %997, i32 -79007173, i32 -815418992
  store i32 %999, i32* %29
  br label %1088

; <label>:1000:                                   ; preds = %30
  store i32 566847738, i32* %29
  br label %1088

; <label>:1001:                                   ; preds = %30
  %1002 = load volatile i64*, i64** %17
  %1003 = load i64, i64* %1002, align 8
  ret i64 %1003

; <label>:1004:                                   ; preds = %30
  %1005 = alloca %struct.Template_MPM*, align 8
  %1006 = alloca i64, align 8
  %1007 = alloca i64, align 8
  %1008 = alloca i64, align 8
  %1009 = alloca i32, align 4
  %1010 = alloca i8, align 1
  %1011 = alloca i32, align 4
  %1012 = alloca i32, align 4
  %1013 = alloca i32, align 4
  %1014 = alloca i32, align 4
  %1015 = alloca i32, align 4
  %1016 = alloca i32, align 4
  %1017 = alloca i64, align 8
  store %struct.Template_MPM* %0, %struct.Template_MPM** %1005, align 8
  %1018 = load %struct.Template_MPM*, %struct.Template_MPM** %1005, align 8
  store i64 0, i64* %1006, align 8
  store i32 -1746238597, i32* %29
  br label %1088

; <label>:1019:                                   ; preds = %30
  store i32 506549413, i32* %29
  br label %1088

; <label>:1020:                                   ; preds = %30
  %1021 = load volatile i32*, i32** %12
  %1022 = load i32, i32* %1021, align 4
  %1023 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1024 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %1023, i32 0, i32 9
  %1025 = load i32, i32* %1024, align 8
  %1026 = icmp slt i32 %1022, %1025
  store i32 1032778552, i32* %29
  br label %1088

; <label>:1027:                                   ; preds = %30
  %1028 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1029 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %1028, i32 0, i32 6
  %1030 = load volatile i32*, i32** %12
  %1031 = load i32, i32* %1030, align 4
  %1032 = sext i32 %1031 to i64
  %1033 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %1029, i64 %1032) #3
  call void @_ZNSt7__cxx114listIiSaIiEE5clearEv(%"class.std::__cxx11::list"* %1033) #3
  %1034 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1035 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %1034, i32 0, i32 5
  %1036 = load volatile i32*, i32** %12
  %1037 = load i32, i32* %1036, align 4
  %1038 = sext i32 %1037 to i64
  %1039 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %1035, i64 %1038) #3
  call void @_ZNSt7__cxx114listIiSaIiEE5clearEv(%"class.std::__cxx11::list"* %1039) #3
  store i32 1787447227, i32* %29
  br label %1088

; <label>:1040:                                   ; preds = %30
  %1041 = load volatile i32*, i32** %11
  store i32 0, i32* %1041, align 4
  store i32 -1095997309, i32* %29
  br label %1088

; <label>:1042:                                   ; preds = %30
  store i32 -1389780881, i32* %29
  br label %1088

; <label>:1043:                                   ; preds = %30
  %1044 = load volatile i32*, i32** %11
  %1045 = load i32, i32* %1044, align 4
  %1046 = sub i32 0, %1045
  %1047 = add i32 0, %1046
  %1048 = sub i32 0, %1045
  %1049 = add i32 %1047, -230202794
  %1050 = add i32 %1049, 1
  %1051 = sub i32 %1050, -230202794
  %1052 = add i32 %1047, 1
  %1053 = sub i32 0, 1
  %1054 = sub i32 %1045, %1053
  %1055 = add nsw i32 %1045, 1
  %1056 = load volatile i32*, i32** %11
  store i32 %1054, i32* %1056, align 4
  store i32 -103973675, i32* %29
  br label %1088

; <label>:1057:                                   ; preds = %30
  %1058 = load volatile i32*, i32** %8
  store i32 -1, i32* %1058, align 4
  %1059 = load volatile i32*, i32** %7
  store i32 0, i32* %1059, align 4
  store i32 936987433, i32* %29
  br label %1088

; <label>:1060:                                   ; preds = %30
  %1061 = load volatile i32*, i32** %7
  %1062 = load i32, i32* %1061, align 4
  %1063 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1064 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %1063, i32 %1062)
  %1065 = load volatile i32*, i32** %8
  %1066 = load i32, i32* %1065, align 4
  %1067 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1068 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %1067, i32 %1066)
  %1069 = icmp slt i64 %1064, %1068
  store i32 -1663777491, i32* %29
  br label %1088

; <label>:1070:                                   ; preds = %30
  store i32 1244866997, i32* %29
  br label %1088

; <label>:1071:                                   ; preds = %30
  %1072 = load volatile i32*, i32** %8
  %1073 = load i32, i32* %1072, align 4
  %1074 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1075 = call i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM* %1074, i32 %1073)
  %1076 = icmp eq i64 %1075, 0
  store i32 682114330, i32* %29
  br label %1088

; <label>:1077:                                   ; preds = %30
  %1078 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  %1079 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %1078, i32 0, i32 2
  %1080 = load volatile i32*, i32** %8
  %1081 = load i32, i32* %1080, align 4
  %1082 = sext i32 %1081 to i64
  %1083 = call dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"* %1079, i64 %1082) #3
  store i8 0, i8* %1083, align 1
  %1084 = load volatile i32*, i32** %8
  %1085 = load i32, i32* %1084, align 4
  %1086 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %5
  call void @_ZN12Template_MPM11remove_nodeEi(%struct.Template_MPM* %1086, i32 %1085)
  store i32 -960527842, i32* %29
  br label %1088

; <label>:1087:                                   ; preds = %30
  store i32 1334819829, i32* %29
  br label %1088

; <label>:1088:                                   ; preds = %1087, %1077, %1071, %1070, %1060, %1057, %1043, %1042, %1040, %1027, %1020, %1019, %1004, %1000, %973, %946, %907, %906, %869, %853, %850, %818, %802, %801, %785, %770, %765, %757, %756, %752, %749, %713, %685, %680, %679, %669, %661, %660, %642, %626, %608, %607, %584, %568, %567, %490, %482, %464, %425, %424, %408, %392, %369, %361, %360, %343, %315, %307, %306, %278, %250, %247, %213, %197, %195, %194, %166, %138, %85, %84, %41, %33, %32
  br label %30
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = add i32 %2, 1794492687
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1794492687
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %93

; <label>:28:                                     ; preds = %1, %93
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  %31 = bitcast %"class.std::vector.0"* %30 to %"struct.std::_Vector_base.1"*
  %32 = load i32, i32* @x.19
  %33 = load i32, i32* @y.20
  %34 = sub i32 %32, 1005314175
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1005314175
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %93

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIcSaIcEEC2Ev(%"struct.std::_Vector_base.1"* %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.19
  %50 = load i32, i32* @y.20
  %51 = sub i32 %49, -1954562098
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1954562098
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %97

; <label>:63:                                     ; preds = %48, %97
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #11
  %66 = load i32, i32* @x.19
  %67 = load i32, i32* @y.20
  %68 = add i32 %66, 1142211821
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 1142211821
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %97

; <label>:92:                                     ; preds = %63
  unreachable

; <label>:93:                                     ; preds = %28, %1
  %94 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %94, align 8
  %95 = load %"class.std::vector.0"*, %"class.std::vector.0"** %94, align 8
  %96 = bitcast %"class.std::vector.0"* %95 to %"struct.std::_Vector_base.1"*
  br label %28

; <label>:97:                                     ; preds = %63, %48
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  call void @__clang_call_terminate(i8* %99) #11
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  invoke void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.6"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.21
  %7 = load i32, i32* @y.22
  %8 = add i32 %6, 1896136877
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1896136877
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %50

; <label>:20:                                     ; preds = %5, %50
  %21 = load i32, i32* @x.21
  %22 = load i32, i32* @y.22
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %20
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #11
  unreachable

; <label>:50:                                     ; preds = %20, %5
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev(%"class.std::vector.10"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.23
  %3 = load i32, i32* @y.24
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %61

; <label>:27:                                     ; preds = %1, %61
  %28 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %28, align 8
  %29 = load %"class.std::vector.10"*, %"class.std::vector.10"** %28, align 8
  %30 = bitcast %"class.std::vector.10"* %29 to %"struct.std::_Vector_base.11"*
  %31 = load i32, i32* @x.23
  %32 = load i32, i32* @y.24
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  br i1 %54, label %56, label %61

; <label>:56:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev(%"struct.std::_Vector_base.11"* %30)
          to label %57 unwind label %58

; <label>:57:                                     ; preds = %56
  ret void

; <label>:58:                                     ; preds = %56
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %27, %1
  %62 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %62, align 8
  %63 = load %"class.std::vector.10"*, %"class.std::vector.10"** %62, align 8
  %64 = bitcast %"class.std::vector.10"* %63 to %"struct.std::_Vector_base.11"*
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.25
  %3 = load i32, i32* @y.26
  %4 = add i32 %2, -793662517
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -793662517
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %105

; <label>:28:                                     ; preds = %1, %105
  %29 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %29, align 8
  %30 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  %31 = bitcast %"class.std::vector.18"* %30 to %"struct.std::_Vector_base.19"*
  %32 = load i32, i32* @x.25
  %33 = load i32, i32* @y.26
  %34 = add i32 %32, 290153644
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 290153644
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %105

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.19"* %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.25
  %50 = load i32, i32* @y.26
  %51 = sub i32 %49, -1182573480
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1182573480
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %109

; <label>:75:                                     ; preds = %48, %109
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #11
  %78 = load i32, i32* @x.25
  %79 = load i32, i32* @y.26
  %80 = add i32 %78, 126479571
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 126479571
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %109

; <label>:104:                                    ; preds = %75
  unreachable

; <label>:105:                                    ; preds = %28, %1
  %106 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %106, align 8
  %107 = load %"class.std::vector.18"*, %"class.std::vector.18"** %106, align 8
  %108 = bitcast %"class.std::vector.18"* %107 to %"struct.std::_Vector_base.19"*
  br label %28

; <label>:109:                                    ; preds = %75, %48
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  call void @__clang_call_terminate(i8* %111) #11
  br label %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.23"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.27
  %3 = load i32, i32* @y.28
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 false, true
  %14 = and i1 %11, false
  %15 = and i1 %9, %13
  %16 = and i1 %12, false
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 false, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %62

; <label>:27:                                     ; preds = %1, %62
  %28 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %28, align 8
  %29 = load %"class.std::vector.23"*, %"class.std::vector.23"** %28, align 8
  %30 = bitcast %"class.std::vector.23"* %29 to %"struct.std::_Vector_base.24"*
  %31 = load i32, i32* @x.27
  %32 = load i32, i32* @y.28
  %33 = sub i32 %31, 960452911
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 960452911
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %62

; <label>:57:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.24"* %30)
          to label %58 unwind label %59

; <label>:58:                                     ; preds = %57
  ret void

; <label>:59:                                     ; preds = %57
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #11
  unreachable

; <label>:62:                                     ; preds = %27, %1
  %63 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %63, align 8
  %64 = load %"class.std::vector.23"*, %"class.std::vector.23"** %63, align 8
  %65 = bitcast %"class.std::vector.23"* %64 to %"struct.std::_Vector_base.24"*
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %4)
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIN12Template_MPM8FlowEdgeEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN12Template_MPM8FlowEdgeEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIcEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3, i32 0, i32 0
  store i8* null, i8** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3, i32 0, i32 1
  store i8* null, i8** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3, i32 0, i32 2
  store i8* null, i8** %7, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC2Ev(%"class.std::allocator.2"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.43
  %5 = load i32, i32* @y.44
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 404380266, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %48
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 404380266, label %17
    i32 601498261, label %25
    i32 1743999468, label %43
    i32 1355111749, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %48

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 601498261, i32 1355111749
  store i32 %24, i32* %13
  br label %48

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %26, align 8
  %27 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %27, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %28)
  %29 = load i32, i32* @x.43
  %30 = load i32, i32* @y.44
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1743999468, i32 1355111749
  store i32 %42, i32* %13
  br label %48

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %45, align 8
  %46 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %46, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47)
  store i32 601498261, i32* %13
  br label %48

; <label>:48:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIxEC2Ev(%"class.std::allocator.7"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 0
  store i64* null, i64** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 1
  store i64* null, i64** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3, i32 0, i32 2
  store i64* null, i64** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.49
  %5 = load i32, i32* @y.50
  %6 = sub i32 %4, 2143711552
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2143711552
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1029176116, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1029176116, label %18
    i32 475347263, label %38
    i32 -1096802800, label %56
    i32 -1177112694, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 475347263, i32 -1177112694
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %41 = load i32, i32* @x.49
  %42 = load i32, i32* @y.50
  %43 = add i32 %41, 2101042296
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 2101042296
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1096802800, i32 -1177112694
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %58, align 8
  store i32 475347263, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EEC2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.51
  %5 = load i32, i32* @y.52
  %6 = add i32 %4, 1717307364
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1717307364
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1787277026, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1787277026, label %18
    i32 -665349436, label %26
    i32 884123482, label %45
    i32 1889193385, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -665349436, i32 1889193385
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %27, align 8
  %28 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.51
  %31 = load i32, i32* @y.52
  %32 = add i32 %30, -1092800367
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1092800367
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 884123482, i32 1889193385
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %47, align 8
  %48 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %49)
  store i32 -665349436, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.12"*
  call void @_ZNSaINSt7__cxx114listIiSaIiEEEEC2Ev(%"class.std::allocator.12"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::__cxx11::list"* null, %"class.std::__cxx11::list"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::__cxx11::list"* null, %"class.std::__cxx11::list"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::__cxx11::list"* null, %"class.std::__cxx11::list"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx114listIiSaIiEEEEC2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEEC2Ev(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEEC2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.57
  %5 = load i32, i32* @y.58
  %6 = sub i32 %4, 690898940
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 690898940
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -928905621, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -928905621, label %18
    i32 1690881866, label %26
    i32 -1798204628, label %44
    i32 -345169367, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1690881866, i32 -345169367
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %27, align 8
  %29 = load i32, i32* @x.57
  %30 = load i32, i32* @y.58
  %31 = add i32 %29, -1165420347
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1165420347
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1798204628, i32 -345169367
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %46, align 8
  store i32 1690881866, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.20"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.23"* null, %"class.std::vector.23"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.23"* null, %"class.std::vector.23"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.23"* null, %"class.std::vector.23"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.24"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.25"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.25"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.25"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.71
  %5 = load i32, i32* @y.72
  %6 = sub i32 %4, -143066554
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -143066554
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -353461363, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -353461363, label %18
    i32 -1933384834, label %26
    i32 1132952138, label %45
    i32 -565234495, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1933384834, i32 -565234495
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %27, align 8
  %28 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %27, align 8
  %29 = bitcast %"class.std::allocator.25"* %28 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %29) #3
  %30 = load i32, i32* @x.71
  %31 = load i32, i32* @y.72
  %32 = sub i32 %30, 1895835710
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1895835710
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1132952138, i32 -565234495
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %47, align 8
  %48 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %47, align 8
  %49 = bitcast %"class.std::allocator.25"* %48 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.26"* %49) #3
  store i32 -1933384834, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.23"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %6 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %15 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.25"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.24"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.24"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.75
  %25 = load i32, i32* @y.76
  %26 = sub i32 %24, 1454688382
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1454688382
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %67

; <label>:50:                                     ; preds = %23, %67
  %51 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %51) #11
  %52 = load i32, i32* @x.75
  %53 = load i32, i32* @y.76
  %54 = sub i32 %52, 515705674
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 515705674
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %67

; <label>:66:                                     ; preds = %50
  unreachable

; <label>:67:                                     ; preds = %50, %23
  %68 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %68) #11
  br label %50
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.5"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i64*, i64** %8, align 8
  %10 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %9, i64* %13, %"class.std::allocator.7"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.6"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.77
  %20 = load i32, i32* @y.78
  %21 = add i32 %19, -599883831
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -599883831
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %79

; <label>:45:                                     ; preds = %18, %79
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %3, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %4, align 4
  %49 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.6"* %49) #3
  %50 = load i32, i32* @x.77
  %51 = load i32, i32* @y.78
  %52 = add i32 %50, 980106709
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 980106709
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %79

; <label>:76:                                     ; preds = %45
  br label %77

; <label>:77:                                     ; preds = %76
  %78 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %78) #11
  unreachable

; <label>:79:                                     ; preds = %45, %18
  %80 = landingpad { i8*, i32 }
          catch i8* null
  %81 = extractvalue { i8*, i32 } %80, 0
  store i8* %81, i8** %3, align 8
  %82 = extractvalue { i8*, i32 } %80, 1
  store i32 %82, i32* %4, align 4
  %83 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.6"* %83) #3
  br label %45
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EED2Ev(%"class.std::vector.18"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.18"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %10 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.23"*, %"class.std::vector.23"** %12, align 8
  %14 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %15 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"* %9, %"class.std::vector.23"* %13, %"class.std::allocator.20"* dereferenceable(1) %15)
          to label %16 unwind label %48

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.79
  %18 = load i32, i32* @y.80
  %19 = sub i32 %17, 1222304697
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 1222304697
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %55

; <label>:31:                                     ; preds = %16, %55
  %32 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %32) #3
  %33 = load i32, i32* @x.79
  %34 = load i32, i32* @y.80
  %35 = add i32 %33, -347929391
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -347929391
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %55

; <label>:47:                                     ; preds = %31
  ret void

; <label>:48:                                     ; preds = %1
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %3, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %4, align 4
  %52 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %52) #3
  br label %53

; <label>:53:                                     ; preds = %48
  %54 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %54) #11
  unreachable

; <label>:55:                                     ; preds = %31, %16
  %56 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %56) #3
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"class.std::vector.10"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.10"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %10 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %12, align 8
  %14 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %15 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %14) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E(%"class.std::__cxx11::list"* %9, %"class.std::__cxx11::list"* %13, %"class.std::allocator.12"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"struct.std::_Vector_base.11"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.81
  %20 = load i32, i32* @y.82
  %21 = add i32 %19, 25547104
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 25547104
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %54

; <label>:33:                                     ; preds = %18, %54
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"struct.std::_Vector_base.11"* %37) #3
  %38 = load i32, i32* @x.81
  %39 = load i32, i32* @y.82
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %54

; <label>:51:                                     ; preds = %33
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %53) #11
  unreachable

; <label>:54:                                     ; preds = %33, %18
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  %58 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"struct.std::_Vector_base.11"* %58) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8* %9, i8* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.83
  %18 = load i32, i32* @y.84
  %19 = add i32 %17, 373398984
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 373398984
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %121

; <label>:43:                                     ; preds = %16, %121
  %44 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %44) #3
  %45 = load i32, i32* @x.83
  %46 = load i32, i32* @y.84
  %47 = sub i32 %45, 1263575363
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1263575363
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %121

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i32, i32* @x.83
  %67 = load i32, i32* @y.84
  %68 = sub i32 %66, 1220531445
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1220531445
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  br i1 %90, label %92, label %123

; <label>:92:                                     ; preds = %65, %123
  %93 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %93) #11
  %94 = load i32, i32* @x.83
  %95 = load i32, i32* @y.84
  %96 = sub i32 %94, 727843396
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 727843396
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %123

; <label>:120:                                    ; preds = %92
  unreachable

; <label>:121:                                    ; preds = %43, %16
  %122 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %122) #3
  br label %43

; <label>:123:                                    ; preds = %92, %65
  %124 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %124) #11
  br label %92
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.85
  %3 = load i32, i32* @y.86
  %4 = add i32 %2, 2007151053
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 2007151053
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %132

; <label>:28:                                     ; preds = %1, %132
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %35, align 8
  %37 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %39, align 8
  %41 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %42 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %41) #3
  %43 = load i32, i32* @x.85
  %44 = load i32, i32* @y.86
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %132

; <label>:68:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E(%"struct.Template_MPM::FlowEdge"* %36, %"struct.Template_MPM::FlowEdge"* %40, %"class.std::allocator"* dereferenceable(1) %42)
          to label %69 unwind label %71

; <label>:69:                                     ; preds = %68
  %70 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"struct.std::_Vector_base"* %70) #3
  ret void

; <label>:71:                                     ; preds = %68
  %72 = load i32, i32* @x.85
  %73 = load i32, i32* @y.86
  %74 = sub i32 %72, 917540547
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 917540547
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %147

; <label>:98:                                     ; preds = %71, %147
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %30, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %31, align 4
  %102 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"struct.std::_Vector_base"* %102) #3
  %103 = load i32, i32* @x.85
  %104 = load i32, i32* @y.86
  %105 = add i32 %103, 1488184343
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 1488184343
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  br i1 %127, label %129, label %147

; <label>:129:                                    ; preds = %98
  br label %130

; <label>:130:                                    ; preds = %129
  %131 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %131) #11
  unreachable

; <label>:132:                                    ; preds = %28, %1
  %133 = alloca %"class.std::vector"*, align 8
  %134 = alloca i8*
  %135 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %133, align 8
  %136 = load %"class.std::vector"*, %"class.std::vector"** %133, align 8
  %137 = bitcast %"class.std::vector"* %136 to %"struct.std::_Vector_base"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %137, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %138, i32 0, i32 0
  %140 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %139, align 8
  %141 = bitcast %"class.std::vector"* %136 to %"struct.std::_Vector_base"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %142, i32 0, i32 1
  %144 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %143, align 8
  %145 = bitcast %"class.std::vector"* %136 to %"struct.std::_Vector_base"*
  %146 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %145) #3
  br label %28

; <label>:147:                                    ; preds = %98, %71
  %148 = landingpad { i8*, i32 }
          catch i8* null
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %30, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %31, align 4
  %151 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"struct.std::_Vector_base"* %151) #3
  br label %98
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.24"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 2653822463742463586
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 2653822463742463586
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.93
  %6 = load i32, i32* @y.94
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 80498369, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 80498369, label %18
    i32 -1357571113, label %26
    i32 -828242370, label %45
    i32 1398884984, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1357571113, i32 1398884984
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca i32*, align 8
  %28 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load i32*, i32** %27, align 8
  %30 = load i32*, i32** %28, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %29, i32* %30)
  %31 = load i32, i32* @x.93
  %32 = load i32, i32* @y.94
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -828242370, i32 1398884984
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca i32*, align 8
  %48 = alloca i32*, align 8
  store i32* %0, i32** %47, align 8
  store i32* %1, i32** %48, align 8
  %49 = load i32*, i32** %47, align 8
  %50 = load i32*, i32** %48, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %49, i32* %50)
  store i32 -1357571113, i32* %14
  br label %51

; <label>:51:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.24"*
  %6 = alloca %"struct.std::_Vector_base.24"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %6, align 8
  store %"struct.std::_Vector_base.24"* %9, %"struct.std::_Vector_base.24"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -618737342, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -618737342, label %15
    i32 1085185790, label %19
    i32 280937044, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1085185790, i32 280937044
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.25"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.25"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 280937044, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.25"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.25"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.25"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.26"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.26"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.25"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.105
  %5 = load i32, i32* @y.106
  %6 = sub i32 %4, 1377675761
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1377675761
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -25089522, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -25089522, label %18
    i32 1859080652, label %38
    i32 -352960663, label %69
    i32 -1755134739, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1859080652, i32 -1755134739
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %39, align 8
  %40 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %39, align 8
  %41 = bitcast %"class.std::allocator.25"* %40 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.26"* %41) #3
  %42 = load i32, i32* @x.105
  %43 = load i32, i32* @y.106
  %44 = sub i32 %42, -1640637382
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1640637382
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -352960663, i32 -1755134739
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %71, align 8
  %72 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %71, align 8
  %73 = bitcast %"class.std::allocator.25"* %72 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.26"* %73) #3
  store i32 1859080652, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.26"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64*, i64** %5, align 8
  call void @_ZSt8_DestroyIPxEvT_S1_(i64* %7, i64* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i64*, i64** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i64*, i64** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = ptrtoint i64* %11 to i64
  %16 = ptrtoint i64* %14 to i64
  %17 = sub i64 %15, -1156223807013917189
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -1156223807013917189
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.6"* %5, i64* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.113
  %26 = load i32, i32* @y.114
  %27 = add i32 %25, -22753525
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -22753525
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %60

; <label>:39:                                     ; preds = %24, %60
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43) #3
  %44 = load i32, i32* @x.113
  %45 = load i32, i32* @y.114
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %60

; <label>:57:                                     ; preds = %39
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %59) #11
  unreachable

; <label>:60:                                     ; preds = %39, %24
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %64) #3
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPxEvT_S1_(i64*, i64*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.115
  %6 = load i32, i32* @y.116
  %7 = add i32 %5, -784338860
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -784338860
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1269169062, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1269169062, label %19
    i32 907569019, label %27
    i32 48000483, label %59
    i32 -686192321, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 907569019, i32 -686192321
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load i64*, i64** %28, align 8
  %31 = load i64*, i64** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %30, i64* %31)
  %32 = load i32, i32* @x.115
  %33 = load i32, i32* @y.116
  %34 = add i32 %32, 1333185139
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1333185139
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 48000483, i32 -686192321
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca i64*, align 8
  %62 = alloca i64*, align 8
  store i64* %0, i64** %61, align 8
  store i64* %1, i64** %62, align 8
  %63 = load i64*, i64** %61, align 8
  %64 = load i64*, i64** %62, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64* %63, i64* %64)
  store i32 907569019, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPxEEvT_S3_(i64*, i64*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.117
  %6 = load i32, i32* @y.118
  %7 = add i32 %5, -1709239016
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1709239016
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1482637245, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1482637245, label %19
    i32 -1145667935, label %27
    i32 -514622705, label %56
    i32 -980240244, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1145667935, i32 -980240244
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  %29 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load i32, i32* @x.117
  %31 = load i32, i32* @y.118
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -514622705, i32 -980240244
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca i64*, align 8
  %59 = alloca i64*, align 8
  store i64* %0, i64** %58, align 8
  store i64* %1, i64** %59, align 8
  store i32 -1145667935, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.6"*, i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca i64*
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.119
  %11 = load i32, i32* @y.120
  %12 = add i32 %10, 792936332
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 792936332
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1131879799, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %99
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1131879799, label %24
    i32 1672560176, label %44
    i32 1973993725, label %80
    i32 488305647, label %83
    i32 342374054, label %91
    i32 -514328865, label %92
  ]

; <label>:23:                                     ; preds = %21
  br label %99

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1672560176, i32 -514328865
  store i32 %43, i32* %20
  br label %99

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.6"*, align 8
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %45, align 8
  %48 = load volatile i64**, i64*** %7
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %45, align 8
  store %"struct.std::_Vector_base.6"* %50, %"struct.std::_Vector_base.6"** %5
  %51 = load volatile i64**, i64*** %7
  %52 = load i64*, i64** %51, align 8
  %53 = icmp ne i64* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.119
  %55 = load i32, i32* @y.120
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1973993725, i32 -514328865
  store i32 %79, i32* %20
  br label %99

; <label>:80:                                     ; preds = %21
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 488305647, i32 342374054
  store i32 %82, i32* %20
  br label %99

; <label>:83:                                     ; preds = %21
  %84 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %85 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %85 to %"class.std::allocator.7"*
  %87 = load volatile i64**, i64*** %7
  %88 = load i64*, i64** %87, align 8
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  call void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.7"* dereferenceable(1) %86, i64* %88, i64 %90)
  store i32 342374054, i32* %20
  br label %99

; <label>:91:                                     ; preds = %21
  ret void

; <label>:92:                                     ; preds = %21
  %93 = alloca %"struct.std::_Vector_base.6"*, align 8
  %94 = alloca i64*, align 8
  %95 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %93, align 8
  store i64* %1, i64** %94, align 8
  store i64 %2, i64* %95, align 8
  %96 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %93, align 8
  %97 = load i64*, i64** %94, align 8
  %98 = icmp ne i64* %97, null
  store i32 1672560176, i32* %20
  br label %99

; <label>:99:                                     ; preds = %92, %83, %80, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaIxED2Ev(%"class.std::allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIxEE10deallocateERS0_Pxm(%"class.std::allocator.7"* dereferenceable(1), i64*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.123
  %7 = load i32, i32* @y.124
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -484072552, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -484072552, label %19
    i32 -1040138356, label %27
    i32 1965256452, label %50
    i32 -265707357, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1040138356, i32 -265707357
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.7"*, align 8
  %29 = alloca i64*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %28, align 8
  store i64* %1, i64** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %28, align 8
  %32 = bitcast %"class.std::allocator.7"* %31 to %"class.__gnu_cxx::new_allocator.8"*
  %33 = load i64*, i64** %29, align 8
  %34 = load i64, i64* %30, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.8"* %32, i64* %33, i64 %34)
  %35 = load i32, i32* @x.123
  %36 = load i32, i32* @y.124
  %37 = sub i32 %35, -74678182
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -74678182
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1965256452, i32 -265707357
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::allocator.7"*, align 8
  %53 = alloca i64*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %52, align 8
  store i64* %1, i64** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %52, align 8
  %56 = bitcast %"class.std::allocator.7"* %55 to %"class.__gnu_cxx::new_allocator.8"*
  %57 = load i64*, i64** %53, align 8
  %58 = load i64, i64* %54, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.8"* %56, i64* %57, i64 %58)
  store i32 -1040138356, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxE10deallocateEPxm(%"class.__gnu_cxx::new_allocator.8"*, i64*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.125
  %7 = load i32, i32* @y.126
  %8 = sub i32 %6, -1620831231
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1620831231
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 100019756, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 100019756, label %20
    i32 -756405802, label %40
    i32 -1844104845, label %62
    i32 -1080595566, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -756405802, i32 -1080595566
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %42 = alloca i64*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  store i64* %1, i64** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %41, align 8
  %45 = load i64*, i64** %42, align 8
  %46 = bitcast i64* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.125
  %48 = load i32, i32* @y.126
  %49 = sub i32 %47, 1230431095
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1230431095
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1844104845, i32 -1080595566
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %65 = alloca i64*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %64, align 8
  store i64* %1, i64** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %64, align 8
  %68 = load i64*, i64** %65, align 8
  %69 = bitcast i64* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -756405802, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxED2Ev(%"class.std::allocator.7"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.127
  %5 = load i32, i32* @y.128
  %6 = sub i32 %4, -905981172
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -905981172
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1061844912, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1061844912, label %18
    i32 50191456, label %38
    i32 28434872, label %56
    i32 -1066391830, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 50191456, i32 -1066391830
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %39, align 8
  %40 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %39, align 8
  %41 = bitcast %"class.std::allocator.7"* %40 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.8"* %41) #3
  %42 = load i32, i32* @x.127
  %43 = load i32, i32* @y.128
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 28434872, i32 -1066391830
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %58, align 8
  %59 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %58, align 8
  %60 = bitcast %"class.std::allocator.7"* %59 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.8"* %60) #3
  store i32 50191456, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.129
  %5 = load i32, i32* @y.130
  %6 = add i32 %4, 328434580
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 328434580
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 463735492, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 463735492, label %18
    i32 -1130972406, label %38
    i32 911138231, label %55
    i32 1432873573, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1130972406, i32 1432873573
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %39, align 8
  %41 = load i32, i32* @x.129
  %42 = load i32, i32* @y.130
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 911138231, i32 1432873573
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %57, align 8
  store i32 -1130972406, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.23"* %7, %"class.std::vector.23"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.23"*, %"class.std::vector.23"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.23"*, %"class.std::vector.23"** %13, align 8
  %15 = ptrtoint %"class.std::vector.23"* %11 to i64
  %16 = ptrtoint %"class.std::vector.23"* %14 to i64
  %17 = sub i64 %15, 6970772231084580833
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 6970772231084580833
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %5, %"class.std::vector.23"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.23"*, %"class.std::vector.23"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.137
  %6 = load i32, i32* @y.138
  %7 = add i32 %5, 1917349390
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1917349390
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -629011122, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -629011122, label %19
    i32 -1014558482, label %39
    i32 581849021, label %59
    i32 160799626, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1014558482, i32 160799626
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.23"*, align 8
  %41 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %40, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %41, align 8
  %42 = load %"class.std::vector.23"*, %"class.std::vector.23"** %40, align 8
  %43 = load %"class.std::vector.23"*, %"class.std::vector.23"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.23"* %42, %"class.std::vector.23"* %43)
  %44 = load i32, i32* @x.137
  %45 = load i32, i32* @y.138
  %46 = add i32 %44, 1631764822
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1631764822
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 581849021, i32 160799626
  store i32 %58, i32* %15
  br label %65

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::vector.23"*, align 8
  %62 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %61, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %62, align 8
  %63 = load %"class.std::vector.23"*, %"class.std::vector.23"** %61, align 8
  %64 = load %"class.std::vector.23"*, %"class.std::vector.23"** %62, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.23"* %63, %"class.std::vector.23"* %64)
  store i32 -1014558482, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIiSaIiEEEEvT_S6_(%"class.std::vector.23"*, %"class.std::vector.23"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %5, align 8
  %6 = alloca i32
  store i32 -518870509, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %151
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -518870509, label %10
    i32 1148189989, label %26
    i32 719267818, label %57
    i32 1851376891, label %60
    i32 295689663, label %63
    i32 975040902, label %79
    i32 -248651552, label %109
    i32 1904895698, label %110
    i32 -1840111189, label %126
    i32 1313100121, label %142
    i32 2039843100, label %143
    i32 918514441, label %147
    i32 554493819, label %150
  ]

; <label>:9:                                      ; preds = %7
  br label %151

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.139
  %12 = load i32, i32* @y.140
  %13 = add i32 %11, 1394094072
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1394094072
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1148189989, i32 2039843100
  store i32 %25, i32* %6
  br label %151

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %28 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %29 = icmp ne %"class.std::vector.23"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.139
  %31 = load i32, i32* @y.140
  %32 = sub i32 %30, -467745710
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -467745710
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 719267818, i32 2039843100
  store i32 %56, i32* %6
  br label %151

; <label>:57:                                     ; preds = %7
  %58 = load volatile i1, i1* %3
  %59 = select i1 %58, i32 1851376891, i32 1904895698
  store i32 %59, i32* %6
  br label %151

; <label>:60:                                     ; preds = %7
  %61 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %62 = call %"class.std::vector.23"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.23"* dereferenceable(24) %61) #3
  call void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.23"* %62)
  store i32 295689663, i32* %6
  br label %151

; <label>:63:                                     ; preds = %7
  %64 = load i32, i32* @x.139
  %65 = load i32, i32* @y.140
  %66 = sub i32 %64, 1117612883
  %67 = sub i32 %66, 1
  %68 = add i32 %67, 1117612883
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 975040902, i32 918514441
  store i32 %78, i32* %6
  br label %151

; <label>:79:                                     ; preds = %7
  %80 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %81 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %80, i32 1
  store %"class.std::vector.23"* %81, %"class.std::vector.23"** %4, align 8
  %82 = load i32, i32* @x.139
  %83 = load i32, i32* @y.140
  %84 = add i32 %82, -1767885563
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1767885563
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 -248651552, i32 918514441
  store i32 %108, i32* %6
  br label %151

; <label>:109:                                    ; preds = %7
  store i32 -518870509, i32* %6
  br label %151

; <label>:110:                                    ; preds = %7
  %111 = load i32, i32* @x.139
  %112 = load i32, i32* @y.140
  %113 = add i32 %111, -319829603
  %114 = sub i32 %113, 1
  %115 = sub i32 %114, -319829603
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  %125 = select i1 %123, i32 -1840111189, i32 554493819
  store i32 %125, i32* %6
  br label %151

; <label>:126:                                    ; preds = %7
  %127 = load i32, i32* @x.139
  %128 = load i32, i32* @y.140
  %129 = add i32 %127, -384451317
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, -384451317
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 1313100121, i32 554493819
  store i32 %141, i32* %6
  br label %151

; <label>:142:                                    ; preds = %7
  ret void

; <label>:143:                                    ; preds = %7
  %144 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %145 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %146 = icmp ne %"class.std::vector.23"* %144, %145
  store i32 1148189989, i32* %6
  br label %151

; <label>:147:                                    ; preds = %7
  %148 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %149 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %148, i32 1
  store %"class.std::vector.23"* %149, %"class.std::vector.23"** %4, align 8
  store i32 975040902, i32* %6
  br label %151

; <label>:150:                                    ; preds = %7
  store i32 -1840111189, i32* %6
  br label %151

; <label>:151:                                    ; preds = %150, %147, %143, %126, %110, %109, %79, %63, %60, %57, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIiSaIiEEEvPT_(%"class.std::vector.23"*) #4 comdat {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.23"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %4 = bitcast %"class.std::vector.23"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.23"*
  ret %"class.std::vector.23"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"*, %"class.std::vector.23"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.23"*
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %9, %"struct.std::_Vector_base.19"** %5
  %10 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  store %"class.std::vector.23"* %10, %"class.std::vector.23"** %4
  %11 = alloca i32
  store i32 355976154, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %69
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 355976154, label %15
    i32 1745601253, label %19
    i32 -1364666318, label %25
    i32 1169678607, label %40
    i32 272955352, label %67
    i32 437386477, label %68
  ]

; <label>:14:                                     ; preds = %12
  br label %69

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %17 = icmp ne %"class.std::vector.23"* %16, null
  %18 = select i1 %17, i32 1745601253, i32 -1364666318
  store i32 %18, i32* %11
  br label %69

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %21 to %"class.std::allocator.20"*
  %23 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.20"* dereferenceable(1) %22, %"class.std::vector.23"* %23, i64 %24)
  store i32 -1364666318, i32* %11
  br label %69

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.145
  %27 = load i32, i32* @y.146
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1169678607, i32 437386477
  store i32 %39, i32* %11
  br label %69

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.145
  %42 = load i32, i32* @y.146
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 272955352, i32 437386477
  store i32 %66, i32* %11
  br label %69

; <label>:67:                                     ; preds = %12
  ret void

; <label>:68:                                     ; preds = %12
  store i32 1169678607, i32* %11
  br label %69

; <label>:69:                                     ; preds = %68, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.20"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE10deallocateERS3_PS2_m(%"class.std::allocator.20"* dereferenceable(1), %"class.std::vector.23"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"class.std::vector.23"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.21"*, %"class.std::vector.23"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %9 = bitcast %"class.std::vector.23"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIiSaIiEEED2Ev(%"class.std::allocator.20"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.153
  %5 = load i32, i32* @y.154
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1006079322, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1006079322, label %17
    i32 1891768211, label %37
    i32 -333799592, label %68
    i32 365129123, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 1891768211, i32 365129123
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %38, align 8
  %39 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %38, align 8
  %40 = bitcast %"class.std::allocator.20"* %39 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %40) #3
  %41 = load i32, i32* @x.153
  %42 = load i32, i32* @y.154
  %43 = add i32 %41, -770585469
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -770585469
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -333799592, i32 365129123
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %70, align 8
  %71 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %70, align 8
  %72 = bitcast %"class.std::allocator.20"* %71 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %72) #3
  store i32 1891768211, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.155
  %5 = load i32, i32* @y.156
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1785956727, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1785956727, label %17
    i32 -1423030094, label %37
    i32 -1155271249, label %67
    i32 471512282, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1423030094, i32 471512282
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %38, align 8
  %40 = load i32, i32* @x.155
  %41 = load i32, i32* @y.156
  %42 = sub i32 %40, 1553034902
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 1553034902
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1155271249, i32 471512282
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %69, align 8
  store i32 -1423030094, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  %5 = alloca %"class.std::__cxx11::list"*, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %4, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %8 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %5, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEEEvT_S5_(%"class.std::__cxx11::list"* %7, %"class.std::__cxx11::list"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EED2Ev(%"struct.std::_Vector_base.11"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %5 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %13, align 8
  %15 = ptrtoint %"class.std::__cxx11::list"* %11 to i64
  %16 = ptrtoint %"class.std::__cxx11::list"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.11"* %5, %"class.std::__cxx11::list"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEEEvT_S5_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.163
  %6 = load i32, i32* @y.164
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -105087972, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -105087972, label %18
    i32 1103120562, label %38
    i32 1098506960, label %69
    i32 2020969435, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1103120562, i32 2020969435
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::__cxx11::list"*, align 8
  %40 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %39, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %40, align 8
  %41 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %39, align 8
  %42 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %40, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx114listIiSaIiEEEEEvT_S7_(%"class.std::__cxx11::list"* %41, %"class.std::__cxx11::list"* %42)
  %43 = load i32, i32* @x.163
  %44 = load i32, i32* @y.164
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1098506960, i32 2020969435
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::__cxx11::list"*, align 8
  %72 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %71, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %72, align 8
  %73 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %71, align 8
  %74 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %72, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx114listIiSaIiEEEEEvT_S7_(%"class.std::__cxx11::list"* %73, %"class.std::__cxx11::list"* %74)
  store i32 1103120562, i32* %14
  br label %75

; <label>:75:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx114listIiSaIiEEEEEvT_S7_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %4, align 8
  %5 = alloca i32
  store i32 -635356120, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %68
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -635356120, label %9
    i32 1827248591, label %14
    i32 568182935, label %30
    i32 1798231606, label %60
    i32 434489902, label %61
    i32 1954288468, label %64
    i32 1098052082, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %68

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %11 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %12 = icmp ne %"class.std::__cxx11::list"* %10, %11
  %13 = select i1 %12, i32 1827248591, i32 1954288468
  store i32 %13, i32* %5
  br label %68

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.165
  %16 = load i32, i32* @y.166
  %17 = add i32 %15, -892323304
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -892323304
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 568182935, i32 1098052082
  store i32 %29, i32* %5
  br label %68

; <label>:30:                                     ; preds = %6
  %31 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %32 = call %"class.std::__cxx11::list"* @_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_(%"class.std::__cxx11::list"* dereferenceable(24) %31) #3
  call void @_ZSt8_DestroyINSt7__cxx114listIiSaIiEEEEvPT_(%"class.std::__cxx11::list"* %32)
  %33 = load i32, i32* @x.165
  %34 = load i32, i32* @y.166
  %35 = sub i32 %33, -1517096266
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1517096266
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1798231606, i32 1098052082
  store i32 %59, i32* %5
  br label %68

; <label>:60:                                     ; preds = %6
  store i32 434489902, i32* %5
  br label %68

; <label>:61:                                     ; preds = %6
  %62 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %63 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %62, i32 1
  store %"class.std::__cxx11::list"* %63, %"class.std::__cxx11::list"** %3, align 8
  store i32 -635356120, i32* %5
  br label %68

; <label>:64:                                     ; preds = %6
  ret void

; <label>:65:                                     ; preds = %6
  %66 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %67 = call %"class.std::__cxx11::list"* @_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_(%"class.std::__cxx11::list"* dereferenceable(24) %66) #3
  call void @_ZSt8_DestroyINSt7__cxx114listIiSaIiEEEEvPT_(%"class.std::__cxx11::list"* %67)
  store i32 568182935, i32* %5
  br label %68

; <label>:68:                                     ; preds = %65, %61, %60, %30, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx114listIiSaIiEEEEvPT_(%"class.std::__cxx11::list"*) #4 comdat {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  call void @_ZNSt7__cxx114listIiSaIiEED2Ev(%"class.std::__cxx11::list"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_(%"class.std::__cxx11::list"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::list"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::list"*
  ret %"class.std::__cxx11::list"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEED2Ev(%"class.std::__cxx11::list"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::list"* %3 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEED2Ev(%"class.std::__cxx11::_List_base"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEED2Ev(%"class.std::__cxx11::_List_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE8_M_clearEv(%"class.std::__cxx11::_List_base"* %3) #3
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE8_M_clearEv(%"class.std::__cxx11::_List_base"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %3 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  %4 = alloca %"struct.std::_List_node.28"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_List_node"* %7 to %"struct.std::__detail::_List_node_base"*
  %9 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  store %"struct.std::__detail::_List_node_base"* %10, %"struct.std::__detail::_List_node_base"** %3, align 8
  br label %11

; <label>:11:                                     ; preds = %27, %1
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
  %13 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %13, i32 0, i32 0
  %15 = bitcast %"struct.std::_List_node"* %14 to %"struct.std::__detail::_List_node_base"*
  %16 = icmp ne %"struct.std::__detail::_List_node_base"* %12, %15
  br i1 %16, label %17, label %29

; <label>:17:                                     ; preds = %11
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %3, align 8
  %19 = bitcast %"struct.std::__detail::_List_node_base"* %18 to %"struct.std::_List_node.28"*
  store %"struct.std::_List_node.28"* %19, %"struct.std::_List_node.28"** %4, align 8
  %20 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4, align 8
  %21 = bitcast %"struct.std::_List_node.28"* %20 to %"struct.std::__detail::_List_node_base"*
  %22 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %21, i32 0, i32 0
  %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
  store %"struct.std::__detail::_List_node_base"* %23, %"struct.std::__detail::_List_node_base"** %3, align 8
  %24 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %5) #3
  %25 = bitcast %"class.std::allocator.15"* %24 to %"class.__gnu_cxx::new_allocator.16"*
  %26 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4, align 8
  invoke void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %25, %"struct.std::_List_node.28"* %26)
          to label %27 unwind label %30

; <label>:27:                                     ; preds = %17
  %28 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE(%"class.std::__cxx11::_List_base"* %5, %"struct.std::_List_node.28"* %28) #3
  br label %11

; <label>:29:                                     ; preds = %11
  ret void

; <label>:30:                                     ; preds = %17
  %31 = landingpad { i8*, i32 }
          catch i8* null
  %32 = extractvalue { i8*, i32 } %31, 0
  call void @__clang_call_terminate(i8* %32) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.177
  %5 = load i32, i32* @y.178
  %6 = sub i32 %4, 1857189092
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1857189092
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1217733969, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1217733969, label %18
    i32 286575994, label %38
    i32 -1402444369, label %56
    i32 -353646049, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 286575994, i32 -353646049
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, align 8
  store %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %39, align 8
  %40 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %39, align 8
  %41 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %40 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"* %41) #3
  %42 = load i32, i32* @x.177
  %43 = load i32, i32* @y.178
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1402444369, i32 -353646049
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, align 8
  store %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %58, align 8
  %59 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %58, align 8
  %60 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %59 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"* %60) #3
  store i32 286575994, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::_List_node.28"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca %"struct.std::_List_node.28"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  %6 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE(%"class.std::__cxx11::_List_base"*, %"struct.std::_List_node.28"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %4 = alloca %"struct.std::_List_node.28"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %4, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %6 to %"class.std::allocator.15"*
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4, align 8
  invoke void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"struct.std::_List_node.28"* %9, i64 1)
          to label %10 unwind label %11

; <label>:10:                                     ; preds = %2
  ret void

; <label>:11:                                     ; preds = %2
  %12 = landingpad { i8*, i32 }
          catch i8* null
  %13 = extractvalue { i8*, i32 } %12, 0
  call void @__clang_call_terminate(i8* %13) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::_List_node.28"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.185
  %7 = load i32, i32* @y.186
  %8 = sub i32 %6, -263169331
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -263169331
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 267649969, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 267649969, label %20
    i32 -1304333448, label %28
    i32 -1687492828, label %50
    i32 1708232198, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1304333448, i32 1708232198
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %30 = alloca %"struct.std::_List_node.28"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %29, align 8
  %33 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %30, align 8
  %34 = bitcast %"struct.std::_List_node.28"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.185
  %36 = load i32, i32* @y.186
  %37 = add i32 %35, 843392272
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 843392272
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1687492828, i32 1708232198
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %53 = alloca %"struct.std::_List_node.28"*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %52, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %52, align 8
  %56 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %53, align 8
  %57 = bitcast %"struct.std::_List_node.28"* %56 to i8*
  call void @_ZdlPv(i8* %57) #3
  store i32 -1304333448, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.11"*, %"class.std::__cxx11::list"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::list"*
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca %"struct.std::_Vector_base.11"*, align 8
  %7 = alloca %"class.std::__cxx11::list"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %6, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %6, align 8
  store %"struct.std::_Vector_base.11"* %9, %"struct.std::_Vector_base.11"** %5
  %10 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  store %"class.std::__cxx11::list"* %10, %"class.std::__cxx11::list"** %4
  %11 = alloca i32
  store i32 1858473871, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %75
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1858473871, label %15
    i32 61481691, label %19
    i32 710071082, label %47
    i32 1784546387, label %67
    i32 -1844954412, label %68
    i32 72292451, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %75

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4
  %17 = icmp ne %"class.std::__cxx11::list"* %16, null
  %18 = select i1 %17, i32 61481691, i32 -1844954412
  store i32 %18, i32* %11
  br label %75

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.191
  %21 = load i32, i32* @y.192
  %22 = sub i32 %20, 2057089964
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 2057089964
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 710071082, i32 72292451
  store i32 %46, i32* %11
  br label %75

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %49 to %"class.std::allocator.12"*
  %51 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE10deallocateERS4_PS3_m(%"class.std::allocator.12"* dereferenceable(1) %50, %"class.std::__cxx11::list"* %51, i64 %52)
  %53 = load i32, i32* @x.191
  %54 = load i32, i32* @y.192
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 1784546387, i32 72292451
  store i32 %66, i32* %11
  br label %75

; <label>:67:                                     ; preds = %12
  store i32 -1844954412, i32* %11
  br label %75

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  %70 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %71 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %70, i32 0, i32 0
  %72 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %71 to %"class.std::allocator.12"*
  %73 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %74 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE10deallocateERS4_PS3_m(%"class.std::allocator.12"* dereferenceable(1) %72, %"class.std::__cxx11::list"* %73, i64 %74)
  store i32 710071082, i32* %11
  br label %75

; <label>:75:                                     ; preds = %69, %67, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %3 to %"class.std::allocator.12"*
  call void @_ZNSaINSt7__cxx114listIiSaIiEEEED2Ev(%"class.std::allocator.12"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE10deallocateERS4_PS3_m(%"class.std::allocator.12"* dereferenceable(1), %"class.std::__cxx11::list"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.195
  %7 = load i32, i32* @y.196
  %8 = sub i32 %6, 1204904392
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1204904392
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1629135095, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1629135095, label %20
    i32 1038918937, label %40
    i32 2130135773, label %62
    i32 -302909760, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1038918937, i32 -302909760
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.12"*, align 8
  %42 = alloca %"class.std::__cxx11::list"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %41, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %41, align 8
  %45 = bitcast %"class.std::allocator.12"* %44 to %"class.__gnu_cxx::new_allocator.13"*
  %46 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.13"* %45, %"class.std::__cxx11::list"* %46, i64 %47)
  %48 = load i32, i32* @x.195
  %49 = load i32, i32* @y.196
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 2130135773, i32 -302909760
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.12"*, align 8
  %65 = alloca %"class.std::__cxx11::list"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %64, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %64, align 8
  %68 = bitcast %"class.std::allocator.12"* %67 to %"class.__gnu_cxx::new_allocator.13"*
  %69 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.13"* %68, %"class.std::__cxx11::list"* %69, i64 %70)
  store i32 1038918937, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator.13"*, %"class.std::__cxx11::list"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.197
  %7 = load i32, i32* @y.198
  %8 = add i32 %6, -437520732
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -437520732
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 618830547, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %81
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 618830547, label %20
    i32 -549516426, label %40
    i32 568637735, label %73
    i32 -283761092, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %81

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -549516426, i32 -283761092
  store i32 %39, i32* %16
  br label %81

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %42 = alloca %"class.std::__cxx11::list"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %41, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %41, align 8
  %45 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %42, align 8
  %46 = bitcast %"class.std::__cxx11::list"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.197
  %48 = load i32, i32* @y.198
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 568637735, i32 -283761092
  store i32 %72, i32* %16
  br label %81

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %76 = alloca %"class.std::__cxx11::list"*, align 8
  %77 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %75, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %76, align 8
  store i64 %2, i64* %77, align 8
  %78 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %75, align 8
  %79 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %76, align 8
  %80 = bitcast %"class.std::__cxx11::list"* %79 to i8*
  call void @_ZdlPv(i8* %80) #3
  store i32 -549516426, i32* %16
  br label %81

; <label>:81:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx114listIiSaIiEEEED2Ev(%"class.std::allocator.12"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.199
  %5 = load i32, i32* @y.200
  %6 = add i32 %4, 395092556
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 395092556
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1065041648, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1065041648, label %18
    i32 -328173436, label %38
    i32 1006001529, label %68
    i32 -502160093, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -328173436, i32 -502160093
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %39, align 8
  %40 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %39, align 8
  %41 = bitcast %"class.std::allocator.12"* %40 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %41) #3
  %42 = load i32, i32* @x.199
  %43 = load i32, i32* @y.200
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1006001529, i32 -502160093
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %70, align 8
  %71 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %70, align 8
  %72 = bitcast %"class.std::allocator.12"* %71 to %"class.__gnu_cxx::new_allocator.13"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEED2Ev(%"class.__gnu_cxx::new_allocator.13"* %72) #3
  store i32 -328173436, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEED2Ev(%"class.__gnu_cxx::new_allocator.13"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.201
  %5 = load i32, i32* @y.202
  %6 = sub i32 %4, 2032660913
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2032660913
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -567689679, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -567689679, label %18
    i32 69322348, label %38
    i32 -1539455113, label %55
    i32 1301478919, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 69322348, i32 1301478919
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %39, align 8
  %41 = load i32, i32* @x.201
  %42 = load i32, i32* @y.202
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1539455113, i32 1301478919
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret void

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %57, align 8
  store i32 69322348, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8*, i8*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store i8* %0, i8** %4, align 8
  store i8* %1, i8** %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %5, align 8
  call void @_ZSt8_DestroyIPcEvT_S1_(i8* %7, i8* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = ptrtoint i8* %11 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = add i64 %15, 3813989699268423942
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 3813989699268423942
  %20 = sub i64 %15, %16
  invoke void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.1"* %5, i8* %8, i64 %19)
          to label %21 unwind label %64

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.207
  %23 = load i32, i32* @y.208
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %71

; <label>:47:                                     ; preds = %21, %71
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %48) #3
  %49 = load i32, i32* @x.207
  %50 = load i32, i32* @y.208
  %51 = add i32 %49, 833012173
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 833012173
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  br i1 %61, label %63, label %71

; <label>:63:                                     ; preds = %47
  ret void

; <label>:64:                                     ; preds = %1
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %3, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %4, align 4
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %68) #3
  br label %69

; <label>:69:                                     ; preds = %64
  %70 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %70) #11
  unreachable

; <label>:71:                                     ; preds = %47, %21
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %72) #3
  br label %47
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPcEvT_S1_(i8*, i8*) #0 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i8*, align 8
  store i8* %0, i8** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load i8*, i8** %3, align 8
  %6 = load i8*, i8** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8* %5, i8* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPcEEvT_S3_(i8*, i8*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = sub i32 %5, 607059326
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 607059326
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 956022569, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 956022569, label %19
    i32 1398861347, label %39
    i32 -1651932363, label %56
    i32 -22837558, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1398861347, i32 -22837558
  store i32 %38, i32* %15
  br label %60

; <label>:39:                                     ; preds = %16
  %40 = alloca i8*, align 8
  %41 = alloca i8*, align 8
  store i8* %0, i8** %40, align 8
  store i8* %1, i8** %41, align 8
  %42 = load i32, i32* @x.211
  %43 = load i32, i32* @y.212
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1651932363, i32 -22837558
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca i8*, align 8
  %59 = alloca i8*, align 8
  store i8* %0, i8** %58, align 8
  store i8* %1, i8** %59, align 8
  store i32 1398861347, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE13_M_deallocateEPcm(%"struct.std::_Vector_base.1"*, i8*, i64) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i8* %1, i8** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load i8*, i8** %7, align 8
  store i8* %10, i8** %4
  %11 = alloca i32
  store i32 322281696, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 322281696, label %15
    i32 -995930687, label %19
    i32 -1242018636, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i8*, i8** %4
  %17 = icmp ne i8* %16, null
  %18 = select i1 %17, i32 -995930687, i32 -1242018636
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load i8*, i8** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.2"* dereferenceable(1) %22, i8* %23, i64 %24)
  store i32 -1242018636, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIcED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm(%"class.std::allocator.2"* dereferenceable(1), i8*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.217
  %7 = load i32, i32* @y.218
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -318460769, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %83
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -318460769, label %19
    i32 1486632749, label %39
    i32 1186963715, label %74
    i32 1237641226, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %83

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1486632749, i32 1237641226
  store i32 %38, i32* %15
  br label %83

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.2"*, align 8
  %41 = alloca i8*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %40, align 8
  store i8* %1, i8** %41, align 8
  store i64 %2, i64* %42, align 8
  %43 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %40, align 8
  %44 = bitcast %"class.std::allocator.2"* %43 to %"class.__gnu_cxx::new_allocator.3"*
  %45 = load i8*, i8** %41, align 8
  %46 = load i64, i64* %42, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.3"* %44, i8* %45, i64 %46)
  %47 = load i32, i32* @x.217
  %48 = load i32, i32* @y.218
  %49 = add i32 %47, -1712564922
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1712564922
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1186963715, i32 1237641226
  store i32 %73, i32* %15
  br label %83

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::allocator.2"*, align 8
  %77 = alloca i8*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %76, align 8
  store i8* %1, i8** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %76, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load i8*, i8** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.3"* %80, i8* %81, i64 %82)
  store i32 1486632749, i32* %15
  br label %83

; <label>:83:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm(%"class.__gnu_cxx::new_allocator.3"*, i8*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i8* %1, i8** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i8*, i8** %5, align 8
  call void @_ZdlPv(i8* %8) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSaIcED2Ev(%"class.std::allocator.2"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %4, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %8 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  call void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeEEvT_S3_(%"struct.Template_MPM::FlowEdge"* %7, %"struct.Template_MPM::FlowEdge"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.225
  %3 = load i32, i32* @y.226
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %138

; <label>:27:                                     ; preds = %1, %138
  %28 = alloca %"struct.std::_Vector_base"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %28, align 8
  %31 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %39, align 8
  %41 = ptrtoint %"struct.Template_MPM::FlowEdge"* %37 to i64
  %42 = ptrtoint %"struct.Template_MPM::FlowEdge"* %40 to i64
  %43 = sub i64 %41, 1845883502736126588
  %44 = sub i64 %43, %42
  %45 = add i64 %44, 1845883502736126588
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 24
  %48 = load i32, i32* @x.225
  %49 = load i32, i32* @y.226
  %50 = sub i32 %48, -1140043187
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1140043187
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %138

; <label>:74:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %31, %"struct.Template_MPM::FlowEdge"* %34, i64 %47)
          to label %75 unwind label %131

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.225
  %77 = load i32, i32* @y.226
  %78 = add i32 %76, -23965508
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, -23965508
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %199

; <label>:102:                                    ; preds = %75, %199
  %103 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %103) #3
  %104 = load i32, i32* @x.225
  %105 = load i32, i32* @y.226
  %106 = sub i32 %104, -474903865
  %107 = sub i32 %106, 1
  %108 = add i32 %107, -474903865
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %199

; <label>:130:                                    ; preds = %102
  ret void

; <label>:131:                                    ; preds = %74
  %132 = landingpad { i8*, i32 }
          catch i8* null
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %29, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %30, align 4
  %135 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %135) #3
  br label %136

; <label>:136:                                    ; preds = %131
  %137 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %137) #11
  unreachable

; <label>:138:                                    ; preds = %27, %1
  %139 = alloca %"struct.std::_Vector_base"*, align 8
  %140 = alloca i8*
  %141 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %139, align 8
  %142 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %139, align 8
  %143 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %142, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %143, i32 0, i32 0
  %145 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %144, align 8
  %146 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %142, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %146, i32 0, i32 2
  %148 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %147, align 8
  %149 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %142, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %149, i32 0, i32 0
  %151 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %150, align 8
  %152 = ptrtoint %"struct.Template_MPM::FlowEdge"* %148 to i64
  %153 = ptrtoint %"struct.Template_MPM::FlowEdge"* %151 to i64
  %154 = sub i64 %152, 6578224861137655338
  %155 = sub i64 %154, %153
  %156 = add i64 %155, 6578224861137655338
  %157 = sub i64 %152, %153
  %158 = mul i64 %156, %153
  %159 = shl i64 %152, %153
  %160 = shl i64 %152, %153
  %161 = shl i64 %152, %153
  %162 = add i64 %152, 985310170068936715
  %163 = sub i64 %162, %153
  %164 = sub i64 %163, 985310170068936715
  %165 = sub i64 %152, %153
  %166 = mul i64 %164, %153
  %167 = shl i64 %152, %153
  %168 = sub i64 %152, -1091281483666544932
  %169 = sub i64 %168, %153
  %170 = add i64 %169, -1091281483666544932
  %171 = sub i64 %152, %153
  %172 = add i64 %170, 1581448348139835933
  %173 = sub i64 %172, 24
  %174 = sub i64 %173, 1581448348139835933
  %175 = sub i64 %170, 24
  %176 = mul i64 %174, 24
  %177 = sub i64 0, %170
  %178 = add i64 0, %177
  %179 = sub i64 0, %170
  %180 = sub i64 0, %178
  %181 = sub i64 0, 24
  %182 = add i64 %180, %181
  %183 = sub i64 0, %182
  %184 = add i64 %178, 24
  %185 = sub i64 0, -4363920184860869326
  %186 = sub i64 %185, %170
  %187 = add i64 %186, -4363920184860869326
  %188 = sub i64 0, %170
  %189 = add i64 %187, -2655015106937963573
  %190 = add i64 %189, 24
  %191 = sub i64 %190, -2655015106937963573
  %192 = add i64 %187, 24
  %193 = add i64 %170, -8451290666239460759
  %194 = sub i64 %193, 24
  %195 = sub i64 %194, -8451290666239460759
  %196 = sub i64 %170, 24
  %197 = mul i64 %195, 24
  %198 = sdiv exact i64 %170, 24
  br label %27

; <label>:199:                                    ; preds = %102, %75
  %200 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %200) #3
  br label %102
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeEEvT_S3_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*) #0 comdat {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %5 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3, align 8
  %6 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN12Template_MPM8FlowEdgeEEEvT_S5_(%"struct.Template_MPM::FlowEdge"* %5, %"struct.Template_MPM::FlowEdge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN12Template_MPM8FlowEdgeEEEvT_S5_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*) #4 comdat align 2 {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"*, %"struct.Template_MPM::FlowEdge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"struct.Template_MPM::FlowEdge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.231
  %11 = load i32, i32* @y.232
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1672003299, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %99
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1672003299, label %23
    i32 -430573289, label %43
    i32 699289404, label %80
    i32 1856636661, label %83
    i32 2116773858, label %91
    i32 477298586, label %92
  ]

; <label>:22:                                     ; preds = %20
  br label %99

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -430573289, i32 477298586
  store i32 %42, i32* %19
  br label %99

; <label>:43:                                     ; preds = %20
  %44 = alloca %"struct.std::_Vector_base"*, align 8
  %45 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"** %45, %"struct.Template_MPM::FlowEdge"*** %7
  %46 = alloca i64, align 8
  store i64* %46, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %44, align 8
  %47 = load volatile %"struct.Template_MPM::FlowEdge"**, %"struct.Template_MPM::FlowEdge"*** %7
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %47, align 8
  %48 = load volatile i64*, i64** %6
  store i64 %2, i64* %48, align 8
  %49 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %44, align 8
  store %"struct.std::_Vector_base"* %49, %"struct.std::_Vector_base"** %5
  %50 = load volatile %"struct.Template_MPM::FlowEdge"**, %"struct.Template_MPM::FlowEdge"*** %7
  %51 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %50, align 8
  %52 = icmp ne %"struct.Template_MPM::FlowEdge"* %51, null
  store i1 %52, i1* %4
  %53 = load i32, i32* @x.231
  %54 = load i32, i32* @y.232
  %55 = sub i32 %53, -1160286817
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1160286817
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 699289404, i32 477298586
  store i32 %79, i32* %19
  br label %99

; <label>:80:                                     ; preds = %20
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 1856636661, i32 2116773858
  store i32 %82, i32* %19
  br label %99

; <label>:83:                                     ; preds = %20
  %84 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %84, i32 0, i32 0
  %86 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %85 to %"class.std::allocator"*
  %87 = load volatile %"struct.Template_MPM::FlowEdge"**, %"struct.Template_MPM::FlowEdge"*** %7
  %88 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %87, align 8
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  call void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1) %86, %"struct.Template_MPM::FlowEdge"* %88, i64 %90)
  store i32 2116773858, i32* %19
  br label %99

; <label>:91:                                     ; preds = %20
  ret void

; <label>:92:                                     ; preds = %20
  %93 = alloca %"struct.std::_Vector_base"*, align 8
  %94 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %95 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %93, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %94, align 8
  store i64 %2, i64* %95, align 8
  %96 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %93, align 8
  %97 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %94, align 8
  %98 = icmp ne %"struct.Template_MPM::FlowEdge"* %97, null
  store i32 -430573289, i32* %19
  br label %99

; <label>:99:                                     ; preds = %92, %83, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.233
  %5 = load i32, i32* @y.234
  %6 = add i32 %4, -961143285
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -961143285
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -118575026, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -118575026, label %18
    i32 1900675922, label %26
    i32 -1261817722, label %57
    i32 439595550, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1900675922, i32 439595550
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %28 to %"class.std::allocator"*
  call void @_ZNSaIN12Template_MPM8FlowEdgeEED2Ev(%"class.std::allocator"* %29) #3
  %30 = load i32, i32* @x.233
  %31 = load i32, i32* @y.234
  %32 = add i32 %30, 2090981291
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 2090981291
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1261817722, i32 439595550
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"*, %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %60 to %"class.std::allocator"*
  call void @_ZNSaIN12Template_MPM8FlowEdgeEED2Ev(%"class.std::allocator"* %61) #3
  store i32 1900675922, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE10deallocateERS2_PS1_m(%"class.std::allocator"* dereferenceable(1), %"struct.Template_MPM::FlowEdge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.235
  %7 = load i32, i32* @y.236
  %8 = add i32 %6, -798732026
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -798732026
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1980307254, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1980307254, label %20
    i32 -561623967, label %28
    i32 -270235300, label %51
    i32 1867193904, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -561623967, i32 1867193904
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator"*, align 8
  %30 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %29, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  %34 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %33, %"struct.Template_MPM::FlowEdge"* %34, i64 %35)
  %36 = load i32, i32* @x.235
  %37 = load i32, i32* @y.236
  %38 = add i32 %36, 104222130
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 104222130
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -270235300, i32 1867193904
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator"*, align 8
  %54 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %53, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator"*, %"class.std::allocator"** %53, align 8
  %57 = bitcast %"class.std::allocator"* %56 to %"class.__gnu_cxx::new_allocator"*
  %58 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"* %57, %"struct.Template_MPM::FlowEdge"* %58, i64 %59)
  store i32 -561623967, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator"*, %"struct.Template_MPM::FlowEdge"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %9 = bitcast %"struct.Template_MPM::FlowEdge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN12Template_MPM8FlowEdgeEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.239
  %5 = load i32, i32* @y.240
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 508146241, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 508146241, label %17
    i32 -537031353, label %25
    i32 499472414, label %44
    i32 -8138007, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -537031353, i32 -8138007
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %26, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEED2Ev(%"class.__gnu_cxx::new_allocator"* %28) #3
  %29 = load i32, i32* @x.239
  %30 = load i32, i32* @y.240
  %31 = sub i32 %29, -1413410964
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -1413410964
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 499472414, i32 -8138007
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::allocator"*, %"class.std::allocator"** %46, align 8
  %48 = bitcast %"class.std::allocator"* %47 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEED2Ev(%"class.__gnu_cxx::new_allocator"* %48) #3
  store i32 -537031353, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12Template_MPM6resizeEi(%struct.Template_MPM*, i32) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.243
  %6 = load i32, i32* @y.244
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1321951839, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %130
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1321951839, label %18
    i32 828834650, label %38
    i32 1289626814, label %91
    i32 1028483858, label %92
  ]

; <label>:17:                                     ; preds = %15
  br label %130

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 828834650, i32 1028483858
  store i32 %37, i32* %14
  br label %130

; <label>:38:                                     ; preds = %15
  %39 = alloca %struct.Template_MPM*, align 8
  %40 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %39, align 8
  store i32 %1, i32* %40, align 4
  %41 = load %struct.Template_MPM*, %struct.Template_MPM** %39, align 8
  %42 = load i32, i32* %40, align 4
  %43 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  store i32 %42, i32* %43, align 8
  %44 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 8
  %45 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %44, i64 %47)
  %48 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 14
  %49 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %50 = load i32, i32* %49, align 8
  %51 = sext i32 %50 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.23"* %48, i64 %51)
  %52 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 3
  %53 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %52, i64 %55)
  %56 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 4
  %57 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %58 = load i32, i32* %57, align 8
  %59 = sext i32 %58 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %56, i64 %59)
  %60 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 7
  %61 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %62 = load i32, i32* %61, align 8
  %63 = sext i32 %62 to i64
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.18"* %60, i64 %63)
  %64 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 13
  %65 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %66 = load i32, i32* %65, align 8
  %67 = sext i32 %66 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.23"* %64, i64 %67)
  %68 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 5
  %69 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %70 = load i32, i32* %69, align 8
  %71 = sext i32 %70 to i64
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm(%"class.std::vector.10"* %68, i64 %71)
  %72 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 6
  %73 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %41, i32 0, i32 9
  %74 = load i32, i32* %73, align 8
  %75 = sext i32 %74 to i64
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm(%"class.std::vector.10"* %72, i64 %75)
  %76 = load i32, i32* @x.243
  %77 = load i32, i32* @y.244
  %78 = add i32 %76, 129549111
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 129549111
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 1289626814, i32 1028483858
  store i32 %90, i32* %14
  br label %130

; <label>:91:                                     ; preds = %15
  ret void

; <label>:92:                                     ; preds = %15
  %93 = alloca %struct.Template_MPM*, align 8
  %94 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %93, align 8
  store i32 %1, i32* %94, align 4
  %95 = load %struct.Template_MPM*, %struct.Template_MPM** %93, align 8
  %96 = load i32, i32* %94, align 4
  %97 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  store i32 %96, i32* %97, align 8
  %98 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 8
  %99 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %100 = load i32, i32* %99, align 8
  %101 = sext i32 %100 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %98, i64 %101)
  %102 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 14
  %103 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %104 = load i32, i32* %103, align 8
  %105 = sext i32 %104 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.23"* %102, i64 %105)
  %106 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 3
  %107 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %108 = load i32, i32* %107, align 8
  %109 = sext i32 %108 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %106, i64 %109)
  %110 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 4
  %111 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %112 = load i32, i32* %111, align 8
  %113 = sext i32 %112 to i64
  call void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"* %110, i64 %113)
  %114 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 7
  %115 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %116 = load i32, i32* %115, align 8
  %117 = sext i32 %116 to i64
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.18"* %114, i64 %117)
  %118 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 13
  %119 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %120 = load i32, i32* %119, align 8
  %121 = sext i32 %120 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.23"* %118, i64 %121)
  %122 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 5
  %123 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %124 = load i32, i32* %123, align 8
  %125 = sext i32 %124 to i64
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm(%"class.std::vector.10"* %122, i64 %125)
  %126 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 6
  %127 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %95, i32 0, i32 9
  %128 = load i32, i32* %127, align 8
  %129 = sext i32 %128 to i64
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm(%"class.std::vector.10"* %126, i64 %129)
  store i32 828834650, i32* %14
  br label %130

; <label>:130:                                    ; preds = %92, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE6resizeEm(%"class.std::vector.5"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::vector.5"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.245
  %10 = load i32, i32* @y.246
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 978341646, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %243
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 978341646, label %22
    i32 128952854, label %30
    i32 -170952099, label %67
    i32 212296229, label %70
    i32 1656821780, label %79
    i32 -613950703, label %95
    i32 -1787807933, label %128
    i32 1959204714, label %131
    i32 948685071, label %141
    i32 681672966, label %169
    i32 -2107181967, label %184
    i32 -399928200, label %185
    i32 -46451916, label %200
    i32 -1338866696, label %227
    i32 -1223096135, label %228
    i32 225967177, label %235
    i32 979697753, label %241
    i32 1683991690, label %242
  ]

; <label>:21:                                     ; preds = %19
  br label %243

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 128952854, i32 -1223096135
  store i32 %29, i32* %18
  br label %243

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.5"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %6
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %31, align 8
  %33 = load volatile i64*, i64** %6
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::vector.5"*, %"class.std::vector.5"** %31, align 8
  store %"class.std::vector.5"* %34, %"class.std::vector.5"** %5
  %35 = load volatile i64*, i64** %6
  %36 = load i64, i64* %35, align 8
  %37 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %38 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %37) #3
  %39 = icmp ugt i64 %36, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.245
  %41 = load i32, i32* @y.246
  %42 = sub i32 %40, 2027496563
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 2027496563
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -170952099, i32 -1223096135
  store i32 %66, i32* %18
  br label %243

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 212296229, i32 1656821780
  store i32 %69, i32* %18
  br label %243

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %6
  %72 = load i64, i64* %71, align 8
  %73 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %74 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %73) #3
  %75 = sub i64 0, %74
  %76 = add i64 %72, %75
  %77 = sub i64 %72, %74
  %78 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIxSaIxEE17_M_default_appendEm(%"class.std::vector.5"* %78, i64 %76)
  store i32 -399928200, i32* %18
  br label %243

; <label>:79:                                     ; preds = %19
  %80 = load i32, i32* @x.245
  %81 = load i32, i32* @y.246
  %82 = add i32 %80, 309940755
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 309940755
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -613950703, i32 225967177
  store i32 %94, i32* %18
  br label %243

; <label>:95:                                     ; preds = %19
  %96 = load volatile i64*, i64** %6
  %97 = load i64, i64* %96, align 8
  %98 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %99 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %98) #3
  %100 = icmp ult i64 %97, %99
  store i1 %100, i1* %3
  %101 = load i32, i32* @x.245
  %102 = load i32, i32* @y.246
  %103 = add i32 %101, 616084765
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 616084765
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  %127 = select i1 %125, i32 -1787807933, i32 225967177
  store i32 %127, i32* %18
  br label %243

; <label>:128:                                    ; preds = %19
  %129 = load volatile i1, i1* %3
  %130 = select i1 %129, i32 1959204714, i32 948685071
  store i32 %130, i32* %18
  br label %243

; <label>:131:                                    ; preds = %19
  %132 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %133 = bitcast %"class.std::vector.5"* %132 to %"struct.std::_Vector_base.6"*
  %134 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %134, i32 0, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = load volatile i64*, i64** %6
  %138 = load i64, i64* %137, align 8
  %139 = getelementptr inbounds i64, i64* %136, i64 %138
  %140 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.5"* %140, i64* %139) #3
  store i32 948685071, i32* %18
  br label %243

; <label>:141:                                    ; preds = %19
  %142 = load i32, i32* @x.245
  %143 = load i32, i32* @y.246
  %144 = sub i32 %142, -1443236158
  %145 = sub i32 %144, 1
  %146 = add i32 %145, -1443236158
  %147 = sub i32 %142, 1
  %148 = mul i32 %142, %146
  %149 = urem i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = icmp slt i32 %143, 10
  %152 = xor i1 %150, true
  %153 = xor i1 %151, true
  %154 = xor i1 true, true
  %155 = and i1 %152, true
  %156 = and i1 %150, %154
  %157 = and i1 %153, true
  %158 = and i1 %151, %154
  %159 = or i1 %155, %156
  %160 = or i1 %157, %158
  %161 = xor i1 %159, %160
  %162 = or i1 %152, %153
  %163 = xor i1 %162, true
  %164 = or i1 true, %154
  %165 = and i1 %163, %164
  %166 = or i1 %161, %165
  %167 = or i1 %150, %151
  %168 = select i1 %166, i32 681672966, i32 979697753
  store i32 %168, i32* %18
  br label %243

; <label>:169:                                    ; preds = %19
  %170 = load i32, i32* @x.245
  %171 = load i32, i32* @y.246
  %172 = sub i32 0, 1
  %173 = add i32 %170, %172
  %174 = sub i32 %170, 1
  %175 = mul i32 %170, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %171, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  %183 = select i1 %181, i32 -2107181967, i32 979697753
  store i32 %183, i32* %18
  br label %243

; <label>:184:                                    ; preds = %19
  store i32 -399928200, i32* %18
  br label %243

; <label>:185:                                    ; preds = %19
  %186 = load i32, i32* @x.245
  %187 = load i32, i32* @y.246
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  %199 = select i1 %197, i32 -46451916, i32 1683991690
  store i32 %199, i32* %18
  br label %243

; <label>:200:                                    ; preds = %19
  %201 = load i32, i32* @x.245
  %202 = load i32, i32* @y.246
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  %226 = select i1 %224, i32 -1338866696, i32 1683991690
  store i32 %226, i32* %18
  br label %243

; <label>:227:                                    ; preds = %19
  ret void

; <label>:228:                                    ; preds = %19
  %229 = alloca %"class.std::vector.5"*, align 8
  %230 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %229, align 8
  store i64 %1, i64* %230, align 8
  %231 = load %"class.std::vector.5"*, %"class.std::vector.5"** %229, align 8
  %232 = load i64, i64* %230, align 8
  %233 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %231) #3
  %234 = icmp ugt i64 %232, %233
  store i32 128952854, i32* %18
  br label %243

; <label>:235:                                    ; preds = %19
  %236 = load volatile i64*, i64** %6
  %237 = load i64, i64* %236, align 8
  %238 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %5
  %239 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %238) #3
  %240 = icmp ult i64 %237, %239
  store i32 -613950703, i32* %18
  br label %243

; <label>:241:                                    ; preds = %19
  store i32 681672966, i32* %18
  br label %243

; <label>:242:                                    ; preds = %19
  store i32 -46451916, i32* %18
  br label %243

; <label>:243:                                    ; preds = %242, %241, %235, %228, %200, %185, %184, %169, %141, %131, %128, %95, %79, %70, %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.23"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.23"*
  %6 = alloca %"class.std::vector.23"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  store %"class.std::vector.23"* %8, %"class.std::vector.23"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1151173169, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %47
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1151173169, label %16
    i32 -1843148514, label %21
    i32 122896328, label %30
    i32 1861699612, label %36
    i32 423108494, label %45
    i32 -1068294863, label %46
  ]

; <label>:15:                                     ; preds = %13
  br label %47

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1843148514, i32 122896328
  store i32 %20, i32* %12
  br label %47

; <label>:21:                                     ; preds = %13
  %22 = load i64, i64* %7, align 8
  %23 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %24 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %23) #3
  %25 = add i64 %22, -2901931183125116490
  %26 = sub i64 %25, %24
  %27 = sub i64 %26, -2901931183125116490
  %28 = sub i64 %22, %24
  %29 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.23"* %29, i64 %27)
  store i32 -1068294863, i32* %12
  br label %47

; <label>:30:                                     ; preds = %13
  %31 = load i64, i64* %7, align 8
  %32 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %33 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %32) #3
  %34 = icmp ult i64 %31, %33
  %35 = select i1 %34, i32 1861699612, i32 423108494
  store i32 %35, i32* %12
  br label %47

; <label>:36:                                     ; preds = %13
  %37 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %38 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i64, i64* %7, align 8
  %43 = getelementptr inbounds i32, i32* %41, i64 %42
  %44 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.23"* %44, i32* %43) #3
  store i32 423108494, i32* %12
  br label %47

; <label>:45:                                     ; preds = %13
  store i32 -1068294863, i32* %12
  br label %47

; <label>:46:                                     ; preds = %13
  ret void

; <label>:47:                                     ; preds = %45, %36, %30, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE6resizeEm(%"class.std::vector.18"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.18"*
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %9, %"class.std::vector.18"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  %12 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 -563526924, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %149
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -563526924, label %17
    i32 -1541604748, label %22
    i32 -1328388, label %30
    i32 1574813068, label %45
    i32 -548774529, label %64
    i32 -518231750, label %67
    i32 -1602270406, label %76
    i32 30596748, label %92
    i32 -1733745466, label %108
    i32 -501498899, label %109
    i32 -2003100635, label %125
    i32 627188933, label %141
    i32 804935217, label %142
    i32 -1265125845, label %147
    i32 1760409001, label %148
  ]

; <label>:16:                                     ; preds = %14
  br label %149

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1541604748, i32 -1328388
  store i32 %21, i32* %13
  br label %149

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %8, align 8
  %24 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  %25 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %24) #3
  %26 = sub i64 0, %25
  %27 = add i64 %23, %26
  %28 = sub i64 %23, %25
  %29 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.18"* %29, i64 %27)
  store i32 -501498899, i32* %13
  br label %149

; <label>:30:                                     ; preds = %14
  %31 = load i32, i32* @x.249
  %32 = load i32, i32* @y.250
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1574813068, i32 804935217
  store i32 %44, i32* %13
  br label %149

; <label>:45:                                     ; preds = %14
  %46 = load i64, i64* %8, align 8
  %47 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  %48 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %47) #3
  %49 = icmp ult i64 %46, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.249
  %51 = load i32, i32* @y.250
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -548774529, i32 804935217
  store i32 %63, i32* %13
  br label %149

; <label>:64:                                     ; preds = %14
  %65 = load volatile i1, i1* %3
  %66 = select i1 %65, i32 -518231750, i32 -1602270406
  store i32 %66, i32* %13
  br label %149

; <label>:67:                                     ; preds = %14
  %68 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  %69 = bitcast %"class.std::vector.18"* %68 to %"struct.std::_Vector_base.19"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::vector.23"*, %"class.std::vector.23"** %71, align 8
  %73 = load i64, i64* %8, align 8
  %74 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %72, i64 %73
  %75 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  call void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.18"* %75, %"class.std::vector.23"* %74) #3
  store i32 -1602270406, i32* %13
  br label %149

; <label>:76:                                     ; preds = %14
  %77 = load i32, i32* @x.249
  %78 = load i32, i32* @y.250
  %79 = sub i32 %77, -86064312
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -86064312
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 30596748, i32 -1265125845
  store i32 %91, i32* %13
  br label %149

; <label>:92:                                     ; preds = %14
  %93 = load i32, i32* @x.249
  %94 = load i32, i32* @y.250
  %95 = sub i32 %93, 1271062924
  %96 = sub i32 %95, 1
  %97 = add i32 %96, 1271062924
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 -1733745466, i32 -1265125845
  store i32 %107, i32* %13
  br label %149

; <label>:108:                                    ; preds = %14
  store i32 -501498899, i32* %13
  br label %149

; <label>:109:                                    ; preds = %14
  %110 = load i32, i32* @x.249
  %111 = load i32, i32* @y.250
  %112 = add i32 %110, 2002997463
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, 2002997463
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -2003100635, i32 1760409001
  store i32 %124, i32* %13
  br label %149

; <label>:125:                                    ; preds = %14
  %126 = load i32, i32* @x.249
  %127 = load i32, i32* @y.250
  %128 = add i32 %126, 698753370
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, 698753370
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = and i1 %134, %135
  %137 = xor i1 %134, %135
  %138 = or i1 %136, %137
  %139 = or i1 %134, %135
  %140 = select i1 %138, i32 627188933, i32 1760409001
  store i32 %140, i32* %13
  br label %149

; <label>:141:                                    ; preds = %14
  ret void

; <label>:142:                                    ; preds = %14
  %143 = load i64, i64* %8, align 8
  %144 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %6
  %145 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %144) #3
  %146 = icmp ult i64 %143, %145
  store i32 1574813068, i32* %13
  br label %149

; <label>:147:                                    ; preds = %14
  store i32 30596748, i32* %13
  br label %149

; <label>:148:                                    ; preds = %14
  store i32 -2003100635, i32* %13
  br label %149

; <label>:149:                                    ; preds = %148, %147, %142, %125, %109, %108, %92, %76, %67, %64, %45, %30, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE6resizeEm(%"class.std::vector.10"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.10"*
  %7 = alloca %"class.std::vector.10"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %7, align 8
  store i64 %1, i64* %8, align 8
  %9 = load %"class.std::vector.10"*, %"class.std::vector.10"** %7, align 8
  store %"class.std::vector.10"* %9, %"class.std::vector.10"** %6
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %5
  %11 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %12 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %11) #3
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 146870439, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %150
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 146870439, label %17
    i32 -1322029561, label %22
    i32 -1296299012, label %31
    i32 593292118, label %47
    i32 642026745, label %79
    i32 -1436115383, label %82
    i32 365828378, label %110
    i32 1574859475, label %133
    i32 -1645936189, label %134
    i32 1082220646, label %135
    i32 -381601840, label %136
    i32 -106764760, label %141
  ]

; <label>:16:                                     ; preds = %14
  br label %150

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1322029561, i32 -1296299012
  store i32 %21, i32* %13
  br label %150

; <label>:22:                                     ; preds = %14
  %23 = load i64, i64* %8, align 8
  %24 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %25 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %24) #3
  %26 = sub i64 %23, -3373110848668916082
  %27 = sub i64 %26, %25
  %28 = add i64 %27, -3373110848668916082
  %29 = sub i64 %23, %25
  %30 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE17_M_default_appendEm(%"class.std::vector.10"* %30, i64 %28)
  store i32 1082220646, i32* %13
  br label %150

; <label>:31:                                     ; preds = %14
  %32 = load i32, i32* @x.251
  %33 = load i32, i32* @y.252
  %34 = sub i32 %32, -1231883926
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1231883926
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 593292118, i32 -381601840
  store i32 %46, i32* %13
  br label %150

; <label>:47:                                     ; preds = %14
  %48 = load i64, i64* %8, align 8
  %49 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %50 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %49) #3
  %51 = icmp ult i64 %48, %50
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.251
  %53 = load i32, i32* @y.252
  %54 = sub i32 %52, -426211676
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -426211676
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 642026745, i32 -381601840
  store i32 %78, i32* %13
  br label %150

; <label>:79:                                     ; preds = %14
  %80 = load volatile i1, i1* %3
  %81 = select i1 %80, i32 -1436115383, i32 -1645936189
  store i32 %81, i32* %13
  br label %150

; <label>:82:                                     ; preds = %14
  %83 = load i32, i32* @x.251
  %84 = load i32, i32* @y.252
  %85 = add i32 %83, -1112525617
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -1112525617
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  %109 = select i1 %107, i32 365828378, i32 -106764760
  store i32 %109, i32* %13
  br label %150

; <label>:110:                                    ; preds = %14
  %111 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %112 = bitcast %"class.std::vector.10"* %111 to %"struct.std::_Vector_base.11"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %113, i32 0, i32 0
  %115 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %114, align 8
  %116 = load i64, i64* %8, align 8
  %117 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %115, i64 %116
  %118 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.10"* %118, %"class.std::__cxx11::list"* %117) #3
  %119 = load i32, i32* @x.251
  %120 = load i32, i32* @y.252
  %121 = sub i32 0, 1
  %122 = add i32 %119, %121
  %123 = sub i32 %119, 1
  %124 = mul i32 %119, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %120, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  %132 = select i1 %130, i32 1574859475, i32 -106764760
  store i32 %132, i32* %13
  br label %150

; <label>:133:                                    ; preds = %14
  store i32 -1645936189, i32* %13
  br label %150

; <label>:134:                                    ; preds = %14
  store i32 1082220646, i32* %13
  br label %150

; <label>:135:                                    ; preds = %14
  ret void

; <label>:136:                                    ; preds = %14
  %137 = load i64, i64* %8, align 8
  %138 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %139 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %138) #3
  %140 = icmp ult i64 %137, %139
  store i32 593292118, i32* %13
  br label %150

; <label>:141:                                    ; preds = %14
  %142 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %143 = bitcast %"class.std::vector.10"* %142 to %"struct.std::_Vector_base.11"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %144, i32 0, i32 0
  %146 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %145, align 8
  %147 = load i64, i64* %8, align 8
  %148 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %146, i64 %147
  %149 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  call void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.10"* %149, %"class.std::__cxx11::list"* %148) #3
  store i32 365828378, i32* %13
  br label %150

; <label>:150:                                    ; preds = %141, %136, %134, %133, %110, %82, %79, %47, %31, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %3 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %4 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i64*, i64** %6, align 8
  %8 = bitcast %"class.std::vector.5"* %3 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = ptrtoint i64* %7 to i64
  %13 = ptrtoint i64* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE17_M_default_appendEm(%"class.std::vector.5"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %232

; <label>:14:                                     ; preds = %2
  %15 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i64*, i64** %17, align 8
  %19 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %20, i32 0, i32 1
  %22 = load i64*, i64** %21, align 8
  %23 = ptrtoint i64* %18 to i64
  %24 = ptrtoint i64* %22 to i64
  %25 = sub i64 %23, -1381294837905817315
  %26 = sub i64 %25, %24
  %27 = add i64 %26, -1381294837905817315
  %28 = sub i64 %23, %24
  %29 = sdiv exact i64 %27, 8
  %30 = load i64, i64* %4, align 8
  %31 = icmp uge i64 %29, %30
  br i1 %31, label %32, label %97

; <label>:32:                                     ; preds = %14
  %33 = load i32, i32* @x.255
  %34 = load i32, i32* @y.256
  %35 = sub i32 %33, 1283270225
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1283270225
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %284

; <label>:59:                                     ; preds = %32, %284
  %60 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %61, i32 0, i32 1
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %4, align 8
  %65 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %66 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %65) #3
  %67 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %63, i64 %64, %"class.std::allocator.7"* dereferenceable(1) %66)
  %68 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %69, i32 0, i32 1
  store i64* %67, i64** %70, align 8
  %71 = load i32, i32* @x.255
  %72 = load i32, i32* @y.256
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %284

; <label>:96:                                     ; preds = %59
  br label %231

; <label>:97:                                     ; preds = %14
  %98 = load i64, i64* %4, align 8
  %99 = call i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.5"* %11, i64 %98, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %99, i64* %5, align 8
  %100 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %11) #3
  store i64 %100, i64* %6, align 8
  %101 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %102 = load i64, i64* %5, align 8
  %103 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %101, i64 %102)
  store i64* %103, i64** %7, align 8
  %104 = load i64*, i64** %7, align 8
  store i64* %104, i64** %8, align 8
  %105 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %106, i32 0, i32 0
  %108 = load i64*, i64** %107, align 8
  %109 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load i64*, i64** %111, align 8
  %113 = load i64*, i64** %7, align 8
  %114 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %115 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %114) #3
  %116 = invoke i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64* %108, i64* %112, i64* %113, %"class.std::allocator.7"* dereferenceable(1) %115)
          to label %117 unwind label %124

; <label>:117:                                    ; preds = %97
  store i64* %116, i64** %8, align 8
  %118 = load i64*, i64** %8, align 8
  %119 = load i64, i64* %4, align 8
  %120 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %121 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %120) #3
  %122 = invoke i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %118, i64 %119, %"class.std::allocator.7"* dereferenceable(1) %121)
          to label %123 unwind label %124

; <label>:123:                                    ; preds = %117
  store i64* %122, i64** %8, align 8
  br label %187

; <label>:124:                                    ; preds = %117, %97
  %125 = landingpad { i8*, i32 }
          catch i8* null
  %126 = extractvalue { i8*, i32 } %125, 0
  store i8* %126, i8** %9, align 8
  %127 = extractvalue { i8*, i32 } %125, 1
  store i32 %127, i32* %10, align 4
  br label %128

; <label>:128:                                    ; preds = %124
  %129 = load i8*, i8** %9, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = load i64*, i64** %7, align 8
  %132 = load i64*, i64** %8, align 8
  %133 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %134 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %133) #3
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %131, i64* %132, %"class.std::allocator.7"* dereferenceable(1) %134)
          to label %135 unwind label %140

; <label>:135:                                    ; preds = %128
  %136 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %137 = load i64*, i64** %7, align 8
  %138 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.6"* %136, i64* %137, i64 %138)
          to label %139 unwind label %140

; <label>:139:                                    ; preds = %135
  invoke void @__cxa_rethrow() #12
          to label %283 unwind label %140

; <label>:140:                                    ; preds = %139, %135, %128
  %141 = load i32, i32* @x.255
  %142 = load i32, i32* @y.256
  %143 = sub i32 %141, 1753457734
  %144 = sub i32 %143, 1
  %145 = add i32 %144, 1753457734
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 true, true
  %154 = and i1 %151, true
  %155 = and i1 %149, %153
  %156 = and i1 %152, true
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 true, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %296

; <label>:167:                                    ; preds = %140, %296
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %9, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %10, align 4
  %171 = load i32, i32* @x.255
  %172 = load i32, i32* @y.256
  %173 = add i32 %171, -2111930287
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -2111930287
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %296

; <label>:185:                                    ; preds = %167
  invoke void @__cxa_end_catch()
          to label %186 unwind label %280

; <label>:186:                                    ; preds = %185
  br label %233

; <label>:187:                                    ; preds = %123
  %188 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %189, i32 0, i32 0
  %191 = load i64*, i64** %190, align 8
  %192 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %193, i32 0, i32 1
  %195 = load i64*, i64** %194, align 8
  %196 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %197 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %196) #3
  call void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %191, i64* %195, %"class.std::allocator.7"* dereferenceable(1) %197)
  %198 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %199 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %200 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %200, i32 0, i32 0
  %202 = load i64*, i64** %201, align 8
  %203 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %203, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %204, i32 0, i32 2
  %206 = load i64*, i64** %205, align 8
  %207 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %207, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %208, i32 0, i32 0
  %210 = load i64*, i64** %209, align 8
  %211 = ptrtoint i64* %206 to i64
  %212 = ptrtoint i64* %210 to i64
  %213 = sub i64 0, %212
  %214 = add i64 %211, %213
  %215 = sub i64 %211, %212
  %216 = sdiv exact i64 %214, 8
  call void @_ZNSt12_Vector_baseIxSaIxEE13_M_deallocateEPxm(%"struct.std::_Vector_base.6"* %198, i64* %202, i64 %216)
  %217 = load i64*, i64** %7, align 8
  %218 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %219, i32 0, i32 0
  store i64* %217, i64** %220, align 8
  %221 = load i64*, i64** %8, align 8
  %222 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %223, i32 0, i32 1
  store i64* %221, i64** %224, align 8
  %225 = load i64*, i64** %7, align 8
  %226 = load i64, i64* %5, align 8
  %227 = getelementptr inbounds i64, i64* %225, i64 %226
  %228 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %229 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %228, i32 0, i32 0
  %230 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %229, i32 0, i32 2
  store i64* %227, i64** %230, align 8
  br label %231

; <label>:231:                                    ; preds = %187, %96
  br label %232

; <label>:232:                                    ; preds = %231, %2
  ret void

; <label>:233:                                    ; preds = %186
  %234 = load i32, i32* @x.255
  %235 = load i32, i32* @y.256
  %236 = sub i32 %234, -1065139917
  %237 = sub i32 %236, 1
  %238 = add i32 %237, -1065139917
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = xor i1 %242, true
  %245 = xor i1 %243, true
  %246 = xor i1 false, true
  %247 = and i1 %244, false
  %248 = and i1 %242, %246
  %249 = and i1 %245, false
  %250 = and i1 %243, %246
  %251 = or i1 %247, %248
  %252 = or i1 %249, %250
  %253 = xor i1 %251, %252
  %254 = or i1 %244, %245
  %255 = xor i1 %254, true
  %256 = or i1 false, %246
  %257 = and i1 %255, %256
  %258 = or i1 %253, %257
  %259 = or i1 %242, %243
  br i1 %258, label %260, label %300

; <label>:260:                                    ; preds = %233, %300
  %261 = load i8*, i8** %9, align 8
  %262 = load i32, i32* %10, align 4
  %263 = insertvalue { i8*, i32 } undef, i8* %261, 0
  %264 = insertvalue { i8*, i32 } %263, i32 %262, 1
  %265 = load i32, i32* @x.255
  %266 = load i32, i32* @y.256
  %267 = sub i32 %265, -49602803
  %268 = sub i32 %267, 1
  %269 = add i32 %268, -49602803
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = and i1 %273, %274
  %276 = xor i1 %273, %274
  %277 = or i1 %275, %276
  %278 = or i1 %273, %274
  br i1 %277, label %279, label %300

; <label>:279:                                    ; preds = %260
  resume { i8*, i32 } %264

; <label>:280:                                    ; preds = %185
  %281 = landingpad { i8*, i32 }
          catch i8* null
  %282 = extractvalue { i8*, i32 } %281, 0
  call void @__clang_call_terminate(i8* %282) #11
  unreachable

; <label>:283:                                    ; preds = %139
  unreachable

; <label>:284:                                    ; preds = %59, %32
  %285 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %286, i32 0, i32 1
  %288 = load i64*, i64** %287, align 8
  %289 = load i64, i64* %4, align 8
  %290 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %291 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %290) #3
  %292 = call i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64* %288, i64 %289, %"class.std::allocator.7"* dereferenceable(1) %291)
  %293 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %294 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %293, i32 0, i32 0
  %295 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %294, i32 0, i32 1
  store i64* %292, i64** %295, align 8
  br label %59

; <label>:296:                                    ; preds = %167, %140
  %297 = landingpad { i8*, i32 }
          cleanup
  %298 = extractvalue { i8*, i32 } %297, 0
  store i8* %298, i8** %9, align 8
  %299 = extractvalue { i8*, i32 } %297, 1
  store i32 %299, i32* %10, align 4
  br label %167

; <label>:300:                                    ; preds = %260, %233
  %301 = load i8*, i8** %9, align 8
  %302 = load i32, i32* %10, align 4
  %303 = insertvalue { i8*, i32 } undef, i8* %301, 0
  %304 = insertvalue { i8*, i32 } %303, i32 %302, 1
  br label %260
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.5"*, i64*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.257
  %4 = load i32, i32* @y.258
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %61

; <label>:16:                                     ; preds = %2, %61
  %17 = alloca %"class.std::vector.5"*, align 8
  %18 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %17, align 8
  store i64* %1, i64** %18, align 8
  %19 = load %"class.std::vector.5"*, %"class.std::vector.5"** %17, align 8
  %20 = load i64*, i64** %18, align 8
  %21 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %22, i32 0, i32 1
  %24 = load i64*, i64** %23, align 8
  %25 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %26 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %25) #3
  %27 = load i32, i32* @x.257
  %28 = load i32, i32* @y.258
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %61

; <label>:52:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPxxEvT_S1_RSaIT0_E(i64* %20, i64* %24, %"class.std::allocator.7"* dereferenceable(1) %26)
          to label %53 unwind label %58

; <label>:53:                                     ; preds = %52
  %54 = load i64*, i64** %18, align 8
  %55 = bitcast %"class.std::vector.5"* %19 to %"struct.std::_Vector_base.6"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %56, i32 0, i32 1
  store i64* %54, i64** %57, align 8
  ret void

; <label>:58:                                     ; preds = %52
  %59 = landingpad { i8*, i32 }
          catch i8* null
  %60 = extractvalue { i8*, i32 } %59, 0
  call void @__clang_call_terminate(i8* %60) #11
  unreachable

; <label>:61:                                     ; preds = %16, %2
  %62 = alloca %"class.std::vector.5"*, align 8
  %63 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %62, align 8
  store i64* %1, i64** %63, align 8
  %64 = load %"class.std::vector.5"*, %"class.std::vector.5"** %62, align 8
  %65 = load i64*, i64** %63, align 8
  %66 = bitcast %"class.std::vector.5"* %64 to %"struct.std::_Vector_base.6"*
  %67 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %66, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %67, i32 0, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = bitcast %"class.std::vector.5"* %64 to %"struct.std::_Vector_base.6"*
  %71 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %70) #3
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt27__uninitialized_default_n_aIPxmxET_S1_T0_RSaIT1_E(i64*, i64, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64* %7, i64 %8)
  ret i64* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE12_M_check_lenEmPKc(%"class.std::vector.5"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %"class.std::vector.5"*
  %10 = alloca i64*
  %11 = alloca i64*
  %12 = alloca i8**
  %13 = alloca i64*
  %14 = alloca i1
  %15 = alloca i1
  %16 = load i32, i32* @x.261
  %17 = load i32, i32* @y.262
  %18 = add i32 %16, 765298103
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, 765298103
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  store i1 %24, i1* %15
  %25 = icmp slt i32 %17, 10
  store i1 %25, i1* %14
  %26 = alloca i32
  store i32 -1190355708, i32* %26
  %27 = alloca i64
  br label %28

; <label>:28:                                     ; preds = %3, %383
  %29 = load i32, i32* %26
  switch i32 %29, label %30 [
    i32 -1190355708, label %31
    i32 1642504849, label %51
    i32 987405783, label %98
    i32 378301783, label %101
    i32 1361418874, label %104
    i32 1145512850, label %125
    i32 -1490280958, label %153
    i32 1389346148, label %186
    i32 232440188, label %189
    i32 1981150587, label %216
    i32 1162837006, label %246
    i32 1324571882, label %248
    i32 160114225, label %264
    i32 211286920, label %281
    i32 519880763, label %283
    i32 -934789742, label %300
    i32 604256756, label %316
    i32 542677403, label %318
    i32 -1476912695, label %370
    i32 2132302613, label %376
    i32 -333803820, label %379
    i32 503732552, label %382
  ]

; <label>:30:                                     ; preds = %28
  br label %383

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %15
  %33 = load volatile i1, i1* %14
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 1642504849, i32 542677403
  store i32 %50, i32* %26
  br label %383

; <label>:51:                                     ; preds = %28
  %52 = alloca %"class.std::vector.5"*, align 8
  %53 = alloca i64, align 8
  store i64* %53, i64** %13
  %54 = alloca i8*, align 8
  store i8** %54, i8*** %12
  %55 = alloca i64, align 8
  store i64* %55, i64** %11
  %56 = alloca i64, align 8
  store i64* %56, i64** %10
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %52, align 8
  %57 = load volatile i64*, i64** %13
  store i64 %1, i64* %57, align 8
  %58 = load volatile i8**, i8*** %12
  store i8* %2, i8** %58, align 8
  %59 = load %"class.std::vector.5"*, %"class.std::vector.5"** %52, align 8
  store %"class.std::vector.5"* %59, %"class.std::vector.5"** %9
  %60 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %61 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %60) #3
  %62 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %63 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %62) #3
  %64 = add i64 %61, 4063937781412654526
  %65 = sub i64 %64, %63
  %66 = sub i64 %65, 4063937781412654526
  %67 = sub i64 %61, %63
  %68 = load volatile i64*, i64** %13
  %69 = load i64, i64* %68, align 8
  %70 = icmp ult i64 %66, %69
  store i1 %70, i1* %8
  %71 = load i32, i32* @x.261
  %72 = load i32, i32* @y.262
  %73 = add i32 %71, -1984282217
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -1984282217
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 987405783, i32 542677403
  store i32 %97, i32* %26
  br label %383

; <label>:98:                                     ; preds = %28
  %99 = load volatile i1, i1* %8
  %100 = select i1 %99, i32 378301783, i32 1361418874
  store i32 %100, i32* %26
  br label %383

; <label>:101:                                    ; preds = %28
  %102 = load volatile i8**, i8*** %12
  %103 = load i8*, i8** %102, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %103) #12
  unreachable

; <label>:104:                                    ; preds = %28
  %105 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %106 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %105) #3
  %107 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %108 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %107) #3
  %109 = load volatile i64*, i64** %10
  store i64 %108, i64* %109, align 8
  %110 = load volatile i64*, i64** %13
  %111 = load volatile i64*, i64** %10
  %112 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %111, i64* dereferenceable(8) %110)
  %113 = load i64, i64* %112, align 8
  %114 = add i64 %106, -5201025810675733897
  %115 = add i64 %114, %113
  %116 = sub i64 %115, -5201025810675733897
  %117 = add i64 %106, %113
  %118 = load volatile i64*, i64** %11
  store i64 %116, i64* %118, align 8
  %119 = load volatile i64*, i64** %11
  %120 = load i64, i64* %119, align 8
  %121 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %122 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %121) #3
  %123 = icmp ult i64 %120, %122
  %124 = select i1 %123, i32 232440188, i32 1145512850
  store i32 %124, i32* %26
  br label %383

; <label>:125:                                    ; preds = %28
  %126 = load i32, i32* @x.261
  %127 = load i32, i32* @y.262
  %128 = add i32 %126, -2012204282
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -2012204282
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -1490280958, i32 -1476912695
  store i32 %152, i32* %26
  br label %383

; <label>:153:                                    ; preds = %28
  %154 = load volatile i64*, i64** %11
  %155 = load i64, i64* %154, align 8
  %156 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %157 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %156) #3
  %158 = icmp ugt i64 %155, %157
  store i1 %158, i1* %7
  %159 = load i32, i32* @x.261
  %160 = load i32, i32* @y.262
  %161 = sub i32 %159, -738924635
  %162 = sub i32 %161, 1
  %163 = add i32 %162, -738924635
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 1389346148, i32 -1476912695
  store i32 %185, i32* %26
  br label %383

; <label>:186:                                    ; preds = %28
  %187 = load volatile i1, i1* %7
  %188 = select i1 %187, i32 232440188, i32 1324571882
  store i32 %188, i32* %26
  br label %383

; <label>:189:                                    ; preds = %28
  %190 = load i32, i32* @x.261
  %191 = load i32, i32* @y.262
  %192 = sub i32 0, 1
  %193 = add i32 %190, %192
  %194 = sub i32 %190, 1
  %195 = mul i32 %190, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %191, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  %215 = select i1 %213, i32 1981150587, i32 2132302613
  store i32 %215, i32* %26
  br label %383

; <label>:216:                                    ; preds = %28
  %217 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %218 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %217) #3
  store i64 %218, i64* %6
  %219 = load i32, i32* @x.261
  %220 = load i32, i32* @y.262
  %221 = add i32 %219, -633211876
  %222 = sub i32 %221, 1
  %223 = sub i32 %222, -633211876
  %224 = sub i32 %219, 1
  %225 = mul i32 %219, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %220, 10
  %229 = xor i1 %227, true
  %230 = xor i1 %228, true
  %231 = xor i1 false, true
  %232 = and i1 %229, false
  %233 = and i1 %227, %231
  %234 = and i1 %230, false
  %235 = and i1 %228, %231
  %236 = or i1 %232, %233
  %237 = or i1 %234, %235
  %238 = xor i1 %236, %237
  %239 = or i1 %229, %230
  %240 = xor i1 %239, true
  %241 = or i1 false, %231
  %242 = and i1 %240, %241
  %243 = or i1 %238, %242
  %244 = or i1 %227, %228
  %245 = select i1 %243, i32 1162837006, i32 2132302613
  store i32 %245, i32* %26
  br label %383

; <label>:246:                                    ; preds = %28
  store i32 519880763, i32* %26
  %247 = load volatile i64, i64* %6
  store i64 %247, i64* %27
  br label %383

; <label>:248:                                    ; preds = %28
  %249 = load i32, i32* @x.261
  %250 = load i32, i32* @y.262
  %251 = sub i32 %249, 990443850
  %252 = sub i32 %251, 1
  %253 = add i32 %252, 990443850
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  %263 = select i1 %261, i32 160114225, i32 -333803820
  store i32 %263, i32* %26
  br label %383

; <label>:264:                                    ; preds = %28
  %265 = load volatile i64*, i64** %11
  %266 = load i64, i64* %265, align 8
  store i64 %266, i64* %5
  %267 = load i32, i32* @x.261
  %268 = load i32, i32* @y.262
  %269 = sub i32 0, 1
  %270 = add i32 %267, %269
  %271 = sub i32 %267, 1
  %272 = mul i32 %267, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %268, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  %280 = select i1 %278, i32 211286920, i32 -333803820
  store i32 %280, i32* %26
  br label %383

; <label>:281:                                    ; preds = %28
  store i32 519880763, i32* %26
  %282 = load volatile i64, i64* %5
  store i64 %282, i64* %27
  br label %383

; <label>:283:                                    ; preds = %28
  %284 = load i64, i64* %27
  store i64 %284, i64* %4
  %285 = load i32, i32* @x.261
  %286 = load i32, i32* @y.262
  %287 = add i32 %285, 364383617
  %288 = sub i32 %287, 1
  %289 = sub i32 %288, 364383617
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = and i1 %293, %294
  %296 = xor i1 %293, %294
  %297 = or i1 %295, %296
  %298 = or i1 %293, %294
  %299 = select i1 %297, i32 -934789742, i32 503732552
  store i32 %299, i32* %26
  br label %383

; <label>:300:                                    ; preds = %28
  %301 = load i32, i32* @x.261
  %302 = load i32, i32* @y.262
  %303 = sub i32 %301, 965867725
  %304 = sub i32 %303, 1
  %305 = add i32 %304, 965867725
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = and i1 %309, %310
  %312 = xor i1 %309, %310
  %313 = or i1 %311, %312
  %314 = or i1 %309, %310
  %315 = select i1 %313, i32 604256756, i32 503732552
  store i32 %315, i32* %26
  br label %383

; <label>:316:                                    ; preds = %28
  %317 = load volatile i64, i64* %4
  ret i64 %317

; <label>:318:                                    ; preds = %28
  %319 = alloca %"class.std::vector.5"*, align 8
  %320 = alloca i64, align 8
  %321 = alloca i8*, align 8
  %322 = alloca i64, align 8
  %323 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %319, align 8
  store i64 %1, i64* %320, align 8
  store i8* %2, i8** %321, align 8
  %324 = load %"class.std::vector.5"*, %"class.std::vector.5"** %319, align 8
  %325 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %324) #3
  %326 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %324) #3
  %327 = add i64 0, 3259717036286914134
  %328 = sub i64 %327, %325
  %329 = sub i64 %328, 3259717036286914134
  %330 = sub i64 0, %325
  %331 = sub i64 %329, -4030725618464197967
  %332 = add i64 %331, %326
  %333 = add i64 %332, -4030725618464197967
  %334 = add i64 %329, %326
  %335 = sub i64 %325, 8021404197008317423
  %336 = sub i64 %335, %326
  %337 = add i64 %336, 8021404197008317423
  %338 = sub i64 %325, %326
  %339 = mul i64 %337, %326
  %340 = add i64 %325, 5765409607968854559
  %341 = sub i64 %340, %326
  %342 = sub i64 %341, 5765409607968854559
  %343 = sub i64 %325, %326
  %344 = mul i64 %342, %326
  %345 = sub i64 0, %325
  %346 = add i64 0, %345
  %347 = sub i64 0, %325
  %348 = add i64 %346, -5184585336558658663
  %349 = add i64 %348, %326
  %350 = sub i64 %349, -5184585336558658663
  %351 = add i64 %346, %326
  %352 = sub i64 %325, 7940222298577930316
  %353 = sub i64 %352, %326
  %354 = add i64 %353, 7940222298577930316
  %355 = sub i64 %325, %326
  %356 = mul i64 %354, %326
  %357 = sub i64 0, 7947710639109167031
  %358 = sub i64 %357, %325
  %359 = add i64 %358, 7947710639109167031
  %360 = sub i64 0, %325
  %361 = sub i64 0, %326
  %362 = sub i64 %359, %361
  %363 = add i64 %359, %326
  %364 = sub i64 %325, 2087068891631876217
  %365 = sub i64 %364, %326
  %366 = add i64 %365, 2087068891631876217
  %367 = sub i64 %325, %326
  %368 = load i64, i64* %320, align 8
  %369 = icmp ult i64 %366, %368
  store i32 1642504849, i32* %26
  br label %383

; <label>:370:                                    ; preds = %28
  %371 = load volatile i64*, i64** %11
  %372 = load i64, i64* %371, align 8
  %373 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %374 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %373) #3
  %375 = icmp ugt i64 %372, %374
  store i32 -1490280958, i32* %26
  br label %383

; <label>:376:                                    ; preds = %28
  %377 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %378 = call i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"* %377) #3
  store i32 1981150587, i32* %26
  br label %383

; <label>:379:                                    ; preds = %28
  %380 = load volatile i64*, i64** %11
  %381 = load i64, i64* %380, align 8
  store i32 160114225, i32* %26
  br label %383

; <label>:382:                                    ; preds = %28
  store i32 -934789742, i32* %26
  br label %383

; <label>:383:                                    ; preds = %382, %379, %376, %370, %318, %300, %283, %281, %264, %248, %246, %216, %189, %186, %153, %125, %104, %98, %51, %31, %30
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %8, %"struct.std::_Vector_base.6"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -56117589, i32* %10
  %11 = alloca i64*
  br label %12

; <label>:12:                                     ; preds = %2, %116
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -56117589, label %15
    i32 -312594400, label %19
    i32 -1493401791, label %25
    i32 1339932575, label %53
    i32 249629746, label %68
    i32 1620136127, label %69
    i32 -140903819, label %97
    i32 -904737912, label %112
    i32 -918055652, label %114
    i32 13971000, label %115
  ]

; <label>:14:                                     ; preds = %12
  br label %116

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -312594400, i32 -1493401791
  store i32 %18, i32* %10
  br label %116

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %21 to %"class.std::allocator.7"*
  %23 = load i64, i64* %7, align 8
  %24 = call i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1) %22, i64 %23)
  store i32 1620136127, i32* %10
  store i64* %24, i64** %11
  br label %116

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.263
  %27 = load i32, i32* @y.264
  %28 = sub i32 %26, -1602759555
  %29 = sub i32 %28, 1
  %30 = add i32 %29, -1602759555
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1339932575, i32 -918055652
  store i32 %52, i32* %10
  br label %116

; <label>:53:                                     ; preds = %12
  %54 = load i32, i32* @x.263
  %55 = load i32, i32* @y.264
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 249629746, i32 -918055652
  store i32 %67, i32* %10
  br label %116

; <label>:68:                                     ; preds = %12
  store i32 1620136127, i32* %10
  store i64* null, i64** %11
  br label %116

; <label>:69:                                     ; preds = %12
  %70 = load i64*, i64** %11
  store i64* %70, i64** %3
  %71 = load i32, i32* @x.263
  %72 = load i32, i32* @y.264
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -140903819, i32 13971000
  store i32 %96, i32* %10
  br label %116

; <label>:97:                                     ; preds = %12
  %98 = load i32, i32* @x.263
  %99 = load i32, i32* @y.264
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -904737912, i32 13971000
  store i32 %111, i32* %10
  br label %116

; <label>:112:                                    ; preds = %12
  %113 = load volatile i64*, i64** %3
  ret i64* %113

; <label>:114:                                    ; preds = %12
  store i32 1339932575, i32* %10
  br label %116

; <label>:115:                                    ; preds = %12
  store i32 -140903819, i32* %10
  br label %116

; <label>:116:                                    ; preds = %115, %114, %97, %69, %68, %53, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt34__uninitialized_move_if_noexcept_aIPxS0_SaIxEET0_T_S3_S2_RT1_(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load i64*, i64** %5, align 8
  %12 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store i64* %12, i64** %13, align 8
  %14 = load i64*, i64** %6, align 8
  %15 = call i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store i64* %15, i64** %16, align 8
  %17 = load i64*, i64** %7, align 8
  %18 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load i64*, i64** %21, align 8
  %23 = call i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64* %20, i64* %22, i64* %17, %"class.std::allocator.7"* dereferenceable(1) %18)
  ret i64* %23
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt25__uninitialized_default_nIPxmET_S1_T0_(i64*, i64) #0 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64* %6, i64 %7)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPxmEET_S3_T0_(i64*, i64) #0 comdat align 2 {
  %3 = alloca i64*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %8 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %6, i64 %7, i64* dereferenceable(8) %5)
  ret i64* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZSt10__fill_n_aIPxmxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i64*, i64, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*
  %5 = alloca i64*
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.273
  %10 = load i32, i32* @y.274
  %11 = sub i32 %9, -1004044401
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -1004044401
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -268606946, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %262
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -268606946, label %23
    i32 754612381, label %43
    i32 1595891994, label %82
    i32 942086099, label %83
    i32 -1591256065, label %88
    i32 2054866932, label %115
    i32 -793560024, label %146
    i32 1622970416, label %147
    i32 -1476160226, label %174
    i32 1726522163, label %214
    i32 -1054222927, label %215
    i32 -201758224, label %218
    i32 1744529089, label %227
    i32 681943442, label %232
  ]

; <label>:22:                                     ; preds = %20
  br label %262

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 754612381, i32 -201758224
  store i32 %42, i32* %19
  br label %262

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64, align 8
  %46 = alloca i64*, align 8
  %47 = alloca i64, align 8
  store i64* %47, i64** %5
  %48 = alloca i64, align 8
  store i64* %48, i64** %4
  %49 = load volatile i64**, i64*** %6
  store i64* %0, i64** %49, align 8
  store i64 %1, i64* %45, align 8
  store i64* %2, i64** %46, align 8
  %50 = load i64*, i64** %46, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64*, i64** %5
  store i64 %51, i64* %52, align 8
  %53 = load i64, i64* %45, align 8
  %54 = load volatile i64*, i64** %4
  store i64 %53, i64* %54, align 8
  %55 = load i32, i32* @x.273
  %56 = load i32, i32* @y.274
  %57 = sub i32 %55, -2076476860
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -2076476860
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 1595891994, i32 -201758224
  store i32 %81, i32* %19
  br label %262

; <label>:82:                                     ; preds = %20
  store i32 942086099, i32* %19
  br label %262

; <label>:83:                                     ; preds = %20
  %84 = load volatile i64*, i64** %4
  %85 = load i64, i64* %84, align 8
  %86 = icmp ugt i64 %85, 0
  %87 = select i1 %86, i32 -1591256065, i32 -1054222927
  store i32 %87, i32* %19
  br label %262

; <label>:88:                                     ; preds = %20
  %89 = load i32, i32* @x.273
  %90 = load i32, i32* @y.274
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  %114 = select i1 %112, i32 2054866932, i32 1744529089
  store i32 %114, i32* %19
  br label %262

; <label>:115:                                    ; preds = %20
  %116 = load volatile i64*, i64** %5
  %117 = load i64, i64* %116, align 8
  %118 = load volatile i64**, i64*** %6
  %119 = load i64*, i64** %118, align 8
  store i64 %117, i64* %119, align 8
  %120 = load i32, i32* @x.273
  %121 = load i32, i32* @y.274
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 -793560024, i32 1744529089
  store i32 %145, i32* %19
  br label %262

; <label>:146:                                    ; preds = %20
  store i32 1622970416, i32* %19
  br label %262

; <label>:147:                                    ; preds = %20
  %148 = load i32, i32* @x.273
  %149 = load i32, i32* @y.274
  %150 = sub i32 0, 1
  %151 = add i32 %148, %150
  %152 = sub i32 %148, 1
  %153 = mul i32 %148, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %149, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  %173 = select i1 %171, i32 -1476160226, i32 681943442
  store i32 %173, i32* %19
  br label %262

; <label>:174:                                    ; preds = %20
  %175 = load volatile i64*, i64** %4
  %176 = load i64, i64* %175, align 8
  %177 = sub i64 0, %176
  %178 = sub i64 0, -1
  %179 = add i64 %177, %178
  %180 = sub i64 0, %179
  %181 = add i64 %176, -1
  %182 = load volatile i64*, i64** %4
  store i64 %180, i64* %182, align 8
  %183 = load volatile i64**, i64*** %6
  %184 = load i64*, i64** %183, align 8
  %185 = getelementptr inbounds i64, i64* %184, i32 1
  %186 = load volatile i64**, i64*** %6
  store i64* %185, i64** %186, align 8
  %187 = load i32, i32* @x.273
  %188 = load i32, i32* @y.274
  %189 = add i32 %187, 746643625
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, 746643625
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 false, true
  %200 = and i1 %197, false
  %201 = and i1 %195, %199
  %202 = and i1 %198, false
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 false, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  %213 = select i1 %211, i32 1726522163, i32 681943442
  store i32 %213, i32* %19
  br label %262

; <label>:214:                                    ; preds = %20
  store i32 942086099, i32* %19
  br label %262

; <label>:215:                                    ; preds = %20
  %216 = load volatile i64**, i64*** %6
  %217 = load i64*, i64** %216, align 8
  ret i64* %217

; <label>:218:                                    ; preds = %20
  %219 = alloca i64*, align 8
  %220 = alloca i64, align 8
  %221 = alloca i64*, align 8
  %222 = alloca i64, align 8
  %223 = alloca i64, align 8
  store i64* %0, i64** %219, align 8
  store i64 %1, i64* %220, align 8
  store i64* %2, i64** %221, align 8
  %224 = load i64*, i64** %221, align 8
  %225 = load i64, i64* %224, align 8
  store i64 %225, i64* %222, align 8
  %226 = load i64, i64* %220, align 8
  store i64 %226, i64* %223, align 8
  store i32 754612381, i32* %19
  br label %262

; <label>:227:                                    ; preds = %20
  %228 = load volatile i64*, i64** %5
  %229 = load i64, i64* %228, align 8
  %230 = load volatile i64**, i64*** %6
  %231 = load i64*, i64** %230, align 8
  store i64 %229, i64* %231, align 8
  store i32 2054866932, i32* %19
  br label %262

; <label>:232:                                    ; preds = %20
  %233 = load volatile i64*, i64** %4
  %234 = load i64, i64* %233, align 8
  %235 = sub i64 0, %234
  %236 = add i64 0, %235
  %237 = sub i64 0, %234
  %238 = sub i64 0, -1
  %239 = sub i64 %236, %238
  %240 = add i64 %236, -1
  %241 = shl i64 %234, -1
  %242 = sub i64 0, -7618061855494205619
  %243 = sub i64 %242, %234
  %244 = add i64 %243, -7618061855494205619
  %245 = sub i64 0, %234
  %246 = add i64 %244, 7130709060239149282
  %247 = add i64 %246, -1
  %248 = sub i64 %247, 7130709060239149282
  %249 = add i64 %244, -1
  %250 = sub i64 0, -1
  %251 = add i64 %234, %250
  %252 = sub i64 %234, -1
  %253 = mul i64 %251, -1
  %254 = sub i64 0, -1
  %255 = sub i64 %234, %254
  %256 = add i64 %234, -1
  %257 = load volatile i64*, i64** %4
  store i64 %255, i64* %257, align 8
  %258 = load volatile i64**, i64*** %6
  %259 = load i64*, i64** %258, align 8
  %260 = getelementptr inbounds i64, i64* %259, i32 1
  %261 = load volatile i64**, i64*** %6
  store i64* %260, i64** %261, align 8
  store i32 -1476160226, i32* %19
  br label %262

; <label>:262:                                    ; preds = %232, %227, %218, %214, %174, %147, %146, %115, %88, %83, %82, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64*) #0 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  %4 = call i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64* %3)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIPxLb0EE7_S_baseES0_(i64*) #4 comdat align 2 {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8max_sizeEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.279
  %6 = load i32, i32* @y.280
  %7 = add i32 %5, -412874503
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -412874503
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -341875136, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -341875136, label %19
    i32 -384100973, label %27
    i32 -248832504, label %48
    i32 -1551615216, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -384100973, i32 -1551615216
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %28, align 8
  %29 = load %"class.std::vector.5"*, %"class.std::vector.5"** %28, align 8
  %30 = bitcast %"class.std::vector.5"* %29 to %"struct.std::_Vector_base.6"*
  %31 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %30) #3
  %32 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %31) #3
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.279
  %34 = load i32, i32* @y.280
  %35 = sub i32 %33, 347784708
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 347784708
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -248832504, i32 -1551615216
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  %49 = load volatile i64, i64* %2
  ret i64 %49

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %51, align 8
  %52 = load %"class.std::vector.5"*, %"class.std::vector.5"** %51, align 8
  %53 = bitcast %"class.std::vector.5"* %52 to %"struct.std::_Vector_base.6"*
  %54 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %53) #3
  %55 = call i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1) %54) #3
  store i32 -384100973, i32* %15
  br label %56

; <label>:56:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 551249862, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 551249862, label %16
    i32 -900612771, label %21
    i32 587322186, label %23
    i32 -331503140, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 -900612771, i32 587322186
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -331503140, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -331503140, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIxEE8max_sizeERKS0_(%"class.std::allocator.7"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNKSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.285
  %6 = load i32, i32* @y.286
  %7 = add i32 %5, -1021257027
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1021257027
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 490229240, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 490229240, label %19
    i32 -1972534866, label %39
    i32 -1253227722, label %58
    i32 1100217527, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1972534866, i32 1100217527
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  %41 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %42 to %"class.std::allocator.7"*
  store %"class.std::allocator.7"* %43, %"class.std::allocator.7"** %2
  %44 = load i32, i32* @x.285
  %45 = load i32, i32* @y.286
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1253227722, i32 1100217527
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.7"*, %"class.std::allocator.7"** %2
  ret %"class.std::allocator.7"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %61, align 8
  %62 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %63 to %"class.std::allocator.7"*
  store i32 -1972534866, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt16allocator_traitsISaIxEE8allocateERS0_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.289
  %7 = load i32, i32* @y.290
  %8 = sub i32 %6, -1917134896
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1917134896
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 123347798, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 123347798, label %20
    i32 1418545502, label %40
    i32 -2044175187, label %74
    i32 -1670197035, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1418545502, i32 -1670197035
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.7"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %41, align 8
  %44 = bitcast %"class.std::allocator.7"* %43 to %"class.__gnu_cxx::new_allocator.8"*
  %45 = load i64, i64* %42, align 8
  %46 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %44, i64 %45, i8* null)
  store i64* %46, i64** %3
  %47 = load i32, i32* @x.289
  %48 = load i32, i32* @y.290
  %49 = add i32 %47, -1894419300
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1894419300
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -2044175187, i32 -1670197035
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile i64*, i64** %3
  ret i64* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.7"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %77, align 8
  %80 = bitcast %"class.std::allocator.7"* %79 to %"class.__gnu_cxx::new_allocator.8"*
  %81 = load i64, i64* %78, align 8
  %82 = call i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %80, i64 %81, i8* null)
  store i32 1418545502, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZN9__gnu_cxx13new_allocatorIxE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIxE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -654012360, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -654012360, label %16
    i32 -1634669848, label %21
    i32 618431523, label %37
    i32 -472110772, label %64
    i32 688861952, label %65
    i32 218102510, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1634669848, i32 688861952
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.291
  %23 = load i32, i32* @y.292
  %24 = sub i32 %22, -889104590
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -889104590
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 618431523, i32 218102510
  store i32 %36, i32* %12
  br label %71

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.291
  %39 = load i32, i32* @y.292
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -472110772, i32 218102510
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 8
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to i64*
  ret i64* %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 618431523, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPxES1_xET0_T_S4_S3_RSaIT1_E(i64*, i64*, i64*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %0, i64** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store i64* %1, i64** %12, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i64*, i64** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = call i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %19, i64* %21, i64* %17)
  ret i64* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt32__make_move_if_noexcept_iteratorIPxSt13move_iteratorIS0_EET0_T_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.295
  %6 = load i32, i32* @y.296
  %7 = add i32 %5, 2042638832
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2042638832
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -938847778, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -938847778, label %19
    i32 -1057675050, label %39
    i32 -1253668678, label %59
    i32 1349432071, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1057675050, i32 1349432071
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca i64*, align 8
  store i64* %0, i64** %41, align 8
  %42 = load i64*, i64** %41, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"* %40, i64* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  store i64* %44, i64** %2
  %45 = load i32, i32* @x.295
  %46 = load i32, i32* @y.296
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1253668678, i32 1349432071
  store i32 %58, i32* %15
  br label %67

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64*, i64** %2
  ret i64* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator", align 8
  %63 = alloca i64*, align 8
  store i64* %0, i64** %63, align 8
  %64 = load i64*, i64** %63, align 8
  call void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"* %62, i64* %64)
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %62, i32 0, i32 0
  %66 = load i64*, i64** %65, align 8
  store i32 -1057675050, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt18uninitialized_copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i64* %0, i64** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i64* %1, i64** %11, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i64*, i64** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i64*, i64** %19, align 8
  %21 = call i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64* %18, i64* %20, i64* %16)
  ret i64* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPxES3_EET0_T_S6_S5_(i64*, i64*, i64*) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.299
  %8 = load i32, i32* @y.300
  %9 = sub i32 %7, -1916085810
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1916085810
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1955853063, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %106
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1955853063, label %21
    i32 36760723, label %41
    i32 -2106235079, label %86
    i32 -1648889613, label %88
  ]

; <label>:20:                                     ; preds = %18
  br label %106

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 36760723, i32 -1648889613
  store i32 %40, i32* %17
  br label %106

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca i64*, align 8
  %45 = alloca %"class.std::move_iterator", align 8
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store i64* %0, i64** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i64* %1, i64** %48, align 8
  store i64* %2, i64** %44, align 8
  %49 = bitcast %"class.std::move_iterator"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load i64*, i64** %44, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %45, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %55, i64* %57, i64* %53)
  store i64* %58, i64** %4
  %59 = load i32, i32* @x.299
  %60 = load i32, i32* @y.300
  %61 = sub i32 %59, -578165320
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -578165320
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -2106235079, i32 -1648889613
  store i32 %85, i32* %17
  br label %106

; <label>:86:                                     ; preds = %18
  %87 = load volatile i64*, i64** %4
  ret i64* %87

; <label>:88:                                     ; preds = %18
  %89 = alloca %"class.std::move_iterator", align 8
  %90 = alloca %"class.std::move_iterator", align 8
  %91 = alloca i64*, align 8
  %92 = alloca %"class.std::move_iterator", align 8
  %93 = alloca %"class.std::move_iterator", align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %89, i32 0, i32 0
  store i64* %0, i64** %94, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %90, i32 0, i32 0
  store i64* %1, i64** %95, align 8
  store i64* %2, i64** %91, align 8
  %96 = bitcast %"class.std::move_iterator"* %92 to i8*
  %97 = bitcast %"class.std::move_iterator"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 8, i1 false)
  %98 = bitcast %"class.std::move_iterator"* %93 to i8*
  %99 = bitcast %"class.std::move_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = load i64*, i64** %91, align 8
  %101 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %92, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %93, i32 0, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = call i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64* %102, i64* %104, i64* %100)
  store i32 36760723, i32* %17
  br label %106

; <label>:106:                                    ; preds = %88, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt4copyISt13move_iteratorIPxES1_ET0_T_S4_S3_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.301
  %8 = load i32, i32* @y.302
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1106122926, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %97
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1106122926, label %20
    i32 -1954463125, label %28
    i32 1243513999, label %75
    i32 -7760284, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %97

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1954463125, i32 -7760284
  store i32 %27, i32* %16
  br label %97

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator", align 8
  %30 = alloca %"class.std::move_iterator", align 8
  %31 = alloca i64*, align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"class.std::move_iterator", align 8
  %34 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  store i64* %0, i64** %34, align 8
  %35 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  store i64* %1, i64** %35, align 8
  store i64* %2, i64** %31, align 8
  %36 = bitcast %"class.std::move_iterator"* %32 to i8*
  %37 = bitcast %"class.std::move_iterator"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 8, i32 8, i1 false)
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  %39 = load i64*, i64** %38, align 8
  %40 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %39)
  %41 = bitcast %"class.std::move_iterator"* %33 to i8*
  %42 = bitcast %"class.std::move_iterator"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %33, i32 0, i32 0
  %44 = load i64*, i64** %43, align 8
  %45 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %44)
  %46 = load i64*, i64** %31, align 8
  %47 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %40, i64* %45, i64* %46)
  store i64* %47, i64** %4
  %48 = load i32, i32* @x.301
  %49 = load i32, i32* @y.302
  %50 = add i32 %48, -9104761
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -9104761
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1243513999, i32 -7760284
  store i32 %74, i32* %16
  br label %97

; <label>:75:                                     ; preds = %17
  %76 = load volatile i64*, i64** %4
  ret i64* %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.std::move_iterator", align 8
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca i64*, align 8
  %81 = alloca %"class.std::move_iterator", align 8
  %82 = alloca %"class.std::move_iterator", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %78, i32 0, i32 0
  store i64* %0, i64** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store i64* %1, i64** %84, align 8
  store i64* %2, i64** %80, align 8
  %85 = bitcast %"class.std::move_iterator"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %81, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %88)
  %90 = bitcast %"class.std::move_iterator"* %82 to i8*
  %91 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 8, i1 false)
  %92 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %82, i32 0, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = call i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64* %93)
  %95 = load i64*, i64** %80, align 8
  %96 = call i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64* %89, i64* %94, i64* %95)
  store i32 -1954463125, i32* %16
  br label %97

; <label>:97:                                     ; preds = %77, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt14__copy_move_a2ILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load i64*, i64** %4, align 8
  %8 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %7)
  %9 = load i64*, i64** %5, align 8
  %10 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %9)
  %11 = load i64*, i64** %6, align 8
  %12 = call i64* @_ZSt12__niter_baseIPxENSt11_Niter_baseIT_E13iterator_typeES2_(i64* %11)
  %13 = call i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64* %8, i64* %10, i64* %12)
  ret i64* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__miter_baseISt13move_iteratorIPxEENSt11_Miter_baseIT_E13iterator_typeES4_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.305
  %6 = load i32, i32* @y.306
  %7 = sub i32 %5, 616030110
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 616030110
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 205936078, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 205936078, label %19
    i32 454504159, label %27
    i32 43543009, label %63
    i32 -1441308780, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 454504159, i32 -1441308780
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator", align 8
  %29 = alloca %"class.std::move_iterator", align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %28, i32 0, i32 0
  store i64* %0, i64** %30, align 8
  %31 = bitcast %"class.std::move_iterator"* %29 to i8*
  %32 = bitcast %"class.std::move_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %34)
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.305
  %37 = load i32, i32* @y.306
  %38 = add i32 %36, -169806824
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, -169806824
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 43543009, i32 -1441308780
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %2
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::move_iterator", align 8
  %67 = alloca %"class.std::move_iterator", align 8
  %68 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %66, i32 0, i32 0
  store i64* %0, i64** %68, align 8
  %69 = bitcast %"class.std::move_iterator"* %67 to i8*
  %70 = bitcast %"class.std::move_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %67, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = call i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64* %72)
  store i32 454504159, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt13__copy_move_aILb1EPxS0_ET1_T0_S2_S1_(i64*, i64*, i64*) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64* %1, i64** %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64* %8, i64* %9, i64* %10)
  ret i64* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIxEEPT_PKS3_S6_S4_(i64*, i64*, i64*) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64, align 8
  store i64* %0, i64** %5, align 8
  store i64* %1, i64** %6, align 8
  store i64* %2, i64** %7, align 8
  %9 = load i64*, i64** %6, align 8
  %10 = load i64*, i64** %5, align 8
  %11 = ptrtoint i64* %9 to i64
  %12 = ptrtoint i64* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 1396017859, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1396017859, label %22
    i32 -2076755566, label %26
    i32 627001946, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -2076755566, i32 627001946
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load i64*, i64** %7, align 8
  %28 = bitcast i64* %27 to i8*
  %29 = load i64*, i64** %5, align 8
  %30 = bitcast i64* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 8, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 8, i1 false)
  store i32 627001946, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load i64*, i64** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds i64, i64* %34, i64 %35
  ret i64* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #10

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseISt13move_iteratorIPxELb1EE7_S_baseES2_(i64*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"* %2)
  ret i64* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNKSt13move_iteratorIPxE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPxEC2ES0_(%"class.std::move_iterator"*, i64*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.315
  %6 = load i32, i32* @y.316
  %7 = sub i32 %5, -759963225
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -759963225
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2111542566, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2111542566, label %19
    i32 -2054926372, label %27
    i32 -639326715, label %60
    i32 1560413202, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2054926372, i32 1560413202
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca i64*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store i64* %1, i64** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load i64*, i64** %29, align 8
  store i64* %32, i64** %31, align 8
  %33 = load i32, i32* @x.315
  %34 = load i32, i32* @y.316
  %35 = sub i32 %33, 1494350828
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 1494350828
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -639326715, i32 1560413202
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator"*, align 8
  %63 = alloca i64*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %62, align 8
  store i64* %1, i64** %63, align 8
  %64 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %64, i32 0, i32 0
  %66 = load i64*, i64** %63, align 8
  store i64* %66, i64** %65, align 8
  store i32 -2054926372, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %4 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Vector_base.24"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Vector_base.24"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.23"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.319
  %4 = load i32, i32* @y.320
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %341

; <label>:28:                                     ; preds = %2, %341
  %29 = alloca %"class.std::vector.23"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %29, align 8
  store i64 %1, i64* %30, align 8
  %37 = load %"class.std::vector.23"*, %"class.std::vector.23"** %29, align 8
  %38 = load i64, i64* %30, align 8
  %39 = icmp ne i64 %38, 0
  %40 = load i32, i32* @x.319
  %41 = load i32, i32* @y.320
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %341

; <label>:65:                                     ; preds = %28
  br i1 %39, label %66, label %301

; <label>:66:                                     ; preds = %65
  %67 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68, i32 0, i32 2
  %70 = load i32*, i32** %69, align 8
  %71 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load i32*, i32** %73, align 8
  %75 = ptrtoint i32* %70 to i64
  %76 = ptrtoint i32* %74 to i64
  %77 = sub i64 %75, -6000872203240515400
  %78 = sub i64 %77, %76
  %79 = add i64 %78, -6000872203240515400
  %80 = sub i64 %75, %76
  %81 = sdiv exact i64 %79, 4
  %82 = load i64, i64* %30, align 8
  %83 = icmp uge i64 %81, %82
  br i1 %83, label %84, label %96

; <label>:84:                                     ; preds = %66
  %85 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %86, i32 0, i32 1
  %88 = load i32*, i32** %87, align 8
  %89 = load i64, i64* %30, align 8
  %90 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %91 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %90) #3
  %92 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %88, i64 %89, %"class.std::allocator.25"* dereferenceable(1) %91)
  %93 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %94, i32 0, i32 1
  store i32* %92, i32** %95, align 8
  br label %300

; <label>:96:                                     ; preds = %66
  %97 = load i32, i32* @x.319
  %98 = load i32, i32* @y.320
  %99 = add i32 %97, 1711025364
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, 1711025364
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %353

; <label>:111:                                    ; preds = %96, %353
  %112 = load i64, i64* %30, align 8
  %113 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.23"* %37, i64 %112, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %113, i64* %31, align 8
  %114 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %37) #3
  store i64 %114, i64* %32, align 8
  %115 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %116 = load i64, i64* %31, align 8
  %117 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"* %115, i64 %116)
  store i32* %117, i32** %33, align 8
  %118 = load i32*, i32** %33, align 8
  store i32* %118, i32** %34, align 8
  %119 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %120 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %119, i32 0, i32 0
  %121 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %120, i32 0, i32 0
  %122 = load i32*, i32** %121, align 8
  %123 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %123, i32 0, i32 0
  %125 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %124, i32 0, i32 1
  %126 = load i32*, i32** %125, align 8
  %127 = load i32*, i32** %33, align 8
  %128 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %129 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %128) #3
  %130 = load i32, i32* @x.319
  %131 = load i32, i32* @y.320
  %132 = sub i32 %130, 770908664
  %133 = sub i32 %132, 1
  %134 = add i32 %133, 770908664
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  br i1 %154, label %156, label %353

; <label>:156:                                    ; preds = %111
  %157 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %122, i32* %126, i32* %127, %"class.std::allocator.25"* dereferenceable(1) %129)
          to label %158 unwind label %207

; <label>:158:                                    ; preds = %156
  %159 = load i32, i32* @x.319
  %160 = load i32, i32* @y.320
  %161 = sub i32 %159, 470873388
  %162 = sub i32 %161, 1
  %163 = add i32 %162, 470873388
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 false, true
  %172 = and i1 %169, false
  %173 = and i1 %167, %171
  %174 = and i1 %170, false
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 false, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  br i1 %183, label %185, label %372

; <label>:185:                                    ; preds = %158, %372
  store i32* %157, i32** %34, align 8
  %186 = load i32*, i32** %34, align 8
  %187 = load i64, i64* %30, align 8
  %188 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %189 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %188) #3
  %190 = load i32, i32* @x.319
  %191 = load i32, i32* @y.320
  %192 = add i32 %190, -236987715
  %193 = sub i32 %192, 1
  %194 = sub i32 %193, -236987715
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %372

; <label>:204:                                    ; preds = %185
  %205 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %186, i64 %187, %"class.std::allocator.25"* dereferenceable(1) %189)
          to label %206 unwind label %207

; <label>:206:                                    ; preds = %204
  store i32* %205, i32** %34, align 8
  br label %256

; <label>:207:                                    ; preds = %204, %156
  %208 = landingpad { i8*, i32 }
          catch i8* null
  %209 = extractvalue { i8*, i32 } %208, 0
  store i8* %209, i8** %35, align 8
  %210 = extractvalue { i8*, i32 } %208, 1
  store i32 %210, i32* %36, align 4
  br label %211

; <label>:211:                                    ; preds = %207
  %212 = load i32, i32* @x.319
  %213 = load i32, i32* @y.320
  %214 = sub i32 0, 1
  %215 = add i32 %212, %214
  %216 = sub i32 %212, 1
  %217 = mul i32 %212, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %213, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %377

; <label>:225:                                    ; preds = %211, %377
  %226 = load i8*, i8** %35, align 8
  %227 = call i8* @__cxa_begin_catch(i8* %226) #3
  %228 = load i32*, i32** %33, align 8
  %229 = load i32*, i32** %34, align 8
  %230 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %231 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %230) #3
  %232 = load i32, i32* @x.319
  %233 = load i32, i32* @y.320
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %377

; <label>:245:                                    ; preds = %225
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %228, i32* %229, %"class.std::allocator.25"* dereferenceable(1) %231)
          to label %246 unwind label %251

; <label>:246:                                    ; preds = %245
  %247 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %248 = load i32*, i32** %33, align 8
  %249 = load i64, i64* %31, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %247, i32* %248, i64 %249)
          to label %250 unwind label %251

; <label>:250:                                    ; preds = %246
  invoke void @__cxa_rethrow() #12
          to label %340 unwind label %251

; <label>:251:                                    ; preds = %250, %246, %245
  %252 = landingpad { i8*, i32 }
          cleanup
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %35, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %255 unwind label %307

; <label>:255:                                    ; preds = %251
  br label %302

; <label>:256:                                    ; preds = %206
  %257 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %258 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %257, i32 0, i32 0
  %259 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %258, i32 0, i32 0
  %260 = load i32*, i32** %259, align 8
  %261 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %262 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %261, i32 0, i32 0
  %263 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %262, i32 0, i32 1
  %264 = load i32*, i32** %263, align 8
  %265 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %266 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %265) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %260, i32* %264, %"class.std::allocator.25"* dereferenceable(1) %266)
  %267 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %268 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %269 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %268, i32 0, i32 0
  %270 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %269, i32 0, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %273, i32 0, i32 2
  %275 = load i32*, i32** %274, align 8
  %276 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %277 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %276, i32 0, i32 0
  %278 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %277, i32 0, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = ptrtoint i32* %275 to i64
  %281 = ptrtoint i32* %279 to i64
  %282 = sub i64 0, %281
  %283 = add i64 %280, %282
  %284 = sub i64 %280, %281
  %285 = sdiv exact i64 %283, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %267, i32* %271, i64 %285)
  %286 = load i32*, i32** %33, align 8
  %287 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %288 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %287, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %288, i32 0, i32 0
  store i32* %286, i32** %289, align 8
  %290 = load i32*, i32** %34, align 8
  %291 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %292, i32 0, i32 1
  store i32* %290, i32** %293, align 8
  %294 = load i32*, i32** %33, align 8
  %295 = load i64, i64* %31, align 8
  %296 = getelementptr inbounds i32, i32* %294, i64 %295
  %297 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %298, i32 0, i32 2
  store i32* %296, i32** %299, align 8
  br label %300

; <label>:300:                                    ; preds = %256, %84
  br label %301

; <label>:301:                                    ; preds = %300, %65
  ret void

; <label>:302:                                    ; preds = %255
  %303 = load i8*, i8** %35, align 8
  %304 = load i32, i32* %36, align 4
  %305 = insertvalue { i8*, i32 } undef, i8* %303, 0
  %306 = insertvalue { i8*, i32 } %305, i32 %304, 1
  resume { i8*, i32 } %306

; <label>:307:                                    ; preds = %251
  %308 = load i32, i32* @x.319
  %309 = load i32, i32* @y.320
  %310 = sub i32 %308, -618539696
  %311 = sub i32 %310, 1
  %312 = add i32 %311, -618539696
  %313 = sub i32 %308, 1
  %314 = mul i32 %308, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %309, 10
  %318 = and i1 %316, %317
  %319 = xor i1 %316, %317
  %320 = or i1 %318, %319
  %321 = or i1 %316, %317
  br i1 %320, label %322, label %384

; <label>:322:                                    ; preds = %307, %384
  %323 = landingpad { i8*, i32 }
          catch i8* null
  %324 = extractvalue { i8*, i32 } %323, 0
  call void @__clang_call_terminate(i8* %324) #11
  %325 = load i32, i32* @x.319
  %326 = load i32, i32* @y.320
  %327 = sub i32 %325, 1678794724
  %328 = sub i32 %327, 1
  %329 = add i32 %328, 1678794724
  %330 = sub i32 %325, 1
  %331 = mul i32 %325, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %326, 10
  %335 = and i1 %333, %334
  %336 = xor i1 %333, %334
  %337 = or i1 %335, %336
  %338 = or i1 %333, %334
  br i1 %337, label %339, label %384

; <label>:339:                                    ; preds = %322
  unreachable

; <label>:340:                                    ; preds = %250
  unreachable

; <label>:341:                                    ; preds = %28, %2
  %342 = alloca %"class.std::vector.23"*, align 8
  %343 = alloca i64, align 8
  %344 = alloca i64, align 8
  %345 = alloca i64, align 8
  %346 = alloca i32*, align 8
  %347 = alloca i32*, align 8
  %348 = alloca i8*
  %349 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %342, align 8
  store i64 %1, i64* %343, align 8
  %350 = load %"class.std::vector.23"*, %"class.std::vector.23"** %342, align 8
  %351 = load i64, i64* %343, align 8
  %352 = icmp ne i64 %351, 0
  br label %28

; <label>:353:                                    ; preds = %111, %96
  %354 = load i64, i64* %30, align 8
  %355 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.23"* %37, i64 %354, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %355, i64* %31, align 8
  %356 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %37) #3
  store i64 %356, i64* %32, align 8
  %357 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %358 = load i64, i64* %31, align 8
  %359 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"* %357, i64 %358)
  store i32* %359, i32** %33, align 8
  %360 = load i32*, i32** %33, align 8
  store i32* %360, i32** %34, align 8
  %361 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %362, i32 0, i32 0
  %364 = load i32*, i32** %363, align 8
  %365 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %366, i32 0, i32 1
  %368 = load i32*, i32** %367, align 8
  %369 = load i32*, i32** %33, align 8
  %370 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %371 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %370) #3
  br label %111

; <label>:372:                                    ; preds = %185, %158
  store i32* %157, i32** %34, align 8
  %373 = load i32*, i32** %34, align 8
  %374 = load i64, i64* %30, align 8
  %375 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %376 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %375) #3
  br label %185

; <label>:377:                                    ; preds = %225, %211
  %378 = load i8*, i8** %35, align 8
  %379 = call i8* @__cxa_begin_catch(i8* %378) #3
  %380 = load i32*, i32** %33, align 8
  %381 = load i32*, i32** %34, align 8
  %382 = bitcast %"class.std::vector.23"* %37 to %"struct.std::_Vector_base.24"*
  %383 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %382) #3
  br label %225

; <label>:384:                                    ; preds = %322, %307
  %385 = landingpad { i8*, i32 }
          catch i8* null
  %386 = extractvalue { i8*, i32 } %385, 0
  call void @__clang_call_terminate(i8* %386) #11
  br label %322
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.23"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.23"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %12 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.25"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i32*, i32** %4, align 8
  %15 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.25"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.23"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.23"*
  %8 = alloca %"class.std::vector.23"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  store %"class.std::vector.23"* %13, %"class.std::vector.23"** %7
  %14 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %15 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.23"* %14) #3
  %16 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %16) #3
  %18 = sub i64 %15, 3621874216919180488
  %19 = sub i64 %18, %17
  %20 = add i64 %19, 3621874216919180488
  %21 = sub i64 %15, %17
  store i64 %20, i64* %6
  %22 = load i64, i64* %9, align 8
  store i64 %22, i64* %5
  %23 = alloca i32
  store i32 410927480, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %99
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 410927480, label %28
    i32 1978445936, label %33
    i32 730686876, label %35
    i32 773860325, label %51
    i32 -1538446010, label %57
    i32 -2072046156, label %73
    i32 322145102, label %90
    i32 -784091967, label %92
    i32 1165118773, label %94
    i32 12865239, label %96
  ]

; <label>:27:                                     ; preds = %25
  br label %99

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %6
  %30 = load volatile i64, i64* %5
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 1978445936, i32 730686876
  store i32 %32, i32* %23
  br label %99

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #12
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %37 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %36) #3
  %38 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %39 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %38) #3
  store i64 %39, i64* %12, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %41 = load i64, i64* %40, align 8
  %42 = sub i64 %37, -7235636187511380635
  %43 = add i64 %42, %41
  %44 = add i64 %43, -7235636187511380635
  %45 = add i64 %37, %41
  store i64 %44, i64* %11, align 8
  %46 = load i64, i64* %11, align 8
  %47 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %48 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 -1538446010, i32 773860325
  store i32 %50, i32* %23
  br label %99

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %11, align 8
  %53 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %54 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.23"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 -1538446010, i32 -784091967
  store i32 %56, i32* %23
  br label %99

; <label>:57:                                     ; preds = %25
  %58 = load i32, i32* @x.325
  %59 = load i32, i32* @y.326
  %60 = add i32 %58, -632913026
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -632913026
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -2072046156, i32 12865239
  store i32 %72, i32* %23
  br label %99

; <label>:73:                                     ; preds = %25
  %74 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %75 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.23"* %74) #3
  store i64 %75, i64* %4
  %76 = load i32, i32* @x.325
  %77 = load i32, i32* @y.326
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 322145102, i32 12865239
  store i32 %89, i32* %23
  br label %99

; <label>:90:                                     ; preds = %25
  store i32 1165118773, i32* %23
  %91 = load volatile i64, i64* %4
  store i64 %91, i64* %24
  br label %99

; <label>:92:                                     ; preds = %25
  %93 = load i64, i64* %11, align 8
  store i32 1165118773, i32* %23
  store i64 %93, i64* %24
  br label %99

; <label>:94:                                     ; preds = %25
  %95 = load i64, i64* %24
  ret i64 %95

; <label>:96:                                     ; preds = %25
  %97 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %7
  %98 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.23"* %97) #3
  store i32 -2072046156, i32* %23
  br label %99

; <label>:99:                                     ; preds = %96, %92, %90, %73, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.24"*
  %6 = alloca %"struct.std::_Vector_base.24"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %6, align 8
  store %"struct.std::_Vector_base.24"* %8, %"struct.std::_Vector_base.24"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1153473414, i32* %10
  %11 = alloca i32*
  br label %12

; <label>:12:                                     ; preds = %2, %106
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1153473414, label %15
    i32 2144937908, label %19
    i32 -1862293596, label %25
    i32 -1977236662, label %40
    i32 -591627590, label %68
    i32 -2076878987, label %69
    i32 1387468093, label %86
    i32 -1925926883, label %102
    i32 -822316371, label %104
    i32 -1981630189, label %105
  ]

; <label>:14:                                     ; preds = %12
  br label %106

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 2144937908, i32 -1862293596
  store i32 %18, i32* %10
  br label %106

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.25"*
  %23 = load i64, i64* %7, align 8
  %24 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.25"* dereferenceable(1) %22, i64 %23)
  store i32 -2076878987, i32* %10
  store i32* %24, i32** %11
  br label %106

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.327
  %27 = load i32, i32* @y.328
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -1977236662, i32 -822316371
  store i32 %39, i32* %10
  br label %106

; <label>:40:                                     ; preds = %12
  %41 = load i32, i32* @x.327
  %42 = load i32, i32* @y.328
  %43 = add i32 %41, -1851907665
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1851907665
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -591627590, i32 -822316371
  store i32 %67, i32* %10
  br label %106

; <label>:68:                                     ; preds = %12
  store i32 -2076878987, i32* %10
  store i32* null, i32** %11
  br label %106

; <label>:69:                                     ; preds = %12
  %70 = load i32*, i32** %11
  store i32* %70, i32** %3
  %71 = load i32, i32* @x.327
  %72 = load i32, i32* @y.328
  %73 = add i32 %71, 53858674
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 53858674
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 1387468093, i32 -1981630189
  store i32 %85, i32* %10
  br label %106

; <label>:86:                                     ; preds = %12
  %87 = load i32, i32* @x.327
  %88 = load i32, i32* @y.328
  %89 = add i32 %87, 2127515746
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 2127515746
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 -1925926883, i32 -1981630189
  store i32 %101, i32* %10
  br label %106

; <label>:102:                                    ; preds = %12
  %103 = load volatile i32*, i32** %3
  ret i32* %103

; <label>:104:                                    ; preds = %12
  store i32 -1977236662, i32* %10
  br label %106

; <label>:105:                                    ; preds = %12
  store i32 1387468093, i32* %10
  br label %106

; <label>:106:                                    ; preds = %105, %104, %86, %69, %68, %40, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  %9 = alloca %"class.std::move_iterator.29", align 8
  %10 = alloca %"class.std::move_iterator.29", align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %11 = load i32*, i32** %5, align 8
  %12 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %9, i32 0, i32 0
  store i32* %12, i32** %13, align 8
  %14 = load i32*, i32** %6, align 8
  %15 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %10, i32 0, i32 0
  store i32* %15, i32** %16, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %10, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %20, i32* %22, i32* %17, %"class.std::allocator.25"* dereferenceable(1) %18)
  ret i32* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 -1913863537, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %32
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1913863537, label %16
    i32 266803561, label %20
    i32 -772355379, label %23
    i32 -1153511684, label %30
  ]

; <label>:15:                                     ; preds = %13
  br label %32

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 266803561, i32 -1153511684
  store i32 %19, i32* %12
  br label %32

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* %7, align 4
  %22 = load i32*, i32** %4, align 8
  store i32 %21, i32* %22, align 4
  store i32 -772355379, i32* %12
  br label %32

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = sub i64 0, -1
  %26 = sub i64 %24, %25
  %27 = add i64 %24, -1
  store i64 %26, i64* %8, align 8
  %28 = load i32*, i32** %4, align 8
  %29 = getelementptr inbounds i32, i32* %28, i32 1
  store i32* %29, i32** %4, align 8
  store i32 -1913863537, i32* %12
  br label %32

; <label>:30:                                     ; preds = %13
  %31 = load i32*, i32** %4, align 8
  ret i32* %31

; <label>:32:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.339
  %6 = load i32, i32* @y.340
  %7 = add i32 %5, -212727303
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -212727303
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1510189314, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1510189314, label %19
    i32 1818729688, label %27
    i32 -1304493783, label %58
    i32 -1048980158, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1818729688, i32 -1048980158
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %29)
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.339
  %32 = load i32, i32* @y.340
  %33 = add i32 %31, -1075628582
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1075628582
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1304493783, i32 -1048980158
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i32*, align 8
  store i32* %0, i32** %61, align 8
  %62 = load i32*, i32** %61, align 8
  %63 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %62)
  store i32 1818729688, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.23"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %4 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Vector_base.24"*
  %5 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.25"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.25"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  %4 = bitcast %"class.std::allocator.25"* %3 to %"class.__gnu_cxx::new_allocator.26"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %2, align 8
  %3 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.25"*
  ret %"class.std::allocator.25"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.25"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.351
  %7 = load i32, i32* @y.352
  %8 = sub i32 %6, 1529875728
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1529875728
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 566757765, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 566757765, label %20
    i32 1402247936, label %40
    i32 625321441, label %74
    i32 -1625194147, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1402247936, i32 -1625194147
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.25"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %41, align 8
  %44 = bitcast %"class.std::allocator.25"* %43 to %"class.__gnu_cxx::new_allocator.26"*
  %45 = load i64, i64* %42, align 8
  %46 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %44, i64 %45, i8* null)
  store i32* %46, i32** %3
  %47 = load i32, i32* @x.351
  %48 = load i32, i32* @y.352
  %49 = sub i32 %47, 63265049
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 63265049
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 625321441, i32 -1625194147
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile i32*, i32** %3
  ret i32* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.25"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %77, align 8
  store i64 %1, i64* %78, align 8
  %79 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %77, align 8
  %80 = bitcast %"class.std::allocator.25"* %79 to %"class.__gnu_cxx::new_allocator.26"*
  %81 = load i64, i64* %78, align 8
  %82 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"* %80, i64 %81, i8* null)
  store i32 1402247936, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.26"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.353
  %9 = load i32, i32* @y.354
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -2060080566, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2060080566, label %21
    i32 -432099788, label %41
    i32 -391599715, label %77
    i32 1516755711, label %80
    i32 265759359, label %81
    i32 -177801287, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -432099788, i32 -177801287
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.353
  %52 = load i32, i32* @y.354
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -391599715, i32 -177801287
  store i32 %76, i32* %17
  br label %95

; <label>:77:                                     ; preds = %18
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 1516755711, i32 265759359
  store i32 %79, i32* %17
  br label %95

; <label>:80:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:81:                                     ; preds = %18
  %82 = load volatile i64*, i64** %5
  %83 = load i64, i64* %82, align 8
  %84 = mul i64 %83, 4
  %85 = call i8* @_Znwm(i64 %84)
  %86 = bitcast i8* %85 to i32*
  ret i32* %86

; <label>:87:                                     ; preds = %18
  %88 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %89 = alloca i64, align 8
  %90 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %88, align 8
  store i64 %1, i64* %89, align 8
  store i8* %2, i8** %90, align 8
  %91 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %88, align 8
  %92 = load i64, i64* %89, align 8
  %93 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.26"* %91) #3
  %94 = icmp ugt i64 %92, %93
  store i32 -432099788, i32* %17
  br label %95

; <label>:95:                                     ; preds = %87, %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.29", align 8
  %6 = alloca %"class.std::move_iterator.29", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  %9 = alloca %"class.std::move_iterator.29", align 8
  %10 = alloca %"class.std::move_iterator.29", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.29"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.29"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.29"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.29", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.29"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.359
  %8 = load i32, i32* @y.360
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 777101077, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 777101077, label %20
    i32 932423278, label %28
    i32 343226146, label %74
    i32 -304102613, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 932423278, i32 -304102613
  store i32 %27, i32* %16
  br label %95

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.29", align 8
  %30 = alloca %"class.std::move_iterator.29", align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.std::move_iterator.29", align 8
  %34 = alloca %"class.std::move_iterator.29", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %29, i32 0, i32 0
  store i32* %0, i32** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %30, i32 0, i32 0
  store i32* %1, i32** %36, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %37 = bitcast %"class.std::move_iterator.29"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.29"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.29"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.29"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load i32*, i32** %31, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %33, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %34, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %43, i32* %45, i32* %41)
  store i32* %46, i32** %4
  %47 = load i32, i32* @x.359
  %48 = load i32, i32* @y.360
  %49 = add i32 %47, -2127744960
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -2127744960
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 343226146, i32 -304102613
  store i32 %73, i32* %16
  br label %95

; <label>:74:                                     ; preds = %17
  %75 = load volatile i32*, i32** %4
  ret i32* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::move_iterator.29", align 8
  %78 = alloca %"class.std::move_iterator.29", align 8
  %79 = alloca i32*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.29", align 8
  %82 = alloca %"class.std::move_iterator.29", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %77, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %78, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.29"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.29"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.29"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.29"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load i32*, i32** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %81, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %91, i32* %93, i32* %89)
  store i32 932423278, i32* %16
  br label %95

; <label>:95:                                     ; preds = %76, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.29", align 8
  %5 = alloca %"class.std::move_iterator.29", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.29", align 8
  %8 = alloca %"class.std::move_iterator.29", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.29"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.29"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.29"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.29", align 8
  %5 = alloca %"class.std::move_iterator.29", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.29", align 8
  %8 = alloca %"class.std::move_iterator.29", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.29"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.29"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %14)
  %16 = bitcast %"class.std::move_iterator.29"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.29"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %15, i32* %20, i32* %21)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.29", align 8
  %3 = alloca %"class.std::move_iterator.29", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.29"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.29"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.369
  %8 = load i32, i32* @y.370
  %9 = add i32 %7, 242616186
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 242616186
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1726151528, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1726151528, label %21
    i32 1362672444, label %29
    i32 -342659056, label %53
    i32 -1103389344, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1362672444, i32 -1103389344
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca i8, align 1
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i32*, i32** %32, align 8
  %37 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %34, i32* %35, i32* %36)
  store i32* %37, i32** %4
  %38 = load i32, i32* @x.369
  %39 = load i32, i32* @y.370
  %40 = sub i32 %38, -1935686892
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1935686892
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -342659056, i32 -1103389344
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile i32*, i32** %4
  ret i32* %54

; <label>:55:                                     ; preds = %18
  %56 = alloca i32*, align 8
  %57 = alloca i32*, align 8
  %58 = alloca i32*, align 8
  %59 = alloca i8, align 1
  store i32* %0, i32** %56, align 8
  store i32* %1, i32** %57, align 8
  store i32* %2, i32** %58, align 8
  store i8 1, i8* %59, align 1
  %60 = load i32*, i32** %56, align 8
  %61 = load i32*, i32** %57, align 8
  %62 = load i32*, i32** %58, align 8
  %63 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %60, i32* %61, i32* %62)
  store i32 1362672444, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.371
  %11 = load i32, i32* @y.372
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 757193262, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %176
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 757193262, label %23
    i32 -852217344, label %43
    i32 1753969011, label %79
    i32 -1361141296, label %82
    i32 255738183, label %92
    i32 -1772340174, label %98
  ]

; <label>:22:                                     ; preds = %20
  br label %176

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -852217344, i32 -1772340174
  store i32 %42, i32* %19
  br label %176

; <label>:43:                                     ; preds = %20
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %7
  %45 = alloca i32*, align 8
  %46 = alloca i32*, align 8
  store i32** %46, i32*** %6
  %47 = alloca i64, align 8
  store i64* %47, i64** %5
  %48 = load volatile i32**, i32*** %7
  store i32* %0, i32** %48, align 8
  store i32* %1, i32** %45, align 8
  %49 = load volatile i32**, i32*** %6
  store i32* %2, i32** %49, align 8
  %50 = load i32*, i32** %45, align 8
  %51 = load volatile i32**, i32*** %7
  %52 = load i32*, i32** %51, align 8
  %53 = ptrtoint i32* %50 to i64
  %54 = ptrtoint i32* %52 to i64
  %55 = add i64 %53, -6494759437470988783
  %56 = sub i64 %55, %54
  %57 = sub i64 %56, -6494759437470988783
  %58 = sub i64 %53, %54
  %59 = sdiv exact i64 %57, 4
  %60 = load volatile i64*, i64** %5
  store i64 %59, i64* %60, align 8
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = icmp ne i64 %62, 0
  store i1 %63, i1* %4
  %64 = load i32, i32* @x.371
  %65 = load i32, i32* @y.372
  %66 = add i32 %64, 597275540
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 597275540
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 1753969011, i32 -1772340174
  store i32 %78, i32* %19
  br label %176

; <label>:79:                                     ; preds = %20
  %80 = load volatile i1, i1* %4
  %81 = select i1 %80, i32 -1361141296, i32 255738183
  store i32 %81, i32* %19
  br label %176

; <label>:82:                                     ; preds = %20
  %83 = load volatile i32**, i32*** %6
  %84 = load i32*, i32** %83, align 8
  %85 = bitcast i32* %84 to i8*
  %86 = load volatile i32**, i32*** %7
  %87 = load i32*, i32** %86, align 8
  %88 = bitcast i32* %87 to i8*
  %89 = load volatile i64*, i64** %5
  %90 = load i64, i64* %89, align 8
  %91 = mul i64 4, %90
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %85, i8* %88, i64 %91, i32 4, i1 false)
  store i32 255738183, i32* %19
  br label %176

; <label>:92:                                     ; preds = %20
  %93 = load volatile i32**, i32*** %6
  %94 = load i32*, i32** %93, align 8
  %95 = load volatile i64*, i64** %5
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds i32, i32* %94, i64 %96
  ret i32* %97

; <label>:98:                                     ; preds = %20
  %99 = alloca i32*, align 8
  %100 = alloca i32*, align 8
  %101 = alloca i32*, align 8
  %102 = alloca i64, align 8
  store i32* %0, i32** %99, align 8
  store i32* %1, i32** %100, align 8
  store i32* %2, i32** %101, align 8
  %103 = load i32*, i32** %100, align 8
  %104 = load i32*, i32** %99, align 8
  %105 = ptrtoint i32* %103 to i64
  %106 = ptrtoint i32* %104 to i64
  %107 = shl i64 %105, %106
  %108 = sub i64 0, 453740546831264739
  %109 = sub i64 %108, %105
  %110 = add i64 %109, 453740546831264739
  %111 = sub i64 0, %105
  %112 = sub i64 0, %106
  %113 = sub i64 %110, %112
  %114 = add i64 %110, %106
  %115 = sub i64 0, %105
  %116 = add i64 0, %115
  %117 = sub i64 0, %105
  %118 = sub i64 0, %106
  %119 = sub i64 %116, %118
  %120 = add i64 %116, %106
  %121 = add i64 0, -8932000110830764228
  %122 = sub i64 %121, %105
  %123 = sub i64 %122, -8932000110830764228
  %124 = sub i64 0, %105
  %125 = sub i64 0, %106
  %126 = sub i64 %123, %125
  %127 = add i64 %123, %106
  %128 = shl i64 %105, %106
  %129 = sub i64 %105, -574217477731068351
  %130 = sub i64 %129, %106
  %131 = add i64 %130, -574217477731068351
  %132 = sub i64 %105, %106
  %133 = mul i64 %131, %106
  %134 = add i64 0, 242040254359716464
  %135 = sub i64 %134, %105
  %136 = sub i64 %135, 242040254359716464
  %137 = sub i64 0, %105
  %138 = add i64 %136, -5120413755553390423
  %139 = add i64 %138, %106
  %140 = sub i64 %139, -5120413755553390423
  %141 = add i64 %136, %106
  %142 = sub i64 0, %106
  %143 = add i64 %105, %142
  %144 = sub i64 %105, %106
  %145 = sub i64 0, 1893354362217257887
  %146 = sub i64 %145, %143
  %147 = add i64 %146, 1893354362217257887
  %148 = sub i64 0, %143
  %149 = sub i64 %147, -1032939830372714063
  %150 = add i64 %149, 4
  %151 = add i64 %150, -1032939830372714063
  %152 = add i64 %147, 4
  %153 = shl i64 %143, 4
  %154 = shl i64 %143, 4
  %155 = sub i64 0, 5487237729538283340
  %156 = sub i64 %155, %143
  %157 = add i64 %156, 5487237729538283340
  %158 = sub i64 0, %143
  %159 = add i64 %157, -5804255557751452075
  %160 = add i64 %159, 4
  %161 = sub i64 %160, -5804255557751452075
  %162 = add i64 %157, 4
  %163 = shl i64 %143, 4
  %164 = add i64 0, 5678168403628605622
  %165 = sub i64 %164, %143
  %166 = sub i64 %165, 5678168403628605622
  %167 = sub i64 0, %143
  %168 = sub i64 0, %166
  %169 = sub i64 0, 4
  %170 = add i64 %168, %169
  %171 = sub i64 0, %170
  %172 = add i64 %166, 4
  %173 = sdiv exact i64 %143, 4
  store i64 %173, i64* %102, align 8
  %174 = load i64, i64* %102, align 8
  %175 = icmp ne i64 %174, 0
  store i32 -852217344, i32* %19
  br label %176

; <label>:176:                                    ; preds = %98, %82, %79, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.29", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.29"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.29"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.375
  %6 = load i32, i32* @y.376
  %7 = sub i32 %5, 647287996
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 647287996
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 490013951, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 490013951, label %19
    i32 2019834421, label %39
    i32 -150486987, label %71
    i32 1671836878, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2019834421, i32 1671836878
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.29"*, align 8
  store %"class.std::move_iterator.29"* %0, %"class.std::move_iterator.29"** %40, align 8
  %41 = load %"class.std::move_iterator.29"*, %"class.std::move_iterator.29"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.375
  %45 = load i32, i32* @y.376
  %46 = sub i32 %44, 1289827664
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1289827664
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -150486987, i32 1671836878
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i32*, i32** %2
  ret i32* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::move_iterator.29"*, align 8
  store %"class.std::move_iterator.29"* %0, %"class.std::move_iterator.29"** %74, align 8
  %75 = load %"class.std::move_iterator.29"*, %"class.std::move_iterator.29"** %74, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %75, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  store i32 2019834421, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.29"*, i32*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.377
  %6 = load i32, i32* @y.378
  %7 = sub i32 %5, -1314420110
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1314420110
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -866082763, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -866082763, label %19
    i32 1473996303, label %27
    i32 -1417471198, label %60
    i32 -1629359256, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1473996303, i32 -1629359256
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.29"*, align 8
  %29 = alloca i32*, align 8
  store %"class.std::move_iterator.29"* %0, %"class.std::move_iterator.29"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.std::move_iterator.29"*, %"class.std::move_iterator.29"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %30, i32 0, i32 0
  %32 = load i32*, i32** %29, align 8
  store i32* %32, i32** %31, align 8
  %33 = load i32, i32* @x.377
  %34 = load i32, i32* @y.378
  %35 = add i32 %33, -714036183
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -714036183
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1417471198, i32 -1629359256
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.29"*, align 8
  %63 = alloca i32*, align 8
  store %"class.std::move_iterator.29"* %0, %"class.std::move_iterator.29"** %62, align 8
  store i32* %1, i32** %63, align 8
  %64 = load %"class.std::move_iterator.29"*, %"class.std::move_iterator.29"** %62, align 8
  %65 = getelementptr inbounds %"class.std::move_iterator.29", %"class.std::move_iterator.29"* %64, i32 0, i32 0
  %66 = load i32*, i32** %63, align 8
  store i32* %66, i32** %65, align 8
  store i32 1473996303, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.23"*, %"class.std::vector.23"** %10, align 8
  %12 = ptrtoint %"class.std::vector.23"* %7 to i64
  %13 = ptrtoint %"class.std::vector.23"* %11 to i64
  %14 = add i64 %12, 3747269765026571125
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, 3747269765026571125
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE17_M_default_appendEm(%"class.std::vector.18"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca %"class.std::vector.23"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %350

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.381
  %16 = load i32, i32* @y.382
  %17 = add i32 %15, -2045558727
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, -2045558727
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %360

; <label>:29:                                     ; preds = %14, %360
  %30 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %31, i32 0, i32 2
  %33 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  %34 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::vector.23"*, %"class.std::vector.23"** %36, align 8
  %38 = ptrtoint %"class.std::vector.23"* %33 to i64
  %39 = ptrtoint %"class.std::vector.23"* %37 to i64
  %40 = add i64 %38, -6679548801578324025
  %41 = sub i64 %40, %39
  %42 = sub i64 %41, -6679548801578324025
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 24
  %45 = load i64, i64* %4, align 8
  %46 = icmp uge i64 %44, %45
  %47 = load i32, i32* @x.381
  %48 = load i32, i32* @y.382
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %360

; <label>:60:                                     ; preds = %29
  br i1 %46, label %61, label %73

; <label>:61:                                     ; preds = %60
  %62 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %63, i32 0, i32 1
  %65 = load %"class.std::vector.23"*, %"class.std::vector.23"** %64, align 8
  %66 = load i64, i64* %4, align 8
  %67 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %68 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %67) #3
  %69 = call %"class.std::vector.23"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.23"* %65, i64 %66, %"class.std::allocator.20"* dereferenceable(1) %68)
  %70 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %71, i32 0, i32 1
  store %"class.std::vector.23"* %69, %"class.std::vector.23"** %72, align 8
  br label %349

; <label>:73:                                     ; preds = %60
  %74 = load i32, i32* @x.381
  %75 = load i32, i32* @y.382
  %76 = add i32 %74, -345662828
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -345662828
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 true, true
  %87 = and i1 %84, true
  %88 = and i1 %82, %86
  %89 = and i1 %85, true
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 true, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %433

; <label>:100:                                    ; preds = %73, %433
  %101 = load i64, i64* %4, align 8
  %102 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %11, i64 %101, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %102, i64* %5, align 8
  %103 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %11) #3
  store i64 %103, i64* %6, align 8
  %104 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %105 = load i64, i64* %5, align 8
  %106 = call %"class.std::vector.23"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %104, i64 %105)
  store %"class.std::vector.23"* %106, %"class.std::vector.23"** %7, align 8
  %107 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  store %"class.std::vector.23"* %107, %"class.std::vector.23"** %8, align 8
  %108 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %109, i32 0, i32 0
  %111 = load %"class.std::vector.23"*, %"class.std::vector.23"** %110, align 8
  %112 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %113, i32 0, i32 1
  %115 = load %"class.std::vector.23"*, %"class.std::vector.23"** %114, align 8
  %116 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %117 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %118 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %117) #3
  %119 = load i32, i32* @x.381
  %120 = load i32, i32* @y.382
  %121 = sub i32 %119, -926542634
  %122 = sub i32 %121, 1
  %123 = add i32 %122, -926542634
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %433

; <label>:145:                                    ; preds = %100
  %146 = invoke %"class.std::vector.23"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.23"* %111, %"class.std::vector.23"* %115, %"class.std::vector.23"* %116, %"class.std::allocator.20"* dereferenceable(1) %118)
          to label %147 unwind label %182

; <label>:147:                                    ; preds = %145
  store %"class.std::vector.23"* %146, %"class.std::vector.23"** %8, align 8
  %148 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %149 = load i64, i64* %4, align 8
  %150 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %151 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %150) #3
  %152 = invoke %"class.std::vector.23"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.23"* %148, i64 %149, %"class.std::allocator.20"* dereferenceable(1) %151)
          to label %153 unwind label %182

; <label>:153:                                    ; preds = %147
  %154 = load i32, i32* @x.381
  %155 = load i32, i32* @y.382
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %452

; <label>:167:                                    ; preds = %153, %452
  store %"class.std::vector.23"* %152, %"class.std::vector.23"** %8, align 8
  %168 = load i32, i32* @x.381
  %169 = load i32, i32* @y.382
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %452

; <label>:181:                                    ; preds = %167
  br label %274

; <label>:182:                                    ; preds = %147, %145
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %9, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %10, align 4
  br label %186

; <label>:186:                                    ; preds = %182
  %187 = load i8*, i8** %9, align 8
  %188 = call i8* @__cxa_begin_catch(i8* %187) #3
  %189 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %190 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %191 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %192 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %191) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"* %189, %"class.std::vector.23"* %190, %"class.std::allocator.20"* dereferenceable(1) %192)
          to label %193 unwind label %239

; <label>:193:                                    ; preds = %186
  %194 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %195 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %196 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %194, %"class.std::vector.23"* %195, i64 %196)
          to label %197 unwind label %239

; <label>:197:                                    ; preds = %193
  %198 = load i32, i32* @x.381
  %199 = load i32, i32* @y.382
  %200 = sub i32 %198, 78401290
  %201 = sub i32 %200, 1
  %202 = add i32 %201, 78401290
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %453

; <label>:212:                                    ; preds = %197, %453
  %213 = load i32, i32* @x.381
  %214 = load i32, i32* @y.382
  %215 = sub i32 0, 1
  %216 = add i32 %213, %215
  %217 = sub i32 %213, 1
  %218 = mul i32 %213, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %214, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %453

; <label>:238:                                    ; preds = %212
  invoke void @__cxa_rethrow() #12
          to label %359 unwind label %239

; <label>:239:                                    ; preds = %238, %193, %186
  %240 = load i32, i32* @x.381
  %241 = load i32, i32* @y.382
  %242 = sub i32 %240, -621471035
  %243 = sub i32 %242, 1
  %244 = add i32 %243, -621471035
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  br i1 %252, label %254, label %454

; <label>:254:                                    ; preds = %239, %454
  %255 = landingpad { i8*, i32 }
          cleanup
  %256 = extractvalue { i8*, i32 } %255, 0
  store i8* %256, i8** %9, align 8
  %257 = extractvalue { i8*, i32 } %255, 1
  store i32 %257, i32* %10, align 4
  %258 = load i32, i32* @x.381
  %259 = load i32, i32* @y.382
  %260 = add i32 %258, 48916103
  %261 = sub i32 %260, 1
  %262 = sub i32 %261, 48916103
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %454

; <label>:272:                                    ; preds = %254
  invoke void @__cxa_end_catch()
          to label %273 unwind label %356

; <label>:273:                                    ; preds = %272
  br label %351

; <label>:274:                                    ; preds = %181
  %275 = load i32, i32* @x.381
  %276 = load i32, i32* @y.382
  %277 = add i32 %275, 836644217
  %278 = sub i32 %277, 1
  %279 = sub i32 %278, 836644217
  %280 = sub i32 %275, 1
  %281 = mul i32 %275, %279
  %282 = urem i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = icmp slt i32 %276, 10
  %285 = and i1 %283, %284
  %286 = xor i1 %283, %284
  %287 = or i1 %285, %286
  %288 = or i1 %283, %284
  br i1 %287, label %289, label %458

; <label>:289:                                    ; preds = %274, %458
  %290 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %291 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %291, i32 0, i32 0
  %293 = load %"class.std::vector.23"*, %"class.std::vector.23"** %292, align 8
  %294 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %295, i32 0, i32 1
  %297 = load %"class.std::vector.23"*, %"class.std::vector.23"** %296, align 8
  %298 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %299 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %298) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"* %293, %"class.std::vector.23"* %297, %"class.std::allocator.20"* dereferenceable(1) %299)
  %300 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %301 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %302, i32 0, i32 0
  %304 = load %"class.std::vector.23"*, %"class.std::vector.23"** %303, align 8
  %305 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %306 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %305, i32 0, i32 0
  %307 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %306, i32 0, i32 2
  %308 = load %"class.std::vector.23"*, %"class.std::vector.23"** %307, align 8
  %309 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %310 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %309, i32 0, i32 0
  %311 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %310, i32 0, i32 0
  %312 = load %"class.std::vector.23"*, %"class.std::vector.23"** %311, align 8
  %313 = ptrtoint %"class.std::vector.23"* %308 to i64
  %314 = ptrtoint %"class.std::vector.23"* %312 to i64
  %315 = add i64 %313, -8317444246839477949
  %316 = sub i64 %315, %314
  %317 = sub i64 %316, -8317444246839477949
  %318 = sub i64 %313, %314
  %319 = sdiv exact i64 %317, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %300, %"class.std::vector.23"* %304, i64 %319)
  %320 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %321 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %322 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %321, i32 0, i32 0
  %323 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %322, i32 0, i32 0
  store %"class.std::vector.23"* %320, %"class.std::vector.23"** %323, align 8
  %324 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %325 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %326, i32 0, i32 1
  store %"class.std::vector.23"* %324, %"class.std::vector.23"** %327, align 8
  %328 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %329 = load i64, i64* %5, align 8
  %330 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %328, i64 %329
  %331 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %332 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %331, i32 0, i32 0
  %333 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %332, i32 0, i32 2
  store %"class.std::vector.23"* %330, %"class.std::vector.23"** %333, align 8
  %334 = load i32, i32* @x.381
  %335 = load i32, i32* @y.382
  %336 = add i32 %334, 1123010294
  %337 = sub i32 %336, 1
  %338 = sub i32 %337, 1123010294
  %339 = sub i32 %334, 1
  %340 = mul i32 %334, %338
  %341 = urem i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = icmp slt i32 %335, 10
  %344 = and i1 %342, %343
  %345 = xor i1 %342, %343
  %346 = or i1 %344, %345
  %347 = or i1 %342, %343
  br i1 %346, label %348, label %458

; <label>:348:                                    ; preds = %289
  br label %349

; <label>:349:                                    ; preds = %348, %61
  br label %350

; <label>:350:                                    ; preds = %349, %2
  ret void

; <label>:351:                                    ; preds = %273
  %352 = load i8*, i8** %9, align 8
  %353 = load i32, i32* %10, align 4
  %354 = insertvalue { i8*, i32 } undef, i8* %352, 0
  %355 = insertvalue { i8*, i32 } %354, i32 %353, 1
  resume { i8*, i32 } %355

; <label>:356:                                    ; preds = %272
  %357 = landingpad { i8*, i32 }
          catch i8* null
  %358 = extractvalue { i8*, i32 } %357, 0
  call void @__clang_call_terminate(i8* %358) #11
  unreachable

; <label>:359:                                    ; preds = %238
  unreachable

; <label>:360:                                    ; preds = %29, %14
  %361 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %362 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %361, i32 0, i32 0
  %363 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %362, i32 0, i32 2
  %364 = load %"class.std::vector.23"*, %"class.std::vector.23"** %363, align 8
  %365 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %366 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %365, i32 0, i32 0
  %367 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %366, i32 0, i32 1
  %368 = load %"class.std::vector.23"*, %"class.std::vector.23"** %367, align 8
  %369 = ptrtoint %"class.std::vector.23"* %364 to i64
  %370 = ptrtoint %"class.std::vector.23"* %368 to i64
  %371 = sub i64 0, -7204480647714790098
  %372 = sub i64 %371, %369
  %373 = add i64 %372, -7204480647714790098
  %374 = sub i64 0, %369
  %375 = sub i64 0, %373
  %376 = sub i64 0, %370
  %377 = add i64 %375, %376
  %378 = sub i64 0, %377
  %379 = add i64 %373, %370
  %380 = shl i64 %369, %370
  %381 = add i64 0, 109583688249264610
  %382 = sub i64 %381, %369
  %383 = sub i64 %382, 109583688249264610
  %384 = sub i64 0, %369
  %385 = sub i64 0, %370
  %386 = sub i64 %383, %385
  %387 = add i64 %383, %370
  %388 = add i64 0, 592240901325598300
  %389 = sub i64 %388, %369
  %390 = sub i64 %389, 592240901325598300
  %391 = sub i64 0, %369
  %392 = add i64 %390, 2053849647933956262
  %393 = add i64 %392, %370
  %394 = sub i64 %393, 2053849647933956262
  %395 = add i64 %390, %370
  %396 = add i64 %369, 3663934112353278385
  %397 = sub i64 %396, %370
  %398 = sub i64 %397, 3663934112353278385
  %399 = sub i64 %369, %370
  %400 = mul i64 %398, %370
  %401 = add i64 0, -3843163951301681900
  %402 = sub i64 %401, %369
  %403 = sub i64 %402, -3843163951301681900
  %404 = sub i64 0, %369
  %405 = sub i64 %403, -7451435691052101052
  %406 = add i64 %405, %370
  %407 = add i64 %406, -7451435691052101052
  %408 = add i64 %403, %370
  %409 = add i64 %369, -6423188294809723691
  %410 = sub i64 %409, %370
  %411 = sub i64 %410, -6423188294809723691
  %412 = sub i64 %369, %370
  %413 = add i64 0, 4131347925507300149
  %414 = sub i64 %413, %411
  %415 = sub i64 %414, 4131347925507300149
  %416 = sub i64 0, %411
  %417 = add i64 %415, 6653335517780360722
  %418 = add i64 %417, 24
  %419 = sub i64 %418, 6653335517780360722
  %420 = add i64 %415, 24
  %421 = sub i64 0, 24
  %422 = add i64 %411, %421
  %423 = sub i64 %411, 24
  %424 = mul i64 %422, 24
  %425 = add i64 %411, 2536043881855732521
  %426 = sub i64 %425, 24
  %427 = sub i64 %426, 2536043881855732521
  %428 = sub i64 %411, 24
  %429 = mul i64 %427, 24
  %430 = sdiv exact i64 %411, 24
  %431 = load i64, i64* %4, align 8
  %432 = icmp uge i64 %430, %431
  br label %29

; <label>:433:                                    ; preds = %100, %73
  %434 = load i64, i64* %4, align 8
  %435 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %11, i64 %434, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %435, i64* %5, align 8
  %436 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %11) #3
  store i64 %436, i64* %6, align 8
  %437 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %438 = load i64, i64* %5, align 8
  %439 = call %"class.std::vector.23"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %437, i64 %438)
  store %"class.std::vector.23"* %439, %"class.std::vector.23"** %7, align 8
  %440 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  store %"class.std::vector.23"* %440, %"class.std::vector.23"** %8, align 8
  %441 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %441, i32 0, i32 0
  %443 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %442, i32 0, i32 0
  %444 = load %"class.std::vector.23"*, %"class.std::vector.23"** %443, align 8
  %445 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %446 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %445, i32 0, i32 0
  %447 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %446, i32 0, i32 1
  %448 = load %"class.std::vector.23"*, %"class.std::vector.23"** %447, align 8
  %449 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %450 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %451 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %450) #3
  br label %100

; <label>:452:                                    ; preds = %167, %153
  store %"class.std::vector.23"* %152, %"class.std::vector.23"** %8, align 8
  br label %167

; <label>:453:                                    ; preds = %212, %197
  br label %212

; <label>:454:                                    ; preds = %254, %239
  %455 = landingpad { i8*, i32 }
          cleanup
  %456 = extractvalue { i8*, i32 } %455, 0
  store i8* %456, i8** %9, align 8
  %457 = extractvalue { i8*, i32 } %455, 1
  store i32 %457, i32* %10, align 4
  br label %254

; <label>:458:                                    ; preds = %289, %274
  %459 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %460 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %459, i32 0, i32 0
  %461 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %460, i32 0, i32 0
  %462 = load %"class.std::vector.23"*, %"class.std::vector.23"** %461, align 8
  %463 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %464 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %463, i32 0, i32 0
  %465 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %464, i32 0, i32 1
  %466 = load %"class.std::vector.23"*, %"class.std::vector.23"** %465, align 8
  %467 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %468 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %467) #3
  call void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"* %462, %"class.std::vector.23"* %466, %"class.std::allocator.20"* dereferenceable(1) %468)
  %469 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %470 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %471 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %470, i32 0, i32 0
  %472 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %471, i32 0, i32 0
  %473 = load %"class.std::vector.23"*, %"class.std::vector.23"** %472, align 8
  %474 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %475 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %474, i32 0, i32 0
  %476 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %475, i32 0, i32 2
  %477 = load %"class.std::vector.23"*, %"class.std::vector.23"** %476, align 8
  %478 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %479 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %478, i32 0, i32 0
  %480 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %479, i32 0, i32 0
  %481 = load %"class.std::vector.23"*, %"class.std::vector.23"** %480, align 8
  %482 = ptrtoint %"class.std::vector.23"* %477 to i64
  %483 = ptrtoint %"class.std::vector.23"* %481 to i64
  %484 = sub i64 %482, -5565534726354839676
  %485 = sub i64 %484, %483
  %486 = add i64 %485, -5565534726354839676
  %487 = sub i64 %482, %483
  %488 = mul i64 %486, %483
  %489 = sub i64 0, %482
  %490 = add i64 0, %489
  %491 = sub i64 0, %482
  %492 = sub i64 0, %483
  %493 = sub i64 %490, %492
  %494 = add i64 %490, %483
  %495 = sub i64 0, -7801273681708825177
  %496 = sub i64 %495, %482
  %497 = add i64 %496, -7801273681708825177
  %498 = sub i64 0, %482
  %499 = sub i64 0, %497
  %500 = sub i64 0, %483
  %501 = add i64 %499, %500
  %502 = sub i64 0, %501
  %503 = add i64 %497, %483
  %504 = sub i64 0, 3284231301342831258
  %505 = sub i64 %504, %482
  %506 = add i64 %505, 3284231301342831258
  %507 = sub i64 0, %482
  %508 = add i64 %506, -1554809765725469086
  %509 = add i64 %508, %483
  %510 = sub i64 %509, -1554809765725469086
  %511 = add i64 %506, %483
  %512 = sub i64 0, %482
  %513 = add i64 0, %512
  %514 = sub i64 0, %482
  %515 = sub i64 0, %483
  %516 = sub i64 %513, %515
  %517 = add i64 %513, %483
  %518 = shl i64 %482, %483
  %519 = shl i64 %482, %483
  %520 = shl i64 %482, %483
  %521 = sub i64 %482, 5667475731830786888
  %522 = sub i64 %521, %483
  %523 = add i64 %522, 5667475731830786888
  %524 = sub i64 %482, %483
  %525 = sub i64 0, %523
  %526 = add i64 0, %525
  %527 = sub i64 0, %523
  %528 = sub i64 0, 24
  %529 = sub i64 %526, %528
  %530 = add i64 %526, 24
  %531 = sub i64 0, %523
  %532 = add i64 0, %531
  %533 = sub i64 0, %523
  %534 = sub i64 0, 24
  %535 = sub i64 %532, %534
  %536 = add i64 %532, 24
  %537 = add i64 %523, -6133645450231151213
  %538 = sub i64 %537, 24
  %539 = sub i64 %538, -6133645450231151213
  %540 = sub i64 %523, 24
  %541 = mul i64 %539, 24
  %542 = sdiv exact i64 %523, 24
  call void @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %469, %"class.std::vector.23"* %473, i64 %542)
  %543 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %544 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %545 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %544, i32 0, i32 0
  %546 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %545, i32 0, i32 0
  store %"class.std::vector.23"* %543, %"class.std::vector.23"** %546, align 8
  %547 = load %"class.std::vector.23"*, %"class.std::vector.23"** %8, align 8
  %548 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %549 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %548, i32 0, i32 0
  %550 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %549, i32 0, i32 1
  store %"class.std::vector.23"* %547, %"class.std::vector.23"** %550, align 8
  %551 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %552 = load i64, i64* %5, align 8
  %553 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %551, i64 %552
  %554 = bitcast %"class.std::vector.18"* %11 to %"struct.std::_Vector_base.19"*
  %555 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %554, i32 0, i32 0
  %556 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %555, i32 0, i32 2
  store %"class.std::vector.23"* %553, %"class.std::vector.23"** %556, align 8
  br label %289
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IiSaIiEESaIS1_EE15_M_erase_at_endEPS1_(%"class.std::vector.18"*, %"class.std::vector.23"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.383
  %4 = load i32, i32* @y.384
  %5 = add i32 %3, 895460798
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 895460798
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %74

; <label>:29:                                     ; preds = %2, %74
  %30 = alloca %"class.std::vector.18"*, align 8
  %31 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %31, align 8
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %33 = load %"class.std::vector.23"*, %"class.std::vector.23"** %31, align 8
  %34 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::vector.23"*, %"class.std::vector.23"** %36, align 8
  %38 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %39 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %38) #3
  %40 = load i32, i32* @x.383
  %41 = load i32, i32* @y.384
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %74

; <label>:65:                                     ; preds = %29
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEES2_EvT_S4_RSaIT0_E(%"class.std::vector.23"* %33, %"class.std::vector.23"* %37, %"class.std::allocator.20"* dereferenceable(1) %39)
          to label %66 unwind label %71

; <label>:66:                                     ; preds = %65
  %67 = load %"class.std::vector.23"*, %"class.std::vector.23"** %31, align 8
  %68 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %69, i32 0, i32 1
  store %"class.std::vector.23"* %67, %"class.std::vector.23"** %70, align 8
  ret void

; <label>:71:                                     ; preds = %65
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #11
  unreachable

; <label>:74:                                     ; preds = %29, %2
  %75 = alloca %"class.std::vector.18"*, align 8
  %76 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %75, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %76, align 8
  %77 = load %"class.std::vector.18"*, %"class.std::vector.18"** %75, align 8
  %78 = load %"class.std::vector.23"*, %"class.std::vector.23"** %76, align 8
  %79 = bitcast %"class.std::vector.18"* %77 to %"struct.std::_Vector_base.19"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %80, i32 0, i32 1
  %82 = load %"class.std::vector.23"*, %"class.std::vector.23"** %81, align 8
  %83 = bitcast %"class.std::vector.18"* %77 to %"struct.std::_Vector_base.19"*
  %84 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %83) #3
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIiSaIiEEmS2_ET_S4_T0_RSaIT1_E(%"class.std::vector.23"*, i64, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::vector.23"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.23"* %7, i64 %8)
  ret %"class.std::vector.23"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::vector.18"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.387
  %15 = load i32, i32* @y.388
  %16 = add i32 %14, -1128501900
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -1128501900
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -1619199832, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %248
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1619199832, label %29
    i32 587378947, label %37
    i32 -2030655119, label %71
    i32 522823543, label %74
    i32 -992184798, label %77
    i32 324782246, label %98
    i32 1145566130, label %125
    i32 -1580881390, label %158
    i32 2069072723, label %161
    i32 -1793202190, label %164
    i32 -1939025522, label %167
    i32 596756431, label %196
    i32 1711630964, label %224
    i32 -466717696, label %226
    i32 -1961632694, label %241
    i32 362619516, label %247
  ]

; <label>:28:                                     ; preds = %26
  br label %248

; <label>:29:                                     ; preds = %26
  %30 = load volatile i1, i1* %13
  %31 = load volatile i1, i1* %12
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 587378947, i32 -466717696
  store i32 %36, i32* %24
  br label %248

; <label>:37:                                     ; preds = %26
  %38 = alloca %"class.std::vector.18"*, align 8
  %39 = alloca i64, align 8
  store i64* %39, i64** %11
  %40 = alloca i8*, align 8
  store i8** %40, i8*** %10
  %41 = alloca i64, align 8
  store i64* %41, i64** %9
  %42 = alloca i64, align 8
  store i64* %42, i64** %8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %38, align 8
  %43 = load volatile i64*, i64** %11
  store i64 %1, i64* %43, align 8
  %44 = load volatile i8**, i8*** %10
  store i8* %2, i8** %44, align 8
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %38, align 8
  store %"class.std::vector.18"* %45, %"class.std::vector.18"** %7
  %46 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %47 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %46) #3
  %48 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %49 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %48) #3
  %50 = sub i64 %47, 7259549264785976966
  %51 = sub i64 %50, %49
  %52 = add i64 %51, 7259549264785976966
  %53 = sub i64 %47, %49
  %54 = load volatile i64*, i64** %11
  %55 = load i64, i64* %54, align 8
  %56 = icmp ult i64 %52, %55
  store i1 %56, i1* %6
  %57 = load i32, i32* @x.387
  %58 = load i32, i32* @y.388
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -2030655119, i32 -466717696
  store i32 %70, i32* %24
  br label %248

; <label>:71:                                     ; preds = %26
  %72 = load volatile i1, i1* %6
  %73 = select i1 %72, i32 522823543, i32 -992184798
  store i32 %73, i32* %24
  br label %248

; <label>:74:                                     ; preds = %26
  %75 = load volatile i8**, i8*** %10
  %76 = load i8*, i8** %75, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %76) #12
  unreachable

; <label>:77:                                     ; preds = %26
  %78 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %79 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %78) #3
  %80 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %81 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %80) #3
  %82 = load volatile i64*, i64** %8
  store i64 %81, i64* %82, align 8
  %83 = load volatile i64*, i64** %11
  %84 = load volatile i64*, i64** %8
  %85 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %84, i64* dereferenceable(8) %83)
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %79, -1959928507370393954
  %88 = add i64 %87, %86
  %89 = add i64 %88, -1959928507370393954
  %90 = add i64 %79, %86
  %91 = load volatile i64*, i64** %9
  store i64 %89, i64* %91, align 8
  %92 = load volatile i64*, i64** %9
  %93 = load i64, i64* %92, align 8
  %94 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %95 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %94) #3
  %96 = icmp ult i64 %93, %95
  %97 = select i1 %96, i32 2069072723, i32 324782246
  store i32 %97, i32* %24
  br label %248

; <label>:98:                                     ; preds = %26
  %99 = load i32, i32* @x.387
  %100 = load i32, i32* @y.388
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 1145566130, i32 -1961632694
  store i32 %124, i32* %24
  br label %248

; <label>:125:                                    ; preds = %26
  %126 = load volatile i64*, i64** %9
  %127 = load i64, i64* %126, align 8
  %128 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %129 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %128) #3
  %130 = icmp ugt i64 %127, %129
  store i1 %130, i1* %5
  %131 = load i32, i32* @x.387
  %132 = load i32, i32* @y.388
  %133 = sub i32 %131, -681311927
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -681311927
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 -1580881390, i32 -1961632694
  store i32 %157, i32* %24
  br label %248

; <label>:158:                                    ; preds = %26
  %159 = load volatile i1, i1* %5
  %160 = select i1 %159, i32 2069072723, i32 -1793202190
  store i32 %160, i32* %24
  br label %248

; <label>:161:                                    ; preds = %26
  %162 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %163 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %162) #3
  store i32 -1939025522, i32* %24
  store i64 %163, i64* %25
  br label %248

; <label>:164:                                    ; preds = %26
  %165 = load volatile i64*, i64** %9
  %166 = load i64, i64* %165, align 8
  store i32 -1939025522, i32* %24
  store i64 %166, i64* %25
  br label %248

; <label>:167:                                    ; preds = %26
  %168 = load i64, i64* %25
  store i64 %168, i64* %4
  %169 = load i32, i32* @x.387
  %170 = load i32, i32* @y.388
  %171 = sub i32 %169, 1025643938
  %172 = sub i32 %171, 1
  %173 = add i32 %172, 1025643938
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 false, true
  %182 = and i1 %179, false
  %183 = and i1 %177, %181
  %184 = and i1 %180, false
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 false, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  %195 = select i1 %193, i32 596756431, i32 362619516
  store i32 %195, i32* %24
  br label %248

; <label>:196:                                    ; preds = %26
  %197 = load i32, i32* @x.387
  %198 = load i32, i32* @y.388
  %199 = add i32 %197, 623634488
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, 623634488
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = xor i1 %205, true
  %208 = xor i1 %206, true
  %209 = xor i1 false, true
  %210 = and i1 %207, false
  %211 = and i1 %205, %209
  %212 = and i1 %208, false
  %213 = and i1 %206, %209
  %214 = or i1 %210, %211
  %215 = or i1 %212, %213
  %216 = xor i1 %214, %215
  %217 = or i1 %207, %208
  %218 = xor i1 %217, true
  %219 = or i1 false, %209
  %220 = and i1 %218, %219
  %221 = or i1 %216, %220
  %222 = or i1 %205, %206
  %223 = select i1 %221, i32 1711630964, i32 362619516
  store i32 %223, i32* %24
  br label %248

; <label>:224:                                    ; preds = %26
  %225 = load volatile i64, i64* %4
  ret i64 %225

; <label>:226:                                    ; preds = %26
  %227 = alloca %"class.std::vector.18"*, align 8
  %228 = alloca i64, align 8
  %229 = alloca i8*, align 8
  %230 = alloca i64, align 8
  %231 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %227, align 8
  store i64 %1, i64* %228, align 8
  store i8* %2, i8** %229, align 8
  %232 = load %"class.std::vector.18"*, %"class.std::vector.18"** %227, align 8
  %233 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %232) #3
  %234 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE4sizeEv(%"class.std::vector.18"* %232) #3
  %235 = add i64 %233, -4891175818057161016
  %236 = sub i64 %235, %234
  %237 = sub i64 %236, -4891175818057161016
  %238 = sub i64 %233, %234
  %239 = load i64, i64* %228, align 8
  %240 = icmp ult i64 %237, %239
  store i32 587378947, i32* %24
  br label %248

; <label>:241:                                    ; preds = %26
  %242 = load volatile i64*, i64** %9
  %243 = load i64, i64* %242, align 8
  %244 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %7
  %245 = call i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"* %244) #3
  %246 = icmp ugt i64 %243, %245
  store i32 1145566130, i32* %24
  br label %248

; <label>:247:                                    ; preds = %26
  store i32 596756431, i32* %24
  br label %248

; <label>:248:                                    ; preds = %247, %241, %226, %196, %167, %164, %161, %158, %125, %98, %77, %71, %37, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZNSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.23"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.389
  %10 = load i32, i32* @y.390
  %11 = add i32 %9, 1722318810
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1722318810
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -349725133, i32* %19
  %20 = alloca %"class.std::vector.23"*
  br label %21

; <label>:21:                                     ; preds = %2, %132
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -349725133, label %24
    i32 -88109116, label %32
    i32 1604855614, label %55
    i32 -982269143, label %58
    i32 -563647637, label %65
    i32 783809539, label %66
    i32 1264673166, label %95
    i32 -859597844, label %123
    i32 26845553, label %125
    i32 -896526216, label %131
  ]

; <label>:23:                                     ; preds = %21
  br label %132

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -88109116, i32 26845553
  store i32 %31, i32* %19
  br label %132

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.19"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %33, align 8
  store %"struct.std::_Vector_base.19"* %36, %"struct.std::_Vector_base.19"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.389
  %41 = load i32, i32* @y.390
  %42 = add i32 %40, -1394635173
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1394635173
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1604855614, i32 26845553
  store i32 %54, i32* %19
  br label %132

; <label>:55:                                     ; preds = %21
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 -982269143, i32 -563647637
  store i32 %57, i32* %19
  br label %132

; <label>:58:                                     ; preds = %21
  %59 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %60 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %60 to %"class.std::allocator.20"*
  %62 = load volatile i64*, i64** %6
  %63 = load i64, i64* %62, align 8
  %64 = call %"class.std::vector.23"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.20"* dereferenceable(1) %61, i64 %63)
  store i32 783809539, i32* %19
  store %"class.std::vector.23"* %64, %"class.std::vector.23"** %20
  br label %132

; <label>:65:                                     ; preds = %21
  store i32 783809539, i32* %19
  store %"class.std::vector.23"* null, %"class.std::vector.23"** %20
  br label %132

; <label>:66:                                     ; preds = %21
  %67 = load %"class.std::vector.23"*, %"class.std::vector.23"** %20
  store %"class.std::vector.23"* %67, %"class.std::vector.23"** %3
  %68 = load i32, i32* @x.389
  %69 = load i32, i32* @y.390
  %70 = sub i32 %68, 1193260577
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 1193260577
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  %94 = select i1 %92, i32 1264673166, i32 -896526216
  store i32 %94, i32* %19
  br label %132

; <label>:95:                                     ; preds = %21
  %96 = load i32, i32* @x.389
  %97 = load i32, i32* @y.390
  %98 = sub i32 %96, -1697585023
  %99 = sub i32 %98, 1
  %100 = add i32 %99, -1697585023
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  %122 = select i1 %120, i32 -859597844, i32 -896526216
  store i32 %122, i32* %19
  br label %132

; <label>:123:                                    ; preds = %21
  %124 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %3
  ret %"class.std::vector.23"* %124

; <label>:125:                                    ; preds = %21
  %126 = alloca %"struct.std::_Vector_base.19"*, align 8
  %127 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %126, align 8
  store i64 %1, i64* %127, align 8
  %128 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %126, align 8
  %129 = load i64, i64* %127, align 8
  %130 = icmp ne i64 %129, 0
  store i32 -88109116, i32* %19
  br label %132

; <label>:131:                                    ; preds = %21
  store i32 1264673166, i32* %19
  br label %132

; <label>:132:                                    ; preds = %131, %125, %95, %66, %65, %58, %55, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIiSaIiEES3_SaIS2_EET0_T_S6_S5_RT1_(%"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca %"class.std::vector.23"*, align 8
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.30", align 8
  %10 = alloca %"class.std::move_iterator.30", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %5, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %6, align 8
  store %"class.std::vector.23"* %2, %"class.std::vector.23"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %12 = call %"class.std::vector.23"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.23"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %9, i32 0, i32 0
  store %"class.std::vector.23"* %12, %"class.std::vector.23"** %13, align 8
  %14 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  %15 = call %"class.std::vector.23"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.23"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %10, i32 0, i32 0
  store %"class.std::vector.23"* %15, %"class.std::vector.23"** %16, align 8
  %17 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.23"*, %"class.std::vector.23"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.23"*, %"class.std::vector.23"** %21, align 8
  %23 = call %"class.std::vector.23"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.23"* %20, %"class.std::vector.23"* %22, %"class.std::vector.23"* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret %"class.std::vector.23"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt25__uninitialized_default_nIPSt6vectorIiSaIiEEmET_S4_T0_(%"class.std::vector.23"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.23"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.393
  %7 = load i32, i32* @y.394
  %8 = sub i32 %6, 279695223
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 279695223
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 483709299, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 483709299, label %20
    i32 -1098282140, label %40
    i32 -1683058470, label %62
    i32 -751605808, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1098282140, i32 -751605808
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.23"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i8, align 1
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i8 1, i8* %43, align 1
  %44 = load %"class.std::vector.23"*, %"class.std::vector.23"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::vector.23"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.23"* %44, i64 %45)
  store %"class.std::vector.23"* %46, %"class.std::vector.23"** %3
  %47 = load i32, i32* @x.393
  %48 = load i32, i32* @y.394
  %49 = add i32 %47, -510802425
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -510802425
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1683058470, i32 -751605808
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %3
  ret %"class.std::vector.23"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::vector.23"*, align 8
  %66 = alloca i64, align 8
  %67 = alloca i8, align 1
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %65, align 8
  store i64 %1, i64* %66, align 8
  store i8 1, i8* %67, align 1
  %68 = load %"class.std::vector.23"*, %"class.std::vector.23"** %65, align 8
  %69 = load i64, i64* %66, align 8
  %70 = call %"class.std::vector.23"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.23"* %68, i64 %69)
  store i32 -1098282140, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIiSaIiEEmEET_S6_T0_(%"class.std::vector.23"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.395
  %4 = load i32, i32* @y.396
  %5 = sub i32 %3, -1188618515
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1188618515
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %202

; <label>:29:                                     ; preds = %2, %202
  %30 = alloca %"class.std::vector.23"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::vector.23"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::vector.23"*, %"class.std::vector.23"** %30, align 8
  store %"class.std::vector.23"* %35, %"class.std::vector.23"** %32, align 8
  %36 = load i32, i32* @x.395
  %37 = load i32, i32* @y.396
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %202

; <label>:61:                                     ; preds = %29
  br label %62

; <label>:62:                                     ; preds = %116, %61
  %63 = load i64, i64* %31, align 8
  %64 = icmp ugt i64 %63, 0
  br i1 %64, label %65, label %156

; <label>:65:                                     ; preds = %62
  %66 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  %67 = call %"class.std::vector.23"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.23"* dereferenceable(24) %66) #3
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.23"* %67)
          to label %68 unwind label %117

; <label>:68:                                     ; preds = %65
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.395
  %71 = load i32, i32* @y.396
  %72 = add i32 %70, -41009087
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -41009087
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %209

; <label>:84:                                     ; preds = %69, %209
  %85 = load i64, i64* %31, align 8
  %86 = sub i64 0, -1
  %87 = sub i64 %85, %86
  %88 = add i64 %85, -1
  store i64 %87, i64* %31, align 8
  %89 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  %90 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %89, i32 1
  store %"class.std::vector.23"* %90, %"class.std::vector.23"** %32, align 8
  %91 = load i32, i32* @x.395
  %92 = load i32, i32* @y.396
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %209

; <label>:116:                                    ; preds = %84
  br label %62

; <label>:117:                                    ; preds = %65
  %118 = load i32, i32* @x.395
  %119 = load i32, i32* @y.396
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %233

; <label>:131:                                    ; preds = %117, %233
  %132 = landingpad { i8*, i32 }
          catch i8* null
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %33, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %34, align 4
  %135 = load i32, i32* @x.395
  %136 = load i32, i32* @y.396
  %137 = add i32 %135, 1713634906
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, 1713634906
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %233

; <label>:149:                                    ; preds = %131
  br label %150

; <label>:150:                                    ; preds = %149
  %151 = load i8*, i8** %33, align 8
  %152 = call i8* @__cxa_begin_catch(i8* %151) #3
  %153 = load %"class.std::vector.23"*, %"class.std::vector.23"** %30, align 8
  %154 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.23"* %153, %"class.std::vector.23"* %154)
          to label %155 unwind label %187

; <label>:155:                                    ; preds = %150
  invoke void @__cxa_rethrow() #12
          to label %201 unwind label %187

; <label>:156:                                    ; preds = %62
  %157 = load i32, i32* @x.395
  %158 = load i32, i32* @y.396
  %159 = sub i32 %157, 907410228
  %160 = sub i32 %159, 1
  %161 = add i32 %160, 907410228
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %237

; <label>:171:                                    ; preds = %156, %237
  %172 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  %173 = load i32, i32* @x.395
  %174 = load i32, i32* @y.396
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %237

; <label>:186:                                    ; preds = %171
  ret %"class.std::vector.23"* %172

; <label>:187:                                    ; preds = %155, %150
  %188 = landingpad { i8*, i32 }
          cleanup
  %189 = extractvalue { i8*, i32 } %188, 0
  store i8* %189, i8** %33, align 8
  %190 = extractvalue { i8*, i32 } %188, 1
  store i32 %190, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %191 unwind label %198

; <label>:191:                                    ; preds = %187
  br label %193
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:193:                                    ; preds = %191
  %194 = load i8*, i8** %33, align 8
  %195 = load i32, i32* %34, align 4
  %196 = insertvalue { i8*, i32 } undef, i8* %194, 0
  %197 = insertvalue { i8*, i32 } %196, i32 %195, 1
  resume { i8*, i32 } %197

; <label>:198:                                    ; preds = %187
  %199 = landingpad { i8*, i32 }
          catch i8* null
  %200 = extractvalue { i8*, i32 } %199, 0
  call void @__clang_call_terminate(i8* %200) #11
  unreachable

; <label>:201:                                    ; preds = %155
  unreachable

; <label>:202:                                    ; preds = %29, %2
  %203 = alloca %"class.std::vector.23"*, align 8
  %204 = alloca i64, align 8
  %205 = alloca %"class.std::vector.23"*, align 8
  %206 = alloca i8*
  %207 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %203, align 8
  store i64 %1, i64* %204, align 8
  %208 = load %"class.std::vector.23"*, %"class.std::vector.23"** %203, align 8
  store %"class.std::vector.23"* %208, %"class.std::vector.23"** %205, align 8
  br label %29

; <label>:209:                                    ; preds = %84, %69
  %210 = load i64, i64* %31, align 8
  %211 = add i64 0, -2738587074506397677
  %212 = sub i64 %211, %210
  %213 = sub i64 %212, -2738587074506397677
  %214 = sub i64 0, %210
  %215 = sub i64 0, %213
  %216 = sub i64 0, -1
  %217 = add i64 %215, %216
  %218 = sub i64 0, %217
  %219 = add i64 %213, -1
  %220 = shl i64 %210, -1
  %221 = sub i64 %210, 4910767580543867685
  %222 = sub i64 %221, -1
  %223 = add i64 %222, 4910767580543867685
  %224 = sub i64 %210, -1
  %225 = mul i64 %223, -1
  %226 = shl i64 %210, -1
  %227 = sub i64 %210, 2175287437620910224
  %228 = add i64 %227, -1
  %229 = add i64 %228, 2175287437620910224
  %230 = add i64 %210, -1
  store i64 %229, i64* %31, align 8
  %231 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  %232 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %231, i32 1
  store %"class.std::vector.23"* %232, %"class.std::vector.23"** %32, align 8
  br label %84

; <label>:233:                                    ; preds = %131, %117
  %234 = landingpad { i8*, i32 }
          catch i8* null
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %33, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %34, align 4
  br label %131

; <label>:237:                                    ; preds = %171, %156
  %238 = load %"class.std::vector.23"*, %"class.std::vector.23"** %32, align 8
  br label %171
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJEEvPT_DpOT0_(%"class.std::vector.23"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.397
  %5 = load i32, i32* @y.398
  %6 = sub i32 %4, 1044225518
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1044225518
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1361556059, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %63
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1361556059, label %18
    i32 -1815377728, label %26
    i32 -1589762457, label %57
    i32 1460706860, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %63

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1815377728, i32 1460706860
  store i32 %25, i32* %14
  br label %63

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %27, align 8
  %28 = load %"class.std::vector.23"*, %"class.std::vector.23"** %27, align 8
  %29 = bitcast %"class.std::vector.23"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.std::vector.23"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.23"* %30) #3
  %31 = load i32, i32* @x.397
  %32 = load i32, i32* @y.398
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1589762457, i32 1460706860
  store i32 %56, i32* %14
  br label %63

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %59, align 8
  %60 = load %"class.std::vector.23"*, %"class.std::vector.23"** %59, align 8
  %61 = bitcast %"class.std::vector.23"* %60 to i8*
  %62 = bitcast i8* %61 to %"class.std::vector.23"*
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.23"* %62) #3
  store i32 -1815377728, i32* %14
  br label %63

; <label>:63:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IiSaIiEESaIS1_EE8max_sizeEv(%"class.std::vector.18"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8max_sizeERKS3_(%"class.std::allocator.20"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseISt6vectorIiSaIiEESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.403
  %6 = load i32, i32* @y.404
  %7 = add i32 %5, 752463779
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 752463779
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1526194164, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1526194164, label %19
    i32 -1378139637, label %39
    i32 -556828920, label %58
    i32 -407516147, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1378139637, i32 -407516147
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %40, align 8
  %41 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %42 to %"class.std::allocator.20"*
  store %"class.std::allocator.20"* %43, %"class.std::allocator.20"** %2
  %44 = load i32, i32* @x.403
  %45 = load i32, i32* @y.404
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -556828920, i32 -407516147
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %61, align 8
  %62 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %61, align 8
  %63 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %63 to %"class.std::allocator.20"*
  store i32 -1378139637, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZNSt16allocator_traitsISaISt6vectorIiSaIiEEEE8allocateERS3_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.23"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.407
  %7 = load i32, i32* @y.408
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1965673600, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1965673600, label %19
    i32 1193064121, label %39
    i32 1930347929, label %61
    i32 -1377243798, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1193064121, i32 -1377243798
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.20"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %40, align 8
  %43 = bitcast %"class.std::allocator.20"* %42 to %"class.__gnu_cxx::new_allocator.21"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.23"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %43, i64 %44, i8* null)
  store %"class.std::vector.23"* %45, %"class.std::vector.23"** %3
  %46 = load i32, i32* @x.407
  %47 = load i32, i32* @y.408
  %48 = add i32 %46, -1051698236
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1051698236
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 1930347929, i32 -1377243798
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %3
  ret %"class.std::vector.23"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator.20"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %64, align 8
  %67 = bitcast %"class.std::allocator.20"* %66 to %"class.__gnu_cxx::new_allocator.21"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.23"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %67, i64 %68, i8* null)
  store i32 1193064121, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIiSaIiEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 386711428, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 386711428, label %16
    i32 823184194, label %21
    i32 713448512, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 823184194, i32 713448512
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.23"*
  ret %"class.std::vector.23"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIiSaIiEEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.30", align 8
  %6 = alloca %"class.std::move_iterator.30", align 8
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.30", align 8
  %10 = alloca %"class.std::move_iterator.30", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %6, i32 0, i32 0
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %12, align 8
  store %"class.std::vector.23"* %2, %"class.std::vector.23"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.30"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.30"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.30"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.30"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.23"*, %"class.std::vector.23"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.23"*, %"class.std::vector.23"** %20, align 8
  %22 = call %"class.std::vector.23"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.23"* %19, %"class.std::vector.23"* %21, %"class.std::vector.23"* %17)
  ret %"class.std::vector.23"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIiSaIiEESt13move_iteratorIS3_EET0_T_(%"class.std::vector.23"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.30", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.30"* %2, %"class.std::vector.23"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  ret %"class.std::vector.23"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIiSaIiEEES4_ET0_T_S7_S6_(%"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::vector.23"*) #0 comdat {
  %4 = alloca %"class.std::vector.23"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.415
  %8 = load i32, i32* @y.416
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -685910518, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %106
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -685910518, label %20
    i32 1095048550, label %40
    i32 363335566, label %85
    i32 -1660469777, label %87
  ]

; <label>:19:                                     ; preds = %17
  br label %106

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1095048550, i32 -1660469777
  store i32 %39, i32* %16
  br label %106

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.30", align 8
  %42 = alloca %"class.std::move_iterator.30", align 8
  %43 = alloca %"class.std::vector.23"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.30", align 8
  %46 = alloca %"class.std::move_iterator.30", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %41, i32 0, i32 0
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %42, i32 0, i32 0
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %48, align 8
  store %"class.std::vector.23"* %2, %"class.std::vector.23"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.30"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.30"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.30"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.30"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"class.std::vector.23"*, %"class.std::vector.23"** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %45, i32 0, i32 0
  %55 = load %"class.std::vector.23"*, %"class.std::vector.23"** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %46, i32 0, i32 0
  %57 = load %"class.std::vector.23"*, %"class.std::vector.23"** %56, align 8
  %58 = call %"class.std::vector.23"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.23"* %55, %"class.std::vector.23"* %57, %"class.std::vector.23"* %53)
  store %"class.std::vector.23"* %58, %"class.std::vector.23"** %4
  %59 = load i32, i32* @x.415
  %60 = load i32, i32* @y.416
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 363335566, i32 -1660469777
  store i32 %84, i32* %16
  br label %106

; <label>:85:                                     ; preds = %17
  %86 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  ret %"class.std::vector.23"* %86

; <label>:87:                                     ; preds = %17
  %88 = alloca %"class.std::move_iterator.30", align 8
  %89 = alloca %"class.std::move_iterator.30", align 8
  %90 = alloca %"class.std::vector.23"*, align 8
  %91 = alloca i8, align 1
  %92 = alloca %"class.std::move_iterator.30", align 8
  %93 = alloca %"class.std::move_iterator.30", align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %88, i32 0, i32 0
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %94, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %89, i32 0, i32 0
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %95, align 8
  store %"class.std::vector.23"* %2, %"class.std::vector.23"** %90, align 8
  store i8 1, i8* %91, align 1
  %96 = bitcast %"class.std::move_iterator.30"* %92 to i8*
  %97 = bitcast %"class.std::move_iterator.30"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %96, i8* %97, i64 8, i32 8, i1 false)
  %98 = bitcast %"class.std::move_iterator.30"* %93 to i8*
  %99 = bitcast %"class.std::move_iterator.30"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = load %"class.std::vector.23"*, %"class.std::vector.23"** %90, align 8
  %101 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %92, i32 0, i32 0
  %102 = load %"class.std::vector.23"*, %"class.std::vector.23"** %101, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %93, i32 0, i32 0
  %104 = load %"class.std::vector.23"*, %"class.std::vector.23"** %103, align 8
  %105 = call %"class.std::vector.23"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.23"* %102, %"class.std::vector.23"* %104, %"class.std::vector.23"* %100)
  store i32 1095048550, i32* %16
  br label %106

; <label>:106:                                    ; preds = %87, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.23"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIiSaIiEEES6_EET0_T_S9_S8_(%"class.std::vector.23"*, %"class.std::vector.23"*, %"class.std::vector.23"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.30", align 8
  %5 = alloca %"class.std::move_iterator.30", align 8
  %6 = alloca %"class.std::vector.23"*, align 8
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %4, i32 0, i32 0
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %5, i32 0, i32 0
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %11, align 8
  store %"class.std::vector.23"* %2, %"class.std::vector.23"** %6, align 8
  %12 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  store %"class.std::vector.23"* %12, %"class.std::vector.23"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %95, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.30"* dereferenceable(8) %4, %"class.std::move_iterator.30"* dereferenceable(8) %5)
          to label %15 unwind label %98

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %138

; <label>:16:                                     ; preds = %15
  %17 = load i32, i32* @x.417
  %18 = load i32, i32* @y.418
  %19 = sub i32 %17, 387970022
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 387970022
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %358

; <label>:43:                                     ; preds = %16, %358
  %44 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %45 = call %"class.std::vector.23"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.23"* dereferenceable(24) %44) #3
  %46 = load i32, i32* @x.417
  %47 = load i32, i32* @y.418
  %48 = sub i32 %46, 1551118316
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1551118316
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %358

; <label>:60:                                     ; preds = %43
  %61 = invoke dereferenceable(24) %"class.std::vector.23"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.30"* %4)
          to label %62 unwind label %98

; <label>:62:                                     ; preds = %60
  invoke void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.23"* %45, %"class.std::vector.23"* dereferenceable(24) %61)
          to label %63 unwind label %98

; <label>:63:                                     ; preds = %62
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* @x.417
  %66 = load i32, i32* @y.418
  %67 = sub i32 %65, 235058261
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 235058261
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %361

; <label>:79:                                     ; preds = %64, %361
  %80 = load i32, i32* @x.417
  %81 = load i32, i32* @y.418
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %361

; <label>:93:                                     ; preds = %79
  %94 = invoke dereferenceable(8) %"class.std::move_iterator.30"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.30"* %4)
          to label %95 unwind label %98

; <label>:95:                                     ; preds = %93
  %96 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %97 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %96, i32 1
  store %"class.std::vector.23"* %97, %"class.std::vector.23"** %7, align 8
  br label %13

; <label>:98:                                     ; preds = %93, %62, %60, %13
  %99 = load i32, i32* @x.417
  %100 = load i32, i32* @y.418
  %101 = sub i32 %99, 1209830656
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 1209830656
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %362

; <label>:113:                                    ; preds = %98, %362
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %8, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %9, align 4
  %117 = load i32, i32* @x.417
  %118 = load i32, i32* @y.418
  %119 = add i32 %117, -501242533
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, -501242533
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %362

; <label>:131:                                    ; preds = %113
  br label %132

; <label>:132:                                    ; preds = %131
  %133 = load i8*, i8** %8, align 8
  %134 = call i8* @__cxa_begin_catch(i8* %133) #3
  %135 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  %136 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIiSaIiEEEvT_S4_(%"class.std::vector.23"* %135, %"class.std::vector.23"* %136)
          to label %137 unwind label %140

; <label>:137:                                    ; preds = %132
  invoke void @__cxa_rethrow() #12
          to label %303 unwind label %140

; <label>:138:                                    ; preds = %15
  %139 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  ret %"class.std::vector.23"* %139

; <label>:140:                                    ; preds = %137, %132
  %141 = load i32, i32* @x.417
  %142 = load i32, i32* @y.418
  %143 = sub i32 %141, -542810278
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -542810278
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = xor i1 %149, true
  %152 = xor i1 %150, true
  %153 = xor i1 false, true
  %154 = and i1 %151, false
  %155 = and i1 %149, %153
  %156 = and i1 %152, false
  %157 = and i1 %150, %153
  %158 = or i1 %154, %155
  %159 = or i1 %156, %157
  %160 = xor i1 %158, %159
  %161 = or i1 %151, %152
  %162 = xor i1 %161, true
  %163 = or i1 false, %153
  %164 = and i1 %162, %163
  %165 = or i1 %160, %164
  %166 = or i1 %149, %150
  br i1 %165, label %167, label %366

; <label>:167:                                    ; preds = %140, %366
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %8, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %9, align 4
  %171 = load i32, i32* @x.417
  %172 = load i32, i32* @y.418
  %173 = sub i32 %171, 276732251
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 276732251
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  br i1 %195, label %197, label %366

; <label>:197:                                    ; preds = %167
  invoke void @__cxa_end_catch()
          to label %198 unwind label %247

; <label>:198:                                    ; preds = %197
  br label %200
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:200:                                    ; preds = %198
  %201 = load i32, i32* @x.417
  %202 = load i32, i32* @y.418
  %203 = sub i32 %201, -16889900
  %204 = sub i32 %203, 1
  %205 = add i32 %204, -16889900
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 false, true
  %214 = and i1 %211, false
  %215 = and i1 %209, %213
  %216 = and i1 %212, false
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 false, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  br i1 %225, label %227, label %370

; <label>:227:                                    ; preds = %200, %370
  %228 = load i8*, i8** %8, align 8
  %229 = load i32, i32* %9, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  %232 = load i32, i32* @x.417
  %233 = load i32, i32* @y.418
  %234 = sub i32 %232, -247739992
  %235 = sub i32 %234, 1
  %236 = add i32 %235, -247739992
  %237 = sub i32 %232, 1
  %238 = mul i32 %232, %236
  %239 = urem i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = icmp slt i32 %233, 10
  %242 = and i1 %240, %241
  %243 = xor i1 %240, %241
  %244 = or i1 %242, %243
  %245 = or i1 %240, %241
  br i1 %244, label %246, label %370

; <label>:246:                                    ; preds = %227
  resume { i8*, i32 } %231

; <label>:247:                                    ; preds = %197
  %248 = load i32, i32* @x.417
  %249 = load i32, i32* @y.418
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = xor i1 %255, true
  %258 = xor i1 %256, true
  %259 = xor i1 true, true
  %260 = and i1 %257, true
  %261 = and i1 %255, %259
  %262 = and i1 %258, true
  %263 = and i1 %256, %259
  %264 = or i1 %260, %261
  %265 = or i1 %262, %263
  %266 = xor i1 %264, %265
  %267 = or i1 %257, %258
  %268 = xor i1 %267, true
  %269 = or i1 true, %259
  %270 = and i1 %268, %269
  %271 = or i1 %266, %270
  %272 = or i1 %255, %256
  br i1 %271, label %273, label %375

; <label>:273:                                    ; preds = %247, %375
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #11
  %276 = load i32, i32* @x.417
  %277 = load i32, i32* @y.418
  %278 = sub i32 %276, 672223329
  %279 = sub i32 %278, 1
  %280 = add i32 %279, 672223329
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 true, true
  %289 = and i1 %286, true
  %290 = and i1 %284, %288
  %291 = and i1 %287, true
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 true, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  br i1 %300, label %302, label %375

; <label>:302:                                    ; preds = %273
  unreachable

; <label>:303:                                    ; preds = %137
  %304 = load i32, i32* @x.417
  %305 = load i32, i32* @y.418
  %306 = sub i32 %304, 1920332704
  %307 = sub i32 %306, 1
  %308 = add i32 %307, 1920332704
  %309 = sub i32 %304, 1
  %310 = mul i32 %304, %308
  %311 = urem i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = icmp slt i32 %305, 10
  %314 = xor i1 %312, true
  %315 = xor i1 %313, true
  %316 = xor i1 true, true
  %317 = and i1 %314, true
  %318 = and i1 %312, %316
  %319 = and i1 %315, true
  %320 = and i1 %313, %316
  %321 = or i1 %317, %318
  %322 = or i1 %319, %320
  %323 = xor i1 %321, %322
  %324 = or i1 %314, %315
  %325 = xor i1 %324, true
  %326 = or i1 true, %316
  %327 = and i1 %325, %326
  %328 = or i1 %323, %327
  %329 = or i1 %312, %313
  br i1 %328, label %330, label %378

; <label>:330:                                    ; preds = %303, %378
  %331 = load i32, i32* @x.417
  %332 = load i32, i32* @y.418
  %333 = sub i32 %331, -523506525
  %334 = sub i32 %333, 1
  %335 = add i32 %334, -523506525
  %336 = sub i32 %331, 1
  %337 = mul i32 %331, %335
  %338 = urem i32 %337, 2
  %339 = icmp eq i32 %338, 0
  %340 = icmp slt i32 %332, 10
  %341 = xor i1 %339, true
  %342 = xor i1 %340, true
  %343 = xor i1 false, true
  %344 = and i1 %341, false
  %345 = and i1 %339, %343
  %346 = and i1 %342, false
  %347 = and i1 %340, %343
  %348 = or i1 %344, %345
  %349 = or i1 %346, %347
  %350 = xor i1 %348, %349
  %351 = or i1 %341, %342
  %352 = xor i1 %351, true
  %353 = or i1 false, %343
  %354 = and i1 %352, %353
  %355 = or i1 %350, %354
  %356 = or i1 %339, %340
  br i1 %355, label %357, label %378

; <label>:357:                                    ; preds = %330
  unreachable

; <label>:358:                                    ; preds = %43, %16
  %359 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %360 = call %"class.std::vector.23"* @_ZSt11__addressofISt6vectorIiSaIiEEEPT_RS3_(%"class.std::vector.23"* dereferenceable(24) %359) #3
  br label %43

; <label>:361:                                    ; preds = %79, %64
  br label %79

; <label>:362:                                    ; preds = %113, %98
  %363 = landingpad { i8*, i32 }
          catch i8* null
  %364 = extractvalue { i8*, i32 } %363, 0
  store i8* %364, i8** %8, align 8
  %365 = extractvalue { i8*, i32 } %363, 1
  store i32 %365, i32* %9, align 4
  br label %113

; <label>:366:                                    ; preds = %167, %140
  %367 = landingpad { i8*, i32 }
          cleanup
  %368 = extractvalue { i8*, i32 } %367, 0
  store i8* %368, i8** %8, align 8
  %369 = extractvalue { i8*, i32 } %367, 1
  store i32 %369, i32* %9, align 4
  br label %167

; <label>:370:                                    ; preds = %227, %200
  %371 = load i8*, i8** %8, align 8
  %372 = load i32, i32* %9, align 4
  %373 = insertvalue { i8*, i32 } undef, i8* %371, 0
  %374 = insertvalue { i8*, i32 } %373, i32 %372, 1
  br label %227

; <label>:375:                                    ; preds = %273, %247
  %376 = landingpad { i8*, i32 }
          catch i8* null
  %377 = extractvalue { i8*, i32 } %376, 0
  call void @__clang_call_terminate(i8* %377) #11
  br label %273

; <label>:378:                                    ; preds = %330, %303
  br label %330
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.30"* dereferenceable(8), %"class.std::move_iterator.30"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.419
  %7 = load i32, i32* @y.420
  %8 = add i32 %6, -337419891
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -337419891
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -375548476, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -375548476, label %20
    i32 -687469737, label %28
    i32 -1969182992, label %72
    i32 375781827, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -687469737, i32 375781827
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.30"*, align 8
  %30 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %29, align 8
  store %"class.std::move_iterator.30"* %1, %"class.std::move_iterator.30"** %30, align 8
  %31 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %29, align 8
  %32 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %30, align 8
  %33 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.30"* dereferenceable(8) %31, %"class.std::move_iterator.30"* dereferenceable(8) %32)
  %34 = xor i1 %33, true
  %35 = and i1 true, %34
  %36 = xor i1 true, true
  %37 = and i1 %33, %36
  %38 = xor i1 true, true
  %39 = and i1 %38, true
  %40 = and i1 true, %36
  %41 = or i1 %35, %37
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = xor i1 %33, true
  store i1 %43, i1* %3
  %45 = load i32, i32* @x.419
  %46 = load i32, i32* @y.420
  %47 = sub i32 %45, -239519200
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -239519200
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1969182992, i32 375781827
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  %73 = load volatile i1, i1* %3
  ret i1 %73

; <label>:74:                                     ; preds = %17
  %75 = alloca %"class.std::move_iterator.30"*, align 8
  %76 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %75, align 8
  store %"class.std::move_iterator.30"* %1, %"class.std::move_iterator.30"** %76, align 8
  %77 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %75, align 8
  %78 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %76, align 8
  %79 = call zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.30"* dereferenceable(8) %77, %"class.std::move_iterator.30"* dereferenceable(8) %78)
  %80 = shl i1 %79, true
  %81 = shl i1 %79, true
  %82 = shl i1 %79, true
  %83 = shl i1 %79, true
  %84 = xor i1 %79, true
  %85 = and i1 true, %84
  %86 = xor i1 true, true
  %87 = and i1 %79, %86
  %88 = or i1 %85, %87
  %89 = xor i1 %79, true
  store i32 -687469737, i32* %16
  br label %90

; <label>:90:                                     ; preds = %74, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIiSaIiEEJS2_EEvPT_DpOT0_(%"class.std::vector.23"*, %"class.std::vector.23"* dereferenceable(24)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.421
  %6 = load i32, i32* @y.422
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -342551059, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %70
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -342551059, label %18
    i32 1321095801, label %26
    i32 122500122, label %61
    i32 948352071, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %70

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1321095801, i32 948352071
  store i32 %25, i32* %14
  br label %70

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.23"*, align 8
  %28 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %27, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %28, align 8
  %29 = load %"class.std::vector.23"*, %"class.std::vector.23"** %27, align 8
  %30 = bitcast %"class.std::vector.23"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.23"*
  %32 = load %"class.std::vector.23"*, %"class.std::vector.23"** %28, align 8
  %33 = call dereferenceable(24) %"class.std::vector.23"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.23"* dereferenceable(24) %32) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.23"* %31, %"class.std::vector.23"* dereferenceable(24) %33) #3
  %34 = load i32, i32* @x.421
  %35 = load i32, i32* @y.422
  %36 = sub i32 %34, 1535609993
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1535609993
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 122500122, i32 948352071
  store i32 %60, i32* %14
  br label %70

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.std::vector.23"*, align 8
  %64 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %63, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %64, align 8
  %65 = load %"class.std::vector.23"*, %"class.std::vector.23"** %63, align 8
  %66 = bitcast %"class.std::vector.23"* %65 to i8*
  %67 = bitcast i8* %66 to %"class.std::vector.23"*
  %68 = load %"class.std::vector.23"*, %"class.std::vector.23"** %64, align 8
  %69 = call dereferenceable(24) %"class.std::vector.23"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.23"* dereferenceable(24) %68) #3
  call void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.23"* %67, %"class.std::vector.23"* dereferenceable(24) %69) #3
  store i32 1321095801, i32* %14
  br label %70

; <label>:70:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.23"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEEdeEv(%"class.std::move_iterator.30"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.23"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.423
  %6 = load i32, i32* @y.424
  %7 = sub i32 %5, -497762258
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -497762258
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1299626907, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1299626907, label %19
    i32 -1929099133, label %39
    i32 -2011909845, label %59
    i32 972613645, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1929099133, i32 972613645
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %40, align 8
  %41 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %41, i32 0, i32 0
  %43 = load %"class.std::vector.23"*, %"class.std::vector.23"** %42, align 8
  store %"class.std::vector.23"* %43, %"class.std::vector.23"** %2
  %44 = load i32, i32* @x.423
  %45 = load i32, i32* @y.424
  %46 = sub i32 %44, -1604929894
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1604929894
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -2011909845, i32 972613645
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %2
  ret %"class.std::vector.23"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %62, align 8
  %63 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %63, i32 0, i32 0
  %65 = load %"class.std::vector.23"*, %"class.std::vector.23"** %64, align 8
  store i32 -1929099133, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.30"* @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEppEv(%"class.std::move_iterator.30"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %2, align 8
  %3 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %5, i32 1
  store %"class.std::vector.23"* %6, %"class.std::vector.23"** %4, align 8
  ret %"class.std::move_iterator.30"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIiSaIiEEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.30"* dereferenceable(8), %"class.std::move_iterator.30"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.30"*, align 8
  %4 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %3, align 8
  store %"class.std::move_iterator.30"* %1, %"class.std::move_iterator.30"** %4, align 8
  %5 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %3, align 8
  %6 = call %"class.std::vector.23"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.30"* %5)
  %7 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %4, align 8
  %8 = call %"class.std::vector.23"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.30"* %7)
  %9 = icmp eq %"class.std::vector.23"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.23"* @_ZNKSt13move_iteratorIPSt6vectorIiSaIiEEE4baseEv(%"class.std::move_iterator.30"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.30"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %2, align 8
  %3 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  ret %"class.std::vector.23"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.23"* @_ZSt7forwardISt6vectorIiSaIiEEEOT_RNSt16remove_referenceIS3_E4typeE(%"class.std::vector.23"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  ret %"class.std::vector.23"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EOS1_(%"class.std::vector.23"*, %"class.std::vector.23"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.433
  %6 = load i32, i32* @y.434
  %7 = add i32 %5, 941554619
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 941554619
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -291307168, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -291307168, label %19
    i32 -1279207447, label %27
    i32 -2023917179, label %50
    i32 260397996, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1279207447, i32 260397996
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.23"*, align 8
  %29 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %28, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %29, align 8
  %30 = load %"class.std::vector.23"*, %"class.std::vector.23"** %28, align 8
  %31 = bitcast %"class.std::vector.23"* %30 to %"struct.std::_Vector_base.24"*
  %32 = load %"class.std::vector.23"*, %"class.std::vector.23"** %29, align 8
  %33 = call dereferenceable(24) %"class.std::vector.23"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.23"* dereferenceable(24) %32) #3
  %34 = bitcast %"class.std::vector.23"* %33 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.24"* %31, %"struct.std::_Vector_base.24"* dereferenceable(24) %34) #3
  %35 = load i32, i32* @x.433
  %36 = load i32, i32* @y.434
  %37 = sub i32 %35, -717340965
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -717340965
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -2023917179, i32 260397996
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::vector.23"*, align 8
  %53 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %52, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %53, align 8
  %54 = load %"class.std::vector.23"*, %"class.std::vector.23"** %52, align 8
  %55 = bitcast %"class.std::vector.23"* %54 to %"struct.std::_Vector_base.24"*
  %56 = load %"class.std::vector.23"*, %"class.std::vector.23"** %53, align 8
  %57 = call dereferenceable(24) %"class.std::vector.23"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.23"* dereferenceable(24) %56) #3
  %58 = bitcast %"class.std::vector.23"* %57 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.24"* %55, %"struct.std::_Vector_base.24"* dereferenceable(24) %58) #3
  store i32 -1279207447, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.23"* @_ZSt4moveIRSt6vectorIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::vector.23"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  ret %"class.std::vector.23"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EOS1_(%"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.437
  %6 = load i32, i32* @y.438
  %7 = add i32 %5, -1563460784
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1563460784
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 337553916, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 337553916, label %19
    i32 -2089016468, label %39
    i32 262163543, label %65
    i32 11326910, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2089016468, i32 11326910
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.24"*, align 8
  %41 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %40, align 8
  store %"struct.std::_Vector_base.24"* %1, %"struct.std::_Vector_base.24"** %41, align 8
  %42 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %44) #3
  %46 = call dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.25"* dereferenceable(1) %45) #3
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, %"class.std::allocator.25"* dereferenceable(1) %46) #3
  %47 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %42, i32 0, i32 0
  %48 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %49) #3
  %50 = load i32, i32* @x.437
  %51 = load i32, i32* @y.438
  %52 = sub i32 %50, -1856248745
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1856248745
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 262163543, i32 11326910
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Vector_base.24"*, align 8
  %68 = alloca %"struct.std::_Vector_base.24"*, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %67, align 8
  store %"struct.std::_Vector_base.24"* %1, %"struct.std::_Vector_base.24"** %68, align 8
  %69 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %69, i32 0, i32 0
  %71 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %68, align 8
  %72 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %71) #3
  %73 = call dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.25"* dereferenceable(1) %72) #3
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, %"class.std::allocator.25"* dereferenceable(1) %73) #3
  %74 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %69, i32 0, i32 0
  %75 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %68, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %75, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %76) #3
  store i32 -2089016468, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.25"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %2, align 8
  %3 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %2, align 8
  ret %"class.std::allocator.25"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2EOS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.25"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.25"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.25"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.25"* %6, %"class.std::allocator.25"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.25"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.26"* %6, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %1, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #4 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIiSaIiEEEC2ES3_(%"class.std::move_iterator.30"*, %"class.std::vector.23"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.30"*, align 8
  %4 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::move_iterator.30"* %0, %"class.std::move_iterator.30"** %3, align 8
  store %"class.std::vector.23"* %1, %"class.std::vector.23"** %4, align 8
  %5 = load %"class.std::move_iterator.30"*, %"class.std::move_iterator.30"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.30", %"class.std::move_iterator.30"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  store %"class.std::vector.23"* %7, %"class.std::vector.23"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.455
  %6 = load i32, i32* @y.456
  %7 = add i32 %5, 759626262
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 759626262
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 74416627, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %106
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 74416627, label %19
    i32 -1047862823, label %27
    i32 1101286373, label %59
    i32 1823341871, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %106

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1047862823, i32 1823341871
  store i32 %26, i32* %15
  br label %106

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %28, align 8
  %29 = load %"class.std::vector.10"*, %"class.std::vector.10"** %28, align 8
  %30 = bitcast %"class.std::vector.10"* %29 to %"struct.std::_Vector_base.11"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  %34 = bitcast %"class.std::vector.10"* %29 to %"struct.std::_Vector_base.11"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %36, align 8
  %38 = ptrtoint %"class.std::__cxx11::list"* %33 to i64
  %39 = ptrtoint %"class.std::__cxx11::list"* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 24
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.455
  %45 = load i32, i32* @y.456
  %46 = sub i32 %44, -895806497
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -895806497
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1101286373, i32 1823341871
  store i32 %58, i32* %15
  br label %106

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %62, align 8
  %63 = load %"class.std::vector.10"*, %"class.std::vector.10"** %62, align 8
  %64 = bitcast %"class.std::vector.10"* %63 to %"struct.std::_Vector_base.11"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %66, align 8
  %68 = bitcast %"class.std::vector.10"* %63 to %"struct.std::_Vector_base.11"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %70, align 8
  %72 = ptrtoint %"class.std::__cxx11::list"* %67 to i64
  %73 = ptrtoint %"class.std::__cxx11::list"* %71 to i64
  %74 = sub i64 0, 2528910145421701419
  %75 = sub i64 %74, %72
  %76 = add i64 %75, 2528910145421701419
  %77 = sub i64 0, %72
  %78 = sub i64 0, %76
  %79 = sub i64 0, %73
  %80 = add i64 %78, %79
  %81 = sub i64 0, %80
  %82 = add i64 %76, %73
  %83 = sub i64 0, %73
  %84 = add i64 %72, %83
  %85 = sub i64 %72, %73
  %86 = mul i64 %84, %73
  %87 = shl i64 %72, %73
  %88 = add i64 0, -855988264726490611
  %89 = sub i64 %88, %72
  %90 = sub i64 %89, -855988264726490611
  %91 = sub i64 0, %72
  %92 = sub i64 %90, -4448501290979290325
  %93 = add i64 %92, %73
  %94 = add i64 %93, -4448501290979290325
  %95 = add i64 %90, %73
  %96 = sub i64 %72, -1617992119896010990
  %97 = sub i64 %96, %73
  %98 = add i64 %97, -1617992119896010990
  %99 = sub i64 %72, %73
  %100 = mul i64 %98, %73
  %101 = sub i64 0, %73
  %102 = add i64 %72, %101
  %103 = sub i64 %72, %73
  %104 = shl i64 %102, 24
  %105 = sdiv exact i64 %102, 24
  store i32 -1047862823, i32* %15
  br label %106

; <label>:106:                                    ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE17_M_default_appendEm(%"class.std::vector.10"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::__cxx11::list"*, align 8
  %8 = alloca %"class.std::__cxx11::list"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %11 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ne i64 %12, 0
  br i1 %13, label %14, label %251

; <label>:14:                                     ; preds = %2
  %15 = load i32, i32* @x.457
  %16 = load i32, i32* @y.458
  %17 = add i32 %15, 1821923199
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 1821923199
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  br i1 %27, label %29, label %315

; <label>:29:                                     ; preds = %14, %315
  %30 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %31, i32 0, i32 2
  %33 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  %34 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %36, align 8
  %38 = ptrtoint %"class.std::__cxx11::list"* %33 to i64
  %39 = ptrtoint %"class.std::__cxx11::list"* %37 to i64
  %40 = sub i64 %38, 1381474089966559550
  %41 = sub i64 %40, %39
  %42 = add i64 %41, 1381474089966559550
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 24
  %45 = load i64, i64* %4, align 8
  %46 = icmp uge i64 %44, %45
  %47 = load i32, i32* @x.457
  %48 = load i32, i32* @y.458
  %49 = add i32 %47, 596715745
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 596715745
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %315

; <label>:61:                                     ; preds = %29
  br i1 %46, label %62, label %74

; <label>:62:                                     ; preds = %61
  %63 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %65, align 8
  %67 = load i64, i64* %4, align 8
  %68 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %69 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %68) #3
  %70 = call %"class.std::__cxx11::list"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx114listIiSaIiEEEmS3_ET_S5_T0_RSaIT1_E(%"class.std::__cxx11::list"* %66, i64 %67, %"class.std::allocator.12"* dereferenceable(1) %69)
  %71 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %72, i32 0, i32 1
  store %"class.std::__cxx11::list"* %70, %"class.std::__cxx11::list"** %73, align 8
  br label %250

; <label>:74:                                     ; preds = %61
  %75 = load i64, i64* %4, align 8
  %76 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.10"* %11, i64 %75, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %76, i64* %5, align 8
  %77 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %11) #3
  store i64 %77, i64* %6, align 8
  %78 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %79 = load i64, i64* %5, align 8
  %80 = call %"class.std::__cxx11::list"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.11"* %78, i64 %79)
  store %"class.std::__cxx11::list"* %80, %"class.std::__cxx11::list"** %7, align 8
  %81 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  store %"class.std::__cxx11::list"* %81, %"class.std::__cxx11::list"** %8, align 8
  %82 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %84, align 8
  %86 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %87, i32 0, i32 1
  %89 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %88, align 8
  %90 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %91 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %92 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %91) #3
  %93 = invoke %"class.std::__cxx11::list"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx114listIiSaIiEEES4_SaIS3_EET0_T_S7_S6_RT1_(%"class.std::__cxx11::list"* %85, %"class.std::__cxx11::list"* %89, %"class.std::__cxx11::list"* %90, %"class.std::allocator.12"* dereferenceable(1) %92)
          to label %94 unwind label %101

; <label>:94:                                     ; preds = %74
  store %"class.std::__cxx11::list"* %93, %"class.std::__cxx11::list"** %8, align 8
  %95 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %96 = load i64, i64* %4, align 8
  %97 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %98 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %97) #3
  %99 = invoke %"class.std::__cxx11::list"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx114listIiSaIiEEEmS3_ET_S5_T0_RSaIT1_E(%"class.std::__cxx11::list"* %95, i64 %96, %"class.std::allocator.12"* dereferenceable(1) %98)
          to label %100 unwind label %101

; <label>:100:                                    ; preds = %94
  store %"class.std::__cxx11::list"* %99, %"class.std::__cxx11::list"** %8, align 8
  br label %206

; <label>:101:                                    ; preds = %94, %74
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %9, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %10, align 4
  br label %105

; <label>:105:                                    ; preds = %101
  %106 = load i32, i32* @x.457
  %107 = load i32, i32* @y.458
  %108 = sub i32 %106, -619958602
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -619958602
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %344

; <label>:132:                                    ; preds = %105, %344
  %133 = load i8*, i8** %9, align 8
  %134 = call i8* @__cxa_begin_catch(i8* %133) #3
  %135 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %136 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %137 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %138 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %137) #3
  %139 = load i32, i32* @x.457
  %140 = load i32, i32* @y.458
  %141 = add i32 %139, -328829654
  %142 = sub i32 %141, 1
  %143 = sub i32 %142, -328829654
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %344

; <label>:153:                                    ; preds = %132
  invoke void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E(%"class.std::__cxx11::list"* %135, %"class.std::__cxx11::list"* %136, %"class.std::allocator.12"* dereferenceable(1) %138)
          to label %154 unwind label %159

; <label>:154:                                    ; preds = %153
  %155 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %156 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %157 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.11"* %155, %"class.std::__cxx11::list"* %156, i64 %157)
          to label %158 unwind label %159

; <label>:158:                                    ; preds = %154
  invoke void @__cxa_rethrow() #12
          to label %314 unwind label %159

; <label>:159:                                    ; preds = %158, %154, %153
  %160 = load i32, i32* @x.457
  %161 = load i32, i32* @y.458
  %162 = add i32 %160, 797099171
  %163 = sub i32 %162, 1
  %164 = sub i32 %163, 797099171
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 false, true
  %173 = and i1 %170, false
  %174 = and i1 %168, %172
  %175 = and i1 %171, false
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 false, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  br i1 %184, label %186, label %351

; <label>:186:                                    ; preds = %159, %351
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %9, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %10, align 4
  %190 = load i32, i32* @x.457
  %191 = load i32, i32* @y.458
  %192 = sub i32 %190, -519773019
  %193 = sub i32 %192, 1
  %194 = add i32 %193, -519773019
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = and i1 %198, %199
  %201 = xor i1 %198, %199
  %202 = or i1 %200, %201
  %203 = or i1 %198, %199
  br i1 %202, label %204, label %351

; <label>:204:                                    ; preds = %186
  invoke void @__cxa_end_catch()
          to label %205 unwind label %311

; <label>:205:                                    ; preds = %204
  br label %306

; <label>:206:                                    ; preds = %100
  %207 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %208 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %207, i32 0, i32 0
  %209 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %208, i32 0, i32 0
  %210 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %209, align 8
  %211 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %212 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %211, i32 0, i32 0
  %213 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %212, i32 0, i32 1
  %214 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %213, align 8
  %215 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %216 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %215) #3
  call void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E(%"class.std::__cxx11::list"* %210, %"class.std::__cxx11::list"* %214, %"class.std::allocator.12"* dereferenceable(1) %216)
  %217 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %218 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %219, i32 0, i32 0
  %221 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %220, align 8
  %222 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %223, i32 0, i32 2
  %225 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %224, align 8
  %226 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %227 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %227, i32 0, i32 0
  %229 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %228, align 8
  %230 = ptrtoint %"class.std::__cxx11::list"* %225 to i64
  %231 = ptrtoint %"class.std::__cxx11::list"* %229 to i64
  %232 = sub i64 0, %231
  %233 = add i64 %230, %232
  %234 = sub i64 %230, %231
  %235 = sdiv exact i64 %233, 24
  call void @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base.11"* %217, %"class.std::__cxx11::list"* %221, i64 %235)
  %236 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %237 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %238 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %237, i32 0, i32 0
  %239 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %238, i32 0, i32 0
  store %"class.std::__cxx11::list"* %236, %"class.std::__cxx11::list"** %239, align 8
  %240 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %241 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %241, i32 0, i32 0
  %243 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %242, i32 0, i32 1
  store %"class.std::__cxx11::list"* %240, %"class.std::__cxx11::list"** %243, align 8
  %244 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %245 = load i64, i64* %5, align 8
  %246 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %244, i64 %245
  %247 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %248, i32 0, i32 2
  store %"class.std::__cxx11::list"* %246, %"class.std::__cxx11::list"** %249, align 8
  br label %250

; <label>:250:                                    ; preds = %206, %62
  br label %251

; <label>:251:                                    ; preds = %250, %2
  %252 = load i32, i32* @x.457
  %253 = load i32, i32* @y.458
  %254 = sub i32 %252, -332079212
  %255 = sub i32 %254, 1
  %256 = add i32 %255, -332079212
  %257 = sub i32 %252, 1
  %258 = mul i32 %252, %256
  %259 = urem i32 %258, 2
  %260 = icmp eq i32 %259, 0
  %261 = icmp slt i32 %253, 10
  %262 = xor i1 %260, true
  %263 = xor i1 %261, true
  %264 = xor i1 true, true
  %265 = and i1 %262, true
  %266 = and i1 %260, %264
  %267 = and i1 %263, true
  %268 = and i1 %261, %264
  %269 = or i1 %265, %266
  %270 = or i1 %267, %268
  %271 = xor i1 %269, %270
  %272 = or i1 %262, %263
  %273 = xor i1 %272, true
  %274 = or i1 true, %264
  %275 = and i1 %273, %274
  %276 = or i1 %271, %275
  %277 = or i1 %260, %261
  br i1 %276, label %278, label %355

; <label>:278:                                    ; preds = %251, %355
  %279 = load i32, i32* @x.457
  %280 = load i32, i32* @y.458
  %281 = add i32 %279, 949455390
  %282 = sub i32 %281, 1
  %283 = sub i32 %282, 949455390
  %284 = sub i32 %279, 1
  %285 = mul i32 %279, %283
  %286 = urem i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = icmp slt i32 %280, 10
  %289 = xor i1 %287, true
  %290 = xor i1 %288, true
  %291 = xor i1 true, true
  %292 = and i1 %289, true
  %293 = and i1 %287, %291
  %294 = and i1 %290, true
  %295 = and i1 %288, %291
  %296 = or i1 %292, %293
  %297 = or i1 %294, %295
  %298 = xor i1 %296, %297
  %299 = or i1 %289, %290
  %300 = xor i1 %299, true
  %301 = or i1 true, %291
  %302 = and i1 %300, %301
  %303 = or i1 %298, %302
  %304 = or i1 %287, %288
  br i1 %303, label %305, label %355

; <label>:305:                                    ; preds = %278
  ret void

; <label>:306:                                    ; preds = %205
  %307 = load i8*, i8** %9, align 8
  %308 = load i32, i32* %10, align 4
  %309 = insertvalue { i8*, i32 } undef, i8* %307, 0
  %310 = insertvalue { i8*, i32 } %309, i32 %308, 1
  resume { i8*, i32 } %310

; <label>:311:                                    ; preds = %204
  %312 = landingpad { i8*, i32 }
          catch i8* null
  %313 = extractvalue { i8*, i32 } %312, 0
  call void @__clang_call_terminate(i8* %313) #11
  unreachable

; <label>:314:                                    ; preds = %158
  unreachable

; <label>:315:                                    ; preds = %29, %14
  %316 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %317 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %316, i32 0, i32 0
  %318 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %317, i32 0, i32 2
  %319 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %318, align 8
  %320 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %321 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %320, i32 0, i32 0
  %322 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %321, i32 0, i32 1
  %323 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %322, align 8
  %324 = ptrtoint %"class.std::__cxx11::list"* %319 to i64
  %325 = ptrtoint %"class.std::__cxx11::list"* %323 to i64
  %326 = sub i64 %324, 2824712680719702333
  %327 = sub i64 %326, %325
  %328 = add i64 %327, 2824712680719702333
  %329 = sub i64 %324, %325
  %330 = mul i64 %328, %325
  %331 = sub i64 %324, -5806689661769973903
  %332 = sub i64 %331, %325
  %333 = add i64 %332, -5806689661769973903
  %334 = sub i64 %324, %325
  %335 = mul i64 %333, %325
  %336 = sub i64 %324, 8561032983499613640
  %337 = sub i64 %336, %325
  %338 = add i64 %337, 8561032983499613640
  %339 = sub i64 %324, %325
  %340 = shl i64 %338, 24
  %341 = sdiv exact i64 %338, 24
  %342 = load i64, i64* %4, align 8
  %343 = icmp uge i64 %341, %342
  br label %29

; <label>:344:                                    ; preds = %132, %105
  %345 = load i8*, i8** %9, align 8
  %346 = call i8* @__cxa_begin_catch(i8* %345) #3
  %347 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %348 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %349 = bitcast %"class.std::vector.10"* %11 to %"struct.std::_Vector_base.11"*
  %350 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %349) #3
  br label %132

; <label>:351:                                    ; preds = %186, %159
  %352 = landingpad { i8*, i32 }
          cleanup
  %353 = extractvalue { i8*, i32 } %352, 0
  store i8* %353, i8** %9, align 8
  %354 = extractvalue { i8*, i32 } %352, 1
  store i32 %354, i32* %10, align 4
  br label %186

; <label>:355:                                    ; preds = %278, %251
  br label %278
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.10"*, %"class.std::__cxx11::list"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %7 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %9, align 8
  %11 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %12 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %11) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEES3_EvT_S5_RSaIT0_E(%"class.std::__cxx11::list"* %6, %"class.std::__cxx11::list"* %10, %"class.std::allocator.12"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %15 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::__cxx11::list"* %14, %"class.std::__cxx11::list"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.459
  %20 = load i32, i32* @y.460
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %73

; <label>:44:                                     ; preds = %18, %73
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #11
  %47 = load i32, i32* @x.459
  %48 = load i32, i32* @y.460
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %73

; <label>:72:                                     ; preds = %44
  unreachable

; <label>:73:                                     ; preds = %44, %18
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  call void @__clang_call_terminate(i8* %75) #11
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx114listIiSaIiEEEmS3_ET_S5_T0_RSaIT1_E(%"class.std::__cxx11::list"*, i64, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.12"* %2, %"class.std::allocator.12"** %6, align 8
  %7 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call %"class.std::__cxx11::list"* @_ZSt25__uninitialized_default_nIPNSt7__cxx114listIiSaIiEEEmET_S5_T0_(%"class.std::__cxx11::list"* %7, i64 %8)
  ret %"class.std::__cxx11::list"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca %"class.std::vector.10"*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i8**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.463
  %14 = load i32, i32* @y.464
  %15 = add i32 %13, 404231803
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 404231803
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %12
  %22 = icmp slt i32 %14, 10
  store i1 %22, i1* %11
  %23 = alloca i32
  store i32 -2082369215, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %234
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -2082369215, label %28
    i32 58893982, label %36
    i32 1605754403, label %70
    i32 13339770, label %73
    i32 -1591425066, label %88
    i32 218986451, label %106
    i32 1579822505, label %107
    i32 -470225227, label %128
    i32 279573099, label %135
    i32 -1318757809, label %163
    i32 -17946943, label %181
    i32 -1987099820, label %183
    i32 -77753437, label %186
    i32 -375565977, label %188
    i32 577272001, label %228
    i32 -66295799, label %231
  ]

; <label>:27:                                     ; preds = %25
  br label %234

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %12
  %30 = load volatile i1, i1* %11
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 58893982, i32 -375565977
  store i32 %35, i32* %23
  br label %234

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::vector.10"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %10
  %39 = alloca i8*, align 8
  store i8** %39, i8*** %9
  %40 = alloca i64, align 8
  store i64* %40, i64** %8
  %41 = alloca i64, align 8
  store i64* %41, i64** %7
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %37, align 8
  %42 = load volatile i64*, i64** %10
  store i64 %1, i64* %42, align 8
  %43 = load volatile i8**, i8*** %9
  store i8* %2, i8** %43, align 8
  %44 = load %"class.std::vector.10"*, %"class.std::vector.10"** %37, align 8
  store %"class.std::vector.10"* %44, %"class.std::vector.10"** %6
  %45 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %46 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"* %45) #3
  %47 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %48 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %47) #3
  %49 = sub i64 0, %48
  %50 = add i64 %46, %49
  %51 = sub i64 %46, %48
  %52 = load volatile i64*, i64** %10
  %53 = load i64, i64* %52, align 8
  %54 = icmp ult i64 %50, %53
  store i1 %54, i1* %5
  %55 = load i32, i32* @x.463
  %56 = load i32, i32* @y.464
  %57 = sub i32 %55, 333878213
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 333878213
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 1605754403, i32 -375565977
  store i32 %69, i32* %23
  br label %234

; <label>:70:                                     ; preds = %25
  %71 = load volatile i1, i1* %5
  %72 = select i1 %71, i32 13339770, i32 1579822505
  store i32 %72, i32* %23
  br label %234

; <label>:73:                                     ; preds = %25
  %74 = load i32, i32* @x.463
  %75 = load i32, i32* @y.464
  %76 = sub i32 0, 1
  %77 = add i32 %74, %76
  %78 = sub i32 %74, 1
  %79 = mul i32 %74, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %75, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  %87 = select i1 %85, i32 -1591425066, i32 577272001
  store i32 %87, i32* %23
  br label %234

; <label>:88:                                     ; preds = %25
  %89 = load volatile i8**, i8*** %9
  %90 = load i8*, i8** %89, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %90) #12
  %91 = load i32, i32* @x.463
  %92 = load i32, i32* @y.464
  %93 = add i32 %91, 219715772
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 219715772
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 218986451, i32 577272001
  store i32 %105, i32* %23
  br label %234

; <label>:106:                                    ; preds = %25
  unreachable

; <label>:107:                                    ; preds = %25
  %108 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %109 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %108) #3
  %110 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %111 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %110) #3
  %112 = load volatile i64*, i64** %7
  store i64 %111, i64* %112, align 8
  %113 = load volatile i64*, i64** %10
  %114 = load volatile i64*, i64** %7
  %115 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %114, i64* dereferenceable(8) %113)
  %116 = load i64, i64* %115, align 8
  %117 = sub i64 %109, 6147949188913716393
  %118 = add i64 %117, %116
  %119 = add i64 %118, 6147949188913716393
  %120 = add i64 %109, %116
  %121 = load volatile i64*, i64** %8
  store i64 %119, i64* %121, align 8
  %122 = load volatile i64*, i64** %8
  %123 = load i64, i64* %122, align 8
  %124 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %125 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %124) #3
  %126 = icmp ult i64 %123, %125
  %127 = select i1 %126, i32 279573099, i32 -470225227
  store i32 %127, i32* %23
  br label %234

; <label>:128:                                    ; preds = %25
  %129 = load volatile i64*, i64** %8
  %130 = load i64, i64* %129, align 8
  %131 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %132 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"* %131) #3
  %133 = icmp ugt i64 %130, %132
  %134 = select i1 %133, i32 279573099, i32 -1987099820
  store i32 %134, i32* %23
  br label %234

; <label>:135:                                    ; preds = %25
  %136 = load i32, i32* @x.463
  %137 = load i32, i32* @y.464
  %138 = add i32 %136, -594426175
  %139 = sub i32 %138, 1
  %140 = sub i32 %139, -594426175
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  %162 = select i1 %160, i32 -1318757809, i32 -66295799
  store i32 %162, i32* %23
  br label %234

; <label>:163:                                    ; preds = %25
  %164 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %165 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"* %164) #3
  store i64 %165, i64* %4
  %166 = load i32, i32* @x.463
  %167 = load i32, i32* @y.464
  %168 = sub i32 %166, 929635371
  %169 = sub i32 %168, 1
  %170 = add i32 %169, 929635371
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  %180 = select i1 %178, i32 -17946943, i32 -66295799
  store i32 %180, i32* %23
  br label %234

; <label>:181:                                    ; preds = %25
  store i32 -77753437, i32* %23
  %182 = load volatile i64, i64* %4
  store i64 %182, i64* %24
  br label %234

; <label>:183:                                    ; preds = %25
  %184 = load volatile i64*, i64** %8
  %185 = load i64, i64* %184, align 8
  store i32 -77753437, i32* %23
  store i64 %185, i64* %24
  br label %234

; <label>:186:                                    ; preds = %25
  %187 = load i64, i64* %24
  ret i64 %187

; <label>:188:                                    ; preds = %25
  %189 = alloca %"class.std::vector.10"*, align 8
  %190 = alloca i64, align 8
  %191 = alloca i8*, align 8
  %192 = alloca i64, align 8
  %193 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %189, align 8
  store i64 %1, i64* %190, align 8
  store i8* %2, i8** %191, align 8
  %194 = load %"class.std::vector.10"*, %"class.std::vector.10"** %189, align 8
  %195 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"* %194) #3
  %196 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE4sizeEv(%"class.std::vector.10"* %194) #3
  %197 = sub i64 %195, -1575165293474512214
  %198 = sub i64 %197, %196
  %199 = add i64 %198, -1575165293474512214
  %200 = sub i64 %195, %196
  %201 = mul i64 %199, %196
  %202 = shl i64 %195, %196
  %203 = shl i64 %195, %196
  %204 = shl i64 %195, %196
  %205 = add i64 0, -828944605432975010
  %206 = sub i64 %205, %195
  %207 = sub i64 %206, -828944605432975010
  %208 = sub i64 0, %195
  %209 = add i64 %207, -557500805198678880
  %210 = add i64 %209, %196
  %211 = sub i64 %210, -557500805198678880
  %212 = add i64 %207, %196
  %213 = add i64 %195, 1151822427456160191
  %214 = sub i64 %213, %196
  %215 = sub i64 %214, 1151822427456160191
  %216 = sub i64 %195, %196
  %217 = mul i64 %215, %196
  %218 = sub i64 0, %196
  %219 = add i64 %195, %218
  %220 = sub i64 %195, %196
  %221 = mul i64 %219, %196
  %222 = add i64 %195, -8000092331791228643
  %223 = sub i64 %222, %196
  %224 = sub i64 %223, -8000092331791228643
  %225 = sub i64 %195, %196
  %226 = load i64, i64* %190, align 8
  %227 = icmp ult i64 %224, %226
  store i32 58893982, i32* %23
  br label %234

; <label>:228:                                    ; preds = %25
  %229 = load volatile i8**, i8*** %9
  %230 = load i8*, i8** %229, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %230) #12
  store i32 -1591425066, i32* %23
  br label %234

; <label>:231:                                    ; preds = %25
  %232 = load volatile %"class.std::vector.10"*, %"class.std::vector.10"** %6
  %233 = call i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"* %232) #3
  store i32 -1318757809, i32* %23
  br label %234

; <label>:234:                                    ; preds = %231, %228, %188, %183, %181, %163, %135, %128, %107, %88, %73, %70, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZNSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base.11"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::list"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.11"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.465
  %10 = load i32, i32* @y.466
  %11 = add i32 %9, 1933476553
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 1933476553
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -516445113, i32* %19
  %20 = alloca %"class.std::__cxx11::list"*
  br label %21

; <label>:21:                                     ; preds = %2, %136
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 -516445113, label %24
    i32 217144071, label %32
    i32 1642671069, label %67
    i32 -1395872635, label %70
    i32 644848206, label %97
    i32 -581364502, label %118
    i32 -2077613453, label %120
    i32 1536396962, label %121
    i32 -170983563, label %123
    i32 -153615924, label %129
  ]

; <label>:23:                                     ; preds = %21
  br label %136

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 217144071, i32 -170983563
  store i32 %31, i32* %19
  br label %136

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.11"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %33, align 8
  store %"struct.std::_Vector_base.11"* %36, %"struct.std::_Vector_base.11"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.465
  %41 = load i32, i32* @y.466
  %42 = add i32 %40, -1971894824
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1971894824
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 1642671069, i32 -170983563
  store i32 %66, i32* %19
  br label %136

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -1395872635, i32 -2077613453
  store i32 %69, i32* %19
  br label %136

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.465
  %72 = load i32, i32* @y.466
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 644848206, i32 -153615924
  store i32 %96, i32* %19
  br label %136

; <label>:97:                                     ; preds = %21
  %98 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %99 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %98, i32 0, i32 0
  %100 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %99 to %"class.std::allocator.12"*
  %101 = load volatile i64*, i64** %6
  %102 = load i64, i64* %101, align 8
  %103 = call %"class.std::__cxx11::list"* @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8allocateERS4_m(%"class.std::allocator.12"* dereferenceable(1) %100, i64 %102)
  store %"class.std::__cxx11::list"* %103, %"class.std::__cxx11::list"** %3
  %104 = load i32, i32* @x.465
  %105 = load i32, i32* @y.466
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  %117 = select i1 %115, i32 -581364502, i32 -153615924
  store i32 %117, i32* %19
  br label %136

; <label>:118:                                    ; preds = %21
  store i32 1536396962, i32* %19
  %119 = load volatile %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3
  store %"class.std::__cxx11::list"* %119, %"class.std::__cxx11::list"** %20
  br label %136

; <label>:120:                                    ; preds = %21
  store i32 1536396962, i32* %19
  store %"class.std::__cxx11::list"* null, %"class.std::__cxx11::list"** %20
  br label %136

; <label>:121:                                    ; preds = %21
  %122 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %20
  ret %"class.std::__cxx11::list"* %122

; <label>:123:                                    ; preds = %21
  %124 = alloca %"struct.std::_Vector_base.11"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %124, align 8
  store i64 %1, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %124, align 8
  %127 = load i64, i64* %125, align 8
  %128 = icmp ne i64 %127, 0
  store i32 217144071, i32* %19
  br label %136

; <label>:129:                                    ; preds = %21
  %130 = load volatile %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %5
  %131 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %130, i32 0, i32 0
  %132 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %131 to %"class.std::allocator.12"*
  %133 = load volatile i64*, i64** %6
  %134 = load i64, i64* %133, align 8
  %135 = call %"class.std::__cxx11::list"* @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8allocateERS4_m(%"class.std::allocator.12"* dereferenceable(1) %132, i64 %134)
  store i32 644848206, i32* %19
  br label %136

; <label>:136:                                    ; preds = %129, %123, %120, %118, %97, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt34__uninitialized_move_if_noexcept_aIPNSt7__cxx114listIiSaIiEEES4_SaIS3_EET0_T_S7_S6_RT1_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::__cxx11::list"*, align 8
  %6 = alloca %"class.std::__cxx11::list"*, align 8
  %7 = alloca %"class.std::__cxx11::list"*, align 8
  %8 = alloca %"class.std::allocator.12"*, align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = alloca %"class.std::move_iterator.31", align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %5, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %6, align 8
  store %"class.std::__cxx11::list"* %2, %"class.std::__cxx11::list"** %7, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %8, align 8
  %11 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %5, align 8
  %12 = call %"class.std::__cxx11::list"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx114listIiSaIiEEESt13move_iteratorIS4_EET0_T_(%"class.std::__cxx11::list"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  store %"class.std::__cxx11::list"* %12, %"class.std::__cxx11::list"** %13, align 8
  %14 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %6, align 8
  %15 = call %"class.std::__cxx11::list"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx114listIiSaIiEEESt13move_iteratorIS4_EET0_T_(%"class.std::__cxx11::list"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  store %"class.std::__cxx11::list"* %15, %"class.std::__cxx11::list"** %16, align 8
  %17 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %18 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  %22 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %21, align 8
  %23 = call %"class.std::__cxx11::list"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_S4_ET0_T_S8_S7_RSaIT1_E(%"class.std::__cxx11::list"* %20, %"class.std::__cxx11::list"* %22, %"class.std::__cxx11::list"* %17, %"class.std::allocator.12"* dereferenceable(1) %18)
  ret %"class.std::__cxx11::list"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt25__uninitialized_default_nIPNSt7__cxx114listIiSaIiEEEmET_S5_T0_(%"class.std::__cxx11::list"*, i64) #0 comdat {
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::list"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx114listIiSaIiEEEmEET_S7_T0_(%"class.std::__cxx11::list"* %6, i64 %7)
  ret %"class.std::__cxx11::list"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx114listIiSaIiEEEmEET_S7_T0_(%"class.std::__cxx11::list"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.471
  %4 = load i32, i32* @y.472
  %5 = sub i32 %3, -696871511
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -696871511
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %267

; <label>:29:                                     ; preds = %2, %267
  %30 = alloca %"class.std::__cxx11::list"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::__cxx11::list"*, align 8
  %33 = alloca i8*
  %34 = alloca i32
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %30, align 8
  store i64 %1, i64* %31, align 8
  %35 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %30, align 8
  store %"class.std::__cxx11::list"* %35, %"class.std::__cxx11::list"** %32, align 8
  %36 = load i32, i32* @x.471
  %37 = load i32, i32* @y.472
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %267

; <label>:61:                                     ; preds = %29
  br label %62

; <label>:62:                                     ; preds = %69, %61
  %63 = load i64, i64* %31, align 8
  %64 = icmp ugt i64 %63, 0
  br i1 %64, label %65, label %156

; <label>:65:                                     ; preds = %62
  %66 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  %67 = call %"class.std::__cxx11::list"* @_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_(%"class.std::__cxx11::list"* dereferenceable(24) %66) #3
  invoke void @_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJEEvPT_DpOT0_(%"class.std::__cxx11::list"* %67)
          to label %68 unwind label %77

; <label>:68:                                     ; preds = %65
  br label %69

; <label>:69:                                     ; preds = %68
  %70 = load i64, i64* %31, align 8
  %71 = add i64 %70, 3360230133130075124
  %72 = add i64 %71, -1
  %73 = sub i64 %72, 3360230133130075124
  %74 = add i64 %70, -1
  store i64 %73, i64* %31, align 8
  %75 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  %76 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %75, i32 1
  store %"class.std::__cxx11::list"* %76, %"class.std::__cxx11::list"** %32, align 8
  br label %62

; <label>:77:                                     ; preds = %65
  %78 = load i32, i32* @x.471
  %79 = load i32, i32* @y.472
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %274

; <label>:91:                                     ; preds = %77, %274
  %92 = landingpad { i8*, i32 }
          catch i8* null
  %93 = extractvalue { i8*, i32 } %92, 0
  store i8* %93, i8** %33, align 8
  %94 = extractvalue { i8*, i32 } %92, 1
  store i32 %94, i32* %34, align 4
  %95 = load i32, i32* @x.471
  %96 = load i32, i32* @y.472
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %274

; <label>:120:                                    ; preds = %91
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i8*, i8** %33, align 8
  %123 = call i8* @__cxa_begin_catch(i8* %122) #3
  %124 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %30, align 8
  %125 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEEEvT_S5_(%"class.std::__cxx11::list"* %124, %"class.std::__cxx11::list"* %125)
          to label %126 unwind label %158

; <label>:126:                                    ; preds = %121
  %127 = load i32, i32* @x.471
  %128 = load i32, i32* @y.472
  %129 = sub i32 %127, 285238451
  %130 = sub i32 %129, 1
  %131 = add i32 %130, 285238451
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  br i1 %139, label %141, label %278

; <label>:141:                                    ; preds = %126, %278
  %142 = load i32, i32* @x.471
  %143 = load i32, i32* @y.472
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %278

; <label>:155:                                    ; preds = %141
  invoke void @__cxa_rethrow() #12
          to label %266 unwind label %158

; <label>:156:                                    ; preds = %62
  %157 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %32, align 8
  ret %"class.std::__cxx11::list"* %157

; <label>:158:                                    ; preds = %155, %121
  %159 = landingpad { i8*, i32 }
          cleanup
  %160 = extractvalue { i8*, i32 } %159, 0
  store i8* %160, i8** %33, align 8
  %161 = extractvalue { i8*, i32 } %159, 1
  store i32 %161, i32* %34, align 4
  invoke void @__cxa_end_catch()
          to label %162 unwind label %210

; <label>:162:                                    ; preds = %158
  br label %164
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:164:                                    ; preds = %162
  %165 = load i32, i32* @x.471
  %166 = load i32, i32* @y.472
  %167 = sub i32 %165, 935349802
  %168 = sub i32 %167, 1
  %169 = add i32 %168, 935349802
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = and i1 %173, %174
  %176 = xor i1 %173, %174
  %177 = or i1 %175, %176
  %178 = or i1 %173, %174
  br i1 %177, label %179, label %279

; <label>:179:                                    ; preds = %164, %279
  %180 = load i8*, i8** %33, align 8
  %181 = load i32, i32* %34, align 4
  %182 = insertvalue { i8*, i32 } undef, i8* %180, 0
  %183 = insertvalue { i8*, i32 } %182, i32 %181, 1
  %184 = load i32, i32* @x.471
  %185 = load i32, i32* @y.472
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  br i1 %207, label %209, label %279

; <label>:209:                                    ; preds = %179
  resume { i8*, i32 } %183

; <label>:210:                                    ; preds = %158
  %211 = load i32, i32* @x.471
  %212 = load i32, i32* @y.472
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = xor i1 %218, true
  %221 = xor i1 %219, true
  %222 = xor i1 false, true
  %223 = and i1 %220, false
  %224 = and i1 %218, %222
  %225 = and i1 %221, false
  %226 = and i1 %219, %222
  %227 = or i1 %223, %224
  %228 = or i1 %225, %226
  %229 = xor i1 %227, %228
  %230 = or i1 %220, %221
  %231 = xor i1 %230, true
  %232 = or i1 false, %222
  %233 = and i1 %231, %232
  %234 = or i1 %229, %233
  %235 = or i1 %218, %219
  br i1 %234, label %236, label %284

; <label>:236:                                    ; preds = %210, %284
  %237 = landingpad { i8*, i32 }
          catch i8* null
  %238 = extractvalue { i8*, i32 } %237, 0
  call void @__clang_call_terminate(i8* %238) #11
  %239 = load i32, i32* @x.471
  %240 = load i32, i32* @y.472
  %241 = add i32 %239, -1441365299
  %242 = sub i32 %241, 1
  %243 = sub i32 %242, -1441365299
  %244 = sub i32 %239, 1
  %245 = mul i32 %239, %243
  %246 = urem i32 %245, 2
  %247 = icmp eq i32 %246, 0
  %248 = icmp slt i32 %240, 10
  %249 = xor i1 %247, true
  %250 = xor i1 %248, true
  %251 = xor i1 false, true
  %252 = and i1 %249, false
  %253 = and i1 %247, %251
  %254 = and i1 %250, false
  %255 = and i1 %248, %251
  %256 = or i1 %252, %253
  %257 = or i1 %254, %255
  %258 = xor i1 %256, %257
  %259 = or i1 %249, %250
  %260 = xor i1 %259, true
  %261 = or i1 false, %251
  %262 = and i1 %260, %261
  %263 = or i1 %258, %262
  %264 = or i1 %247, %248
  br i1 %263, label %265, label %284

; <label>:265:                                    ; preds = %236
  unreachable

; <label>:266:                                    ; preds = %155
  unreachable

; <label>:267:                                    ; preds = %29, %2
  %268 = alloca %"class.std::__cxx11::list"*, align 8
  %269 = alloca i64, align 8
  %270 = alloca %"class.std::__cxx11::list"*, align 8
  %271 = alloca i8*
  %272 = alloca i32
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %268, align 8
  store i64 %1, i64* %269, align 8
  %273 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %268, align 8
  store %"class.std::__cxx11::list"* %273, %"class.std::__cxx11::list"** %270, align 8
  br label %29

; <label>:274:                                    ; preds = %91, %77
  %275 = landingpad { i8*, i32 }
          catch i8* null
  %276 = extractvalue { i8*, i32 } %275, 0
  store i8* %276, i8** %33, align 8
  %277 = extractvalue { i8*, i32 } %275, 1
  store i32 %277, i32* %34, align 4
  br label %91

; <label>:278:                                    ; preds = %141, %126
  br label %141

; <label>:279:                                    ; preds = %179, %164
  %280 = load i8*, i8** %33, align 8
  %281 = load i32, i32* %34, align 4
  %282 = insertvalue { i8*, i32 } undef, i8* %280, 0
  %283 = insertvalue { i8*, i32 } %282, i32 %281, 1
  br label %179

; <label>:284:                                    ; preds = %236, %210
  %285 = landingpad { i8*, i32 }
          catch i8* null
  %286 = extractvalue { i8*, i32 } %285, 0
  call void @__clang_call_terminate(i8* %286) #11
  br label %236
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJEEvPT_DpOT0_(%"class.std::__cxx11::list"*) #4 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.473
  %5 = load i32, i32* @y.474
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 442872350, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %51
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 442872350, label %17
    i32 992390684, label %25
    i32 -1175600831, label %45
    i32 2120952684, label %46
  ]

; <label>:16:                                     ; preds = %14
  br label %51

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 992390684, i32 2120952684
  store i32 %24, i32* %13
  br label %51

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %26, align 8
  %27 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %26, align 8
  %28 = bitcast %"class.std::__cxx11::list"* %27 to i8*
  %29 = bitcast i8* %28 to %"class.std::__cxx11::list"*
  call void @_ZNSt7__cxx114listIiSaIiEEC2Ev(%"class.std::__cxx11::list"* %29) #3
  %30 = load i32, i32* @x.473
  %31 = load i32, i32* @y.474
  %32 = add i32 %30, -1294936529
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1294936529
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1175600831, i32 2120952684
  store i32 %44, i32* %13
  br label %51

; <label>:45:                                     ; preds = %14
  ret void

; <label>:46:                                     ; preds = %14
  %47 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %47, align 8
  %48 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %47, align 8
  %49 = bitcast %"class.std::__cxx11::list"* %48 to i8*
  %50 = bitcast i8* %49 to %"class.std::__cxx11::list"*
  call void @_ZNSt7__cxx114listIiSaIiEEC2Ev(%"class.std::__cxx11::list"* %50) #3
  store i32 992390684, i32* %13
  br label %51

; <label>:51:                                     ; preds = %46, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEEC2Ev(%"class.std::__cxx11::list"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::list"* %3 to %"class.std::__cxx11::_List_base"*
  invoke void @_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev(%"class.std::__cxx11::_List_base"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEEC2Ev(%"class.std::__cxx11::_List_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.477
  %5 = load i32, i32* @y.478
  %6 = add i32 %4, 612844321
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 612844321
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 347770743, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 347770743, label %18
    i32 1280432696, label %26
    i32 1770965738, label %44
    i32 1024697196, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1280432696, i32 1024697196
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %27, align 8
  %28 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %28, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %29)
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %28) #3
  %30 = load i32, i32* @x.477
  %31 = load i32, i32* @y.478
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1770965738, i32 1024697196
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %46, align 8
  %47 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %46, align 8
  %48 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %47, i32 0, i32 0
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %48)
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %47) #3
  store i32 1280432696, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.479
  %3 = load i32, i32* @y.480
  %4 = sub i32 %2, -25005950
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -25005950
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %156

; <label>:28:                                     ; preds = %1, %156
  %29 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %29, align 8
  %32 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %29, align 8
  %33 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %32 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEEC2Ev(%"class.std::allocator.15"* %33) #3
  %34 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %32, i32 0, i32 0
  %35 = load i32, i32* @x.479
  %36 = load i32, i32* @y.480
  %37 = sub i32 %35, -926566008
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -926566008
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %156

; <label>:61:                                     ; preds = %28
  invoke void @_ZNSt10_List_nodeImEC2IJEEEDpOT_(%"struct.std::_List_node"* %34)
          to label %62 unwind label %117

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.479
  %64 = load i32, i32* @y.480
  %65 = sub i32 %63, -1182339105
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1182339105
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %163

; <label>:89:                                     ; preds = %62, %163
  %90 = load i32, i32* @x.479
  %91 = load i32, i32* @y.480
  %92 = add i32 %90, 2095600378
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, 2095600378
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %163

; <label>:116:                                    ; preds = %89
  ret void

; <label>:117:                                    ; preds = %61
  %118 = load i32, i32* @x.479
  %119 = load i32, i32* @y.480
  %120 = sub i32 %118, -1549267532
  %121 = sub i32 %120, 1
  %122 = add i32 %121, -1549267532
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  br i1 %130, label %132, label %164

; <label>:132:                                    ; preds = %117, %164
  %133 = landingpad { i8*, i32 }
          cleanup
  %134 = extractvalue { i8*, i32 } %133, 0
  store i8* %134, i8** %30, align 8
  %135 = extractvalue { i8*, i32 } %133, 1
  store i32 %135, i32* %31, align 4
  %136 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %32 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"* %136) #3
  %137 = load i32, i32* @x.479
  %138 = load i32, i32* @y.480
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %164

; <label>:150:                                    ; preds = %132
  br label %151

; <label>:151:                                    ; preds = %150
  %152 = load i8*, i8** %30, align 8
  %153 = load i32, i32* %31, align 4
  %154 = insertvalue { i8*, i32 } undef, i8* %152, 0
  %155 = insertvalue { i8*, i32 } %154, i32 %153, 1
  resume { i8*, i32 } %155

; <label>:156:                                    ; preds = %28, %1
  %157 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, align 8
  %158 = alloca i8*
  %159 = alloca i32
  store %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %157, align 8
  %160 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %157, align 8
  %161 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %160 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEEC2Ev(%"class.std::allocator.15"* %161) #3
  %162 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %160, i32 0, i32 0
  br label %28

; <label>:163:                                    ; preds = %89, %62
  br label %89

; <label>:164:                                    ; preds = %132, %117
  %165 = landingpad { i8*, i32 }
          cleanup
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %30, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %31, align 4
  %168 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %32 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"* %168) #3
  br label %132
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.481
  %3 = load i32, i32* @y.482
  %4 = sub i32 %2, -1334693282
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -1334693282
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %94

; <label>:28:                                     ; preds = %1, %94
  %29 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %29, align 8
  %30 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %29, align 8
  %31 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_List_node"* %32 to %"struct.std::__detail::_List_node_base"*
  %34 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %34, i32 0, i32 0
  %36 = bitcast %"struct.std::_List_node"* %35 to %"struct.std::__detail::_List_node_base"*
  %37 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %36, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %33, %"struct.std::__detail::_List_node_base"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %38, i32 0, i32 0
  %40 = bitcast %"struct.std::_List_node"* %39 to %"struct.std::__detail::_List_node_base"*
  %41 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %30, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_List_node"* %42 to %"struct.std::__detail::_List_node_base"*
  %44 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %43, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %40, %"struct.std::__detail::_List_node_base"** %44, align 8
  %45 = load i32, i32* @x.481
  %46 = load i32, i32* @y.482
  %47 = sub i32 %45, 1758766090
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1758766090
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %94

; <label>:59:                                     ; preds = %28
  invoke void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_set_sizeEm(%"class.std::__cxx11::_List_base"* %30, i64 0)
          to label %60 unwind label %61

; <label>:60:                                     ; preds = %59
  ret void

; <label>:61:                                     ; preds = %59
  %62 = load i32, i32* @x.481
  %63 = load i32, i32* @y.482
  %64 = add i32 %62, -1147892812
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, -1147892812
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %111

; <label>:76:                                     ; preds = %61, %111
  %77 = landingpad { i8*, i32 }
          catch i8* null
  %78 = extractvalue { i8*, i32 } %77, 0
  call void @__clang_call_terminate(i8* %78) #11
  %79 = load i32, i32* @x.481
  %80 = load i32, i32* @y.482
  %81 = add i32 %79, 1920935289
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, 1920935289
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %111

; <label>:93:                                     ; preds = %76
  unreachable

; <label>:94:                                     ; preds = %28, %1
  %95 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %95, align 8
  %96 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %97, i32 0, i32 0
  %99 = bitcast %"struct.std::_List_node"* %98 to %"struct.std::__detail::_List_node_base"*
  %100 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %96, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %100, i32 0, i32 0
  %102 = bitcast %"struct.std::_List_node"* %101 to %"struct.std::__detail::_List_node_base"*
  %103 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %102, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %99, %"struct.std::__detail::_List_node_base"** %103, align 8
  %104 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %96, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_List_node"* %105 to %"struct.std::__detail::_List_node_base"*
  %107 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %96, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %107, i32 0, i32 0
  %109 = bitcast %"struct.std::_List_node"* %108 to %"struct.std::__detail::_List_node_base"*
  %110 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %109, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %106, %"struct.std::__detail::_List_node_base"** %110, align 8
  br label %28

; <label>:111:                                    ; preds = %76, %61
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  call void @__clang_call_terminate(i8* %113) #11
  br label %76
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt10_List_nodeIiEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.483
  %5 = load i32, i32* @y.484
  %6 = add i32 %4, -2128094144
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -2128094144
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -487081820, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -487081820, label %18
    i32 1322410245, label %26
    i32 -235025198, label %56
    i32 -584841652, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1322410245, i32 -584841652
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %27, align 8
  %28 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %27, align 8
  %29 = bitcast %"class.std::allocator.15"* %28 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %29) #3
  %30 = load i32, i32* @x.483
  %31 = load i32, i32* @y.484
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -235025198, i32 -584841652
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %58, align 8
  %59 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %58, align 8
  %60 = bitcast %"class.std::allocator.15"* %59 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %60) #3
  store i32 1322410245, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_List_nodeImEC2IJEEEDpOT_(%"struct.std::_List_node"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.485
  %5 = load i32, i32* @y.486
  %6 = add i32 %4, 1565202869
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1565202869
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1684153586, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1684153586, label %18
    i32 -1020755628, label %26
    i32 1547961663, label %60
    i32 1974495221, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1020755628, i32 1974495221
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %0, %"struct.std::_List_node"** %27, align 8
  %28 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %27, align 8
  %29 = bitcast %"struct.std::_List_node"* %28 to %"struct.std::__detail::_List_node_base"*
  %30 = bitcast %"struct.std::__detail::_List_node_base"* %29 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 0
  call void @llvm.memset.p0i8.i64(i8* %31, i8 0, i64 16, i32 8, i1 false)
  %32 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %28, i32 0, i32 1
  store i64 0, i64* %32, align 8
  %33 = load i32, i32* @x.485
  %34 = load i32, i32* @y.486
  %35 = sub i32 %33, -1449349830
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1449349830
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1547961663, i32 1974495221
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %0, %"struct.std::_List_node"** %62, align 8
  %63 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %62, align 8
  %64 = bitcast %"struct.std::_List_node"* %63 to %"struct.std::__detail::_List_node_base"*
  %65 = bitcast %"struct.std::__detail::_List_node_base"* %64 to i8*
  %66 = getelementptr inbounds i8, i8* %65, i64 0
  call void @llvm.memset.p0i8.i64(i8* %66, i8 0, i64 16, i32 8, i1 false)
  %67 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %63, i32 0, i32 1
  store i64 0, i64* %67, align 8
  store i32 -1020755628, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i32, i1) #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_set_sizeEm(%"class.std::__cxx11::_List_base"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i32 0, i32 1
  store i64 %6, i64* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EE8max_sizeEv(%"class.std::vector.10"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.10"*, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %2, align 8
  %3 = load %"class.std::vector.10"*, %"class.std::vector.10"** %2, align 8
  %4 = bitcast %"class.std::vector.10"* %3 to %"struct.std::_Vector_base.11"*
  %5 = call dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8max_sizeERKS4_(%"class.std::allocator.12"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8max_sizeERKS4_(%"class.std::allocator.12"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.12"*, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %2, align 8
  %3 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %2, align 8
  %4 = bitcast %"class.std::allocator.12"* %3 to %"class.__gnu_cxx::new_allocator.13"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.12"* @_ZNKSt12_Vector_baseINSt7__cxx114listIiSaIiEEESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.11"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.11"*, align 8
  store %"struct.std::_Vector_base.11"* %0, %"struct.std::_Vector_base.11"** %2, align 8
  %3 = load %"struct.std::_Vector_base.11"*, %"struct.std::_Vector_base.11"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %4 to %"class.std::allocator.12"*
  ret %"class.std::allocator.12"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.497
  %5 = load i32, i32* @y.498
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -125988101, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %71
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -125988101, label %17
    i32 -1991508704, label %37
    i32 -138218428, label %67
    i32 506744777, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %71

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1991508704, i32 506744777
  store i32 %36, i32* %13
  br label %71

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %38, align 8
  %40 = load i32, i32* @x.497
  %41 = load i32, i32* @y.498
  %42 = sub i32 %40, 176897742
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 176897742
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -138218428, i32 506744777
  store i32 %66, i32* %13
  br label %71

; <label>:67:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %69, align 8
  store i32 -1991508704, i32* %13
  br label %71

; <label>:71:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZNSt16allocator_traitsISaINSt7__cxx114listIiSaIiEEEEE8allocateERS4_m(%"class.std::allocator.12"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::list"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.499
  %7 = load i32, i32* @y.500
  %8 = add i32 %6, -381449828
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -381449828
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -540352485, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -540352485, label %20
    i32 -1361884365, label %28
    i32 199158538, label %50
    i32 -105884623, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1361884365, i32 -105884623
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.12"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %29, align 8
  %32 = bitcast %"class.std::allocator.12"* %31 to %"class.__gnu_cxx::new_allocator.13"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"class.std::__cxx11::list"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %32, i64 %33, i8* null)
  store %"class.std::__cxx11::list"* %34, %"class.std::__cxx11::list"** %3
  %35 = load i32, i32* @x.499
  %36 = load i32, i32* @y.500
  %37 = add i32 %35, -2082551945
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -2082551945
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 199158538, i32 -105884623
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3
  ret %"class.std::__cxx11::list"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.12"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.12"* %0, %"class.std::allocator.12"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.12"*, %"class.std::allocator.12"** %53, align 8
  %56 = bitcast %"class.std::allocator.12"* %55 to %"class.__gnu_cxx::new_allocator.13"*
  %57 = load i64, i64* %54, align 8
  %58 = call %"class.std::__cxx11::list"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"* %56, i64 %57, i8* null)
  store i32 -1361884365, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.501
  %9 = load i32, i32* @y.502
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1622251364, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1622251364, label %21
    i32 2127167631, label %41
    i32 -757032435, label %77
    i32 266231253, label %80
    i32 -229257620, label %81
    i32 1932744633, label %87
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 2127167631, i32 1932744633
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.501
  %52 = load i32, i32* @y.502
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 false, true
  %63 = and i1 %60, false
  %64 = and i1 %58, %62
  %65 = and i1 %61, false
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 false, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -757032435, i32 1932744633
  store i32 %76, i32* %17
  br label %95

; <label>:77:                                     ; preds = %18
  %78 = load volatile i1, i1* %4
  %79 = select i1 %78, i32 266231253, i32 -229257620
  store i32 %79, i32* %17
  br label %95

; <label>:80:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:81:                                     ; preds = %18
  %82 = load volatile i64*, i64** %5
  %83 = load i64, i64* %82, align 8
  %84 = mul i64 %83, 24
  %85 = call i8* @_Znwm(i64 %84)
  %86 = bitcast i8* %85 to %"class.std::__cxx11::list"*
  ret %"class.std::__cxx11::list"* %86

; <label>:87:                                     ; preds = %18
  %88 = alloca %"class.__gnu_cxx::new_allocator.13"*, align 8
  %89 = alloca i64, align 8
  %90 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.13"* %0, %"class.__gnu_cxx::new_allocator.13"** %88, align 8
  store i64 %1, i64* %89, align 8
  store i8* %2, i8** %90, align 8
  %91 = load %"class.__gnu_cxx::new_allocator.13"*, %"class.__gnu_cxx::new_allocator.13"** %88, align 8
  %92 = load i64, i64* %89, align 8
  %93 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx114listIiSaIiEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.13"* %91) #3
  %94 = icmp ugt i64 %92, %93
  store i32 2127167631, i32* %17
  br label %95

; <label>:95:                                     ; preds = %87, %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_S4_ET0_T_S8_S7_RSaIT1_E(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::allocator.12"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca %"class.std::move_iterator.31", align 8
  %7 = alloca %"class.std::__cxx11::list"*, align 8
  %8 = alloca %"class.std::allocator.12"*, align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = alloca %"class.std::move_iterator.31", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %6, i32 0, i32 0
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %12, align 8
  store %"class.std::__cxx11::list"* %2, %"class.std::__cxx11::list"** %7, align 8
  store %"class.std::allocator.12"* %3, %"class.std::allocator.12"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.31"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.31"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.31"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %19 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %10, i32 0, i32 0
  %21 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %20, align 8
  %22 = call %"class.std::__cxx11::list"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_ET0_T_S8_S7_(%"class.std::__cxx11::list"* %19, %"class.std::__cxx11::list"* %21, %"class.std::__cxx11::list"* %17)
  ret %"class.std::__cxx11::list"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt32__make_move_if_noexcept_iteratorIPNSt7__cxx114listIiSaIiEEESt13move_iteratorIS4_EET0_T_(%"class.std::__cxx11::list"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.31", align 8
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  call void @_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEC2ES4_(%"class.std::move_iterator.31"* %2, %"class.std::__cxx11::list"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %2, i32 0, i32 0
  %6 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %5, align 8
  ret %"class.std::__cxx11::list"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZSt18uninitialized_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES5_ET0_T_S8_S7_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.31", align 8
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca %"class.std::__cxx11::list"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.31", align 8
  %9 = alloca %"class.std::move_iterator.31", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %4, i32 0, i32 0
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %11, align 8
  store %"class.std::__cxx11::list"* %2, %"class.std::__cxx11::list"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.31"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.31"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.31"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.31"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %8, i32 0, i32 0
  %18 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %9, i32 0, i32 0
  %20 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %19, align 8
  %21 = call %"class.std::__cxx11::list"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES7_EET0_T_SA_S9_(%"class.std::__cxx11::list"* %18, %"class.std::__cxx11::list"* %20, %"class.std::__cxx11::list"* %16)
  ret %"class.std::__cxx11::list"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPNSt7__cxx114listIiSaIiEEEES7_EET0_T_SA_S9_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.31", align 8
  %5 = alloca %"class.std::move_iterator.31", align 8
  %6 = alloca %"class.std::__cxx11::list"*, align 8
  %7 = alloca %"class.std::__cxx11::list"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %4, i32 0, i32 0
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %11, align 8
  store %"class.std::__cxx11::list"* %2, %"class.std::__cxx11::list"** %6, align 8
  %12 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %6, align 8
  store %"class.std::__cxx11::list"* %12, %"class.std::__cxx11::list"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %95, %3
  %14 = load i32, i32* @x.509
  %15 = load i32, i32* @y.510
  %16 = sub i32 %14, -1255836677
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -1255836677
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %166

; <label>:28:                                     ; preds = %13, %166
  %29 = load i32, i32* @x.509
  %30 = load i32, i32* @y.510
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %166

; <label>:42:                                     ; preds = %28
  %43 = invoke zeroext i1 @_ZStneIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_(%"class.std::move_iterator.31"* dereferenceable(8) %4, %"class.std::move_iterator.31"* dereferenceable(8) %5)
          to label %44 unwind label %98

; <label>:44:                                     ; preds = %42
  br i1 %43, label %45, label %108

; <label>:45:                                     ; preds = %44
  %46 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %47 = call %"class.std::__cxx11::list"* @_ZSt11__addressofINSt7__cxx114listIiSaIiEEEEPT_RS4_(%"class.std::__cxx11::list"* dereferenceable(24) %46) #3
  %48 = invoke dereferenceable(24) %"class.std::__cxx11::list"* @_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEdeEv(%"class.std::move_iterator.31"* %4)
          to label %49 unwind label %98

; <label>:49:                                     ; preds = %45
  invoke void @_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJS3_EEvPT_DpOT0_(%"class.std::__cxx11::list"* %47, %"class.std::__cxx11::list"* dereferenceable(24) %48)
          to label %50 unwind label %98

; <label>:50:                                     ; preds = %49
  %51 = load i32, i32* @x.509
  %52 = load i32, i32* @y.510
  %53 = add i32 %51, -1948638804
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1948638804
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %167

; <label>:77:                                     ; preds = %50, %167
  %78 = load i32, i32* @x.509
  %79 = load i32, i32* @y.510
  %80 = sub i32 %78, -745342538
  %81 = sub i32 %80, 1
  %82 = add i32 %81, -745342538
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %167

; <label>:92:                                     ; preds = %77
  br label %93

; <label>:93:                                     ; preds = %92
  %94 = invoke dereferenceable(8) %"class.std::move_iterator.31"* @_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEppEv(%"class.std::move_iterator.31"* %4)
          to label %95 unwind label %98

; <label>:95:                                     ; preds = %93
  %96 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  %97 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %96, i32 1
  store %"class.std::__cxx11::list"* %97, %"class.std::__cxx11::list"** %7, align 8
  br label %13

; <label>:98:                                     ; preds = %93, %49, %45, %42
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %8, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %9, align 4
  br label %102

; <label>:102:                                    ; preds = %98
  %103 = load i8*, i8** %8, align 8
  %104 = call i8* @__cxa_begin_catch(i8* %103) #3
  %105 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %6, align 8
  %106 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx114listIiSaIiEEEEvT_S5_(%"class.std::__cxx11::list"* %105, %"class.std::__cxx11::list"* %106)
          to label %107 unwind label %110

; <label>:107:                                    ; preds = %102
  invoke void @__cxa_rethrow() #12
          to label %165 unwind label %110

; <label>:108:                                    ; preds = %44
  %109 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %7, align 8
  ret %"class.std::__cxx11::list"* %109

; <label>:110:                                    ; preds = %107, %102
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %114 unwind label %162

; <label>:114:                                    ; preds = %110
  %115 = load i32, i32* @x.509
  %116 = load i32, i32* @y.510
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %168

; <label>:128:                                    ; preds = %114, %168
  %129 = load i32, i32* @x.509
  %130 = load i32, i32* @y.510
  %131 = add i32 %129, -77724171
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -77724171
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %168

; <label>:155:                                    ; preds = %128
  br label %157
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:157:                                    ; preds = %155
  %158 = load i8*, i8** %8, align 8
  %159 = load i32, i32* %9, align 4
  %160 = insertvalue { i8*, i32 } undef, i8* %158, 0
  %161 = insertvalue { i8*, i32 } %160, i32 %159, 1
  resume { i8*, i32 } %161

; <label>:162:                                    ; preds = %110
  %163 = landingpad { i8*, i32 }
          catch i8* null
  %164 = extractvalue { i8*, i32 } %163, 0
  call void @__clang_call_terminate(i8* %164) #11
  unreachable

; <label>:165:                                    ; preds = %107
  unreachable

; <label>:166:                                    ; preds = %28, %13
  br label %28

; <label>:167:                                    ; preds = %77, %50
  br label %77

; <label>:168:                                    ; preds = %128, %114
  br label %128
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_(%"class.std::move_iterator.31"* dereferenceable(8), %"class.std::move_iterator.31"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.31"*, align 8
  %4 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %3, align 8
  store %"class.std::move_iterator.31"* %1, %"class.std::move_iterator.31"** %4, align 8
  %5 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %3, align 8
  %6 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_(%"class.std::move_iterator.31"* dereferenceable(8) %5, %"class.std::move_iterator.31"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx114listIiSaIiEEEJS3_EEvPT_DpOT0_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %4, align 8
  %5 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %6 = bitcast %"class.std::__cxx11::list"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::__cxx11::list"*
  %8 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZSt7forwardINSt7__cxx114listIiSaIiEEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::__cxx11::list"* dereferenceable(24) %8) #3
  call void @_ZNSt7__cxx114listIiSaIiEEC2EOS2_(%"class.std::__cxx11::list"* %7, %"class.std::__cxx11::list"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx11::list"* @_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEdeEv(%"class.std::move_iterator.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %2, align 8
  %3 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  ret %"class.std::__cxx11::list"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.31"* @_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEppEv(%"class.std::move_iterator.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %2, align 8
  %3 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %5, i32 1
  store %"class.std::__cxx11::list"* %6, %"class.std::__cxx11::list"** %4, align 8
  ret %"class.std::move_iterator.31"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPNSt7__cxx114listIiSaIiEEEEbRKSt13move_iteratorIT_ES9_(%"class.std::move_iterator.31"* dereferenceable(8), %"class.std::move_iterator.31"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.31"*, align 8
  %4 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %3, align 8
  store %"class.std::move_iterator.31"* %1, %"class.std::move_iterator.31"** %4, align 8
  %5 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %3, align 8
  %6 = call %"class.std::__cxx11::list"* @_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEE4baseEv(%"class.std::move_iterator.31"* %5)
  %7 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %4, align 8
  %8 = call %"class.std::__cxx11::list"* @_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEE4baseEv(%"class.std::move_iterator.31"* %7)
  %9 = icmp eq %"class.std::__cxx11::list"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::list"* @_ZNKSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEE4baseEv(%"class.std::move_iterator.31"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.31"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %2, align 8
  %3 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %3, i32 0, i32 0
  %5 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  ret %"class.std::__cxx11::list"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx11::list"* @_ZSt7forwardINSt7__cxx114listIiSaIiEEEEOT_RNSt16remove_referenceIS4_E4typeE(%"class.std::__cxx11::list"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %2, align 8
  %3 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2, align 8
  ret %"class.std::__cxx11::list"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEEC2EOS2_(%"class.std::__cxx11::list"*, %"class.std::__cxx11::list"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.525
  %6 = load i32, i32* @y.526
  %7 = add i32 %5, -892842615
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -892842615
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 214580221, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 214580221, label %19
    i32 1613988257, label %39
    i32 -1358673432, label %61
    i32 -1200493441, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1613988257, i32 -1200493441
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::__cxx11::list"*, align 8
  %41 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %40, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %41, align 8
  %42 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %40, align 8
  %43 = bitcast %"class.std::__cxx11::list"* %42 to %"class.std::__cxx11::_List_base"*
  %44 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %41, align 8
  %45 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZSt4moveIRNSt7__cxx114listIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::__cxx11::list"* dereferenceable(24) %44) #3
  %46 = bitcast %"class.std::__cxx11::list"* %45 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEEC2EOS2_(%"class.std::__cxx11::_List_base"* %43, %"class.std::__cxx11::_List_base"* dereferenceable(24) %46) #3
  %47 = load i32, i32* @x.525
  %48 = load i32, i32* @y.526
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1358673432, i32 -1200493441
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::__cxx11::list"*, align 8
  %64 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %63, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %64, align 8
  %65 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %63, align 8
  %66 = bitcast %"class.std::__cxx11::list"* %65 to %"class.std::__cxx11::_List_base"*
  %67 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %64, align 8
  %68 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZSt4moveIRNSt7__cxx114listIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::__cxx11::list"* dereferenceable(24) %67) #3
  %69 = bitcast %"class.std::__cxx11::list"* %68 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEEC2EOS2_(%"class.std::__cxx11::_List_base"* %66, %"class.std::__cxx11::_List_base"* dereferenceable(24) %69) #3
  store i32 1613988257, i32* %15
  br label %70

; <label>:70:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx11::list"* @_ZSt4moveIRNSt7__cxx114listIiSaIiEEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::__cxx11::list"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::__cxx11::list"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = sub i32 %5, -816946374
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -816946374
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1027062487, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1027062487, label %19
    i32 -962819922, label %27
    i32 1849799076, label %44
    i32 1823134861, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -962819922, i32 1823134861
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %28, align 8
  %29 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %28, align 8
  store %"class.std::__cxx11::list"* %29, %"class.std::__cxx11::list"** %2
  %30 = load i32, i32* @x.527
  %31 = load i32, i32* @y.528
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1849799076, i32 1823134861
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %2
  ret %"class.std::__cxx11::list"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %47, align 8
  %48 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %47, align 8
  store i32 -962819922, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEEC2EOS2_(%"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"* dereferenceable(24)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %4 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %5 = alloca %"struct.std::_List_node"*, align 8
  %6 = alloca %"struct.std::_List_node"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
  store %"class.std::__cxx11::_List_base"* %1, %"class.std::__cxx11::_List_base"** %4, align 8
  %9 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
  %10 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %9, i32 0, i32 0
  %11 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %4, align 8
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %11) #3
  %13 = call dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt10_List_nodeIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1) %12) #3
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2EOSaISt10_List_nodeIiEE(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %10, %"class.std::allocator.15"* dereferenceable(1) %13) #3
  %14 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %4, align 8
  %15 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %15, i32 0, i32 0
  %17 = call %"struct.std::_List_node"* @_ZSt11__addressofISt10_List_nodeImEEPT_RS2_(%"struct.std::_List_node"* dereferenceable(24) %16) #3
  store %"struct.std::_List_node"* %17, %"struct.std::_List_node"** %5, align 8
  %18 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %5, align 8
  %19 = bitcast %"struct.std::_List_node"* %18 to %"struct.std::__detail::_List_node_base"*
  %20 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %19, i32 0, i32 0
  %21 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %20, align 8
  %22 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %5, align 8
  %23 = bitcast %"struct.std::_List_node"* %22 to %"struct.std::__detail::_List_node_base"*
  %24 = icmp eq %"struct.std::__detail::_List_node_base"* %21, %23
  br i1 %24, label %25, label %26

; <label>:25:                                     ; preds = %2
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %9) #3
  br label %105

; <label>:26:                                     ; preds = %2
  %27 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %9, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %27, i32 0, i32 0
  %29 = call %"struct.std::_List_node"* @_ZSt11__addressofISt10_List_nodeImEEPT_RS2_(%"struct.std::_List_node"* dereferenceable(24) %28) #3
  store %"struct.std::_List_node"* %29, %"struct.std::_List_node"** %6, align 8
  %30 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %5, align 8
  %31 = bitcast %"struct.std::_List_node"* %30 to %"struct.std::__detail::_List_node_base"*
  %32 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %31, i32 0, i32 0
  %33 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %32, align 8
  %34 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8
  %35 = bitcast %"struct.std::_List_node"* %34 to %"struct.std::__detail::_List_node_base"*
  %36 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %35, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %33, %"struct.std::__detail::_List_node_base"** %36, align 8
  %37 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %5, align 8
  %38 = bitcast %"struct.std::_List_node"* %37 to %"struct.std::__detail::_List_node_base"*
  %39 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %38, i32 0, i32 1
  %40 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %39, align 8
  %41 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8
  %42 = bitcast %"struct.std::_List_node"* %41 to %"struct.std::__detail::_List_node_base"*
  %43 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %42, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %40, %"struct.std::__detail::_List_node_base"** %43, align 8
  %44 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8
  %45 = bitcast %"struct.std::_List_node"* %44 to %"struct.std::__detail::_List_node_base"*
  %46 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8
  %47 = bitcast %"struct.std::_List_node"* %46 to %"struct.std::__detail::_List_node_base"*
  %48 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %47, i32 0, i32 1
  %49 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %49, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %45, %"struct.std::__detail::_List_node_base"** %50, align 8
  %51 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %6, align 8
  %52 = bitcast %"struct.std::_List_node"* %51 to %"struct.std::__detail::_List_node_base"*
  %53 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %52, i32 0, i32 0
  %54 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %53, align 8
  %55 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %54, i32 0, i32 1
  store %"struct.std::__detail::_List_node_base"* %45, %"struct.std::__detail::_List_node_base"** %55, align 8
  %56 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %4, align 8
  %57 = invoke i64 @_ZNKSt7__cxx1110_List_baseIiSaIiEE11_M_get_sizeEv(%"class.std::__cxx11::_List_base"* %56)
          to label %58 unwind label %101

; <label>:58:                                     ; preds = %26
  invoke void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_set_sizeEm(%"class.std::__cxx11::_List_base"* %9, i64 %57)
          to label %59 unwind label %101

; <label>:59:                                     ; preds = %58
  %60 = load i32, i32* @x.529
  %61 = load i32, i32* @y.530
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %179

; <label>:73:                                     ; preds = %59, %179
  %74 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %4, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %74) #3
  %75 = load i32, i32* @x.529
  %76 = load i32, i32* @y.530
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = xor i1 %82, true
  %85 = xor i1 %83, true
  %86 = xor i1 false, true
  %87 = and i1 %84, false
  %88 = and i1 %82, %86
  %89 = and i1 %85, false
  %90 = and i1 %83, %86
  %91 = or i1 %87, %88
  %92 = or i1 %89, %90
  %93 = xor i1 %91, %92
  %94 = or i1 %84, %85
  %95 = xor i1 %94, true
  %96 = or i1 false, %86
  %97 = and i1 %95, %96
  %98 = or i1 %93, %97
  %99 = or i1 %82, %83
  br i1 %98, label %100, label %179

; <label>:100:                                    ; preds = %73
  br label %105

; <label>:101:                                    ; preds = %58, %26
  %102 = landingpad { i8*, i32 }
          catch i8* null
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %7, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %8, align 4
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implD2Ev(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %10) #3
  br label %136

; <label>:105:                                    ; preds = %100, %25
  %106 = load i32, i32* @x.529
  %107 = load i32, i32* @y.530
  %108 = sub i32 %106, -1432433276
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -1432433276
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %181

; <label>:120:                                    ; preds = %105, %181
  %121 = load i32, i32* @x.529
  %122 = load i32, i32* @y.530
  %123 = sub i32 %121, -341691591
  %124 = sub i32 %123, 1
  %125 = add i32 %124, -341691591
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %181

; <label>:135:                                    ; preds = %120
  ret void

; <label>:136:                                    ; preds = %101
  %137 = load i32, i32* @x.529
  %138 = load i32, i32* @y.530
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %182

; <label>:162:                                    ; preds = %136, %182
  %163 = load i8*, i8** %7, align 8
  call void @__clang_call_terminate(i8* %163) #11
  %164 = load i32, i32* @x.529
  %165 = load i32, i32* @y.530
  %166 = add i32 %164, -790959447
  %167 = sub i32 %166, 1
  %168 = sub i32 %167, -790959447
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  br i1 %176, label %178, label %182

; <label>:178:                                    ; preds = %162
  unreachable

; <label>:179:                                    ; preds = %73, %59
  %180 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %4, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %180) #3
  br label %73

; <label>:181:                                    ; preds = %120, %105
  br label %120

; <label>:182:                                    ; preds = %162, %136
  %183 = load i8*, i8** %7, align 8
  call void @__clang_call_terminate(i8* %183) #11
  br label %162
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt10_List_nodeIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.531
  %6 = load i32, i32* @y.532
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 105970144, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 105970144, label %18
    i32 -674163272, label %38
    i32 -1754591216, label %56
    i32 -1857612428, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -674163272, i32 -1857612428
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %39, align 8
  %40 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %39, align 8
  store %"class.std::allocator.15"* %40, %"class.std::allocator.15"** %2
  %41 = load i32, i32* @x.531
  %42 = load i32, i32* @y.532
  %43 = add i32 %41, -166637612
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -166637612
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1754591216, i32 -1857612428
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  %57 = load volatile %"class.std::allocator.15"*, %"class.std::allocator.15"** %2
  ret %"class.std::allocator.15"* %57

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %59, align 8
  %60 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %59, align 8
  store i32 -674163272, i32* %14
  br label %61

; <label>:61:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE10_List_implC2EOSaISt10_List_nodeIiEE(%"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %0, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %7 = load %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"*, %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"** %3, align 8
  %8 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %7 to %"class.std::allocator.15"*
  %9 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %10 = call dereferenceable(1) %"class.std::allocator.15"* @_ZSt4moveIRSaISt10_List_nodeIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.15"* dereferenceable(1) %9) #3
  call void @_ZNSaISt10_List_nodeIiEEC2ERKS1_(%"class.std::allocator.15"* %8, %"class.std::allocator.15"* dereferenceable(1) %10) #3
  %11 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %7, i32 0, i32 0
  invoke void @_ZNSt10_List_nodeImEC2IJEEEDpOT_(%"struct.std::_List_node"* %11)
          to label %12 unwind label %66

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.533
  %14 = load i32, i32* @y.534
  %15 = sub i32 %13, -1753553450
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1753553450
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %73

; <label>:39:                                     ; preds = %12, %73
  %40 = load i32, i32* @x.533
  %41 = load i32, i32* @y.534
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  br i1 %63, label %65, label %73

; <label>:65:                                     ; preds = %39
  ret void

; <label>:66:                                     ; preds = %2
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %5, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %6, align 4
  %70 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %7 to %"class.std::allocator.15"*
  call void @_ZNSaISt10_List_nodeIiEED2Ev(%"class.std::allocator.15"* %70) #3
  br label %71

; <label>:71:                                     ; preds = %66
  %72 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %72) #11
  unreachable

; <label>:73:                                     ; preds = %39, %12
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::_List_node"* @_ZSt11__addressofISt10_List_nodeImEEPT_RS2_(%"struct.std::_List_node"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.std::_List_node"*, align 8
  store %"struct.std::_List_node"* %0, %"struct.std::_List_node"** %2, align 8
  %3 = load %"struct.std::_List_node"*, %"struct.std::_List_node"** %2, align 8
  %4 = bitcast %"struct.std::_List_node"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::_List_node"*
  ret %"struct.std::_List_node"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt7__cxx1110_List_baseIiSaIiEE11_M_get_sizeEv(%"class.std::__cxx11::_List_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %5 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %5, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  ret i64 %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt10_List_nodeIiEEC2ERKS1_(%"class.std::allocator.15"*, %"class.std::allocator.15"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store %"class.std::allocator.15"* %1, %"class.std::allocator.15"** %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.16"* %6, %"class.__gnu_cxx::new_allocator.16"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %1, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPNSt7__cxx114listIiSaIiEEEEC2ES4_(%"class.std::move_iterator.31"*, %"class.std::__cxx11::list"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.31"*, align 8
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::move_iterator.31"* %0, %"class.std::move_iterator.31"** %3, align 8
  store %"class.std::__cxx11::list"* %1, %"class.std::__cxx11::list"** %4, align 8
  %5 = load %"class.std::move_iterator.31"*, %"class.std::move_iterator.31"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.31", %"class.std::move_iterator.31"* %5, i32 0, i32 0
  %7 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  store %"class.std::__cxx11::list"* %7, %"class.std::__cxx11::list"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE9push_backEOS1_(%"class.std::vector"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %7 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt4moveIRN12Template_MPM8FlowEdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"* %5, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN12Template_MPM8FlowEdgeC2Eiix(%"struct.Template_MPM::FlowEdge"*, i32, i32, i64) unnamed_addr #4 comdat align 2 {
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i64 %3, i64* %8, align 8
  %9 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %10 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %9, i32 0, i32 1
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %9, i32 0, i32 2
  %15 = load i64, i64* %8, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %9, i32 0, i32 3
  store i64 0, i64* %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.23"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.549
  %7 = load i32, i32* @y.550
  %8 = sub i32 %6, -1508330162
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1508330162
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1277288948, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1277288948, label %20
    i32 -124346688, label %28
    i32 -1931495065, label %65
    i32 -1952141518, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -124346688, i32 -1952141518
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.18"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  %32 = bitcast %"class.std::vector.18"* %31 to %"struct.std::_Vector_base.19"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.23"*, %"class.std::vector.23"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %35, i64 %36
  store %"class.std::vector.23"* %37, %"class.std::vector.23"** %3
  %38 = load i32, i32* @x.549
  %39 = load i32, i32* @y.550
  %40 = add i32 %38, 1263996055
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1263996055
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1931495065, i32 -1952141518
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %3
  ret %"class.std::vector.23"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.18"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.18"*, %"class.std::vector.18"** %68, align 8
  %71 = bitcast %"class.std::vector.18"* %70 to %"struct.std::_Vector_base.19"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<int, std::allocator<int> >, std::allocator<std::vector<int, std::allocator<int> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.23"*, %"class.std::vector.23"** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds %"class.std::vector.23", %"class.std::vector.23"* %74, i64 %75
  store i32 -124346688, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector.23"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::vector.23"*
  %6 = alloca %"class.std::vector.23"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::vector.23"*, %"class.std::vector.23"** %6, align 8
  store %"class.std::vector.23"* %8, %"class.std::vector.23"** %5
  %9 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %10 = bitcast %"class.std::vector.23"* %9 to %"struct.std::_Vector_base.24"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %4
  %14 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %15 = bitcast %"class.std::vector.23"* %14 to %"struct.std::_Vector_base.24"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %3
  %19 = alloca i32
  store i32 1663605020, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %109
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1663605020, label %23
    i32 -1854979026, label %28
    i32 292129764, label %43
    i32 -1072061998, label %87
    i32 -25545942, label %88
    i32 1577123244, label %91
    i32 -1070480353, label %92
  ]

; <label>:22:                                     ; preds = %20
  br label %109

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32*, i32** %4
  %25 = load volatile i32*, i32** %3
  %26 = icmp ne i32* %24, %25
  %27 = select i1 %26, i32 -1854979026, i32 -25545942
  store i32 %27, i32* %19
  br label %109

; <label>:28:                                     ; preds = %20
  %29 = load i32, i32* @x.551
  %30 = load i32, i32* @y.552
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 292129764, i32 -1070480353
  store i32 %42, i32* %19
  br label %109

; <label>:43:                                     ; preds = %20
  %44 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %45 = bitcast %"class.std::vector.23"* %44 to %"struct.std::_Vector_base.24"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %45, i32 0, i32 0
  %47 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %46 to %"class.std::allocator.25"*
  %48 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %49 = bitcast %"class.std::vector.23"* %48 to %"struct.std::_Vector_base.24"*
  %50 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 1
  %52 = load i32*, i32** %51, align 8
  %53 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %47, i32* %52, i32* dereferenceable(4) %53)
  %54 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %55 = bitcast %"class.std::vector.23"* %54 to %"struct.std::_Vector_base.24"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %56, i32 0, i32 1
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i32 1
  store i32* %59, i32** %57, align 8
  %60 = load i32, i32* @x.551
  %61 = load i32, i32* @y.552
  %62 = sub i32 %60, -1974777703
  %63 = sub i32 %62, 1
  %64 = add i32 %63, -1974777703
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -1072061998, i32 -1070480353
  store i32 %86, i32* %19
  br label %109

; <label>:87:                                     ; preds = %20
  store i32 1577123244, i32* %19
  br label %109

; <label>:88:                                     ; preds = %20
  %89 = load i32*, i32** %7, align 8
  %90 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.23"* %90, i32* dereferenceable(4) %89)
  store i32 1577123244, i32* %19
  br label %109

; <label>:91:                                     ; preds = %20
  ret void

; <label>:92:                                     ; preds = %20
  %93 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %94 = bitcast %"class.std::vector.23"* %93 to %"struct.std::_Vector_base.24"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %94, i32 0, i32 0
  %96 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %95 to %"class.std::allocator.25"*
  %97 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %98 = bitcast %"class.std::vector.23"* %97 to %"struct.std::_Vector_base.24"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %99, i32 0, i32 1
  %101 = load i32*, i32** %100, align 8
  %102 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %96, i32* %101, i32* dereferenceable(4) %102)
  %103 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %5
  %104 = bitcast %"class.std::vector.23"* %103 to %"struct.std::_Vector_base.24"*
  %105 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %105, i32 0, i32 1
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds i32, i32* %107, i32 1
  store i32* %108, i32** %106, align 8
  store i32 292129764, i32* %19
  br label %109

; <label>:109:                                    ; preds = %92, %88, %87, %43, %28, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backEOi(%"class.std::vector.23"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.23"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4) %6) #3
  call void @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::vector.23"* %5, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*
  %4 = alloca %"struct.Template_MPM::FlowEdge"*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %12, align 8
  store %"struct.Template_MPM::FlowEdge"* %13, %"struct.Template_MPM::FlowEdge"** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %17, align 8
  store %"struct.Template_MPM::FlowEdge"* %18, %"struct.Template_MPM::FlowEdge"** %3
  %19 = alloca i32
  store i32 583626676, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 583626676, label %23
    i32 -2128012515, label %28
    i32 -2106477672, label %46
    i32 -625635119, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4
  %25 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3
  %26 = icmp ne %"struct.Template_MPM::FlowEdge"* %24, %25
  %27 = select i1 %26, i32 -2128012515, i32 -2106477672
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %36, align 8
  %38 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %39 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %38) #3
  call void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, %"struct.Template_MPM::FlowEdge"* %37, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %39)
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %44, i32 1
  store %"struct.Template_MPM::FlowEdge"* %45, %"struct.Template_MPM::FlowEdge"** %43, align 8
  store i32 -625635119, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %48 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %47) #3
  %49 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector"* %49, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %48)
  store i32 -625635119, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt4moveIRN12Template_MPM8FlowEdgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.Template_MPM::FlowEdge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.557
  %6 = load i32, i32* @y.558
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 192861218, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 192861218, label %18
    i32 2033837224, label %26
    i32 1820002670, label %55
    i32 1535644830, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2033837224, i32 1535644830
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %27, align 8
  %28 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %27, align 8
  store %"struct.Template_MPM::FlowEdge"* %28, %"struct.Template_MPM::FlowEdge"** %2
  %29 = load i32, i32* @x.557
  %30 = load i32, i32* @y.558
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 1820002670, i32 1535644830
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %2
  ret %"struct.Template_MPM::FlowEdge"* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %58, align 8
  %59 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %58, align 8
  store i32 2033837224, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %10 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %11 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %8, %"struct.Template_MPM::FlowEdge"* %9, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.Template_MPM::FlowEdge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.561
  %6 = load i32, i32* @y.562
  %7 = sub i32 %5, 179712947
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 179712947
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 766493976, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 766493976, label %19
    i32 1329820478, label %39
    i32 1217375863, label %69
    i32 -2124364751, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1329820478, i32 -2124364751
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %40, align 8
  %41 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %40, align 8
  store %"struct.Template_MPM::FlowEdge"* %41, %"struct.Template_MPM::FlowEdge"** %2
  %42 = load i32, i32* @x.561
  %43 = load i32, i32* @y.562
  %44 = add i32 %42, 1328251605
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1328251605
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1217375863, i32 -2124364751
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %2
  ret %"struct.Template_MPM::FlowEdge"* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %72, align 8
  %73 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %72, align 8
  store i32 1329820478, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %7 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Template_MPM::FlowEdge"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store %"struct.Template_MPM::FlowEdge"* %14, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %15 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  store %"struct.Template_MPM::FlowEdge"* %15, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %19, i64 %20
  %22 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %23 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, %"struct.Template_MPM::FlowEdge"* %21, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %23)
          to label %24 unwind label %82

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.563
  %26 = load i32, i32* @y.564
  %27 = sub i32 %25, -658812338
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -658812338
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %436

; <label>:51:                                     ; preds = %24, %436
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %52 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %53, i32 0, i32 0
  %55 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %54, align 8
  %56 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %58, align 8
  %60 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %61 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %62 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %61) #3
  %63 = load i32, i32* @x.563
  %64 = load i32, i32* @y.564
  %65 = add i32 %63, 875835022
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 875835022
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %436

; <label>:77:                                     ; preds = %51
  %78 = invoke %"struct.Template_MPM::FlowEdge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN12Template_MPM8FlowEdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Template_MPM::FlowEdge"* %55, %"struct.Template_MPM::FlowEdge"* %59, %"struct.Template_MPM::FlowEdge"* %60, %"class.std::allocator"* dereferenceable(1) %62)
          to label %79 unwind label %82

; <label>:79:                                     ; preds = %77
  store %"struct.Template_MPM::FlowEdge"* %78, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %80 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %81 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %80, i32 1
  store %"struct.Template_MPM::FlowEdge"* %81, %"struct.Template_MPM::FlowEdge"** %7, align 8
  br label %300

; <label>:82:                                     ; preds = %77, %2
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %8, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %9, align 4
  br label %86

; <label>:86:                                     ; preds = %82
  %87 = load i8*, i8** %8, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #3
  %89 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %90 = icmp ne %"struct.Template_MPM::FlowEdge"* %89, null
  br i1 %90, label %133, label %91

; <label>:91:                                     ; preds = %86
  %92 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %92, i32 0, i32 0
  %94 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %93 to %"class.std::allocator"*
  %95 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %96 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %10) #3
  %97 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %95, i64 %96
  invoke void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1) %94, %"struct.Template_MPM::FlowEdge"* %97)
          to label %98 unwind label %129

; <label>:98:                                     ; preds = %91
  %99 = load i32, i32* @x.563
  %100 = load i32, i32* @y.564
  %101 = sub i32 %99, -1124140065
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1124140065
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %448

; <label>:113:                                    ; preds = %98, %448
  %114 = load i32, i32* @x.563
  %115 = load i32, i32* @y.564
  %116 = add i32 %114, -1909350008
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, -1909350008
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %448

; <label>:128:                                    ; preds = %113
  br label %210

; <label>:129:                                    ; preds = %298, %255, %166, %91
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %8, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %299 unwind label %391

; <label>:133:                                    ; preds = %86
  %134 = load i32, i32* @x.563
  %135 = load i32, i32* @y.564
  %136 = sub i32 %134, -105345069
  %137 = sub i32 %136, 1
  %138 = add i32 %137, -105345069
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  br i1 %146, label %148, label %449

; <label>:148:                                    ; preds = %133, %449
  %149 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %150 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %151 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %152 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %151) #3
  %153 = load i32, i32* @x.563
  %154 = load i32, i32* @y.564
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %449

; <label>:166:                                    ; preds = %148
  invoke void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E(%"struct.Template_MPM::FlowEdge"* %149, %"struct.Template_MPM::FlowEdge"* %150, %"class.std::allocator"* dereferenceable(1) %152)
          to label %167 unwind label %129

; <label>:167:                                    ; preds = %166
  %168 = load i32, i32* @x.563
  %169 = load i32, i32* @y.564
  %170 = add i32 %168, -1297747695
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, -1297747695
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %454

; <label>:194:                                    ; preds = %167, %454
  %195 = load i32, i32* @x.563
  %196 = load i32, i32* @y.564
  %197 = add i32 %195, 282492056
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 282492056
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %454

; <label>:209:                                    ; preds = %194
  br label %210

; <label>:210:                                    ; preds = %209, %128
  %211 = load i32, i32* @x.563
  %212 = load i32, i32* @y.564
  %213 = sub i32 %211, -760217104
  %214 = sub i32 %213, 1
  %215 = add i32 %214, -760217104
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 false, true
  %224 = and i1 %221, false
  %225 = and i1 %219, %223
  %226 = and i1 %222, false
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 false, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %455

; <label>:237:                                    ; preds = %210, %455
  %238 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %239 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %240 = load i64, i64* %5, align 8
  %241 = load i32, i32* @x.563
  %242 = load i32, i32* @y.564
  %243 = add i32 %241, -405901672
  %244 = sub i32 %243, 1
  %245 = sub i32 %244, -405901672
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = and i1 %249, %250
  %252 = xor i1 %249, %250
  %253 = or i1 %251, %252
  %254 = or i1 %249, %250
  br i1 %253, label %255, label %455

; <label>:255:                                    ; preds = %237
  invoke void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %238, %"struct.Template_MPM::FlowEdge"* %239, i64 %240)
          to label %256 unwind label %129

; <label>:256:                                    ; preds = %255
  %257 = load i32, i32* @x.563
  %258 = load i32, i32* @y.564
  %259 = sub i32 %257, -1696886511
  %260 = sub i32 %259, 1
  %261 = add i32 %260, -1696886511
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %459

; <label>:271:                                    ; preds = %256, %459
  %272 = load i32, i32* @x.563
  %273 = load i32, i32* @y.564
  %274 = add i32 %272, -1038935274
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, -1038935274
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %459

; <label>:298:                                    ; preds = %271
  invoke void @__cxa_rethrow() #12
          to label %435 unwind label %129

; <label>:299:                                    ; preds = %129
  br label %386

; <label>:300:                                    ; preds = %79
  %301 = load i32, i32* @x.563
  %302 = load i32, i32* @y.564
  %303 = add i32 %301, -844055665
  %304 = sub i32 %303, 1
  %305 = sub i32 %304, -844055665
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 true, true
  %314 = and i1 %311, true
  %315 = and i1 %309, %313
  %316 = and i1 %312, true
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 true, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %460

; <label>:327:                                    ; preds = %300, %460
  %328 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %329 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %328, i32 0, i32 0
  %330 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %329, i32 0, i32 0
  %331 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %330, align 8
  %332 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %333 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %332, i32 0, i32 0
  %334 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %333, i32 0, i32 1
  %335 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %334, align 8
  %336 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %337 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %336) #3
  call void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E(%"struct.Template_MPM::FlowEdge"* %331, %"struct.Template_MPM::FlowEdge"* %335, %"class.std::allocator"* dereferenceable(1) %337)
  %338 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %339 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %340, i32 0, i32 0
  %342 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %341, align 8
  %343 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %344 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %343, i32 0, i32 0
  %345 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %344, i32 0, i32 2
  %346 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %345, align 8
  %347 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %348, i32 0, i32 0
  %350 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %349, align 8
  %351 = ptrtoint %"struct.Template_MPM::FlowEdge"* %346 to i64
  %352 = ptrtoint %"struct.Template_MPM::FlowEdge"* %350 to i64
  %353 = add i64 %351, 8963755803552559991
  %354 = sub i64 %353, %352
  %355 = sub i64 %354, 8963755803552559991
  %356 = sub i64 %351, %352
  %357 = sdiv exact i64 %355, 24
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %338, %"struct.Template_MPM::FlowEdge"* %342, i64 %357)
  %358 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %359 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %360, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %358, %"struct.Template_MPM::FlowEdge"** %361, align 8
  %362 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %363 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %364 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %363, i32 0, i32 0
  %365 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %364, i32 0, i32 1
  store %"struct.Template_MPM::FlowEdge"* %362, %"struct.Template_MPM::FlowEdge"** %365, align 8
  %366 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %367 = load i64, i64* %5, align 8
  %368 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %366, i64 %367
  %369 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %370 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %369, i32 0, i32 0
  %371 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %370, i32 0, i32 2
  store %"struct.Template_MPM::FlowEdge"* %368, %"struct.Template_MPM::FlowEdge"** %371, align 8
  %372 = load i32, i32* @x.563
  %373 = load i32, i32* @y.564
  %374 = sub i32 0, 1
  %375 = add i32 %372, %374
  %376 = sub i32 %372, 1
  %377 = mul i32 %372, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %373, 10
  %381 = and i1 %379, %380
  %382 = xor i1 %379, %380
  %383 = or i1 %381, %382
  %384 = or i1 %379, %380
  br i1 %383, label %385, label %460

; <label>:385:                                    ; preds = %327
  ret void

; <label>:386:                                    ; preds = %299
  %387 = load i8*, i8** %8, align 8
  %388 = load i32, i32* %9, align 4
  %389 = insertvalue { i8*, i32 } undef, i8* %387, 0
  %390 = insertvalue { i8*, i32 } %389, i32 %388, 1
  resume { i8*, i32 } %390

; <label>:391:                                    ; preds = %129
  %392 = load i32, i32* @x.563
  %393 = load i32, i32* @y.564
  %394 = sub i32 0, 1
  %395 = add i32 %392, %394
  %396 = sub i32 %392, 1
  %397 = mul i32 %392, %395
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %393, 10
  %401 = xor i1 %399, true
  %402 = xor i1 %400, true
  %403 = xor i1 false, true
  %404 = and i1 %401, false
  %405 = and i1 %399, %403
  %406 = and i1 %402, false
  %407 = and i1 %400, %403
  %408 = or i1 %404, %405
  %409 = or i1 %406, %407
  %410 = xor i1 %408, %409
  %411 = or i1 %401, %402
  %412 = xor i1 %411, true
  %413 = or i1 false, %403
  %414 = and i1 %412, %413
  %415 = or i1 %410, %414
  %416 = or i1 %399, %400
  br i1 %415, label %417, label %546

; <label>:417:                                    ; preds = %391, %546
  %418 = landingpad { i8*, i32 }
          catch i8* null
  %419 = extractvalue { i8*, i32 } %418, 0
  call void @__clang_call_terminate(i8* %419) #11
  %420 = load i32, i32* @x.563
  %421 = load i32, i32* @y.564
  %422 = add i32 %420, -1001228802
  %423 = sub i32 %422, 1
  %424 = sub i32 %423, -1001228802
  %425 = sub i32 %420, 1
  %426 = mul i32 %420, %424
  %427 = urem i32 %426, 2
  %428 = icmp eq i32 %427, 0
  %429 = icmp slt i32 %421, 10
  %430 = and i1 %428, %429
  %431 = xor i1 %428, %429
  %432 = or i1 %430, %431
  %433 = or i1 %428, %429
  br i1 %432, label %434, label %546

; <label>:434:                                    ; preds = %417
  unreachable

; <label>:435:                                    ; preds = %298
  unreachable

; <label>:436:                                    ; preds = %51, %24
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %437 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %438 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %437, i32 0, i32 0
  %439 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %438, i32 0, i32 0
  %440 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %439, align 8
  %441 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %442 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %441, i32 0, i32 0
  %443 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %442, i32 0, i32 1
  %444 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %443, align 8
  %445 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %446 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %447 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %446) #3
  br label %51

; <label>:448:                                    ; preds = %113, %98
  br label %113

; <label>:449:                                    ; preds = %148, %133
  %450 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %451 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %452 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %453 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %452) #3
  br label %148

; <label>:454:                                    ; preds = %194, %167
  br label %194

; <label>:455:                                    ; preds = %237, %210
  %456 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %457 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %458 = load i64, i64* %5, align 8
  br label %237

; <label>:459:                                    ; preds = %271, %256
  br label %271

; <label>:460:                                    ; preds = %327, %300
  %461 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %462 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %461, i32 0, i32 0
  %463 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %462, i32 0, i32 0
  %464 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %463, align 8
  %465 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %466 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %465, i32 0, i32 0
  %467 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %466, i32 0, i32 1
  %468 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %467, align 8
  %469 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %470 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %469) #3
  call void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeES1_EvT_S3_RSaIT0_E(%"struct.Template_MPM::FlowEdge"* %464, %"struct.Template_MPM::FlowEdge"* %468, %"class.std::allocator"* dereferenceable(1) %470)
  %471 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %472 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %473 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %472, i32 0, i32 0
  %474 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %473, i32 0, i32 0
  %475 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %474, align 8
  %476 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %477 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %476, i32 0, i32 0
  %478 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %477, i32 0, i32 2
  %479 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %478, align 8
  %480 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %481 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %480, i32 0, i32 0
  %482 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %481, i32 0, i32 0
  %483 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %482, align 8
  %484 = ptrtoint %"struct.Template_MPM::FlowEdge"* %479 to i64
  %485 = ptrtoint %"struct.Template_MPM::FlowEdge"* %483 to i64
  %486 = sub i64 %484, -5986048845274276864
  %487 = sub i64 %486, %485
  %488 = add i64 %487, -5986048845274276864
  %489 = sub i64 %484, %485
  %490 = mul i64 %488, %485
  %491 = shl i64 %484, %485
  %492 = add i64 %484, 7003801849734098158
  %493 = sub i64 %492, %485
  %494 = sub i64 %493, 7003801849734098158
  %495 = sub i64 %484, %485
  %496 = mul i64 %494, %485
  %497 = shl i64 %484, %485
  %498 = add i64 %484, -9159038248688251034
  %499 = sub i64 %498, %485
  %500 = sub i64 %499, -9159038248688251034
  %501 = sub i64 %484, %485
  %502 = mul i64 %500, %485
  %503 = sub i64 0, -884066776440042705
  %504 = sub i64 %503, %484
  %505 = add i64 %504, -884066776440042705
  %506 = sub i64 0, %484
  %507 = sub i64 %505, 1278056499088096379
  %508 = add i64 %507, %485
  %509 = add i64 %508, 1278056499088096379
  %510 = add i64 %505, %485
  %511 = shl i64 %484, %485
  %512 = sub i64 %484, -827139282175821733
  %513 = sub i64 %512, %485
  %514 = add i64 %513, -827139282175821733
  %515 = sub i64 %484, %485
  %516 = shl i64 %514, 24
  %517 = sub i64 0, 24
  %518 = add i64 %514, %517
  %519 = sub i64 %514, 24
  %520 = mul i64 %518, 24
  %521 = sub i64 0, 9208565703001933902
  %522 = sub i64 %521, %514
  %523 = add i64 %522, 9208565703001933902
  %524 = sub i64 0, %514
  %525 = sub i64 0, %523
  %526 = sub i64 0, 24
  %527 = add i64 %525, %526
  %528 = sub i64 0, %527
  %529 = add i64 %523, 24
  %530 = shl i64 %514, 24
  %531 = sdiv exact i64 %514, 24
  call void @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base"* %471, %"struct.Template_MPM::FlowEdge"* %475, i64 %531)
  %532 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %533 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %534 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %533, i32 0, i32 0
  %535 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %534, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %532, %"struct.Template_MPM::FlowEdge"** %535, align 8
  %536 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %537 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %538 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %537, i32 0, i32 0
  %539 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %538, i32 0, i32 1
  store %"struct.Template_MPM::FlowEdge"* %536, %"struct.Template_MPM::FlowEdge"** %539, align 8
  %540 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %541 = load i64, i64* %5, align 8
  %542 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %540, i64 %541
  %543 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %544 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %543, i32 0, i32 0
  %545 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %544, i32 0, i32 2
  store %"struct.Template_MPM::FlowEdge"* %542, %"struct.Template_MPM::FlowEdge"** %545, align 8
  br label %327

; <label>:546:                                    ; preds = %417, %391
  %547 = landingpad { i8*, i32 }
          catch i8* null
  %548 = extractvalue { i8*, i32 } %547, 0
  call void @__clang_call_terminate(i8* %548) #11
  br label %417
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %9 = bitcast %"struct.Template_MPM::FlowEdge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Template_MPM::FlowEdge"*
  %11 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %12 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %11) #3
  %13 = bitcast %"struct.Template_MPM::FlowEdge"* %10 to i8*
  %14 = bitcast %"struct.Template_MPM::FlowEdge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %8
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %16 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE8max_sizeEv(%"class.std::vector"* %15) #3
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %18 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %17) #3
  %19 = add i64 %16, -8980775071263339769
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, -8980775071263339769
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 1830388182, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %167
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1830388182, label %29
    i32 -86390816, label %34
    i32 -219347842, label %36
    i32 2060654311, label %52
    i32 -1613764439, label %82
    i32 1010514469, label %85
    i32 1628681823, label %91
    i32 -792867830, label %94
    i32 -1234038576, label %122
    i32 -864797210, label %139
    i32 -565991111, label %141
    i32 597417965, label %143
    i32 -780169219, label %165
  ]

; <label>:28:                                     ; preds = %26
  br label %167

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -86390816, i32 -219347842
  store i32 %33, i32* %24
  br label %167

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.567
  %38 = load i32, i32* @y.568
  %39 = add i32 %37, -1048899405
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1048899405
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 2060654311, i32 597417965
  store i32 %51, i32* %24
  br label %167

; <label>:52:                                     ; preds = %26
  %53 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %54 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %53) #3
  %55 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %56 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %55) #3
  store i64 %56, i64* %13, align 8
  %57 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 0, %54
  %60 = sub i64 0, %58
  %61 = add i64 %59, %60
  %62 = sub i64 0, %61
  %63 = add i64 %54, %58
  store i64 %62, i64* %12, align 8
  %64 = load i64, i64* %12, align 8
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %66 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %65) #3
  %67 = icmp ult i64 %64, %66
  store i1 %67, i1* %5
  %68 = load i32, i32* @x.567
  %69 = load i32, i32* @y.568
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -1613764439, i32 597417965
  store i32 %81, i32* %24
  br label %167

; <label>:82:                                     ; preds = %26
  %83 = load volatile i1, i1* %5
  %84 = select i1 %83, i32 1628681823, i32 1010514469
  store i32 %84, i32* %24
  br label %167

; <label>:85:                                     ; preds = %26
  %86 = load i64, i64* %12, align 8
  %87 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %88 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE8max_sizeEv(%"class.std::vector"* %87) #3
  %89 = icmp ugt i64 %86, %88
  %90 = select i1 %89, i32 1628681823, i32 -792867830
  store i32 %90, i32* %24
  br label %167

; <label>:91:                                     ; preds = %26
  %92 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %93 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE8max_sizeEv(%"class.std::vector"* %92) #3
  store i32 -565991111, i32* %24
  store i64 %93, i64* %25
  br label %167

; <label>:94:                                     ; preds = %26
  %95 = load i32, i32* @x.567
  %96 = load i32, i32* @y.568
  %97 = sub i32 %95, -1457127994
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1457127994
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 -1234038576, i32 -780169219
  store i32 %121, i32* %24
  br label %167

; <label>:122:                                    ; preds = %26
  %123 = load i64, i64* %12, align 8
  store i64 %123, i64* %4
  %124 = load i32, i32* @x.567
  %125 = load i32, i32* @y.568
  %126 = add i32 %124, -279355185
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, -279355185
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 -864797210, i32 -780169219
  store i32 %138, i32* %24
  br label %167

; <label>:139:                                    ; preds = %26
  store i32 -565991111, i32* %24
  %140 = load volatile i64, i64* %4
  store i64 %140, i64* %25
  br label %167

; <label>:141:                                    ; preds = %26
  %142 = load i64, i64* %25
  ret i64 %142

; <label>:143:                                    ; preds = %26
  %144 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %145 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %144) #3
  %146 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %147 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %146) #3
  store i64 %147, i64* %13, align 8
  %148 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %149 = load i64, i64* %148, align 8
  %150 = shl i64 %145, %149
  %151 = shl i64 %145, %149
  %152 = add i64 %145, 4699977837748934228
  %153 = sub i64 %152, %149
  %154 = sub i64 %153, 4699977837748934228
  %155 = sub i64 %145, %149
  %156 = mul i64 %154, %149
  %157 = add i64 %145, 6751019767780031455
  %158 = add i64 %157, %149
  %159 = sub i64 %158, 6751019767780031455
  %160 = add i64 %145, %149
  store i64 %159, i64* %12, align 8
  %161 = load i64, i64* %12, align 8
  %162 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %163 = call i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"* %162) #3
  %164 = icmp ult i64 %161, %163
  store i32 2060654311, i32* %24
  br label %167

; <label>:165:                                    ; preds = %26
  %166 = load i64, i64* %12, align 8
  store i32 -1234038576, i32* %24
  br label %167

; <label>:167:                                    ; preds = %165, %143, %139, %122, %94, %91, %85, %82, %52, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZNSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %8, %"struct.std::_Vector_base"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -117132644, i32* %10
  %11 = alloca %"struct.Template_MPM::FlowEdge"*
  br label %12

; <label>:12:                                     ; preds = %2, %78
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -117132644, label %15
    i32 669419027, label %19
    i32 -225957190, label %47
    i32 -667832252, label %67
    i32 1672182261, label %69
    i32 1533144911, label %70
    i32 -26053806, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %78

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 669419027, i32 1672182261
  store i32 %18, i32* %10
  br label %78

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.569
  %21 = load i32, i32* @y.570
  %22 = add i32 %20, 1319067645
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 1319067645
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -225957190, i32 -26053806
  store i32 %46, i32* %10
  br label %78

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %49 to %"class.std::allocator"*
  %51 = load i64, i64* %7, align 8
  %52 = call %"struct.Template_MPM::FlowEdge"* @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %50, i64 %51)
  store %"struct.Template_MPM::FlowEdge"* %52, %"struct.Template_MPM::FlowEdge"** %3
  %53 = load i32, i32* @x.569
  %54 = load i32, i32* @y.570
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -667832252, i32 -26053806
  store i32 %66, i32* %10
  br label %78

; <label>:67:                                     ; preds = %12
  store i32 1533144911, i32* %10
  %68 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3
  store %"struct.Template_MPM::FlowEdge"* %68, %"struct.Template_MPM::FlowEdge"** %11
  br label %78

; <label>:69:                                     ; preds = %12
  store i32 1533144911, i32* %10
  store %"struct.Template_MPM::FlowEdge"* null, %"struct.Template_MPM::FlowEdge"** %11
  br label %78

; <label>:70:                                     ; preds = %12
  %71 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %11
  ret %"struct.Template_MPM::FlowEdge"* %71

; <label>:72:                                     ; preds = %12
  %73 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %74 to %"class.std::allocator"*
  %76 = load i64, i64* %7, align 8
  %77 = call %"struct.Template_MPM::FlowEdge"* @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1) %75, i64 %76)
  store i32 -225957190, i32* %10
  br label %78

; <label>:78:                                     ; preds = %72, %69, %67, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %10, align 8
  %12 = ptrtoint %"struct.Template_MPM::FlowEdge"* %7 to i64
  %13 = ptrtoint %"struct.Template_MPM::FlowEdge"* %11 to i64
  %14 = sub i64 %12, 3889407401979364523
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 3889407401979364523
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN12Template_MPM8FlowEdgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %7 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = alloca %"class.std::move_iterator.32", align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %5, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %6, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  %12 = call %"struct.Template_MPM::FlowEdge"* @_ZSt32__make_move_if_noexcept_iteratorIPN12Template_MPM8FlowEdgeESt13move_iteratorIS2_EET0_T_(%"struct.Template_MPM::FlowEdge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %12, %"struct.Template_MPM::FlowEdge"** %13, align 8
  %14 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %15 = call %"struct.Template_MPM::FlowEdge"* @_ZSt32__make_move_if_noexcept_iteratorIPN12Template_MPM8FlowEdgeESt13move_iteratorIS2_EET0_T_(%"struct.Template_MPM::FlowEdge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %15, %"struct.Template_MPM::FlowEdge"** %16, align 8
  %17 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %20 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %10, i32 0, i32 0
  %22 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %21, align 8
  %23 = call %"struct.Template_MPM::FlowEdge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Template_MPM::FlowEdge"* %20, %"struct.Template_MPM::FlowEdge"* %22, %"struct.Template_MPM::FlowEdge"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %"struct.Template_MPM::FlowEdge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator"* dereferenceable(1), %"struct.Template_MPM::FlowEdge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"* %6, %"struct.Template_MPM::FlowEdge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8max_sizeERKS2_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIN12Template_MPM8FlowEdgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.583
  %5 = load i32, i32* @y.584
  %6 = sub i32 %4, 901431458
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 901431458
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 997933721, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 997933721, label %18
    i32 -2125839835, label %38
    i32 1095968908, label %68
    i32 -1032551783, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -2125839835, i32 -1032551783
  store i32 %37, i32* %14
  br label %72

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %39, align 8
  %41 = load i32, i32* @x.583
  %42 = load i32, i32* @y.584
  %43 = sub i32 %41, -1780910507
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1780910507
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1095968908, i32 -1032551783
  store i32 %67, i32* %14
  br label %72

; <label>:68:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %70, align 8
  store i32 -2125839835, i32* %14
  br label %72

; <label>:72:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZNSt16allocator_traitsISaIN12Template_MPM8FlowEdgeEEE8allocateERS2_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.585
  %7 = load i32, i32* @y.586
  %8 = add i32 %6, 812961120
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 812961120
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1628743945, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1628743945, label %20
    i32 1118474176, label %28
    i32 -1660991472, label %50
    i32 1967106787, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1118474176, i32 1967106787
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %32 = bitcast %"class.std::allocator"* %31 to %"class.__gnu_cxx::new_allocator"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.Template_MPM::FlowEdge"* @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %32, i64 %33, i8* null)
  store %"struct.Template_MPM::FlowEdge"* %34, %"struct.Template_MPM::FlowEdge"** %3
  %35 = load i32, i32* @x.585
  %36 = load i32, i32* @y.586
  %37 = add i32 %35, 442710395
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 442710395
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1660991472, i32 1967106787
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3
  ret %"struct.Template_MPM::FlowEdge"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator"*, %"class.std::allocator"** %53, align 8
  %56 = bitcast %"class.std::allocator"* %55 to %"class.__gnu_cxx::new_allocator"*
  %57 = load i64, i64* %54, align 8
  %58 = call %"struct.Template_MPM::FlowEdge"* @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %56, i64 %57, i8* null)
  store i32 1118474176, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.587
  %9 = load i32, i32* @y.588
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 1501347350, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1501347350, label %21
    i32 -745931155, label %29
    i32 -1989241126, label %66
    i32 1769714274, label %69
    i32 601171339, label %70
    i32 685170738, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -745931155, i32 685170738
  store i32 %28, i32* %17
  br label %84

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %31 = alloca i64, align 8
  store i64* %31, i64** %5
  %32 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %30, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  store i8* %2, i8** %32, align 8
  %34 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %30, align 8
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %34) #3
  %38 = icmp ugt i64 %36, %37
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.587
  %40 = load i32, i32* @y.588
  %41 = sub i32 %39, 909171471
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 909171471
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1989241126, i32 685170738
  store i32 %65, i32* %17
  br label %84

; <label>:66:                                     ; preds = %18
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 1769714274, i32 601171339
  store i32 %68, i32* %17
  br label %84

; <label>:69:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:70:                                     ; preds = %18
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 24
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to %"struct.Template_MPM::FlowEdge"*
  ret %"struct.Template_MPM::FlowEdge"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 -745931155, i32* %17
  br label %84

; <label>:84:                                     ; preds = %76, %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Template_MPM::FlowEdge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.589
  %9 = load i32, i32* @y.590
  %10 = sub i32 %8, -591966968
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -591966968
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1307025650, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1307025650, label %22
    i32 632268767, label %30
    i32 1277410261, label %63
    i32 -2127204336, label %65
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 632268767, i32 -2127204336
  store i32 %29, i32* %18
  br label %84

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::move_iterator.32", align 8
  %32 = alloca %"class.std::move_iterator.32", align 8
  %33 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %34 = alloca %"class.std::allocator"*, align 8
  %35 = alloca %"class.std::move_iterator.32", align 8
  %36 = alloca %"class.std::move_iterator.32", align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %31, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %32, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %38, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %33, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %34, align 8
  %39 = bitcast %"class.std::move_iterator.32"* %35 to i8*
  %40 = bitcast %"class.std::move_iterator.32"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.std::move_iterator.32"* %36 to i8*
  %42 = bitcast %"class.std::move_iterator.32"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %35, i32 0, i32 0
  %45 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %36, i32 0, i32 0
  %47 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %46, align 8
  %48 = call %"struct.Template_MPM::FlowEdge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_ET0_T_S6_S5_(%"struct.Template_MPM::FlowEdge"* %45, %"struct.Template_MPM::FlowEdge"* %47, %"struct.Template_MPM::FlowEdge"* %43)
  store %"struct.Template_MPM::FlowEdge"* %48, %"struct.Template_MPM::FlowEdge"** %5
  %49 = load i32, i32* @x.589
  %50 = load i32, i32* @y.590
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1277410261, i32 -2127204336
  store i32 %62, i32* %18
  br label %84

; <label>:63:                                     ; preds = %19
  %64 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5
  ret %"struct.Template_MPM::FlowEdge"* %64

; <label>:65:                                     ; preds = %19
  %66 = alloca %"class.std::move_iterator.32", align 8
  %67 = alloca %"class.std::move_iterator.32", align 8
  %68 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %69 = alloca %"class.std::allocator"*, align 8
  %70 = alloca %"class.std::move_iterator.32", align 8
  %71 = alloca %"class.std::move_iterator.32", align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %66, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %72, align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %67, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %73, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %68, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %69, align 8
  %74 = bitcast %"class.std::move_iterator.32"* %70 to i8*
  %75 = bitcast %"class.std::move_iterator.32"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.std::move_iterator.32"* %71 to i8*
  %77 = bitcast %"class.std::move_iterator.32"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %68, align 8
  %79 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %70, i32 0, i32 0
  %80 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %79, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %71, i32 0, i32 0
  %82 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %81, align 8
  %83 = call %"struct.Template_MPM::FlowEdge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_ET0_T_S6_S5_(%"struct.Template_MPM::FlowEdge"* %80, %"struct.Template_MPM::FlowEdge"* %82, %"struct.Template_MPM::FlowEdge"* %78)
  store i32 632268767, i32* %18
  br label %84

; <label>:84:                                     ; preds = %65, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZSt32__make_move_if_noexcept_iteratorIPN12Template_MPM8FlowEdgeESt13move_iteratorIS2_EET0_T_(%"struct.Template_MPM::FlowEdge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.32", align 8
  %3 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %3, align 8
  %4 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEC2ES2_(%"class.std::move_iterator.32"* %2, %"struct.Template_MPM::FlowEdge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %2, i32 0, i32 0
  %6 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %5, align 8
  ret %"struct.Template_MPM::FlowEdge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES3_ET0_T_S6_S5_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.32", align 8
  %9 = alloca %"class.std::move_iterator.32", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %11, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.32"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.32"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.32"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.32"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %8, i32 0, i32 0
  %18 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %9, i32 0, i32 0
  %20 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %19, align 8
  %21 = call %"struct.Template_MPM::FlowEdge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES5_EET0_T_S8_S7_(%"struct.Template_MPM::FlowEdge"* %18, %"struct.Template_MPM::FlowEdge"* %20, %"struct.Template_MPM::FlowEdge"* %16)
  ret %"struct.Template_MPM::FlowEdge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN12Template_MPM8FlowEdgeEES5_EET0_T_S8_S7_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator.32", align 8
  %5 = alloca %"class.std::move_iterator.32", align 8
  %6 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %7 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %4, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %5, i32 0, i32 0
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %11, align 8
  store %"struct.Template_MPM::FlowEdge"* %2, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %12 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  store %"struct.Template_MPM::FlowEdge"* %12, %"struct.Template_MPM::FlowEdge"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %136, %3
  %14 = load i32, i32* @x.595
  %15 = load i32, i32* @y.596
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %194

; <label>:27:                                     ; preds = %13, %194
  %28 = load i32, i32* @x.595
  %29 = load i32, i32* @y.596
  %30 = add i32 %28, -391996057
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -391996057
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %194

; <label>:42:                                     ; preds = %27
  %43 = invoke zeroext i1 @_ZStneIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.32"* dereferenceable(8) %4, %"class.std::move_iterator.32"* dereferenceable(8) %5)
          to label %44 unwind label %137

; <label>:44:                                     ; preds = %42
  %45 = load i32, i32* @x.595
  %46 = load i32, i32* @y.596
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %195

; <label>:58:                                     ; preds = %44, %195
  %59 = load i32, i32* @x.595
  %60 = load i32, i32* @y.596
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %195

; <label>:84:                                     ; preds = %58
  br i1 %43, label %85, label %177

; <label>:85:                                     ; preds = %84
  %86 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %87 = call %"struct.Template_MPM::FlowEdge"* @_ZSt11__addressofIN12Template_MPM8FlowEdgeEEPT_RS2_(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %86) #3
  %88 = invoke dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEEdeEv(%"class.std::move_iterator.32"* %4)
          to label %89 unwind label %137

; <label>:89:                                     ; preds = %85
  invoke void @_ZSt10_ConstructIN12Template_MPM8FlowEdgeEJS1_EEvPT_DpOT0_(%"struct.Template_MPM::FlowEdge"* %87, %"struct.Template_MPM::FlowEdge"* dereferenceable(24) %88)
          to label %90 unwind label %137

; <label>:90:                                     ; preds = %89
  br label %91

; <label>:91:                                     ; preds = %90
  %92 = invoke dereferenceable(8) %"class.std::move_iterator.32"* @_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEppEv(%"class.std::move_iterator.32"* %4)
          to label %93 unwind label %137

; <label>:93:                                     ; preds = %91
  %94 = load i32, i32* @x.595
  %95 = load i32, i32* @y.596
  %96 = sub i32 %94, 678626639
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 678626639
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %196

; <label>:120:                                    ; preds = %93, %196
  %121 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %122 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %121, i32 1
  store %"struct.Template_MPM::FlowEdge"* %122, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %123 = load i32, i32* @x.595
  %124 = load i32, i32* @y.596
  %125 = sub i32 0, 1
  %126 = add i32 %123, %125
  %127 = sub i32 %123, 1
  %128 = mul i32 %123, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %124, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %196

; <label>:136:                                    ; preds = %120
  br label %13

; <label>:137:                                    ; preds = %91, %89, %85, %42
  %138 = load i32, i32* @x.595
  %139 = load i32, i32* @y.596
  %140 = add i32 %138, 1874555009
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1874555009
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %199

; <label>:152:                                    ; preds = %137, %199
  %153 = landingpad { i8*, i32 }
          catch i8* null
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %8, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %9, align 4
  %156 = load i32, i32* @x.595
  %157 = load i32, i32* @y.596
  %158 = add i32 %156, 1127021421
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, 1127021421
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  br i1 %168, label %170, label %199

; <label>:170:                                    ; preds = %152
  br label %171

; <label>:171:                                    ; preds = %170
  %172 = load i8*, i8** %8, align 8
  %173 = call i8* @__cxa_begin_catch(i8* %172) #3
  %174 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %6, align 8
  %175 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  invoke void @_ZSt8_DestroyIPN12Template_MPM8FlowEdgeEEvT_S3_(%"struct.Template_MPM::FlowEdge"* %174, %"struct.Template_MPM::FlowEdge"* %175)
          to label %176 unwind label %179

; <label>:176:                                    ; preds = %171
  invoke void @__cxa_rethrow() #12
          to label %193 unwind label %179

; <label>:177:                                    ; preds = %84
  %178 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  ret %"struct.Template_MPM::FlowEdge"* %178

; <label>:179:                                    ; preds = %176, %171
  %180 = landingpad { i8*, i32 }
          cleanup
  %181 = extractvalue { i8*, i32 } %180, 0
  store i8* %181, i8** %8, align 8
  %182 = extractvalue { i8*, i32 } %180, 1
  store i32 %182, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %183 unwind label %190

; <label>:183:                                    ; preds = %179
  br label %185
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:185:                                    ; preds = %183
  %186 = load i8*, i8** %8, align 8
  %187 = load i32, i32* %9, align 4
  %188 = insertvalue { i8*, i32 } undef, i8* %186, 0
  %189 = insertvalue { i8*, i32 } %188, i32 %187, 1
  resume { i8*, i32 } %189

; <label>:190:                                    ; preds = %179
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  call void @__clang_call_terminate(i8* %192) #11
  unreachable

; <label>:193:                                    ; preds = %176
  unreachable

; <label>:194:                                    ; preds = %27, %13
  br label %27

; <label>:195:                                    ; preds = %58, %44
  br label %58

; <label>:196:                                    ; preds = %120, %93
  %197 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %7, align 8
  %198 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %197, i32 1
  store %"struct.Template_MPM::FlowEdge"* %198, %"struct.Template_MPM::FlowEdge"** %7, align 8
  br label %120

; <label>:199:                                    ; preds = %152, %137
  %200 = landingpad { i8*, i32 }
          catch i8* null
  %201 = extractvalue { i8*, i32 } %200, 0
  store i8* %201, i8** %8, align 8
  %202 = extractvalue { i8*, i32 } %200, 1
  store i32 %202, i32* %9, align 4
  br label %152
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.32"* dereferenceable(8), %"class.std::move_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.32"*, align 8
  %4 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %3, align 8
  store %"class.std::move_iterator.32"* %1, %"class.std::move_iterator.32"** %4, align 8
  %5 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %3, align 8
  %6 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.32"* dereferenceable(8) %5, %"class.std::move_iterator.32"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN12Template_MPM8FlowEdgeEJS1_EEvPT_DpOT0_(%"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %5 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3, align 8
  %6 = bitcast %"struct.Template_MPM::FlowEdge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.Template_MPM::FlowEdge"*
  %8 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %9 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZSt7forwardIN12Template_MPM8FlowEdgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Template_MPM::FlowEdge"* dereferenceable(24) %8) #3
  %10 = bitcast %"struct.Template_MPM::FlowEdge"* %7 to i8*
  %11 = bitcast %"struct.Template_MPM::FlowEdge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZSt11__addressofIN12Template_MPM8FlowEdgeEEPT_RS2_(%"struct.Template_MPM::FlowEdge"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.Template_MPM::FlowEdge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.601
  %6 = load i32, i32* @y.602
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1403285667, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1403285667, label %18
    i32 1053328795, label %26
    i32 1088978896, label %57
    i32 768685872, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1053328795, i32 768685872
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %27, align 8
  %28 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %27, align 8
  %29 = bitcast %"struct.Template_MPM::FlowEdge"* %28 to i8*
  %30 = bitcast i8* %29 to %"struct.Template_MPM::FlowEdge"*
  store %"struct.Template_MPM::FlowEdge"* %30, %"struct.Template_MPM::FlowEdge"** %2
  %31 = load i32, i32* @x.601
  %32 = load i32, i32* @y.602
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 1088978896, i32 768685872
  store i32 %56, i32* %14
  br label %64

; <label>:57:                                     ; preds = %15
  %58 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %2
  ret %"struct.Template_MPM::FlowEdge"* %58

; <label>:59:                                     ; preds = %15
  %60 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"struct.Template_MPM::FlowEdge"* %0, %"struct.Template_MPM::FlowEdge"** %60, align 8
  %61 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %60, align 8
  %62 = bitcast %"struct.Template_MPM::FlowEdge"* %61 to i8*
  %63 = bitcast i8* %62 to %"struct.Template_MPM::FlowEdge"*
  store i32 1053328795, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEEdeEv(%"class.std::move_iterator.32"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %2, align 8
  %3 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %3, i32 0, i32 0
  %5 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  ret %"struct.Template_MPM::FlowEdge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.32"* @_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEppEv(%"class.std::move_iterator.32"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.605
  %6 = load i32, i32* @y.606
  %7 = add i32 %5, -305387271
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -305387271
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1915326315, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1915326315, label %19
    i32 1572168907, label %39
    i32 -2006511346, label %73
    i32 -967914368, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1572168907, i32 -967914368
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %40, align 8
  %41 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %40, align 8
  store %"class.std::move_iterator.32"* %41, %"class.std::move_iterator.32"** %2
  %42 = load volatile %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2
  %43 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %42, i32 0, i32 0
  %44 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %44, i32 1
  store %"struct.Template_MPM::FlowEdge"* %45, %"struct.Template_MPM::FlowEdge"** %43, align 8
  %46 = load i32, i32* @x.605
  %47 = load i32, i32* @y.606
  %48 = add i32 %46, -530359647
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -530359647
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -2006511346, i32 -967914368
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  %74 = load volatile %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2
  ret %"class.std::move_iterator.32"* %74

; <label>:75:                                     ; preds = %16
  %76 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %76, align 8
  %77 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %76, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %77, i32 0, i32 0
  %79 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %78, align 8
  %80 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %79, i32 1
  store %"struct.Template_MPM::FlowEdge"* %80, %"struct.Template_MPM::FlowEdge"** %78, align 8
  store i32 1572168907, i32* %15
  br label %81

; <label>:81:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN12Template_MPM8FlowEdgeEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator.32"* dereferenceable(8), %"class.std::move_iterator.32"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.32"*, align 8
  %4 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %3, align 8
  store %"class.std::move_iterator.32"* %1, %"class.std::move_iterator.32"** %4, align 8
  %5 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %3, align 8
  %6 = call %"struct.Template_MPM::FlowEdge"* @_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEE4baseEv(%"class.std::move_iterator.32"* %5)
  %7 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %4, align 8
  %8 = call %"struct.Template_MPM::FlowEdge"* @_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEE4baseEv(%"class.std::move_iterator.32"* %7)
  %9 = icmp eq %"struct.Template_MPM::FlowEdge"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Template_MPM::FlowEdge"* @_ZNKSt13move_iteratorIPN12Template_MPM8FlowEdgeEE4baseEv(%"class.std::move_iterator.32"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.32"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %2, align 8
  %3 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %3, i32 0, i32 0
  %5 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  ret %"struct.Template_MPM::FlowEdge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN12Template_MPM8FlowEdgeEEC2ES2_(%"class.std::move_iterator.32"*, %"struct.Template_MPM::FlowEdge"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.611
  %6 = load i32, i32* @y.612
  %7 = sub i32 %5, -923071756
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -923071756
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 951414839, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 951414839, label %19
    i32 -654618035, label %39
    i32 499223802, label %71
    i32 -473758483, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -654618035, i32 -473758483
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.32"*, align 8
  %41 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %40, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %41, align 8
  %42 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %40, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %42, i32 0, i32 0
  %44 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %41, align 8
  store %"struct.Template_MPM::FlowEdge"* %44, %"struct.Template_MPM::FlowEdge"** %43, align 8
  %45 = load i32, i32* @x.611
  %46 = load i32, i32* @y.612
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 499223802, i32 -473758483
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::move_iterator.32"*, align 8
  %74 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.std::move_iterator.32"* %0, %"class.std::move_iterator.32"** %73, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %74, align 8
  %75 = load %"class.std::move_iterator.32"*, %"class.std::move_iterator.32"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.32", %"class.std::move_iterator.32"* %75, i32 0, i32 0
  %77 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %74, align 8
  store %"struct.Template_MPM::FlowEdge"* %77, %"struct.Template_MPM::FlowEdge"** %76, align 8
  store i32 -654618035, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN12Template_MPM8FlowEdgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator"*, %"struct.Template_MPM::FlowEdge"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca %"struct.Template_MPM::FlowEdge"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store %"struct.Template_MPM::FlowEdge"* %1, %"struct.Template_MPM::FlowEdge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  %6 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector.23"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.23"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.23"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.25"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %70

; <label>:24:                                     ; preds = %2
  store i32* null, i32** %7, align 8
  %25 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %35 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %34) #3
  %36 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %28, i32* %32, i32* %33, %"class.std::allocator.25"* dereferenceable(1) %35)
          to label %37 unwind label %70

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.617
  %39 = load i32, i32* @y.618
  %40 = add i32 %38, -310998685
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -310998685
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %406

; <label>:52:                                     ; preds = %37, %406
  store i32* %36, i32** %7, align 8
  %53 = load i32*, i32** %7, align 8
  %54 = getelementptr inbounds i32, i32* %53, i32 1
  store i32* %54, i32** %7, align 8
  %55 = load i32, i32* @x.617
  %56 = load i32, i32* @y.618
  %57 = add i32 %55, -954567796
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -954567796
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %406

; <label>:69:                                     ; preds = %52
  br label %299

; <label>:70:                                     ; preds = %24, %2
  %71 = landingpad { i8*, i32 }
          catch i8* null
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %8, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %9, align 4
  br label %74

; <label>:74:                                     ; preds = %70
  %75 = load i32, i32* @x.617
  %76 = load i32, i32* @y.618
  %77 = sub i32 %75, 44998758
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 44998758
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %409

; <label>:101:                                    ; preds = %74, %409
  %102 = load i8*, i8** %8, align 8
  %103 = call i8* @__cxa_begin_catch(i8* %102) #3
  %104 = load i32*, i32** %7, align 8
  %105 = icmp ne i32* %104, null
  %106 = load i32, i32* @x.617
  %107 = load i32, i32* @y.618
  %108 = sub i32 0, 1
  %109 = add i32 %106, %108
  %110 = sub i32 %106, 1
  %111 = mul i32 %106, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %107, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %409

; <label>:131:                                    ; preds = %101
  br i1 %105, label %215, label %132

; <label>:132:                                    ; preds = %131
  %133 = load i32, i32* @x.617
  %134 = load i32, i32* @y.618
  %135 = sub i32 0, 1
  %136 = add i32 %133, %135
  %137 = sub i32 %133, 1
  %138 = mul i32 %133, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %134, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %414

; <label>:146:                                    ; preds = %132, %414
  %147 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %147, i32 0, i32 0
  %149 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %148 to %"class.std::allocator.25"*
  %150 = load i32*, i32** %6, align 8
  %151 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  %152 = getelementptr inbounds i32, i32* %150, i64 %151
  %153 = load i32, i32* @x.617
  %154 = load i32, i32* @y.618
  %155 = add i32 %153, 1993758857
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, 1993758857
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %414

; <label>:167:                                    ; preds = %146
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.25"* dereferenceable(1) %149, i32* %152)
          to label %168 unwind label %211

; <label>:168:                                    ; preds = %167
  %169 = load i32, i32* @x.617
  %170 = load i32, i32* @y.618
  %171 = add i32 %169, 480723575
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, 480723575
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = xor i1 %177, true
  %180 = xor i1 %178, true
  %181 = xor i1 true, true
  %182 = and i1 %179, true
  %183 = and i1 %177, %181
  %184 = and i1 %180, true
  %185 = and i1 %178, %181
  %186 = or i1 %182, %183
  %187 = or i1 %184, %185
  %188 = xor i1 %186, %187
  %189 = or i1 %179, %180
  %190 = xor i1 %189, true
  %191 = or i1 true, %181
  %192 = and i1 %190, %191
  %193 = or i1 %188, %192
  %194 = or i1 %177, %178
  br i1 %193, label %195, label %421

; <label>:195:                                    ; preds = %168, %421
  %196 = load i32, i32* @x.617
  %197 = load i32, i32* @y.618
  %198 = sub i32 %196, 116983765
  %199 = sub i32 %198, 1
  %200 = add i32 %199, 116983765
  %201 = sub i32 %196, 1
  %202 = mul i32 %196, %200
  %203 = urem i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = icmp slt i32 %197, 10
  %206 = and i1 %204, %205
  %207 = xor i1 %204, %205
  %208 = or i1 %206, %207
  %209 = or i1 %204, %205
  br i1 %208, label %210, label %421

; <label>:210:                                    ; preds = %195
  br label %221

; <label>:211:                                    ; preds = %255, %254, %215, %167
  %212 = landingpad { i8*, i32 }
          cleanup
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %8, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %256 unwind label %402

; <label>:215:                                    ; preds = %131
  %216 = load i32*, i32** %6, align 8
  %217 = load i32*, i32** %7, align 8
  %218 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %219 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %218) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %216, i32* %217, %"class.std::allocator.25"* dereferenceable(1) %219)
          to label %220 unwind label %211

; <label>:220:                                    ; preds = %215
  br label %221

; <label>:221:                                    ; preds = %220, %210
  %222 = load i32, i32* @x.617
  %223 = load i32, i32* @y.618
  %224 = sub i32 %222, -1355395491
  %225 = sub i32 %224, 1
  %226 = add i32 %225, -1355395491
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %422

; <label>:236:                                    ; preds = %221, %422
  %237 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %238 = load i32*, i32** %6, align 8
  %239 = load i64, i64* %5, align 8
  %240 = load i32, i32* @x.617
  %241 = load i32, i32* @y.618
  %242 = add i32 %240, 1561563689
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, 1561563689
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  br i1 %252, label %254, label %422

; <label>:254:                                    ; preds = %236
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %237, i32* %238, i64 %239)
          to label %255 unwind label %211

; <label>:255:                                    ; preds = %254
  invoke void @__cxa_rethrow() #12
          to label %405 unwind label %211

; <label>:256:                                    ; preds = %211
  %257 = load i32, i32* @x.617
  %258 = load i32, i32* @y.618
  %259 = sub i32 %257, -694527385
  %260 = sub i32 %259, 1
  %261 = add i32 %260, -694527385
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = and i1 %265, %266
  %268 = xor i1 %265, %266
  %269 = or i1 %267, %268
  %270 = or i1 %265, %266
  br i1 %269, label %271, label %426

; <label>:271:                                    ; preds = %256, %426
  %272 = load i32, i32* @x.617
  %273 = load i32, i32* @y.618
  %274 = add i32 %272, -1576218748
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, -1576218748
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 false, true
  %285 = and i1 %282, false
  %286 = and i1 %280, %284
  %287 = and i1 %283, false
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 false, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %426

; <label>:298:                                    ; preds = %271
  br label %397

; <label>:299:                                    ; preds = %69
  %300 = load i32, i32* @x.617
  %301 = load i32, i32* @y.618
  %302 = add i32 %300, 56285849
  %303 = sub i32 %302, 1
  %304 = sub i32 %303, 56285849
  %305 = sub i32 %300, 1
  %306 = mul i32 %300, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %301, 10
  %310 = xor i1 %308, true
  %311 = xor i1 %309, true
  %312 = xor i1 true, true
  %313 = and i1 %310, true
  %314 = and i1 %308, %312
  %315 = and i1 %311, true
  %316 = and i1 %309, %312
  %317 = or i1 %313, %314
  %318 = or i1 %315, %316
  %319 = xor i1 %317, %318
  %320 = or i1 %310, %311
  %321 = xor i1 %320, true
  %322 = or i1 true, %312
  %323 = and i1 %321, %322
  %324 = or i1 %319, %323
  %325 = or i1 %308, %309
  br i1 %324, label %326, label %427

; <label>:326:                                    ; preds = %299, %427
  %327 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %328 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %327, i32 0, i32 0
  %329 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %328, i32 0, i32 0
  %330 = load i32*, i32** %329, align 8
  %331 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %332 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %331, i32 0, i32 0
  %333 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %332, i32 0, i32 1
  %334 = load i32*, i32** %333, align 8
  %335 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %336 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %335) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %330, i32* %334, %"class.std::allocator.25"* dereferenceable(1) %336)
  %337 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %338 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %338, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %339, i32 0, i32 0
  %341 = load i32*, i32** %340, align 8
  %342 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %343 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %342, i32 0, i32 0
  %344 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %343, i32 0, i32 2
  %345 = load i32*, i32** %344, align 8
  %346 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %346, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %347, i32 0, i32 0
  %349 = load i32*, i32** %348, align 8
  %350 = ptrtoint i32* %345 to i64
  %351 = ptrtoint i32* %349 to i64
  %352 = add i64 %350, -8661393009955360873
  %353 = sub i64 %352, %351
  %354 = sub i64 %353, -8661393009955360873
  %355 = sub i64 %350, %351
  %356 = sdiv exact i64 %354, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %337, i32* %341, i64 %356)
  %357 = load i32*, i32** %6, align 8
  %358 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %359, i32 0, i32 0
  store i32* %357, i32** %360, align 8
  %361 = load i32*, i32** %7, align 8
  %362 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %363 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %363, i32 0, i32 1
  store i32* %361, i32** %364, align 8
  %365 = load i32*, i32** %6, align 8
  %366 = load i64, i64* %5, align 8
  %367 = getelementptr inbounds i32, i32* %365, i64 %366
  %368 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %369 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %368, i32 0, i32 0
  %370 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %369, i32 0, i32 2
  store i32* %367, i32** %370, align 8
  %371 = load i32, i32* @x.617
  %372 = load i32, i32* @y.618
  %373 = sub i32 0, 1
  %374 = add i32 %371, %373
  %375 = sub i32 %371, 1
  %376 = mul i32 %371, %374
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %372, 10
  %380 = xor i1 %378, true
  %381 = xor i1 %379, true
  %382 = xor i1 false, true
  %383 = and i1 %380, false
  %384 = and i1 %378, %382
  %385 = and i1 %381, false
  %386 = and i1 %379, %382
  %387 = or i1 %383, %384
  %388 = or i1 %385, %386
  %389 = xor i1 %387, %388
  %390 = or i1 %380, %381
  %391 = xor i1 %390, true
  %392 = or i1 false, %382
  %393 = and i1 %391, %392
  %394 = or i1 %389, %393
  %395 = or i1 %378, %379
  br i1 %394, label %396, label %427

; <label>:396:                                    ; preds = %326
  ret void

; <label>:397:                                    ; preds = %298
  %398 = load i8*, i8** %8, align 8
  %399 = load i32, i32* %9, align 4
  %400 = insertvalue { i8*, i32 } undef, i8* %398, 0
  %401 = insertvalue { i8*, i32 } %400, i32 %399, 1
  resume { i8*, i32 } %401

; <label>:402:                                    ; preds = %211
  %403 = landingpad { i8*, i32 }
          catch i8* null
  %404 = extractvalue { i8*, i32 } %403, 0
  call void @__clang_call_terminate(i8* %404) #11
  unreachable

; <label>:405:                                    ; preds = %255
  unreachable

; <label>:406:                                    ; preds = %52, %37
  store i32* %36, i32** %7, align 8
  %407 = load i32*, i32** %7, align 8
  %408 = getelementptr inbounds i32, i32* %407, i32 1
  store i32* %408, i32** %7, align 8
  br label %52

; <label>:409:                                    ; preds = %101, %74
  %410 = load i8*, i8** %8, align 8
  %411 = call i8* @__cxa_begin_catch(i8* %410) #3
  %412 = load i32*, i32** %7, align 8
  %413 = icmp ne i32* %412, null
  br label %101

; <label>:414:                                    ; preds = %146, %132
  %415 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %415, i32 0, i32 0
  %417 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %416 to %"class.std::allocator.25"*
  %418 = load i32*, i32** %6, align 8
  %419 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  %420 = getelementptr inbounds i32, i32* %418, i64 %419
  br label %146

; <label>:421:                                    ; preds = %195, %168
  br label %195

; <label>:422:                                    ; preds = %236, %221
  %423 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %424 = load i32*, i32** %6, align 8
  %425 = load i64, i64* %5, align 8
  br label %236

; <label>:426:                                    ; preds = %271, %256
  br label %271

; <label>:427:                                    ; preds = %326, %299
  %428 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %429 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %428, i32 0, i32 0
  %430 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %429, i32 0, i32 0
  %431 = load i32*, i32** %430, align 8
  %432 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %433 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %432, i32 0, i32 0
  %434 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %433, i32 0, i32 1
  %435 = load i32*, i32** %434, align 8
  %436 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %437 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %436) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %431, i32* %435, %"class.std::allocator.25"* dereferenceable(1) %437)
  %438 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %439 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %440 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %439, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %440, i32 0, i32 0
  %442 = load i32*, i32** %441, align 8
  %443 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %444 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %443, i32 0, i32 0
  %445 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %444, i32 0, i32 2
  %446 = load i32*, i32** %445, align 8
  %447 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %448 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %448, i32 0, i32 0
  %450 = load i32*, i32** %449, align 8
  %451 = ptrtoint i32* %446 to i64
  %452 = ptrtoint i32* %450 to i64
  %453 = add i64 0, -76723818656782936
  %454 = sub i64 %453, %451
  %455 = sub i64 %454, -76723818656782936
  %456 = sub i64 0, %451
  %457 = sub i64 0, %455
  %458 = sub i64 0, %452
  %459 = add i64 %457, %458
  %460 = sub i64 0, %459
  %461 = add i64 %455, %452
  %462 = sub i64 0, %451
  %463 = add i64 0, %462
  %464 = sub i64 0, %451
  %465 = sub i64 0, %452
  %466 = sub i64 %463, %465
  %467 = add i64 %463, %452
  %468 = sub i64 0, %452
  %469 = add i64 %451, %468
  %470 = sub i64 %451, %452
  %471 = mul i64 %469, %452
  %472 = add i64 0, 8505121370210536976
  %473 = sub i64 %472, %451
  %474 = sub i64 %473, 8505121370210536976
  %475 = sub i64 0, %451
  %476 = add i64 %474, 7960289965526192606
  %477 = add i64 %476, %452
  %478 = sub i64 %477, 7960289965526192606
  %479 = add i64 %474, %452
  %480 = add i64 %451, -1339984690737183277
  %481 = sub i64 %480, %452
  %482 = sub i64 %481, -1339984690737183277
  %483 = sub i64 %451, %452
  %484 = shl i64 %482, 4
  %485 = shl i64 %482, 4
  %486 = shl i64 %482, 4
  %487 = add i64 0, 7008223507700719549
  %488 = sub i64 %487, %482
  %489 = sub i64 %488, 7008223507700719549
  %490 = sub i64 0, %482
  %491 = sub i64 %489, -9064556753744351173
  %492 = add i64 %491, 4
  %493 = add i64 %492, -9064556753744351173
  %494 = add i64 %489, 4
  %495 = add i64 0, -6323800811299291215
  %496 = sub i64 %495, %482
  %497 = sub i64 %496, -6323800811299291215
  %498 = sub i64 0, %482
  %499 = sub i64 0, 4
  %500 = sub i64 %497, %499
  %501 = add i64 %497, 4
  %502 = add i64 0, 2996401829987745311
  %503 = sub i64 %502, %482
  %504 = sub i64 %503, 2996401829987745311
  %505 = sub i64 0, %482
  %506 = sub i64 0, %504
  %507 = sub i64 0, 4
  %508 = add i64 %506, %507
  %509 = sub i64 0, %508
  %510 = add i64 %504, 4
  %511 = sdiv exact i64 %482, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %438, i32* %442, i64 %511)
  %512 = load i32*, i32** %6, align 8
  %513 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %514 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %513, i32 0, i32 0
  %515 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %514, i32 0, i32 0
  store i32* %512, i32** %515, align 8
  %516 = load i32*, i32** %7, align 8
  %517 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %518 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %518, i32 0, i32 1
  store i32* %516, i32** %519, align 8
  %520 = load i32*, i32** %6, align 8
  %521 = load i64, i64* %5, align 8
  %522 = getelementptr inbounds i32, i32* %520, i64 %521
  %523 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %524 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %523, i32 0, i32 0
  %525 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %524, i32 0, i32 2
  store i32* %522, i32** %525, align 8
  br label %326
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.621
  %6 = load i32, i32* @y.622
  %7 = sub i32 %5, 1518003958
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1518003958
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -16130489, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -16130489, label %19
    i32 723627469, label %27
    i32 1398210245, label %56
    i32 1853899205, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 723627469, i32 1853899205
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  store i32* %29, i32** %2
  %30 = load i32, i32* @x.621
  %31 = load i32, i32* @y.622
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1398210245, i32 1853899205
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile i32*, i32** %2
  ret i32* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca i32*, align 8
  store i32* %0, i32** %59, align 8
  %60 = load i32*, i32** %59, align 8
  store i32 723627469, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.25"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.25"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %3, align 8
  %6 = bitcast %"class.std::allocator.25"* %5 to %"class.__gnu_cxx::new_allocator.26"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.26"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.26"*, i32*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE12emplace_backIJiEEEvDpOT_(%"class.std::vector.23"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.23"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.627
  %9 = load i32, i32* @y.628
  %10 = add i32 %8, 2083057957
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 2083057957
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 700273676, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %114
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 700273676, label %22
    i32 1764559396, label %30
    i32 1794681799, label %73
    i32 1612865672, label %76
    i32 571278575, label %95
    i32 725591131, label %100
    i32 -375100696, label %101
  ]

; <label>:21:                                     ; preds = %19
  br label %114

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 1764559396, i32 -375100696
  store i32 %29, i32* %18
  br label %114

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.23"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::vector.23"*, %"class.std::vector.23"** %31, align 8
  store %"class.std::vector.23"* %34, %"class.std::vector.23"** %4
  %35 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %36 = bitcast %"class.std::vector.23"* %35 to %"struct.std::_Vector_base.24"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %41 = bitcast %"class.std::vector.23"* %40 to %"struct.std::_Vector_base.24"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 2
  %44 = load i32*, i32** %43, align 8
  %45 = icmp ne i32* %39, %44
  store i1 %45, i1* %3
  %46 = load i32, i32* @x.627
  %47 = load i32, i32* @y.628
  %48 = add i32 %46, 1708847680
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1708847680
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1794681799, i32 -375100696
  store i32 %72, i32* %18
  br label %114

; <label>:73:                                     ; preds = %19
  %74 = load volatile i1, i1* %3
  %75 = select i1 %74, i32 1612865672, i32 571278575
  store i32 %75, i32* %18
  br label %114

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %78 = bitcast %"class.std::vector.23"* %77 to %"struct.std::_Vector_base.24"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %78, i32 0, i32 0
  %80 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79 to %"class.std::allocator.25"*
  %81 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %82 = bitcast %"class.std::vector.23"* %81 to %"struct.std::_Vector_base.24"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83, i32 0, i32 1
  %85 = load i32*, i32** %84, align 8
  %86 = load volatile i32**, i32*** %5
  %87 = load i32*, i32** %86, align 8
  %88 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %87) #3
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %80, i32* %85, i32* dereferenceable(4) %88)
  %89 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  %90 = bitcast %"class.std::vector.23"* %89 to %"struct.std::_Vector_base.24"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %91, i32 0, i32 1
  %93 = load i32*, i32** %92, align 8
  %94 = getelementptr inbounds i32, i32* %93, i32 1
  store i32* %94, i32** %92, align 8
  store i32 725591131, i32* %18
  br label %114

; <label>:95:                                     ; preds = %19
  %96 = load volatile i32**, i32*** %5
  %97 = load i32*, i32** %96, align 8
  %98 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %97) #3
  %99 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %4
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(%"class.std::vector.23"* %99, i32* dereferenceable(4) %98)
  store i32 725591131, i32* %18
  br label %114

; <label>:100:                                    ; preds = %19
  ret void

; <label>:101:                                    ; preds = %19
  %102 = alloca %"class.std::vector.23"*, align 8
  %103 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %102, align 8
  store i32* %1, i32** %103, align 8
  %104 = load %"class.std::vector.23"*, %"class.std::vector.23"** %102, align 8
  %105 = bitcast %"class.std::vector.23"* %104 to %"struct.std::_Vector_base.24"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %106, i32 0, i32 1
  %108 = load i32*, i32** %107, align 8
  %109 = bitcast %"class.std::vector.23"* %104 to %"struct.std::_Vector_base.24"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %110, i32 0, i32 2
  %112 = load i32*, i32** %111, align 8
  %113 = icmp ne i32* %108, %112
  store i32 1764559396, i32* %18
  br label %114

; <label>:114:                                    ; preds = %101, %95, %76, %73, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt4moveIRiEONSt16remove_referenceIT_E4typeEOS2_(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.25"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.25"* %0, %"class.std::allocator.25"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  %8 = bitcast %"class.std::allocator.25"* %7 to %"class.__gnu_cxx::new_allocator.26"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.633
  %6 = load i32, i32* @y.634
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1172582051, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1172582051, label %18
    i32 -1250303610, label %38
    i32 -1631769230, label %68
    i32 1849186841, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1250303610, i32 1849186841
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca i32*, align 8
  store i32* %0, i32** %39, align 8
  %40 = load i32*, i32** %39, align 8
  store i32* %40, i32** %2
  %41 = load i32, i32* @x.633
  %42 = load i32, i32* @y.634
  %43 = add i32 %41, 2000670629
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 2000670629
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1631769230, i32 1849186841
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile i32*, i32** %2
  ret i32* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca i32*, align 8
  store i32* %0, i32** %71, align 8
  %72 = load i32*, i32** %71, align 8
  store i32 -1250303610, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJiEEEvDpOT_(%"class.std::vector.23"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.23"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.23"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator.25"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJiEEEvRS0_PT_DpOT0_(%"class.std::allocator.25"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %40

; <label>:24:                                     ; preds = %2
  store i32* null, i32** %7, align 8
  %25 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %35 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %34) #3
  %36 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %28, i32* %32, i32* %33, %"class.std::allocator.25"* dereferenceable(1) %35)
          to label %37 unwind label %40

; <label>:37:                                     ; preds = %24
  store i32* %36, i32** %7, align 8
  %38 = load i32*, i32** %7, align 8
  %39 = getelementptr inbounds i32, i32* %38, i32 1
  store i32* %39, i32** %7, align 8
  br label %197

; <label>:40:                                     ; preds = %24, %2
  %41 = landingpad { i8*, i32 }
          catch i8* null
  %42 = extractvalue { i8*, i32 } %41, 0
  store i8* %42, i8** %8, align 8
  %43 = extractvalue { i8*, i32 } %41, 1
  store i32 %43, i32* %9, align 4
  br label %44

; <label>:44:                                     ; preds = %40
  %45 = load i8*, i8** %8, align 8
  %46 = call i8* @__cxa_begin_catch(i8* %45) #3
  %47 = load i32*, i32** %7, align 8
  %48 = icmp ne i32* %47, null
  br i1 %48, label %91, label %49

; <label>:49:                                     ; preds = %44
  %50 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %51 to %"class.std::allocator.25"*
  %53 = load i32*, i32** %6, align 8
  %54 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %10) #3
  %55 = getelementptr inbounds i32, i32* %53, i64 %54
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.25"* dereferenceable(1) %52, i32* %55)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %49
  br label %151

; <label>:57:                                     ; preds = %155, %151, %149, %49
  %58 = load i32, i32* @x.635
  %59 = load i32, i32* @y.636
  %60 = add i32 %58, 202945218
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 202945218
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %332

; <label>:72:                                     ; preds = %57, %332
  %73 = landingpad { i8*, i32 }
          cleanup
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %8, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %9, align 4
  %76 = load i32, i32* @x.635
  %77 = load i32, i32* @y.636
  %78 = sub i32 %76, 1691721359
  %79 = sub i32 %78, 1
  %80 = add i32 %79, 1691721359
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %332

; <label>:90:                                     ; preds = %72
  invoke void @__cxa_end_catch()
          to label %156 unwind label %247

; <label>:91:                                     ; preds = %44
  %92 = load i32, i32* @x.635
  %93 = load i32, i32* @y.636
  %94 = sub i32 %92, 874761453
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 874761453
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %336

; <label>:118:                                    ; preds = %91, %336
  %119 = load i32*, i32** %6, align 8
  %120 = load i32*, i32** %7, align 8
  %121 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %122 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %121) #3
  %123 = load i32, i32* @x.635
  %124 = load i32, i32* @y.636
  %125 = sub i32 %123, 701560450
  %126 = sub i32 %125, 1
  %127 = add i32 %126, 701560450
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 false, true
  %136 = and i1 %133, false
  %137 = and i1 %131, %135
  %138 = and i1 %134, false
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 false, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  br i1 %147, label %149, label %336

; <label>:149:                                    ; preds = %118
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %119, i32* %120, %"class.std::allocator.25"* dereferenceable(1) %122)
          to label %150 unwind label %57

; <label>:150:                                    ; preds = %149
  br label %151

; <label>:151:                                    ; preds = %150, %56
  %152 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %153 = load i32*, i32** %6, align 8
  %154 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %152, i32* %153, i64 %154)
          to label %155 unwind label %57

; <label>:155:                                    ; preds = %151
  invoke void @__cxa_rethrow() #12
          to label %290 unwind label %57

; <label>:156:                                    ; preds = %90
  %157 = load i32, i32* @x.635
  %158 = load i32, i32* @y.636
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %341

; <label>:182:                                    ; preds = %156, %341
  %183 = load i32, i32* @x.635
  %184 = load i32, i32* @y.636
  %185 = sub i32 0, 1
  %186 = add i32 %183, %185
  %187 = sub i32 %183, 1
  %188 = mul i32 %183, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %184, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %341

; <label>:196:                                    ; preds = %182
  br label %242

; <label>:197:                                    ; preds = %37
  %198 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %198, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %199, i32 0, i32 0
  %201 = load i32*, i32** %200, align 8
  %202 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %203 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %203, i32 0, i32 1
  %205 = load i32*, i32** %204, align 8
  %206 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %207 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %206) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %201, i32* %205, %"class.std::allocator.25"* dereferenceable(1) %207)
  %208 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %209 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %210, i32 0, i32 0
  %212 = load i32*, i32** %211, align 8
  %213 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %214, i32 0, i32 2
  %216 = load i32*, i32** %215, align 8
  %217 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %218, i32 0, i32 0
  %220 = load i32*, i32** %219, align 8
  %221 = ptrtoint i32* %216 to i64
  %222 = ptrtoint i32* %220 to i64
  %223 = sub i64 %221, 754172785326974161
  %224 = sub i64 %223, %222
  %225 = add i64 %224, 754172785326974161
  %226 = sub i64 %221, %222
  %227 = sdiv exact i64 %225, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.24"* %208, i32* %212, i64 %227)
  %228 = load i32*, i32** %6, align 8
  %229 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %230, i32 0, i32 0
  store i32* %228, i32** %231, align 8
  %232 = load i32*, i32** %7, align 8
  %233 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %234, i32 0, i32 1
  store i32* %232, i32** %235, align 8
  %236 = load i32*, i32** %6, align 8
  %237 = load i64, i64* %5, align 8
  %238 = getelementptr inbounds i32, i32* %236, i64 %237
  %239 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %240, i32 0, i32 2
  store i32* %238, i32** %241, align 8
  ret void

; <label>:242:                                    ; preds = %196
  %243 = load i8*, i8** %8, align 8
  %244 = load i32, i32* %9, align 4
  %245 = insertvalue { i8*, i32 } undef, i8* %243, 0
  %246 = insertvalue { i8*, i32 } %245, i32 %244, 1
  resume { i8*, i32 } %246

; <label>:247:                                    ; preds = %90
  %248 = load i32, i32* @x.635
  %249 = load i32, i32* @y.636
  %250 = sub i32 0, 1
  %251 = add i32 %248, %250
  %252 = sub i32 %248, 1
  %253 = mul i32 %248, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %249, 10
  %257 = and i1 %255, %256
  %258 = xor i1 %255, %256
  %259 = or i1 %257, %258
  %260 = or i1 %255, %256
  br i1 %259, label %261, label %342

; <label>:261:                                    ; preds = %247, %342
  %262 = landingpad { i8*, i32 }
          catch i8* null
  %263 = extractvalue { i8*, i32 } %262, 0
  call void @__clang_call_terminate(i8* %263) #11
  %264 = load i32, i32* @x.635
  %265 = load i32, i32* @y.636
  %266 = sub i32 0, 1
  %267 = add i32 %264, %266
  %268 = sub i32 %264, 1
  %269 = mul i32 %264, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %265, 10
  %273 = xor i1 %271, true
  %274 = xor i1 %272, true
  %275 = xor i1 true, true
  %276 = and i1 %273, true
  %277 = and i1 %271, %275
  %278 = and i1 %274, true
  %279 = and i1 %272, %275
  %280 = or i1 %276, %277
  %281 = or i1 %278, %279
  %282 = xor i1 %280, %281
  %283 = or i1 %273, %274
  %284 = xor i1 %283, true
  %285 = or i1 true, %275
  %286 = and i1 %284, %285
  %287 = or i1 %282, %286
  %288 = or i1 %271, %272
  br i1 %287, label %289, label %342

; <label>:289:                                    ; preds = %261
  unreachable

; <label>:290:                                    ; preds = %155
  %291 = load i32, i32* @x.635
  %292 = load i32, i32* @y.636
  %293 = add i32 %291, -17878139
  %294 = sub i32 %293, 1
  %295 = sub i32 %294, -17878139
  %296 = sub i32 %291, 1
  %297 = mul i32 %291, %295
  %298 = urem i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = icmp slt i32 %292, 10
  %301 = and i1 %299, %300
  %302 = xor i1 %299, %300
  %303 = or i1 %301, %302
  %304 = or i1 %299, %300
  br i1 %303, label %305, label %345

; <label>:305:                                    ; preds = %290, %345
  %306 = load i32, i32* @x.635
  %307 = load i32, i32* @y.636
  %308 = sub i32 0, 1
  %309 = add i32 %306, %308
  %310 = sub i32 %306, 1
  %311 = mul i32 %306, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %307, 10
  %315 = xor i1 %313, true
  %316 = xor i1 %314, true
  %317 = xor i1 false, true
  %318 = and i1 %315, false
  %319 = and i1 %313, %317
  %320 = and i1 %316, false
  %321 = and i1 %314, %317
  %322 = or i1 %318, %319
  %323 = or i1 %320, %321
  %324 = xor i1 %322, %323
  %325 = or i1 %315, %316
  %326 = xor i1 %325, true
  %327 = or i1 false, %317
  %328 = and i1 %326, %327
  %329 = or i1 %324, %328
  %330 = or i1 %313, %314
  br i1 %329, label %331, label %345

; <label>:331:                                    ; preds = %305
  unreachable

; <label>:332:                                    ; preds = %72, %57
  %333 = landingpad { i8*, i32 }
          cleanup
  %334 = extractvalue { i8*, i32 } %333, 0
  store i8* %334, i8** %8, align 8
  %335 = extractvalue { i8*, i32 } %333, 1
  store i32 %335, i32* %9, align 4
  br label %72

; <label>:336:                                    ; preds = %118, %91
  %337 = load i32*, i32** %6, align 8
  %338 = load i32*, i32** %7, align 8
  %339 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %340 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %339) #3
  br label %118

; <label>:341:                                    ; preds = %182, %156
  br label %182

; <label>:342:                                    ; preds = %261, %247
  %343 = landingpad { i8*, i32 }
          catch i8* null
  %344 = extractvalue { i8*, i32 } %343, 0
  call void @__clang_call_terminate(i8* %344) #11
  br label %261

; <label>:345:                                    ; preds = %305, %290
  br label %305
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.26"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.637
  %7 = load i32, i32* @y.638
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1417228115, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1417228115, label %19
    i32 -684537866, label %39
    i32 -1663563704, label %65
    i32 1008743895, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -684537866, i32 1008743895
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %40, align 8
  store i32* %1, i32** %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %40, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = bitcast i32* %44 to i8*
  %46 = bitcast i8* %45 to i32*
  %47 = load i32*, i32** %42, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %47) #3
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %46, align 4
  %50 = load i32, i32* @x.637
  %51 = load i32, i32* @y.638
  %52 = add i32 %50, 1708254339
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1708254339
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1663563704, i32 1008743895
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::new_allocator.26"*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.26"* %0, %"class.__gnu_cxx::new_allocator.26"** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  %70 = load %"class.__gnu_cxx::new_allocator.26"*, %"class.__gnu_cxx::new_allocator.26"** %67, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = bitcast i32* %71 to i8*
  %73 = bitcast i8* %72 to i32*
  %74 = load i32*, i32** %69, align 8
  %75 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %74) #3
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %73, align 4
  store i32 -684537866, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.5"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i64*, i64** %6, align 8
  call void @_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx(%"class.std::vector.5"* %7, i64 %8, i64* dereferenceable(8) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.23"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.641
  %7 = load i32, i32* @y.642
  %8 = sub i32 %6, -246144904
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -246144904
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 79325271, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 79325271, label %20
    i32 2137511955, label %28
    i32 1868505105, label %50
    i32 676569967, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2137511955, i32 676569967
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.23"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector.23"*, %"class.std::vector.23"** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = load i32*, i32** %31, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.23"* %32, i64 %33, i32* dereferenceable(4) %34)
  %35 = load i32, i32* @x.641
  %36 = load i32, i32* @y.642
  %37 = sub i32 %35, 1395350657
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1395350657
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1868505105, i32 676569967
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::vector.23"*, align 8
  %53 = alloca i64, align 8
  %54 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %52, align 8
  store i64 %1, i64* %53, align 8
  store i32* %2, i32** %54, align 8
  %55 = load %"class.std::vector.23"*, %"class.std::vector.23"** %52, align 8
  %56 = load i64, i64* %53, align 8
  %57 = load i32*, i32** %54, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.23"* %55, i64 %56, i32* dereferenceable(4) %57)
  store i32 2137511955, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE6assignEmRKc(%"class.std::vector.0"*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i8*, i8** %6, align 8
  call void @_ZNSt6vectorIcSaIcEE14_M_fill_assignEmRKc(%"class.std::vector.0"* %7, i64 %8, i8* dereferenceable(1) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.23"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %6 = bitcast %"class.std::vector.23"* %5 to %"struct.std::_Vector_base.24"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN12Template_MPM3bfsEv(%struct.Template_MPM*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca %struct.Template_MPM*
  %5 = alloca %struct.Template_MPM*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %10 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %5, align 8
  %11 = load %struct.Template_MPM*, %struct.Template_MPM** %5, align 8
  store %struct.Template_MPM* %11, %struct.Template_MPM** %4
  %12 = alloca i32
  store i32 -1190846044, i32* %12
  br label %13

; <label>:13:                                     ; preds = %1, %350
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1190846044, label %16
    i32 412510263, label %44
    i32 -938867126, label %67
    i32 328560315, label %70
    i32 1906178816, label %94
    i32 1583100651, label %97
    i32 -236926632, label %119
    i32 619856285, label %146
    i32 -447277338, label %162
    i32 -1661748429, label %163
    i32 -817037259, label %178
    i32 -41781755, label %179
    i32 686758093, label %217
    i32 -1213210455, label %219
    i32 -738146646, label %234
    i32 1804009711, label %262
    i32 -96730822, label %263
    i32 1165228166, label %291
    i32 841751888, label %328
    i32 -350763881, label %330
    i32 541397977, label %338
    i32 -582452814, label %339
    i32 -597366637, label %340
  ]

; <label>:15:                                     ; preds = %13
  br label %350

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* @x.647
  %18 = load i32, i32* @y.648
  %19 = add i32 %17, -2007696140
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -2007696140
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 412510263, i32 -350763881
  store i32 %43, i32* %12
  br label %350

; <label>:44:                                     ; preds = %13
  %45 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %46 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %45, i32 0, i32 15
  %47 = load i32, i32* %46, align 8
  %48 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %49 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %48, i32 0, i32 16
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %47, %50
  store i1 %51, i1* %3
  %52 = load i32, i32* @x.647
  %53 = load i32, i32* @y.648
  %54 = sub i32 %52, -129089513
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -129089513
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -938867126, i32 -350763881
  store i32 %66, i32* %12
  br label %350

; <label>:67:                                     ; preds = %13
  %68 = load volatile i1, i1* %3
  %69 = select i1 %68, i32 328560315, i32 -96730822
  store i32 %69, i32* %12
  br label %350

; <label>:70:                                     ; preds = %13
  %71 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %72 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %71, i32 0, i32 14
  %73 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %74 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %73, i32 0, i32 15
  %75 = load i32, i32* %74, align 8
  %76 = sub i32 %75, -1396374903
  %77 = add i32 %76, 1
  %78 = add i32 %77, -1396374903
  %79 = add nsw i32 %75, 1
  store i32 %78, i32* %74, align 8
  %80 = sext i32 %75 to i64
  %81 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %72, i64 %80) #3
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %6, align 4
  %83 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %84 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %83, i32 0, i32 7
  %85 = load i32, i32* %6, align 4
  %86 = sext i32 %85 to i64
  %87 = call dereferenceable(24) %"class.std::vector.23"* @_ZNSt6vectorIS_IiSaIiEESaIS1_EEixEm(%"class.std::vector.18"* %84, i64 %86) #3
  store %"class.std::vector.23"* %87, %"class.std::vector.23"** %7, align 8
  %88 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %89 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.23"* %88) #3
  %90 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %8, i32 0, i32 0
  store i32* %89, i32** %90, align 8
  %91 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  %92 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.23"* %91) #3
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %9, i32 0, i32 0
  store i32* %92, i32** %93, align 8
  store i32 1906178816, i32* %12
  br label %350

; <label>:94:                                     ; preds = %13
  %95 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %8, %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8) %9) #3
  %96 = select i1 %95, i32 1583100651, i32 -1213210455
  store i32 %96, i32* %12
  br label %350

; <label>:97:                                     ; preds = %13
  %98 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"* %8) #3
  %99 = load i32, i32* %98, align 4
  store i32 %99, i32* %10, align 4
  %100 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %101 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %100, i32 0, i32 1
  %102 = load i32, i32* %10, align 4
  %103 = sext i32 %102 to i64
  %104 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %101, i64 %103) #3
  %105 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %104, i32 0, i32 2
  %106 = load i64, i64* %105, align 8
  %107 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %108 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %107, i32 0, i32 1
  %109 = load i32, i32* %10, align 4
  %110 = sext i32 %109 to i64
  %111 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %108, i64 %110) #3
  %112 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %111, i32 0, i32 3
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 0, %113
  %115 = add i64 %106, %114
  %116 = sub nsw i64 %106, %113
  %117 = icmp slt i64 %115, 1
  %118 = select i1 %117, i32 -236926632, i32 -1661748429
  store i32 %118, i32* %12
  br label %350

; <label>:119:                                    ; preds = %13
  %120 = load i32, i32* @x.647
  %121 = load i32, i32* @y.648
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 false, true
  %132 = and i1 %129, false
  %133 = and i1 %127, %131
  %134 = and i1 %130, false
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 false, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 619856285, i32 541397977
  store i32 %145, i32* %12
  br label %350

; <label>:146:                                    ; preds = %13
  %147 = load i32, i32* @x.647
  %148 = load i32, i32* @y.648
  %149 = sub i32 %147, 1693239223
  %150 = sub i32 %149, 1
  %151 = add i32 %150, 1693239223
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  %161 = select i1 %159, i32 -447277338, i32 541397977
  store i32 %161, i32* %12
  br label %350

; <label>:162:                                    ; preds = %13
  store i32 686758093, i32* %12
  br label %350

; <label>:163:                                    ; preds = %13
  %164 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %165 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %164, i32 0, i32 13
  %166 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %167 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %166, i32 0, i32 1
  %168 = load i32, i32* %10, align 4
  %169 = sext i32 %168 to i64
  %170 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %167, i64 %169) #3
  %171 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %170, i32 0, i32 1
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %165, i64 %173) #3
  %175 = load i32, i32* %174, align 4
  %176 = icmp ne i32 %175, -1
  %177 = select i1 %176, i32 -817037259, i32 -41781755
  store i32 %177, i32* %12
  br label %350

; <label>:178:                                    ; preds = %13
  store i32 686758093, i32* %12
  br label %350

; <label>:179:                                    ; preds = %13
  %180 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %181 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %180, i32 0, i32 13
  %182 = load i32, i32* %6, align 4
  %183 = sext i32 %182 to i64
  %184 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %181, i64 %183) #3
  %185 = load i32, i32* %184, align 4
  %186 = sub i32 0, 1
  %187 = sub i32 %185, %186
  %188 = add nsw i32 %185, 1
  %189 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %190 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %189, i32 0, i32 13
  %191 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %192 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %191, i32 0, i32 1
  %193 = load i32, i32* %10, align 4
  %194 = sext i32 %193 to i64
  %195 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %192, i64 %194) #3
  %196 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %195, i32 0, i32 1
  %197 = load i32, i32* %196, align 4
  %198 = sext i32 %197 to i64
  %199 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %190, i64 %198) #3
  store i32 %187, i32* %199, align 4
  %200 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %201 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %200, i32 0, i32 1
  %202 = load i32, i32* %10, align 4
  %203 = sext i32 %202 to i64
  %204 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %201, i64 %203) #3
  %205 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %204, i32 0, i32 1
  %206 = load i32, i32* %205, align 4
  %207 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %208 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %207, i32 0, i32 14
  %209 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %210 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %209, i32 0, i32 16
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 0, 1
  %213 = sub i32 %211, %212
  %214 = add nsw i32 %211, 1
  store i32 %213, i32* %210, align 4
  %215 = sext i32 %211 to i64
  %216 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %208, i64 %215) #3
  store i32 %206, i32* %216, align 4
  store i32 686758093, i32* %12
  br label %350

; <label>:217:                                    ; preds = %13
  %218 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.33"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.33"* %8) #3
  store i32 1906178816, i32* %12
  br label %350

; <label>:219:                                    ; preds = %13
  %220 = load i32, i32* @x.647
  %221 = load i32, i32* @y.648
  %222 = sub i32 0, 1
  %223 = add i32 %220, %222
  %224 = sub i32 %220, 1
  %225 = mul i32 %220, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %221, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  %233 = select i1 %231, i32 -738146646, i32 -582452814
  store i32 %233, i32* %12
  br label %350

; <label>:234:                                    ; preds = %13
  %235 = load i32, i32* @x.647
  %236 = load i32, i32* @y.648
  %237 = add i32 %235, 765849342
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, 765849342
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 false, true
  %248 = and i1 %245, false
  %249 = and i1 %243, %247
  %250 = and i1 %246, false
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 false, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  %261 = select i1 %259, i32 1804009711, i32 -582452814
  store i32 %261, i32* %12
  br label %350

; <label>:262:                                    ; preds = %13
  store i32 -1190846044, i32* %12
  br label %350

; <label>:263:                                    ; preds = %13
  %264 = load i32, i32* @x.647
  %265 = load i32, i32* @y.648
  %266 = sub i32 %264, -1466617061
  %267 = sub i32 %266, 1
  %268 = add i32 %267, -1466617061
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 true, true
  %277 = and i1 %274, true
  %278 = and i1 %272, %276
  %279 = and i1 %275, true
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 true, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  %290 = select i1 %288, i32 1165228166, i32 -597366637
  store i32 %290, i32* %12
  br label %350

; <label>:291:                                    ; preds = %13
  %292 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %293 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %292, i32 0, i32 13
  %294 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %295 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %294, i32 0, i32 12
  %296 = load i32, i32* %295, align 4
  %297 = sext i32 %296 to i64
  %298 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %293, i64 %297) #3
  %299 = load i32, i32* %298, align 4
  %300 = icmp ne i32 %299, -1
  store i1 %300, i1* %2
  %301 = load i32, i32* @x.647
  %302 = load i32, i32* @y.648
  %303 = add i32 %301, -1459631858
  %304 = sub i32 %303, 1
  %305 = sub i32 %304, -1459631858
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 false, true
  %314 = and i1 %311, false
  %315 = and i1 %309, %313
  %316 = and i1 %312, false
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 false, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  %327 = select i1 %325, i32 841751888, i32 -597366637
  store i32 %327, i32* %12
  br label %350

; <label>:328:                                    ; preds = %13
  %329 = load volatile i1, i1* %2
  ret i1 %329

; <label>:330:                                    ; preds = %13
  %331 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %332 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %331, i32 0, i32 15
  %333 = load i32, i32* %332, align 8
  %334 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %335 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %334, i32 0, i32 16
  %336 = load i32, i32* %335, align 4
  %337 = icmp slt i32 %333, %336
  store i32 412510263, i32* %12
  br label %350

; <label>:338:                                    ; preds = %13
  store i32 619856285, i32* %12
  br label %350

; <label>:339:                                    ; preds = %13
  store i32 -738146646, i32* %12
  br label %350

; <label>:340:                                    ; preds = %13
  %341 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %342 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %341, i32 0, i32 13
  %343 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %4
  %344 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %343, i32 0, i32 12
  %345 = load i32, i32* %344, align 4
  %346 = sext i32 %345 to i64
  %347 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %342, i64 %346) #3
  %348 = load i32, i32* %347, align 4
  %349 = icmp ne i32 %348, -1
  store i32 1165228166, i32* %12
  br label %350

; <label>:350:                                    ; preds = %340, %339, %338, %330, %291, %263, %262, %234, %219, %217, %179, %178, %163, %162, %146, %119, %97, %94, %70, %67, %44, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.10"* %0, %"class.std::vector.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.10"*, %"class.std::vector.10"** %3, align 8
  %6 = bitcast %"class.std::vector.10"* %5 to %"struct.std::_Vector_base.11"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.11", %"struct.std::_Vector_base.11"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::list<int, std::allocator<int> >, std::allocator<std::__cxx11::list<int, std::allocator<int> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::__cxx11::list", %"class.std::__cxx11::list"* %9, i64 %10
  ret %"class.std::__cxx11::list"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEE5clearEv(%"class.std::__cxx11::list"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.651
  %5 = load i32, i32* @y.652
  %6 = add i32 %4, -1014906962
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1014906962
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1769975349, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1769975349, label %18
    i32 -210890871, label %26
    i32 -522818839, label %46
    i32 -561300875, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -210890871, i32 -561300875
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %27, align 8
  %28 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %27, align 8
  %29 = bitcast %"class.std::__cxx11::list"* %28 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE8_M_clearEv(%"class.std::__cxx11::_List_base"* %29) #3
  %30 = bitcast %"class.std::__cxx11::list"* %28 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %30) #3
  %31 = load i32, i32* @x.651
  %32 = load i32, i32* @y.652
  %33 = sub i32 %31, -346207361
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -346207361
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -522818839, i32 -561300875
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %48, align 8
  %49 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %48, align 8
  %50 = bitcast %"class.std::__cxx11::list"* %49 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE8_M_clearEv(%"class.std::__cxx11::_List_base"* %50) #3
  %51 = bitcast %"class.std::__cxx11::list"* %49 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE7_M_initEv(%"class.std::__cxx11::_List_base"* %51) #3
  store i32 -210890871, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"struct.Template_MPM::FlowEdge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.653
  %7 = load i32, i32* @y.654
  %8 = add i32 %6, -623340964
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -623340964
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 37382176, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 37382176, label %20
    i32 -1072336730, label %28
    i32 -1829391770, label %53
    i32 -224649773, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1072336730, i32 -224649773
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %35, i64 %36
  store %"struct.Template_MPM::FlowEdge"* %37, %"struct.Template_MPM::FlowEdge"** %3
  %38 = load i32, i32* @x.653
  %39 = load i32, i32* @y.654
  %40 = add i32 %38, 1041823147
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1041823147
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1829391770, i32 -224649773
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %3
  ret %"struct.Template_MPM::FlowEdge"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %59 = bitcast %"class.std::vector"* %58 to %"struct.std::_Vector_base"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl", %"struct.std::_Vector_base<Template_MPM::FlowEdge, std::allocator<Template_MPM::FlowEdge> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.Template_MPM::FlowEdge"*, %"struct.Template_MPM::FlowEdge"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %62, i64 %63
  store i32 -1072336730, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEE9push_backERKi(%"class.std::__cxx11::list"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.655
  %6 = load i32, i32* @y.656
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 569010661, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 569010661, label %18
    i32 652143719, label %26
    i32 -1120990642, label %51
    i32 -2003741008, label %52
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 652143719, i32 -2003741008
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::list"*, align 8
  %28 = alloca i32*, align 8
  %29 = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %27, align 8
  store i32* %1, i32** %28, align 8
  %30 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %27, align 8
  %31 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %30) #3
  %32 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %29, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %31, %"struct.std::__detail::_List_node_base"** %32, align 8
  %33 = load i32*, i32** %28, align 8
  %34 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %29, i32 0, i32 0
  %35 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %34, align 8
  call void @_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_(%"class.std::__cxx11::list"* %30, %"struct.std::__detail::_List_node_base"* %35, i32* dereferenceable(4) %33)
  %36 = load i32, i32* @x.655
  %37 = load i32, i32* @y.656
  %38 = sub i32 %36, -1271016572
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1271016572
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1120990642, i32 -2003741008
  store i32 %50, i32* %14
  br label %62

; <label>:51:                                     ; preds = %15
  ret void

; <label>:52:                                     ; preds = %15
  %53 = alloca %"class.std::__cxx11::list"*, align 8
  %54 = alloca i32*, align 8
  %55 = alloca %"struct.std::_List_iterator", align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %53, align 8
  store i32* %1, i32** %54, align 8
  %56 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %53, align 8
  %57 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %56) #3
  %58 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %55, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %57, %"struct.std::__detail::_List_node_base"** %58, align 8
  %59 = load i32*, i32** %54, align 8
  %60 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %55, i32 0, i32 0
  %61 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %60, align 8
  call void @_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_(%"class.std::__cxx11::list"* %56, %"struct.std::__detail::_List_node_base"* %61, i32* dereferenceable(4) %59)
  store i32 652143719, i32* %14
  br label %62

; <label>:62:                                     ; preds = %52, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"*, i64) #4 comdat align 2 {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.657
  %7 = load i32, i32* @y.658
  %8 = add i32 %6, 315604082
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 315604082
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 476692648, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 476692648, label %20
    i32 1739127529, label %28
    i32 702410356, label %53
    i32 1497764797, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1739127529, i32 1497764797
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.5"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.5"*, %"class.std::vector.5"** %29, align 8
  %32 = bitcast %"class.std::vector.5"* %31 to %"struct.std::_Vector_base.6"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i64*, i64** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i64, i64* %35, i64 %36
  store i64* %37, i64** %3
  %38 = load i32, i32* @x.657
  %39 = load i32, i32* @y.658
  %40 = add i32 %38, 261931852
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 261931852
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 702410356, i32 1497764797
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile i64*, i64** %3
  ret i64* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.5"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.5"*, %"class.std::vector.5"** %56, align 8
  %59 = bitcast %"class.std::vector.5"* %58 to %"struct.std::_Vector_base.6"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load i64*, i64** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds i64, i64* %62, i64 %63
  store i32 1739127529, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) i8* @_ZNSt6vectorIcSaIcEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.659
  %7 = load i32, i32* @y.660
  %8 = sub i32 %6, 1192606739
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1192606739
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 616227791, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 616227791, label %20
    i32 -386350752, label %40
    i32 1573959157, label %65
    i32 -311913668, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -386350752, i32 -311913668
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.0"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %44 = bitcast %"class.std::vector.0"* %43 to %"struct.std::_Vector_base.1"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 %48
  store i8* %49, i8** %3
  %50 = load i32, i32* @x.659
  %51 = load i32, i32* @y.660
  %52 = sub i32 %50, 2042024593
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 2042024593
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1573959157, i32 -311913668
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i8*, i8** %3
  ret i8* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.0"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %71 = bitcast %"class.std::vector.0"* %70 to %"struct.std::_Vector_base.1"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  store i32 -386350752, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN12Template_MPM3potEi(%struct.Template_MPM*, i32) #0 comdat align 2 {
  %3 = alloca %struct.Template_MPM*, align 8
  %4 = alloca i32, align 4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.Template_MPM*, %struct.Template_MPM** %3, align 8
  %6 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %5, i32 0, i32 3
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %6, i64 %8) #3
  %10 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %5, i32 0, i32 4
  %11 = load i32, i32* %4, align 4
  %12 = sext i32 %11 to i64
  %13 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %10, i64 %12) #3
  %14 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %9, i64* dereferenceable(8) %13)
  %15 = load i64, i64* %14, align 8
  ret i64 %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12Template_MPM11remove_nodeEi(%struct.Template_MPM*, i32) #0 comdat align 2 {
  %3 = alloca %struct.Template_MPM*
  %4 = alloca %"struct.std::_List_iterator"*
  %5 = alloca %"struct.std::_List_const_iterator"*
  %6 = alloca %"struct.std::_List_iterator"*
  %7 = alloca %"struct.std::_List_iterator"*
  %8 = alloca %"struct.std::_List_iterator"*
  %9 = alloca i32*
  %10 = alloca i32*
  %11 = alloca %"struct.std::_List_iterator"*
  %12 = alloca %"struct.std::_List_iterator"*
  %13 = alloca %"class.std::__cxx11::list"**
  %14 = alloca %"struct.std::_List_iterator"*
  %15 = alloca %"struct.std::_List_const_iterator"*
  %16 = alloca %"struct.std::_List_iterator"*
  %17 = alloca %"struct.std::_List_iterator"*
  %18 = alloca %"struct.std::_List_iterator"*
  %19 = alloca i32*
  %20 = alloca i32*
  %21 = alloca %"struct.std::_List_iterator"*
  %22 = alloca %"struct.std::_List_iterator"*
  %23 = alloca i32*
  %24 = alloca i1
  %25 = alloca i1
  %26 = load i32, i32* @x.663
  %27 = load i32, i32* @y.664
  %28 = add i32 %26, -3917596
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -3917596
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  store i1 %34, i1* %25
  %35 = icmp slt i32 %27, 10
  store i1 %35, i1* %24
  %36 = alloca i32
  store i32 -2133267101, i32* %36
  br label %37

; <label>:37:                                     ; preds = %2, %575
  %38 = load i32, i32* %36
  switch i32 %38, label %39 [
    i32 -2133267101, label %40
    i32 1085832182, label %48
    i32 2011649906, label %113
    i32 2116006925, label %114
    i32 -564190439, label %119
    i32 123782025, label %205
    i32 -1341251402, label %233
    i32 -761069710, label %251
    i32 568273004, label %252
    i32 474539329, label %270
    i32 1029839351, label %275
    i32 -1517186580, label %291
    i32 1961842564, label %404
    i32 127981079, label %405
    i32 1996107288, label %408
    i32 -371169362, label %409
    i32 -1148395739, label %443
    i32 -1587843799, label %446
  ]

; <label>:39:                                     ; preds = %37
  br label %575

; <label>:40:                                     ; preds = %37
  %41 = load volatile i1, i1* %25
  %42 = load volatile i1, i1* %24
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1085832182, i32 -371169362
  store i32 %47, i32* %36
  br label %575

; <label>:48:                                     ; preds = %37
  %49 = alloca %struct.Template_MPM*, align 8
  %50 = alloca i32, align 4
  store i32* %50, i32** %23
  %51 = alloca %"class.std::__cxx11::list"*, align 8
  %52 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %52, %"struct.std::_List_iterator"** %22
  %53 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %53, %"struct.std::_List_iterator"** %21
  %54 = alloca i32, align 4
  store i32* %54, i32** %20
  %55 = alloca i32, align 4
  store i32* %55, i32** %19
  %56 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %56, %"struct.std::_List_iterator"** %18
  %57 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %57, %"struct.std::_List_iterator"** %17
  %58 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %58, %"struct.std::_List_iterator"** %16
  %59 = alloca %"struct.std::_List_const_iterator", align 8
  store %"struct.std::_List_const_iterator"* %59, %"struct.std::_List_const_iterator"** %15
  %60 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %60, %"struct.std::_List_iterator"** %14
  %61 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"** %61, %"class.std::__cxx11::list"*** %13
  %62 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %62, %"struct.std::_List_iterator"** %12
  %63 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %63, %"struct.std::_List_iterator"** %11
  %64 = alloca i32, align 4
  store i32* %64, i32** %10
  %65 = alloca i32, align 4
  store i32* %65, i32** %9
  %66 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %66, %"struct.std::_List_iterator"** %8
  %67 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %67, %"struct.std::_List_iterator"** %7
  %68 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %68, %"struct.std::_List_iterator"** %6
  %69 = alloca %"struct.std::_List_const_iterator", align 8
  store %"struct.std::_List_const_iterator"* %69, %"struct.std::_List_const_iterator"** %5
  %70 = alloca %"struct.std::_List_iterator", align 8
  store %"struct.std::_List_iterator"* %70, %"struct.std::_List_iterator"** %4
  store %struct.Template_MPM* %0, %struct.Template_MPM** %49, align 8
  %71 = load volatile i32*, i32** %23
  store i32 %1, i32* %71, align 4
  %72 = load %struct.Template_MPM*, %struct.Template_MPM** %49, align 8
  store %struct.Template_MPM* %72, %struct.Template_MPM** %3
  %73 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %74 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %73, i32 0, i32 5
  %75 = load volatile i32*, i32** %23
  %76 = load i32, i32* %75, align 4
  %77 = sext i32 %76 to i64
  %78 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %74, i64 %77) #3
  store %"class.std::__cxx11::list"* %78, %"class.std::__cxx11::list"** %51, align 8
  %79 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %51, align 8
  %80 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %79) #3
  %81 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %22
  %82 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %81, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %80, %"struct.std::__detail::_List_node_base"** %82, align 8
  %83 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %51, align 8
  %84 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %83) #3
  %85 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %21
  %86 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %85, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %84, %"struct.std::__detail::_List_node_base"** %86, align 8
  %87 = load i32, i32* @x.663
  %88 = load i32, i32* @y.664
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 false, true
  %99 = and i1 %96, false
  %100 = and i1 %94, %98
  %101 = and i1 %97, false
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 false, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  %112 = select i1 %110, i32 2011649906, i32 -371169362
  store i32 %112, i32* %36
  br label %575

; <label>:113:                                    ; preds = %37
  store i32 2116006925, i32* %36
  br label %575

; <label>:114:                                    ; preds = %37
  %115 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %22
  %116 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %21
  %117 = call zeroext i1 @_ZNKSt14_List_iteratorIiEneERKS0_(%"struct.std::_List_iterator"* %115, %"struct.std::_List_iterator"* dereferenceable(8) %116) #3
  %118 = select i1 %117, i32 -564190439, i32 568273004
  store i32 %118, i32* %36
  br label %575

; <label>:119:                                    ; preds = %37
  %120 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %22
  %121 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %120) #3
  %122 = load i32, i32* %121, align 4
  %123 = load volatile i32*, i32** %20
  store i32 %122, i32* %123, align 4
  %124 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %125 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %124, i32 0, i32 1
  %126 = load volatile i32*, i32** %20
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %125, i64 %128) #3
  %130 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %129, i32 0, i32 0
  %131 = load i32, i32* %130, align 8
  %132 = load volatile i32*, i32** %19
  store i32 %131, i32* %132, align 4
  %133 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %134 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %133, i32 0, i32 6
  %135 = load volatile i32*, i32** %19
  %136 = load i32, i32* %135, align 4
  %137 = sext i32 %136 to i64
  %138 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %134, i64 %137) #3
  %139 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %138) #3
  %140 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %17
  %141 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %140, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %139, %"struct.std::__detail::_List_node_base"** %141, align 8
  %142 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %143 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %142, i32 0, i32 6
  %144 = load volatile i32*, i32** %19
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %143, i64 %146) #3
  %148 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %147) #3
  %149 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %16
  %150 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %149, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %148, %"struct.std::__detail::_List_node_base"** %150, align 8
  %151 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %17
  %152 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %151, i32 0, i32 0
  %153 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %152, align 8
  %154 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %16
  %155 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %154, i32 0, i32 0
  %156 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %155, align 8
  %157 = load volatile i32*, i32** %20
  %158 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %153, %"struct.std::__detail::_List_node_base"* %156, i32* dereferenceable(4) %157)
  %159 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %18
  %160 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %159, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %158, %"struct.std::__detail::_List_node_base"** %160, align 8
  %161 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %162 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %161, i32 0, i32 6
  %163 = load volatile i32*, i32** %19
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %162, i64 %165) #3
  %167 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %18
  %168 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %15
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %168, %"struct.std::_List_iterator"* dereferenceable(8) %167) #3
  %169 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %15
  %170 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %169, i32 0, i32 0
  %171 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %170, align 8
  %172 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %166, %"struct.std::__detail::_List_node_base"* %171) #3
  %173 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %14
  %174 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %173, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %172, %"struct.std::__detail::_List_node_base"** %174, align 8
  %175 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %176 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %175, i32 0, i32 1
  %177 = load volatile i32*, i32** %20
  %178 = load i32, i32* %177, align 4
  %179 = sext i32 %178 to i64
  %180 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %176, i64 %179) #3
  %181 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %180, i32 0, i32 2
  %182 = load i64, i64* %181, align 8
  %183 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %184 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %183, i32 0, i32 1
  %185 = load volatile i32*, i32** %20
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %184, i64 %187) #3
  %189 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %188, i32 0, i32 3
  %190 = load i64, i64* %189, align 8
  %191 = add i64 %182, 661606671528551909
  %192 = sub i64 %191, %190
  %193 = sub i64 %192, 661606671528551909
  %194 = sub nsw i64 %182, %190
  %195 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %196 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %195, i32 0, i32 4
  %197 = load volatile i32*, i32** %19
  %198 = load i32, i32* %197, align 4
  %199 = sext i32 %198 to i64
  %200 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %196, i64 %199) #3
  %201 = load i64, i64* %200, align 8
  %202 = sub i64 0, %193
  %203 = add i64 %201, %202
  %204 = sub nsw i64 %201, %193
  store i64 %203, i64* %200, align 8
  store i32 123782025, i32* %36
  br label %575

; <label>:205:                                    ; preds = %37
  %206 = load i32, i32* @x.663
  %207 = load i32, i32* @y.664
  %208 = sub i32 %206, 1449461271
  %209 = sub i32 %208, 1
  %210 = add i32 %209, 1449461271
  %211 = sub i32 %206, 1
  %212 = mul i32 %206, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %207, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  %232 = select i1 %230, i32 -1341251402, i32 -1148395739
  store i32 %232, i32* %36
  br label %575

; <label>:233:                                    ; preds = %37
  %234 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %22
  %235 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %234) #3
  %236 = load i32, i32* @x.663
  %237 = load i32, i32* @y.664
  %238 = add i32 %236, -328416740
  %239 = sub i32 %238, 1
  %240 = sub i32 %239, -328416740
  %241 = sub i32 %236, 1
  %242 = mul i32 %236, %240
  %243 = urem i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = icmp slt i32 %237, 10
  %246 = and i1 %244, %245
  %247 = xor i1 %244, %245
  %248 = or i1 %246, %247
  %249 = or i1 %244, %245
  %250 = select i1 %248, i32 -761069710, i32 -1148395739
  store i32 %250, i32* %36
  br label %575

; <label>:251:                                    ; preds = %37
  store i32 2116006925, i32* %36
  br label %575

; <label>:252:                                    ; preds = %37
  %253 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %254 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %253, i32 0, i32 6
  %255 = load volatile i32*, i32** %23
  %256 = load i32, i32* %255, align 4
  %257 = sext i32 %256 to i64
  %258 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %254, i64 %257) #3
  %259 = load volatile %"class.std::__cxx11::list"**, %"class.std::__cxx11::list"*** %13
  store %"class.std::__cxx11::list"* %258, %"class.std::__cxx11::list"** %259, align 8
  %260 = load volatile %"class.std::__cxx11::list"**, %"class.std::__cxx11::list"*** %13
  %261 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %260, align 8
  %262 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %261) #3
  %263 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %12
  %264 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %263, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %262, %"struct.std::__detail::_List_node_base"** %264, align 8
  %265 = load volatile %"class.std::__cxx11::list"**, %"class.std::__cxx11::list"*** %13
  %266 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %265, align 8
  %267 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %266) #3
  %268 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %11
  %269 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %268, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %267, %"struct.std::__detail::_List_node_base"** %269, align 8
  store i32 474539329, i32* %36
  br label %575

; <label>:270:                                    ; preds = %37
  %271 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %12
  %272 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %11
  %273 = call zeroext i1 @_ZNKSt14_List_iteratorIiEneERKS0_(%"struct.std::_List_iterator"* %271, %"struct.std::_List_iterator"* dereferenceable(8) %272) #3
  %274 = select i1 %273, i32 1029839351, i32 1996107288
  store i32 %274, i32* %36
  br label %575

; <label>:275:                                    ; preds = %37
  %276 = load i32, i32* @x.663
  %277 = load i32, i32* @y.664
  %278 = sub i32 %276, 424014161
  %279 = sub i32 %278, 1
  %280 = add i32 %279, 424014161
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  %290 = select i1 %288, i32 -1517186580, i32 -1587843799
  store i32 %290, i32* %36
  br label %575

; <label>:291:                                    ; preds = %37
  %292 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %12
  %293 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %292) #3
  %294 = load i32, i32* %293, align 4
  %295 = load volatile i32*, i32** %10
  store i32 %294, i32* %295, align 4
  %296 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %297 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %296, i32 0, i32 1
  %298 = load volatile i32*, i32** %10
  %299 = load i32, i32* %298, align 4
  %300 = sext i32 %299 to i64
  %301 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %297, i64 %300) #3
  %302 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %301, i32 0, i32 1
  %303 = load i32, i32* %302, align 4
  %304 = load volatile i32*, i32** %9
  store i32 %303, i32* %304, align 4
  %305 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %306 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %305, i32 0, i32 5
  %307 = load volatile i32*, i32** %9
  %308 = load i32, i32* %307, align 4
  %309 = sext i32 %308 to i64
  %310 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %306, i64 %309) #3
  %311 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %310) #3
  %312 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %7
  %313 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %312, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %311, %"struct.std::__detail::_List_node_base"** %313, align 8
  %314 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %315 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %314, i32 0, i32 5
  %316 = load volatile i32*, i32** %9
  %317 = load i32, i32* %316, align 4
  %318 = sext i32 %317 to i64
  %319 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %315, i64 %318) #3
  %320 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %319) #3
  %321 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %6
  %322 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %321, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %320, %"struct.std::__detail::_List_node_base"** %322, align 8
  %323 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %7
  %324 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %323, i32 0, i32 0
  %325 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %324, align 8
  %326 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %6
  %327 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %326, i32 0, i32 0
  %328 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %327, align 8
  %329 = load volatile i32*, i32** %10
  %330 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %325, %"struct.std::__detail::_List_node_base"* %328, i32* dereferenceable(4) %329)
  %331 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %8
  %332 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %331, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %330, %"struct.std::__detail::_List_node_base"** %332, align 8
  %333 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %334 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %333, i32 0, i32 5
  %335 = load volatile i32*, i32** %9
  %336 = load i32, i32* %335, align 4
  %337 = sext i32 %336 to i64
  %338 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %334, i64 %337) #3
  %339 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %8
  %340 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %5
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %340, %"struct.std::_List_iterator"* dereferenceable(8) %339) #3
  %341 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %5
  %342 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %341, i32 0, i32 0
  %343 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %342, align 8
  %344 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %338, %"struct.std::__detail::_List_node_base"* %343) #3
  %345 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %4
  %346 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %345, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %344, %"struct.std::__detail::_List_node_base"** %346, align 8
  %347 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %348 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %347, i32 0, i32 1
  %349 = load volatile i32*, i32** %10
  %350 = load i32, i32* %349, align 4
  %351 = sext i32 %350 to i64
  %352 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %348, i64 %351) #3
  %353 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %352, i32 0, i32 2
  %354 = load i64, i64* %353, align 8
  %355 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %356 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %355, i32 0, i32 1
  %357 = load volatile i32*, i32** %10
  %358 = load i32, i32* %357, align 4
  %359 = sext i32 %358 to i64
  %360 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %356, i64 %359) #3
  %361 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %360, i32 0, i32 3
  %362 = load i64, i64* %361, align 8
  %363 = add i64 %354, 522046662158601987
  %364 = sub i64 %363, %362
  %365 = sub i64 %364, 522046662158601987
  %366 = sub nsw i64 %354, %362
  %367 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %368 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %367, i32 0, i32 3
  %369 = load volatile i32*, i32** %9
  %370 = load i32, i32* %369, align 4
  %371 = sext i32 %370 to i64
  %372 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %368, i64 %371) #3
  %373 = load i64, i64* %372, align 8
  %374 = sub i64 0, %365
  %375 = add i64 %373, %374
  %376 = sub nsw i64 %373, %365
  store i64 %375, i64* %372, align 8
  %377 = load i32, i32* @x.663
  %378 = load i32, i32* @y.664
  %379 = add i32 %377, 560486779
  %380 = sub i32 %379, 1
  %381 = sub i32 %380, 560486779
  %382 = sub i32 %377, 1
  %383 = mul i32 %377, %381
  %384 = urem i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = icmp slt i32 %378, 10
  %387 = xor i1 %385, true
  %388 = xor i1 %386, true
  %389 = xor i1 true, true
  %390 = and i1 %387, true
  %391 = and i1 %385, %389
  %392 = and i1 %388, true
  %393 = and i1 %386, %389
  %394 = or i1 %390, %391
  %395 = or i1 %392, %393
  %396 = xor i1 %394, %395
  %397 = or i1 %387, %388
  %398 = xor i1 %397, true
  %399 = or i1 true, %389
  %400 = and i1 %398, %399
  %401 = or i1 %396, %400
  %402 = or i1 %385, %386
  %403 = select i1 %401, i32 1961842564, i32 -1587843799
  store i32 %403, i32* %36
  br label %575

; <label>:404:                                    ; preds = %37
  store i32 127981079, i32* %36
  br label %575

; <label>:405:                                    ; preds = %37
  %406 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %12
  %407 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %406) #3
  store i32 474539329, i32* %36
  br label %575

; <label>:408:                                    ; preds = %37
  ret void

; <label>:409:                                    ; preds = %37
  %410 = alloca %struct.Template_MPM*, align 8
  %411 = alloca i32, align 4
  %412 = alloca %"class.std::__cxx11::list"*, align 8
  %413 = alloca %"struct.std::_List_iterator", align 8
  %414 = alloca %"struct.std::_List_iterator", align 8
  %415 = alloca i32, align 4
  %416 = alloca i32, align 4
  %417 = alloca %"struct.std::_List_iterator", align 8
  %418 = alloca %"struct.std::_List_iterator", align 8
  %419 = alloca %"struct.std::_List_iterator", align 8
  %420 = alloca %"struct.std::_List_const_iterator", align 8
  %421 = alloca %"struct.std::_List_iterator", align 8
  %422 = alloca %"class.std::__cxx11::list"*, align 8
  %423 = alloca %"struct.std::_List_iterator", align 8
  %424 = alloca %"struct.std::_List_iterator", align 8
  %425 = alloca i32, align 4
  %426 = alloca i32, align 4
  %427 = alloca %"struct.std::_List_iterator", align 8
  %428 = alloca %"struct.std::_List_iterator", align 8
  %429 = alloca %"struct.std::_List_iterator", align 8
  %430 = alloca %"struct.std::_List_const_iterator", align 8
  %431 = alloca %"struct.std::_List_iterator", align 8
  store %struct.Template_MPM* %0, %struct.Template_MPM** %410, align 8
  store i32 %1, i32* %411, align 4
  %432 = load %struct.Template_MPM*, %struct.Template_MPM** %410, align 8
  %433 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %432, i32 0, i32 5
  %434 = load i32, i32* %411, align 4
  %435 = sext i32 %434 to i64
  %436 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %433, i64 %435) #3
  store %"class.std::__cxx11::list"* %436, %"class.std::__cxx11::list"** %412, align 8
  %437 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %412, align 8
  %438 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %437) #3
  %439 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %413, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %438, %"struct.std::__detail::_List_node_base"** %439, align 8
  %440 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %412, align 8
  %441 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %440) #3
  %442 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %414, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %441, %"struct.std::__detail::_List_node_base"** %442, align 8
  store i32 1085832182, i32* %36
  br label %575

; <label>:443:                                    ; preds = %37
  %444 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %22
  %445 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %444) #3
  store i32 -1341251402, i32* %36
  br label %575

; <label>:446:                                    ; preds = %37
  %447 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %12
  %448 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %447) #3
  %449 = load i32, i32* %448, align 4
  %450 = load volatile i32*, i32** %10
  store i32 %449, i32* %450, align 4
  %451 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %452 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %451, i32 0, i32 1
  %453 = load volatile i32*, i32** %10
  %454 = load i32, i32* %453, align 4
  %455 = sext i32 %454 to i64
  %456 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %452, i64 %455) #3
  %457 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %456, i32 0, i32 1
  %458 = load i32, i32* %457, align 4
  %459 = load volatile i32*, i32** %9
  store i32 %458, i32* %459, align 4
  %460 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %461 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %460, i32 0, i32 5
  %462 = load volatile i32*, i32** %9
  %463 = load i32, i32* %462, align 4
  %464 = sext i32 %463 to i64
  %465 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %461, i64 %464) #3
  %466 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %465) #3
  %467 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %7
  %468 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %467, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %466, %"struct.std::__detail::_List_node_base"** %468, align 8
  %469 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %470 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %469, i32 0, i32 5
  %471 = load volatile i32*, i32** %9
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %470, i64 %473) #3
  %475 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %474) #3
  %476 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %6
  %477 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %476, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %475, %"struct.std::__detail::_List_node_base"** %477, align 8
  %478 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %7
  %479 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %478, i32 0, i32 0
  %480 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %479, align 8
  %481 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %6
  %482 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %481, i32 0, i32 0
  %483 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %482, align 8
  %484 = load volatile i32*, i32** %10
  %485 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %480, %"struct.std::__detail::_List_node_base"* %483, i32* dereferenceable(4) %484)
  %486 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %8
  %487 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %486, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %485, %"struct.std::__detail::_List_node_base"** %487, align 8
  %488 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %489 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %488, i32 0, i32 5
  %490 = load volatile i32*, i32** %9
  %491 = load i32, i32* %490, align 4
  %492 = sext i32 %491 to i64
  %493 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %489, i64 %492) #3
  %494 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %8
  %495 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %5
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %495, %"struct.std::_List_iterator"* dereferenceable(8) %494) #3
  %496 = load volatile %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %5
  %497 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %496, i32 0, i32 0
  %498 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %497, align 8
  %499 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %493, %"struct.std::__detail::_List_node_base"* %498) #3
  %500 = load volatile %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %4
  %501 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %500, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %499, %"struct.std::__detail::_List_node_base"** %501, align 8
  %502 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %503 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %502, i32 0, i32 1
  %504 = load volatile i32*, i32** %10
  %505 = load i32, i32* %504, align 4
  %506 = sext i32 %505 to i64
  %507 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %503, i64 %506) #3
  %508 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %507, i32 0, i32 2
  %509 = load i64, i64* %508, align 8
  %510 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %511 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %510, i32 0, i32 1
  %512 = load volatile i32*, i32** %10
  %513 = load i32, i32* %512, align 4
  %514 = sext i32 %513 to i64
  %515 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %511, i64 %514) #3
  %516 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %515, i32 0, i32 3
  %517 = load i64, i64* %516, align 8
  %518 = shl i64 %509, %517
  %519 = sub i64 0, %509
  %520 = add i64 0, %519
  %521 = sub i64 0, %509
  %522 = sub i64 0, %517
  %523 = sub i64 %520, %522
  %524 = add i64 %520, %517
  %525 = shl i64 %509, %517
  %526 = add i64 0, 4629540754625854187
  %527 = sub i64 %526, %509
  %528 = sub i64 %527, 4629540754625854187
  %529 = sub i64 0, %509
  %530 = add i64 %528, 2262770187895468887
  %531 = add i64 %530, %517
  %532 = sub i64 %531, 2262770187895468887
  %533 = add i64 %528, %517
  %534 = sub i64 0, -1896024780267410209
  %535 = sub i64 %534, %509
  %536 = add i64 %535, -1896024780267410209
  %537 = sub i64 0, %509
  %538 = add i64 %536, 6220785296668991032
  %539 = add i64 %538, %517
  %540 = sub i64 %539, 6220785296668991032
  %541 = add i64 %536, %517
  %542 = sub i64 0, 2957277348960654127
  %543 = sub i64 %542, %509
  %544 = add i64 %543, 2957277348960654127
  %545 = sub i64 0, %509
  %546 = sub i64 0, %544
  %547 = sub i64 0, %517
  %548 = add i64 %546, %547
  %549 = sub i64 0, %548
  %550 = add i64 %544, %517
  %551 = add i64 0, 4411089119056989634
  %552 = sub i64 %551, %509
  %553 = sub i64 %552, 4411089119056989634
  %554 = sub i64 0, %509
  %555 = add i64 %553, -4106520549662844740
  %556 = add i64 %555, %517
  %557 = sub i64 %556, -4106520549662844740
  %558 = add i64 %553, %517
  %559 = shl i64 %509, %517
  %560 = sub i64 0, %517
  %561 = add i64 %509, %560
  %562 = sub nsw i64 %509, %517
  %563 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %3
  %564 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %563, i32 0, i32 3
  %565 = load volatile i32*, i32** %9
  %566 = load i32, i32* %565, align 4
  %567 = sext i32 %566 to i64
  %568 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %564, i64 %567) #3
  %569 = load i64, i64* %568, align 8
  %570 = shl i64 %569, %561
  %571 = shl i64 %569, %561
  %572 = sub i64 0, %561
  %573 = add i64 %569, %572
  %574 = sub nsw i64 %569, %561
  store i64 %573, i64* %568, align 8
  store i32 -1517186580, i32* %36
  br label %575

; <label>:575:                                    ; preds = %446, %443, %409, %405, %404, %291, %275, %270, %252, %251, %233, %205, %119, %114, %113, %48, %40, %39
  br label %37
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN12Template_MPM4pushEiixb(%struct.Template_MPM*, i32, i32, i64, i1 zeroext) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %struct.Template_MPM*
  %9 = alloca %struct.Template_MPM*, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca %"struct.std::_List_iterator", align 8
  %18 = alloca i32, align 4
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"struct.std::_List_iterator", align 8
  %22 = alloca %"struct.std::_List_const_iterator", align 8
  %23 = alloca %"struct.std::_List_iterator", align 8
  %24 = alloca %"struct.std::_List_iterator", align 8
  %25 = alloca %"struct.std::_List_iterator", align 8
  %26 = alloca %"struct.std::_List_iterator", align 8
  %27 = alloca %"struct.std::_List_const_iterator", align 8
  %28 = alloca %"struct.std::_List_iterator", align 8
  %29 = alloca %"struct.std::_List_const_iterator", align 8
  %30 = alloca %"struct.std::_List_iterator", align 8
  %31 = alloca %"struct.std::_List_iterator", align 8
  %32 = alloca %"struct.std::_List_iterator", align 8
  %33 = alloca %"struct.std::_List_iterator", align 8
  %34 = alloca %"struct.std::_List_const_iterator", align 8
  %35 = alloca %"struct.std::_List_iterator", align 8
  store %struct.Template_MPM* %0, %struct.Template_MPM** %9, align 8
  store i32 %1, i32* %10, align 4
  store i32 %2, i32* %11, align 4
  store i64 %3, i64* %12, align 8
  %36 = zext i1 %4 to i8
  store i8 %36, i8* %13, align 1
  %37 = load %struct.Template_MPM*, %struct.Template_MPM** %9, align 8
  store %struct.Template_MPM* %37, %struct.Template_MPM** %8
  %38 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %39 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %38, i32 0, i32 16
  store i32 0, i32* %39, align 4
  %40 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %41 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %40, i32 0, i32 15
  store i32 0, i32* %41, align 8
  %42 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %43 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %42, i32 0, i32 8
  %44 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %45 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %44, i32 0, i32 9
  %46 = load i32, i32* %45, align 8
  %47 = sext i32 %46 to i64
  store i64 0, i64* %14, align 8
  call void @_ZNSt6vectorIxSaIxEE6assignEmRKx(%"class.std::vector.5"* %43, i64 %47, i64* dereferenceable(8) %14)
  %48 = load i64, i64* %12, align 8
  %49 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %50 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %49, i32 0, i32 8
  %51 = load i32, i32* %10, align 4
  %52 = sext i32 %51 to i64
  %53 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %50, i64 %52) #3
  store i64 %48, i64* %53, align 8
  %54 = load i32, i32* %10, align 4
  %55 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %56 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %55, i32 0, i32 14
  %57 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %58 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %57, i32 0, i32 16
  %59 = load i32, i32* %58, align 4
  %60 = sub i32 %59, -1396637550
  %61 = add i32 %60, 1
  %62 = add i32 %61, -1396637550
  %63 = add nsw i32 %59, 1
  store i32 %62, i32* %58, align 4
  %64 = sext i32 %59 to i64
  %65 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %56, i64 %64) #3
  store i32 %54, i32* %65, align 4
  %66 = alloca i32
  store i32 -1314031111, i32* %66
  %67 = alloca i32
  br label %68

; <label>:68:                                     ; preds = %5, %1026
  %69 = load i32, i32* %66
  switch i32 %69, label %70 [
    i32 -1314031111, label %71
    i32 -1208036191, label %80
    i32 -604792343, label %97
    i32 744586228, label %98
    i32 1971746461, label %108
    i32 -50175854, label %116
    i32 250887742, label %124
    i32 1853607831, label %140
    i32 1884898547, label %167
    i32 -1721776799, label %168
    i32 -1468441904, label %172
    i32 1523951386, label %181
    i32 -1589584974, label %190
    i32 -1824660884, label %217
    i32 -662171957, label %218
    i32 1347086496, label %222
    i32 -218882316, label %238
    i32 -1138494036, label %276
    i32 793375281, label %277
    i32 611375402, label %292
    i32 208369260, label %328
    i32 121186365, label %329
    i32 -707937402, label %345
    i32 1074667336, label %368
    i32 -1831008000, label %371
    i32 313819263, label %399
    i32 559324825, label %437
    i32 -786393290, label %438
    i32 810181742, label %508
    i32 778216910, label %523
    i32 966055124, label %556
    i32 205981054, label %559
    i32 -356736038, label %599
    i32 83151472, label %614
    i32 -1391002490, label %668
    i32 -772713908, label %669
    i32 1222686669, label %685
    i32 -2001836286, label %702
    i32 992011765, label %703
    i32 231285148, label %719
    i32 -300015525, label %735
    i32 219757433, label %736
    i32 1651882599, label %740
    i32 -1602742258, label %741
    i32 1656378872, label %742
    i32 -284042503, label %743
    i32 94960330, label %770
    i32 -224846768, label %797
    i32 -1928451973, label %798
    i32 -1417533634, label %799
    i32 -324277342, label %888
    i32 -37156057, label %919
    i32 1784747508, label %927
    i32 -2019187561, label %975
    i32 1860371830, label %981
    i32 1816959141, label %1021
    i32 1181157459, label %1024
    i32 224646572, label %1025
  ]

; <label>:70:                                     ; preds = %68
  br label %1026

; <label>:71:                                     ; preds = %68
  %72 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %73 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %72, i32 0, i32 15
  %74 = load i32, i32* %73, align 8
  %75 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %76 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %75, i32 0, i32 16
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %74, %77
  %79 = select i1 %78, i32 -1208036191, i32 -284042503
  store i32 %79, i32* %66
  br label %1026

; <label>:80:                                     ; preds = %68
  %81 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %82 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %81, i32 0, i32 14
  %83 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %84 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %83, i32 0, i32 15
  %85 = load i32, i32* %84, align 8
  %86 = add i32 %85, -389579683
  %87 = add i32 %86, 1
  %88 = sub i32 %87, -389579683
  %89 = add nsw i32 %85, 1
  store i32 %88, i32* %84, align 8
  %90 = sext i32 %85 to i64
  %91 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %82, i64 %90) #3
  %92 = load i32, i32* %91, align 4
  store i32 %92, i32* %15, align 4
  %93 = load i32, i32* %15, align 4
  %94 = load i32, i32* %11, align 4
  %95 = icmp eq i32 %93, %94
  %96 = select i1 %95, i32 -604792343, i32 744586228
  store i32 %96, i32* %66
  br label %1026

; <label>:97:                                     ; preds = %68
  store i32 -284042503, i32* %66
  br label %1026

; <label>:98:                                     ; preds = %68
  %99 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %100 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %99, i32 0, i32 8
  %101 = load i32, i32* %15, align 4
  %102 = sext i32 %101 to i64
  %103 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %100, i64 %102) #3
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %16, align 8
  %105 = load i8, i8* %13, align 1
  %106 = trunc i8 %105 to i1
  %107 = select i1 %106, i32 1971746461, i32 -50175854
  store i32 %107, i32* %66
  br label %1026

; <label>:108:                                    ; preds = %68
  %109 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %110 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %109, i32 0, i32 6
  %111 = load i32, i32* %15, align 4
  %112 = sext i32 %111 to i64
  %113 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %110, i64 %112) #3
  %114 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %113) #3
  %115 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %17, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %114, %"struct.std::__detail::_List_node_base"** %115, align 8
  store i32 250887742, i32* %66
  br label %1026

; <label>:116:                                    ; preds = %68
  %117 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %118 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %117, i32 0, i32 5
  %119 = load i32, i32* %15, align 4
  %120 = sext i32 %119 to i64
  %121 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %118, i64 %120) #3
  %122 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %121) #3
  %123 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %17, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %122, %"struct.std::__detail::_List_node_base"** %123, align 8
  store i32 250887742, i32* %66
  br label %1026

; <label>:124:                                    ; preds = %68
  %125 = load i32, i32* @x.665
  %126 = load i32, i32* @y.666
  %127 = sub i32 %125, 1490177932
  %128 = sub i32 %127, 1
  %129 = add i32 %128, 1490177932
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 1853607831, i32 -1928451973
  store i32 %139, i32* %66
  br label %1026

; <label>:140:                                    ; preds = %68
  %141 = load i32, i32* @x.665
  %142 = load i32, i32* @y.666
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  %166 = select i1 %164, i32 1884898547, i32 -1928451973
  store i32 %166, i32* %66
  br label %1026

; <label>:167:                                    ; preds = %68
  store i32 -1721776799, i32* %66
  br label %1026

; <label>:168:                                    ; preds = %68
  %169 = load i8, i8* %13, align 1
  %170 = trunc i8 %169 to i1
  %171 = select i1 %170, i32 -1468441904, i32 1523951386
  store i32 %171, i32* %66
  br label %1026

; <label>:172:                                    ; preds = %68
  %173 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %174 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %173, i32 0, i32 1
  %175 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %174, i64 %177) #3
  %179 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %178, i32 0, i32 1
  %180 = load i32, i32* %179, align 4
  store i32 -1589584974, i32* %66
  store i32 %180, i32* %67
  br label %1026

; <label>:181:                                    ; preds = %68
  %182 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %183 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %182, i32 0, i32 1
  %184 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %183, i64 %186) #3
  %188 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %187, i32 0, i32 0
  %189 = load i32, i32* %188, align 8
  store i32 -1589584974, i32* %66
  store i32 %189, i32* %67
  br label %1026

; <label>:190:                                    ; preds = %68
  %191 = load i32, i32* %67
  store i32 %191, i32* %18, align 4
  %192 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %193 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %192, i32 0, i32 1
  %194 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %195 = load i32, i32* %194, align 4
  %196 = sext i32 %195 to i64
  %197 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %193, i64 %196) #3
  %198 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %197, i32 0, i32 2
  %199 = load i64, i64* %198, align 8
  %200 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %201 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %200, i32 0, i32 1
  %202 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %203 = load i32, i32* %202, align 4
  %204 = sext i32 %203 to i64
  %205 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %201, i64 %204) #3
  %206 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %205, i32 0, i32 3
  %207 = load i64, i64* %206, align 8
  %208 = add i64 %199, 477234808954791708
  %209 = sub i64 %208, %207
  %210 = sub i64 %209, 477234808954791708
  %211 = sub nsw i64 %199, %207
  store i64 %210, i64* %20, align 8
  %212 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %16, i64* dereferenceable(8) %20)
  %213 = load i64, i64* %212, align 8
  store i64 %213, i64* %19, align 8
  %214 = load i64, i64* %19, align 8
  %215 = icmp eq i64 %214, 0
  %216 = select i1 %215, i32 -1824660884, i32 -662171957
  store i32 %216, i32* %66
  br label %1026

; <label>:217:                                    ; preds = %68
  store i32 1656378872, i32* %66
  br label %1026

; <label>:218:                                    ; preds = %68
  %219 = load i8, i8* %13, align 1
  %220 = trunc i8 %219 to i1
  %221 = select i1 %220, i32 1347086496, i32 793375281
  store i32 %221, i32* %66
  br label %1026

; <label>:222:                                    ; preds = %68
  %223 = load i32, i32* @x.665
  %224 = load i32, i32* @y.666
  %225 = add i32 %223, 635697888
  %226 = sub i32 %225, 1
  %227 = sub i32 %226, 635697888
  %228 = sub i32 %223, 1
  %229 = mul i32 %223, %227
  %230 = urem i32 %229, 2
  %231 = icmp eq i32 %230, 0
  %232 = icmp slt i32 %224, 10
  %233 = and i1 %231, %232
  %234 = xor i1 %231, %232
  %235 = or i1 %233, %234
  %236 = or i1 %231, %232
  %237 = select i1 %235, i32 -218882316, i32 -1417533634
  store i32 %237, i32* %66
  br label %1026

; <label>:238:                                    ; preds = %68
  %239 = load i64, i64* %19, align 8
  %240 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %241 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %240, i32 0, i32 4
  %242 = load i32, i32* %15, align 4
  %243 = sext i32 %242 to i64
  %244 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %241, i64 %243) #3
  %245 = load i64, i64* %244, align 8
  %246 = sub i64 %245, -1396862458041793385
  %247 = sub i64 %246, %239
  %248 = add i64 %247, -1396862458041793385
  %249 = sub nsw i64 %245, %239
  store i64 %248, i64* %244, align 8
  %250 = load i64, i64* %19, align 8
  %251 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %252 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %251, i32 0, i32 3
  %253 = load i32, i32* %18, align 4
  %254 = sext i32 %253 to i64
  %255 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %252, i64 %254) #3
  %256 = load i64, i64* %255, align 8
  %257 = add i64 %256, -2361481808291806373
  %258 = sub i64 %257, %250
  %259 = sub i64 %258, -2361481808291806373
  %260 = sub nsw i64 %256, %250
  store i64 %259, i64* %255, align 8
  %261 = load i32, i32* @x.665
  %262 = load i32, i32* @y.666
  %263 = add i32 %261, 263542750
  %264 = sub i32 %263, 1
  %265 = sub i32 %264, 263542750
  %266 = sub i32 %261, 1
  %267 = mul i32 %261, %265
  %268 = urem i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = icmp slt i32 %262, 10
  %271 = and i1 %269, %270
  %272 = xor i1 %269, %270
  %273 = or i1 %271, %272
  %274 = or i1 %269, %270
  %275 = select i1 %273, i32 -1138494036, i32 -1417533634
  store i32 %275, i32* %66
  br label %1026

; <label>:276:                                    ; preds = %68
  store i32 121186365, i32* %66
  br label %1026

; <label>:277:                                    ; preds = %68
  %278 = load i32, i32* @x.665
  %279 = load i32, i32* @y.666
  %280 = sub i32 0, 1
  %281 = add i32 %278, %280
  %282 = sub i32 %278, 1
  %283 = mul i32 %278, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %279, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  %291 = select i1 %289, i32 611375402, i32 -324277342
  store i32 %291, i32* %66
  br label %1026

; <label>:292:                                    ; preds = %68
  %293 = load i64, i64* %19, align 8
  %294 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %295 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %294, i32 0, i32 3
  %296 = load i32, i32* %15, align 4
  %297 = sext i32 %296 to i64
  %298 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %295, i64 %297) #3
  %299 = load i64, i64* %298, align 8
  %300 = sub i64 %299, -2421514928901403077
  %301 = sub i64 %300, %293
  %302 = add i64 %301, -2421514928901403077
  %303 = sub nsw i64 %299, %293
  store i64 %302, i64* %298, align 8
  %304 = load i64, i64* %19, align 8
  %305 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %306 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %305, i32 0, i32 4
  %307 = load i32, i32* %18, align 4
  %308 = sext i32 %307 to i64
  %309 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %306, i64 %308) #3
  %310 = load i64, i64* %309, align 8
  %311 = sub i64 0, %304
  %312 = add i64 %310, %311
  %313 = sub nsw i64 %310, %304
  store i64 %312, i64* %309, align 8
  %314 = load i32, i32* @x.665
  %315 = load i32, i32* @y.666
  %316 = sub i32 0, 1
  %317 = add i32 %314, %316
  %318 = sub i32 %314, 1
  %319 = mul i32 %314, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %315, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  %327 = select i1 %325, i32 208369260, i32 -324277342
  store i32 %327, i32* %66
  br label %1026

; <label>:328:                                    ; preds = %68
  store i32 121186365, i32* %66
  br label %1026

; <label>:329:                                    ; preds = %68
  %330 = load i32, i32* @x.665
  %331 = load i32, i32* @y.666
  %332 = sub i32 %330, -569786476
  %333 = sub i32 %332, 1
  %334 = add i32 %333, -569786476
  %335 = sub i32 %330, 1
  %336 = mul i32 %330, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %331, 10
  %340 = and i1 %338, %339
  %341 = xor i1 %338, %339
  %342 = or i1 %340, %341
  %343 = or i1 %338, %339
  %344 = select i1 %342, i32 -707937402, i32 -37156057
  store i32 %344, i32* %66
  br label %1026

; <label>:345:                                    ; preds = %68
  %346 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %347 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %346, i32 0, i32 8
  %348 = load i32, i32* %18, align 4
  %349 = sext i32 %348 to i64
  %350 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %347, i64 %349) #3
  %351 = load i64, i64* %350, align 8
  %352 = icmp eq i64 %351, 0
  store i1 %352, i1* %7
  %353 = load i32, i32* @x.665
  %354 = load i32, i32* @y.666
  %355 = add i32 %353, 973952733
  %356 = sub i32 %355, 1
  %357 = sub i32 %356, 973952733
  %358 = sub i32 %353, 1
  %359 = mul i32 %353, %357
  %360 = urem i32 %359, 2
  %361 = icmp eq i32 %360, 0
  %362 = icmp slt i32 %354, 10
  %363 = and i1 %361, %362
  %364 = xor i1 %361, %362
  %365 = or i1 %363, %364
  %366 = or i1 %361, %362
  %367 = select i1 %365, i32 1074667336, i32 -37156057
  store i32 %367, i32* %66
  br label %1026

; <label>:368:                                    ; preds = %68
  %369 = load volatile i1, i1* %7
  %370 = select i1 %369, i32 -1831008000, i32 -786393290
  store i32 %370, i32* %66
  br label %1026

; <label>:371:                                    ; preds = %68
  %372 = load i32, i32* @x.665
  %373 = load i32, i32* @y.666
  %374 = sub i32 %372, 170796627
  %375 = sub i32 %374, 1
  %376 = add i32 %375, 170796627
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = xor i1 %380, true
  %383 = xor i1 %381, true
  %384 = xor i1 false, true
  %385 = and i1 %382, false
  %386 = and i1 %380, %384
  %387 = and i1 %383, false
  %388 = and i1 %381, %384
  %389 = or i1 %385, %386
  %390 = or i1 %387, %388
  %391 = xor i1 %389, %390
  %392 = or i1 %382, %383
  %393 = xor i1 %392, true
  %394 = or i1 false, %384
  %395 = and i1 %393, %394
  %396 = or i1 %391, %395
  %397 = or i1 %380, %381
  %398 = select i1 %396, i32 313819263, i32 1784747508
  store i32 %398, i32* %66
  br label %1026

; <label>:399:                                    ; preds = %68
  %400 = load i32, i32* %18, align 4
  %401 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %402 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %401, i32 0, i32 14
  %403 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %404 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %403, i32 0, i32 16
  %405 = load i32, i32* %404, align 4
  %406 = sub i32 0, 1
  %407 = sub i32 %405, %406
  %408 = add nsw i32 %405, 1
  store i32 %407, i32* %404, align 4
  %409 = sext i32 %405 to i64
  %410 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %402, i64 %409) #3
  store i32 %400, i32* %410, align 4
  %411 = load i32, i32* @x.665
  %412 = load i32, i32* @y.666
  %413 = sub i32 0, 1
  %414 = add i32 %411, %413
  %415 = sub i32 %411, 1
  %416 = mul i32 %411, %414
  %417 = urem i32 %416, 2
  %418 = icmp eq i32 %417, 0
  %419 = icmp slt i32 %412, 10
  %420 = xor i1 %418, true
  %421 = xor i1 %419, true
  %422 = xor i1 false, true
  %423 = and i1 %420, false
  %424 = and i1 %418, %422
  %425 = and i1 %421, false
  %426 = and i1 %419, %422
  %427 = or i1 %423, %424
  %428 = or i1 %425, %426
  %429 = xor i1 %427, %428
  %430 = or i1 %420, %421
  %431 = xor i1 %430, true
  %432 = or i1 false, %422
  %433 = and i1 %431, %432
  %434 = or i1 %429, %433
  %435 = or i1 %418, %419
  %436 = select i1 %434, i32 559324825, i32 1784747508
  store i32 %436, i32* %66
  br label %1026

; <label>:437:                                    ; preds = %68
  store i32 -786393290, i32* %66
  br label %1026

; <label>:438:                                    ; preds = %68
  %439 = load i64, i64* %19, align 8
  %440 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %441 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %440, i32 0, i32 8
  %442 = load i32, i32* %18, align 4
  %443 = sext i32 %442 to i64
  %444 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %441, i64 %443) #3
  %445 = load i64, i64* %444, align 8
  %446 = sub i64 0, %439
  %447 = sub i64 %445, %446
  %448 = add nsw i64 %445, %439
  store i64 %447, i64* %444, align 8
  %449 = load i64, i64* %19, align 8
  %450 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %451 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %450, i32 0, i32 1
  %452 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %453 = load i32, i32* %452, align 4
  %454 = sext i32 %453 to i64
  %455 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %451, i64 %454) #3
  %456 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %455, i32 0, i32 3
  %457 = load i64, i64* %456, align 8
  %458 = sub i64 %457, -9069311210179238442
  %459 = add i64 %458, %449
  %460 = add i64 %459, -9069311210179238442
  %461 = add nsw i64 %457, %449
  store i64 %460, i64* %456, align 8
  %462 = load i64, i64* %19, align 8
  %463 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %464 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %463, i32 0, i32 1
  %465 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %466 = load i32, i32* %465, align 4
  %467 = xor i32 %466, -1
  %468 = and i32 1, %467
  %469 = xor i32 1, -1
  %470 = and i32 %466, %469
  %471 = or i32 %468, %470
  %472 = xor i32 %466, 1
  %473 = sext i32 %471 to i64
  %474 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %464, i64 %473) #3
  %475 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %474, i32 0, i32 3
  %476 = load i64, i64* %475, align 8
  %477 = sub i64 0, %462
  %478 = add i64 %476, %477
  %479 = sub nsw i64 %476, %462
  store i64 %478, i64* %475, align 8
  %480 = load i64, i64* %19, align 8
  %481 = load i64, i64* %16, align 8
  %482 = add i64 %481, -8130160171292361925
  %483 = sub i64 %482, %480
  %484 = sub i64 %483, -8130160171292361925
  %485 = sub nsw i64 %481, %480
  store i64 %484, i64* %16, align 8
  %486 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %487 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %486, i32 0, i32 1
  %488 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %489 = load i32, i32* %488, align 4
  %490 = sext i32 %489 to i64
  %491 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %487, i64 %490) #3
  %492 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %491, i32 0, i32 2
  %493 = load i64, i64* %492, align 8
  %494 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %495 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %494, i32 0, i32 1
  %496 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %497 = load i32, i32* %496, align 4
  %498 = sext i32 %497 to i64
  %499 = call dereferenceable(24) %"struct.Template_MPM::FlowEdge"* @_ZNSt6vectorIN12Template_MPM8FlowEdgeESaIS1_EEixEm(%"class.std::vector"* %495, i64 %498) #3
  %500 = getelementptr inbounds %"struct.Template_MPM::FlowEdge", %"struct.Template_MPM::FlowEdge"* %499, i32 0, i32 3
  %501 = load i64, i64* %500, align 8
  %502 = add i64 %493, -7896795937402981857
  %503 = sub i64 %502, %501
  %504 = sub i64 %503, -7896795937402981857
  %505 = sub nsw i64 %493, %501
  %506 = icmp eq i64 %504, 0
  %507 = select i1 %506, i32 810181742, i32 992011765
  store i32 %507, i32* %66
  br label %1026

; <label>:508:                                    ; preds = %68
  %509 = load i32, i32* @x.665
  %510 = load i32, i32* @y.666
  %511 = sub i32 0, 1
  %512 = add i32 %509, %511
  %513 = sub i32 %509, 1
  %514 = mul i32 %509, %512
  %515 = urem i32 %514, 2
  %516 = icmp eq i32 %515, 0
  %517 = icmp slt i32 %510, 10
  %518 = and i1 %516, %517
  %519 = xor i1 %516, %517
  %520 = or i1 %518, %519
  %521 = or i1 %516, %517
  %522 = select i1 %520, i32 778216910, i32 -2019187561
  store i32 %522, i32* %66
  br label %1026

; <label>:523:                                    ; preds = %68
  %524 = bitcast %"struct.std::_List_iterator"* %21 to i8*
  %525 = bitcast %"struct.std::_List_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %524, i8* %525, i64 8, i32 8, i1 false)
  %526 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %21) #3
  %527 = load i8, i8* %13, align 1
  %528 = trunc i8 %527 to i1
  store i1 %528, i1* %6
  %529 = load i32, i32* @x.665
  %530 = load i32, i32* @y.666
  %531 = add i32 %529, 1772960570
  %532 = sub i32 %531, 1
  %533 = sub i32 %532, 1772960570
  %534 = sub i32 %529, 1
  %535 = mul i32 %529, %533
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %530, 10
  %539 = xor i1 %537, true
  %540 = xor i1 %538, true
  %541 = xor i1 true, true
  %542 = and i1 %539, true
  %543 = and i1 %537, %541
  %544 = and i1 %540, true
  %545 = and i1 %538, %541
  %546 = or i1 %542, %543
  %547 = or i1 %544, %545
  %548 = xor i1 %546, %547
  %549 = or i1 %539, %540
  %550 = xor i1 %549, true
  %551 = or i1 true, %541
  %552 = and i1 %550, %551
  %553 = or i1 %548, %552
  %554 = or i1 %537, %538
  %555 = select i1 %553, i32 966055124, i32 -2019187561
  store i32 %555, i32* %66
  br label %1026

; <label>:556:                                    ; preds = %68
  %557 = load volatile i1, i1* %6
  %558 = select i1 %557, i32 205981054, i32 -356736038
  store i32 %558, i32* %66
  br label %1026

; <label>:559:                                    ; preds = %68
  %560 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %561 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %560, i32 0, i32 5
  %562 = load i32, i32* %18, align 4
  %563 = sext i32 %562 to i64
  %564 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %561, i64 %563) #3
  %565 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %566 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %565, i32 0, i32 5
  %567 = load i32, i32* %18, align 4
  %568 = sext i32 %567 to i64
  %569 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %566, i64 %568) #3
  %570 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %569) #3
  %571 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %24, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %570, %"struct.std::__detail::_List_node_base"** %571, align 8
  %572 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %573 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %572, i32 0, i32 5
  %574 = load i32, i32* %18, align 4
  %575 = sext i32 %574 to i64
  %576 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %573, i64 %575) #3
  %577 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %576) #3
  %578 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %25, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %577, %"struct.std::__detail::_List_node_base"** %578, align 8
  %579 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %580 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %24, i32 0, i32 0
  %581 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %580, align 8
  %582 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %25, i32 0, i32 0
  %583 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %582, align 8
  %584 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %581, %"struct.std::__detail::_List_node_base"* %583, i32* dereferenceable(4) %579)
  %585 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %23, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %584, %"struct.std::__detail::_List_node_base"** %585, align 8
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %22, %"struct.std::_List_iterator"* dereferenceable(8) %23) #3
  %586 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %22, i32 0, i32 0
  %587 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %586, align 8
  %588 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %564, %"struct.std::__detail::_List_node_base"* %587) #3
  %589 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %26, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %588, %"struct.std::__detail::_List_node_base"** %589, align 8
  %590 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %591 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %590, i32 0, i32 6
  %592 = load i32, i32* %15, align 4
  %593 = sext i32 %592 to i64
  %594 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %591, i64 %593) #3
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %27, %"struct.std::_List_iterator"* dereferenceable(8) %17) #3
  %595 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %27, i32 0, i32 0
  %596 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %595, align 8
  %597 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %594, %"struct.std::__detail::_List_node_base"* %596) #3
  %598 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %28, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %597, %"struct.std::__detail::_List_node_base"** %598, align 8
  store i32 -772713908, i32* %66
  br label %1026

; <label>:599:                                    ; preds = %68
  %600 = load i32, i32* @x.665
  %601 = load i32, i32* @y.666
  %602 = sub i32 0, 1
  %603 = add i32 %600, %602
  %604 = sub i32 %600, 1
  %605 = mul i32 %600, %603
  %606 = urem i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = icmp slt i32 %601, 10
  %609 = and i1 %607, %608
  %610 = xor i1 %607, %608
  %611 = or i1 %609, %610
  %612 = or i1 %607, %608
  %613 = select i1 %611, i32 83151472, i32 1860371830
  store i32 %613, i32* %66
  br label %1026

; <label>:614:                                    ; preds = %68
  %615 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %616 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %615, i32 0, i32 6
  %617 = load i32, i32* %18, align 4
  %618 = sext i32 %617 to i64
  %619 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %616, i64 %618) #3
  %620 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %621 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %620, i32 0, i32 6
  %622 = load i32, i32* %18, align 4
  %623 = sext i32 %622 to i64
  %624 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %621, i64 %623) #3
  %625 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %624) #3
  %626 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %31, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %625, %"struct.std::__detail::_List_node_base"** %626, align 8
  %627 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %628 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %627, i32 0, i32 6
  %629 = load i32, i32* %18, align 4
  %630 = sext i32 %629 to i64
  %631 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %628, i64 %630) #3
  %632 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %631) #3
  %633 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %32, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %632, %"struct.std::__detail::_List_node_base"** %633, align 8
  %634 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %635 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %31, i32 0, i32 0
  %636 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %635, align 8
  %637 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %32, i32 0, i32 0
  %638 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %637, align 8
  %639 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %636, %"struct.std::__detail::_List_node_base"* %638, i32* dereferenceable(4) %634)
  %640 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %30, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %639, %"struct.std::__detail::_List_node_base"** %640, align 8
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %29, %"struct.std::_List_iterator"* dereferenceable(8) %30) #3
  %641 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %29, i32 0, i32 0
  %642 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %641, align 8
  %643 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %619, %"struct.std::__detail::_List_node_base"* %642) #3
  %644 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %33, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %643, %"struct.std::__detail::_List_node_base"** %644, align 8
  %645 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %646 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %645, i32 0, i32 5
  %647 = load i32, i32* %15, align 4
  %648 = sext i32 %647 to i64
  %649 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %646, i64 %648) #3
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %34, %"struct.std::_List_iterator"* dereferenceable(8) %17) #3
  %650 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %34, i32 0, i32 0
  %651 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %650, align 8
  %652 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %649, %"struct.std::__detail::_List_node_base"* %651) #3
  %653 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %35, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %652, %"struct.std::__detail::_List_node_base"** %653, align 8
  %654 = load i32, i32* @x.665
  %655 = load i32, i32* @y.666
  %656 = sub i32 0, 1
  %657 = add i32 %654, %656
  %658 = sub i32 %654, 1
  %659 = mul i32 %654, %657
  %660 = urem i32 %659, 2
  %661 = icmp eq i32 %660, 0
  %662 = icmp slt i32 %655, 10
  %663 = and i1 %661, %662
  %664 = xor i1 %661, %662
  %665 = or i1 %663, %664
  %666 = or i1 %661, %662
  %667 = select i1 %665, i32 -1391002490, i32 1860371830
  store i32 %667, i32* %66
  br label %1026

; <label>:668:                                    ; preds = %68
  store i32 -772713908, i32* %66
  br label %1026

; <label>:669:                                    ; preds = %68
  %670 = load i32, i32* @x.665
  %671 = load i32, i32* @y.666
  %672 = add i32 %670, 782906972
  %673 = sub i32 %672, 1
  %674 = sub i32 %673, 782906972
  %675 = sub i32 %670, 1
  %676 = mul i32 %670, %674
  %677 = urem i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = icmp slt i32 %671, 10
  %680 = and i1 %678, %679
  %681 = xor i1 %678, %679
  %682 = or i1 %680, %681
  %683 = or i1 %678, %679
  %684 = select i1 %682, i32 1222686669, i32 1816959141
  store i32 %684, i32* %66
  br label %1026

; <label>:685:                                    ; preds = %68
  %686 = bitcast %"struct.std::_List_iterator"* %17 to i8*
  %687 = bitcast %"struct.std::_List_iterator"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %686, i8* %687, i64 8, i32 8, i1 false)
  %688 = load i32, i32* @x.665
  %689 = load i32, i32* @y.666
  %690 = sub i32 0, 1
  %691 = add i32 %688, %690
  %692 = sub i32 %688, 1
  %693 = mul i32 %688, %691
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %689, 10
  %697 = and i1 %695, %696
  %698 = xor i1 %695, %696
  %699 = or i1 %697, %698
  %700 = or i1 %695, %696
  %701 = select i1 %699, i32 -2001836286, i32 1816959141
  store i32 %701, i32* %66
  br label %1026

; <label>:702:                                    ; preds = %68
  store i32 219757433, i32* %66
  br label %1026

; <label>:703:                                    ; preds = %68
  %704 = load i32, i32* @x.665
  %705 = load i32, i32* @y.666
  %706 = add i32 %704, 1432888309
  %707 = sub i32 %706, 1
  %708 = sub i32 %707, 1432888309
  %709 = sub i32 %704, 1
  %710 = mul i32 %704, %708
  %711 = urem i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = icmp slt i32 %705, 10
  %714 = and i1 %712, %713
  %715 = xor i1 %712, %713
  %716 = or i1 %714, %715
  %717 = or i1 %712, %713
  %718 = select i1 %716, i32 231285148, i32 1181157459
  store i32 %718, i32* %66
  br label %1026

; <label>:719:                                    ; preds = %68
  %720 = load i32, i32* @x.665
  %721 = load i32, i32* @y.666
  %722 = sub i32 %720, 972466906
  %723 = sub i32 %722, 1
  %724 = add i32 %723, 972466906
  %725 = sub i32 %720, 1
  %726 = mul i32 %720, %724
  %727 = urem i32 %726, 2
  %728 = icmp eq i32 %727, 0
  %729 = icmp slt i32 %721, 10
  %730 = and i1 %728, %729
  %731 = xor i1 %728, %729
  %732 = or i1 %730, %731
  %733 = or i1 %728, %729
  %734 = select i1 %732, i32 -300015525, i32 1181157459
  store i32 %734, i32* %66
  br label %1026

; <label>:735:                                    ; preds = %68
  store i32 1656378872, i32* %66
  br label %1026

; <label>:736:                                    ; preds = %68
  %737 = load i64, i64* %16, align 8
  %738 = icmp ne i64 %737, 0
  %739 = select i1 %738, i32 -1602742258, i32 1651882599
  store i32 %739, i32* %66
  br label %1026

; <label>:740:                                    ; preds = %68
  store i32 1656378872, i32* %66
  br label %1026

; <label>:741:                                    ; preds = %68
  store i32 -1721776799, i32* %66
  br label %1026

; <label>:742:                                    ; preds = %68
  store i32 -1314031111, i32* %66
  br label %1026

; <label>:743:                                    ; preds = %68
  %744 = load i32, i32* @x.665
  %745 = load i32, i32* @y.666
  %746 = sub i32 0, 1
  %747 = add i32 %744, %746
  %748 = sub i32 %744, 1
  %749 = mul i32 %744, %747
  %750 = urem i32 %749, 2
  %751 = icmp eq i32 %750, 0
  %752 = icmp slt i32 %745, 10
  %753 = xor i1 %751, true
  %754 = xor i1 %752, true
  %755 = xor i1 true, true
  %756 = and i1 %753, true
  %757 = and i1 %751, %755
  %758 = and i1 %754, true
  %759 = and i1 %752, %755
  %760 = or i1 %756, %757
  %761 = or i1 %758, %759
  %762 = xor i1 %760, %761
  %763 = or i1 %753, %754
  %764 = xor i1 %763, true
  %765 = or i1 true, %755
  %766 = and i1 %764, %765
  %767 = or i1 %762, %766
  %768 = or i1 %751, %752
  %769 = select i1 %767, i32 94960330, i32 224646572
  store i32 %769, i32* %66
  br label %1026

; <label>:770:                                    ; preds = %68
  %771 = load i32, i32* @x.665
  %772 = load i32, i32* @y.666
  %773 = sub i32 0, 1
  %774 = add i32 %771, %773
  %775 = sub i32 %771, 1
  %776 = mul i32 %771, %774
  %777 = urem i32 %776, 2
  %778 = icmp eq i32 %777, 0
  %779 = icmp slt i32 %772, 10
  %780 = xor i1 %778, true
  %781 = xor i1 %779, true
  %782 = xor i1 false, true
  %783 = and i1 %780, false
  %784 = and i1 %778, %782
  %785 = and i1 %781, false
  %786 = and i1 %779, %782
  %787 = or i1 %783, %784
  %788 = or i1 %785, %786
  %789 = xor i1 %787, %788
  %790 = or i1 %780, %781
  %791 = xor i1 %790, true
  %792 = or i1 false, %782
  %793 = and i1 %791, %792
  %794 = or i1 %789, %793
  %795 = or i1 %778, %779
  %796 = select i1 %794, i32 -224846768, i32 224646572
  store i32 %796, i32* %66
  br label %1026

; <label>:797:                                    ; preds = %68
  ret void

; <label>:798:                                    ; preds = %68
  store i32 1853607831, i32* %66
  br label %1026

; <label>:799:                                    ; preds = %68
  %800 = load i64, i64* %19, align 8
  %801 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %802 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %801, i32 0, i32 4
  %803 = load i32, i32* %15, align 4
  %804 = sext i32 %803 to i64
  %805 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %802, i64 %804) #3
  %806 = load i64, i64* %805, align 8
  %807 = sub i64 %806, 1925955700723268442
  %808 = sub i64 %807, %800
  %809 = add i64 %808, 1925955700723268442
  %810 = sub i64 %806, %800
  %811 = mul i64 %809, %800
  %812 = sub i64 0, %806
  %813 = add i64 0, %812
  %814 = sub i64 0, %806
  %815 = sub i64 %813, -1011127051435046677
  %816 = add i64 %815, %800
  %817 = add i64 %816, -1011127051435046677
  %818 = add i64 %813, %800
  %819 = sub i64 0, -4116735726443960931
  %820 = sub i64 %819, %806
  %821 = add i64 %820, -4116735726443960931
  %822 = sub i64 0, %806
  %823 = sub i64 0, %821
  %824 = sub i64 0, %800
  %825 = add i64 %823, %824
  %826 = sub i64 0, %825
  %827 = add i64 %821, %800
  %828 = shl i64 %806, %800
  %829 = sub i64 0, 7013033147976181089
  %830 = sub i64 %829, %806
  %831 = add i64 %830, 7013033147976181089
  %832 = sub i64 0, %806
  %833 = sub i64 0, %831
  %834 = sub i64 0, %800
  %835 = add i64 %833, %834
  %836 = sub i64 0, %835
  %837 = add i64 %831, %800
  %838 = sub i64 0, %806
  %839 = add i64 0, %838
  %840 = sub i64 0, %806
  %841 = sub i64 0, %839
  %842 = sub i64 0, %800
  %843 = add i64 %841, %842
  %844 = sub i64 0, %843
  %845 = add i64 %839, %800
  %846 = add i64 %806, -4459655903753939926
  %847 = sub i64 %846, %800
  %848 = sub i64 %847, -4459655903753939926
  %849 = sub nsw i64 %806, %800
  store i64 %848, i64* %805, align 8
  %850 = load i64, i64* %19, align 8
  %851 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %852 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %851, i32 0, i32 3
  %853 = load i32, i32* %18, align 4
  %854 = sext i32 %853 to i64
  %855 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %852, i64 %854) #3
  %856 = load i64, i64* %855, align 8
  %857 = add i64 0, -3704609947802577444
  %858 = sub i64 %857, %856
  %859 = sub i64 %858, -3704609947802577444
  %860 = sub i64 0, %856
  %861 = sub i64 %859, 2006160516578377597
  %862 = add i64 %861, %850
  %863 = add i64 %862, 2006160516578377597
  %864 = add i64 %859, %850
  %865 = sub i64 0, %856
  %866 = add i64 0, %865
  %867 = sub i64 0, %856
  %868 = add i64 %866, 1686734283399910365
  %869 = add i64 %868, %850
  %870 = sub i64 %869, 1686734283399910365
  %871 = add i64 %866, %850
  %872 = add i64 %856, 244117710678695590
  %873 = sub i64 %872, %850
  %874 = sub i64 %873, 244117710678695590
  %875 = sub i64 %856, %850
  %876 = mul i64 %874, %850
  %877 = shl i64 %856, %850
  %878 = sub i64 %856, -5207942710262660811
  %879 = sub i64 %878, %850
  %880 = add i64 %879, -5207942710262660811
  %881 = sub i64 %856, %850
  %882 = mul i64 %880, %850
  %883 = shl i64 %856, %850
  %884 = add i64 %856, -7857381578632240214
  %885 = sub i64 %884, %850
  %886 = sub i64 %885, -7857381578632240214
  %887 = sub nsw i64 %856, %850
  store i64 %886, i64* %855, align 8
  store i32 -218882316, i32* %66
  br label %1026

; <label>:888:                                    ; preds = %68
  %889 = load i64, i64* %19, align 8
  %890 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %891 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %890, i32 0, i32 3
  %892 = load i32, i32* %15, align 4
  %893 = sext i32 %892 to i64
  %894 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %891, i64 %893) #3
  %895 = load i64, i64* %894, align 8
  %896 = shl i64 %895, %889
  %897 = sub i64 0, %895
  %898 = add i64 0, %897
  %899 = sub i64 0, %895
  %900 = sub i64 %898, 2408668332229513900
  %901 = add i64 %900, %889
  %902 = add i64 %901, 2408668332229513900
  %903 = add i64 %898, %889
  %904 = add i64 %895, -674511164942032259
  %905 = sub i64 %904, %889
  %906 = sub i64 %905, -674511164942032259
  %907 = sub nsw i64 %895, %889
  store i64 %906, i64* %894, align 8
  %908 = load i64, i64* %19, align 8
  %909 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %910 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %909, i32 0, i32 4
  %911 = load i32, i32* %18, align 4
  %912 = sext i32 %911 to i64
  %913 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %910, i64 %912) #3
  %914 = load i64, i64* %913, align 8
  %915 = shl i64 %914, %908
  %916 = sub i64 0, %908
  %917 = add i64 %914, %916
  %918 = sub nsw i64 %914, %908
  store i64 %917, i64* %913, align 8
  store i32 611375402, i32* %66
  br label %1026

; <label>:919:                                    ; preds = %68
  %920 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %921 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %920, i32 0, i32 8
  %922 = load i32, i32* %18, align 4
  %923 = sext i32 %922 to i64
  %924 = call dereferenceable(8) i64* @_ZNSt6vectorIxSaIxEEixEm(%"class.std::vector.5"* %921, i64 %923) #3
  %925 = load i64, i64* %924, align 8
  %926 = icmp eq i64 %925, 0
  store i32 -707937402, i32* %66
  br label %1026

; <label>:927:                                    ; preds = %68
  %928 = load i32, i32* %18, align 4
  %929 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %930 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %929, i32 0, i32 14
  %931 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %932 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %931, i32 0, i32 16
  %933 = load i32, i32* %932, align 4
  %934 = sub i32 0, %933
  %935 = add i32 0, %934
  %936 = sub i32 0, %933
  %937 = add i32 %935, -1060330210
  %938 = add i32 %937, 1
  %939 = sub i32 %938, -1060330210
  %940 = add i32 %935, 1
  %941 = add i32 0, -94857624
  %942 = sub i32 %941, %933
  %943 = sub i32 %942, -94857624
  %944 = sub i32 0, %933
  %945 = sub i32 0, %943
  %946 = sub i32 0, 1
  %947 = add i32 %945, %946
  %948 = sub i32 0, %947
  %949 = add i32 %943, 1
  %950 = shl i32 %933, 1
  %951 = add i32 %933, 969750091
  %952 = sub i32 %951, 1
  %953 = sub i32 %952, 969750091
  %954 = sub i32 %933, 1
  %955 = mul i32 %953, 1
  %956 = add i32 %933, -1679831905
  %957 = sub i32 %956, 1
  %958 = sub i32 %957, -1679831905
  %959 = sub i32 %933, 1
  %960 = mul i32 %958, 1
  %961 = sub i32 0, -758172299
  %962 = sub i32 %961, %933
  %963 = add i32 %962, -758172299
  %964 = sub i32 0, %933
  %965 = add i32 %963, -2023958506
  %966 = add i32 %965, 1
  %967 = sub i32 %966, -2023958506
  %968 = add i32 %963, 1
  %969 = sub i32 %933, -863896646
  %970 = add i32 %969, 1
  %971 = add i32 %970, -863896646
  %972 = add nsw i32 %933, 1
  store i32 %971, i32* %932, align 4
  %973 = sext i32 %933 to i64
  %974 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.23"* %930, i64 %973) #3
  store i32 %928, i32* %974, align 4
  store i32 313819263, i32* %66
  br label %1026

; <label>:975:                                    ; preds = %68
  %976 = bitcast %"struct.std::_List_iterator"* %21 to i8*
  %977 = bitcast %"struct.std::_List_iterator"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %976, i8* %977, i64 8, i32 8, i1 false)
  %978 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %21) #3
  %979 = load i8, i8* %13, align 1
  %980 = trunc i8 %979 to i1
  store i32 778216910, i32* %66
  br label %1026

; <label>:981:                                    ; preds = %68
  %982 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %983 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %982, i32 0, i32 6
  %984 = load i32, i32* %18, align 4
  %985 = sext i32 %984 to i64
  %986 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %983, i64 %985) #3
  %987 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %988 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %987, i32 0, i32 6
  %989 = load i32, i32* %18, align 4
  %990 = sext i32 %989 to i64
  %991 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %988, i64 %990) #3
  %992 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"* %991) #3
  %993 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %31, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %992, %"struct.std::__detail::_List_node_base"** %993, align 8
  %994 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %995 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %994, i32 0, i32 6
  %996 = load i32, i32* %18, align 4
  %997 = sext i32 %996 to i64
  %998 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %995, i64 %997) #3
  %999 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"* %998) #3
  %1000 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %32, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %999, %"struct.std::__detail::_List_node_base"** %1000, align 8
  %1001 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %17) #3
  %1002 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %31, i32 0, i32 0
  %1003 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %1002, align 8
  %1004 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %32, i32 0, i32 0
  %1005 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %1004, align 8
  %1006 = call %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"* %1003, %"struct.std::__detail::_List_node_base"* %1005, i32* dereferenceable(4) %1001)
  %1007 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %30, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1006, %"struct.std::__detail::_List_node_base"** %1007, align 8
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %29, %"struct.std::_List_iterator"* dereferenceable(8) %30) #3
  %1008 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %29, i32 0, i32 0
  %1009 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %1008, align 8
  %1010 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %986, %"struct.std::__detail::_List_node_base"* %1009) #3
  %1011 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %33, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1010, %"struct.std::__detail::_List_node_base"** %1011, align 8
  %1012 = load volatile %struct.Template_MPM*, %struct.Template_MPM** %8
  %1013 = getelementptr inbounds %struct.Template_MPM, %struct.Template_MPM* %1012, i32 0, i32 5
  %1014 = load i32, i32* %15, align 4
  %1015 = sext i32 %1014 to i64
  %1016 = call dereferenceable(24) %"class.std::__cxx11::list"* @_ZNSt6vectorINSt7__cxx114listIiSaIiEEESaIS3_EEixEm(%"class.std::vector.10"* %1013, i64 %1015) #3
  call void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"* %34, %"struct.std::_List_iterator"* dereferenceable(8) %17) #3
  %1017 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %34, i32 0, i32 0
  %1018 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %1017, align 8
  %1019 = call %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"* %1016, %"struct.std::__detail::_List_node_base"* %1018) #3
  %1020 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %35, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1019, %"struct.std::__detail::_List_node_base"** %1020, align 8
  store i32 83151472, i32* %66
  br label %1026

; <label>:1021:                                   ; preds = %68
  %1022 = bitcast %"struct.std::_List_iterator"* %17 to i8*
  %1023 = bitcast %"struct.std::_List_iterator"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %1022, i8* %1023, i64 8, i32 8, i1 false)
  store i32 1222686669, i32* %66
  br label %1026

; <label>:1024:                                   ; preds = %68
  store i32 231285148, i32* %66
  br label %1026

; <label>:1025:                                   ; preds = %68
  store i32 94960330, i32* %66
  br label %1026

; <label>:1026:                                   ; preds = %1025, %1024, %1021, %981, %975, %927, %919, %888, %799, %798, %770, %743, %742, %741, %740, %736, %735, %719, %703, %702, %685, %669, %668, %614, %599, %559, %556, %523, %508, %438, %437, %399, %371, %368, %345, %329, %328, %292, %277, %276, %238, %222, %218, %217, %190, %181, %172, %168, %167, %140, %124, %116, %108, %98, %97, %80, %71, %70
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE14_M_fill_assignEmRKx(%"class.std::vector.5"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector.5"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %9 = alloca %"class.std::vector.5"*
  %10 = alloca i64**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.667
  %15 = load i32, i32* @y.668
  %16 = add i32 %14, -963199790
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, -963199790
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -354729197, i32* %24
  br label %25

; <label>:25:                                     ; preds = %3, %318
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -354729197, label %28
    i32 -1495491740, label %36
    i32 546467793, label %78
    i32 494808514, label %81
    i32 -1069996005, label %97
    i32 954689160, label %125
    i32 1477955886, label %157
    i32 -2108522164, label %160
    i32 159218458, label %199
    i32 1327261294, label %211
    i32 1908045993, label %239
    i32 -1926554460, label %255
    i32 -1448371436, label %256
    i32 -358089056, label %283
    i32 976162238, label %298
    i32 -918606323, label %299
    i32 -2025927050, label %310
    i32 883756255, label %316
    i32 928402583, label %317
  ]

; <label>:27:                                     ; preds = %25
  br label %318

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1495491740, i32 -918606323
  store i32 %35, i32* %24
  br label %318

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::vector.5"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %11
  %39 = alloca i64*, align 8
  store i64** %39, i64*** %10
  %40 = alloca %"class.std::vector.5", align 8
  store %"class.std::vector.5"* %40, %"class.std::vector.5"** %9
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %41, %"class.__gnu_cxx::__normal_iterator"** %8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %42, %"class.__gnu_cxx::__normal_iterator"** %7
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %37, align 8
  %43 = load volatile i64*, i64** %11
  store i64 %1, i64* %43, align 8
  %44 = load volatile i64**, i64*** %10
  store i64* %2, i64** %44, align 8
  %45 = load %"class.std::vector.5"*, %"class.std::vector.5"** %37, align 8
  store %"class.std::vector.5"* %45, %"class.std::vector.5"** %6
  %46 = load volatile i64*, i64** %11
  %47 = load i64, i64* %46, align 8
  %48 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %49 = call i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.5"* %48) #3
  %50 = icmp ugt i64 %47, %49
  store i1 %50, i1* %5
  %51 = load i32, i32* @x.667
  %52 = load i32, i32* @y.668
  %53 = add i32 %51, -960868585
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -960868585
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 546467793, i32 -918606323
  store i32 %77, i32* %24
  br label %318

; <label>:78:                                     ; preds = %25
  %79 = load volatile i1, i1* %5
  %80 = select i1 %79, i32 494808514, i32 -1069996005
  store i32 %80, i32* %24
  br label %318

; <label>:81:                                     ; preds = %25
  %82 = load volatile i64*, i64** %11
  %83 = load i64, i64* %82, align 8
  %84 = load volatile i64**, i64*** %10
  %85 = load i64*, i64** %84, align 8
  %86 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %87 = bitcast %"class.std::vector.5"* %86 to %"struct.std::_Vector_base.6"*
  %88 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %87) #3
  %89 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  call void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.5"* %89, i64 %83, i64* dereferenceable(8) %85, %"class.std::allocator.7"* dereferenceable(1) %88)
  %90 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  %91 = bitcast %"class.std::vector.5"* %90 to %"struct.std::_Vector_base.6"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %91, i32 0, i32 0
  %93 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %94 = bitcast %"class.std::vector.5"* %93 to %"struct.std::_Vector_base.6"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %94, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %92, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24) %95) #3
  %96 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %9
  call void @_ZNSt6vectorIxSaIxEED2Ev(%"class.std::vector.5"* %96) #3
  store i32 -1448371436, i32* %24
  br label %318

; <label>:97:                                     ; preds = %25
  %98 = load i32, i32* @x.667
  %99 = load i32, i32* @y.668
  %100 = sub i32 %98, -513738672
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -513738672
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 true, true
  %111 = and i1 %108, true
  %112 = and i1 %106, %110
  %113 = and i1 %109, true
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 true, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 954689160, i32 -2025927050
  store i32 %124, i32* %24
  br label %318

; <label>:125:                                    ; preds = %25
  %126 = load volatile i64*, i64** %11
  %127 = load i64, i64* %126, align 8
  %128 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %129 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %128) #3
  %130 = icmp ugt i64 %127, %129
  store i1 %130, i1* %4
  %131 = load i32, i32* @x.667
  %132 = load i32, i32* @y.668
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 1477955886, i32 -2025927050
  store i32 %156, i32* %24
  br label %318

; <label>:157:                                    ; preds = %25
  %158 = load volatile i1, i1* %4
  %159 = select i1 %158, i32 -2108522164, i32 159218458
  store i32 %159, i32* %24
  br label %318

; <label>:160:                                    ; preds = %25
  %161 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %162 = call i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.5"* %161) #3
  %163 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %164 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %163, i32 0, i32 0
  store i64* %162, i64** %164, align 8
  %165 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %166 = call i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.5"* %165) #3
  %167 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %168 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %167, i32 0, i32 0
  store i64* %166, i64** %168, align 8
  %169 = load volatile i64**, i64*** %10
  %170 = load i64*, i64** %169, align 8
  %171 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %8
  %172 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %171, i32 0, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %7
  %175 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %174, i32 0, i32 0
  %176 = load i64*, i64** %175, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_(i64* %173, i64* %176, i64* dereferenceable(8) %170)
  %177 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %178 = bitcast %"class.std::vector.5"* %177 to %"struct.std::_Vector_base.6"*
  %179 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %179, i32 0, i32 1
  %181 = load i64*, i64** %180, align 8
  %182 = load volatile i64*, i64** %11
  %183 = load i64, i64* %182, align 8
  %184 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %185 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %184) #3
  %186 = sub i64 0, %185
  %187 = add i64 %183, %186
  %188 = sub i64 %183, %185
  %189 = load volatile i64**, i64*** %10
  %190 = load i64*, i64** %189, align 8
  %191 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %192 = bitcast %"class.std::vector.5"* %191 to %"struct.std::_Vector_base.6"*
  %193 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %192) #3
  %194 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %181, i64 %187, i64* dereferenceable(8) %190, %"class.std::allocator.7"* dereferenceable(1) %193)
  %195 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %196 = bitcast %"class.std::vector.5"* %195 to %"struct.std::_Vector_base.6"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %197, i32 0, i32 1
  store i64* %194, i64** %198, align 8
  store i32 1327261294, i32* %24
  br label %318

; <label>:199:                                    ; preds = %25
  %200 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %201 = bitcast %"class.std::vector.5"* %200 to %"struct.std::_Vector_base.6"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %202, i32 0, i32 0
  %204 = load i64*, i64** %203, align 8
  %205 = load volatile i64*, i64** %11
  %206 = load i64, i64* %205, align 8
  %207 = load volatile i64**, i64*** %10
  %208 = load i64*, i64** %207, align 8
  %209 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %204, i64 %206, i64* dereferenceable(8) %208)
  %210 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  call void @_ZNSt6vectorIxSaIxEE15_M_erase_at_endEPx(%"class.std::vector.5"* %210, i64* %209) #3
  store i32 1327261294, i32* %24
  br label %318

; <label>:211:                                    ; preds = %25
  %212 = load i32, i32* @x.667
  %213 = load i32, i32* @y.668
  %214 = sub i32 %212, -1502827404
  %215 = sub i32 %214, 1
  %216 = add i32 %215, -1502827404
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  %238 = select i1 %236, i32 1908045993, i32 883756255
  store i32 %238, i32* %24
  br label %318

; <label>:239:                                    ; preds = %25
  %240 = load i32, i32* @x.667
  %241 = load i32, i32* @y.668
  %242 = add i32 %240, 2003171799
  %243 = sub i32 %242, 1
  %244 = sub i32 %243, 2003171799
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  %254 = select i1 %252, i32 -1926554460, i32 883756255
  store i32 %254, i32* %24
  br label %318

; <label>:255:                                    ; preds = %25
  store i32 -1448371436, i32* %24
  br label %318

; <label>:256:                                    ; preds = %25
  %257 = load i32, i32* @x.667
  %258 = load i32, i32* @y.668
  %259 = sub i32 0, 1
  %260 = add i32 %257, %259
  %261 = sub i32 %257, 1
  %262 = mul i32 %257, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %258, 10
  %266 = xor i1 %264, true
  %267 = xor i1 %265, true
  %268 = xor i1 false, true
  %269 = and i1 %266, false
  %270 = and i1 %264, %268
  %271 = and i1 %267, false
  %272 = and i1 %265, %268
  %273 = or i1 %269, %270
  %274 = or i1 %271, %272
  %275 = xor i1 %273, %274
  %276 = or i1 %266, %267
  %277 = xor i1 %276, true
  %278 = or i1 false, %268
  %279 = and i1 %277, %278
  %280 = or i1 %275, %279
  %281 = or i1 %264, %265
  %282 = select i1 %280, i32 -358089056, i32 928402583
  store i32 %282, i32* %24
  br label %318

; <label>:283:                                    ; preds = %25
  %284 = load i32, i32* @x.667
  %285 = load i32, i32* @y.668
  %286 = sub i32 0, 1
  %287 = add i32 %284, %286
  %288 = sub i32 %284, 1
  %289 = mul i32 %284, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %285, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  %297 = select i1 %295, i32 976162238, i32 928402583
  store i32 %297, i32* %24
  br label %318

; <label>:298:                                    ; preds = %25
  ret void

; <label>:299:                                    ; preds = %25
  %300 = alloca %"class.std::vector.5"*, align 8
  %301 = alloca i64, align 8
  %302 = alloca i64*, align 8
  %303 = alloca %"class.std::vector.5", align 8
  %304 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %305 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %300, align 8
  store i64 %1, i64* %301, align 8
  store i64* %2, i64** %302, align 8
  %306 = load %"class.std::vector.5"*, %"class.std::vector.5"** %300, align 8
  %307 = load i64, i64* %301, align 8
  %308 = call i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.5"* %306) #3
  %309 = icmp ugt i64 %307, %308
  store i32 -1495491740, i32* %24
  br label %318

; <label>:310:                                    ; preds = %25
  %311 = load volatile i64*, i64** %11
  %312 = load i64, i64* %311, align 8
  %313 = load volatile %"class.std::vector.5"*, %"class.std::vector.5"** %6
  %314 = call i64 @_ZNKSt6vectorIxSaIxEE4sizeEv(%"class.std::vector.5"* %313) #3
  %315 = icmp ugt i64 %312, %314
  store i32 954689160, i32* %24
  br label %318

; <label>:316:                                    ; preds = %25
  store i32 1908045993, i32* %24
  br label %318

; <label>:317:                                    ; preds = %25
  store i32 -358089056, i32* %24
  br label %318

; <label>:318:                                    ; preds = %317, %316, %310, %299, %283, %256, %255, %239, %211, %199, %160, %157, %125, %97, %81, %78, %36, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIxSaIxEE8capacityEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.669
  %6 = load i32, i32* @y.670
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -508392085, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %121
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -508392085, label %18
    i32 -1131064292, label %26
    i32 -1343030104, label %58
    i32 -824888341, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %121

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1131064292, i32 -824888341
  store i32 %25, i32* %14
  br label %121

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %27, align 8
  %28 = load %"class.std::vector.5"*, %"class.std::vector.5"** %27, align 8
  %29 = bitcast %"class.std::vector.5"* %28 to %"struct.std::_Vector_base.6"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %30, i32 0, i32 2
  %32 = load i64*, i64** %31, align 8
  %33 = bitcast %"class.std::vector.5"* %28 to %"struct.std::_Vector_base.6"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i64*, i64** %35, align 8
  %37 = ptrtoint i64* %32 to i64
  %38 = ptrtoint i64* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 8
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.669
  %44 = load i32, i32* @y.670
  %45 = add i32 %43, 1174960736
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1174960736
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1343030104, i32 -824888341
  store i32 %57, i32* %14
  br label %121

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %61, align 8
  %62 = load %"class.std::vector.5"*, %"class.std::vector.5"** %61, align 8
  %63 = bitcast %"class.std::vector.5"* %62 to %"struct.std::_Vector_base.6"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %64, i32 0, i32 2
  %66 = load i64*, i64** %65, align 8
  %67 = bitcast %"class.std::vector.5"* %62 to %"struct.std::_Vector_base.6"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = ptrtoint i64* %66 to i64
  %72 = ptrtoint i64* %70 to i64
  %73 = sub i64 0, %72
  %74 = add i64 %71, %73
  %75 = sub i64 %71, %72
  %76 = mul i64 %74, %72
  %77 = sub i64 0, -6001625153121367975
  %78 = sub i64 %77, %71
  %79 = add i64 %78, -6001625153121367975
  %80 = sub i64 0, %71
  %81 = sub i64 0, %72
  %82 = sub i64 %79, %81
  %83 = add i64 %79, %72
  %84 = sub i64 %71, -1194040068010531774
  %85 = sub i64 %84, %72
  %86 = add i64 %85, -1194040068010531774
  %87 = sub i64 %71, %72
  %88 = add i64 %86, -5750689457891332660
  %89 = sub i64 %88, 8
  %90 = sub i64 %89, -5750689457891332660
  %91 = sub i64 %86, 8
  %92 = mul i64 %90, 8
  %93 = sub i64 0, 8
  %94 = add i64 %86, %93
  %95 = sub i64 %86, 8
  %96 = mul i64 %94, 8
  %97 = shl i64 %86, 8
  %98 = add i64 %86, -4096610345590510878
  %99 = sub i64 %98, 8
  %100 = sub i64 %99, -4096610345590510878
  %101 = sub i64 %86, 8
  %102 = mul i64 %100, 8
  %103 = add i64 0, -219659227065740670
  %104 = sub i64 %103, %86
  %105 = sub i64 %104, -219659227065740670
  %106 = sub i64 0, %86
  %107 = add i64 %105, -8203855548794138979
  %108 = add i64 %107, 8
  %109 = sub i64 %108, -8203855548794138979
  %110 = add i64 %105, 8
  %111 = add i64 %86, 2034873572459966464
  %112 = sub i64 %111, 8
  %113 = sub i64 %112, 2034873572459966464
  %114 = sub i64 %86, 8
  %115 = mul i64 %113, 8
  %116 = sub i64 0, 8
  %117 = add i64 %86, %116
  %118 = sub i64 %86, 8
  %119 = mul i64 %117, 8
  %120 = sdiv exact i64 %86, 8
  store i32 -1131064292, i32* %14
  br label %121

; <label>:121:                                    ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEEC2EmRKxRKS0_(%"class.std::vector.5"*, i64, i64* dereferenceable(8), %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %11 = load %"class.std::vector.5"*, %"class.std::vector.5"** %5, align 8
  %12 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %8, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.6"* %12, i64 %13, %"class.std::allocator.7"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i64*, i64** %7, align 8
  invoke void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.5"* %11, i64 %15, i64* dereferenceable(8) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.5"* %11 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseIxSaIxEED2Ev(%"struct.std::_Vector_base.6"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %1, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %6, i64** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %9, i64** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8) %12, i64** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEExEvT_S7_RKT0_(i64*, i64*, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.675
  %7 = load i32, i32* @y.676
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 139218236, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %105
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 139218236, label %19
    i32 999271697, label %39
    i32 -801233816, label %85
    i32 196570988, label %86
  ]

; <label>:18:                                     ; preds = %16
  br label %105

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 999271697, i32 196570988
  store i32 %38, i32* %15
  br label %105

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %42 = alloca i64*, align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  store i64* %0, i64** %45, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store i64* %1, i64** %46, align 8
  store i64* %2, i64** %42, align 8
  %47 = bitcast %"class.__gnu_cxx::__normal_iterator"* %43 to i8*
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 8, i32 8, i1 false)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %43, i32 0, i32 0
  %50 = load i64*, i64** %49, align 8
  %51 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %50)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator"* %44 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %44, i32 0, i32 0
  %55 = load i64*, i64** %54, align 8
  %56 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %55)
  %57 = load i64*, i64** %42, align 8
  call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %51, i64* %56, i64* dereferenceable(8) %57)
  %58 = load i32, i32* @x.675
  %59 = load i32, i32* @y.676
  %60 = sub i32 %58, -1861558305
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1861558305
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -801233816, i32 196570988
  store i32 %84, i32* %15
  br label %105

; <label>:85:                                     ; preds = %16
  ret void

; <label>:86:                                     ; preds = %16
  %87 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %89 = alloca i64*, align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %87, i32 0, i32 0
  store i64* %0, i64** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %88, i32 0, i32 0
  store i64* %1, i64** %93, align 8
  store i64* %2, i64** %89, align 8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator"* %90 to i8*
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %90, i32 0, i32 0
  %97 = load i64*, i64** %96, align 8
  %98 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %97)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator"* %91 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %91, i32 0, i32 0
  %102 = load i64*, i64** %101, align 8
  %103 = call i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64* %102)
  %104 = load i64*, i64** %89, align 8
  call void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64* %98, i64* %103, i64* dereferenceable(8) %104)
  store i32 999271697, i32* %15
  br label %105

; <label>:105:                                    ; preds = %86, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE5beginEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.677
  %6 = load i32, i32* @y.678
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -858943293, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %85
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -858943293, label %18
    i32 2033873348, label %38
    i32 -1329020821, label %74
    i32 -1219133841, label %76
  ]

; <label>:17:                                     ; preds = %15
  br label %85

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2033873348, i32 -1219133841
  store i32 %37, i32* %14
  br label %85

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %39, i64** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.677
  %48 = load i32, i32* @y.678
  %49 = add i32 %47, -592956471
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -592956471
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1329020821, i32 -1219133841
  store i32 %73, i32* %14
  br label %85

; <label>:74:                                     ; preds = %15
  %75 = load volatile i64*, i64** %2
  ret i64* %75

; <label>:76:                                     ; preds = %15
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %78, align 8
  %79 = load %"class.std::vector.5"*, %"class.std::vector.5"** %78, align 8
  %80 = bitcast %"class.std::vector.5"* %79 to %"struct.std::_Vector_base.6"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %77, i64** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %84 = load i64*, i64** %83, align 8
  store i32 2033873348, i32* %14
  br label %85

; <label>:85:                                     ; preds = %76, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt6vectorIxSaIxEE3endEv(%"class.std::vector.5"*) #4 comdat align 2 {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.679
  %6 = load i32, i32* @y.680
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 291416098, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 291416098, label %18
    i32 -614642198, label %38
    i32 878470376, label %62
    i32 -1711758436, label %64
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -614642198, i32 -1711758436
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  %41 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %42 = bitcast %"class.std::vector.5"* %41 to %"struct.std::_Vector_base.6"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %43, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %39, i64** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %46 = load i64*, i64** %45, align 8
  store i64* %46, i64** %2
  %47 = load i32, i32* @x.679
  %48 = load i32, i32* @y.680
  %49 = add i32 %47, -385255706
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -385255706
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 878470376, i32 -1711758436
  store i32 %61, i32* %14
  br label %73

; <label>:62:                                     ; preds = %15
  %63 = load volatile i64*, i64** %2
  ret i64* %63

; <label>:64:                                     ; preds = %15
  %65 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %66 = alloca %"class.std::vector.5"*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %66, align 8
  %67 = load %"class.std::vector.5"*, %"class.std::vector.5"** %66, align 8
  %68 = bitcast %"class.std::vector.5"* %67 to %"struct.std::_Vector_base.6"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %69, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %65, i64** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %65, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  store i32 -614642198, i32* %14
  br label %73

; <label>:73:                                     ; preds = %64, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64*, i64, i64* dereferenceable(8), %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %5 = alloca i64*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64*, align 8
  %8 = alloca %"class.std::allocator.7"*, align 8
  store i64* %0, i64** %5, align 8
  store i64 %1, i64* %6, align 8
  store i64* %2, i64** %7, align 8
  store %"class.std::allocator.7"* %3, %"class.std::allocator.7"** %8, align 8
  %9 = load i64*, i64** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i64*, i64** %7, align 8
  %12 = call i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64* %9, i64 %10, i64* dereferenceable(8) %11)
  ret i64* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEEC2EmRKS0_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.683
  %5 = load i32, i32* @y.684
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %104

; <label>:17:                                     ; preds = %3, %104
  %18 = alloca %"struct.std::_Vector_base.6"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator.7"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %20, align 8
  %23 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %20, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %24, %"class.std::allocator.7"* dereferenceable(1) %25) #3
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.683
  %28 = load i32, i32* @y.684
  %29 = sub i32 %27, -2141240923
  %30 = sub i32 %29, 1
  %31 = add i32 %30, -2141240923
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %104

; <label>:53:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %23, i64 %26)
          to label %54 unwind label %95

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.683
  %56 = load i32, i32* @y.684
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %114

; <label>:68:                                     ; preds = %54, %114
  %69 = load i32, i32* @x.683
  %70 = load i32, i32* @y.684
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %114

; <label>:94:                                     ; preds = %68
  ret void

; <label>:95:                                     ; preds = %53
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %21, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implD2Ev(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %24) #3
  br label %99

; <label>:99:                                     ; preds = %95
  %100 = load i8*, i8** %21, align 8
  %101 = load i32, i32* %22, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  resume { i8*, i32 } %103

; <label>:104:                                    ; preds = %17, %3
  %105 = alloca %"struct.std::_Vector_base.6"*, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::allocator.7"*, align 8
  %108 = alloca i8*
  %109 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %105, align 8
  store i64 %1, i64* %106, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %107, align 8
  %110 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %105, align 8
  %111 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %110, i32 0, i32 0
  %112 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %107, align 8
  call void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %111, %"class.std::allocator.7"* dereferenceable(1) %112) #3
  %113 = load i64, i64* %106, align 8
  br label %17

; <label>:114:                                    ; preds = %68, %54
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIxSaIxEE18_M_fill_initializeEmRKx(%"class.std::vector.5"*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  %7 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %8 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i64*, i64** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i64*, i64** %6, align 8
  %14 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseIxSaIxEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  %16 = call i64* @_ZSt24__uninitialized_fill_n_aIPxmxxET_S1_T0_RKT1_RSaIT2_E(i64* %11, i64 %12, i64* dereferenceable(8) %13, %"class.std::allocator.7"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.5"* %7 to %"struct.std::_Vector_base.6"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %18, i32 0, i32 1
  store i64* %16, i64** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %0, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"*, %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSaIxEC2ERKS_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 0
  store i64* null, i64** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 1
  store i64* null, i64** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %5, i32 0, i32 2
  store i64* null, i64** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIxSaIxEE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.689
  %6 = load i32, i32* @y.690
  %7 = add i32 %5, -1459697712
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1459697712
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -363963796, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -363963796, label %19
    i32 -42439350, label %39
    i32 -502237849, label %74
    i32 1449404770, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -42439350, i32 1449404770
  store i32 %38, i32* %15
  br label %95

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.6"*, align 8
  %41 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %40, align 8
  %43 = load i64, i64* %41, align 8
  %44 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %42, i64 %43)
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %45, i32 0, i32 0
  store i64* %44, i64** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %50, i32 0, i32 1
  store i64* %49, i64** %51, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %52, i32 0, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %41, align 8
  %56 = getelementptr inbounds i64, i64* %54, i64 %55
  %57 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %42, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %57, i32 0, i32 2
  store i64* %56, i64** %58, align 8
  %59 = load i32, i32* @x.689
  %60 = load i32, i32* @y.690
  %61 = add i32 %59, 1647850286
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 1647850286
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -502237849, i32 1449404770
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.6"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call i64* @_ZNSt12_Vector_baseIxSaIxEE11_M_allocateEm(%"struct.std::_Vector_base.6"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %81, i32 0, i32 0
  store i64* %80, i64** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %86, i32 0, i32 1
  store i64* %85, i64** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i64*, i64** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds i64, i64* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl", %"struct.std::_Vector_base<long long, std::allocator<long long> >::_Vector_impl"* %93, i32 0, i32 2
  store i64* %92, i64** %94, align 8
  store i32 -42439350, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIxEC2ERKS_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIxEC2ERKS1_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPxEvRT_S2_(i64** dereferenceable(8), i64** dereferenceable(8)) #4 comdat {
  %3 = alloca i64**, align 8
  %4 = alloca i64**, align 8
  %5 = alloca i64*, align 8
  store i64** %0, i64*** %3, align 8
  store i64** %1, i64*** %4, align 8
  %6 = load i64**, i64*** %3, align 8
  %7 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %6) #3
  %8 = load i64*, i64** %7, align 8
  store i64* %8, i64** %5, align 8
  %9 = load i64**, i64*** %4, align 8
  %10 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %9) #3
  %11 = load i64*, i64** %10, align 8
  %12 = load i64**, i64*** %3, align 8
  store i64* %11, i64** %12, align 8
  %13 = call dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8) %5) #3
  %14 = load i64*, i64** %13, align 8
  %15 = load i64**, i64*** %4, align 8
  store i64* %14, i64** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZSt4moveIRPxEONSt16remove_referenceIT_E4typeEOS3_(i64** dereferenceable(8)) #4 comdat {
  %2 = alloca i64**, align 8
  store i64** %0, i64*** %2, align 8
  %3 = load i64**, i64*** %2, align 8
  ret i64** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPxxEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i64*, i64*, i64* dereferenceable(8)) #4 comdat {
  %4 = alloca i64*
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.699
  %10 = load i32, i32* @y.700
  %11 = sub i32 %9, 416069908
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 416069908
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -60000969, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %155
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -60000969, label %23
    i32 -1274579582, label %43
    i32 -612113028, label %80
    i32 -1659507901, label %81
    i32 -1710373527, label %88
    i32 1439114390, label %93
    i32 1951116471, label %109
    i32 -302361420, label %141
    i32 -790368354, label %142
    i32 -1921233749, label %143
    i32 1518294898, label %150
  ]

; <label>:22:                                     ; preds = %20
  br label %155

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1274579582, i32 -1921233749
  store i32 %42, i32* %19
  br label %155

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %6
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %5
  %46 = alloca i64*, align 8
  %47 = alloca i64, align 8
  store i64* %47, i64** %4
  %48 = load volatile i64**, i64*** %6
  store i64* %0, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  store i64* %1, i64** %49, align 8
  store i64* %2, i64** %46, align 8
  %50 = load i64*, i64** %46, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64*, i64** %4
  store i64 %51, i64* %52, align 8
  %53 = load i32, i32* @x.699
  %54 = load i32, i32* @y.700
  %55 = add i32 %53, 482559480
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 482559480
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -612113028, i32 -1921233749
  store i32 %79, i32* %19
  br label %155

; <label>:80:                                     ; preds = %20
  store i32 -1659507901, i32* %19
  br label %155

; <label>:81:                                     ; preds = %20
  %82 = load volatile i64**, i64*** %6
  %83 = load i64*, i64** %82, align 8
  %84 = load volatile i64**, i64*** %5
  %85 = load i64*, i64** %84, align 8
  %86 = icmp ne i64* %83, %85
  %87 = select i1 %86, i32 -1710373527, i32 -790368354
  store i32 %87, i32* %19
  br label %155

; <label>:88:                                     ; preds = %20
  %89 = load volatile i64*, i64** %4
  %90 = load i64, i64* %89, align 8
  %91 = load volatile i64**, i64*** %6
  %92 = load i64*, i64** %91, align 8
  store i64 %90, i64* %92, align 8
  store i32 1439114390, i32* %19
  br label %155

; <label>:93:                                     ; preds = %20
  %94 = load i32, i32* @x.699
  %95 = load i32, i32* @y.700
  %96 = sub i32 %94, -490512927
  %97 = sub i32 %96, 1
  %98 = add i32 %97, -490512927
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 1951116471, i32 1518294898
  store i32 %108, i32* %19
  br label %155

; <label>:109:                                    ; preds = %20
  %110 = load volatile i64**, i64*** %6
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds i64, i64* %111, i32 1
  %113 = load volatile i64**, i64*** %6
  store i64* %112, i64** %113, align 8
  %114 = load i32, i32* @x.699
  %115 = load i32, i32* @y.700
  %116 = add i32 %114, 609299872
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 609299872
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 -302361420, i32 1518294898
  store i32 %140, i32* %19
  br label %155

; <label>:141:                                    ; preds = %20
  store i32 -1659507901, i32* %19
  br label %155

; <label>:142:                                    ; preds = %20
  ret void

; <label>:143:                                    ; preds = %20
  %144 = alloca i64*, align 8
  %145 = alloca i64*, align 8
  %146 = alloca i64*, align 8
  %147 = alloca i64, align 8
  store i64* %0, i64** %144, align 8
  store i64* %1, i64** %145, align 8
  store i64* %2, i64** %146, align 8
  %148 = load i64*, i64** %146, align 8
  %149 = load i64, i64* %148, align 8
  store i64 %149, i64* %147, align 8
  store i32 -1274579582, i32* %19
  br label %155

; <label>:150:                                    ; preds = %20
  %151 = load volatile i64**, i64*** %6
  %152 = load i64*, i64** %151, align 8
  %153 = getelementptr inbounds i64, i64* %152, i32 1
  %154 = load volatile i64**, i64*** %6
  store i64* %153, i64** %154, align 8
  store i32 1951116471, i32* %19
  br label %155

; <label>:155:                                    ; preds = %150, %143, %141, %109, %93, %88, %81, %80, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i64*) #0 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.701
  %6 = load i32, i32* @y.702
  %7 = sub i32 %5, 1422704857
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1422704857
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -310449199, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -310449199, label %19
    i32 -718473352, label %27
    i32 2020884223, label %63
    i32 1429910471, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -718473352, i32 1429910471
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %28, i32 0, i32 0
  store i64* %0, i64** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64* %34)
  store i64* %35, i64** %2
  %36 = load i32, i32* @x.701
  %37 = load i32, i32* @y.702
  %38 = sub i32 %36, 1455061042
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1455061042
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 2020884223, i32 1429910471
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i64*, i64** %2
  ret i64* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %66, i32 0, i32 0
  store i64* %0, i64** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator"* %67 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = call i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64* %72)
  store i32 -718473352, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEELb1EE7_S_baseES6_(i64*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  store i64* %0, i64** %3, align 8
  %4 = call dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %2) #3
  %5 = load i64*, i64** %4, align 8
  ret i64* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64** @_ZNK9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca i64**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.705
  %6 = load i32, i32* @y.706
  %7 = add i32 %5, -830232726
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -830232726
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -688696394, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -688696394, label %19
    i32 871249508, label %27
    i32 -2090800712, label %46
    i32 -1716549208, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 871249508, i32 -1716549208
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  store i64** %30, i64*** %2
  %31 = load i32, i32* @x.705
  %32 = load i32, i32* @y.706
  %33 = sub i32 %31, 598341531
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 598341531
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -2090800712, i32 -1716549208
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i64**, i64*** %2
  ret i64** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %50 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %50, i32 0, i32 0
  store i32 871249508, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPxSt6vectorIxSaIxEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"*, i64** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.707
  %6 = load i32, i32* @y.708
  %7 = sub i32 %5, 628564441
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 628564441
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1871210461, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1871210461, label %19
    i32 714712086, label %39
    i32 1413166670, label %73
    i32 199854684, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 714712086, i32 199854684
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store i64** %1, i64*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load i64**, i64*** %41, align 8
  %45 = load i64*, i64** %44, align 8
  store i64* %45, i64** %43, align 8
  %46 = load i32, i32* @x.707
  %47 = load i32, i32* @y.708
  %48 = sub i32 %46, -1862354367
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1862354367
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1413166670, i32 199854684
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %76 = alloca i64**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  store i64** %1, i64*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %79 = load i64**, i64*** %76, align 8
  %80 = load i64*, i64** %79, align 8
  store i64* %80, i64** %78, align 8
  store i32 714712086, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZSt20uninitialized_fill_nIPxmxET_S1_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat {
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i8, align 1
  store i64* %0, i64** %4, align 8
  store i64 %1, i64* %5, align 8
  store i64* %2, i64** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i64*, i64** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i64*, i64** %6, align 8
  %11 = call i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64* %8, i64 %9, i64* dereferenceable(8) %10)
  ret i64* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i64* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPxmxEET_S3_T0_RKT1_(i64*, i64, i64* dereferenceable(8)) #0 comdat align 2 {
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.711
  %8 = load i32, i32* @y.712
  %9 = sub i32 %7, 1564726416
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1564726416
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -970703035, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %62
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -970703035, label %21
    i32 -2072192383, label %29
    i32 -576826923, label %52
    i32 -1809719632, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %62

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -2072192383, i32 -1809719632
  store i32 %28, i32* %17
  br label %62

; <label>:29:                                     ; preds = %18
  %30 = alloca i64*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64*, align 8
  store i64* %0, i64** %30, align 8
  store i64 %1, i64* %31, align 8
  store i64* %2, i64** %32, align 8
  %33 = load i64*, i64** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = load i64*, i64** %32, align 8
  %36 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %33, i64 %34, i64* dereferenceable(8) %35)
  store i64* %36, i64** %4
  %37 = load i32, i32* @x.711
  %38 = load i32, i32* @y.712
  %39 = add i32 %37, -171928762
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -171928762
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -576826923, i32 -1809719632
  store i32 %51, i32* %17
  br label %62

; <label>:52:                                     ; preds = %18
  %53 = load volatile i64*, i64** %4
  ret i64* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i64*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i64*, align 8
  store i64* %0, i64** %55, align 8
  store i64 %1, i64* %56, align 8
  store i64* %2, i64** %57, align 8
  %58 = load i64*, i64** %55, align 8
  %59 = load i64, i64* %56, align 8
  %60 = load i64*, i64** %57, align 8
  %61 = call i64* @_ZSt6fill_nIPxmxET_S1_T0_RKT1_(i64* %58, i64 %59, i64* dereferenceable(8) %60)
  store i32 -2072192383, i32* %17
  br label %62

; <label>:62:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.23"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.23"*
  %7 = alloca %"class.std::vector.23"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.std::vector.23", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  %13 = load %"class.std::vector.23"*, %"class.std::vector.23"** %7, align 8
  store %"class.std::vector.23"* %13, %"class.std::vector.23"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.23"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 819754367, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %256
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 819754367, label %21
    i32 1715798023, label %26
    i32 57766927, label %42
    i32 -858831834, label %80
    i32 -388687609, label %81
    i32 2123055151, label %87
    i32 241492075, label %102
    i32 547961266, label %149
    i32 -172082601, label %150
    i32 1164405422, label %160
    i32 1530437578, label %176
    i32 -2032102615, label %204
    i32 2115157342, label %205
    i32 829310526, label %206
    i32 1531657245, label %217
    i32 418159210, label %255
  ]

; <label>:20:                                     ; preds = %18
  br label %256

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 1715798023, i32 -388687609
  store i32 %25, i32* %17
  br label %256

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.713
  %28 = load i32, i32* @y.714
  %29 = add i32 %27, 1138921948
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1138921948
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 57766927, i32 829310526
  store i32 %41, i32* %17
  br label %256

; <label>:42:                                     ; preds = %18
  %43 = load i64, i64* %8, align 8
  %44 = load i32*, i32** %9, align 8
  %45 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %46 = bitcast %"class.std::vector.23"* %45 to %"struct.std::_Vector_base.24"*
  %47 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %46) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.23"* %10, i64 %43, i32* dereferenceable(4) %44, %"class.std::allocator.25"* dereferenceable(1) %47)
  %48 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %48, i32 0, i32 0
  %50 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %51 = bitcast %"class.std::vector.23"* %50 to %"struct.std::_Vector_base.24"*
  %52 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %51, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %49, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %52) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"* %10) #3
  %53 = load i32, i32* @x.713
  %54 = load i32, i32* @y.714
  %55 = add i32 %53, -904691532
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -904691532
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -858831834, i32 829310526
  store i32 %79, i32* %17
  br label %256

; <label>:80:                                     ; preds = %18
  store i32 2115157342, i32* %17
  br label %256

; <label>:81:                                     ; preds = %18
  %82 = load i64, i64* %8, align 8
  %83 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %84 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %83) #3
  %85 = icmp ugt i64 %82, %84
  %86 = select i1 %85, i32 2123055151, i32 -172082601
  store i32 %86, i32* %17
  br label %256

; <label>:87:                                     ; preds = %18
  %88 = load i32, i32* @x.713
  %89 = load i32, i32* @y.714
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  %101 = select i1 %99, i32 241492075, i32 1531657245
  store i32 %101, i32* %17
  br label %256

; <label>:102:                                    ; preds = %18
  %103 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %104 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.23"* %103) #3
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  store i32* %104, i32** %105, align 8
  %106 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %107 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.23"* %106) #3
  %108 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store i32* %107, i32** %108, align 8
  %109 = load i32*, i32** %9, align 8
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  %111 = load i32*, i32** %110, align 8
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %111, i32* %113, i32* dereferenceable(4) %109)
  %114 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %115 = bitcast %"class.std::vector.23"* %114 to %"struct.std::_Vector_base.24"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %115, i32 0, i32 0
  %117 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %116, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  %119 = load i64, i64* %8, align 8
  %120 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %121 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %120) #3
  %122 = sub i64 %119, 8488794599996442162
  %123 = sub i64 %122, %121
  %124 = add i64 %123, 8488794599996442162
  %125 = sub i64 %119, %121
  %126 = load i32*, i32** %9, align 8
  %127 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %128 = bitcast %"class.std::vector.23"* %127 to %"struct.std::_Vector_base.24"*
  %129 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %128) #3
  %130 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %118, i64 %124, i32* dereferenceable(4) %126, %"class.std::allocator.25"* dereferenceable(1) %129)
  %131 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %132 = bitcast %"class.std::vector.23"* %131 to %"struct.std::_Vector_base.24"*
  %133 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %132, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %133, i32 0, i32 1
  store i32* %130, i32** %134, align 8
  %135 = load i32, i32* @x.713
  %136 = load i32, i32* @y.714
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 547961266, i32 1531657245
  store i32 %148, i32* %17
  br label %256

; <label>:149:                                    ; preds = %18
  store i32 1164405422, i32* %17
  br label %256

; <label>:150:                                    ; preds = %18
  %151 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %152 = bitcast %"class.std::vector.23"* %151 to %"struct.std::_Vector_base.24"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %152, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %153, i32 0, i32 0
  %155 = load i32*, i32** %154, align 8
  %156 = load i64, i64* %8, align 8
  %157 = load i32*, i32** %9, align 8
  %158 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %155, i64 %156, i32* dereferenceable(4) %157)
  %159 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.23"* %159, i32* %158) #3
  store i32 1164405422, i32* %17
  br label %256

; <label>:160:                                    ; preds = %18
  %161 = load i32, i32* @x.713
  %162 = load i32, i32* @y.714
  %163 = sub i32 %161, 1300413412
  %164 = sub i32 %163, 1
  %165 = add i32 %164, 1300413412
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  %175 = select i1 %173, i32 1530437578, i32 418159210
  store i32 %175, i32* %17
  br label %256

; <label>:176:                                    ; preds = %18
  %177 = load i32, i32* @x.713
  %178 = load i32, i32* @y.714
  %179 = add i32 %177, 1935801681
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 1935801681
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  %203 = select i1 %201, i32 -2032102615, i32 418159210
  store i32 %203, i32* %17
  br label %256

; <label>:204:                                    ; preds = %18
  store i32 2115157342, i32* %17
  br label %256

; <label>:205:                                    ; preds = %18
  ret void

; <label>:206:                                    ; preds = %18
  %207 = load i64, i64* %8, align 8
  %208 = load i32*, i32** %9, align 8
  %209 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %210 = bitcast %"class.std::vector.23"* %209 to %"struct.std::_Vector_base.24"*
  %211 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %210) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.23"* %10, i64 %207, i32* dereferenceable(4) %208, %"class.std::allocator.25"* dereferenceable(1) %211)
  %212 = bitcast %"class.std::vector.23"* %10 to %"struct.std::_Vector_base.24"*
  %213 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %212, i32 0, i32 0
  %214 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %215 = bitcast %"class.std::vector.23"* %214 to %"struct.std::_Vector_base.24"*
  %216 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %215, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %213, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %216) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.23"* %10) #3
  store i32 57766927, i32* %17
  br label %256

; <label>:217:                                    ; preds = %18
  %218 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %219 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.23"* %218) #3
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  store i32* %219, i32** %220, align 8
  %221 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %222 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.23"* %221) #3
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  store i32* %222, i32** %223, align 8
  %224 = load i32*, i32** %9, align 8
  %225 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %11, i32 0, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %12, i32 0, i32 0
  %228 = load i32*, i32** %227, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %226, i32* %228, i32* dereferenceable(4) %224)
  %229 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %230 = bitcast %"class.std::vector.23"* %229 to %"struct.std::_Vector_base.24"*
  %231 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %231, i32 0, i32 1
  %233 = load i32*, i32** %232, align 8
  %234 = load i64, i64* %8, align 8
  %235 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %236 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.23"* %235) #3
  %237 = sub i64 0, %236
  %238 = add i64 %234, %237
  %239 = sub i64 %234, %236
  %240 = mul i64 %238, %236
  %241 = shl i64 %234, %236
  %242 = add i64 %234, -2646991277010952368
  %243 = sub i64 %242, %236
  %244 = sub i64 %243, -2646991277010952368
  %245 = sub i64 %234, %236
  %246 = load i32*, i32** %9, align 8
  %247 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %248 = bitcast %"class.std::vector.23"* %247 to %"struct.std::_Vector_base.24"*
  %249 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %248) #3
  %250 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %233, i64 %244, i32* dereferenceable(4) %246, %"class.std::allocator.25"* dereferenceable(1) %249)
  %251 = load volatile %"class.std::vector.23"*, %"class.std::vector.23"** %6
  %252 = bitcast %"class.std::vector.23"* %251 to %"struct.std::_Vector_base.24"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %253, i32 0, i32 1
  store i32* %250, i32** %254, align 8
  store i32 241492075, i32* %17
  br label %256

; <label>:255:                                    ; preds = %18
  store i32 1530437578, i32* %17
  br label %256

; <label>:256:                                    ; preds = %255, %217, %206, %204, %176, %160, %150, %149, %102, %87, %81, %80, %42, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.23"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %2, align 8
  %3 = load %"class.std::vector.23"*, %"class.std::vector.23"** %2, align 8
  %4 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Vector_base.24"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.23"* %3 to %"struct.std::_Vector_base.24"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = add i64 %12, -5368905058101914824
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -5368905058101914824
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.23"*, i64, i32* dereferenceable(4), %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.23"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.25"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %8, align 8
  %11 = load %"class.std::vector.23"*, %"class.std::vector.23"** %5, align 8
  %12 = bitcast %"class.std::vector.23"* %11 to %"struct.std::_Vector_base.24"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.24"* %12, i64 %13, %"class.std::allocator.25"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.23"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.717
  %20 = load i32, i32* @y.718
  %21 = sub i32 %19, -1232213607
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -1232213607
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %58

; <label>:33:                                     ; preds = %18, %58
  %34 = landingpad { i8*, i32 }
          cleanup
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %9, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %10, align 4
  %37 = bitcast %"class.std::vector.23"* %11 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.24"* %37) #3
  %38 = load i32, i32* @x.717
  %39 = load i32, i32* @y.718
  %40 = sub i32 %38, -180219095
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -180219095
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %58

; <label>:52:                                     ; preds = %33
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i8*, i8** %9, align 8
  %55 = load i32, i32* %10, align 4
  %56 = insertvalue { i8*, i32 } undef, i8* %54, 0
  %57 = insertvalue { i8*, i32 } %56, i32 %55, 1
  resume { i8*, i32 } %57

; <label>:58:                                     ; preds = %33, %18
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %9, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %10, align 4
  %62 = bitcast %"class.std::vector.23"* %11 to %"struct.std::_Vector_base.24"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.24"* %62) #3
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.23"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.721
  %6 = load i32, i32* @y.722
  %7 = add i32 %5, -1915258922
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1915258922
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1253960181, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1253960181, label %19
    i32 -1544819965, label %39
    i32 -515396847, label %63
    i32 -968207976, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1544819965, i32 -968207976
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %41 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %41, align 8
  %42 = load %"class.std::vector.23"*, %"class.std::vector.23"** %41, align 8
  %43 = bitcast %"class.std::vector.23"* %42 to %"struct.std::_Vector_base.24"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.33"* %40, i32** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %40, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.721
  %49 = load i32, i32* @y.722
  %50 = sub i32 %48, -430988301
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -430988301
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -515396847, i32 -968207976
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i32*, i32** %2
  ret i32* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %67 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %67, align 8
  %68 = load %"class.std::vector.23"*, %"class.std::vector.23"** %67, align 8
  %69 = bitcast %"class.std::vector.23"* %68 to %"struct.std::_Vector_base.24"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.33"* %66, i32** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %66, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  store i32 -1544819965, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.23"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.std::vector.23"*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %3, align 8
  %4 = load %"class.std::vector.23"*, %"class.std::vector.23"** %3, align 8
  %5 = bitcast %"class.std::vector.23"* %4 to %"struct.std::_Vector_base.24"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.33"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.25"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.725
  %9 = load i32, i32* @y.726
  %10 = sub i32 %8, 1502284242
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1502284242
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 406138833, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %77
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 406138833, label %22
    i32 341208764, label %30
    i32 -1066118759, label %66
    i32 94916818, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %77

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 341208764, i32 94916818
  store i32 %29, i32* %18
  br label %77

; <label>:30:                                     ; preds = %19
  %31 = alloca i32*, align 8
  %32 = alloca i64, align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::allocator.25"*, align 8
  store i32* %0, i32** %31, align 8
  store i64 %1, i64* %32, align 8
  store i32* %2, i32** %33, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %34, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = load i64, i64* %32, align 8
  %37 = load i32*, i32** %33, align 8
  %38 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %35, i64 %36, i32* dereferenceable(4) %37)
  store i32* %38, i32** %5
  %39 = load i32, i32* @x.725
  %40 = load i32, i32* @y.726
  %41 = add i32 %39, -300948085
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, -300948085
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1066118759, i32 94916818
  store i32 %65, i32* %18
  br label %77

; <label>:66:                                     ; preds = %19
  %67 = load volatile i32*, i32** %5
  ret i32* %67

; <label>:68:                                     ; preds = %19
  %69 = alloca i32*, align 8
  %70 = alloca i64, align 8
  %71 = alloca i32*, align 8
  %72 = alloca %"class.std::allocator.25"*, align 8
  store i32* %0, i32** %69, align 8
  store i64 %1, i64* %70, align 8
  store i32* %2, i32** %71, align 8
  store %"class.std::allocator.25"* %3, %"class.std::allocator.25"** %72, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = load i64, i64* %70, align 8
  %75 = load i32*, i32** %71, align 8
  %76 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %73, i64 %74, i32* dereferenceable(4) %75)
  store i32 341208764, i32* %18
  br label %77

; <label>:77:                                     ; preds = %68, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.24"*, i64, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.727
  %5 = load i32, i32* @y.728
  %6 = sub i32 %4, -643922877
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -643922877
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %118

; <label>:30:                                     ; preds = %3, %118
  %31 = alloca %"struct.std::_Vector_base.24"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.25"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %33, align 8
  %36 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %33, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, %"class.std::allocator.25"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.727
  %41 = load i32, i32* @y.728
  %42 = add i32 %40, -1650848842
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -1650848842
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %118

; <label>:66:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.24"* %36, i64 %39)
          to label %67 unwind label %68

; <label>:67:                                     ; preds = %66
  ret void

; <label>:68:                                     ; preds = %66
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %34, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37) #3
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i32, i32* @x.727
  %74 = load i32, i32* @y.728
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %128

; <label>:86:                                     ; preds = %72, %128
  %87 = load i8*, i8** %34, align 8
  %88 = load i32, i32* %35, align 4
  %89 = insertvalue { i8*, i32 } undef, i8* %87, 0
  %90 = insertvalue { i8*, i32 } %89, i32 %88, 1
  %91 = load i32, i32* @x.727
  %92 = load i32, i32* @y.728
  %93 = sub i32 %91, 318067235
  %94 = sub i32 %93, 1
  %95 = add i32 %94, 318067235
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %128

; <label>:117:                                    ; preds = %86
  resume { i8*, i32 } %90

; <label>:118:                                    ; preds = %30, %3
  %119 = alloca %"struct.std::_Vector_base.24"*, align 8
  %120 = alloca i64, align 8
  %121 = alloca %"class.std::allocator.25"*, align 8
  %122 = alloca i8*
  %123 = alloca i32
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %119, align 8
  store i64 %1, i64* %120, align 8
  store %"class.std::allocator.25"* %2, %"class.std::allocator.25"** %121, align 8
  %124 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %119, align 8
  %125 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %124, i32 0, i32 0
  %126 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %121, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %125, %"class.std::allocator.25"* dereferenceable(1) %126) #3
  %127 = load i64, i64* %120, align 8
  br label %30

; <label>:128:                                    ; preds = %86, %72
  %129 = load i8*, i8** %34, align 8
  %130 = load i32, i32* %35, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.23"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.23"* %0, %"class.std::vector.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.23"*, %"class.std::vector.23"** %4, align 8
  %8 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %15 = call dereferenceable(1) %"class.std::allocator.25"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.24"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.25"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.23"* %7 to %"struct.std::_Vector_base.24"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.25"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.25"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.25"* %1, %"class.std::allocator.25"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator.25"*
  %7 = load %"class.std::allocator.25"*, %"class.std::allocator.25"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.25"* %6, %"class.std::allocator.25"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.24"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.24"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.24"* %0, %"struct.std::_Vector_base.24"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.24"*, %"struct.std::_Vector_base.24"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.24"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.24", %"struct.std::_Vector_base.24"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i1
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32, align 4
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %9 = load i32*, i32** %7, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %8, align 4
  %11 = alloca i32
  store i32 -1980738594, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %110
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1980738594, label %15
    i32 86570671, label %43
    i32 -1380421570, label %62
    i32 -1834746415, label %65
    i32 1881411596, label %68
    i32 -993596740, label %84
    i32 759269472, label %101
    i32 47991977, label %102
    i32 821496255, label %103
    i32 2013063583, label %107
  ]

; <label>:14:                                     ; preds = %12
  br label %110

; <label>:15:                                     ; preds = %12
  %16 = load i32, i32* @x.735
  %17 = load i32, i32* @y.736
  %18 = add i32 %16, -2011922049
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -2011922049
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 86570671, i32 821496255
  store i32 %42, i32* %11
  br label %110

; <label>:43:                                     ; preds = %12
  %44 = load i32*, i32** %5, align 8
  %45 = load i32*, i32** %6, align 8
  %46 = icmp ne i32* %44, %45
  store i1 %46, i1* %4
  %47 = load i32, i32* @x.735
  %48 = load i32, i32* @y.736
  %49 = sub i32 %47, -1258397423
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -1258397423
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1380421570, i32 821496255
  store i32 %61, i32* %11
  br label %110

; <label>:62:                                     ; preds = %12
  %63 = load volatile i1, i1* %4
  %64 = select i1 %63, i32 -1834746415, i32 47991977
  store i32 %64, i32* %11
  br label %110

; <label>:65:                                     ; preds = %12
  %66 = load i32, i32* %8, align 4
  %67 = load i32*, i32** %5, align 8
  store i32 %66, i32* %67, align 4
  store i32 1881411596, i32* %11
  br label %110

; <label>:68:                                     ; preds = %12
  %69 = load i32, i32* @x.735
  %70 = load i32, i32* @y.736
  %71 = sub i32 %69, 1605014761
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 1605014761
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -993596740, i32 2013063583
  store i32 %83, i32* %11
  br label %110

; <label>:84:                                     ; preds = %12
  %85 = load i32*, i32** %5, align 8
  %86 = getelementptr inbounds i32, i32* %85, i32 1
  store i32* %86, i32** %5, align 8
  %87 = load i32, i32* @x.735
  %88 = load i32, i32* @y.736
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  %100 = select i1 %98, i32 759269472, i32 2013063583
  store i32 %100, i32* %11
  br label %110

; <label>:101:                                    ; preds = %12
  store i32 -1980738594, i32* %11
  br label %110

; <label>:102:                                    ; preds = %12
  ret void

; <label>:103:                                    ; preds = %12
  %104 = load i32*, i32** %5, align 8
  %105 = load i32*, i32** %6, align 8
  %106 = icmp ne i32* %104, %105
  store i32 86570671, i32* %11
  br label %110

; <label>:107:                                    ; preds = %12
  %108 = load i32*, i32** %5, align 8
  %109 = getelementptr inbounds i32, i32* %108, i32 1
  store i32* %109, i32** %5, align 8
  store i32 -993596740, i32* %11
  br label %110

; <label>:110:                                    ; preds = %107, %103, %101, %84, %68, %65, %62, %43, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.33"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.33"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.743
  %6 = load i32, i32* @y.744
  %7 = add i32 %5, 558793348
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 558793348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2100737236, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2100737236, label %19
    i32 -2043864328, label %27
    i32 -1658093312, label %60
    i32 812369096, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2043864328, i32 812369096
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %29 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  store i32** %1, i32*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %30, i32 0, i32 0
  %32 = load i32**, i32*** %29, align 8
  %33 = load i32*, i32** %32, align 8
  store i32* %33, i32** %31, align 8
  %34 = load i32, i32* @x.743
  %35 = load i32, i32* @y.744
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1658093312, i32 812369096
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %63 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %62, align 8
  store i32** %1, i32*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %64, i32 0, i32 0
  %66 = load i32**, i32*** %63, align 8
  %67 = load i32*, i32** %66, align 8
  store i32* %67, i32** %65, align 8
  store i32 -2043864328, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.745
  %8 = load i32, i32* @y.746
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 48153534, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 48153534, label %20
    i32 -387983196, label %40
    i32 1218567294, label %64
    i32 97714537, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -387983196, i32 97714537
  store i32 %39, i32* %16
  br label %75

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i8, align 1
  store i32* %0, i32** %41, align 8
  store i64 %1, i64* %42, align 8
  store i32* %2, i32** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load i32*, i32** %41, align 8
  %46 = load i64, i64* %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.745
  %50 = load i32, i32* @y.746
  %51 = sub i32 %49, -1538188195
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1538188195
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1218567294, i32 97714537
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i8, align 1
  store i32* %0, i32** %67, align 8
  store i64 %1, i64* %68, align 8
  store i32* %2, i32** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i32*, i32** %67, align 8
  %72 = load i64, i64* %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %71, i64 %72, i32* dereferenceable(4) %73)
  store i32 -387983196, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE14_M_fill_assignEmRKc(%"class.std::vector.0"*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca %"class.std::vector.0", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %13, %"class.std::vector.0"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %16 = call i64 @_ZNKSt6vectorIcSaIcEE8capacityEv(%"class.std::vector.0"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -693588235, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %198
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -693588235, label %21
    i32 -1202369199, label %26
    i32 -1738509112, label %37
    i32 1078203083, label %43
    i32 558043166, label %76
    i32 738000493, label %103
    i32 284345863, label %128
    i32 -327976103, label %129
    i32 485416193, label %157
    i32 1993619485, label %185
    i32 1762836640, label %186
    i32 915190649, label %187
    i32 1461735144, label %197
  ]

; <label>:20:                                     ; preds = %18
  br label %198

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 -1202369199, i32 -1738509112
  store i32 %25, i32* %17
  br label %198

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load i8*, i8** %9, align 8
  %29 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %30 = bitcast %"class.std::vector.0"* %29 to %"struct.std::_Vector_base.1"*
  %31 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %30) #3
  call void @_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_(%"class.std::vector.0"* %10, i64 %27, i8* dereferenceable(1) %28, %"class.std::allocator.2"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %35 = bitcast %"class.std::vector.0"* %34 to %"struct.std::_Vector_base.1"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %33, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIcSaIcEED2Ev(%"class.std::vector.0"* %10) #3
  store i32 1762836640, i32* %17
  br label %198

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %40 = call i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.0"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 1078203083, i32 558043166
  store i32 %42, i32* %17
  br label %198

; <label>:43:                                     ; preds = %18
  %44 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %45 = call i8* @_ZNSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %11, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %48 = call i8* @_ZNSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %12, i32 0, i32 0
  store i8* %48, i8** %49, align 8
  %50 = load i8*, i8** %9, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %11, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %12, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEcEvT_S7_RKT0_(i8* %52, i8* %54, i8* dereferenceable(1) %50)
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %56 = bitcast %"class.std::vector.0"* %55 to %"struct.std::_Vector_base.1"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %57, i32 0, i32 1
  %59 = load i8*, i8** %58, align 8
  %60 = load i64, i64* %8, align 8
  %61 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %62 = call i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.0"* %61) #3
  %63 = sub i64 %60, 2406057843586786070
  %64 = sub i64 %63, %62
  %65 = add i64 %64, 2406057843586786070
  %66 = sub i64 %60, %62
  %67 = load i8*, i8** %9, align 8
  %68 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %69) #3
  %71 = call i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8* %59, i64 %65, i8* dereferenceable(1) %67, %"class.std::allocator.2"* dereferenceable(1) %70)
  %72 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %73 = bitcast %"class.std::vector.0"* %72 to %"struct.std::_Vector_base.1"*
  %74 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %74, i32 0, i32 1
  store i8* %71, i8** %75, align 8
  store i32 -327976103, i32* %17
  br label %198

; <label>:76:                                     ; preds = %18
  %77 = load i32, i32* @x.749
  %78 = load i32, i32* @y.750
  %79 = sub i32 0, 1
  %80 = add i32 %77, %79
  %81 = sub i32 %77, 1
  %82 = mul i32 %77, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %78, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 738000493, i32 915190649
  store i32 %102, i32* %17
  br label %198

; <label>:103:                                    ; preds = %18
  %104 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %105 = bitcast %"class.std::vector.0"* %104 to %"struct.std::_Vector_base.1"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %106, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  %109 = load i64, i64* %8, align 8
  %110 = load i8*, i8** %9, align 8
  %111 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %108, i64 %109, i8* dereferenceable(1) %110)
  %112 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorIcSaIcEE15_M_erase_at_endEPc(%"class.std::vector.0"* %112, i8* %111) #3
  %113 = load i32, i32* @x.749
  %114 = load i32, i32* @y.750
  %115 = add i32 %113, -679411924
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -679411924
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 284345863, i32 915190649
  store i32 %127, i32* %17
  br label %198

; <label>:128:                                    ; preds = %18
  store i32 -327976103, i32* %17
  br label %198

; <label>:129:                                    ; preds = %18
  %130 = load i32, i32* @x.749
  %131 = load i32, i32* @y.750
  %132 = add i32 %130, -138471608
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -138471608
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 485416193, i32 1461735144
  store i32 %156, i32* %17
  br label %198

; <label>:157:                                    ; preds = %18
  %158 = load i32, i32* @x.749
  %159 = load i32, i32* @y.750
  %160 = add i32 %158, 71284304
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, 71284304
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  %184 = select i1 %182, i32 1993619485, i32 1461735144
  store i32 %184, i32* %17
  br label %198

; <label>:185:                                    ; preds = %18
  store i32 1762836640, i32* %17
  br label %198

; <label>:186:                                    ; preds = %18
  ret void

; <label>:187:                                    ; preds = %18
  %188 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %189 = bitcast %"class.std::vector.0"* %188 to %"struct.std::_Vector_base.1"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %190, i32 0, i32 0
  %192 = load i8*, i8** %191, align 8
  %193 = load i64, i64* %8, align 8
  %194 = load i8*, i8** %9, align 8
  %195 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %192, i64 %193, i8* dereferenceable(1) %194)
  %196 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorIcSaIcEE15_M_erase_at_endEPc(%"class.std::vector.0"* %196, i8* %195) #3
  store i32 738000493, i32* %17
  br label %198

; <label>:197:                                    ; preds = %18
  store i32 485416193, i32* %17
  br label %198

; <label>:198:                                    ; preds = %197, %187, %185, %157, %129, %128, %103, %76, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIcSaIcEE8capacityEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = ptrtoint i8* %7 to i64
  %13 = ptrtoint i8* %11 to i64
  %14 = sub i64 %12, 1273406713122541499
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 1273406713122541499
  %17 = sub i64 %12, %13
  ret i64 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEEC2EmRKcRKS0_(%"class.std::vector.0"*, i64, i8* dereferenceable(1), %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.753
  %6 = load i32, i32* @y.754
  %7 = add i32 %5, 1851829072
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1851829072
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %99

; <label>:19:                                     ; preds = %4, %99
  %20 = alloca %"class.std::vector.0"*, align 8
  %21 = alloca i64, align 8
  %22 = alloca i8*, align 8
  %23 = alloca %"class.std::allocator.2"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %20, align 8
  store i64 %1, i64* %21, align 8
  store i8* %2, i8** %22, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %23, align 8
  %26 = load %"class.std::vector.0"*, %"class.std::vector.0"** %20, align 8
  %27 = bitcast %"class.std::vector.0"* %26 to %"struct.std::_Vector_base.1"*
  %28 = load i64, i64* %21, align 8
  %29 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %23, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %27, i64 %28, %"class.std::allocator.2"* dereferenceable(1) %29)
  %30 = load i64, i64* %21, align 8
  %31 = load i8*, i8** %22, align 8
  %32 = load i32, i32* @x.753
  %33 = load i32, i32* @y.754
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %99

; <label>:45:                                     ; preds = %19
  invoke void @_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc(%"class.std::vector.0"* %26, i64 %30, i8* dereferenceable(1) %31)
          to label %46 unwind label %47

; <label>:46:                                     ; preds = %45
  ret void

; <label>:47:                                     ; preds = %45
  %48 = load i32, i32* @x.753
  %49 = load i32, i32* @y.754
  %50 = sub i32 %48, 953857401
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 953857401
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %112

; <label>:74:                                     ; preds = %47, %112
  %75 = landingpad { i8*, i32 }
          cleanup
  %76 = extractvalue { i8*, i32 } %75, 0
  store i8* %76, i8** %24, align 8
  %77 = extractvalue { i8*, i32 } %75, 1
  store i32 %77, i32* %25, align 4
  %78 = bitcast %"class.std::vector.0"* %26 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %78) #3
  %79 = load i32, i32* @x.753
  %80 = load i32, i32* @y.754
  %81 = sub i32 %79, 1359527400
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 1359527400
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %112

; <label>:93:                                     ; preds = %74
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i8*, i8** %24, align 8
  %96 = load i32, i32* %25, align 4
  %97 = insertvalue { i8*, i32 } undef, i8* %95, 0
  %98 = insertvalue { i8*, i32 } %97, i32 %96, 1
  resume { i8*, i32 } %98

; <label>:99:                                     ; preds = %19, %4
  %100 = alloca %"class.std::vector.0"*, align 8
  %101 = alloca i64, align 8
  %102 = alloca i8*, align 8
  %103 = alloca %"class.std::allocator.2"*, align 8
  %104 = alloca i8*
  %105 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %100, align 8
  store i64 %1, i64* %101, align 8
  store i8* %2, i8** %102, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %103, align 8
  %106 = load %"class.std::vector.0"*, %"class.std::vector.0"** %100, align 8
  %107 = bitcast %"class.std::vector.0"* %106 to %"struct.std::_Vector_base.1"*
  %108 = load i64, i64* %101, align 8
  %109 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %103, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"* %107, i64 %108, %"class.std::allocator.2"* dereferenceable(1) %109)
  %110 = load i64, i64* %101, align 8
  %111 = load i8*, i8** %102, align 8
  br label %19

; <label>:112:                                    ; preds = %74, %47
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %24, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %25, align 4
  %116 = bitcast %"class.std::vector.0"* %26 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIcSaIcEED2Ev(%"struct.std::_Vector_base.1"* %116) #3
  br label %74
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.755
  %6 = load i32, i32* @y.756
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1013471037, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1013471037, label %18
    i32 2026550713, label %26
    i32 725092793, label %65
    i32 -169529194, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2026550713, i32 -169529194
  store i32 %25, i32* %14
  br label %79

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %28 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %27, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %1, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %28, align 8
  %29 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %31, i32 0, i32 0
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %30, i8** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %29, i32 0, i32 1
  %34 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %28, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %34, i32 0, i32 1
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %33, i8** dereferenceable(8) %35) #3
  %36 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %29, i32 0, i32 2
  %37 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %28, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %37, i32 0, i32 2
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %36, i8** dereferenceable(8) %38) #3
  %39 = load i32, i32* @x.755
  %40 = load i32, i32* @y.756
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 725092793, i32 -169529194
  store i32 %64, i32* %14
  br label %79

; <label>:65:                                     ; preds = %15
  ret void

; <label>:66:                                     ; preds = %15
  %67 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %68 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %67, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %1, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %68, align 8
  %69 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %68, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %71, i32 0, i32 0
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %70, i8** dereferenceable(8) %72) #3
  %73 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %69, i32 0, i32 1
  %74 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %68, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %74, i32 0, i32 1
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %73, i8** dereferenceable(8) %75) #3
  %76 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %69, i32 0, i32 2
  %77 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %68, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %77, i32 0, i32 2
  call void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8) %76, i8** dereferenceable(8) %78) #3
  store i32 2026550713, i32* %14
  br label %79

; <label>:79:                                     ; preds = %66, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIcSaIcEE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.757
  %6 = load i32, i32* @y.758
  %7 = add i32 %5, -234693926
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -234693926
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1626445027, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %91
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1626445027, label %19
    i32 393755324, label %39
    i32 -1190582240, label %71
    i32 1439395427, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %91

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 393755324, i32 1439395427
  store i32 %38, i32* %15
  br label %91

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %41 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %42 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast %"class.std::vector.0"* %41 to %"struct.std::_Vector_base.1"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = ptrtoint i8* %45 to i64
  %51 = ptrtoint i8* %49 to i64
  %52 = add i64 %50, 7126561333789986095
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, 7126561333789986095
  %55 = sub i64 %50, %51
  store i64 %54, i64* %2
  %56 = load i32, i32* @x.757
  %57 = load i32, i32* @y.758
  %58 = add i32 %56, 293993103
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 293993103
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1190582240, i32 1439395427
  store i32 %70, i32* %15
  br label %91

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %74, align 8
  %75 = load %"class.std::vector.0"*, %"class.std::vector.0"** %74, align 8
  %76 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i8*, i8** %78, align 8
  %80 = bitcast %"class.std::vector.0"* %75 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = ptrtoint i8* %79 to i64
  %85 = ptrtoint i8* %83 to i64
  %86 = shl i64 %84, %85
  %87 = add i64 %84, -5144024185437082080
  %88 = sub i64 %87, %85
  %89 = sub i64 %88, -5144024185437082080
  %90 = sub i64 %84, %85
  store i32 393755324, i32* %15
  br label %91

; <label>:91:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEcEvT_S7_RKT0_(i8*, i8*, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %4, i32 0, i32 0
  store i8* %0, i8** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  store i8* %1, i8** %10, align 8
  store i8* %2, i8** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %7, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i8* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %8, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = call i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i8* %19)
  %21 = load i8*, i8** %6, align 8
  call void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8* %15, i8* %20, i8* dereferenceable(1) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt6vectorIcSaIcEE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %2, i8** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  ret i8* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt6vectorIcSaIcEE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.763
  %6 = load i32, i32* @y.764
  %7 = sub i32 %5, -2139476619
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2139476619
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1243251815, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1243251815, label %19
    i32 -2109601300, label %39
    i32 1744936522, label %63
    i32 -724352818, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2109601300, i32 -724352818
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %40, i8** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %40, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  store i8* %47, i8** %2
  %48 = load i32, i32* @x.763
  %49 = load i32, i32* @y.764
  %50 = sub i32 %48, 942064892
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 942064892
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1744936522, i32 -724352818
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i8*, i8** %2
  ret i8* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %67 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %67, align 8
  %68 = load %"class.std::vector.0"*, %"class.std::vector.0"** %67, align 8
  %69 = bitcast %"class.std::vector.0"* %68 to %"struct.std::_Vector_base.1"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %70, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"* %66, i8** dereferenceable(8) %71) #3
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %66, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  store i32 -2109601300, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8*, i64, i8* dereferenceable(1), %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i8*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store i8* %0, i8** %5, align 8
  store i64 %1, i64* %6, align 8
  store i8* %2, i8** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load i8*, i8** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i8*, i8** %7, align 8
  %12 = call i8* @_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_(i8* %9, i64 %10, i8* dereferenceable(1) %11)
  ret i8* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE15_M_erase_at_endEPc(%"class.std::vector.0"*, i8*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i8* %1, i8** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load i8*, i8** %4, align 8
  %7 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  invoke void @_ZSt8_DestroyIPccEvT_S1_RSaIT0_E(i8* %6, i8* %10, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i8*, i8** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %16, i32 0, i32 1
  store i8* %14, i8** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = call i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i8*, i8** %6, align 8
  %11 = call i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8* %8, i64 %9, i8* dereferenceable(1) %10)
  ret i8* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEEC2EmRKS0_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implD2Ev(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.771
  %20 = load i32, i32* @y.772
  %21 = sub i32 %19, -68851550
  %22 = sub i32 %21, 1
  %23 = add i32 %22, -68851550
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %65

; <label>:45:                                     ; preds = %18, %65
  %46 = load i8*, i8** %7, align 8
  %47 = load i32, i32* %8, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  %50 = load i32, i32* @x.771
  %51 = load i32, i32* @y.772
  %52 = add i32 %50, 298324595
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 298324595
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %65

; <label>:64:                                     ; preds = %45
  resume { i8*, i32 } %49

; <label>:65:                                     ; preds = %45, %18
  %66 = load i8*, i8** %7, align 8
  %67 = load i32, i32* %8, align 4
  %68 = insertvalue { i8*, i32 } undef, i8* %66, 0
  %69 = insertvalue { i8*, i32 } %68, i32 %67, 1
  br label %45
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIcSaIcEE18_M_fill_initializeEmRKc(%"class.std::vector.0"*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i8*, i8** %6, align 8
  %14 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIcSaIcEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  %16 = call i8* @_ZSt24__uninitialized_fill_n_aIPcmccET_S1_T0_RKT1_RSaIT2_E(i8* %11, i64 %12, i8* dereferenceable(1) %13, %"class.std::allocator.2"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector.0"* %7 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %18, i32 0, i32 1
  store i8* %16, i8** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %0, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"*, %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaIcEC2ERKS_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 0
  store i8* null, i8** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 1
  store i8* null, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %5, i32 0, i32 2
  store i8* null, i8** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIcSaIcEE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.1"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %8, i32 0, i32 0
  store i8* %7, i8** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %13, i32 0, i32 1
  store i8* %12, i8** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl", %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %20, i32 0, i32 2
  store i8* %19, i8** %21, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt12_Vector_baseIcSaIcEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca %"struct.std::_Vector_base.1"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5, align 8
  store %"struct.std::_Vector_base.1"* %7, %"struct.std::_Vector_base.1"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1531845426, i32* %9
  %10 = alloca i8*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1531845426, label %14
    i32 1474636555, label %18
    i32 112564352, label %24
    i32 -1371238825, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1474636555, i32 112564352
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<char, std::allocator<char> >::_Vector_impl"* %20 to %"class.std::allocator.2"*
  %22 = load i64, i64* %6, align 8
  %23 = call i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %21, i64 %22)
  store i32 -1371238825, i32* %9
  store i8* %23, i8** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1371238825, i32* %9
  store i8* null, i8** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i8*, i8** %10
  ret i8* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt16allocator_traitsISaIcEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i8*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.781
  %7 = load i32, i32* @y.782
  %8 = add i32 %6, 35671790
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 35671790
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1728040622, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1728040622, label %20
    i32 1262524562, label %40
    i32 2099210223, label %73
    i32 -1040332307, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1262524562, i32 -1040332307
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %44 = bitcast %"class.std::allocator.2"* %43 to %"class.__gnu_cxx::new_allocator.3"*
  %45 = load i64, i64* %42, align 8
  %46 = call i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %44, i64 %45, i8* null)
  store i8* %46, i8** %3
  %47 = load i32, i32* @x.781
  %48 = load i32, i32* @y.782
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2099210223, i32 -1040332307
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile i8*, i8** %3
  ret i8* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator.2"*, align 8
  %77 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %76, align 8
  %79 = bitcast %"class.std::allocator.2"* %78 to %"class.__gnu_cxx::new_allocator.3"*
  %80 = load i64, i64* %77, align 8
  %81 = call i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %79, i64 %80, i8* null)
  store i32 1262524562, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -103888160, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %26
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -103888160, label %16
    i32 -1767528595, label %21
    i32 -614678112, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %26

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1767528595, i32 -614678112
  store i32 %20, i32* %12
  br label %26

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 1
  %25 = call i8* @_Znwm(i64 %24)
  ret i8* %25

; <label>:26:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 -1
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPcEvRT_S2_(i8** dereferenceable(8), i8** dereferenceable(8)) #4 comdat {
  %3 = alloca i8**, align 8
  %4 = alloca i8**, align 8
  %5 = alloca i8*, align 8
  store i8** %0, i8*** %3, align 8
  store i8** %1, i8*** %4, align 8
  %6 = load i8**, i8*** %3, align 8
  %7 = call dereferenceable(8) i8** @_ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_(i8** dereferenceable(8) %6) #3
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %5, align 8
  %9 = load i8**, i8*** %4, align 8
  %10 = call dereferenceable(8) i8** @_ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_(i8** dereferenceable(8) %9) #3
  %11 = load i8*, i8** %10, align 8
  %12 = load i8**, i8*** %3, align 8
  store i8* %11, i8** %12, align 8
  %13 = call dereferenceable(8) i8** @_ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_(i8** dereferenceable(8) %5) #3
  %14 = load i8*, i8** %13, align 8
  %15 = load i8**, i8*** %4, align 8
  store i8* %14, i8** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZSt4moveIRPcEONSt16remove_referenceIT_E4typeEOS3_(i8** dereferenceable(8)) #4 comdat {
  %2 = alloca i8**, align 8
  store i8** %0, i8*** %2, align 8
  %3 = load i8**, i8*** %2, align 8
  ret i8** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8*, i8*, i8* dereferenceable(1)) #4 comdat {
  %4 = alloca i64
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = alloca i8*, align 8
  %8 = alloca i8, align 1
  %9 = alloca i64, align 8
  store i8* %0, i8** %5, align 8
  store i8* %1, i8** %6, align 8
  store i8* %2, i8** %7, align 8
  %10 = load i8*, i8** %7, align 8
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %8, align 1
  %12 = load i8*, i8** %6, align 8
  %13 = load i8*, i8** %5, align 8
  %14 = ptrtoint i8* %12 to i64
  %15 = ptrtoint i8* %13 to i64
  %16 = sub i64 %14, 4024147078025360305
  %17 = sub i64 %16, %15
  %18 = add i64 %17, 4024147078025360305
  %19 = sub i64 %14, %15
  store i64 %18, i64* %9, align 8
  %20 = load i64, i64* %9, align 8
  store i64 %20, i64* %4
  %21 = alloca i32
  store i32 -1919885306, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %86
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1919885306, label %25
    i32 800031038, label %29
    i32 468675211, label %45
    i32 479410172, label %78
    i32 1873747178, label %79
    i32 746692609, label %80
  ]

; <label>:24:                                     ; preds = %22
  br label %86

; <label>:25:                                     ; preds = %22
  %26 = load volatile i64, i64* %4
  %27 = icmp ne i64 %26, 0
  %28 = select i1 %27, i32 800031038, i32 1873747178
  store i32 %28, i32* %21
  br label %86

; <label>:29:                                     ; preds = %22
  %30 = load i32, i32* @x.791
  %31 = load i32, i32* @y.792
  %32 = add i32 %30, 698575208
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 698575208
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 468675211, i32 746692609
  store i32 %44, i32* %21
  br label %86

; <label>:45:                                     ; preds = %22
  %46 = load i8*, i8** %5, align 8
  %47 = load i8, i8* %8, align 1
  %48 = zext i8 %47 to i32
  %49 = trunc i32 %48 to i8
  %50 = load i64, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* %46, i8 %49, i64 %50, i32 1, i1 false)
  %51 = load i32, i32* @x.791
  %52 = load i32, i32* @y.792
  %53 = add i32 %51, -1991562610
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1991562610
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 479410172, i32 746692609
  store i32 %77, i32* %21
  br label %86

; <label>:78:                                     ; preds = %22
  store i32 1873747178, i32* %21
  br label %86

; <label>:79:                                     ; preds = %22
  ret void

; <label>:80:                                     ; preds = %22
  %81 = load i8*, i8** %5, align 8
  %82 = load i8, i8* %8, align 1
  %83 = zext i8 %82 to i32
  %84 = trunc i32 %83 to i8
  %85 = load i64, i64* %9, align 8
  call void @llvm.memset.p0i8.i64(i8* %81, i8 %84, i64 %85, i32 1, i1 false)
  store i32 468675211, i32* %21
  br label %86

; <label>:86:                                     ; preds = %80, %78, %45, %29, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.793
  %6 = load i32, i32* @y.794
  %7 = add i32 %5, -590324843
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -590324843
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1524010654, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1524010654, label %19
    i32 173506845, label %27
    i32 -801301257, label %63
    i32 1729070601, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 173506845, i32 1729070601
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %28, i32 0, i32 0
  store i8* %0, i8** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %29, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEELb1EE7_S_baseES6_(i8* %34)
  store i8* %35, i8** %2
  %36 = load i32, i32* @x.793
  %37 = load i32, i32* @y.794
  %38 = sub i32 %36, 822508704
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 822508704
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -801301257, i32 1729070601
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  %64 = load volatile i8*, i8** %2
  ret i8* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %66, i32 0, i32 0
  store i8* %0, i8** %68, align 8
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %67 to i8*
  %70 = bitcast %"class.__gnu_cxx::__normal_iterator.34"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %69, i8* %70, i64 8, i32 8, i1 false)
  %71 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %67, i32 0, i32 0
  %72 = load i8*, i8** %71, align 8
  %73 = call i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEELb1EE7_S_baseES6_(i8* %72)
  store i32 173506845, i32* %15
  br label %74

; <label>:74:                                     ; preds = %65, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEELb1EE7_S_baseES6_(i8*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %2, i32 0, i32 0
  store i8* %0, i8** %3, align 8
  %4 = call dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"* %2) #3
  %5 = load i8*, i8** %4, align 8
  ret i8* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i8** @_ZNK9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.34"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %3, i32 0, i32 0
  ret i8** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPcSt6vectorIcSaIcEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.34"*, i8** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.34"*, align 8
  %4 = alloca i8**, align 8
  store %"class.__gnu_cxx::__normal_iterator.34"* %0, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  store i8** %1, i8*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.34"*, %"class.__gnu_cxx::__normal_iterator.34"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.34", %"class.__gnu_cxx::__normal_iterator.34"* %5, i32 0, i32 0
  %7 = load i8**, i8*** %4, align 8
  %8 = load i8*, i8** %7, align 8
  store i8* %8, i8** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt20uninitialized_fill_nIPcmcET_S1_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.801
  %8 = load i32, i32* @y.802
  %9 = add i32 %7, -1042721913
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1042721913
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -530468698, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -530468698, label %21
    i32 302859682, label %29
    i32 -1649100710, label %64
    i32 -1328500653, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 302859682, i32 -1328500653
  store i32 %28, i32* %17
  br label %75

; <label>:29:                                     ; preds = %18
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8*, align 8
  %33 = alloca i8, align 1
  store i8* %0, i8** %30, align 8
  store i64 %1, i64* %31, align 8
  store i8* %2, i8** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i8*, i8** %30, align 8
  %35 = load i64, i64* %31, align 8
  %36 = load i8*, i8** %32, align 8
  %37 = call i8* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_(i8* %34, i64 %35, i8* dereferenceable(1) %36)
  store i8* %37, i8** %4
  %38 = load i32, i32* @x.801
  %39 = load i32, i32* @y.802
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1649100710, i32 -1328500653
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile i8*, i8** %4
  ret i8* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i8*, align 8
  %68 = alloca i64, align 8
  %69 = alloca i8*, align 8
  %70 = alloca i8, align 1
  store i8* %0, i8** %67, align 8
  store i64 %1, i64* %68, align 8
  store i8* %2, i8** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i8*, i8** %67, align 8
  %72 = load i64, i64* %68, align 8
  %73 = load i8*, i8** %69, align 8
  %74 = call i8* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_(i8* %71, i64 %72, i8* dereferenceable(1) %73)
  store i32 302859682, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPcmcEET_S3_T0_RKT1_(i8*, i64, i8* dereferenceable(1)) #0 comdat align 2 {
  %4 = alloca i8*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.803
  %8 = load i32, i32* @y.804
  %9 = add i32 %7, -668727084
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -668727084
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 716240222, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %62
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 716240222, label %21
    i32 -1232968548, label %29
    i32 81121550, label %52
    i32 -1314005416, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %62

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1232968548, i32 -1314005416
  store i32 %28, i32* %17
  br label %62

; <label>:29:                                     ; preds = %18
  %30 = alloca i8*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i8*, align 8
  store i8* %0, i8** %30, align 8
  store i64 %1, i64* %31, align 8
  store i8* %2, i8** %32, align 8
  %33 = load i8*, i8** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = load i8*, i8** %32, align 8
  %36 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %33, i64 %34, i8* dereferenceable(1) %35)
  store i8* %36, i8** %4
  %37 = load i32, i32* @x.803
  %38 = load i32, i32* @y.804
  %39 = add i32 %37, -1075767319
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1075767319
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 81121550, i32 -1314005416
  store i32 %51, i32* %17
  br label %62

; <label>:52:                                     ; preds = %18
  %53 = load volatile i8*, i8** %4
  ret i8* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i8*, align 8
  %56 = alloca i64, align 8
  %57 = alloca i8*, align 8
  store i8* %0, i8** %55, align 8
  store i64 %1, i64* %56, align 8
  store i8* %2, i8** %57, align 8
  %58 = load i8*, i8** %55, align 8
  %59 = load i64, i64* %56, align 8
  %60 = load i8*, i8** %57, align 8
  %61 = call i8* @_ZSt6fill_nIPcmcET_S1_T0_RKT1_(i8* %58, i64 %59, i8* dereferenceable(1) %60)
  store i32 -1232968548, i32* %17
  br label %62

; <label>:62:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZSt10__fill_n_aImcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT0_EE7__valueEPS2_E6__typeES3_T_RKS2_(i8*, i64, i8* dereferenceable(1)) #4 comdat {
  %4 = alloca i8*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i8*, align 8
  store i8* %0, i8** %4, align 8
  store i64 %1, i64* %5, align 8
  store i8* %2, i8** %6, align 8
  %7 = load i8*, i8** %4, align 8
  %8 = load i8*, i8** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 %9
  %11 = load i8*, i8** %6, align 8
  call void @_ZSt8__fill_aIcEN9__gnu_cxx11__enable_ifIXsr9__is_byteIT_EE7__valueEvE6__typeEPS2_S5_RKS2_(i8* %7, i8* %10, i8* dereferenceable(1) %11)
  %12 = load i8*, i8** %4, align 8
  %13 = load i64, i64* %5, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 %13
  ret i8* %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i8* @_ZSt12__niter_baseIPcENSt11_Niter_baseIT_E13iterator_typeES2_(i8*) #0 comdat {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.807
  %6 = load i32, i32* @y.808
  %7 = sub i32 %5, -1444982974
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1444982974
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1969144671, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1969144671, label %19
    i32 -1146154940, label %27
    i32 1123650268, label %46
    i32 895001214, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1146154940, i32 895001214
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i8*, align 8
  store i8* %0, i8** %28, align 8
  %29 = load i8*, i8** %28, align 8
  %30 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %29)
  store i8* %30, i8** %2
  %31 = load i32, i32* @x.807
  %32 = load i32, i32* @y.808
  %33 = sub i32 %31, 131613600
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 131613600
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1123650268, i32 895001214
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i8*, i8** %2
  ret i8* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca i8*, align 8
  store i8* %0, i8** %49, align 8
  %50 = load i8*, i8** %49, align 8
  %51 = call i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8* %50)
  store i32 -1146154940, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i8* @_ZNSt10_Iter_baseIPcLb0EE7_S_baseES0_(i8*) #4 comdat align 2 {
  %2 = alloca i8*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.809
  %6 = load i32, i32* @y.810
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1593232440, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1593232440, label %18
    i32 -1488660628, label %26
    i32 743076569, label %55
    i32 165252077, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1488660628, i32 165252077
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca i8*, align 8
  store i8* %0, i8** %27, align 8
  %28 = load i8*, i8** %27, align 8
  store i8* %28, i8** %2
  %29 = load i32, i32* @x.809
  %30 = load i32, i32* @y.810
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 743076569, i32 165252077
  store i32 %54, i32* %14
  br label %60

; <label>:55:                                     ; preds = %15
  %56 = load volatile i8*, i8** %2
  ret i8* %56

; <label>:57:                                     ; preds = %15
  %58 = alloca i8*, align 8
  store i8* %0, i8** %58, align 8
  %59 = load i8*, i8** %58, align 8
  store i32 -1488660628, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.33"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.811
  %7 = load i32, i32* @y.812
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1133016066, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1133016066, label %19
    i32 -84677614, label %27
    i32 1497705939, label %64
    i32 -1130381923, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -84677614, i32 -1130381923
  store i32 %26, i32* %15
  br label %76

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %1, %"class.__gnu_cxx::__normal_iterator.33"** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  %31 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %30) #3
  %32 = load i32*, i32** %31, align 8
  %33 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %29, align 8
  %34 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %33) #3
  %35 = load i32*, i32** %34, align 8
  %36 = icmp ne i32* %32, %35
  store i1 %36, i1* %3
  %37 = load i32, i32* @x.811
  %38 = load i32, i32* @y.812
  %39 = sub i32 %37, -2113584314
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -2113584314
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1497705939, i32 -1130381923
  store i32 %63, i32* %15
  br label %76

; <label>:64:                                     ; preds = %16
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %16
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %1, %"class.__gnu_cxx::__normal_iterator.33"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %67, align 8
  %70 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %69) #3
  %71 = load i32*, i32** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %68, align 8
  %73 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.33"* %72) #3
  %74 = load i32*, i32** %73, align 8
  %75 = icmp ne i32* %71, %74
  store i32 -84677614, i32* %15
  br label %76

; <label>:76:                                     ; preds = %66, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator.33"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.813
  %6 = load i32, i32* @y.814
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1569172079, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1569172079, label %18
    i32 2023281325, label %38
    i32 2043876095, label %70
    i32 -1697067866, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2023281325, i32 -1697067866
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %39, align 8
  %40 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %39, align 8
  %41 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %40, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.813
  %44 = load i32, i32* @y.814
  %45 = sub i32 %43, 485019958
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 485019958
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 2043876095, i32 -1697067866
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %74, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  store i32 2023281325, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.33"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator.33"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.33"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.815
  %6 = load i32, i32* @y.816
  %7 = add i32 %5, 7704226
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 7704226
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 675780152, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 675780152, label %19
    i32 -62420161, label %27
    i32 86207331, label %49
    i32 -1965560079, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -62420161, i32 -1965560079
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %29, %"class.__gnu_cxx::__normal_iterator.33"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %30, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %33, i32** %31, align 8
  %34 = load i32, i32* @x.815
  %35 = load i32, i32* @y.816
  %36 = sub i32 %34, -1247823614
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1247823614
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 86207331, i32 -1965560079
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %2
  ret %"class.__gnu_cxx::__normal_iterator.33"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator.33"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.33"* %0, %"class.__gnu_cxx::__normal_iterator.33"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator.33"*, %"class.__gnu_cxx::__normal_iterator.33"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.33", %"class.__gnu_cxx::__normal_iterator.33"* %53, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i32 1
  store i32* %56, i32** %54, align 8
  store i32 -62420161, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEE9_M_insertIJRKiEEEvSt14_List_iteratorIiEDpOT_(%"class.std::__cxx11::list"*, %"struct.std::__detail::_List_node_base"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.817
  %7 = load i32, i32* @y.818
  %8 = sub i32 %6, -1036932771
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1036932771
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -46939014, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %85
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -46939014, label %20
    i32 -1415858743, label %40
    i32 1661066958, label %69
    i32 1820639914, label %70
  ]

; <label>:19:                                     ; preds = %17
  br label %85

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1415858743, i32 1820639914
  store i32 %39, i32* %16
  br label %85

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_List_iterator", align 8
  %42 = alloca %"class.std::__cxx11::list"*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"struct.std::_List_node.28"*, align 8
  %45 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %41, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %45, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %42, align 8
  store i32* %2, i32** %43, align 8
  %46 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %47) #3
  %49 = call %"struct.std::_List_node.28"* @_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_(%"class.std::__cxx11::list"* %46, i32* dereferenceable(4) %48)
  store %"struct.std::_List_node.28"* %49, %"struct.std::_List_node.28"** %44, align 8
  %50 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %44, align 8
  %51 = bitcast %"struct.std::_List_node.28"* %50 to %"struct.std::__detail::_List_node_base"*
  %52 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %41, i32 0, i32 0
  %53 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %52, align 8
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* %51, %"struct.std::__detail::_List_node_base"* %53) #3
  %54 = bitcast %"class.std::__cxx11::list"* %46 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* %54, i64 1)
  %55 = load i32, i32* @x.817
  %56 = load i32, i32* @y.818
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 1661066958, i32 1820639914
  store i32 %68, i32* %16
  br label %85

; <label>:69:                                     ; preds = %17
  ret void

; <label>:70:                                     ; preds = %17
  %71 = alloca %"struct.std::_List_iterator", align 8
  %72 = alloca %"class.std::__cxx11::list"*, align 8
  %73 = alloca i32*, align 8
  %74 = alloca %"struct.std::_List_node.28"*, align 8
  %75 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %71, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %75, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %72, align 8
  store i32* %2, i32** %73, align 8
  %76 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %72, align 8
  %77 = load i32*, i32** %73, align 8
  %78 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %77) #3
  %79 = call %"struct.std::_List_node.28"* @_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_(%"class.std::__cxx11::list"* %76, i32* dereferenceable(4) %78)
  store %"struct.std::_List_node.28"* %79, %"struct.std::_List_node.28"** %74, align 8
  %80 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %74, align 8
  %81 = bitcast %"struct.std::_List_node.28"* %80 to %"struct.std::__detail::_List_node_base"*
  %82 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %71, i32 0, i32 0
  %83 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %82, align 8
  call void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"* %81, %"struct.std::__detail::_List_node_base"* %83) #3
  %84 = bitcast %"class.std::__cxx11::list"* %76 to %"class.std::__cxx11::_List_base"*
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"* %84, i64 1)
  store i32 -1415858743, i32* %16
  br label %85

; <label>:85:                                     ; preds = %70, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE3endEv(%"class.std::__cxx11::list"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator", align 8
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %5 = bitcast %"class.std::__cxx11::list"* %4 to %"class.std::__cxx11::_List_base"*
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_List_node"* %7 to %"struct.std::__detail::_List_node_base"*
  call void @_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* %2, %"struct.std::__detail::_List_node_base"* %8) #3
  %9 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  ret %"struct.std::__detail::_List_node_base"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node.28"* @_ZNSt7__cxx114listIiSaIiEE14_M_create_nodeIJRKiEEEPSt10_List_nodeIiEDpOT_(%"class.std::__cxx11::list"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca %"struct.std::_List_node.28"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  store i32* %1, i32** %4, align 8
  %8 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %9 = bitcast %"class.std::__cxx11::list"* %8 to %"class.std::__cxx11::_List_base"*
  %10 = call %"struct.std::_List_node.28"* @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"* %9)
  store %"struct.std::_List_node.28"* %10, %"struct.std::_List_node.28"** %5, align 8
  %11 = bitcast %"class.std::__cxx11::list"* %8 to %"class.std::__cxx11::_List_base"*
  %12 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %11) #3
  %13 = bitcast %"class.std::allocator.15"* %12 to %"class.__gnu_cxx::new_allocator.16"*
  %14 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  %15 = load i32*, i32** %4, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %15) #3
  invoke void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIS2_JRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"* %13, %"struct.std::_List_node.28"* %14, i32* dereferenceable(4) %16)
          to label %17 unwind label %58

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.821
  %19 = load i32, i32* @y.822
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %184

; <label>:31:                                     ; preds = %17, %184
  %32 = load i32, i32* @x.821
  %33 = load i32, i32* @y.822
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %184

; <label>:57:                                     ; preds = %31
  br label %144

; <label>:58:                                     ; preds = %2
  %59 = load i32, i32* @x.821
  %60 = load i32, i32* @y.822
  %61 = sub i32 %59, 1575996633
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1575996633
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %185

; <label>:73:                                     ; preds = %58, %185
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %6, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %7, align 4
  %77 = load i32, i32* @x.821
  %78 = load i32, i32* @y.822
  %79 = add i32 %77, 850833379
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, 850833379
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %185

; <label>:103:                                    ; preds = %73
  br label %104

; <label>:104:                                    ; preds = %103
  %105 = load i32, i32* @x.821
  %106 = load i32, i32* @y.822
  %107 = sub i32 %105, 1647665378
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 1647665378
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = and i1 %113, %114
  %116 = xor i1 %113, %114
  %117 = or i1 %115, %116
  %118 = or i1 %113, %114
  br i1 %117, label %119, label %189

; <label>:119:                                    ; preds = %104, %189
  %120 = load i8*, i8** %6, align 8
  %121 = call i8* @__cxa_begin_catch(i8* %120) #3
  %122 = bitcast %"class.std::__cxx11::list"* %8 to %"class.std::__cxx11::_List_base"*
  %123 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE(%"class.std::__cxx11::_List_base"* %122, %"struct.std::_List_node.28"* %123) #3
  %124 = load i32, i32* @x.821
  %125 = load i32, i32* @y.822
  %126 = sub i32 %124, 1407958783
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1407958783
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %189

; <label>:138:                                    ; preds = %119
  invoke void @__cxa_rethrow() #12
          to label %154 unwind label %139

; <label>:139:                                    ; preds = %138
  %140 = landingpad { i8*, i32 }
          cleanup
  %141 = extractvalue { i8*, i32 } %140, 0
  store i8* %141, i8** %6, align 8
  %142 = extractvalue { i8*, i32 } %140, 1
  store i32 %142, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %143 unwind label %151

; <label>:143:                                    ; preds = %139
  br label %146

; <label>:144:                                    ; preds = %57
  %145 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  ret %"struct.std::_List_node.28"* %145

; <label>:146:                                    ; preds = %143
  %147 = load i8*, i8** %6, align 8
  %148 = load i32, i32* %7, align 4
  %149 = insertvalue { i8*, i32 } undef, i8* %147, 0
  %150 = insertvalue { i8*, i32 } %149, i32 %148, 1
  resume { i8*, i32 } %150

; <label>:151:                                    ; preds = %139
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  call void @__clang_call_terminate(i8* %153) #11
  unreachable

; <label>:154:                                    ; preds = %138
  %155 = load i32, i32* @x.821
  %156 = load i32, i32* @y.822
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %194

; <label>:168:                                    ; preds = %154, %194
  %169 = load i32, i32* @x.821
  %170 = load i32, i32* @y.822
  %171 = sub i32 %169, 1157429413
  %172 = sub i32 %171, 1
  %173 = add i32 %172, 1157429413
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %194

; <label>:183:                                    ; preds = %168
  unreachable

; <label>:184:                                    ; preds = %31, %17
  br label %31

; <label>:185:                                    ; preds = %73, %58
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  store i8* %187, i8** %6, align 8
  %188 = extractvalue { i8*, i32 } %186, 1
  store i32 %188, i32* %7, align 4
  br label %73

; <label>:189:                                    ; preds = %119, %104
  %190 = load i8*, i8** %6, align 8
  %191 = call i8* @__cxa_begin_catch(i8* %190) #3
  %192 = bitcast %"class.std::__cxx11::list"* %8 to %"class.std::__cxx11::_List_base"*
  %193 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE(%"class.std::__cxx11::_List_base"* %192, %"struct.std::_List_node.28"* %193) #3
  br label %119

; <label>:194:                                    ; preds = %168, %154
  br label %168
}

; Function Attrs: nounwind
declare void @_ZNSt8__detail15_List_node_base7_M_hookEPS0_(%"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"*) #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_inc_sizeEm(%"class.std::__cxx11::_List_base"*, i64) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.823
  %6 = load i32, i32* @y.824
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 211399726, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 211399726, label %18
    i32 -295591596, label %26
    i32 1281522542, label %53
    i32 -103994006, label %54
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -295591596, i32 -103994006
  store i32 %25, i32* %14
  br label %84

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %28 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %27, align 8
  store i64 %1, i64* %28, align 8
  %29 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %27, align 8
  %30 = load i64, i64* %28, align 8
  %31 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %29, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %32, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = sub i64 0, %30
  %36 = sub i64 %34, %35
  %37 = add i64 %34, %30
  store i64 %36, i64* %33, align 8
  %38 = load i32, i32* @x.823
  %39 = load i32, i32* @y.824
  %40 = add i32 %38, -1509466813
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1509466813
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1281522542, i32 -103994006
  store i32 %52, i32* %14
  br label %84

; <label>:53:                                     ; preds = %15
  ret void

; <label>:54:                                     ; preds = %15
  %55 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %56 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %55, align 8
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %55, align 8
  %58 = load i64, i64* %56, align 8
  %59 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %57, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %60, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = sub i64 %62, -640120811027280179
  %64 = sub i64 %63, %58
  %65 = add i64 %64, -640120811027280179
  %66 = sub i64 %62, %58
  %67 = mul i64 %65, %58
  %68 = shl i64 %62, %58
  %69 = shl i64 %62, %58
  %70 = shl i64 %62, %58
  %71 = sub i64 0, %58
  %72 = add i64 %62, %71
  %73 = sub i64 %62, %58
  %74 = mul i64 %72, %58
  %75 = add i64 %62, 2766970900894415308
  %76 = sub i64 %75, %58
  %77 = sub i64 %76, 2766970900894415308
  %78 = sub i64 %62, %58
  %79 = mul i64 %77, %58
  %80 = shl i64 %62, %58
  %81 = sub i64 0, %58
  %82 = sub i64 %62, %81
  %83 = add i64 %62, %58
  store i64 %82, i64* %61, align 8
  store i32 -295591596, i32* %14
  br label %84

; <label>:84:                                     ; preds = %54, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node.28"* @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_get_nodeEv(%"class.std::__cxx11::_List_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::__cxx11::_List_base"*, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %2, align 8
  %3 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %4 to %"class.std::allocator.15"*
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = call %"struct.std::_List_node.28"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 1, i8* null)
  ret %"struct.std::_List_node.28"* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE9constructIS2_JRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.16"*, %"struct.std::_List_node.28"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.827
  %7 = load i32, i32* @y.828
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1433903490, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1433903490, label %19
    i32 -73638870, label %39
    i32 133977344, label %63
    i32 -445382363, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -73638870, i32 -445382363
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %41 = alloca %"struct.std::_List_node.28"*, align 8
  %42 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %41, align 8
  store i32* %2, i32** %42, align 8
  %43 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %40, align 8
  %44 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %41, align 8
  %45 = bitcast %"struct.std::_List_node.28"* %44 to i8*
  %46 = bitcast i8* %45 to %"struct.std::_List_node.28"*
  %47 = load i32*, i32** %42, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %47) #3
  call void @_ZNSt10_List_nodeIiEC2IJRKiEEEDpOT_(%"struct.std::_List_node.28"* %46, i32* dereferenceable(4) %48)
  %49 = load i32, i32* @x.827
  %50 = load i32, i32* @y.828
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 133977344, i32 -445382363
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %66 = alloca %"struct.std::_List_node.28"*, align 8
  %67 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %65, align 8
  store %"struct.std::_List_node.28"* %1, %"struct.std::_List_node.28"** %66, align 8
  store i32* %2, i32** %67, align 8
  %68 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %65, align 8
  %69 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %66, align 8
  %70 = bitcast %"struct.std::_List_node.28"* %69 to i8*
  %71 = bitcast i8* %70 to %"struct.std::_List_node.28"*
  %72 = load i32*, i32** %67, align 8
  %73 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %72) #3
  call void @_ZNSt10_List_nodeIiEC2IJRKiEEEDpOT_(%"struct.std::_List_node.28"* %71, i32* dereferenceable(4) %73)
  store i32 -73638870, i32* %15
  br label %74

; <label>:74:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::_List_node.28"* @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"struct.std::_List_node.28"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 2051907852, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %100
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2051907852, label %17
    i32 -1208376247, label %22
    i32 -1963797658, label %23
    i32 -1108264115, label %51
    i32 -658374961, label %71
    i32 -125236926, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %100

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1208376247, i32 -1963797658
  store i32 %21, i32* %13
  br label %100

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.829
  %25 = load i32, i32* @y.830
  %26 = add i32 %24, 1831018662
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 1831018662
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -1108264115, i32 -125236926
  store i32 %50, i32* %13
  br label %100

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 24
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"struct.std::_List_node.28"*
  store %"struct.std::_List_node.28"* %55, %"struct.std::_List_node.28"** %4
  %56 = load i32, i32* @x.829
  %57 = load i32, i32* @y.830
  %58 = add i32 %56, 1903550600
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1903550600
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -658374961, i32 -125236926
  store i32 %70, i32* %13
  br label %100

; <label>:71:                                     ; preds = %14
  %72 = load volatile %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %4
  ret %"struct.std::_List_node.28"* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = sub i64 0, -3096650314085093792
  %76 = sub i64 %75, %74
  %77 = add i64 %76, -3096650314085093792
  %78 = sub i64 0, %74
  %79 = sub i64 %77, 46886053673240627
  %80 = add i64 %79, 24
  %81 = add i64 %80, 46886053673240627
  %82 = add i64 %77, 24
  %83 = add i64 0, -4750202740665789702
  %84 = sub i64 %83, %74
  %85 = sub i64 %84, -4750202740665789702
  %86 = sub i64 0, %74
  %87 = sub i64 0, %85
  %88 = sub i64 0, 24
  %89 = add i64 %87, %88
  %90 = sub i64 0, %89
  %91 = add i64 %85, 24
  %92 = add i64 %74, -5770880789125236572
  %93 = sub i64 %92, 24
  %94 = sub i64 %93, -5770880789125236572
  %95 = sub i64 %74, 24
  %96 = mul i64 %94, 24
  %97 = mul i64 %74, 24
  %98 = call i8* @_Znwm(i64 %97)
  %99 = bitcast i8* %98 to %"struct.std::_List_node.28"*
  store i32 -1108264115, i32* %13
  br label %100

; <label>:100:                                    ; preds = %73, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt10_List_nodeIiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_List_nodeIiEC2IJRKiEEEDpOT_(%"struct.std::_List_node.28"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_List_node.28"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_List_node.28"* %0, %"struct.std::_List_node.28"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %3, align 8
  %6 = bitcast %"struct.std::_List_node.28"* %5 to %"struct.std::__detail::_List_node_base"*
  %7 = bitcast %"struct.std::__detail::_List_node_base"* %6 to i8*
  %8 = getelementptr inbounds i8, i8* %7, i64 0
  call void @llvm.memset.p0i8.i64(i8* %8, i8 0, i64 16, i32 8, i1 false)
  %9 = getelementptr inbounds %"struct.std::_List_node.28", %"struct.std::_List_node.28"* %5, i32 0, i32 1
  %10 = load i32*, i32** %4, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %9, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"*, %"struct.std::__detail::_List_node_base"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.835
  %6 = load i32, i32* @y.836
  %7 = sub i32 %5, 1591851120
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1591851120
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1112811742, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1112811742, label %19
    i32 -532203782, label %39
    i32 2037191984, label %60
    i32 1038412206, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -532203782, i32 1038412206
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_List_iterator"*, align 8
  %41 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %40, align 8
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %41, align 8
  %42 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %42, i32 0, i32 0
  %44 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %41, align 8
  store %"struct.std::__detail::_List_node_base"* %44, %"struct.std::__detail::_List_node_base"** %43, align 8
  %45 = load i32, i32* @x.835
  %46 = load i32, i32* @y.836
  %47 = sub i32 %45, 838961652
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 838961652
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 2037191984, i32 1038412206
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_List_iterator"*, align 8
  %63 = alloca %"struct.std::__detail::_List_node_base"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %62, align 8
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %63, align 8
  %64 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %62, align 8
  %65 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %64, i32 0, i32 0
  %66 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %63, align 8
  store %"struct.std::__detail::_List_node_base"* %66, %"struct.std::__detail::_List_node_base"** %65, align 8
  store i32 -532203782, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.837
  %11 = load i32, i32* @y.838
  %12 = add i32 %10, -682064666
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -682064666
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 405433279, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %155
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 405433279, label %24
    i32 -734214784, label %44
    i32 767649252, label %72
    i32 1738074459, label %75
    i32 -1349542282, label %79
    i32 -795438415, label %83
    i32 -289019979, label %111
    i32 430677096, label %141
    i32 1446892373, label %143
    i32 1394915322, label %152
  ]

; <label>:23:                                     ; preds = %21
  br label %155

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -734214784, i32 1446892373
  store i32 %43, i32* %20
  br label %155

; <label>:44:                                     ; preds = %21
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %7
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %6
  %47 = alloca i64*, align 8
  store i64** %47, i64*** %5
  %48 = load volatile i64**, i64*** %6
  store i64* %0, i64** %48, align 8
  %49 = load volatile i64**, i64*** %5
  store i64* %1, i64** %49, align 8
  %50 = load volatile i64**, i64*** %5
  %51 = load i64*, i64** %50, align 8
  %52 = load i64, i64* %51, align 8
  %53 = load volatile i64**, i64*** %6
  %54 = load i64*, i64** %53, align 8
  %55 = load i64, i64* %54, align 8
  %56 = icmp slt i64 %52, %55
  store i1 %56, i1* %4
  %57 = load i32, i32* @x.837
  %58 = load i32, i32* @y.838
  %59 = add i32 %57, -427646973
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -427646973
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 767649252, i32 1446892373
  store i32 %71, i32* %20
  br label %155

; <label>:72:                                     ; preds = %21
  %73 = load volatile i1, i1* %4
  %74 = select i1 %73, i32 1738074459, i32 -1349542282
  store i32 %74, i32* %20
  br label %155

; <label>:75:                                     ; preds = %21
  %76 = load volatile i64**, i64*** %5
  %77 = load i64*, i64** %76, align 8
  %78 = load volatile i64**, i64*** %7
  store i64* %77, i64** %78, align 8
  store i32 -795438415, i32* %20
  br label %155

; <label>:79:                                     ; preds = %21
  %80 = load volatile i64**, i64*** %6
  %81 = load i64*, i64** %80, align 8
  %82 = load volatile i64**, i64*** %7
  store i64* %81, i64** %82, align 8
  store i32 -795438415, i32* %20
  br label %155

; <label>:83:                                     ; preds = %21
  %84 = load i32, i32* @x.837
  %85 = load i32, i32* @y.838
  %86 = add i32 %84, 146365637
  %87 = sub i32 %86, 1
  %88 = sub i32 %87, 146365637
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 -289019979, i32 1394915322
  store i32 %110, i32* %20
  br label %155

; <label>:111:                                    ; preds = %21
  %112 = load volatile i64**, i64*** %7
  %113 = load i64*, i64** %112, align 8
  store i64* %113, i64** %3
  %114 = load i32, i32* @x.837
  %115 = load i32, i32* @y.838
  %116 = sub i32 %114, 1032777892
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 1032777892
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  %140 = select i1 %138, i32 430677096, i32 1394915322
  store i32 %140, i32* %20
  br label %155

; <label>:141:                                    ; preds = %21
  %142 = load volatile i64*, i64** %3
  ret i64* %142

; <label>:143:                                    ; preds = %21
  %144 = alloca i64*, align 8
  %145 = alloca i64*, align 8
  %146 = alloca i64*, align 8
  store i64* %0, i64** %145, align 8
  store i64* %1, i64** %146, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = load i64*, i64** %145, align 8
  %150 = load i64, i64* %149, align 8
  %151 = icmp slt i64 %148, %150
  store i32 -734214784, i32* %20
  br label %155

; <label>:152:                                    ; preds = %21
  %153 = load volatile i64**, i64*** %7
  %154 = load i64*, i64** %153, align 8
  store i32 -289019979, i32* %20
  br label %155

; <label>:155:                                    ; preds = %152, %143, %111, %83, %79, %75, %72, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5beginEv(%"class.std::__cxx11::list"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator", align 8
  %3 = alloca %"class.std::__cxx11::list"*, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %3, align 8
  %4 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %3, align 8
  %5 = bitcast %"class.std::__cxx11::list"* %4 to %"class.std::__cxx11::_List_base"*
  %6 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %6, i32 0, i32 0
  %8 = bitcast %"struct.std::_List_node"* %7 to %"struct.std::__detail::_List_node_base"*
  %9 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  call void @_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* %2, %"struct.std::__detail::_List_node_base"* %10) #3
  %11 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
  ret %"struct.std::__detail::_List_node_base"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt14_List_iteratorIiEneERKS0_(%"struct.std::_List_iterator"*, %"struct.std::_List_iterator"* dereferenceable(8)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_List_iterator"*, align 8
  %4 = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %3, align 8
  store %"struct.std::_List_iterator"* %1, %"struct.std::_List_iterator"** %4, align 8
  %5 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
  %8 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %8, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  %11 = icmp ne %"struct.std::__detail::_List_node_base"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %2, align 8
  %3 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
  %6 = bitcast %"struct.std::__detail::_List_node_base"* %5 to %"struct.std::_List_node.28"*
  %7 = getelementptr inbounds %"struct.std::_List_node.28", %"struct.std::_List_node.28"* %6, i32 0, i32 1
  ret i32* %7
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZSt4findISt14_List_iteratorIiEiET_S2_S2_RKT0_(%"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"struct.std::_List_iterator", align 8
  %5 = alloca %"struct.std::_List_iterator", align 8
  %6 = alloca %"struct.std::_List_iterator", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"struct.std::_List_iterator", align 8
  %9 = alloca %"struct.std::_List_iterator", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %11 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %5, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %6, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %12, align 8
  store i32* %2, i32** %7, align 8
  %13 = bitcast %"struct.std::_List_iterator"* %8 to i8*
  %14 = bitcast %"struct.std::_List_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"struct.std::_List_iterator"* %9 to i8*
  %16 = bitcast %"struct.std::_List_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = call i32* @_ZN9__gnu_cxx5__ops17__iter_equals_valIKiEENS0_16_Iter_equals_valIT_EERS4_(i32* dereferenceable(4) %17)
  %19 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %10, i32 0, i32 0
  store i32* %18, i32** %19, align 8
  %20 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %8, i32 0, i32 0
  %21 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %9, i32 0, i32 0
  %23 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %22, align 8
  %24 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %10, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = call %"struct.std::__detail::_List_node_base"* @_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_(%"struct.std::__detail::_List_node_base"* %21, %"struct.std::__detail::_List_node_base"* %23, i32* %25)
  %27 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %26, %"struct.std::__detail::_List_node_base"** %27, align 8
  %28 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  %29 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %28, align 8
  ret %"struct.std::__detail::_List_node_base"* %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNSt7__cxx114listIiSaIiEE5eraseESt20_List_const_iteratorIiE(%"class.std::__cxx11::list"*, %"struct.std::__detail::_List_node_base"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_List_iterator", align 8
  %4 = alloca %"struct.std::_List_const_iterator", align 8
  %5 = alloca %"class.std::__cxx11::list"*, align 8
  %6 = alloca %"struct.std::_List_iterator", align 8
  %7 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %4, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %7, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %5, align 8
  %8 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %5, align 8
  %9 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %4, i32 0, i32 0
  %10 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %9, align 8
  %11 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %10, i32 0, i32 0
  %12 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %11, align 8
  call void @_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* %3, %"struct.std::__detail::_List_node_base"* %12) #3
  %13 = call %"struct.std::__detail::_List_node_base"* @_ZNKSt20_List_const_iteratorIiE13_M_const_castEv(%"struct.std::_List_const_iterator"* %4) #3
  %14 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %6, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %13, %"struct.std::__detail::_List_node_base"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %6, i32 0, i32 0
  %16 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %15, align 8
  call void @_ZNSt7__cxx114listIiSaIiEE8_M_eraseESt14_List_iteratorIiE(%"class.std::__cxx11::list"* %8, %"struct.std::__detail::_List_node_base"* %16) #3
  %17 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  %18 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %17, align 8
  ret %"struct.std::__detail::_List_node_base"* %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt20_List_const_iteratorIiEC2ERKSt14_List_iteratorIiE(%"struct.std::_List_const_iterator"*, %"struct.std::_List_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_List_const_iterator"*, align 8
  %4 = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
  store %"struct.std::_List_iterator"* %1, %"struct.std::_List_iterator"** %4, align 8
  %5 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %7, i32 0, i32 0
  %9 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %8, align 8
  store %"struct.std::__detail::_List_node_base"* %9, %"struct.std::__detail::_List_node_base"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %2, align 8
  %3 = load %"struct.std::_List_iterator"*, %"struct.std::_List_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::__detail::_List_node_base", %"struct.std::__detail::_List_node_base"* %5, i32 0, i32 0
  %7 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %6, align 8
  %8 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %7, %"struct.std::__detail::_List_node_base"** %8, align 8
  ret %"struct.std::_List_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_(%"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"*, i32*) #0 comdat {
  %4 = alloca %"struct.std::_List_iterator", align 8
  %5 = alloca %"struct.std::_List_iterator", align 8
  %6 = alloca %"struct.std::_List_iterator", align 8
  %7 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %8 = alloca %"struct.std::_List_iterator", align 8
  %9 = alloca %"struct.std::_List_iterator", align 8
  %10 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %11 = alloca %"struct.std::input_iterator_tag", align 1
  %12 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %13 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %14 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %5, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %6, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %15, align 8
  %16 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %7, i32 0, i32 0
  store i32* %2, i32** %16, align 8
  %17 = bitcast %"struct.std::_List_iterator"* %8 to i8*
  %18 = bitcast %"struct.std::_List_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %17, i8* %18, i64 8, i32 8, i1 false)
  %19 = bitcast %"struct.std::_List_iterator"* %9 to i8*
  %20 = bitcast %"struct.std::_List_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = bitcast %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %10 to i8*
  %22 = bitcast %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %21, i8* %22, i64 8, i32 8, i1 false)
  call void @_ZSt19__iterator_categoryISt14_List_iteratorIiEENSt15iterator_traitsIT_E17iterator_categoryERKS3_(%"struct.std::_List_iterator"* dereferenceable(8) %5)
  %23 = bitcast %"struct.std::bidirectional_iterator_tag"* %12 to %"struct.std::input_iterator_tag"*
  %24 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %8, i32 0, i32 0
  %25 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %9, i32 0, i32 0
  %27 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %26, align 8
  %28 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %10, i32 0, i32 0
  %29 = load i32*, i32** %28, align 8
  %30 = call %"struct.std::__detail::_List_node_base"* @_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_St18input_iterator_tag(%"struct.std::__detail::_List_node_base"* %25, %"struct.std::__detail::_List_node_base"* %27, i32* %29)
  %31 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %30, %"struct.std::__detail::_List_node_base"** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %4, i32 0, i32 0
  %33 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %32, align 8
  ret %"struct.std::__detail::_List_node_base"* %33
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx5__ops17__iter_equals_valIKiEENS0_16_Iter_equals_valIT_EERS4_(i32* dereferenceable(4)) #0 comdat {
  %2 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEC2ERS2_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %2, i32* dereferenceable(4) %4)
  %5 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZSt9__find_ifISt14_List_iteratorIiEN9__gnu_cxx5__ops16_Iter_equals_valIKiEEET_S7_S7_T0_St18input_iterator_tag(%"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"*, i32*) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"struct.std::_List_iterator", align 8
  %6 = alloca %"struct.std::_List_iterator", align 8
  %7 = alloca %"struct.std::_List_iterator", align 8
  %8 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val", align 8
  %9 = alloca %"struct.std::input_iterator_tag", align 1
  %10 = alloca %"struct.std::_List_iterator", align 8
  %11 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %6, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %0, %"struct.std::__detail::_List_node_base"** %11, align 8
  %12 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %7, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %12, align 8
  %13 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %8, i32 0, i32 0
  store i32* %2, i32** %13, align 8
  %14 = alloca i32
  store i32 239428732, i32* %14
  %15 = alloca i1
  br label %16

; <label>:16:                                     ; preds = %3, %166
  %17 = load i32, i32* %14
  switch i32 %17, label %18 [
    i32 239428732, label %19
    i32 -1353858220, label %22
    i32 -600721922, label %49
    i32 1347112382, label %76
    i32 62909924, label %78
    i32 -1363354033, label %81
    i32 -1058909765, label %97
    i32 1347903019, label %126
    i32 2058843880, label %127
    i32 749131111, label %132
    i32 124881837, label %164
  ]

; <label>:18:                                     ; preds = %16
  br label %166

; <label>:19:                                     ; preds = %16
  %20 = call zeroext i1 @_ZNKSt14_List_iteratorIiEneERKS0_(%"struct.std::_List_iterator"* %6, %"struct.std::_List_iterator"* dereferenceable(8) %7) #3
  %21 = select i1 %20, i32 -1353858220, i32 62909924
  store i32 %21, i32* %14
  store i1 false, i1* %15
  br label %166

; <label>:22:                                     ; preds = %16
  %23 = load i32, i32* @x.857
  %24 = load i32, i32* @y.858
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -600721922, i32 749131111
  store i32 %48, i32* %14
  br label %166

; <label>:49:                                     ; preds = %16
  %50 = bitcast %"struct.std::_List_iterator"* %10 to i8*
  %51 = bitcast %"struct.std::_List_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %10, i32 0, i32 0
  %53 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %52, align 8
  %54 = call zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEclISt14_List_iteratorIiEEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %8, %"struct.std::__detail::_List_node_base"* %53)
  %55 = xor i1 %54, true
  %56 = and i1 true, %55
  %57 = xor i1 true, true
  %58 = and i1 %54, %57
  %59 = or i1 %56, %58
  %60 = xor i1 %54, true
  store i1 %59, i1* %4
  %61 = load i32, i32* @x.857
  %62 = load i32, i32* @y.858
  %63 = add i32 %61, -174281197
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -174281197
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 1347112382, i32 749131111
  store i32 %75, i32* %14
  br label %166

; <label>:76:                                     ; preds = %16
  store i32 62909924, i32* %14
  %77 = load volatile i1, i1* %4
  store i1 %77, i1* %15
  br label %166

; <label>:78:                                     ; preds = %16
  %79 = load i1, i1* %15
  %80 = select i1 %79, i32 -1363354033, i32 2058843880
  store i32 %80, i32* %14
  br label %166

; <label>:81:                                     ; preds = %16
  %82 = load i32, i32* @x.857
  %83 = load i32, i32* @y.858
  %84 = sub i32 %82, 1831341834
  %85 = sub i32 %84, 1
  %86 = add i32 %85, 1831341834
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  %96 = select i1 %94, i32 -1058909765, i32 124881837
  store i32 %96, i32* %14
  br label %166

; <label>:97:                                     ; preds = %16
  %98 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %6) #3
  %99 = load i32, i32* @x.857
  %100 = load i32, i32* @y.858
  %101 = add i32 %99, 2042357006
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 2042357006
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 false, true
  %112 = and i1 %109, false
  %113 = and i1 %107, %111
  %114 = and i1 %110, false
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 false, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  %125 = select i1 %123, i32 1347903019, i32 124881837
  store i32 %125, i32* %14
  br label %166

; <label>:126:                                    ; preds = %16
  store i32 239428732, i32* %14
  br label %166

; <label>:127:                                    ; preds = %16
  %128 = bitcast %"struct.std::_List_iterator"* %5 to i8*
  %129 = bitcast %"struct.std::_List_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %128, i8* %129, i64 8, i32 8, i1 false)
  %130 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %5, i32 0, i32 0
  %131 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %130, align 8
  ret %"struct.std::__detail::_List_node_base"* %131

; <label>:132:                                    ; preds = %16
  %133 = bitcast %"struct.std::_List_iterator"* %10 to i8*
  %134 = bitcast %"struct.std::_List_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %133, i8* %134, i64 8, i32 8, i1 false)
  %135 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %10, i32 0, i32 0
  %136 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %135, align 8
  %137 = call zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEclISt14_List_iteratorIiEEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"* %8, %"struct.std::__detail::_List_node_base"* %136)
  %138 = shl i1 %137, true
  %139 = shl i1 %137, true
  %140 = add i1 false, true
  %141 = sub i1 %140, %137
  %142 = sub i1 %141, true
  %143 = sub i1 false, %137
  %144 = sub i1 false, %142
  %145 = sub i1 false, true
  %146 = add i1 %144, %145
  %147 = sub i1 false, %146
  %148 = add i1 %142, true
  %149 = sub i1 false, true
  %150 = add i1 %137, %149
  %151 = sub i1 %137, true
  %152 = mul i1 %150, true
  %153 = sub i1 %137, false
  %154 = sub i1 %153, true
  %155 = add i1 %154, false
  %156 = sub i1 %137, true
  %157 = mul i1 %155, true
  %158 = xor i1 %137, true
  %159 = and i1 true, %158
  %160 = xor i1 true, true
  %161 = and i1 %137, %160
  %162 = or i1 %159, %161
  %163 = xor i1 %137, true
  store i32 -600721922, i32* %14
  br label %166

; <label>:164:                                    ; preds = %16
  %165 = call dereferenceable(8) %"struct.std::_List_iterator"* @_ZNSt14_List_iteratorIiEppEv(%"struct.std::_List_iterator"* %6) #3
  store i32 -1058909765, i32* %14
  br label %166

; <label>:166:                                    ; preds = %164, %132, %126, %97, %81, %78, %76, %49, %22, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryISt14_List_iteratorIiEENSt15iterator_traitsIT_E17iterator_categoryERKS3_(%"struct.std::_List_iterator"* dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::bidirectional_iterator_tag", align 1
  %3 = alloca %"struct.std::_List_iterator"*, align 8
  store %"struct.std::_List_iterator"* %0, %"struct.std::_List_iterator"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEclISt14_List_iteratorIiEEEbT_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.std::__detail::_List_node_base"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_List_iterator", align 8
  %4 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %5 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %5, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %4, align 8
  %6 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNKSt14_List_iteratorIiEdeEv(%"struct.std::_List_iterator"* %3) #3
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %6, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx5__ops16_Iter_equals_valIKiEC2ERS2_(%"struct.__gnu_cxx::__ops::_Iter_equals_val"*, i32* dereferenceable(4)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %0, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.__gnu_cxx::__ops::_Iter_equals_val"*, %"struct.__gnu_cxx::__ops::_Iter_equals_val"** %3, align 8
  %6 = getelementptr inbounds %"struct.__gnu_cxx::__ops::_Iter_equals_val", %"struct.__gnu_cxx::__ops::_Iter_equals_val"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx114listIiSaIiEE8_M_eraseESt14_List_iteratorIiE(%"class.std::__cxx11::list"*, %"struct.std::__detail::_List_node_base"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::_List_iterator", align 8
  %4 = alloca %"class.std::__cxx11::list"*, align 8
  %5 = alloca %"struct.std::_List_node.28"*, align 8
  %6 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  store %"struct.std::__detail::_List_node_base"* %1, %"struct.std::__detail::_List_node_base"** %6, align 8
  store %"class.std::__cxx11::list"* %0, %"class.std::__cxx11::list"** %4, align 8
  %7 = load %"class.std::__cxx11::list"*, %"class.std::__cxx11::list"** %4, align 8
  %8 = bitcast %"class.std::__cxx11::list"* %7 to %"class.std::__cxx11::_List_base"*
  invoke void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_dec_sizeEm(%"class.std::__cxx11::_List_base"* %8, i64 1)
          to label %9 unwind label %22

; <label>:9:                                      ; preds = %2
  %10 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  %11 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %10, align 8
  call void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %3, i32 0, i32 0
  %13 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %12, align 8
  %14 = bitcast %"struct.std::__detail::_List_node_base"* %13 to %"struct.std::_List_node.28"*
  store %"struct.std::_List_node.28"* %14, %"struct.std::_List_node.28"** %5, align 8
  %15 = bitcast %"class.std::__cxx11::list"* %7 to %"class.std::__cxx11::_List_base"*
  %16 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt7__cxx1110_List_baseIiSaIiEE21_M_get_Node_allocatorEv(%"class.std::__cxx11::_List_base"* %15) #3
  %17 = bitcast %"class.std::allocator.15"* %16 to %"class.__gnu_cxx::new_allocator.16"*
  %18 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  invoke void @_ZN9__gnu_cxx13new_allocatorISt10_List_nodeIiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.16"* %17, %"struct.std::_List_node.28"* %18)
          to label %19 unwind label %22

; <label>:19:                                     ; preds = %9
  %20 = bitcast %"class.std::__cxx11::list"* %7 to %"class.std::__cxx11::_List_base"*
  %21 = load %"struct.std::_List_node.28"*, %"struct.std::_List_node.28"** %5, align 8
  call void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_put_nodeEPSt10_List_nodeIiE(%"class.std::__cxx11::_List_base"* %20, %"struct.std::_List_node.28"* %21) #3
  ret void

; <label>:22:                                     ; preds = %9, %2
  %23 = landingpad { i8*, i32 }
          catch i8* null
  %24 = extractvalue { i8*, i32 } %23, 0
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::__detail::_List_node_base"* @_ZNKSt20_List_const_iteratorIiE13_M_const_castEv(%"struct.std::_List_const_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_List_iterator", align 8
  %3 = alloca %"struct.std::_List_const_iterator"*, align 8
  store %"struct.std::_List_const_iterator"* %0, %"struct.std::_List_const_iterator"** %3, align 8
  %4 = load %"struct.std::_List_const_iterator"*, %"struct.std::_List_const_iterator"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::_List_const_iterator", %"struct.std::_List_const_iterator"* %4, i32 0, i32 0
  %6 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %5, align 8
  call void @_ZNSt14_List_iteratorIiEC2EPNSt8__detail15_List_node_baseE(%"struct.std::_List_iterator"* %2, %"struct.std::__detail::_List_node_base"* %6) #3
  %7 = getelementptr inbounds %"struct.std::_List_iterator", %"struct.std::_List_iterator"* %2, i32 0, i32 0
  %8 = load %"struct.std::__detail::_List_node_base"*, %"struct.std::__detail::_List_node_base"** %7, align 8
  ret %"struct.std::__detail::_List_node_base"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt7__cxx1110_List_baseIiSaIiEE11_M_dec_sizeEm(%"class.std::__cxx11::_List_base"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::_List_base"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::__cxx11::_List_base"* %0, %"class.std::__cxx11::_List_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::__cxx11::_List_base"*, %"class.std::__cxx11::_List_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = getelementptr inbounds %"class.std::__cxx11::_List_base", %"class.std::__cxx11::_List_base"* %5, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl", %"struct.std::__cxx11::_List_base<int, std::allocator<int> >::_List_impl"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_List_node", %"struct.std::_List_node"* %8, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %10, -8470389163947379397
  %12 = sub i64 %11, %6
  %13 = sub i64 %12, -8470389163947379397
  %14 = sub i64 %10, %6
  store i64 %13, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt8__detail15_List_node_base9_M_unhookEv(%"struct.std::__detail::_List_node_base"*) #2

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s986009164.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
