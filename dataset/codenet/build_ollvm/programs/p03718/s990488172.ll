; ModuleID = 'Project_CodeNet_C++1400/p03718/s990488172.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s990488172.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl" = type { %"class.std::deque"*, %"class.std::deque"*, %"class.std::deque"* }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl" }
%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl" = type { %struct.Edge**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%struct.Edge = type <{ i32, [4 x i8], i64, i32, [4 x i8] }>
%"struct.std::_Deque_iterator" = type { %struct.Edge*, %struct.Edge*, %struct.Edge*, %struct.Edge** }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { i32* }
%"class.std::deque.8" = type { %"class.std::_Deque_base.9" }
%"class.std::_Deque_base.9" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10" }
%"struct.std::_Deque_iterator.10" = type { i32*, i32*, i32*, i32** }
%"class.std::initializer_list" = type { i32*, i64 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"struct.std::forward_iterator_tag" = type { i8 }
%"struct.std::random_access_iterator_tag" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.14" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.__gnu_cxx::new_allocator.15" = type { i8 }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"struct.std::_Deque_iterator.20" = type { %struct.Edge*, %struct.Edge*, %struct.Edge*, %struct.Edge** }
%"class.std::move_iterator" = type { i32* }

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiRxmEEEvDpOT_ = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiimEEEvDpOT_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE3endEv = comdat any

$_ZStneI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_ = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EppEv = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE6resizeEm = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt5dequeI4EdgeSaIS0_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEEC2Ev = comdat any

$_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev = comdat any

$_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EEEvT_S5_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeI4EdgeSaIS3_EEEEvT_S7_ = comdat any

$_ZSt8_DestroyISt5dequeI4EdgeSaIS1_EEEvPT_ = comdat any

$_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_ = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m = comdat any

$_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m = comdat any

$_ZNSaIP4EdgeED2Ev = comdat any

$_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIP4EdgeEC2IS_EERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE10deallocateEPS4_m = comdat any

$_ZNSaISt5dequeI4EdgeSaIS0_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiRxmEEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiRxmEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiRxmEEEvPT_DpOT0_ = comdat any

$_ZN4EdgeC2Eixi = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_ = comdat any

$_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_ = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm = comdat any

$_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiimEEEvRS1_PT_DpOT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiimEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiimEEEvPT_DpOT0_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag = comdat any

$_ZNKSt16initializer_listIiE5beginEv = comdat any

$_ZNKSt16initializer_listIiE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZSt7advanceIPKimEvRT_T0_ = comdat any

$_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv = comdat any

$_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_ = comdat any

$_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag = comdat any

$_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag = comdat any

$_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_ = comdat any

$_ZSt4copyIPKiPiET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_ = comdat any

$_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_ = comdat any

$_ZNKSt16initializer_listIiE4sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_ = comdat any

$_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EixEl = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl = comdat any

$_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt5dequeI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt5dequeI4EdgeSaIS1_EES4_SaIS3_EET0_T_S7_S6_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt5dequeI4EdgeSaIS1_EEmET_S5_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt5dequeI4EdgeSaIS3_EEmEET_S7_T0_ = comdat any

$_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm = comdat any

$_ZNSaI4EdgeEC2Ev = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_ = comdat any

$_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8max_sizeERKS4_ = comdat any

$_ZNKSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8allocateERS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aIPSt5dequeI4EdgeSaIS1_EES4_S3_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_ = comdat any

$_ZSt18uninitialized_copyIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5dequeI4EdgeSaIS3_EES6_EET0_T_S8_S7_ = comdat any

$_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJRS3_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRSt5dequeI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt5dequeI4EdgeSaIS0_EEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2ERKS1_m = comdat any

$_ZNSaI4EdgeED2Ev = comdat any

$_ZSt22__uninitialized_copy_aISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_ES1_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv = comdat any

$_ZNKSt5dequeI4EdgeSaIS0_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_ = comdat any

$_ZNSaI4EdgeEC2ERKS0_ = comdat any

$_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_ = comdat any

$_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2ERKS1_ = comdat any

$_ZSt18uninitialized_copyISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_EET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt15_Deque_iteratorI4EdgeRKS3_PS4_ES2_IS3_RS3_PS3_EEET0_T_SC_SB_ = comdat any

$_ZStneI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_ = comdat any

$_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofI4EdgeEPT_RS1_ = comdat any

$_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EppEv = comdat any

$_ZSt8_DestroyISt15_Deque_iteratorI4EdgeRS1_PS1_EEvT_S5_ = comdat any

$_ZSteqI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_ = comdat any

$_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E11_M_set_nodeEPPS0_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E14_S_buffer_sizeEv = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorI4EdgeRS3_PS3_EEEvT_S7_ = comdat any

$_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@g = global %"class.std::vector" zeroinitializer, align 8
@level = global %"class.std::vector.0" zeroinitializer, align 8
@iter = global %"class.std::vector.0" zeroinitializer, align 8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s990488172.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.4
  %4 = load i32, i32* @y.5
  %5 = sub i32 %3, 1856630142
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1856630142
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1047379772, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %44
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1047379772, label %17
    i32 267689061, label %25
    i32 -1140564988, label %41
    i32 187242459, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %44

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 267689061, i32 187242459
  store i32 %24, i32* %13
  br label %44

; <label>:25:                                     ; preds = %14
  call void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev(%"class.std::vector"* @g) #3
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @g to i8*), i8* @__dso_handle) #3
  %27 = load i32, i32* @x.4
  %28 = load i32, i32* @y.5
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1140564988, i32 187242459
  store i32 %40, i32* %13
  br label %44

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  call void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev(%"class.std::vector"* @g) #3
  %43 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector"*)* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector"* @g to i8*), i8* @__dso_handle) #3
  store i32 267689061, i32* %13
  br label %44

; <label>:44:                                     ; preds = %42, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %46

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.6
  %7 = load i32, i32* @y.7
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %89

; <label>:31:                                     ; preds = %5, %89
  %32 = load i32, i32* @x.6
  %33 = load i32, i32* @y.7
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %89

; <label>:45:                                     ; preds = %31
  ret void

; <label>:46:                                     ; preds = %1
  %47 = load i32, i32* @x.6
  %48 = load i32, i32* @y.7
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %90

; <label>:72:                                     ; preds = %46, %90
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  call void @__clang_call_terminate(i8* %74) #11
  %75 = load i32, i32* @x.6
  %76 = load i32, i32* @y.7
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %90

; <label>:88:                                     ; preds = %72
  unreachable

; <label>:89:                                     ; preds = %31, %5
  br label %31

; <label>:90:                                     ; preds = %72, %46
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  call void @__clang_call_terminate(i8* %92) #11
  br label %72
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.8
  %3 = load i32, i32* @y.9
  %4 = add i32 %2, -1658155459
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1658155459
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %55

; <label>:16:                                     ; preds = %1, %55
  %17 = alloca %"class.std::vector"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %17, align 8
  %20 = load %"class.std::vector"*, %"class.std::vector"** %17, align 8
  %21 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"class.std::deque"*, %"class.std::deque"** %23, align 8
  %25 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  %30 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %29) #3
  %31 = load i32, i32* @x.8
  %32 = load i32, i32* @y.9
  %33 = sub i32 %31, 1395978706
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1395978706
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %55

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::deque"* %24, %"class.std::deque"* %28, %"class.std::allocator"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %18, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %19, align 4
  %52 = bitcast %"class.std::vector"* %20 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"* %52) #3
  br label %53

; <label>:53:                                     ; preds = %48
  %54 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %54) #11
  unreachable

; <label>:55:                                     ; preds = %16, %1
  %56 = alloca %"class.std::vector"*, align 8
  %57 = alloca i8*
  %58 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %56, align 8
  %59 = load %"class.std::vector"*, %"class.std::vector"** %56, align 8
  %60 = bitcast %"class.std::vector"* %59 to %"struct.std::_Vector_base"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  %64 = bitcast %"class.std::vector"* %59 to %"struct.std::_Vector_base"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"class.std::deque"*, %"class.std::deque"** %66, align 8
  %68 = bitcast %"class.std::vector"* %59 to %"struct.std::_Vector_base"*
  %69 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %68) #3
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.0"* @level) #3
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.0"*)* @_ZNSt6vectorIiSaIiEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.0"* @level to i8*), i8* @__dso_handle) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.12
  %8 = load i32, i32* @y.13
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %8, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %50

; <label>:32:                                     ; preds = %6, %50
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.12
  %36 = load i32, i32* @y.13
  %37 = add i32 %35, -792315031
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -792315031
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %32
  unreachable

; <label>:50:                                     ; preds = %32, %6
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #11
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.0"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %15 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator.2"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.1"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.14
  %20 = load i32, i32* @y.15
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %66

; <label>:32:                                     ; preds = %18, %66
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %3, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %4, align 4
  %36 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.1"* %36) #3
  %37 = load i32, i32* @x.14
  %38 = load i32, i32* @y.15
  %39 = sub i32 %37, 2094796042
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 2094796042
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %66

; <label>:63:                                     ; preds = %32
  br label %64

; <label>:64:                                     ; preds = %63
  %65 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %65) #11
  unreachable

; <label>:66:                                     ; preds = %32, %18
  %67 = landingpad { i8*, i32 }
          catch i8* null
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %3, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %4, align 4
  %70 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.1"* %70) #3
  br label %32
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.3() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.16
  %4 = load i32, i32* @y.17
  %5 = add i32 %3, -1682538759
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1682538759
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1377872369, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1377872369, label %17
    i32 -1107647147, label %37
    i32 1391771557, label %54
    i32 -778435498, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1107647147, i32 -778435498
  store i32 %36, i32* %13
  br label %57

; <label>:37:                                     ; preds = %14
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.0"* @iter) #3
  %38 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.0"*)* @_ZNSt6vectorIiSaIiEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.0"* @iter to i8*), i8* @__dso_handle) #3
  %39 = load i32, i32* @x.16
  %40 = load i32, i32* @y.17
  %41 = sub i32 %39, 97157286
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 97157286
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1391771557, i32 -778435498
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.0"* @iter) #3
  %56 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::vector.0"*)* @_ZNSt6vectorIiSaIiEED2Ev to void (i8*)*), i8* bitcast (%"class.std::vector.0"* @iter to i8*), i8* @__dso_handle) #3
  store i32 -1107647147, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define void @_Z8add_edgeiix(i32, i32, i64) #0 {
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  store i32 %0, i32* %4, align 4
  store i32 %1, i32* %5, align 4
  store i64 %2, i64* %6, align 8
  %10 = load i32, i32* %4, align 4
  %11 = sext i32 %10 to i64
  %12 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %11) #3
  %13 = load i32, i32* %5, align 4
  %14 = sext i32 %13 to i64
  %15 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %14) #3
  %16 = call i64 @_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv(%"class.std::deque"* %15) #3
  store i64 %16, i64* %7, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiRxmEEEvDpOT_(%"class.std::deque"* %12, i32* dereferenceable(4) %5, i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %17 = load i32, i32* %5, align 4
  %18 = sext i32 %17 to i64
  %19 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %18) #3
  store i32 0, i32* %8, align 4
  %20 = load i32, i32* %4, align 4
  %21 = sext i32 %20 to i64
  %22 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %21) #3
  %23 = call i64 @_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv(%"class.std::deque"* %22) #3
  %24 = sub i64 0, 1
  %25 = add i64 %23, %24
  %26 = sub i64 %23, 1
  store i64 %25, i64* %9, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiimEEEvDpOT_(%"class.std::deque"* %19, i32* dereferenceable(4) %4, i32* dereferenceable(4) %8, i64* dereferenceable(8) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::deque"*, %"class.std::deque"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %9, i64 %10
  ret %"class.std::deque"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiRxmEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca %"class.std::deque"*
  %7 = alloca i64**
  %8 = alloca i64**
  %9 = alloca i32**
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.22
  %13 = load i32, i32* @y.23
  %14 = sub i32 %12, 1981490185
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1981490185
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 -2099247087, i32* %22
  br label %23

; <label>:23:                                     ; preds = %4, %175
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -2099247087, label %26
    i32 1969109764, label %34
    i32 -1109442571, label %72
    i32 -1743474059, label %75
    i32 1520456546, label %102
    i32 -1158961246, label %113
    i32 -2049192328, label %140
    i32 452589051, label %155
    i32 1300183340, label %156
    i32 -1955161085, label %174
  ]

; <label>:25:                                     ; preds = %23
  br label %175

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %11
  %28 = load volatile i1, i1* %10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 1969109764, i32 1300183340
  store i32 %33, i32* %22
  br label %175

; <label>:34:                                     ; preds = %23
  %35 = alloca %"class.std::deque"*, align 8
  %36 = alloca i32*, align 8
  store i32** %36, i32*** %9
  %37 = alloca i64*, align 8
  store i64** %37, i64*** %8
  %38 = alloca i64*, align 8
  store i64** %38, i64*** %7
  store %"class.std::deque"* %0, %"class.std::deque"** %35, align 8
  %39 = load volatile i32**, i32*** %9
  store i32* %1, i32** %39, align 8
  %40 = load volatile i64**, i64*** %8
  store i64* %2, i64** %40, align 8
  %41 = load volatile i64**, i64*** %7
  store i64* %3, i64** %41, align 8
  %42 = load %"class.std::deque"*, %"class.std::deque"** %35, align 8
  store %"class.std::deque"* %42, %"class.std::deque"** %6
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load %struct.Edge*, %struct.Edge** %47, align 8
  %49 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %50 = bitcast %"class.std::deque"* %49 to %"class.std::_Deque_base"*
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %51, i32 0, i32 3
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 2
  %54 = load %struct.Edge*, %struct.Edge** %53, align 8
  %55 = getelementptr inbounds %struct.Edge, %struct.Edge* %54, i64 -1
  %56 = icmp ne %struct.Edge* %48, %55
  store i1 %56, i1* %5
  %57 = load i32, i32* @x.22
  %58 = load i32, i32* @y.23
  %59 = sub i32 %57, -1579625005
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -1579625005
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -1109442571, i32 1300183340
  store i32 %71, i32* %22
  br label %175

; <label>:72:                                     ; preds = %23
  %73 = load volatile i1, i1* %5
  %74 = select i1 %73, i32 -1743474059, i32 1520456546
  store i32 %74, i32* %22
  br label %175

; <label>:75:                                     ; preds = %23
  %76 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %77 = bitcast %"class.std::deque"* %76 to %"class.std::_Deque_base"*
  %78 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %77, i32 0, i32 0
  %79 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %78 to %"class.std::allocator.5"*
  %80 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %81 = bitcast %"class.std::deque"* %80 to %"class.std::_Deque_base"*
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 0
  %85 = load %struct.Edge*, %struct.Edge** %84, align 8
  %86 = load volatile i32**, i32*** %9
  %87 = load i32*, i32** %86, align 8
  %88 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %87) #3
  %89 = load volatile i64**, i64*** %8
  %90 = load i64*, i64** %89, align 8
  %91 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %90) #3
  %92 = load volatile i64**, i64*** %7
  %93 = load i64*, i64** %92, align 8
  %94 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %93) #3
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiRxmEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %79, %struct.Edge* %85, i32* dereferenceable(4) %88, i64* dereferenceable(8) %91, i64* dereferenceable(8) %94)
  %95 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  %96 = bitcast %"class.std::deque"* %95 to %"class.std::_Deque_base"*
  %97 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %96, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %97, i32 0, i32 3
  %99 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %98, i32 0, i32 0
  %100 = load %struct.Edge*, %struct.Edge** %99, align 8
  %101 = getelementptr inbounds %struct.Edge, %struct.Edge* %100, i32 1
  store %struct.Edge* %101, %struct.Edge** %99, align 8
  store i32 -1158961246, i32* %22
  br label %175

; <label>:102:                                    ; preds = %23
  %103 = load volatile i32**, i32*** %9
  %104 = load i32*, i32** %103, align 8
  %105 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %104) #3
  %106 = load volatile i64**, i64*** %8
  %107 = load i64*, i64** %106, align 8
  %108 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %107) #3
  %109 = load volatile i64**, i64*** %7
  %110 = load i64*, i64** %109, align 8
  %111 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %110) #3
  %112 = load volatile %"class.std::deque"*, %"class.std::deque"** %6
  call void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiRxmEEEvDpOT_(%"class.std::deque"* %112, i32* dereferenceable(4) %105, i64* dereferenceable(8) %108, i64* dereferenceable(8) %111)
  store i32 -1158961246, i32* %22
  br label %175

; <label>:113:                                    ; preds = %23
  %114 = load i32, i32* @x.22
  %115 = load i32, i32* @y.23
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -2049192328, i32 -1955161085
  store i32 %139, i32* %22
  br label %175

; <label>:140:                                    ; preds = %23
  %141 = load i32, i32* @x.22
  %142 = load i32, i32* @y.23
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  %154 = select i1 %152, i32 452589051, i32 -1955161085
  store i32 %154, i32* %22
  br label %175

; <label>:155:                                    ; preds = %23
  ret void

; <label>:156:                                    ; preds = %23
  %157 = alloca %"class.std::deque"*, align 8
  %158 = alloca i32*, align 8
  %159 = alloca i64*, align 8
  %160 = alloca i64*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %157, align 8
  store i32* %1, i32** %158, align 8
  store i64* %2, i64** %159, align 8
  store i64* %3, i64** %160, align 8
  %161 = load %"class.std::deque"*, %"class.std::deque"** %157, align 8
  %162 = bitcast %"class.std::deque"* %161 to %"class.std::_Deque_base"*
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %162, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %163, i32 0, i32 3
  %165 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %164, i32 0, i32 0
  %166 = load %struct.Edge*, %struct.Edge** %165, align 8
  %167 = bitcast %"class.std::deque"* %161 to %"class.std::_Deque_base"*
  %168 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %168, i32 0, i32 3
  %170 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %169, i32 0, i32 2
  %171 = load %struct.Edge*, %struct.Edge** %170, align 8
  %172 = getelementptr inbounds %struct.Edge, %struct.Edge* %171, i64 -1
  %173 = icmp ne %struct.Edge* %166, %172
  store i32 1969109764, i32* %22
  br label %175

; <label>:174:                                    ; preds = %23
  store i32 -2049192328, i32* %22
  br label %175

; <label>:175:                                    ; preds = %174, %156, %140, %113, %102, %75, %72, %34, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.24
  %6 = load i32, i32* @y.25
  %7 = add i32 %5, 259968434
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 259968434
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -244239731, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -244239731, label %19
    i32 -1326016585, label %27
    i32 -163217007, label %52
    i32 933246683, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1326016585, i32 933246683
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %34, i32 0, i32 2
  %36 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %32, %"struct.std::_Deque_iterator"* dereferenceable(32) %35) #3
  store i64 %36, i64* %2
  %37 = load i32, i32* @x.24
  %38 = load i32, i32* @y.25
  %39 = sub i32 %37, 1150236350
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1150236350
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -163217007, i32 933246683
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i64, i64* %2
  ret i64 %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %55, align 8
  %56 = load %"class.std::deque"*, %"class.std::deque"** %55, align 8
  %57 = bitcast %"class.std::deque"* %56 to %"class.std::_Deque_base"*
  %58 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %58, i32 0, i32 3
  %60 = bitcast %"class.std::deque"* %56 to %"class.std::_Deque_base"*
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %61, i32 0, i32 2
  %63 = call i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32) %59, %"struct.std::_Deque_iterator"* dereferenceable(32) %62) #3
  store i32 -1326016585, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE12emplace_backIJRiimEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) #0 comdat align 2 {
  %5 = alloca %struct.Edge*
  %6 = alloca %struct.Edge*
  %7 = alloca %"class.std::deque"*
  %8 = alloca %"class.std::deque"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %8, align 8
  store i32* %1, i32** %9, align 8
  store i32* %2, i32** %10, align 8
  store i64* %3, i64** %11, align 8
  %12 = load %"class.std::deque"*, %"class.std::deque"** %8, align 8
  store %"class.std::deque"* %12, %"class.std::deque"** %7
  %13 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  %14 = bitcast %"class.std::deque"* %13 to %"class.std::_Deque_base"*
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %15, i32 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %16, i32 0, i32 0
  %18 = load %struct.Edge*, %struct.Edge** %17, align 8
  store %struct.Edge* %18, %struct.Edge** %6
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 2
  %24 = load %struct.Edge*, %struct.Edge** %23, align 8
  %25 = getelementptr inbounds %struct.Edge, %struct.Edge* %24, i64 -1
  store %struct.Edge* %25, %struct.Edge** %5
  %26 = alloca i32
  store i32 -2090224774, i32* %26
  br label %27

; <label>:27:                                     ; preds = %4, %68
  %28 = load i32, i32* %26
  switch i32 %28, label %29 [
    i32 -2090224774, label %30
    i32 -942995694, label %35
    i32 1712589398, label %59
    i32 1329009312, label %67
  ]

; <label>:29:                                     ; preds = %27
  br label %68

; <label>:30:                                     ; preds = %27
  %31 = load volatile %struct.Edge*, %struct.Edge** %6
  %32 = load volatile %struct.Edge*, %struct.Edge** %5
  %33 = icmp ne %struct.Edge* %31, %32
  %34 = select i1 %33, i32 -942995694, i32 1712589398
  store i32 %34, i32* %26
  br label %68

; <label>:35:                                     ; preds = %27
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %38 to %"class.std::allocator.5"*
  %40 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  %46 = load i32*, i32** %9, align 8
  %47 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %46) #3
  %48 = load i32*, i32** %10, align 8
  %49 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %48) #3
  %50 = load i64*, i64** %11, align 8
  %51 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %50) #3
  call void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiimEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %39, %struct.Edge* %45, i32* dereferenceable(4) %47, i32* dereferenceable(4) %49, i64* dereferenceable(8) %51)
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  %53 = bitcast %"class.std::deque"* %52 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 0
  %57 = load %struct.Edge*, %struct.Edge** %56, align 8
  %58 = getelementptr inbounds %struct.Edge, %struct.Edge* %57, i32 1
  store %struct.Edge* %58, %struct.Edge** %56, align 8
  store i32 1329009312, i32* %26
  br label %68

; <label>:59:                                     ; preds = %27
  %60 = load i32*, i32** %9, align 8
  %61 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %60) #3
  %62 = load i32*, i32** %10, align 8
  %63 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %62) #3
  %64 = load i64*, i64** %11, align 8
  %65 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %64) #3
  %66 = load volatile %"class.std::deque"*, %"class.std::deque"** %7
  call void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiimEEEvDpOT_(%"class.std::deque"* %66, i32* dereferenceable(4) %61, i32* dereferenceable(4) %63, i64* dereferenceable(8) %65)
  store i32 1329009312, i32* %26
  br label %68

; <label>:67:                                     ; preds = %27
  ret void

; <label>:68:                                     ; preds = %59, %35, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define void @_Z3bfsi(i32) #0 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.28
  %3 = load i32, i32* @y.29
  %4 = sub i32 %2, -2009288385
  %5 = sub i32 %4, 1
  %6 = add i32 %5, -2009288385
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %399

; <label>:28:                                     ; preds = %1, %399
  %29 = alloca i32, align 4
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %33 = alloca i32*, align 8
  %34 = alloca %"class.std::deque.8", align 8
  %35 = alloca %"class.std::initializer_list", align 8
  %36 = alloca [1 x i32], align 4
  %37 = alloca %"class.std::allocator.2", align 1
  %38 = alloca i8*
  %39 = alloca i32
  %40 = alloca i32, align 4
  %41 = alloca %"class.std::deque"*, align 8
  %42 = alloca %"struct.std::_Deque_iterator", align 8
  %43 = alloca %"struct.std::_Deque_iterator", align 8
  %44 = alloca %struct.Edge*, align 8
  store i32 %0, i32* %29, align 4
  store %"class.std::vector.0"* @level, %"class.std::vector.0"** %30, align 8
  %45 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.0"* @level) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %31, i32 0, i32 0
  store i32* %45, i32** %46, align 8
  %47 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.0"* @level) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %32, i32 0, i32 0
  store i32* %47, i32** %48, align 8
  %49 = load i32, i32* @x.28
  %50 = load i32, i32* @y.29
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %399

; <label>:74:                                     ; preds = %28
  br label %75

; <label>:75:                                     ; preds = %80, %74
  %76 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %31, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %32) #3
  br i1 %76, label %77, label %82

; <label>:77:                                     ; preds = %75
  %78 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  store i32* %78, i32** %33, align 8
  %79 = load i32*, i32** %33, align 8
  store i32 -1, i32* %79, align 4
  br label %80

; <label>:80:                                     ; preds = %77
  %81 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  br label %75

; <label>:82:                                     ; preds = %75
  %83 = load i32, i32* @x.28
  %84 = load i32, i32* @y.29
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %420

; <label>:96:                                     ; preds = %82, %420
  %97 = load i32, i32* %29, align 4
  %98 = sext i32 %97 to i64
  %99 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %98) #3
  store i32 0, i32* %99, align 4
  %100 = getelementptr inbounds [1 x i32], [1 x i32]* %36, i64 0, i64 0
  %101 = load i32, i32* %29, align 4
  store i32 %101, i32* %100, align 4
  %102 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %35, i32 0, i32 0
  %103 = getelementptr inbounds [1 x i32], [1 x i32]* %36, i64 0, i64 0
  store i32* %103, i32** %102, align 8
  %104 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %35, i32 0, i32 1
  store i64 1, i64* %104, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.2"* %37) #3
  %105 = bitcast %"class.std::initializer_list"* %35 to { i32*, i64 }*
  %106 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %105, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %105, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = load i32, i32* @x.28
  %111 = load i32, i32* @y.29
  %112 = sub i32 %110, -65172285
  %113 = sub i32 %112, 1
  %114 = add i32 %113, -65172285
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %420

; <label>:124:                                    ; preds = %96
  invoke void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"* %34, i32* %107, i64 %109, %"class.std::allocator.2"* dereferenceable(1) %37)
          to label %125 unwind label %227

; <label>:125:                                    ; preds = %124
  call void @_ZNSaIiED2Ev(%"class.std::allocator.2"* %37) #3
  br label %126

; <label>:126:                                    ; preds = %362, %125
  %127 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque.8"* %34) #3
  %128 = xor i1 %127, true
  %129 = and i1 true, %128
  %130 = xor i1 true, true
  %131 = and i1 %127, %130
  %132 = or i1 %129, %131
  %133 = xor i1 %127, true
  br i1 %132, label %134, label %363

; <label>:134:                                    ; preds = %126
  %135 = load i32, i32* @x.28
  %136 = load i32, i32* @y.29
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %434

; <label>:160:                                    ; preds = %134, %434
  %161 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque.8"* %34) #3
  %162 = load i32, i32* %161, align 4
  store i32 %162, i32* %40, align 4
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque.8"* %34) #3
  %163 = load i32, i32* %40, align 4
  %164 = sext i32 %163 to i64
  %165 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %164) #3
  store %"class.std::deque"* %165, %"class.std::deque"** %41, align 8
  %166 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %42, %"class.std::deque"* %166) #3
  %167 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %43, %"class.std::deque"* %167) #3
  %168 = load i32, i32* @x.28
  %169 = load i32, i32* @y.29
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %434

; <label>:193:                                    ; preds = %160
  br label %194

; <label>:194:                                    ; preds = %361, %193
  %195 = call zeroext i1 @_ZStneI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %42, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #3
  br i1 %195, label %196, label %362

; <label>:196:                                    ; preds = %194
  %197 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %42) #3
  store %struct.Edge* %197, %struct.Edge** %44, align 8
  %198 = load %struct.Edge*, %struct.Edge** %44, align 8
  %199 = getelementptr inbounds %struct.Edge, %struct.Edge* %198, i32 0, i32 2
  %200 = load i64, i64* %199, align 8
  %201 = icmp sgt i64 %200, 0
  br i1 %201, label %202, label %265

; <label>:202:                                    ; preds = %196
  %203 = load %struct.Edge*, %struct.Edge** %44, align 8
  %204 = getelementptr inbounds %struct.Edge, %struct.Edge* %203, i32 0, i32 0
  %205 = load i32, i32* %204, align 8
  %206 = sext i32 %205 to i64
  %207 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %206) #3
  %208 = load i32, i32* %207, align 4
  %209 = icmp slt i32 %208, 0
  br i1 %209, label %210, label %265

; <label>:210:                                    ; preds = %202
  %211 = load i32, i32* %40, align 4
  %212 = sext i32 %211 to i64
  %213 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %212) #3
  %214 = load i32, i32* %213, align 4
  %215 = sub i32 %214, 743671520
  %216 = add i32 %215, 1
  %217 = add i32 %216, 743671520
  %218 = add nsw i32 %214, 1
  %219 = load %struct.Edge*, %struct.Edge** %44, align 8
  %220 = getelementptr inbounds %struct.Edge, %struct.Edge* %219, i32 0, i32 0
  %221 = load i32, i32* %220, align 8
  %222 = sext i32 %221 to i64
  %223 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %222) #3
  store i32 %217, i32* %223, align 4
  %224 = load %struct.Edge*, %struct.Edge** %44, align 8
  %225 = getelementptr inbounds %struct.Edge, %struct.Edge* %224, i32 0, i32 0
  invoke void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque.8"* %34, i32* dereferenceable(4) %225)
          to label %226 unwind label %261

; <label>:226:                                    ; preds = %210
  br label %265

; <label>:227:                                    ; preds = %124
  %228 = load i32, i32* @x.28
  %229 = load i32, i32* @y.29
  %230 = sub i32 %228, 613724417
  %231 = sub i32 %230, 1
  %232 = add i32 %231, 613724417
  %233 = sub i32 %228, 1
  %234 = mul i32 %228, %232
  %235 = urem i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = icmp slt i32 %229, 10
  %238 = and i1 %236, %237
  %239 = xor i1 %236, %237
  %240 = or i1 %238, %239
  %241 = or i1 %236, %237
  br i1 %240, label %242, label %442

; <label>:242:                                    ; preds = %227, %442
  %243 = landingpad { i8*, i32 }
          cleanup
  %244 = extractvalue { i8*, i32 } %243, 0
  store i8* %244, i8** %38, align 8
  %245 = extractvalue { i8*, i32 } %243, 1
  store i32 %245, i32* %39, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.2"* %37) #3
  %246 = load i32, i32* @x.28
  %247 = load i32, i32* @y.29
  %248 = add i32 %246, 768022672
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, 768022672
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %442

; <label>:260:                                    ; preds = %242
  br label %364

; <label>:261:                                    ; preds = %210
  %262 = landingpad { i8*, i32 }
          cleanup
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %38, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %39, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %34) #3
  br label %364

; <label>:265:                                    ; preds = %226, %202, %196
  %266 = load i32, i32* @x.28
  %267 = load i32, i32* @y.29
  %268 = add i32 %266, 1986708345
  %269 = sub i32 %268, 1
  %270 = sub i32 %269, 1986708345
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %446

; <label>:292:                                    ; preds = %265, %446
  %293 = load i32, i32* @x.28
  %294 = load i32, i32* @y.29
  %295 = sub i32 0, 1
  %296 = add i32 %293, %295
  %297 = sub i32 %293, 1
  %298 = mul i32 %293, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %294, 10
  %302 = xor i1 %300, true
  %303 = xor i1 %301, true
  %304 = xor i1 true, true
  %305 = and i1 %302, true
  %306 = and i1 %300, %304
  %307 = and i1 %303, true
  %308 = and i1 %301, %304
  %309 = or i1 %305, %306
  %310 = or i1 %307, %308
  %311 = xor i1 %309, %310
  %312 = or i1 %302, %303
  %313 = xor i1 %312, true
  %314 = or i1 true, %304
  %315 = and i1 %313, %314
  %316 = or i1 %311, %315
  %317 = or i1 %300, %301
  br i1 %316, label %318, label %446

; <label>:318:                                    ; preds = %292
  br label %319

; <label>:319:                                    ; preds = %318
  %320 = load i32, i32* @x.28
  %321 = load i32, i32* @y.29
  %322 = sub i32 0, 1
  %323 = add i32 %320, %322
  %324 = sub i32 %320, 1
  %325 = mul i32 %320, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %321, 10
  %329 = and i1 %327, %328
  %330 = xor i1 %327, %328
  %331 = or i1 %329, %330
  %332 = or i1 %327, %328
  br i1 %331, label %333, label %447

; <label>:333:                                    ; preds = %319, %447
  %334 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EppEv(%"struct.std::_Deque_iterator"* %42) #3
  %335 = load i32, i32* @x.28
  %336 = load i32, i32* @y.29
  %337 = add i32 %335, -1219887556
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, -1219887556
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = xor i1 %343, true
  %346 = xor i1 %344, true
  %347 = xor i1 true, true
  %348 = and i1 %345, true
  %349 = and i1 %343, %347
  %350 = and i1 %346, true
  %351 = and i1 %344, %347
  %352 = or i1 %348, %349
  %353 = or i1 %350, %351
  %354 = xor i1 %352, %353
  %355 = or i1 %345, %346
  %356 = xor i1 %355, true
  %357 = or i1 true, %347
  %358 = and i1 %356, %357
  %359 = or i1 %354, %358
  %360 = or i1 %343, %344
  br i1 %359, label %361, label %447

; <label>:361:                                    ; preds = %333
  br label %194

; <label>:362:                                    ; preds = %194
  br label %126

; <label>:363:                                    ; preds = %126
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"* %34) #3
  ret void

; <label>:364:                                    ; preds = %261, %260
  %365 = load i32, i32* @x.28
  %366 = load i32, i32* @y.29
  %367 = add i32 %365, 1569796770
  %368 = sub i32 %367, 1
  %369 = sub i32 %368, 1569796770
  %370 = sub i32 %365, 1
  %371 = mul i32 %365, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %366, 10
  %375 = and i1 %373, %374
  %376 = xor i1 %373, %374
  %377 = or i1 %375, %376
  %378 = or i1 %373, %374
  br i1 %377, label %379, label %449

; <label>:379:                                    ; preds = %364, %449
  %380 = load i8*, i8** %38, align 8
  %381 = load i32, i32* %39, align 4
  %382 = insertvalue { i8*, i32 } undef, i8* %380, 0
  %383 = insertvalue { i8*, i32 } %382, i32 %381, 1
  %384 = load i32, i32* @x.28
  %385 = load i32, i32* @y.29
  %386 = add i32 %384, -295972385
  %387 = sub i32 %386, 1
  %388 = sub i32 %387, -295972385
  %389 = sub i32 %384, 1
  %390 = mul i32 %384, %388
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %385, 10
  %394 = and i1 %392, %393
  %395 = xor i1 %392, %393
  %396 = or i1 %394, %395
  %397 = or i1 %392, %393
  br i1 %396, label %398, label %449

; <label>:398:                                    ; preds = %379
  resume { i8*, i32 } %383

; <label>:399:                                    ; preds = %28, %1
  %400 = alloca i32, align 4
  %401 = alloca %"class.std::vector.0"*, align 8
  %402 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %403 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %404 = alloca i32*, align 8
  %405 = alloca %"class.std::deque.8", align 8
  %406 = alloca %"class.std::initializer_list", align 8
  %407 = alloca [1 x i32], align 4
  %408 = alloca %"class.std::allocator.2", align 1
  %409 = alloca i8*
  %410 = alloca i32
  %411 = alloca i32, align 4
  %412 = alloca %"class.std::deque"*, align 8
  %413 = alloca %"struct.std::_Deque_iterator", align 8
  %414 = alloca %"struct.std::_Deque_iterator", align 8
  %415 = alloca %struct.Edge*, align 8
  store i32 %0, i32* %400, align 4
  store %"class.std::vector.0"* @level, %"class.std::vector.0"** %401, align 8
  %416 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.0"* @level) #3
  %417 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %402, i32 0, i32 0
  store i32* %416, i32** %417, align 8
  %418 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.0"* @level) #3
  %419 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %403, i32 0, i32 0
  store i32* %418, i32** %419, align 8
  br label %28

; <label>:420:                                    ; preds = %96, %82
  %421 = load i32, i32* %29, align 4
  %422 = sext i32 %421 to i64
  %423 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %422) #3
  store i32 0, i32* %423, align 4
  %424 = getelementptr inbounds [1 x i32], [1 x i32]* %36, i64 0, i64 0
  %425 = load i32, i32* %29, align 4
  store i32 %425, i32* %424, align 4
  %426 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %35, i32 0, i32 0
  %427 = getelementptr inbounds [1 x i32], [1 x i32]* %36, i64 0, i64 0
  store i32* %427, i32** %426, align 8
  %428 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %35, i32 0, i32 1
  store i64 1, i64* %428, align 8
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.2"* %37) #3
  %429 = bitcast %"class.std::initializer_list"* %35 to { i32*, i64 }*
  %430 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %429, i32 0, i32 0
  %431 = load i32*, i32** %430, align 8
  %432 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %429, i32 0, i32 1
  %433 = load i64, i64* %432, align 8
  br label %96

; <label>:434:                                    ; preds = %160, %134
  %435 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque.8"* %34) #3
  %436 = load i32, i32* %435, align 4
  store i32 %436, i32* %40, align 4
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque.8"* %34) #3
  %437 = load i32, i32* %40, align 4
  %438 = sext i32 %437 to i64
  %439 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %438) #3
  store %"class.std::deque"* %439, %"class.std::deque"** %41, align 8
  %440 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %42, %"class.std::deque"* %440) #3
  %441 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %43, %"class.std::deque"* %441) #3
  br label %160

; <label>:442:                                    ; preds = %242, %227
  %443 = landingpad { i8*, i32 }
          cleanup
  %444 = extractvalue { i8*, i32 } %443, 0
  store i8* %444, i8** %38, align 8
  %445 = extractvalue { i8*, i32 } %443, 1
  store i32 %445, i32* %39, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.2"* %37) #3
  br label %242

; <label>:446:                                    ; preds = %292, %265
  br label %292

; <label>:447:                                    ; preds = %333, %319
  %448 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EppEv(%"struct.std::_Deque_iterator"* %42) #3
  br label %333

; <label>:449:                                    ; preds = %379, %364
  %450 = load i8*, i8** %38, align 8
  %451 = load i32, i32* %39, align 4
  %452 = insertvalue { i8*, i32 } undef, i8* %450, 0
  %453 = insertvalue { i8*, i32 } %452, i32 %451, 1
  br label %379
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %4 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %5 = bitcast %"class.std::vector.0"* %4 to %"struct.std::_Vector_base.1"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.32
  %6 = load i32, i32* @y.33
  %7 = add i32 %5, -1905499239
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1905499239
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -298888084, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -298888084, label %19
    i32 2139430097, label %39
    i32 -1392291585, label %74
    i32 -39357012, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2139430097, i32 -39357012
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %40, i32** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %40, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.32
  %49 = load i32, i32* @y.33
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1392291585, i32 -39357012
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile i32*, i32** %2
  ret i32* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %78 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %78, align 8
  %79 = load %"class.std::vector.0"*, %"class.std::vector.0"** %78, align 8
  %80 = bitcast %"class.std::vector.0"* %79 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"* %77, i32** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  store i32 2139430097, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.34
  %7 = load i32, i32* @y.35
  %8 = add i32 %6, -284515461
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -284515461
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -944147662, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -944147662, label %20
    i32 -1618300861, label %28
    i32 1408902128, label %64
    i32 -2131515362, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1618300861, i32 -2131515362
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %29, align 8
  %32 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %31) #3
  %33 = load i32*, i32** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %30, align 8
  %35 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %34) #3
  %36 = load i32*, i32** %35, align 8
  %37 = icmp ne i32* %33, %36
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.34
  %39 = load i32, i32* @y.35
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 1408902128, i32 -2131515362
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i1, i1* %3
  ret i1 %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %68 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %69 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %67, align 8
  %70 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %69) #3
  %71 = load i32*, i32** %70, align 8
  %72 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %68, align 8
  %73 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %72) #3
  %74 = load i32*, i32** %73, align 8
  %75 = icmp ne i32* %71, %74
  store i32 -1618300861, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.36
  %6 = load i32, i32* @y.37
  %7 = sub i32 %5, 1501392967
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1501392967
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 909350196, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 909350196, label %19
    i32 1707144929, label %27
    i32 -83556188, label %59
    i32 1722032671, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1707144929, i32 1722032671
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.36
  %33 = load i32, i32* @y.37
  %34 = sub i32 %32, 535139855
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 535139855
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -83556188, i32 1722032671
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %63 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %62, align 8
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 1707144929, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.38
  %6 = load i32, i32* @y.39
  %7 = add i32 %5, 956859566
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 956859566
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1082165778, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1082165778, label %19
    i32 726233049, label %27
    i32 -1443619681, label %49
    i32 1387356370, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 726233049, i32 1387356370
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %28, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %29, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %30, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds i32, i32* %32, i32 1
  store i32* %33, i32** %31, align 8
  %34 = load i32, i32* @x.38
  %35 = load i32, i32* @y.39
  %36 = add i32 %34, -1346395204
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1346395204
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1443619681, i32 1387356370
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %53 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %53, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = getelementptr inbounds i32, i32* %55, i32 1
  store i32* %56, i32** %54, align 8
  store i32 726233049, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2ESt16initializer_listIiERKS0_(%"class.std::deque.8"*, i32*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.44
  %6 = load i32, i32* @y.45
  %7 = add i32 %5, 683895196
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 683895196
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %145

; <label>:19:                                     ; preds = %4, %145
  %20 = alloca %"class.std::initializer_list", align 8
  %21 = alloca %"class.std::deque.8"*, align 8
  %22 = alloca %"class.std::allocator.2"*, align 8
  %23 = alloca %"struct.std::forward_iterator_tag", align 1
  %24 = alloca %"struct.std::random_access_iterator_tag", align 1
  %25 = alloca i8*
  %26 = alloca i32
  %27 = bitcast %"class.std::initializer_list"* %20 to { i32*, i64 }*
  %28 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %27, i32 0, i32 0
  store i32* %1, i32** %28, align 8
  %29 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %27, i32 0, i32 1
  store i64 %2, i64* %29, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %21, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %22, align 8
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %21, align 8
  %31 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %22, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_(%"class.std::_Deque_base.9"* %31, %"class.std::allocator.2"* dereferenceable(1) %32)
  %33 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list"* %20) #3
  %34 = call i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list"* %20) #3
  %35 = bitcast %"struct.std::random_access_iterator_tag"* %24 to %"struct.std::forward_iterator_tag"*
  %36 = load i32, i32* @x.44
  %37 = load i32, i32* @y.45
  %38 = sub i32 %36, 1216056875
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1216056875
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %145

; <label>:62:                                     ; preds = %19
  invoke void @_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::deque.8"* %30, i32* %33, i32* %34)
          to label %63 unwind label %93

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.44
  %65 = load i32, i32* @y.45
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %162

; <label>:77:                                     ; preds = %63, %162
  %78 = load i32, i32* @x.44
  %79 = load i32, i32* @y.45
  %80 = add i32 %78, -1204174617
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1204174617
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %162

; <label>:92:                                     ; preds = %77
  ret void

; <label>:93:                                     ; preds = %62
  %94 = load i32, i32* @x.44
  %95 = load i32, i32* @y.45
  %96 = add i32 %94, -1521128204
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, -1521128204
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  br i1 %106, label %108, label %163

; <label>:108:                                    ; preds = %93, %163
  %109 = landingpad { i8*, i32 }
          cleanup
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %25, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %26, align 4
  %112 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %112) #3
  %113 = load i32, i32* @x.44
  %114 = load i32, i32* @y.45
  %115 = add i32 %113, -263355736
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -263355736
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %163

; <label>:139:                                    ; preds = %108
  br label %140

; <label>:140:                                    ; preds = %139
  %141 = load i8*, i8** %25, align 8
  %142 = load i32, i32* %26, align 4
  %143 = insertvalue { i8*, i32 } undef, i8* %141, 0
  %144 = insertvalue { i8*, i32 } %143, i32 %142, 1
  resume { i8*, i32 } %144

; <label>:145:                                    ; preds = %19, %4
  %146 = alloca %"class.std::initializer_list", align 8
  %147 = alloca %"class.std::deque.8"*, align 8
  %148 = alloca %"class.std::allocator.2"*, align 8
  %149 = alloca %"struct.std::forward_iterator_tag", align 1
  %150 = alloca %"struct.std::random_access_iterator_tag", align 1
  %151 = alloca i8*
  %152 = alloca i32
  %153 = bitcast %"class.std::initializer_list"* %146 to { i32*, i64 }*
  %154 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %153, i32 0, i32 0
  store i32* %1, i32** %154, align 8
  %155 = getelementptr inbounds { i32*, i64 }, { i32*, i64 }* %153, i32 0, i32 1
  store i64 %2, i64* %155, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %147, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %148, align 8
  %156 = load %"class.std::deque.8"*, %"class.std::deque.8"** %147, align 8
  %157 = bitcast %"class.std::deque.8"* %156 to %"class.std::_Deque_base.9"*
  %158 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %148, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_(%"class.std::_Deque_base.9"* %157, %"class.std::allocator.2"* dereferenceable(1) %158)
  %159 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list"* %146) #3
  %160 = call i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list"* %146) #3
  %161 = bitcast %"struct.std::random_access_iterator_tag"* %150 to %"struct.std::forward_iterator_tag"*
  br label %19

; <label>:162:                                    ; preds = %77, %63
  br label %77

; <label>:163:                                    ; preds = %108, %93
  %164 = landingpad { i8*, i32 }
          cleanup
  %165 = extractvalue { i8*, i32 } %164, 0
  store i8* %165, i8** %25, align 8
  %166 = extractvalue { i8*, i32 } %164, 1
  store i32 %166, i32* %26, align 4
  %167 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %167) #3
  br label %108
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.2"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %3 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  %4 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %5 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %8 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator.10"* dereferenceable(32) %6, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.10"* sret %3, %"class.std::deque.8"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator.10"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque.8"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.52
  %3 = load i32, i32* @y.53
  %4 = sub i32 %2, 548655309
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 548655309
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %146

; <label>:28:                                     ; preds = %1, %146
  %29 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %29, align 8
  %30 = load %"class.std::deque.8"*, %"class.std::deque.8"** %29, align 8
  %31 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %32 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %37 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 2
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %38, i32 0, i32 2
  %40 = load i32*, i32** %39, align 8
  %41 = getelementptr inbounds i32, i32* %40, i64 -1
  %42 = icmp ne i32* %35, %41
  %43 = load i32, i32* @x.52
  %44 = load i32, i32* @y.53
  %45 = sub i32 %43, 1653994230
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1653994230
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %146

; <label>:69:                                     ; preds = %28
  br i1 %42, label %70, label %86

; <label>:70:                                     ; preds = %69
  %71 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %72 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %71, i32 0, i32 0
  %73 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72 to %"class.std::allocator.2"*
  %74 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %75 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75, i32 0, i32 2
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %76, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %73, i32* %78)
          to label %79 unwind label %143

; <label>:79:                                     ; preds = %70
  %80 = bitcast %"class.std::deque.8"* %30 to %"class.std::_Deque_base.9"*
  %81 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 2
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = getelementptr inbounds i32, i32* %84, i32 1
  store i32* %85, i32** %83, align 8
  br label %142

; <label>:86:                                     ; preds = %69
  %87 = load i32, i32* @x.52
  %88 = load i32, i32* @y.53
  %89 = sub i32 %87, 1811639244
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 1811639244
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %161

; <label>:113:                                    ; preds = %86, %161
  %114 = load i32, i32* @x.52
  %115 = load i32, i32* @y.53
  %116 = add i32 %114, 1952534310
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, 1952534310
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %161

; <label>:140:                                    ; preds = %113
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque.8"* %30)
          to label %141 unwind label %143

; <label>:141:                                    ; preds = %140
  br label %142

; <label>:142:                                    ; preds = %141, %79
  ret void

; <label>:143:                                    ; preds = %140, %70
  %144 = landingpad { i8*, i32 }
          catch i8* null
  %145 = extractvalue { i8*, i32 } %144, 0
  call void @__clang_call_terminate(i8* %145) #11
  unreachable

; <label>:146:                                    ; preds = %28, %1
  %147 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %147, align 8
  %148 = load %"class.std::deque.8"*, %"class.std::deque.8"** %147, align 8
  %149 = bitcast %"class.std::deque.8"* %148 to %"class.std::_Deque_base.9"*
  %150 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %150, i32 0, i32 2
  %152 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %151, i32 0, i32 0
  %153 = load i32*, i32** %152, align 8
  %154 = bitcast %"class.std::deque.8"* %148 to %"class.std::_Deque_base.9"*
  %155 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %154, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %155, i32 0, i32 2
  %157 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %156, i32 0, i32 2
  %158 = load i32*, i32** %157, align 8
  %159 = getelementptr inbounds i32, i32* %158, i64 -1
  %160 = icmp ne i32* %153, %159
  br label %28

; <label>:161:                                    ; preds = %113, %86
  br label %113
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStneI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  %8 = xor i1 %7, true
  %9 = and i1 false, %8
  %10 = xor i1 false, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, false
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque.8"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque.8"*
  %5 = alloca i32**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.62
  %9 = load i32, i32* @y.63
  %10 = sub i32 %8, -795195294
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -795195294
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1629313842, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %213
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1629313842, label %22
    i32 891326964, label %30
    i32 220735333, label %76
    i32 1124011957, label %79
    i32 -771939750, label %99
    i32 -737617970, label %115
    i32 -1089817232, label %146
    i32 826648416, label %147
    i32 -1420594190, label %163
    i32 -1141287618, label %191
    i32 -841145057, label %192
    i32 982900547, label %208
    i32 -773020362, label %212
  ]

; <label>:21:                                     ; preds = %19
  br label %213

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 891326964, i32 -841145057
  store i32 %29, i32* %18
  br label %213

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::deque.8"*, align 8
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %5
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %31, align 8
  %33 = load volatile i32**, i32*** %5
  store i32* %1, i32** %33, align 8
  %34 = load %"class.std::deque.8"*, %"class.std::deque.8"** %31, align 8
  store %"class.std::deque.8"* %34, %"class.std::deque.8"** %4
  %35 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %36 = bitcast %"class.std::deque.8"* %35 to %"class.std::_Deque_base.9"*
  %37 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %38, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %42 = bitcast %"class.std::deque.8"* %41 to %"class.std::_Deque_base.9"*
  %43 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %44, i32 0, i32 2
  %46 = load i32*, i32** %45, align 8
  %47 = getelementptr inbounds i32, i32* %46, i64 -1
  %48 = icmp ne i32* %40, %47
  store i1 %48, i1* %3
  %49 = load i32, i32* @x.62
  %50 = load i32, i32* @y.63
  %51 = sub i32 %49, -1782036462
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1782036462
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 220735333, i32 -841145057
  store i32 %75, i32* %18
  br label %213

; <label>:76:                                     ; preds = %19
  %77 = load volatile i1, i1* %3
  %78 = select i1 %77, i32 1124011957, i32 -771939750
  store i32 %78, i32* %18
  br label %213

; <label>:79:                                     ; preds = %19
  %80 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %81 = bitcast %"class.std::deque.8"* %80 to %"class.std::_Deque_base.9"*
  %82 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82 to %"class.std::allocator.2"*
  %84 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %85 = bitcast %"class.std::deque.8"* %84 to %"class.std::_Deque_base.9"*
  %86 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %86, i32 0, i32 3
  %88 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %87, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = load volatile i32**, i32*** %5
  %91 = load i32*, i32** %90, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %83, i32* %89, i32* dereferenceable(4) %91)
  %92 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  %93 = bitcast %"class.std::deque.8"* %92 to %"class.std::_Deque_base.9"*
  %94 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 3
  %96 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %95, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = getelementptr inbounds i32, i32* %97, i32 1
  store i32* %98, i32** %96, align 8
  store i32 826648416, i32* %18
  br label %213

; <label>:99:                                     ; preds = %19
  %100 = load i32, i32* @x.62
  %101 = load i32, i32* @y.63
  %102 = sub i32 %100, -209690978
  %103 = sub i32 %102, 1
  %104 = add i32 %103, -209690978
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  %114 = select i1 %112, i32 -737617970, i32 982900547
  store i32 %114, i32* %18
  br label %213

; <label>:115:                                    ; preds = %19
  %116 = load volatile i32**, i32*** %5
  %117 = load i32*, i32** %116, align 8
  %118 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque.8"* %118, i32* dereferenceable(4) %117)
  %119 = load i32, i32* @x.62
  %120 = load i32, i32* @y.63
  %121 = add i32 %119, -596980553
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -596980553
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 -1089817232, i32 982900547
  store i32 %145, i32* %18
  br label %213

; <label>:146:                                    ; preds = %19
  store i32 826648416, i32* %18
  br label %213

; <label>:147:                                    ; preds = %19
  %148 = load i32, i32* @x.62
  %149 = load i32, i32* @y.63
  %150 = sub i32 %148, 1452210114
  %151 = sub i32 %150, 1
  %152 = add i32 %151, 1452210114
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 -1420594190, i32 -773020362
  store i32 %162, i32* %18
  br label %213

; <label>:163:                                    ; preds = %19
  %164 = load i32, i32* @x.62
  %165 = load i32, i32* @y.63
  %166 = sub i32 %164, 1404780447
  %167 = sub i32 %166, 1
  %168 = add i32 %167, 1404780447
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 false, true
  %177 = and i1 %174, false
  %178 = and i1 %172, %176
  %179 = and i1 %175, false
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 false, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  %190 = select i1 %188, i32 -1141287618, i32 -773020362
  store i32 %190, i32* %18
  br label %213

; <label>:191:                                    ; preds = %19
  ret void

; <label>:192:                                    ; preds = %19
  %193 = alloca %"class.std::deque.8"*, align 8
  %194 = alloca i32*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %193, align 8
  store i32* %1, i32** %194, align 8
  %195 = load %"class.std::deque.8"*, %"class.std::deque.8"** %193, align 8
  %196 = bitcast %"class.std::deque.8"* %195 to %"class.std::_Deque_base.9"*
  %197 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %197, i32 0, i32 3
  %199 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %198, i32 0, i32 0
  %200 = load i32*, i32** %199, align 8
  %201 = bitcast %"class.std::deque.8"* %195 to %"class.std::_Deque_base.9"*
  %202 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %202, i32 0, i32 3
  %204 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %203, i32 0, i32 2
  %205 = load i32*, i32** %204, align 8
  %206 = getelementptr inbounds i32, i32* %205, i64 -1
  %207 = icmp ne i32* %200, %206
  store i32 891326964, i32* %18
  br label %213

; <label>:208:                                    ; preds = %19
  %209 = load volatile i32**, i32*** %5
  %210 = load i32*, i32** %209, align 8
  %211 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %4
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque.8"* %211, i32* dereferenceable(4) %210)
  store i32 -737617970, i32* %18
  br label %213

; <label>:212:                                    ; preds = %19
  store i32 -1420594190, i32* %18
  br label %213

; <label>:213:                                    ; preds = %212, %208, %192, %163, %147, %146, %115, %99, %79, %76, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EppEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"struct.std::_Deque_iterator"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.64
  %7 = load i32, i32* @y.65
  %8 = add i32 %6, -1618823283
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1618823283
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -575229988, i32* %16
  br label %17

; <label>:17:                                     ; preds = %1, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -575229988, label %20
    i32 1994998614, label %28
    i32 -19408188, label %57
    i32 615501337, label %60
    i32 -1409241151, label %71
    i32 -1164295102, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1994998614, i32 -1164295102
  store i32 %27, i32* %16
  br label %84

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %29, align 8
  %30 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  store %"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"** %3
  %31 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %31, i32 0, i32 0
  %33 = load %struct.Edge*, %struct.Edge** %32, align 8
  %34 = getelementptr inbounds %struct.Edge, %struct.Edge* %33, i32 1
  store %struct.Edge* %34, %struct.Edge** %32, align 8
  %35 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %35, i32 0, i32 0
  %37 = load %struct.Edge*, %struct.Edge** %36, align 8
  %38 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 2
  %40 = load %struct.Edge*, %struct.Edge** %39, align 8
  %41 = icmp eq %struct.Edge* %37, %40
  store i1 %41, i1* %2
  %42 = load i32, i32* @x.64
  %43 = load i32, i32* @y.65
  %44 = sub i32 %42, -201184128
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -201184128
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -19408188, i32 -1164295102
  store i32 %56, i32* %16
  br label %84

; <label>:57:                                     ; preds = %17
  %58 = load volatile i1, i1* %2
  %59 = select i1 %58, i32 615501337, i32 -1409241151
  store i32 %59, i32* %16
  br label %84

; <label>:60:                                     ; preds = %17
  %61 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %62 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %61, i32 0, i32 3
  %63 = load %struct.Edge**, %struct.Edge*** %62, align 8
  %64 = getelementptr inbounds %struct.Edge*, %struct.Edge** %63, i64 1
  %65 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %65, %struct.Edge** %64) #3
  %66 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %67 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %66, i32 0, i32 1
  %68 = load %struct.Edge*, %struct.Edge** %67, align 8
  %69 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  store %struct.Edge* %68, %struct.Edge** %70, align 8
  store i32 -1409241151, i32* %16
  br label %84

; <label>:71:                                     ; preds = %17
  %72 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3
  ret %"struct.std::_Deque_iterator"* %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %74, align 8
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  %77 = load %struct.Edge*, %struct.Edge** %76, align 8
  %78 = getelementptr inbounds %struct.Edge, %struct.Edge* %77, i32 1
  store %struct.Edge* %78, %struct.Edge** %76, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  %80 = load %struct.Edge*, %struct.Edge** %79, align 8
  %81 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 2
  %82 = load %struct.Edge*, %struct.Edge** %81, align 8
  %83 = icmp eq %struct.Edge* %80, %82
  store i32 1994998614, i32* %16
  br label %84

; <label>:84:                                     ; preds = %73, %60, %57, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque.8"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  %4 = alloca %"struct.std::_Deque_iterator.10", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.10"* sret %3, %"class.std::deque.8"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.10"* sret %4, %"class.std::deque.8"* %7) #3
  %8 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %9 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque.8"* %7, %"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* %4, %"class.std::allocator.2"* dereferenceable(1) %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %11) #3
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %18) #11
  unreachable
}

; Function Attrs: noinline uwtable
define i64 @_Z3dfsiix(i32, i32, i64) #0 {
  %4 = alloca i1
  %5 = alloca i32
  %6 = alloca i32
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  %12 = alloca %struct.Edge*, align 8
  %13 = alloca i64, align 8
  store i32 %0, i32* %8, align 4
  store i32 %1, i32* %9, align 4
  store i64 %2, i64* %10, align 8
  %14 = load i32, i32* %8, align 4
  store i32 %14, i32* %6
  %15 = load i32, i32* %9, align 4
  store i32 %15, i32* %5
  %16 = alloca i32
  store i32 -2118155128, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %254
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2118155128, label %20
    i32 1892450592, label %25
    i32 402670242, label %41
    i32 1902267403, label %57
    i32 512367270, label %58
    i32 -757565170, label %63
    i32 1232343479, label %72
    i32 -338255434, label %100
    i32 425754045, label %129
    i32 -1759895572, label %132
    i32 2030407772, label %145
    i32 20145164, label %158
    i32 -1392884902, label %184
    i32 -1749777250, label %185
    i32 -868920499, label %186
    i32 -763476187, label %191
    i32 -1580124604, label %206
    i32 -257163551, label %233
    i32 592680769, label %234
    i32 2073429582, label %236
    i32 -497751923, label %238
    i32 933078113, label %253
  ]

; <label>:19:                                     ; preds = %17
  br label %254

; <label>:20:                                     ; preds = %17
  %21 = load volatile i32, i32* %6
  %22 = load volatile i32, i32* %5
  %23 = icmp eq i32 %21, %22
  %24 = select i1 %23, i32 1892450592, i32 512367270
  store i32 %24, i32* %16
  br label %254

; <label>:25:                                     ; preds = %17
  %26 = load i32, i32* @x.68
  %27 = load i32, i32* @y.69
  %28 = add i32 %26, 699878735
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, 699878735
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 402670242, i32 2073429582
  store i32 %40, i32* %16
  br label %254

; <label>:41:                                     ; preds = %17
  %42 = load i64, i64* %10, align 8
  store i64 %42, i64* %7, align 8
  %43 = load i32, i32* @x.68
  %44 = load i32, i32* @y.69
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1902267403, i32 2073429582
  store i32 %56, i32* %16
  br label %254

; <label>:57:                                     ; preds = %17
  store i32 592680769, i32* %16
  br label %254

; <label>:58:                                     ; preds = %17
  %59 = load i32, i32* %8, align 4
  %60 = sext i32 %59 to i64
  %61 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @iter, i64 %60) #3
  %62 = load i32, i32* %61, align 4
  store i32 %62, i32* %11, align 4
  store i32 -757565170, i32* %16
  br label %254

; <label>:63:                                     ; preds = %17
  %64 = load i32, i32* %11, align 4
  %65 = load i32, i32* %8, align 4
  %66 = sext i32 %65 to i64
  %67 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %66) #3
  %68 = call i64 @_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv(%"class.std::deque"* %67) #3
  %69 = trunc i64 %68 to i32
  %70 = icmp slt i32 %64, %69
  %71 = select i1 %70, i32 1232343479, i32 -763476187
  store i32 %71, i32* %16
  br label %254

; <label>:72:                                     ; preds = %17
  %73 = load i32, i32* @x.68
  %74 = load i32, i32* @y.69
  %75 = sub i32 %73, 2110318332
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 2110318332
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 -338255434, i32 -497751923
  store i32 %99, i32* %16
  br label %254

; <label>:100:                                    ; preds = %17
  %101 = load i32, i32* %11, align 4
  %102 = load i32, i32* %8, align 4
  %103 = sext i32 %102 to i64
  %104 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @iter, i64 %103) #3
  store i32 %101, i32* %104, align 4
  %105 = load i32, i32* %8, align 4
  %106 = sext i32 %105 to i64
  %107 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %106) #3
  %108 = load i32, i32* %11, align 4
  %109 = sext i32 %108 to i64
  %110 = call dereferenceable(24) %struct.Edge* @_ZNSt5dequeI4EdgeSaIS0_EEixEm(%"class.std::deque"* %107, i64 %109) #3
  store %struct.Edge* %110, %struct.Edge** %12, align 8
  %111 = load %struct.Edge*, %struct.Edge** %12, align 8
  %112 = getelementptr inbounds %struct.Edge, %struct.Edge* %111, i32 0, i32 2
  %113 = load i64, i64* %112, align 8
  %114 = icmp sgt i64 %113, 0
  store i1 %114, i1* %4
  %115 = load i32, i32* @x.68
  %116 = load i32, i32* @y.69
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 425754045, i32 -497751923
  store i32 %128, i32* %16
  br label %254

; <label>:129:                                    ; preds = %17
  %130 = load volatile i1, i1* %4
  %131 = select i1 %130, i32 -1759895572, i32 -1749777250
  store i32 %131, i32* %16
  br label %254

; <label>:132:                                    ; preds = %17
  %133 = load i32, i32* %8, align 4
  %134 = sext i32 %133 to i64
  %135 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %134) #3
  %136 = load i32, i32* %135, align 4
  %137 = load %struct.Edge*, %struct.Edge** %12, align 8
  %138 = getelementptr inbounds %struct.Edge, %struct.Edge* %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  %141 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %140) #3
  %142 = load i32, i32* %141, align 4
  %143 = icmp slt i32 %136, %142
  %144 = select i1 %143, i32 2030407772, i32 -1749777250
  store i32 %144, i32* %16
  br label %254

; <label>:145:                                    ; preds = %17
  %146 = load %struct.Edge*, %struct.Edge** %12, align 8
  %147 = getelementptr inbounds %struct.Edge, %struct.Edge* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = load i32, i32* %9, align 4
  %150 = load %struct.Edge*, %struct.Edge** %12, align 8
  %151 = getelementptr inbounds %struct.Edge, %struct.Edge* %150, i32 0, i32 2
  %152 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %10, i64* dereferenceable(8) %151)
  %153 = load i64, i64* %152, align 8
  %154 = call i64 @_Z3dfsiix(i32 %148, i32 %149, i64 %153)
  store i64 %154, i64* %13, align 8
  %155 = load i64, i64* %13, align 8
  %156 = icmp sgt i64 %155, 0
  %157 = select i1 %156, i32 20145164, i32 -1392884902
  store i32 %157, i32* %16
  br label %254

; <label>:158:                                    ; preds = %17
  %159 = load i64, i64* %13, align 8
  %160 = load %struct.Edge*, %struct.Edge** %12, align 8
  %161 = getelementptr inbounds %struct.Edge, %struct.Edge* %160, i32 0, i32 2
  %162 = load i64, i64* %161, align 8
  %163 = add i64 %162, -6508213702618340937
  %164 = sub i64 %163, %159
  %165 = sub i64 %164, -6508213702618340937
  %166 = sub nsw i64 %162, %159
  store i64 %165, i64* %161, align 8
  %167 = load i64, i64* %13, align 8
  %168 = load %struct.Edge*, %struct.Edge** %12, align 8
  %169 = getelementptr inbounds %struct.Edge, %struct.Edge* %168, i32 0, i32 0
  %170 = load i32, i32* %169, align 8
  %171 = sext i32 %170 to i64
  %172 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %171) #3
  %173 = load %struct.Edge*, %struct.Edge** %12, align 8
  %174 = getelementptr inbounds %struct.Edge, %struct.Edge* %173, i32 0, i32 3
  %175 = load i32, i32* %174, align 8
  %176 = sext i32 %175 to i64
  %177 = call dereferenceable(24) %struct.Edge* @_ZNSt5dequeI4EdgeSaIS0_EEixEm(%"class.std::deque"* %172, i64 %176) #3
  %178 = getelementptr inbounds %struct.Edge, %struct.Edge* %177, i32 0, i32 2
  %179 = load i64, i64* %178, align 8
  %180 = sub i64 0, %167
  %181 = sub i64 %179, %180
  %182 = add nsw i64 %179, %167
  store i64 %181, i64* %178, align 8
  %183 = load i64, i64* %13, align 8
  store i64 %183, i64* %7, align 8
  store i32 592680769, i32* %16
  br label %254

; <label>:184:                                    ; preds = %17
  store i32 -1749777250, i32* %16
  br label %254

; <label>:185:                                    ; preds = %17
  store i32 -868920499, i32* %16
  br label %254

; <label>:186:                                    ; preds = %17
  %187 = load i32, i32* %11, align 4
  %188 = sub i32 0, 1
  %189 = sub i32 %187, %188
  %190 = add nsw i32 %187, 1
  store i32 %189, i32* %11, align 4
  store i32 -757565170, i32* %16
  br label %254

; <label>:191:                                    ; preds = %17
  %192 = load i32, i32* @x.68
  %193 = load i32, i32* @y.69
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  %205 = select i1 %203, i32 -1580124604, i32 933078113
  store i32 %205, i32* %16
  br label %254

; <label>:206:                                    ; preds = %17
  store i64 0, i64* %7, align 8
  %207 = load i32, i32* @x.68
  %208 = load i32, i32* @y.69
  %209 = sub i32 0, 1
  %210 = add i32 %207, %209
  %211 = sub i32 %207, 1
  %212 = mul i32 %207, %210
  %213 = urem i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = icmp slt i32 %208, 10
  %216 = xor i1 %214, true
  %217 = xor i1 %215, true
  %218 = xor i1 false, true
  %219 = and i1 %216, false
  %220 = and i1 %214, %218
  %221 = and i1 %217, false
  %222 = and i1 %215, %218
  %223 = or i1 %219, %220
  %224 = or i1 %221, %222
  %225 = xor i1 %223, %224
  %226 = or i1 %216, %217
  %227 = xor i1 %226, true
  %228 = or i1 false, %218
  %229 = and i1 %227, %228
  %230 = or i1 %225, %229
  %231 = or i1 %214, %215
  %232 = select i1 %230, i32 -257163551, i32 933078113
  store i32 %232, i32* %16
  br label %254

; <label>:233:                                    ; preds = %17
  store i32 592680769, i32* %16
  br label %254

; <label>:234:                                    ; preds = %17
  %235 = load i64, i64* %7, align 8
  ret i64 %235

; <label>:236:                                    ; preds = %17
  %237 = load i64, i64* %10, align 8
  store i64 %237, i64* %7, align 8
  store i32 402670242, i32* %16
  br label %254

; <label>:238:                                    ; preds = %17
  %239 = load i32, i32* %11, align 4
  %240 = load i32, i32* %8, align 4
  %241 = sext i32 %240 to i64
  %242 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @iter, i64 %241) #3
  store i32 %239, i32* %242, align 4
  %243 = load i32, i32* %8, align 4
  %244 = sext i32 %243 to i64
  %245 = call dereferenceable(80) %"class.std::deque"* @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EEixEm(%"class.std::vector"* @g, i64 %244) #3
  %246 = load i32, i32* %11, align 4
  %247 = sext i32 %246 to i64
  %248 = call dereferenceable(24) %struct.Edge* @_ZNSt5dequeI4EdgeSaIS0_EEixEm(%"class.std::deque"* %245, i64 %247) #3
  store %struct.Edge* %248, %struct.Edge** %12, align 8
  %249 = load %struct.Edge*, %struct.Edge** %12, align 8
  %250 = getelementptr inbounds %struct.Edge, %struct.Edge* %249, i32 0, i32 2
  %251 = load i64, i64* %250, align 8
  %252 = icmp sgt i64 %251, 0
  store i32 -338255434, i32* %16
  br label %254

; <label>:253:                                    ; preds = %17
  store i64 0, i64* %7, align 8
  store i32 -1580124604, i32* %16
  br label %254

; <label>:254:                                    ; preds = %253, %238, %236, %233, %206, %191, %186, %185, %184, %158, %145, %132, %129, %100, %72, %63, %58, %57, %41, %25, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNSt5dequeI4EdgeSaIS0_EEixEm(%"class.std::deque"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = load i64, i64* %4, align 8
  %10 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EixEl(%"struct.std::_Deque_iterator"* %8, i64 %9) #3
  ret %struct.Edge* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 40233383, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 40233383, label %16
    i32 -1702446510, label %21
    i32 443076256, label %23
    i32 -1630017886, label %39
    i32 -1916423637, label %67
    i32 1926215402, label %68
    i32 209084623, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -1702446510, i32 443076256
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 1926215402, i32* %12
  br label %72

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.72
  %25 = load i32, i32* @y.73
  %26 = sub i32 %24, 381528062
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 381528062
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -1630017886, i32 209084623
  store i32 %38, i32* %12
  br label %72

; <label>:39:                                     ; preds = %13
  %40 = load i64*, i64** %6, align 8
  store i64* %40, i64** %5, align 8
  %41 = load i32, i32* @x.72
  %42 = load i32, i32* @y.73
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1916423637, i32 209084623
  store i32 %66, i32* %12
  br label %72

; <label>:67:                                     ; preds = %13
  store i32 1926215402, i32* %12
  br label %72

; <label>:68:                                     ; preds = %13
  %69 = load i64*, i64** %5, align 8
  ret i64* %69

; <label>:70:                                     ; preds = %13
  %71 = load i64*, i64** %6, align 8
  store i64* %71, i64** %5, align 8
  store i32 -1630017886, i32* %12
  br label %72

; <label>:72:                                     ; preds = %70, %67, %39, %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define i64 @_Z8max_flowii(i32, i32) #0 {
  %3 = alloca i64*
  %4 = alloca i32**
  %5 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %7 = alloca %"class.std::vector.0"**
  %8 = alloca i64*
  %9 = alloca i32*
  %10 = alloca i32*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.74
  %14 = load i32, i32* @y.75
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 2110503651, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %215
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 2110503651, label %26
    i32 2039247817, label %34
    i32 391463527, label %60
    i32 -89015443, label %61
    i32 -2034657096, label %71
    i32 -1499805450, label %74
    i32 1645722435, label %82
    i32 -1724405852, label %87
    i32 1461512867, label %93
    i32 -146065948, label %96
    i32 -1589978827, label %111
    i32 286943229, label %132
    i32 -414015397, label %133
    i32 1782831487, label %138
    i32 972562088, label %154
    i32 -1617966755, label %169
    i32 1506264329, label %197
    i32 463686972, label %198
    i32 -482017708, label %207
    i32 -841249352, label %214
  ]

; <label>:25:                                     ; preds = %23
  br label %215

; <label>:26:                                     ; preds = %23
  %27 = load volatile i1, i1* %12
  %28 = load volatile i1, i1* %11
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 2039247817, i32 463686972
  store i32 %33, i32* %22
  br label %215

; <label>:34:                                     ; preds = %23
  %35 = alloca i32, align 4
  store i32* %35, i32** %10
  %36 = alloca i32, align 4
  store i32* %36, i32** %9
  %37 = alloca i64, align 8
  store i64* %37, i64** %8
  %38 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %38, %"class.std::vector.0"*** %7
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %39, %"class.__gnu_cxx::__normal_iterator"** %6
  %40 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.__gnu_cxx::__normal_iterator"* %40, %"class.__gnu_cxx::__normal_iterator"** %5
  %41 = alloca i32*, align 8
  store i32** %41, i32*** %4
  %42 = alloca i64, align 8
  store i64* %42, i64** %3
  %43 = load volatile i32*, i32** %10
  store i32 %0, i32* %43, align 4
  %44 = load volatile i32*, i32** %9
  store i32 %1, i32* %44, align 4
  %45 = load volatile i64*, i64** %8
  store i64 0, i64* %45, align 8
  %46 = load i32, i32* @x.74
  %47 = load i32, i32* @y.75
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 391463527, i32 463686972
  store i32 %59, i32* %22
  br label %215

; <label>:60:                                     ; preds = %23
  store i32 -89015443, i32* %22
  br label %215

; <label>:61:                                     ; preds = %23
  %62 = load volatile i32*, i32** %10
  %63 = load i32, i32* %62, align 4
  call void @_Z3bfsi(i32 %63)
  %64 = load volatile i32*, i32** %9
  %65 = load i32, i32* %64, align 4
  %66 = sext i32 %65 to i64
  %67 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.0"* @level, i64 %66) #3
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, 0
  %70 = select i1 %69, i32 -2034657096, i32 -1499805450
  store i32 %70, i32* %22
  br label %215

; <label>:71:                                     ; preds = %23
  %72 = load volatile i64*, i64** %8
  %73 = load i64, i64* %72, align 8
  ret i64 %73

; <label>:74:                                     ; preds = %23
  %75 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* @iter, %"class.std::vector.0"** %75, align 8
  %76 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.0"* @iter) #3
  %77 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  store i32* %76, i32** %78, align 8
  %79 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.0"* @iter) #3
  %80 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %80, i32 0, i32 0
  store i32* %79, i32** %81, align 8
  store i32 1645722435, i32* %22
  br label %215

; <label>:82:                                     ; preds = %23
  %83 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %84 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %5
  %85 = call zeroext i1 @_ZN9__gnu_cxxneIPiSt6vectorIiSaIiEEEEbRKNS_17__normal_iteratorIT_T0_EESA_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %83, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %84) #3
  %86 = select i1 %85, i32 -1724405852, i32 -146065948
  store i32 %86, i32* %22
  br label %215

; <label>:87:                                     ; preds = %23
  %88 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %89 = call dereferenceable(4) i32* @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %88) #3
  %90 = load volatile i32**, i32*** %4
  store i32* %89, i32** %90, align 8
  %91 = load volatile i32**, i32*** %4
  %92 = load i32*, i32** %91, align 8
  store i32 0, i32* %92, align 4
  store i32 1461512867, i32* %22
  br label %215

; <label>:93:                                     ; preds = %23
  %94 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %6
  %95 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEppEv(%"class.__gnu_cxx::__normal_iterator"* %94) #3
  store i32 1645722435, i32* %22
  br label %215

; <label>:96:                                     ; preds = %23
  %97 = load i32, i32* @x.74
  %98 = load i32, i32* @y.75
  %99 = sub i32 0, 1
  %100 = add i32 %97, %99
  %101 = sub i32 %97, 1
  %102 = mul i32 %97, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %98, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  %110 = select i1 %108, i32 -1589978827, i32 -482017708
  store i32 %110, i32* %22
  br label %215

; <label>:111:                                    ; preds = %23
  %112 = load volatile i32*, i32** %10
  %113 = load i32, i32* %112, align 4
  %114 = load volatile i32*, i32** %9
  %115 = load i32, i32* %114, align 4
  %116 = call i64 @_Z3dfsiix(i32 %113, i32 %115, i64 1000000000000000)
  %117 = load volatile i64*, i64** %3
  store i64 %116, i64* %117, align 8
  %118 = load i32, i32* @x.74
  %119 = load i32, i32* @y.75
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 286943229, i32 -482017708
  store i32 %131, i32* %22
  br label %215

; <label>:132:                                    ; preds = %23
  store i32 -414015397, i32* %22
  br label %215

; <label>:133:                                    ; preds = %23
  %134 = load volatile i64*, i64** %3
  %135 = load i64, i64* %134, align 8
  %136 = icmp sgt i64 %135, 0
  %137 = select i1 %136, i32 1782831487, i32 972562088
  store i32 %137, i32* %22
  br label %215

; <label>:138:                                    ; preds = %23
  %139 = load volatile i64*, i64** %3
  %140 = load i64, i64* %139, align 8
  %141 = load volatile i64*, i64** %8
  %142 = load i64, i64* %141, align 8
  %143 = sub i64 %142, -7588353250329600102
  %144 = add i64 %143, %140
  %145 = add i64 %144, -7588353250329600102
  %146 = add nsw i64 %142, %140
  %147 = load volatile i64*, i64** %8
  store i64 %145, i64* %147, align 8
  %148 = load volatile i32*, i32** %10
  %149 = load i32, i32* %148, align 4
  %150 = load volatile i32*, i32** %9
  %151 = load i32, i32* %150, align 4
  %152 = call i64 @_Z3dfsiix(i32 %149, i32 %151, i64 1000000000000000)
  %153 = load volatile i64*, i64** %3
  store i64 %152, i64* %153, align 8
  store i32 -414015397, i32* %22
  br label %215

; <label>:154:                                    ; preds = %23
  %155 = load i32, i32* @x.74
  %156 = load i32, i32* @y.75
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  %168 = select i1 %166, i32 -1617966755, i32 -841249352
  store i32 %168, i32* %22
  br label %215

; <label>:169:                                    ; preds = %23
  %170 = load i32, i32* @x.74
  %171 = load i32, i32* @y.75
  %172 = sub i32 %170, 222821433
  %173 = sub i32 %172, 1
  %174 = add i32 %173, 222821433
  %175 = sub i32 %170, 1
  %176 = mul i32 %170, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %171, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 true, true
  %183 = and i1 %180, true
  %184 = and i1 %178, %182
  %185 = and i1 %181, true
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 true, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  %196 = select i1 %194, i32 1506264329, i32 -841249352
  store i32 %196, i32* %22
  br label %215

; <label>:197:                                    ; preds = %23
  store i32 -89015443, i32* %22
  br label %215

; <label>:198:                                    ; preds = %23
  %199 = alloca i32, align 4
  %200 = alloca i32, align 4
  %201 = alloca i64, align 8
  %202 = alloca %"class.std::vector.0"*, align 8
  %203 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %204 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %205 = alloca i32*, align 8
  %206 = alloca i64, align 8
  store i32 %0, i32* %199, align 4
  store i32 %1, i32* %200, align 4
  store i64 0, i64* %201, align 8
  store i32 2039247817, i32* %22
  br label %215

; <label>:207:                                    ; preds = %23
  %208 = load volatile i32*, i32** %10
  %209 = load i32, i32* %208, align 4
  %210 = load volatile i32*, i32** %9
  %211 = load i32, i32* %210, align 4
  %212 = call i64 @_Z3dfsiix(i32 %209, i32 %211, i64 1000000000000000)
  %213 = load volatile i64*, i64** %3
  store i64 %212, i64* %213, align 8
  store i32 -1589978827, i32* %22
  br label %215

; <label>:214:                                    ; preds = %23
  store i32 -1617966755, i32* %22
  br label %215

; <label>:215:                                    ; preds = %214, %207, %198, %197, %169, %154, %138, %133, %132, %111, %96, %93, %87, %82, %74, %61, %60, %34, %26, %25
  br label %23
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.76
  %2 = load i32, i32* @y.77
  %3 = sub i32 %1, -1475685889
  %4 = sub i32 %3, 1
  %5 = add i32 %4, -1475685889
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %595

; <label>:15:                                     ; preds = %0, %595
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca %"class.std::__cxx11::basic_string", align 8
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8, align 1
  %25 = alloca i64, align 8
  store i32 0, i32* %16, align 4
  %26 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %17)
  %27 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %26, i32* dereferenceable(4) %18)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %19) #3
  %28 = load i32, i32* %17, align 4
  %29 = load i32, i32* %18, align 4
  %30 = add i32 %28, -1293342851
  %31 = add i32 %30, %29
  %32 = sub i32 %31, -1293342851
  %33 = add nsw i32 %28, %29
  %34 = sub i32 %32, -1739911856
  %35 = add i32 %34, 2
  %36 = add i32 %35, -1739911856
  %37 = add nsw i32 %32, 2
  %38 = sext i32 %36 to i64
  %39 = load i32, i32* @x.76
  %40 = load i32, i32* @y.77
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %595

; <label>:52:                                     ; preds = %15
  invoke void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE6resizeEm(%"class.std::vector"* @g, i64 %38)
          to label %53 unwind label %279

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* @x.76
  %55 = load i32, i32* @y.77
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %664

; <label>:79:                                     ; preds = %53, %664
  %80 = load i32, i32* %17, align 4
  %81 = load i32, i32* %18, align 4
  %82 = sub i32 %80, -1311814727
  %83 = add i32 %82, %81
  %84 = add i32 %83, -1311814727
  %85 = add nsw i32 %80, %81
  %86 = add i32 %84, -1551771171
  %87 = add i32 %86, 2
  %88 = sub i32 %87, -1551771171
  %89 = add nsw i32 %84, 2
  %90 = sext i32 %88 to i64
  %91 = load i32, i32* @x.76
  %92 = load i32, i32* @y.77
  %93 = add i32 %91, 1142896656
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 1142896656
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %664

; <label>:117:                                    ; preds = %79
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.0"* @level, i64 %90)
          to label %118 unwind label %279

; <label>:118:                                    ; preds = %117
  %119 = load i32, i32* %17, align 4
  %120 = load i32, i32* %18, align 4
  %121 = sub i32 0, %119
  %122 = sub i32 0, %120
  %123 = add i32 %121, %122
  %124 = sub i32 0, %123
  %125 = add nsw i32 %119, %120
  %126 = add i32 %124, 820430804
  %127 = add i32 %126, 2
  %128 = sub i32 %127, 820430804
  %129 = add nsw i32 %124, 2
  %130 = sext i32 %128 to i64
  invoke void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.0"* @iter, i64 %130)
          to label %131 unwind label %279

; <label>:131:                                    ; preds = %118
  store i32 0, i32* %22, align 4
  br label %132

; <label>:132:                                    ; preds = %514, %131
  %133 = load i32, i32* %22, align 4
  %134 = load i32, i32* %17, align 4
  %135 = icmp slt i32 %133, %134
  br i1 %135, label %136, label %521

; <label>:136:                                    ; preds = %132
  %137 = load i32, i32* @x.76
  %138 = load i32, i32* @y.77
  %139 = sub i32 0, 1
  %140 = add i32 %137, %139
  %141 = sub i32 %137, 1
  %142 = mul i32 %137, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %138, 10
  %146 = and i1 %144, %145
  %147 = xor i1 %144, %145
  %148 = or i1 %146, %147
  %149 = or i1 %144, %145
  br i1 %148, label %150, label %708

; <label>:150:                                    ; preds = %136, %708
  %151 = load i32, i32* @x.76
  %152 = load i32, i32* @y.77
  %153 = sub i32 %151, -816463953
  %154 = sub i32 %153, 1
  %155 = add i32 %154, -816463953
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  br i1 %175, label %177, label %708

; <label>:177:                                    ; preds = %150
  %178 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %19)
          to label %179 unwind label %279

; <label>:179:                                    ; preds = %177
  store i32 0, i32* %23, align 4
  br label %180

; <label>:180:                                    ; preds = %508, %179
  %181 = load i32, i32* %23, align 4
  %182 = load i32, i32* %18, align 4
  %183 = icmp slt i32 %181, %182
  br i1 %183, label %184, label %513

; <label>:184:                                    ; preds = %180
  %185 = load i32, i32* %23, align 4
  %186 = sext i32 %185 to i64
  %187 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %19, i64 %186)
          to label %188 unwind label %279

; <label>:188:                                    ; preds = %184
  %189 = load i32, i32* @x.76
  %190 = load i32, i32* @y.77
  %191 = sub i32 0, 1
  %192 = add i32 %189, %191
  %193 = sub i32 %189, 1
  %194 = mul i32 %189, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %190, 10
  %198 = and i1 %196, %197
  %199 = xor i1 %196, %197
  %200 = or i1 %198, %199
  %201 = or i1 %196, %197
  br i1 %200, label %202, label %709

; <label>:202:                                    ; preds = %188, %709
  %203 = load i8, i8* %187, align 1
  store i8 %203, i8* %24, align 1
  %204 = load i8, i8* %24, align 1
  %205 = sext i8 %204 to i32
  %206 = icmp eq i32 %205, 111
  %207 = load i32, i32* @x.76
  %208 = load i32, i32* @y.77
  %209 = add i32 %207, 1559782321
  %210 = sub i32 %209, 1
  %211 = sub i32 %210, 1559782321
  %212 = sub i32 %207, 1
  %213 = mul i32 %207, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %208, 10
  %217 = and i1 %215, %216
  %218 = xor i1 %215, %216
  %219 = or i1 %217, %218
  %220 = or i1 %215, %216
  br i1 %219, label %221, label %709

; <label>:221:                                    ; preds = %202
  br i1 %206, label %222, label %283

; <label>:222:                                    ; preds = %221
  %223 = load i32, i32* %22, align 4
  %224 = load i32, i32* %17, align 4
  %225 = load i32, i32* %23, align 4
  %226 = sub i32 0, %225
  %227 = sub i32 %224, %226
  %228 = add nsw i32 %224, %225
  invoke void @_Z8add_edgeiix(i32 %223, i32 %227, i64 1)
          to label %229 unwind label %279

; <label>:229:                                    ; preds = %222
  %230 = load i32, i32* %17, align 4
  %231 = load i32, i32* %23, align 4
  %232 = sub i32 %230, -961461493
  %233 = add i32 %232, %231
  %234 = add i32 %233, -961461493
  %235 = add nsw i32 %230, %231
  %236 = load i32, i32* %22, align 4
  invoke void @_Z8add_edgeiix(i32 %234, i32 %236, i64 1)
          to label %237 unwind label %279

; <label>:237:                                    ; preds = %229
  %238 = load i32, i32* @x.76
  %239 = load i32, i32* @y.77
  %240 = add i32 %238, -934517469
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, -934517469
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 false, true
  %251 = and i1 %248, false
  %252 = and i1 %246, %250
  %253 = and i1 %249, false
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 false, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %714

; <label>:264:                                    ; preds = %237, %714
  %265 = load i32, i32* @x.76
  %266 = load i32, i32* @y.77
  %267 = sub i32 0, 1
  %268 = add i32 %265, %267
  %269 = sub i32 %265, 1
  %270 = mul i32 %265, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %266, 10
  %274 = and i1 %272, %273
  %275 = xor i1 %272, %273
  %276 = or i1 %274, %275
  %277 = or i1 %272, %273
  br i1 %276, label %278, label %714

; <label>:278:                                    ; preds = %264
  br label %507

; <label>:279:                                    ; preds = %546, %543, %521, %435, %423, %349, %341, %229, %222, %184, %177, %118, %117, %52
  %280 = landingpad { i8*, i32 }
          cleanup
  %281 = extractvalue { i8*, i32 } %280, 0
  store i8* %281, i8** %20, align 8
  %282 = extractvalue { i8*, i32 } %280, 1
  store i32 %282, i32* %21, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %19) #3
  br label %590

; <label>:283:                                    ; preds = %221
  %284 = load i32, i32* @x.76
  %285 = load i32, i32* @y.77
  %286 = sub i32 %284, 2117402213
  %287 = sub i32 %286, 1
  %288 = add i32 %287, 2117402213
  %289 = sub i32 %284, 1
  %290 = mul i32 %284, %288
  %291 = urem i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = icmp slt i32 %285, 10
  %294 = xor i1 %292, true
  %295 = xor i1 %293, true
  %296 = xor i1 false, true
  %297 = and i1 %294, false
  %298 = and i1 %292, %296
  %299 = and i1 %295, false
  %300 = and i1 %293, %296
  %301 = or i1 %297, %298
  %302 = or i1 %299, %300
  %303 = xor i1 %301, %302
  %304 = or i1 %294, %295
  %305 = xor i1 %304, true
  %306 = or i1 false, %296
  %307 = and i1 %305, %306
  %308 = or i1 %303, %307
  %309 = or i1 %292, %293
  br i1 %308, label %310, label %715

; <label>:310:                                    ; preds = %283, %715
  %311 = load i8, i8* %24, align 1
  %312 = sext i8 %311 to i32
  %313 = icmp eq i32 %312, 83
  %314 = load i32, i32* @x.76
  %315 = load i32, i32* @y.77
  %316 = add i32 %314, -1500992507
  %317 = sub i32 %316, 1
  %318 = sub i32 %317, -1500992507
  %319 = sub i32 %314, 1
  %320 = mul i32 %314, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %315, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 true, true
  %327 = and i1 %324, true
  %328 = and i1 %322, %326
  %329 = and i1 %325, true
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 true, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %715

; <label>:340:                                    ; preds = %310
  br i1 %313, label %341, label %419

; <label>:341:                                    ; preds = %340
  %342 = load i32, i32* %17, align 4
  %343 = load i32, i32* %18, align 4
  %344 = add i32 %342, -44074584
  %345 = add i32 %344, %343
  %346 = sub i32 %345, -44074584
  %347 = add nsw i32 %342, %343
  %348 = load i32, i32* %22, align 4
  invoke void @_Z8add_edgeiix(i32 %346, i32 %348, i64 1000000000000000)
          to label %349 unwind label %279

; <label>:349:                                    ; preds = %341
  %350 = load i32, i32* %17, align 4
  %351 = load i32, i32* %18, align 4
  %352 = sub i32 0, %350
  %353 = sub i32 0, %351
  %354 = add i32 %352, %353
  %355 = sub i32 0, %354
  %356 = add nsw i32 %350, %351
  %357 = load i32, i32* %17, align 4
  %358 = load i32, i32* %23, align 4
  %359 = sub i32 0, %357
  %360 = sub i32 0, %358
  %361 = add i32 %359, %360
  %362 = sub i32 0, %361
  %363 = add nsw i32 %357, %358
  invoke void @_Z8add_edgeiix(i32 %355, i32 %362, i64 1000000000000000)
          to label %364 unwind label %279

; <label>:364:                                    ; preds = %349
  %365 = load i32, i32* @x.76
  %366 = load i32, i32* @y.77
  %367 = add i32 %365, -1181958706
  %368 = sub i32 %367, 1
  %369 = sub i32 %368, -1181958706
  %370 = sub i32 %365, 1
  %371 = mul i32 %365, %369
  %372 = urem i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = icmp slt i32 %366, 10
  %375 = xor i1 %373, true
  %376 = xor i1 %374, true
  %377 = xor i1 false, true
  %378 = and i1 %375, false
  %379 = and i1 %373, %377
  %380 = and i1 %376, false
  %381 = and i1 %374, %377
  %382 = or i1 %378, %379
  %383 = or i1 %380, %381
  %384 = xor i1 %382, %383
  %385 = or i1 %375, %376
  %386 = xor i1 %385, true
  %387 = or i1 false, %377
  %388 = and i1 %386, %387
  %389 = or i1 %384, %388
  %390 = or i1 %373, %374
  br i1 %389, label %391, label %719

; <label>:391:                                    ; preds = %364, %719
  %392 = load i32, i32* @x.76
  %393 = load i32, i32* @y.77
  %394 = sub i32 %392, -1805271583
  %395 = sub i32 %394, 1
  %396 = add i32 %395, -1805271583
  %397 = sub i32 %392, 1
  %398 = mul i32 %392, %396
  %399 = urem i32 %398, 2
  %400 = icmp eq i32 %399, 0
  %401 = icmp slt i32 %393, 10
  %402 = xor i1 %400, true
  %403 = xor i1 %401, true
  %404 = xor i1 false, true
  %405 = and i1 %402, false
  %406 = and i1 %400, %404
  %407 = and i1 %403, false
  %408 = and i1 %401, %404
  %409 = or i1 %405, %406
  %410 = or i1 %407, %408
  %411 = xor i1 %409, %410
  %412 = or i1 %402, %403
  %413 = xor i1 %412, true
  %414 = or i1 false, %404
  %415 = and i1 %413, %414
  %416 = or i1 %411, %415
  %417 = or i1 %400, %401
  br i1 %416, label %418, label %719

; <label>:418:                                    ; preds = %391
  br label %506

; <label>:419:                                    ; preds = %340
  %420 = load i8, i8* %24, align 1
  %421 = sext i8 %420 to i32
  %422 = icmp eq i32 %421, 84
  br i1 %422, label %423, label %505

; <label>:423:                                    ; preds = %419
  %424 = load i32, i32* %22, align 4
  %425 = load i32, i32* %17, align 4
  %426 = load i32, i32* %18, align 4
  %427 = add i32 %425, 623542722
  %428 = add i32 %427, %426
  %429 = sub i32 %428, 623542722
  %430 = add nsw i32 %425, %426
  %431 = sub i32 %429, 1362522403
  %432 = add i32 %431, 1
  %433 = add i32 %432, 1362522403
  %434 = add nsw i32 %429, 1
  invoke void @_Z8add_edgeiix(i32 %424, i32 %433, i64 1000000000000000)
          to label %435 unwind label %279

; <label>:435:                                    ; preds = %423
  %436 = load i32, i32* %17, align 4
  %437 = load i32, i32* %23, align 4
  %438 = sub i32 0, %437
  %439 = sub i32 %436, %438
  %440 = add nsw i32 %436, %437
  %441 = load i32, i32* %17, align 4
  %442 = load i32, i32* %18, align 4
  %443 = add i32 %441, -1586050314
  %444 = add i32 %443, %442
  %445 = sub i32 %444, -1586050314
  %446 = add nsw i32 %441, %442
  %447 = sub i32 0, 1
  %448 = sub i32 %445, %447
  %449 = add nsw i32 %445, 1
  invoke void @_Z8add_edgeiix(i32 %439, i32 %448, i64 1000000000000000)
          to label %450 unwind label %279

; <label>:450:                                    ; preds = %435
  %451 = load i32, i32* @x.76
  %452 = load i32, i32* @y.77
  %453 = sub i32 %451, 356304801
  %454 = sub i32 %453, 1
  %455 = add i32 %454, 356304801
  %456 = sub i32 %451, 1
  %457 = mul i32 %451, %455
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %452, 10
  %461 = xor i1 %459, true
  %462 = xor i1 %460, true
  %463 = xor i1 false, true
  %464 = and i1 %461, false
  %465 = and i1 %459, %463
  %466 = and i1 %462, false
  %467 = and i1 %460, %463
  %468 = or i1 %464, %465
  %469 = or i1 %466, %467
  %470 = xor i1 %468, %469
  %471 = or i1 %461, %462
  %472 = xor i1 %471, true
  %473 = or i1 false, %463
  %474 = and i1 %472, %473
  %475 = or i1 %470, %474
  %476 = or i1 %459, %460
  br i1 %475, label %477, label %720

; <label>:477:                                    ; preds = %450, %720
  %478 = load i32, i32* @x.76
  %479 = load i32, i32* @y.77
  %480 = sub i32 %478, -1058471022
  %481 = sub i32 %480, 1
  %482 = add i32 %481, -1058471022
  %483 = sub i32 %478, 1
  %484 = mul i32 %478, %482
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %479, 10
  %488 = xor i1 %486, true
  %489 = xor i1 %487, true
  %490 = xor i1 false, true
  %491 = and i1 %488, false
  %492 = and i1 %486, %490
  %493 = and i1 %489, false
  %494 = and i1 %487, %490
  %495 = or i1 %491, %492
  %496 = or i1 %493, %494
  %497 = xor i1 %495, %496
  %498 = or i1 %488, %489
  %499 = xor i1 %498, true
  %500 = or i1 false, %490
  %501 = and i1 %499, %500
  %502 = or i1 %497, %501
  %503 = or i1 %486, %487
  br i1 %502, label %504, label %720

; <label>:504:                                    ; preds = %477
  br label %505

; <label>:505:                                    ; preds = %504, %419
  br label %506

; <label>:506:                                    ; preds = %505, %418
  br label %507

; <label>:507:                                    ; preds = %506, %278
  br label %508

; <label>:508:                                    ; preds = %507
  %509 = load i32, i32* %23, align 4
  %510 = sub i32 0, 1
  %511 = sub i32 %509, %510
  %512 = add nsw i32 %509, 1
  store i32 %511, i32* %23, align 4
  br label %180

; <label>:513:                                    ; preds = %180
  br label %514

; <label>:514:                                    ; preds = %513
  %515 = load i32, i32* %22, align 4
  %516 = sub i32 0, %515
  %517 = sub i32 0, 1
  %518 = add i32 %516, %517
  %519 = sub i32 0, %518
  %520 = add nsw i32 %515, 1
  store i32 %519, i32* %22, align 4
  br label %132

; <label>:521:                                    ; preds = %132
  %522 = load i32, i32* %17, align 4
  %523 = load i32, i32* %18, align 4
  %524 = add i32 %522, 1765587688
  %525 = add i32 %524, %523
  %526 = sub i32 %525, 1765587688
  %527 = add nsw i32 %522, %523
  %528 = load i32, i32* %17, align 4
  %529 = load i32, i32* %18, align 4
  %530 = sub i32 0, %529
  %531 = sub i32 %528, %530
  %532 = add nsw i32 %528, %529
  %533 = sub i32 0, %531
  %534 = sub i32 0, 1
  %535 = add i32 %533, %534
  %536 = sub i32 0, %535
  %537 = add nsw i32 %531, 1
  %538 = invoke i64 @_Z8max_flowii(i32 %526, i32 %536)
          to label %539 unwind label %279

; <label>:539:                                    ; preds = %521
  store i64 %538, i64* %25, align 8
  %540 = load i64, i64* %25, align 8
  %541 = icmp sge i64 %540, 1000000000000000
  br i1 %541, label %542, label %543

; <label>:542:                                    ; preds = %539
  store i64 -1, i64* %25, align 8
  br label %543

; <label>:543:                                    ; preds = %542, %539
  %544 = load i64, i64* %25, align 8
  %545 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %544)
          to label %546 unwind label %279

; <label>:546:                                    ; preds = %543
  %547 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %545, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %548 unwind label %279

; <label>:548:                                    ; preds = %546
  %549 = load i32, i32* @x.76
  %550 = load i32, i32* @y.77
  %551 = sub i32 0, 1
  %552 = add i32 %549, %551
  %553 = sub i32 %549, 1
  %554 = mul i32 %549, %552
  %555 = urem i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = icmp slt i32 %550, 10
  %558 = and i1 %556, %557
  %559 = xor i1 %556, %557
  %560 = or i1 %558, %559
  %561 = or i1 %556, %557
  br i1 %560, label %562, label %721

; <label>:562:                                    ; preds = %548, %721
  store i32 0, i32* %16, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %19) #3
  %563 = load i32, i32* %16, align 4
  %564 = load i32, i32* @x.76
  %565 = load i32, i32* @y.77
  %566 = sub i32 0, 1
  %567 = add i32 %564, %566
  %568 = sub i32 %564, 1
  %569 = mul i32 %564, %567
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %565, 10
  %573 = xor i1 %571, true
  %574 = xor i1 %572, true
  %575 = xor i1 false, true
  %576 = and i1 %573, false
  %577 = and i1 %571, %575
  %578 = and i1 %574, false
  %579 = and i1 %572, %575
  %580 = or i1 %576, %577
  %581 = or i1 %578, %579
  %582 = xor i1 %580, %581
  %583 = or i1 %573, %574
  %584 = xor i1 %583, true
  %585 = or i1 false, %575
  %586 = and i1 %584, %585
  %587 = or i1 %582, %586
  %588 = or i1 %571, %572
  br i1 %587, label %589, label %721

; <label>:589:                                    ; preds = %562
  ret i32 %563

; <label>:590:                                    ; preds = %279
  %591 = load i8*, i8** %20, align 8
  %592 = load i32, i32* %21, align 4
  %593 = insertvalue { i8*, i32 } undef, i8* %591, 0
  %594 = insertvalue { i8*, i32 } %593, i32 %592, 1
  resume { i8*, i32 } %594

; <label>:595:                                    ; preds = %15, %0
  %596 = alloca i32, align 4
  %597 = alloca i32, align 4
  %598 = alloca i32, align 4
  %599 = alloca %"class.std::__cxx11::basic_string", align 8
  %600 = alloca i8*
  %601 = alloca i32
  %602 = alloca i32, align 4
  %603 = alloca i32, align 4
  %604 = alloca i8, align 1
  %605 = alloca i64, align 8
  store i32 0, i32* %596, align 4
  %606 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %597)
  %607 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %606, i32* dereferenceable(4) %598)
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %599) #3
  %608 = load i32, i32* %597, align 4
  %609 = load i32, i32* %598, align 4
  %610 = sub i32 0, 146297013
  %611 = sub i32 %610, %608
  %612 = add i32 %611, 146297013
  %613 = sub i32 0, %608
  %614 = sub i32 0, %609
  %615 = sub i32 %612, %614
  %616 = add i32 %612, %609
  %617 = sub i32 %608, 933744174
  %618 = sub i32 %617, %609
  %619 = add i32 %618, 933744174
  %620 = sub i32 %608, %609
  %621 = mul i32 %619, %609
  %622 = sub i32 0, %609
  %623 = add i32 %608, %622
  %624 = sub i32 %608, %609
  %625 = mul i32 %623, %609
  %626 = add i32 %608, 574096940
  %627 = sub i32 %626, %609
  %628 = sub i32 %627, 574096940
  %629 = sub i32 %608, %609
  %630 = mul i32 %628, %609
  %631 = sub i32 0, %608
  %632 = sub i32 0, %609
  %633 = add i32 %631, %632
  %634 = sub i32 0, %633
  %635 = add nsw i32 %608, %609
  %636 = add i32 %634, 2138050620
  %637 = sub i32 %636, 2
  %638 = sub i32 %637, 2138050620
  %639 = sub i32 %634, 2
  %640 = mul i32 %638, 2
  %641 = add i32 0, -1245739599
  %642 = sub i32 %641, %634
  %643 = sub i32 %642, -1245739599
  %644 = sub i32 0, %634
  %645 = sub i32 0, 2
  %646 = sub i32 %643, %645
  %647 = add i32 %643, 2
  %648 = sub i32 0, 2
  %649 = add i32 %634, %648
  %650 = sub i32 %634, 2
  %651 = mul i32 %649, 2
  %652 = sub i32 0, %634
  %653 = add i32 0, %652
  %654 = sub i32 0, %634
  %655 = add i32 %653, 2054839355
  %656 = add i32 %655, 2
  %657 = sub i32 %656, 2054839355
  %658 = add i32 %653, 2
  %659 = add i32 %634, -836679894
  %660 = add i32 %659, 2
  %661 = sub i32 %660, -836679894
  %662 = add nsw i32 %634, 2
  %663 = sext i32 %661 to i64
  br label %15

; <label>:664:                                    ; preds = %79, %53
  %665 = load i32, i32* %17, align 4
  %666 = load i32, i32* %18, align 4
  %667 = shl i32 %665, %666
  %668 = sub i32 0, -249293039
  %669 = sub i32 %668, %665
  %670 = add i32 %669, -249293039
  %671 = sub i32 0, %665
  %672 = sub i32 0, %670
  %673 = sub i32 0, %666
  %674 = add i32 %672, %673
  %675 = sub i32 0, %674
  %676 = add i32 %670, %666
  %677 = sub i32 0, %666
  %678 = add i32 %665, %677
  %679 = sub i32 %665, %666
  %680 = mul i32 %678, %666
  %681 = sub i32 %665, 948647461
  %682 = sub i32 %681, %666
  %683 = add i32 %682, 948647461
  %684 = sub i32 %665, %666
  %685 = mul i32 %683, %666
  %686 = add i32 %665, -889704359
  %687 = sub i32 %686, %666
  %688 = sub i32 %687, -889704359
  %689 = sub i32 %665, %666
  %690 = mul i32 %688, %666
  %691 = add i32 %665, 1435923079
  %692 = sub i32 %691, %666
  %693 = sub i32 %692, 1435923079
  %694 = sub i32 %665, %666
  %695 = mul i32 %693, %666
  %696 = sub i32 0, %665
  %697 = sub i32 0, %666
  %698 = add i32 %696, %697
  %699 = sub i32 0, %698
  %700 = add nsw i32 %665, %666
  %701 = shl i32 %699, 2
  %702 = sub i32 0, %699
  %703 = sub i32 0, 2
  %704 = add i32 %702, %703
  %705 = sub i32 0, %704
  %706 = add nsw i32 %699, 2
  %707 = sext i32 %705 to i64
  br label %79

; <label>:708:                                    ; preds = %150, %136
  br label %150

; <label>:709:                                    ; preds = %202, %188
  %710 = load i8, i8* %187, align 1
  store i8 %710, i8* %24, align 1
  %711 = load i8, i8* %24, align 1
  %712 = sext i8 %711 to i32
  %713 = icmp eq i32 %712, 111
  br label %202

; <label>:714:                                    ; preds = %264, %237
  br label %264

; <label>:715:                                    ; preds = %310, %283
  %716 = load i8, i8* %24, align 1
  %717 = sext i8 %716 to i32
  %718 = icmp eq i32 %717, 83
  br label %310

; <label>:719:                                    ; preds = %391, %364
  br label %391

; <label>:720:                                    ; preds = %477, %450
  br label %477

; <label>:721:                                    ; preds = %562, %548
  store i32 0, i32* %16, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %19) #3
  %722 = load i32, i32* %16, align 4
  br label %562
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE6resizeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::vector"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.78
  %10 = load i32, i32* @y.79
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 641473342, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %242
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 641473342, label %22
    i32 -1415811653, label %42
    i32 -1499985187, label %67
    i32 -1396690489, label %70
    i32 2019237188, label %80
    i32 111064019, label %107
    i32 -1553804044, label %128
    i32 1654760986, label %131
    i32 1253679709, label %158
    i32 1697639407, label %183
    i32 1241071082, label %184
    i32 -1054546048, label %185
    i32 -123134020, label %201
    i32 1096355523, label %217
    i32 -1975381791, label %218
    i32 -752808203, label %225
    i32 -743936373, label %231
    i32 1349060819, label %241
  ]

; <label>:21:                                     ; preds = %19
  br label %242

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1415811653, i32 -1975381791
  store i32 %41, i32* %18
  br label %242

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %6
  store %"class.std::vector"* %0, %"class.std::vector"** %43, align 8
  %45 = load volatile i64*, i64** %6
  store i64 %1, i64* %45, align 8
  %46 = load %"class.std::vector"*, %"class.std::vector"** %43, align 8
  store %"class.std::vector"* %46, %"class.std::vector"** %5
  %47 = load volatile i64*, i64** %6
  %48 = load i64, i64* %47, align 8
  %49 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %50 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %49) #3
  %51 = icmp ugt i64 %48, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.78
  %53 = load i32, i32* @y.79
  %54 = sub i32 %52, 941905385
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 941905385
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1499985187, i32 -1975381791
  store i32 %66, i32* %18
  br label %242

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -1396690489, i32 2019237188
  store i32 %69, i32* %18
  br label %242

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %6
  %72 = load i64, i64* %71, align 8
  %73 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %74 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %73) #3
  %75 = sub i64 %72, 6884430028422354625
  %76 = sub i64 %75, %74
  %77 = add i64 %76, 6884430028422354625
  %78 = sub i64 %72, %74
  %79 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE17_M_default_appendEm(%"class.std::vector"* %79, i64 %77)
  store i32 -1054546048, i32* %18
  br label %242

; <label>:80:                                     ; preds = %19
  %81 = load i32, i32* @x.78
  %82 = load i32, i32* @y.79
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 111064019, i32 -752808203
  store i32 %106, i32* %18
  br label %242

; <label>:107:                                    ; preds = %19
  %108 = load volatile i64*, i64** %6
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %111 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %110) #3
  %112 = icmp ult i64 %109, %111
  store i1 %112, i1* %3
  %113 = load i32, i32* @x.78
  %114 = load i32, i32* @y.79
  %115 = add i32 %113, 508195779
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 508195779
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 -1553804044, i32 -752808203
  store i32 %127, i32* %18
  br label %242

; <label>:128:                                    ; preds = %19
  %129 = load volatile i1, i1* %3
  %130 = select i1 %129, i32 1654760986, i32 1241071082
  store i32 %130, i32* %18
  br label %242

; <label>:131:                                    ; preds = %19
  %132 = load i32, i32* @x.78
  %133 = load i32, i32* @y.79
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 false, true
  %144 = and i1 %141, false
  %145 = and i1 %139, %143
  %146 = and i1 %142, false
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 false, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 1253679709, i32 -743936373
  store i32 %157, i32* %18
  br label %242

; <label>:158:                                    ; preds = %19
  %159 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %160 = bitcast %"class.std::vector"* %159 to %"struct.std::_Vector_base"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %161, i32 0, i32 0
  %163 = load %"class.std::deque"*, %"class.std::deque"** %162, align 8
  %164 = load volatile i64*, i64** %6
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %163, i64 %165
  %167 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector"* %167, %"class.std::deque"* %166) #3
  %168 = load i32, i32* @x.78
  %169 = load i32, i32* @y.79
  %170 = add i32 %168, -364557241
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, -364557241
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  %182 = select i1 %180, i32 1697639407, i32 -743936373
  store i32 %182, i32* %18
  br label %242

; <label>:183:                                    ; preds = %19
  store i32 1241071082, i32* %18
  br label %242

; <label>:184:                                    ; preds = %19
  store i32 -1054546048, i32* %18
  br label %242

; <label>:185:                                    ; preds = %19
  %186 = load i32, i32* @x.78
  %187 = load i32, i32* @y.79
  %188 = add i32 %186, 490517917
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 490517917
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  %200 = select i1 %198, i32 -123134020, i32 1349060819
  store i32 %200, i32* %18
  br label %242

; <label>:201:                                    ; preds = %19
  %202 = load i32, i32* @x.78
  %203 = load i32, i32* @y.79
  %204 = sub i32 %202, 253100071
  %205 = sub i32 %204, 1
  %206 = add i32 %205, 253100071
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  %216 = select i1 %214, i32 1096355523, i32 1349060819
  store i32 %216, i32* %18
  br label %242

; <label>:217:                                    ; preds = %19
  ret void

; <label>:218:                                    ; preds = %19
  %219 = alloca %"class.std::vector"*, align 8
  %220 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %219, align 8
  store i64 %1, i64* %220, align 8
  %221 = load %"class.std::vector"*, %"class.std::vector"** %219, align 8
  %222 = load i64, i64* %220, align 8
  %223 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %221) #3
  %224 = icmp ugt i64 %222, %223
  store i32 -1415811653, i32* %18
  br label %242

; <label>:225:                                    ; preds = %19
  %226 = load volatile i64*, i64** %6
  %227 = load i64, i64* %226, align 8
  %228 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %229 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %228) #3
  %230 = icmp ult i64 %227, %229
  store i32 111064019, i32* %18
  br label %242

; <label>:231:                                    ; preds = %19
  %232 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %233 = bitcast %"class.std::vector"* %232 to %"struct.std::_Vector_base"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %234, i32 0, i32 0
  %236 = load %"class.std::deque"*, %"class.std::deque"** %235, align 8
  %237 = load volatile i64*, i64** %6
  %238 = load i64, i64* %237, align 8
  %239 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %236, i64 %238
  %240 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector"* %240, %"class.std::deque"* %239) #3
  store i32 1253679709, i32* %18
  br label %242

; <label>:241:                                    ; preds = %19
  store i32 -123134020, i32* %18
  br label %242

; <label>:242:                                    ; preds = %241, %231, %225, %218, %201, %185, %184, %183, %158, %131, %128, %107, %80, %70, %67, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.0"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector.0"*
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  store %"class.std::vector.0"* %8, %"class.std::vector.0"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1626759209, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %139
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1626759209, label %16
    i32 1746727775, label %21
    i32 652406867, label %37
    i32 2038619776, label %61
    i32 -1486125471, label %62
    i32 572077697, label %68
    i32 26919772, label %77
    i32 1458551547, label %92
    i32 -1238467839, label %108
    i32 80981669, label %109
    i32 -1798710619, label %110
    i32 1130016852, label %138
  ]

; <label>:15:                                     ; preds = %13
  br label %139

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1746727775, i32 -1486125471
  store i32 %20, i32* %12
  br label %139

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.80
  %23 = load i32, i32* @y.81
  %24 = sub i32 %22, 645639592
  %25 = sub i32 %24, 1
  %26 = add i32 %25, 645639592
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 652406867, i32 -1798710619
  store i32 %36, i32* %12
  br label %139

; <label>:37:                                     ; preds = %13
  %38 = load i64, i64* %7, align 8
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %39) #3
  %41 = add i64 %38, 949677846228225574
  %42 = sub i64 %41, %40
  %43 = sub i64 %42, 949677846228225574
  %44 = sub i64 %38, %40
  %45 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.0"* %45, i64 %43)
  %46 = load i32, i32* @x.80
  %47 = load i32, i32* @y.81
  %48 = add i32 %46, 1135652329
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1135652329
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 2038619776, i32 -1798710619
  store i32 %60, i32* %12
  br label %139

; <label>:61:                                     ; preds = %13
  store i32 80981669, i32* %12
  br label %139

; <label>:62:                                     ; preds = %13
  %63 = load i64, i64* %7, align 8
  %64 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %65 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %64) #3
  %66 = icmp ult i64 %63, %65
  %67 = select i1 %66, i32 572077697, i32 26919772
  store i32 %67, i32* %12
  br label %139

; <label>:68:                                     ; preds = %13
  %69 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %70 = bitcast %"class.std::vector.0"* %69 to %"struct.std::_Vector_base.1"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = load i64, i64* %7, align 8
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  %76 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.0"* %76, i32* %75) #3
  store i32 26919772, i32* %12
  br label %139

; <label>:77:                                     ; preds = %13
  %78 = load i32, i32* @x.80
  %79 = load i32, i32* @y.81
  %80 = sub i32 0, 1
  %81 = add i32 %78, %80
  %82 = sub i32 %78, 1
  %83 = mul i32 %78, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %79, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  %91 = select i1 %89, i32 1458551547, i32 1130016852
  store i32 %91, i32* %12
  br label %139

; <label>:92:                                     ; preds = %13
  %93 = load i32, i32* @x.80
  %94 = load i32, i32* @y.81
  %95 = add i32 %93, 1686904156
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 1686904156
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 -1238467839, i32 1130016852
  store i32 %107, i32* %12
  br label %139

; <label>:108:                                    ; preds = %13
  store i32 80981669, i32* %12
  br label %139

; <label>:109:                                    ; preds = %13
  ret void

; <label>:110:                                    ; preds = %13
  %111 = load i64, i64* %7, align 8
  %112 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  %113 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %112) #3
  %114 = sub i64 0, %111
  %115 = add i64 0, %114
  %116 = sub i64 0, %111
  %117 = sub i64 0, %115
  %118 = sub i64 0, %113
  %119 = add i64 %117, %118
  %120 = sub i64 0, %119
  %121 = add i64 %115, %113
  %122 = shl i64 %111, %113
  %123 = shl i64 %111, %113
  %124 = sub i64 0, -340996484954791473
  %125 = sub i64 %124, %111
  %126 = add i64 %125, -340996484954791473
  %127 = sub i64 0, %111
  %128 = sub i64 0, %126
  %129 = sub i64 0, %113
  %130 = add i64 %128, %129
  %131 = sub i64 0, %130
  %132 = add i64 %126, %113
  %133 = add i64 %111, -6917086982835230739
  %134 = sub i64 %133, %113
  %135 = sub i64 %134, -6917086982835230739
  %136 = sub i64 %111, %113
  %137 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %5
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.0"* %137, i64 %135)
  store i32 652406867, i32* %12
  br label %139

; <label>:138:                                    ; preds = %13
  store i32 1458551547, i32* %12
  br label %139

; <label>:139:                                    ; preds = %138, %110, %108, %92, %77, %68, %62, %61, %37, %21, %16, %15
  br label %13
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.82
  %5 = load i32, i32* @y.83
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1501068251, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1501068251, label %17
    i32 -1295766996, label %25
    i32 156761730, label %55
    i32 1288003671, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1295766996, i32 1288003671
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %26, align 8
  %28 = load i32, i32* @x.82
  %29 = load i32, i32* @y.83
  %30 = sub i32 %28, -577384661
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -577384661
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 156761730, i32 1288003671
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %57, align 8
  store i32 -1295766996, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.88
  %5 = load i32, i32* @y.89
  %6 = add i32 %4, -1575529301
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1575529301
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -749869524, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %57
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -749869524, label %18
    i32 -1884149183, label %38
    i32 27728475, label %54
    i32 -1331764513, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %57

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1884149183, i32 -1331764513
  store i32 %37, i32* %14
  br label %57

; <label>:38:                                     ; preds = %15
  %39 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  %40 = load i32, i32* @x.88
  %41 = load i32, i32* @y.89
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 27728475, i32 -1331764513
  store i32 %53, i32* %14
  br label %57

; <label>:54:                                     ; preds = %15
  unreachable

; <label>:55:                                     ; preds = %15
  %56 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  store i32 -1884149183, i32* %14
  br label %57

; <label>:57:                                     ; preds = %55, %38, %18, %17
  br label %15
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt5dequeI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::deque"* null, %"class.std::deque"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::deque"* null, %"class.std::deque"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::deque"* null, %"class.std::deque"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5dequeI4EdgeSaIS0_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::deque"*, %"class.std::deque"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::deque"*, align 8
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %4, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  call void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EEEvT_S5_(%"class.std::deque"* %7, %"class.std::deque"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.100
  %3 = load i32, i32* @y.101
  %4 = sub i32 %2, 1741634434
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1741634434
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %102

; <label>:16:                                     ; preds = %1, %102
  %17 = alloca %"struct.std::_Vector_base"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %17, align 8
  %20 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::deque"*, %"class.std::deque"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = ptrtoint %"class.std::deque"* %26 to i64
  %31 = ptrtoint %"class.std::deque"* %29 to i64
  %32 = sub i64 0, %31
  %33 = add i64 %30, %32
  %34 = sub i64 %30, %31
  %35 = sdiv exact i64 %33, 80
  %36 = load i32, i32* @x.100
  %37 = load i32, i32* @y.101
  %38 = sub i32 %36, -1219298695
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -1219298695
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %102

; <label>:50:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"* %20, %"class.std::deque"* %23, i64 %35)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %50
  %52 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %52) #3
  ret void

; <label>:53:                                     ; preds = %50
  %54 = load i32, i32* @x.100
  %55 = load i32, i32* @y.101
  %56 = sub i32 %54, -1666505150
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1666505150
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %182

; <label>:68:                                     ; preds = %53, %182
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %18, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %19, align 4
  %72 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %72) #3
  %73 = load i32, i32* @x.100
  %74 = load i32, i32* @y.101
  %75 = sub i32 %73, -254379390
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -254379390
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %182

; <label>:99:                                     ; preds = %68
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %101) #11
  unreachable

; <label>:102:                                    ; preds = %16, %1
  %103 = alloca %"struct.std::_Vector_base"*, align 8
  %104 = alloca i8*
  %105 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %103, align 8
  %106 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %103, align 8
  %107 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %107, i32 0, i32 0
  %109 = load %"class.std::deque"*, %"class.std::deque"** %108, align 8
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %110, i32 0, i32 2
  %112 = load %"class.std::deque"*, %"class.std::deque"** %111, align 8
  %113 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %113, i32 0, i32 0
  %115 = load %"class.std::deque"*, %"class.std::deque"** %114, align 8
  %116 = ptrtoint %"class.std::deque"* %112 to i64
  %117 = ptrtoint %"class.std::deque"* %115 to i64
  %118 = add i64 0, -7315949442845287837
  %119 = sub i64 %118, %116
  %120 = sub i64 %119, -7315949442845287837
  %121 = sub i64 0, %116
  %122 = sub i64 0, %117
  %123 = sub i64 %120, %122
  %124 = add i64 %120, %117
  %125 = sub i64 0, %116
  %126 = add i64 0, %125
  %127 = sub i64 0, %116
  %128 = sub i64 0, %126
  %129 = sub i64 0, %117
  %130 = add i64 %128, %129
  %131 = sub i64 0, %130
  %132 = add i64 %126, %117
  %133 = sub i64 %116, -8745835416046405751
  %134 = sub i64 %133, %117
  %135 = add i64 %134, -8745835416046405751
  %136 = sub i64 %116, %117
  %137 = mul i64 %135, %117
  %138 = add i64 0, 1648684435645069301
  %139 = sub i64 %138, %116
  %140 = sub i64 %139, 1648684435645069301
  %141 = sub i64 0, %116
  %142 = sub i64 0, %117
  %143 = sub i64 %140, %142
  %144 = add i64 %140, %117
  %145 = sub i64 %116, 2025139044679563813
  %146 = sub i64 %145, %117
  %147 = add i64 %146, 2025139044679563813
  %148 = sub i64 %116, %117
  %149 = mul i64 %147, %117
  %150 = add i64 0, 4458564960664176207
  %151 = sub i64 %150, %116
  %152 = sub i64 %151, 4458564960664176207
  %153 = sub i64 0, %116
  %154 = sub i64 %152, 7674952364653316056
  %155 = add i64 %154, %117
  %156 = add i64 %155, 7674952364653316056
  %157 = add i64 %152, %117
  %158 = add i64 %116, 2843228443638710114
  %159 = sub i64 %158, %117
  %160 = sub i64 %159, 2843228443638710114
  %161 = sub i64 %116, %117
  %162 = add i64 %160, -5672270797721268989
  %163 = sub i64 %162, 80
  %164 = sub i64 %163, -5672270797721268989
  %165 = sub i64 %160, 80
  %166 = mul i64 %164, 80
  %167 = shl i64 %160, 80
  %168 = sub i64 0, 7136379529181306213
  %169 = sub i64 %168, %160
  %170 = add i64 %169, 7136379529181306213
  %171 = sub i64 0, %160
  %172 = sub i64 0, %170
  %173 = sub i64 0, 80
  %174 = add i64 %172, %173
  %175 = sub i64 0, %174
  %176 = add i64 %170, 80
  %177 = sub i64 0, 80
  %178 = add i64 %160, %177
  %179 = sub i64 %160, 80
  %180 = mul i64 %178, 80
  %181 = sdiv exact i64 %160, 80
  br label %16

; <label>:182:                                    ; preds = %68, %53
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %18, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %19, align 4
  %186 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %186) #3
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EEEvT_S5_(%"class.std::deque"*, %"class.std::deque"*) #0 comdat {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeI4EdgeSaIS3_EEEEvT_S7_(%"class.std::deque"* %5, %"class.std::deque"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt5dequeI4EdgeSaIS3_EEEEvT_S7_(%"class.std::deque"*, %"class.std::deque"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::deque"*, align 8
  %5 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %4, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %5, align 8
  %6 = alloca i32
  store i32 -859310526, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %128
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -859310526, label %10
    i32 353164820, label %26
    i32 1861564884, label %56
    i32 -714166615, label %59
    i32 1935139436, label %86
    i32 -712855180, label %116
    i32 698104855, label %117
    i32 1329862525, label %120
    i32 -46010036, label %121
    i32 1229622502, label %125
  ]

; <label>:9:                                      ; preds = %7
  br label %128

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.104
  %12 = load i32, i32* @y.105
  %13 = sub i32 %11, 713870669
  %14 = sub i32 %13, 1
  %15 = add i32 %14, 713870669
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 353164820, i32 -46010036
  store i32 %25, i32* %6
  br label %128

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %29 = icmp ne %"class.std::deque"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.104
  %31 = load i32, i32* @y.105
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1861564884, i32 -46010036
  store i32 %55, i32* %6
  br label %128

; <label>:56:                                     ; preds = %7
  %57 = load volatile i1, i1* %3
  %58 = select i1 %57, i32 -714166615, i32 1329862525
  store i32 %58, i32* %6
  br label %128

; <label>:59:                                     ; preds = %7
  %60 = load i32, i32* @x.104
  %61 = load i32, i32* @y.105
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 1935139436, i32 1229622502
  store i32 %85, i32* %6
  br label %128

; <label>:86:                                     ; preds = %7
  %87 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %88 = call %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80) %87) #3
  call void @_ZSt8_DestroyISt5dequeI4EdgeSaIS1_EEEvPT_(%"class.std::deque"* %88)
  %89 = load i32, i32* @x.104
  %90 = load i32, i32* @y.105
  %91 = add i32 %89, -1350440823
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -1350440823
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  %115 = select i1 %113, i32 -712855180, i32 1229622502
  store i32 %115, i32* %6
  br label %128

; <label>:116:                                    ; preds = %7
  store i32 698104855, i32* %6
  br label %128

; <label>:117:                                    ; preds = %7
  %118 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %119 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %118, i32 1
  store %"class.std::deque"* %119, %"class.std::deque"** %4, align 8
  store i32 -859310526, i32* %6
  br label %128

; <label>:120:                                    ; preds = %7
  ret void

; <label>:121:                                    ; preds = %7
  %122 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %123 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %124 = icmp ne %"class.std::deque"* %122, %123
  store i32 353164820, i32* %6
  br label %128

; <label>:125:                                    ; preds = %7
  %126 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %127 = call %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80) %126) #3
  call void @_ZSt8_DestroyISt5dequeI4EdgeSaIS1_EEEvPT_(%"class.std::deque"* %127)
  store i32 1935139436, i32* %6
  br label %128

; <label>:128:                                    ; preds = %125, %121, %117, %116, %86, %59, %56, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt5dequeI4EdgeSaIS1_EEEvPT_(%"class.std::deque"*) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::deque"*
  ret %"class.std::deque"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EED2Ev(%"class.std::deque"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.110
  %3 = load i32, i32* @y.111
  %4 = sub i32 %2, 1744340472
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1744340472
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %60

; <label>:16:                                     ; preds = %1, %60
  %17 = alloca %"class.std::deque"*, align 8
  %18 = alloca %"struct.std::_Deque_iterator", align 8
  %19 = alloca %"struct.std::_Deque_iterator", align 8
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %17, align 8
  %22 = load %"class.std::deque"*, %"class.std::deque"** %17, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %18, %"class.std::deque"* %22) #3
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %19, %"class.std::deque"* %22) #3
  %23 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  %24 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %23) #3
  %25 = load i32, i32* @x.110
  %26 = load i32, i32* @y.111
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %60

; <label>:50:                                     ; preds = %16
  invoke void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"* %22, %"struct.std::_Deque_iterator"* %18, %"struct.std::_Deque_iterator"* %19, %"class.std::allocator.5"* dereferenceable(1) %24)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %50
  %52 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"* %52) #3
  ret void

; <label>:53:                                     ; preds = %50
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %20, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %21, align 4
  %57 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"* %57) #3
  br label %58

; <label>:58:                                     ; preds = %53
  %59 = load i8*, i8** %20, align 8
  call void @__clang_call_terminate(i8* %59) #11
  unreachable

; <label>:60:                                     ; preds = %16, %1
  %61 = alloca %"class.std::deque"*, align 8
  %62 = alloca %"struct.std::_Deque_iterator", align 8
  %63 = alloca %"struct.std::_Deque_iterator", align 8
  %64 = alloca i8*
  %65 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %61, align 8
  %66 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator"* sret %62, %"class.std::deque"* %66) #3
  call void @_ZNSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator"* sret %63, %"class.std::deque"* %66) #3
  %67 = bitcast %"class.std::deque"* %66 to %"class.std::_Deque_base"*
  %68 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %67) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE15_M_destroy_dataESt15_Deque_iteratorIS0_RS0_PS0_ES6_RKS1_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.5"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.112
  %8 = load i32, i32* @y.113
  %9 = sub i32 %7, 838139479
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 838139479
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -891412356, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %53
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -891412356, label %21
    i32 -537107218, label %29
    i32 635706031, label %48
    i32 45420887, label %49
  ]

; <label>:20:                                     ; preds = %18
  br label %53

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -537107218, i32 45420887
  store i32 %28, i32* %17
  br label %53

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %31, align 8
  %32 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %33 = load i32, i32* @x.112
  %34 = load i32, i32* @y.113
  %35 = add i32 %33, -1509166125
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1509166125
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 635706031, i32 45420887
  store i32 %47, i32* %17
  br label %53

; <label>:48:                                     ; preds = %18
  ret void

; <label>:49:                                     ; preds = %18
  %50 = alloca %"class.std::deque"*, align 8
  %51 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %50, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %51, align 8
  %52 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  store i32 -537107218, i32* %17
  br label %53

; <label>:53:                                     ; preds = %49, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Edge**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load %struct.Edge**, %struct.Edge*** %8, align 8
  store %struct.Edge** %9, %struct.Edge*** %2
  %10 = alloca i32
  store i32 -1739944796, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %96
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1739944796, label %14
    i32 -1588940909, label %18
    i32 1781949793, label %34
    i32 -600429021, label %70
    i32 -450408964, label %71
    i32 710746633, label %74
  ]

; <label>:13:                                     ; preds = %11
  br label %96

; <label>:14:                                     ; preds = %11
  %15 = load volatile %struct.Edge**, %struct.Edge*** %2
  %16 = icmp ne %struct.Edge** %15, null
  %17 = select i1 %16, i32 -1588940909, i32 -450408964
  store i32 %17, i32* %10
  br label %96

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.116
  %20 = load i32, i32* @y.117
  %21 = add i32 %19, -1203776887
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1203776887
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 1781949793, i32 710746633
  store i32 %33, i32* %10
  br label %96

; <label>:34:                                     ; preds = %11
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 3
  %39 = load %struct.Edge**, %struct.Edge*** %38, align 8
  %40 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %41, i32 0, i32 3
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %44 = load %struct.Edge**, %struct.Edge*** %43, align 8
  %45 = getelementptr inbounds %struct.Edge*, %struct.Edge** %44, i64 1
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %46, %struct.Edge** %39, %struct.Edge** %45) #3
  %47 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %48, i32 0, i32 0
  %50 = load %struct.Edge**, %struct.Edge*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %55, %struct.Edge** %50, i64 %54) #3
  %56 = load i32, i32* @x.116
  %57 = load i32, i32* @y.117
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 -600429021, i32 710746633
  store i32 %69, i32* %10
  br label %96

; <label>:70:                                     ; preds = %11
  store i32 -450408964, i32* %10
  br label %96

; <label>:71:                                     ; preds = %11
  %72 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %73) #3
  ret void

; <label>:74:                                     ; preds = %11
  %75 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %76, i32 0, i32 2
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 3
  %79 = load %struct.Edge**, %struct.Edge*** %78, align 8
  %80 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %81, i32 0, i32 3
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %82, i32 0, i32 3
  %84 = load %struct.Edge**, %struct.Edge*** %83, align 8
  %85 = getelementptr inbounds %struct.Edge*, %struct.Edge** %84, i64 1
  %86 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %86, %struct.Edge** %79, %struct.Edge** %85) #3
  %87 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %88 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %88, i32 0, i32 0
  %90 = load %struct.Edge**, %struct.Edge*** %89, align 8
  %91 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %95, %struct.Edge** %90, i64 %94) #3
  store i32 1781949793, i32* %10
  br label %96

; <label>:96:                                     ; preds = %74, %70, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %struct.Edge**, %struct.Edge**) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::_Deque_base"*
  %6 = alloca %"class.std::_Deque_base"*, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca %struct.Edge**, align 8
  %9 = alloca %struct.Edge**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %6, align 8
  store %struct.Edge** %1, %struct.Edge*** %7, align 8
  store %struct.Edge** %2, %struct.Edge*** %8, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %6, align 8
  store %"class.std::_Deque_base"* %10, %"class.std::_Deque_base"** %5
  %11 = load %struct.Edge**, %struct.Edge*** %7, align 8
  store %struct.Edge** %11, %struct.Edge*** %9, align 8
  %12 = alloca i32
  store i32 1918830648, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %171
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1918830648, label %16
    i32 -761901417, label %44
    i32 1880854391, label %63
    i32 -964309452, label %66
    i32 1171696779, label %82
    i32 2082790396, label %112
    i32 -1146607864, label %113
    i32 -1943688813, label %128
    i32 1528137912, label %158
    i32 1507386037, label %159
    i32 1465452065, label %160
    i32 -1113523172, label %164
    i32 -816828474, label %168
  ]

; <label>:15:                                     ; preds = %13
  br label %171

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* @x.118
  %18 = load i32, i32* @y.119
  %19 = sub i32 %17, -1629138165
  %20 = sub i32 %19, 1
  %21 = add i32 %20, -1629138165
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -761901417, i32 1465452065
  store i32 %43, i32* %12
  br label %171

; <label>:44:                                     ; preds = %13
  %45 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %46 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %47 = icmp ult %struct.Edge** %45, %46
  store i1 %47, i1* %4
  %48 = load i32, i32* @x.118
  %49 = load i32, i32* @y.119
  %50 = sub i32 %48, -201878301
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -201878301
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1880854391, i32 1465452065
  store i32 %62, i32* %12
  br label %171

; <label>:63:                                     ; preds = %13
  %64 = load volatile i1, i1* %4
  %65 = select i1 %64, i32 -964309452, i32 1507386037
  store i32 %65, i32* %12
  br label %171

; <label>:66:                                     ; preds = %13
  %67 = load i32, i32* @x.118
  %68 = load i32, i32* @y.119
  %69 = add i32 %67, -709423800
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -709423800
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1171696779, i32 -1113523172
  store i32 %81, i32* %12
  br label %171

; <label>:82:                                     ; preds = %13
  %83 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %84 = load %struct.Edge*, %struct.Edge** %83, align 8
  %85 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %85, %struct.Edge* %84) #3
  %86 = load i32, i32* @x.118
  %87 = load i32, i32* @y.119
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 2082790396, i32 -1113523172
  store i32 %111, i32* %12
  br label %171

; <label>:112:                                    ; preds = %13
  store i32 -1146607864, i32* %12
  br label %171

; <label>:113:                                    ; preds = %13
  %114 = load i32, i32* @x.118
  %115 = load i32, i32* @y.119
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  %127 = select i1 %125, i32 -1943688813, i32 -816828474
  store i32 %127, i32* %12
  br label %171

; <label>:128:                                    ; preds = %13
  %129 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %130 = getelementptr inbounds %struct.Edge*, %struct.Edge** %129, i32 1
  store %struct.Edge** %130, %struct.Edge*** %9, align 8
  %131 = load i32, i32* @x.118
  %132 = load i32, i32* @y.119
  %133 = sub i32 %131, -104025173
  %134 = sub i32 %133, 1
  %135 = add i32 %134, -104025173
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  %157 = select i1 %155, i32 1528137912, i32 -816828474
  store i32 %157, i32* %12
  br label %171

; <label>:158:                                    ; preds = %13
  store i32 1918830648, i32* %12
  br label %171

; <label>:159:                                    ; preds = %13
  ret void

; <label>:160:                                    ; preds = %13
  %161 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %162 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %163 = icmp ult %struct.Edge** %161, %162
  store i32 -761901417, i32* %12
  br label %171

; <label>:164:                                    ; preds = %13
  %165 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %166 = load %struct.Edge*, %struct.Edge** %165, align 8
  %167 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %167, %struct.Edge* %166) #3
  store i32 1171696779, i32* %12
  br label %171

; <label>:168:                                    ; preds = %13
  %169 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %170 = getelementptr inbounds %struct.Edge*, %struct.Edge** %169, i32 1
  store %struct.Edge** %170, %struct.Edge*** %9, align 8
  store i32 -1943688813, i32* %12
  br label %171

; <label>:171:                                    ; preds = %168, %164, %160, %158, %128, %113, %112, %82, %66, %63, %44, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"*, %struct.Edge**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.120
  %5 = load i32, i32* @y.121
  %6 = add i32 %4, 776654352
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 776654352
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %158

; <label>:30:                                     ; preds = %3, %158
  %31 = alloca %"class.std::_Deque_base"*, align 8
  %32 = alloca %struct.Edge**, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::allocator.14", align 1
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %31, align 8
  store %struct.Edge** %1, %struct.Edge*** %32, align 8
  store i64 %2, i64* %33, align 8
  %37 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %31, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %34, %"class.std::_Deque_base"* %37) #3
  %38 = load %struct.Edge**, %struct.Edge*** %32, align 8
  %39 = load i64, i64* %33, align 8
  %40 = load i32, i32* @x.120
  %41 = load i32, i32* @y.121
  %42 = add i32 %40, -352516025
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -352516025
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %158

; <label>:54:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m(%"class.std::allocator.14"* dereferenceable(1) %34, %struct.Edge** %38, i64 %39)
          to label %55 unwind label %98

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.120
  %57 = load i32, i32* @y.121
  %58 = sub i32 %56, 2133056395
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 2133056395
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %168

; <label>:70:                                     ; preds = %55, %168
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %34) #3
  %71 = load i32, i32* @x.120
  %72 = load i32, i32* @y.121
  %73 = sub i32 %71, 1190133310
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 1190133310
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 true, true
  %84 = and i1 %81, true
  %85 = and i1 %79, %83
  %86 = and i1 %82, true
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 true, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %168

; <label>:97:                                     ; preds = %70
  ret void

; <label>:98:                                     ; preds = %54
  %99 = load i32, i32* @x.120
  %100 = load i32, i32* @y.121
  %101 = sub i32 %99, 838240194
  %102 = sub i32 %101, 1
  %103 = add i32 %102, 838240194
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %169

; <label>:125:                                    ; preds = %98, %169
  %126 = landingpad { i8*, i32 }
          catch i8* null
  %127 = extractvalue { i8*, i32 } %126, 0
  store i8* %127, i8** %35, align 8
  %128 = extractvalue { i8*, i32 } %126, 1
  store i32 %128, i32* %36, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %34) #3
  %129 = load i32, i32* @x.120
  %130 = load i32, i32* @y.121
  %131 = add i32 %129, -1968379035
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -1968379035
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  br i1 %153, label %155, label %169

; <label>:155:                                    ; preds = %125
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %35, align 8
  call void @__clang_call_terminate(i8* %157) #11
  unreachable

; <label>:158:                                    ; preds = %30, %3
  %159 = alloca %"class.std::_Deque_base"*, align 8
  %160 = alloca %struct.Edge**, align 8
  %161 = alloca i64, align 8
  %162 = alloca %"class.std::allocator.14", align 1
  %163 = alloca i8*
  %164 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %159, align 8
  store %struct.Edge** %1, %struct.Edge*** %160, align 8
  store i64 %2, i64* %161, align 8
  %165 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %159, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %162, %"class.std::_Deque_base"* %165) #3
  %166 = load %struct.Edge**, %struct.Edge*** %160, align 8
  %167 = load i64, i64* %161, align 8
  br label %30

; <label>:168:                                    ; preds = %70, %55
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %34) #3
  br label %70

; <label>:169:                                    ; preds = %125, %98
  %170 = landingpad { i8*, i32 }
          catch i8* null
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %35, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %36, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %34) #3
  br label %125
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.122
  %5 = load i32, i32* @y.123
  %6 = sub i32 %4, 741281673
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 741281673
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 893905543, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 893905543, label %18
    i32 700292589, label %26
    i32 1496848322, label %44
    i32 836783836, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 700292589, i32 836783836
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %27, align 8
  %28 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %28 to %"class.std::allocator.5"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.5"* %29) #3
  %30 = load i32, i32* @x.122
  %31 = load i32, i32* @y.123
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1496848322, i32 836783836
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %46, align 8
  %47 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %47 to %"class.std::allocator.5"*
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.5"* %48) #3
  store i32 700292589, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"*, %struct.Edge*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6 to %"class.std::allocator.5"*
  %8 = load %struct.Edge*, %struct.Edge** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %10 unwind label %106

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.124
  %12 = load i32, i32* @y.125
  %13 = sub i32 %11, -1082776307
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -1082776307
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %109

; <label>:37:                                     ; preds = %10, %109
  %38 = load i32, i32* @x.124
  %39 = load i32, i32* @y.125
  %40 = add i32 %38, 187840627
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 187840627
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %109

; <label>:64:                                     ; preds = %37
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.5"* dereferenceable(1) %7, %struct.Edge* %8, i64 %9)
          to label %65 unwind label %106

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.124
  %67 = load i32, i32* @y.125
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %110

; <label>:91:                                     ; preds = %65, %110
  %92 = load i32, i32* @x.124
  %93 = load i32, i32* @y.125
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %110

; <label>:105:                                    ; preds = %91
  ret void

; <label>:106:                                    ; preds = %64, %2
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  call void @__clang_call_terminate(i8* %108) #11
  unreachable

; <label>:109:                                    ; preds = %37, %10
  br label %37

; <label>:110:                                    ; preds = %91, %65
  br label %91
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE10deallocateERS1_PS0_m(%"class.std::allocator.5"* dereferenceable(1), %struct.Edge*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.6"* %8, %struct.Edge* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 -593026580, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %66
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 -593026580, label %11
    i32 -1592976912, label %15
    i32 1440660353, label %18
    i32 362506145, label %19
    i32 48648157, label %36
    i32 309039911, label %63
    i32 -1918397331, label %65
  ]

; <label>:10:                                     ; preds = %8
  br label %66

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 -1592976912, i32 1440660353
  store i32 %14, i32* %6
  br label %66

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 362506145, i32* %6
  store i64 %17, i64* %7
  br label %66

; <label>:18:                                     ; preds = %8
  store i32 362506145, i32* %6
  store i64 1, i64* %7
  br label %66

; <label>:19:                                     ; preds = %8
  %20 = load i64, i64* %7
  store i64 %20, i64* %2
  %21 = load i32, i32* @x.128
  %22 = load i32, i32* @y.129
  %23 = add i32 %21, -916958164
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -916958164
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 48648157, i32 -1918397331
  store i32 %35, i32* %6
  br label %66

; <label>:36:                                     ; preds = %8
  %37 = load i32, i32* @x.128
  %38 = load i32, i32* @y.129
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 309039911, i32 -1918397331
  store i32 %62, i32* %6
  br label %66

; <label>:63:                                     ; preds = %8
  %64 = load volatile i64, i64* %2
  ret i64 %64

; <label>:65:                                     ; preds = %8
  store i32 48648157, i32* %6
  br label %66

; <label>:66:                                     ; preds = %65, %36, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.6"*, %struct.Edge*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %struct.Edge* %1, %struct.Edge** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %struct.Edge*, %struct.Edge** %5, align 8
  %9 = bitcast %struct.Edge* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.14"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIP4EdgeEC2IS_EERKSaIT_E(%"class.std::allocator.14"* %0, %"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIP4EdgeEE10deallocateERS2_PS1_m(%"class.std::allocator.14"* dereferenceable(1), %struct.Edge**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.134
  %7 = load i32, i32* @y.135
  %8 = add i32 %6, 1722940154
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1722940154
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1283036874, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1283036874, label %20
    i32 -290649189, label %40
    i32 -812074517, label %75
    i32 -302888992, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -290649189, i32 -302888992
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.14"*, align 8
  %42 = alloca %struct.Edge**, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %41, align 8
  store %struct.Edge** %1, %struct.Edge*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %41, align 8
  %45 = bitcast %"class.std::allocator.14"* %44 to %"class.__gnu_cxx::new_allocator.15"*
  %46 = load %struct.Edge**, %struct.Edge*** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.15"* %45, %struct.Edge** %46, i64 %47)
  %48 = load i32, i32* @x.134
  %49 = load i32, i32* @y.135
  %50 = add i32 %48, 368059569
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 368059569
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -812074517, i32 -302888992
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.14"*, align 8
  %78 = alloca %struct.Edge**, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %77, align 8
  store %struct.Edge** %1, %struct.Edge*** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %77, align 8
  %81 = bitcast %"class.std::allocator.14"* %80 to %"class.__gnu_cxx::new_allocator.15"*
  %82 = load %struct.Edge**, %struct.Edge*** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.15"* %81, %struct.Edge** %82, i64 %83)
  store i32 -290649189, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.138
  %6 = load i32, i32* @y.139
  %7 = sub i32 %5, 572289714
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 572289714
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1854544202, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1854544202, label %19
    i32 1157271196, label %27
    i32 2063488603, label %47
    i32 2014273723, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1157271196, i32 2014273723
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %30 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %31, %"class.std::allocator.5"** %2
  %32 = load i32, i32* @x.138
  %33 = load i32, i32* @y.139
  %34 = sub i32 %32, 78172475
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 78172475
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 2063488603, i32 2014273723
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %50, align 8
  %51 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %50, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %52 to %"class.std::allocator.5"*
  store i32 1157271196, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIP4EdgeEC2IS_EERKSaIT_E(%"class.std::allocator.14"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.142
  %5 = load i32, i32* @y.143
  %6 = sub i32 %4, -1719412876
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1719412876
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 122431402, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 122431402, label %18
    i32 -221111538, label %26
    i32 1775584016, label %43
    i32 -757064102, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -221111538, i32 -757064102
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %27, align 8
  %29 = load i32, i32* @x.142
  %30 = load i32, i32* @y.143
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 1775584016, i32 -757064102
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %45, align 8
  store i32 -221111538, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.15"*, %struct.Edge**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %8 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %9 = bitcast %struct.Edge** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIP4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.148
  %5 = load i32, i32* @y.149
  %6 = sub i32 %4, 891034981
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 891034981
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1764607595, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %47
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1764607595, label %18
    i32 -758578416, label %26
    i32 -993185071, label %43
    i32 561871430, label %44
  ]

; <label>:17:                                     ; preds = %15
  br label %47

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -758578416, i32 561871430
  store i32 %25, i32* %14
  br label %47

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %27, align 8
  %29 = load i32, i32* @x.148
  %30 = load i32, i32* @y.149
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -993185071, i32 561871430
  store i32 %42, i32* %14
  br label %47

; <label>:43:                                     ; preds = %15
  ret void

; <label>:44:                                     ; preds = %15
  %45 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %45, align 8
  store i32 -758578416, i32* %14
  br label %47

; <label>:47:                                     ; preds = %44, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"*, %"class.std::deque"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::deque"*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  store %"class.std::deque"* %10, %"class.std::deque"** %4
  %11 = alloca i32
  store i32 -86377058, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %97
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -86377058, label %15
    i32 430579135, label %19
    i32 -259357243, label %35
    i32 58404276, label %56
    i32 -2077733627, label %57
    i32 -820602682, label %73
    i32 -928770375, label %89
    i32 -595955036, label %90
    i32 985388020, label %96
  ]

; <label>:14:                                     ; preds = %12
  br label %97

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  %17 = icmp ne %"class.std::deque"* %16, null
  %18 = select i1 %17, i32 430579135, i32 -2077733627
  store i32 %18, i32* %11
  br label %97

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.150
  %21 = load i32, i32* @y.151
  %22 = add i32 %20, -1505997851
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1505997851
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -259357243, i32 -595955036
  store i32 %34, i32* %11
  br label %97

; <label>:35:                                     ; preds = %12
  %36 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %37 to %"class.std::allocator"*
  %39 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %40 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1) %38, %"class.std::deque"* %39, i64 %40)
  %41 = load i32, i32* @x.150
  %42 = load i32, i32* @y.151
  %43 = sub i32 %41, 127542024
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 127542024
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 58404276, i32 -595955036
  store i32 %55, i32* %11
  br label %97

; <label>:56:                                     ; preds = %12
  store i32 -2077733627, i32* %11
  br label %97

; <label>:57:                                     ; preds = %12
  %58 = load i32, i32* @x.150
  %59 = load i32, i32* @y.151
  %60 = sub i32 %58, 1909905246
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1909905246
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 -820602682, i32 985388020
  store i32 %72, i32* %11
  br label %97

; <label>:73:                                     ; preds = %12
  %74 = load i32, i32* @x.150
  %75 = load i32, i32* @y.151
  %76 = sub i32 %74, 2040647080
  %77 = sub i32 %76, 1
  %78 = add i32 %77, 2040647080
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  %88 = select i1 %86, i32 -928770375, i32 985388020
  store i32 %88, i32* %11
  br label %97

; <label>:89:                                     ; preds = %12
  ret void

; <label>:90:                                     ; preds = %12
  %91 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %92 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %91, i32 0, i32 0
  %93 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %92 to %"class.std::allocator"*
  %94 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %95 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1) %93, %"class.std::deque"* %94, i64 %95)
  store i32 -259357243, i32* %11
  br label %97

; <label>:96:                                     ; preds = %12
  store i32 -820602682, i32* %11
  br label %97

; <label>:97:                                     ; preds = %96, %90, %73, %57, %56, %35, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.152
  %5 = load i32, i32* @y.153
  %6 = sub i32 %4, 303375018
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 303375018
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -616369800, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -616369800, label %18
    i32 1603969630, label %26
    i32 358378001, label %45
    i32 -1929479995, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1603969630, i32 -1929479995
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %27, align 8
  %28 = load %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %28 to %"class.std::allocator"*
  call void @_ZNSaISt5dequeI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %29) #3
  %30 = load i32, i32* @x.152
  %31 = load i32, i32* @y.153
  %32 = sub i32 %30, 48044962
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 48044962
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 358378001, i32 -1929479995
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %47, align 8
  %48 = load %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"** %47, align 8
  %49 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %48 to %"class.std::allocator"*
  call void @_ZNSaISt5dequeI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"* %49) #3
  store i32 1603969630, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE10deallocateERS4_PS3_m(%"class.std::allocator"* dereferenceable(1), %"class.std::deque"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.154
  %7 = load i32, i32* @y.155
  %8 = sub i32 %6, -986556629
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -986556629
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -639346231, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -639346231, label %20
    i32 1690589978, label %28
    i32 1628557758, label %62
    i32 334198539, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1690589978, i32 334198539
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator"*, align 8
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %29, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  %34 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator"* %33, %"class.std::deque"* %34, i64 %35)
  %36 = load i32, i32* @x.154
  %37 = load i32, i32* @y.155
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1628557758, i32 334198539
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca %"class.std::deque"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %68 = bitcast %"class.std::allocator"* %67 to %"class.__gnu_cxx::new_allocator"*
  %69 = load %"class.std::deque"*, %"class.std::deque"** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator"* %68, %"class.std::deque"* %69, i64 %70)
  store i32 1690589978, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE10deallocateEPS4_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::deque"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %9 = bitcast %"class.std::deque"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt5dequeI4EdgeSaIS0_EEED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.2"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.166
  %7 = load i32, i32* @y.167
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 549167255, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 549167255, label %19
    i32 2102193405, label %39
    i32 1065018047, label %71
    i32 1500904961, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2102193405, i32 1500904961
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca %"class.std::allocator.2"*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %42, align 8
  %43 = load i32*, i32** %40, align 8
  %44 = load i32*, i32** %41, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %43, i32* %44)
  %45 = load i32, i32* @x.166
  %46 = load i32, i32* @y.167
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1065018047, i32 1500904961
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca i32*, align 8
  %74 = alloca i32*, align 8
  %75 = alloca %"class.std::allocator.2"*, align 8
  store i32* %0, i32** %73, align 8
  store i32* %1, i32** %74, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %75, align 8
  %76 = load i32*, i32** %73, align 8
  %77 = load i32*, i32** %74, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %76, i32* %77)
  store i32 2102193405, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = add i64 %15, 548955892688142496
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, 548955892688142496
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.1"* %5, i32* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %3, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %4, align 4
  %28 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %28) #3
  br label %29

; <label>:29:                                     ; preds = %24
  %30 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %30) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.1"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 1214932068, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1214932068, label %15
    i32 -602139164, label %19
    i32 -319281973, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 -602139164, i32 -319281973
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.2"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -319281973, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.2"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.3"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.3"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.182
  %7 = load i32, i32* @y.183
  %8 = add i32 %6, 1850656966
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1850656966
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2073060551, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2073060551, label %20
    i32 612325391, label %28
    i32 -1036464685, label %61
    i32 -1928748406, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 612325391, i32 -1928748406
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.182
  %36 = load i32, i32* @y.183
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1036464685, i32 -1928748406
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %64 = alloca i32*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %63, align 8
  store i32* %1, i32** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %63, align 8
  %67 = load i32*, i32** %64, align 8
  %68 = bitcast i32* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 612325391, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiI4EdgeRS0_PS0_ENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS7_SA_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 3
  %8 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %9, i32 0, i32 3
  %11 = load %struct.Edge**, %struct.Edge*** %10, align 8
  %12 = ptrtoint %struct.Edge** %8 to i64
  %13 = ptrtoint %struct.Edge** %11 to i64
  %14 = add i64 %12, -8958547197105798103
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -8958547197105798103
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  %19 = sub i64 %18, -2824566996832069967
  %20 = sub i64 %19, 1
  %21 = add i64 %20, -2824566996832069967
  %22 = sub nsw i64 %18, 1
  %23 = mul nsw i64 %5, %21
  %24 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 0
  %26 = load %struct.Edge*, %struct.Edge** %25, align 8
  %27 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 1
  %29 = load %struct.Edge*, %struct.Edge** %28, align 8
  %30 = ptrtoint %struct.Edge* %26 to i64
  %31 = ptrtoint %struct.Edge* %29 to i64
  %32 = sub i64 %30, 8285228174841846562
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 8285228174841846562
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = sub i64 0, %23
  %38 = sub i64 0, %36
  %39 = add i64 %37, %38
  %40 = sub i64 0, %39
  %41 = add nsw i64 %23, %36
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 2
  %44 = load %struct.Edge*, %struct.Edge** %43, align 8
  %45 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %45, i32 0, i32 0
  %47 = load %struct.Edge*, %struct.Edge** %46, align 8
  %48 = ptrtoint %struct.Edge* %44 to i64
  %49 = ptrtoint %struct.Edge* %47 to i64
  %50 = sub i64 0, %49
  %51 = add i64 %48, %50
  %52 = sub i64 %48, %49
  %53 = sdiv exact i64 %51, 24
  %54 = sub i64 0, %53
  %55 = sub i64 %40, %54
  %56 = add nsw i64 %40, %53
  ret i64 %55
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.186
  %2 = load i32, i32* @y.187
  %3 = add i32 %1, -848587956
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, -848587956
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %47

; <label>:15:                                     ; preds = %0, %47
  %16 = load i32, i32* @x.186
  %17 = load i32, i32* @y.187
  %18 = sub i32 0, 1
  %19 = add i32 %16, %18
  %20 = sub i32 %16, 1
  %21 = mul i32 %16, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %17, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %47

; <label>:41:                                     ; preds = %15
  %42 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %41
  ret i64 %42

; <label>:44:                                     ; preds = %41
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #11
  unreachable

; <label>:47:                                     ; preds = %15, %0
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiRxmEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %struct.Edge*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %struct.Edge*, %struct.Edge** %7, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  %16 = load i64*, i64** %9, align 8
  %17 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiRxmEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %struct.Edge* %13, i32* dereferenceable(4) %15, i64* dereferenceable(8) %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.192
  %6 = load i32, i32* @y.193
  %7 = add i32 %5, 57715875
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 57715875
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1649534466, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1649534466, label %19
    i32 -1972851748, label %27
    i32 -777682093, label %44
    i32 785375786, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1972851748, i32 785375786
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca i64*, align 8
  store i64* %0, i64** %28, align 8
  %29 = load i64*, i64** %28, align 8
  store i64* %29, i64** %2
  %30 = load i32, i32* @x.192
  %31 = load i32, i32* @y.193
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -777682093, i32 785375786
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile i64*, i64** %2
  ret i64* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca i64*, align 8
  store i64* %0, i64** %47, align 8
  %48 = load i64*, i64** %47, align 8
  store i32 -1972851748, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiRxmEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i64* %2, i64** %7, align 8
  store i64* %3, i64** %8, align 8
  %11 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %11, i64 1)
  %12 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %13 = call %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %12)
  %14 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %15, i32 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %16, i32 0, i32 3
  %18 = load %struct.Edge**, %struct.Edge*** %17, align 8
  %19 = getelementptr inbounds %struct.Edge*, %struct.Edge** %18, i64 1
  store %struct.Edge* %13, %struct.Edge** %19, align 8
  %20 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %21 to %"class.std::allocator.5"*
  %23 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %24 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %24, i32 0, i32 3
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %25, i32 0, i32 0
  %27 = load %struct.Edge*, %struct.Edge** %26, align 8
  %28 = load i32*, i32** %6, align 8
  %29 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %28) #3
  %30 = load i64*, i64** %7, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = load i64*, i64** %8, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %32) #3
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiRxmEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %22, %struct.Edge* %27, i32* dereferenceable(4) %29, i64* dereferenceable(8) %31, i64* dereferenceable(8) %33)
          to label %34 unwind label %53

; <label>:34:                                     ; preds = %4
  %35 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %36, i32 0, i32 3
  %38 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %39 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %39, i32 0, i32 3
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 3
  %42 = load %struct.Edge**, %struct.Edge*** %41, align 8
  %43 = getelementptr inbounds %struct.Edge*, %struct.Edge** %42, i64 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %37, %struct.Edge** %43) #3
  %44 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 1
  %48 = load %struct.Edge*, %struct.Edge** %47, align 8
  %49 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  %51 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %50, i32 0, i32 3
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 0
  store %struct.Edge* %48, %struct.Edge** %52, align 8
  br label %115

; <label>:53:                                     ; preds = %4
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %9, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %10, align 4
  br label %57

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* @x.196
  %59 = load i32, i32* @y.197
  %60 = add i32 %58, 540251814
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 540251814
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %167

; <label>:84:                                     ; preds = %57, %167
  %85 = load i8*, i8** %9, align 8
  %86 = call i8* @__cxa_begin_catch(i8* %85) #3
  %87 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %88 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %89, i32 0, i32 3
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 3
  %92 = load %struct.Edge**, %struct.Edge*** %91, align 8
  %93 = getelementptr inbounds %struct.Edge*, %struct.Edge** %92, i64 1
  %94 = load %struct.Edge*, %struct.Edge** %93, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %87, %struct.Edge* %94) #3
  %95 = load i32, i32* @x.196
  %96 = load i32, i32* @y.197
  %97 = add i32 %95, 536207851
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 536207851
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %167

; <label>:109:                                    ; preds = %84
  invoke void @__cxa_rethrow() #12
          to label %124 unwind label %110

; <label>:110:                                    ; preds = %109
  %111 = landingpad { i8*, i32 }
          cleanup
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %9, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %114 unwind label %121

; <label>:114:                                    ; preds = %110
  br label %116

; <label>:115:                                    ; preds = %34
  ret void

; <label>:116:                                    ; preds = %114
  %117 = load i8*, i8** %9, align 8
  %118 = load i32, i32* %10, align 4
  %119 = insertvalue { i8*, i32 } undef, i8* %117, 0
  %120 = insertvalue { i8*, i32 } %119, i32 %118, 1
  resume { i8*, i32 } %120

; <label>:121:                                    ; preds = %110
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  call void @__clang_call_terminate(i8* %123) #11
  unreachable

; <label>:124:                                    ; preds = %109
  %125 = load i32, i32* @x.196
  %126 = load i32, i32* @y.197
  %127 = add i32 %125, -1390833869
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1390833869
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %178

; <label>:151:                                    ; preds = %124, %178
  %152 = load i32, i32* @x.196
  %153 = load i32, i32* @y.197
  %154 = add i32 %152, -175145495
  %155 = sub i32 %154, 1
  %156 = sub i32 %155, -175145495
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %178

; <label>:166:                                    ; preds = %151
  unreachable

; <label>:167:                                    ; preds = %84, %57
  %168 = load i8*, i8** %9, align 8
  %169 = call i8* @__cxa_begin_catch(i8* %168) #3
  %170 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %171 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %172 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %171, i32 0, i32 0
  %173 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %172, i32 0, i32 3
  %174 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %173, i32 0, i32 3
  %175 = load %struct.Edge**, %struct.Edge*** %174, align 8
  %176 = getelementptr inbounds %struct.Edge*, %struct.Edge** %175, i64 1
  %177 = load %struct.Edge*, %struct.Edge** %176, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %170, %struct.Edge* %177) #3
  br label %84

; <label>:178:                                    ; preds = %151, %124
  br label %151
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiRxmEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %struct.Edge*, i32* dereferenceable(4), i64* dereferenceable(8), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64*, align 8
  %10 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  store i32* %2, i32** %8, align 8
  store i64* %3, i64** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %12 = load %struct.Edge*, %struct.Edge** %7, align 8
  %13 = bitcast %struct.Edge* %12 to i8*
  %14 = bitcast i8* %13 to %struct.Edge*
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %15) #3
  %17 = load i32, i32* %16, align 4
  %18 = load i64*, i64** %9, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardIRxEOT_RNSt16remove_referenceIS1_E4typeE(i64* dereferenceable(8) %18) #3
  %20 = load i64, i64* %19, align 8
  %21 = load i64*, i64** %10, align 8
  %22 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %21) #3
  %23 = load i64, i64* %22, align 8
  %24 = trunc i64 %23 to i32
  call void @_ZN4EdgeC2Eixi(%struct.Edge* %14, i32 %17, i64 %20, i32 %24)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN4EdgeC2Eixi(%struct.Edge*, i32, i64, i32) unnamed_addr #4 comdat align 2 {
  %5 = alloca %struct.Edge*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i64, align 8
  %8 = alloca i32, align 4
  store %struct.Edge* %0, %struct.Edge** %5, align 8
  store i32 %1, i32* %6, align 4
  store i64 %2, i64* %7, align 8
  store i32 %3, i32* %8, align 4
  %9 = load %struct.Edge*, %struct.Edge** %5, align 8
  %10 = getelementptr inbounds %struct.Edge, %struct.Edge* %9, i32 0, i32 0
  %11 = load i32, i32* %6, align 4
  store i32 %11, i32* %10, align 8
  %12 = getelementptr inbounds %struct.Edge, %struct.Edge* %9, i32 0, i32 2
  %13 = load i64, i64* %7, align 8
  store i64 %13, i64* %12, align 8
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %9, i32 0, i32 3
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, 1
  %11 = sub i64 %9, %10
  %12 = add i64 %9, 1
  store i64 %11, i64* %4
  %13 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %14 = bitcast %"class.std::deque"* %13 to %"class.std::_Deque_base"*
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %15, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %19 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 3
  %23 = load %struct.Edge**, %struct.Edge*** %22, align 8
  %24 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %25 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %26, i32 0, i32 0
  %28 = load %struct.Edge**, %struct.Edge*** %27, align 8
  %29 = ptrtoint %struct.Edge** %23 to i64
  %30 = ptrtoint %struct.Edge** %28 to i64
  %31 = sub i64 %29, 1392124645216669580
  %32 = sub i64 %31, %30
  %33 = add i64 %32, 1392124645216669580
  %34 = sub i64 %29, %30
  %35 = sdiv exact i64 %33, 8
  %36 = sub i64 0, %35
  %37 = add i64 %17, %36
  %38 = sub i64 %17, %35
  store i64 %37, i64* %3
  %39 = alloca i32
  store i32 -515283790, i32* %39
  br label %40

; <label>:40:                                     ; preds = %2, %52
  %41 = load i32, i32* %39
  switch i32 %41, label %42 [
    i32 -515283790, label %43
    i32 -641589761, label %48
    i32 -441382578, label %51
  ]

; <label>:42:                                     ; preds = %40
  br label %52

; <label>:43:                                     ; preds = %40
  %44 = load volatile i64, i64* %4
  %45 = load volatile i64, i64* %3
  %46 = icmp ugt i64 %44, %45
  %47 = select i1 %46, i32 -641589761, i32 -441382578
  store i32 %47, i32* %39
  br label %52

; <label>:48:                                     ; preds = %40
  %49 = load i64, i64* %7, align 8
  %50 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"* %50, i64 %49, i1 zeroext false)
  store i32 -441382578, i32* %39
  br label %52

; <label>:51:                                     ; preds = %40
  ret void

; <label>:52:                                     ; preds = %48, %43, %42
  br label %40
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %7 = call %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.5"* dereferenceable(1) %5, i64 %6)
  ret %struct.Edge* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"*, %struct.Edge**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %struct.Edge**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %struct.Edge** %1, %struct.Edge*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store %struct.Edge** %6, %struct.Edge*** %7, align 8
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store %struct.Edge* %9, %struct.Edge** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load %struct.Edge*, %struct.Edge** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store %struct.Edge* %14, %struct.Edge** %15, align 8
  ret void
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca %struct.Edge**
  %8 = alloca %struct.Edge**
  %9 = alloca i1
  %10 = alloca %"class.std::deque"*
  %11 = alloca %struct.Edge***
  %12 = alloca i64*
  %13 = alloca %struct.Edge***
  %14 = alloca i64*
  %15 = alloca i64*
  %16 = alloca i8*
  %17 = alloca i64*
  %18 = alloca i1
  %19 = alloca i1
  %20 = load i32, i32* @x.208
  %21 = load i32, i32* @y.209
  %22 = sub i32 %20, -772288000
  %23 = sub i32 %22, 1
  %24 = add i32 %23, -772288000
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  store i1 %28, i1* %19
  %29 = icmp slt i32 %21, 10
  store i1 %29, i1* %18
  %30 = alloca i32
  store i32 -1289562436, i32* %30
  %31 = alloca i64
  %32 = alloca i64
  br label %33

; <label>:33:                                     ; preds = %3, %849
  %34 = load i32, i32* %30
  switch i32 %34, label %35 [
    i32 -1289562436, label %36
    i32 -2059850006, label %56
    i32 2029328051, label %125
    i32 1422612508, label %128
    i32 -1405307454, label %151
    i32 -1383466580, label %154
    i32 -43609685, label %170
    i32 252145306, label %185
    i32 -686134428, label %186
    i32 87563410, label %201
    i32 1479822207, label %217
    i32 -568081483, label %249
    i32 -131179205, label %250
    i32 26058467, label %270
    i32 1361521661, label %271
    i32 233268319, label %299
    i32 -1035623180, label %368
    i32 -1101352192, label %371
    i32 951107015, label %398
    i32 -335502321, label %416
    i32 -1921580049, label %418
    i32 555907883, label %419
    i32 -996381426, label %448
    i32 1001181801, label %508
    i32 -199624502, label %509
    i32 198514482, label %526
    i32 -93063203, label %682
    i32 629240660, label %683
    i32 -751453410, label %700
    i32 995283935, label %801
    i32 -1053067469, label %804
  ]

; <label>:35:                                     ; preds = %33
  br label %849

; <label>:36:                                     ; preds = %33
  %37 = load volatile i1, i1* %19
  %38 = load volatile i1, i1* %18
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -2059850006, i32 198514482
  store i32 %55, i32* %30
  br label %849

; <label>:56:                                     ; preds = %33
  %57 = alloca %"class.std::deque"*, align 8
  %58 = alloca i64, align 8
  store i64* %58, i64** %17
  %59 = alloca i8, align 1
  store i8* %59, i8** %16
  %60 = alloca i64, align 8
  store i64* %60, i64** %15
  %61 = alloca i64, align 8
  store i64* %61, i64** %14
  %62 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %62, %struct.Edge**** %13
  %63 = alloca i64, align 8
  store i64* %63, i64** %12
  %64 = alloca %struct.Edge**, align 8
  store %struct.Edge*** %64, %struct.Edge**** %11
  store %"class.std::deque"* %0, %"class.std::deque"** %57, align 8
  %65 = load volatile i64*, i64** %17
  store i64 %1, i64* %65, align 8
  %66 = zext i1 %2 to i8
  %67 = load volatile i8*, i8** %16
  store i8 %66, i8* %67, align 1
  %68 = load %"class.std::deque"*, %"class.std::deque"** %57, align 8
  store %"class.std::deque"* %68, %"class.std::deque"** %10
  %69 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %70 = bitcast %"class.std::deque"* %69 to %"class.std::_Deque_base"*
  %71 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %71, i32 0, i32 3
  %73 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %72, i32 0, i32 3
  %74 = load %struct.Edge**, %struct.Edge*** %73, align 8
  %75 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %76 = bitcast %"class.std::deque"* %75 to %"class.std::_Deque_base"*
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %77, i32 0, i32 2
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %80 = load %struct.Edge**, %struct.Edge*** %79, align 8
  %81 = ptrtoint %struct.Edge** %74 to i64
  %82 = ptrtoint %struct.Edge** %80 to i64
  %83 = sub i64 0, %82
  %84 = add i64 %81, %83
  %85 = sub i64 %81, %82
  %86 = sdiv exact i64 %84, 8
  %87 = sub i64 0, %86
  %88 = sub i64 0, 1
  %89 = add i64 %87, %88
  %90 = sub i64 0, %89
  %91 = add nsw i64 %86, 1
  %92 = load volatile i64*, i64** %15
  store i64 %90, i64* %92, align 8
  %93 = load volatile i64*, i64** %15
  %94 = load i64, i64* %93, align 8
  %95 = load volatile i64*, i64** %17
  %96 = load i64, i64* %95, align 8
  %97 = add i64 %94, 6343570504688659945
  %98 = add i64 %97, %96
  %99 = sub i64 %98, 6343570504688659945
  %100 = add i64 %94, %96
  %101 = load volatile i64*, i64** %14
  store i64 %99, i64* %101, align 8
  %102 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %103 = bitcast %"class.std::deque"* %102 to %"class.std::_Deque_base"*
  %104 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %104, i32 0, i32 1
  %106 = load i64, i64* %105, align 8
  %107 = load volatile i64*, i64** %14
  %108 = load i64, i64* %107, align 8
  %109 = mul i64 2, %108
  %110 = icmp ugt i64 %106, %109
  store i1 %110, i1* %9
  %111 = load i32, i32* @x.208
  %112 = load i32, i32* @y.209
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 2029328051, i32 198514482
  store i32 %124, i32* %30
  br label %849

; <label>:125:                                    ; preds = %33
  %126 = load volatile i1, i1* %9
  %127 = select i1 %126, i32 1422612508, i32 1361521661
  store i32 %127, i32* %30
  br label %849

; <label>:128:                                    ; preds = %33
  %129 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %130 = bitcast %"class.std::deque"* %129 to %"class.std::_Deque_base"*
  %131 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %131, i32 0, i32 0
  %133 = load %struct.Edge**, %struct.Edge*** %132, align 8
  %134 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %135 = bitcast %"class.std::deque"* %134 to %"class.std::_Deque_base"*
  %136 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %136, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = load volatile i64*, i64** %14
  %140 = load i64, i64* %139, align 8
  %141 = sub i64 %138, -5705085037338309542
  %142 = sub i64 %141, %140
  %143 = add i64 %142, -5705085037338309542
  %144 = sub i64 %138, %140
  %145 = udiv i64 %143, 2
  %146 = getelementptr inbounds %struct.Edge*, %struct.Edge** %133, i64 %145
  store %struct.Edge** %146, %struct.Edge*** %8
  %147 = load volatile i8*, i8** %16
  %148 = load i8, i8* %147, align 1
  %149 = trunc i8 %148 to i1
  %150 = select i1 %149, i32 -1405307454, i32 -1383466580
  store i32 %150, i32* %30
  br label %849

; <label>:151:                                    ; preds = %33
  %152 = load volatile i64*, i64** %17
  %153 = load i64, i64* %152, align 8
  store i32 -686134428, i32* %30
  store i64 %153, i64* %31
  br label %849

; <label>:154:                                    ; preds = %33
  %155 = load i32, i32* @x.208
  %156 = load i32, i32* @y.209
  %157 = sub i32 %155, 2102628955
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 2102628955
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -43609685, i32 -93063203
  store i32 %169, i32* %30
  br label %849

; <label>:170:                                    ; preds = %33
  %171 = load i32, i32* @x.208
  %172 = load i32, i32* @y.209
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  %184 = select i1 %182, i32 252145306, i32 -93063203
  store i32 %184, i32* %30
  br label %849

; <label>:185:                                    ; preds = %33
  store i32 -686134428, i32* %30
  store i64 0, i64* %31
  br label %849

; <label>:186:                                    ; preds = %33
  %187 = load i64, i64* %31
  %188 = load volatile %struct.Edge**, %struct.Edge*** %8
  %189 = getelementptr inbounds %struct.Edge*, %struct.Edge** %188, i64 %187
  %190 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %189, %struct.Edge*** %190, align 8
  %191 = load volatile %struct.Edge***, %struct.Edge**** %13
  %192 = load %struct.Edge**, %struct.Edge*** %191, align 8
  %193 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %194 = bitcast %"class.std::deque"* %193 to %"class.std::_Deque_base"*
  %195 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %194, i32 0, i32 0
  %196 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %195, i32 0, i32 2
  %197 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %196, i32 0, i32 3
  %198 = load %struct.Edge**, %struct.Edge*** %197, align 8
  %199 = icmp ult %struct.Edge** %192, %198
  %200 = select i1 %199, i32 87563410, i32 -131179205
  store i32 %200, i32* %30
  br label %849

; <label>:201:                                    ; preds = %33
  %202 = load i32, i32* @x.208
  %203 = load i32, i32* @y.209
  %204 = sub i32 %202, -819599394
  %205 = sub i32 %204, 1
  %206 = add i32 %205, -819599394
  %207 = sub i32 %202, 1
  %208 = mul i32 %202, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %203, 10
  %212 = and i1 %210, %211
  %213 = xor i1 %210, %211
  %214 = or i1 %212, %213
  %215 = or i1 %210, %211
  %216 = select i1 %214, i32 1479822207, i32 629240660
  store i32 %216, i32* %30
  br label %849

; <label>:217:                                    ; preds = %33
  %218 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %219 = bitcast %"class.std::deque"* %218 to %"class.std::_Deque_base"*
  %220 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %219, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %220, i32 0, i32 2
  %222 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %221, i32 0, i32 3
  %223 = load %struct.Edge**, %struct.Edge*** %222, align 8
  %224 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %225 = bitcast %"class.std::deque"* %224 to %"class.std::_Deque_base"*
  %226 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %226, i32 0, i32 3
  %228 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %227, i32 0, i32 3
  %229 = load %struct.Edge**, %struct.Edge*** %228, align 8
  %230 = getelementptr inbounds %struct.Edge*, %struct.Edge** %229, i64 1
  %231 = load volatile %struct.Edge***, %struct.Edge**** %13
  %232 = load %struct.Edge**, %struct.Edge*** %231, align 8
  %233 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %223, %struct.Edge** %230, %struct.Edge** %232)
  %234 = load i32, i32* @x.208
  %235 = load i32, i32* @y.209
  %236 = add i32 %234, -57544744
  %237 = sub i32 %236, 1
  %238 = sub i32 %237, -57544744
  %239 = sub i32 %234, 1
  %240 = mul i32 %234, %238
  %241 = urem i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = icmp slt i32 %235, 10
  %244 = and i1 %242, %243
  %245 = xor i1 %242, %243
  %246 = or i1 %244, %245
  %247 = or i1 %242, %243
  %248 = select i1 %246, i32 -568081483, i32 629240660
  store i32 %248, i32* %30
  br label %849

; <label>:249:                                    ; preds = %33
  store i32 26058467, i32* %30
  br label %849

; <label>:250:                                    ; preds = %33
  %251 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %252 = bitcast %"class.std::deque"* %251 to %"class.std::_Deque_base"*
  %253 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %253, i32 0, i32 2
  %255 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %254, i32 0, i32 3
  %256 = load %struct.Edge**, %struct.Edge*** %255, align 8
  %257 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %258 = bitcast %"class.std::deque"* %257 to %"class.std::_Deque_base"*
  %259 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %259, i32 0, i32 3
  %261 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %260, i32 0, i32 3
  %262 = load %struct.Edge**, %struct.Edge*** %261, align 8
  %263 = getelementptr inbounds %struct.Edge*, %struct.Edge** %262, i64 1
  %264 = load volatile %struct.Edge***, %struct.Edge**** %13
  %265 = load %struct.Edge**, %struct.Edge*** %264, align 8
  %266 = load volatile i64*, i64** %15
  %267 = load i64, i64* %266, align 8
  %268 = getelementptr inbounds %struct.Edge*, %struct.Edge** %265, i64 %267
  %269 = call %struct.Edge** @_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %256, %struct.Edge** %263, %struct.Edge** %268)
  store i32 26058467, i32* %30
  br label %849

; <label>:270:                                    ; preds = %33
  store i32 -199624502, i32* %30
  br label %849

; <label>:271:                                    ; preds = %33
  %272 = load i32, i32* @x.208
  %273 = load i32, i32* @y.209
  %274 = add i32 %272, -2023300997
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, -2023300997
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  %298 = select i1 %296, i32 233268319, i32 -751453410
  store i32 %298, i32* %30
  br label %849

; <label>:299:                                    ; preds = %33
  %300 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %301 = bitcast %"class.std::deque"* %300 to %"class.std::_Deque_base"*
  %302 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %302, i32 0, i32 1
  %304 = load i64, i64* %303, align 8
  %305 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %306 = bitcast %"class.std::deque"* %305 to %"class.std::_Deque_base"*
  %307 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %307, i32 0, i32 1
  %309 = load volatile i64*, i64** %17
  %310 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %308, i64* dereferenceable(8) %309)
  %311 = load i64, i64* %310, align 8
  %312 = sub i64 %304, -5409529319660630093
  %313 = add i64 %312, %311
  %314 = add i64 %313, -5409529319660630093
  %315 = add i64 %304, %311
  %316 = sub i64 0, %314
  %317 = sub i64 0, 2
  %318 = add i64 %316, %317
  %319 = sub i64 0, %318
  %320 = add i64 %314, 2
  %321 = load volatile i64*, i64** %12
  store i64 %319, i64* %321, align 8
  %322 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %323 = bitcast %"class.std::deque"* %322 to %"class.std::_Deque_base"*
  %324 = load volatile i64*, i64** %12
  %325 = load i64, i64* %324, align 8
  %326 = call %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %323, i64 %325)
  %327 = load volatile %struct.Edge***, %struct.Edge**** %11
  store %struct.Edge** %326, %struct.Edge*** %327, align 8
  %328 = load volatile %struct.Edge***, %struct.Edge**** %11
  %329 = load %struct.Edge**, %struct.Edge*** %328, align 8
  %330 = load volatile i64*, i64** %12
  %331 = load i64, i64* %330, align 8
  %332 = load volatile i64*, i64** %14
  %333 = load i64, i64* %332, align 8
  %334 = sub i64 0, %333
  %335 = add i64 %331, %334
  %336 = sub i64 %331, %333
  %337 = udiv i64 %335, 2
  %338 = getelementptr inbounds %struct.Edge*, %struct.Edge** %329, i64 %337
  store %struct.Edge** %338, %struct.Edge*** %7
  %339 = load volatile i8*, i8** %16
  %340 = load i8, i8* %339, align 1
  %341 = trunc i8 %340 to i1
  store i1 %341, i1* %6
  %342 = load i32, i32* @x.208
  %343 = load i32, i32* @y.209
  %344 = sub i32 0, 1
  %345 = add i32 %342, %344
  %346 = sub i32 %342, 1
  %347 = mul i32 %342, %345
  %348 = urem i32 %347, 2
  %349 = icmp eq i32 %348, 0
  %350 = icmp slt i32 %343, 10
  %351 = xor i1 %349, true
  %352 = xor i1 %350, true
  %353 = xor i1 false, true
  %354 = and i1 %351, false
  %355 = and i1 %349, %353
  %356 = and i1 %352, false
  %357 = and i1 %350, %353
  %358 = or i1 %354, %355
  %359 = or i1 %356, %357
  %360 = xor i1 %358, %359
  %361 = or i1 %351, %352
  %362 = xor i1 %361, true
  %363 = or i1 false, %353
  %364 = and i1 %362, %363
  %365 = or i1 %360, %364
  %366 = or i1 %349, %350
  %367 = select i1 %365, i32 -1035623180, i32 -751453410
  store i32 %367, i32* %30
  br label %849

; <label>:368:                                    ; preds = %33
  %369 = load volatile i1, i1* %6
  %370 = select i1 %369, i32 -1101352192, i32 -1921580049
  store i32 %370, i32* %30
  br label %849

; <label>:371:                                    ; preds = %33
  %372 = load i32, i32* @x.208
  %373 = load i32, i32* @y.209
  %374 = sub i32 0, 1
  %375 = add i32 %372, %374
  %376 = sub i32 %372, 1
  %377 = mul i32 %372, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %373, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 true, true
  %384 = and i1 %381, true
  %385 = and i1 %379, %383
  %386 = and i1 %382, true
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 true, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  %397 = select i1 %395, i32 951107015, i32 995283935
  store i32 %397, i32* %30
  br label %849

; <label>:398:                                    ; preds = %33
  %399 = load volatile i64*, i64** %17
  %400 = load i64, i64* %399, align 8
  store i64 %400, i64* %5
  %401 = load i32, i32* @x.208
  %402 = load i32, i32* @y.209
  %403 = add i32 %401, 92662259
  %404 = sub i32 %403, 1
  %405 = sub i32 %404, 92662259
  %406 = sub i32 %401, 1
  %407 = mul i32 %401, %405
  %408 = urem i32 %407, 2
  %409 = icmp eq i32 %408, 0
  %410 = icmp slt i32 %402, 10
  %411 = and i1 %409, %410
  %412 = xor i1 %409, %410
  %413 = or i1 %411, %412
  %414 = or i1 %409, %410
  %415 = select i1 %413, i32 -335502321, i32 995283935
  store i32 %415, i32* %30
  br label %849

; <label>:416:                                    ; preds = %33
  store i32 555907883, i32* %30
  %417 = load volatile i64, i64* %5
  store i64 %417, i64* %32
  br label %849

; <label>:418:                                    ; preds = %33
  store i32 555907883, i32* %30
  store i64 0, i64* %32
  br label %849

; <label>:419:                                    ; preds = %33
  %420 = load i64, i64* %32
  store i64 %420, i64* %4
  %421 = load i32, i32* @x.208
  %422 = load i32, i32* @y.209
  %423 = add i32 %421, 521172199
  %424 = sub i32 %423, 1
  %425 = sub i32 %424, 521172199
  %426 = sub i32 %421, 1
  %427 = mul i32 %421, %425
  %428 = urem i32 %427, 2
  %429 = icmp eq i32 %428, 0
  %430 = icmp slt i32 %422, 10
  %431 = xor i1 %429, true
  %432 = xor i1 %430, true
  %433 = xor i1 true, true
  %434 = and i1 %431, true
  %435 = and i1 %429, %433
  %436 = and i1 %432, true
  %437 = and i1 %430, %433
  %438 = or i1 %434, %435
  %439 = or i1 %436, %437
  %440 = xor i1 %438, %439
  %441 = or i1 %431, %432
  %442 = xor i1 %441, true
  %443 = or i1 true, %433
  %444 = and i1 %442, %443
  %445 = or i1 %440, %444
  %446 = or i1 %429, %430
  %447 = select i1 %445, i32 -996381426, i32 -1053067469
  store i32 %447, i32* %30
  br label %849

; <label>:448:                                    ; preds = %33
  %449 = load volatile %struct.Edge**, %struct.Edge*** %7
  %450 = load volatile i64, i64* %4
  %451 = getelementptr inbounds %struct.Edge*, %struct.Edge** %449, i64 %450
  %452 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %451, %struct.Edge*** %452, align 8
  %453 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %454 = bitcast %"class.std::deque"* %453 to %"class.std::_Deque_base"*
  %455 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %454, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %455, i32 0, i32 2
  %457 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %456, i32 0, i32 3
  %458 = load %struct.Edge**, %struct.Edge*** %457, align 8
  %459 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %460 = bitcast %"class.std::deque"* %459 to %"class.std::_Deque_base"*
  %461 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %460, i32 0, i32 0
  %462 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %461, i32 0, i32 3
  %463 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %462, i32 0, i32 3
  %464 = load %struct.Edge**, %struct.Edge*** %463, align 8
  %465 = getelementptr inbounds %struct.Edge*, %struct.Edge** %464, i64 1
  %466 = load volatile %struct.Edge***, %struct.Edge**** %13
  %467 = load %struct.Edge**, %struct.Edge*** %466, align 8
  %468 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %458, %struct.Edge** %465, %struct.Edge** %467)
  %469 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %470 = bitcast %"class.std::deque"* %469 to %"class.std::_Deque_base"*
  %471 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %472 = bitcast %"class.std::deque"* %471 to %"class.std::_Deque_base"*
  %473 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %472, i32 0, i32 0
  %474 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %473, i32 0, i32 0
  %475 = load %struct.Edge**, %struct.Edge*** %474, align 8
  %476 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %477 = bitcast %"class.std::deque"* %476 to %"class.std::_Deque_base"*
  %478 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %477, i32 0, i32 0
  %479 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %478, i32 0, i32 1
  %480 = load i64, i64* %479, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %470, %struct.Edge** %475, i64 %480) #3
  %481 = load volatile %struct.Edge***, %struct.Edge**** %11
  %482 = load %struct.Edge**, %struct.Edge*** %481, align 8
  %483 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %484 = bitcast %"class.std::deque"* %483 to %"class.std::_Deque_base"*
  %485 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %484, i32 0, i32 0
  %486 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %485, i32 0, i32 0
  store %struct.Edge** %482, %struct.Edge*** %486, align 8
  %487 = load volatile i64*, i64** %12
  %488 = load i64, i64* %487, align 8
  %489 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %490 = bitcast %"class.std::deque"* %489 to %"class.std::_Deque_base"*
  %491 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %490, i32 0, i32 0
  %492 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %491, i32 0, i32 1
  store i64 %488, i64* %492, align 8
  %493 = load i32, i32* @x.208
  %494 = load i32, i32* @y.209
  %495 = sub i32 %493, 1148152398
  %496 = sub i32 %495, 1
  %497 = add i32 %496, 1148152398
  %498 = sub i32 %493, 1
  %499 = mul i32 %493, %497
  %500 = urem i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = icmp slt i32 %494, 10
  %503 = and i1 %501, %502
  %504 = xor i1 %501, %502
  %505 = or i1 %503, %504
  %506 = or i1 %501, %502
  %507 = select i1 %505, i32 1001181801, i32 -1053067469
  store i32 %507, i32* %30
  br label %849

; <label>:508:                                    ; preds = %33
  store i32 -199624502, i32* %30
  br label %849

; <label>:509:                                    ; preds = %33
  %510 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %511 = bitcast %"class.std::deque"* %510 to %"class.std::_Deque_base"*
  %512 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %511, i32 0, i32 0
  %513 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %512, i32 0, i32 2
  %514 = load volatile %struct.Edge***, %struct.Edge**** %13
  %515 = load %struct.Edge**, %struct.Edge*** %514, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %513, %struct.Edge** %515) #3
  %516 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %517 = bitcast %"class.std::deque"* %516 to %"class.std::_Deque_base"*
  %518 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %517, i32 0, i32 0
  %519 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %518, i32 0, i32 3
  %520 = load volatile %struct.Edge***, %struct.Edge**** %13
  %521 = load %struct.Edge**, %struct.Edge*** %520, align 8
  %522 = load volatile i64*, i64** %15
  %523 = load i64, i64* %522, align 8
  %524 = getelementptr inbounds %struct.Edge*, %struct.Edge** %521, i64 %523
  %525 = getelementptr inbounds %struct.Edge*, %struct.Edge** %524, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %519, %struct.Edge** %525) #3
  ret void

; <label>:526:                                    ; preds = %33
  %527 = alloca %"class.std::deque"*, align 8
  %528 = alloca i64, align 8
  %529 = alloca i8, align 1
  %530 = alloca i64, align 8
  %531 = alloca i64, align 8
  %532 = alloca %struct.Edge**, align 8
  %533 = alloca i64, align 8
  %534 = alloca %struct.Edge**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %527, align 8
  store i64 %1, i64* %528, align 8
  %535 = zext i1 %2 to i8
  store i8 %535, i8* %529, align 1
  %536 = load %"class.std::deque"*, %"class.std::deque"** %527, align 8
  %537 = bitcast %"class.std::deque"* %536 to %"class.std::_Deque_base"*
  %538 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %537, i32 0, i32 0
  %539 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %538, i32 0, i32 3
  %540 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %539, i32 0, i32 3
  %541 = load %struct.Edge**, %struct.Edge*** %540, align 8
  %542 = bitcast %"class.std::deque"* %536 to %"class.std::_Deque_base"*
  %543 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %542, i32 0, i32 0
  %544 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %543, i32 0, i32 2
  %545 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %544, i32 0, i32 3
  %546 = load %struct.Edge**, %struct.Edge*** %545, align 8
  %547 = ptrtoint %struct.Edge** %541 to i64
  %548 = ptrtoint %struct.Edge** %546 to i64
  %549 = add i64 %547, -5965724164500175791
  %550 = sub i64 %549, %548
  %551 = sub i64 %550, -5965724164500175791
  %552 = sub i64 %547, %548
  %553 = mul i64 %551, %548
  %554 = shl i64 %547, %548
  %555 = add i64 0, 3671161832458929058
  %556 = sub i64 %555, %547
  %557 = sub i64 %556, 3671161832458929058
  %558 = sub i64 0, %547
  %559 = sub i64 %557, 6287218972096296381
  %560 = add i64 %559, %548
  %561 = add i64 %560, 6287218972096296381
  %562 = add i64 %557, %548
  %563 = sub i64 %547, -4986891941582276975
  %564 = sub i64 %563, %548
  %565 = add i64 %564, -4986891941582276975
  %566 = sub i64 %547, %548
  %567 = mul i64 %565, %548
  %568 = shl i64 %547, %548
  %569 = sub i64 0, %547
  %570 = add i64 0, %569
  %571 = sub i64 0, %547
  %572 = sub i64 0, %548
  %573 = sub i64 %570, %572
  %574 = add i64 %570, %548
  %575 = shl i64 %547, %548
  %576 = shl i64 %547, %548
  %577 = add i64 %547, 6309395750985339736
  %578 = sub i64 %577, %548
  %579 = sub i64 %578, 6309395750985339736
  %580 = sub i64 %547, %548
  %581 = sdiv exact i64 %579, 8
  %582 = sub i64 0, %581
  %583 = add i64 0, %582
  %584 = sub i64 0, %581
  %585 = sub i64 0, %583
  %586 = sub i64 0, 1
  %587 = add i64 %585, %586
  %588 = sub i64 0, %587
  %589 = add i64 %583, 1
  %590 = sub i64 %581, -2299093431296784405
  %591 = add i64 %590, 1
  %592 = add i64 %591, -2299093431296784405
  %593 = add nsw i64 %581, 1
  store i64 %592, i64* %530, align 8
  %594 = load i64, i64* %530, align 8
  %595 = load i64, i64* %528, align 8
  %596 = sub i64 0, -3879638272018207884
  %597 = sub i64 %596, %594
  %598 = add i64 %597, -3879638272018207884
  %599 = sub i64 0, %594
  %600 = sub i64 %598, 3222308672106684715
  %601 = add i64 %600, %595
  %602 = add i64 %601, 3222308672106684715
  %603 = add i64 %598, %595
  %604 = sub i64 0, %595
  %605 = add i64 %594, %604
  %606 = sub i64 %594, %595
  %607 = mul i64 %605, %595
  %608 = sub i64 %594, -7255575127708788209
  %609 = sub i64 %608, %595
  %610 = add i64 %609, -7255575127708788209
  %611 = sub i64 %594, %595
  %612 = mul i64 %610, %595
  %613 = sub i64 0, 1109305813117244880
  %614 = sub i64 %613, %594
  %615 = add i64 %614, 1109305813117244880
  %616 = sub i64 0, %594
  %617 = sub i64 0, %595
  %618 = sub i64 %615, %617
  %619 = add i64 %615, %595
  %620 = add i64 0, -8511295140980152849
  %621 = sub i64 %620, %594
  %622 = sub i64 %621, -8511295140980152849
  %623 = sub i64 0, %594
  %624 = add i64 %622, -2541917861770527213
  %625 = add i64 %624, %595
  %626 = sub i64 %625, -2541917861770527213
  %627 = add i64 %622, %595
  %628 = sub i64 0, 1105221557092605747
  %629 = sub i64 %628, %594
  %630 = add i64 %629, 1105221557092605747
  %631 = sub i64 0, %594
  %632 = sub i64 0, %595
  %633 = sub i64 %630, %632
  %634 = add i64 %630, %595
  %635 = sub i64 0, %595
  %636 = add i64 %594, %635
  %637 = sub i64 %594, %595
  %638 = mul i64 %636, %595
  %639 = sub i64 %594, -7573932164636969943
  %640 = sub i64 %639, %595
  %641 = add i64 %640, -7573932164636969943
  %642 = sub i64 %594, %595
  %643 = mul i64 %641, %595
  %644 = add i64 %594, 5069334289237222619
  %645 = add i64 %644, %595
  %646 = sub i64 %645, 5069334289237222619
  %647 = add i64 %594, %595
  store i64 %646, i64* %531, align 8
  %648 = bitcast %"class.std::deque"* %536 to %"class.std::_Deque_base"*
  %649 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %648, i32 0, i32 0
  %650 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %649, i32 0, i32 1
  %651 = load i64, i64* %650, align 8
  %652 = load i64, i64* %531, align 8
  %653 = sub i64 0, -4666239592395265745
  %654 = sub i64 %653, 2
  %655 = add i64 %654, -4666239592395265745
  %656 = sub i64 0, 2
  %657 = add i64 %655, 9215747469204023054
  %658 = add i64 %657, %652
  %659 = sub i64 %658, 9215747469204023054
  %660 = add i64 %655, %652
  %661 = sub i64 0, %652
  %662 = add i64 2, %661
  %663 = sub i64 2, %652
  %664 = mul i64 %662, %652
  %665 = sub i64 2, 3075339577251233540
  %666 = sub i64 %665, %652
  %667 = add i64 %666, 3075339577251233540
  %668 = sub i64 2, %652
  %669 = mul i64 %667, %652
  %670 = shl i64 2, %652
  %671 = add i64 0, 630744544147922220
  %672 = sub i64 %671, 2
  %673 = sub i64 %672, 630744544147922220
  %674 = sub i64 0, 2
  %675 = sub i64 0, %673
  %676 = sub i64 0, %652
  %677 = add i64 %675, %676
  %678 = sub i64 0, %677
  %679 = add i64 %673, %652
  %680 = mul i64 2, %652
  %681 = icmp ugt i64 %651, %680
  store i32 -2059850006, i32* %30
  br label %849

; <label>:682:                                    ; preds = %33
  store i32 -43609685, i32* %30
  br label %849

; <label>:683:                                    ; preds = %33
  %684 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %685 = bitcast %"class.std::deque"* %684 to %"class.std::_Deque_base"*
  %686 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %685, i32 0, i32 0
  %687 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %686, i32 0, i32 2
  %688 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %687, i32 0, i32 3
  %689 = load %struct.Edge**, %struct.Edge*** %688, align 8
  %690 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %691 = bitcast %"class.std::deque"* %690 to %"class.std::_Deque_base"*
  %692 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %691, i32 0, i32 0
  %693 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %692, i32 0, i32 3
  %694 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %693, i32 0, i32 3
  %695 = load %struct.Edge**, %struct.Edge*** %694, align 8
  %696 = getelementptr inbounds %struct.Edge*, %struct.Edge** %695, i64 1
  %697 = load volatile %struct.Edge***, %struct.Edge**** %13
  %698 = load %struct.Edge**, %struct.Edge*** %697, align 8
  %699 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %689, %struct.Edge** %696, %struct.Edge** %698)
  store i32 1479822207, i32* %30
  br label %849

; <label>:700:                                    ; preds = %33
  %701 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %702 = bitcast %"class.std::deque"* %701 to %"class.std::_Deque_base"*
  %703 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %702, i32 0, i32 0
  %704 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %703, i32 0, i32 1
  %705 = load i64, i64* %704, align 8
  %706 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %707 = bitcast %"class.std::deque"* %706 to %"class.std::_Deque_base"*
  %708 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %707, i32 0, i32 0
  %709 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %708, i32 0, i32 1
  %710 = load volatile i64*, i64** %17
  %711 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %709, i64* dereferenceable(8) %710)
  %712 = load i64, i64* %711, align 8
  %713 = sub i64 0, %705
  %714 = add i64 0, %713
  %715 = sub i64 0, %705
  %716 = add i64 %714, -6882483859392593662
  %717 = add i64 %716, %712
  %718 = sub i64 %717, -6882483859392593662
  %719 = add i64 %714, %712
  %720 = sub i64 0, %712
  %721 = sub i64 %705, %720
  %722 = add i64 %705, %712
  %723 = sub i64 %721, -2954980370847953483
  %724 = sub i64 %723, 2
  %725 = add i64 %724, -2954980370847953483
  %726 = sub i64 %721, 2
  %727 = mul i64 %725, 2
  %728 = shl i64 %721, 2
  %729 = sub i64 0, %721
  %730 = sub i64 0, 2
  %731 = add i64 %729, %730
  %732 = sub i64 0, %731
  %733 = add i64 %721, 2
  %734 = load volatile i64*, i64** %12
  store i64 %732, i64* %734, align 8
  %735 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %736 = bitcast %"class.std::deque"* %735 to %"class.std::_Deque_base"*
  %737 = load volatile i64*, i64** %12
  %738 = load i64, i64* %737, align 8
  %739 = call %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %736, i64 %738)
  %740 = load volatile %struct.Edge***, %struct.Edge**** %11
  store %struct.Edge** %739, %struct.Edge*** %740, align 8
  %741 = load volatile %struct.Edge***, %struct.Edge**** %11
  %742 = load %struct.Edge**, %struct.Edge*** %741, align 8
  %743 = load volatile i64*, i64** %12
  %744 = load i64, i64* %743, align 8
  %745 = load volatile i64*, i64** %14
  %746 = load i64, i64* %745, align 8
  %747 = shl i64 %744, %746
  %748 = add i64 %744, -6042793930610532450
  %749 = sub i64 %748, %746
  %750 = sub i64 %749, -6042793930610532450
  %751 = sub i64 %744, %746
  %752 = mul i64 %750, %746
  %753 = sub i64 0, %744
  %754 = add i64 0, %753
  %755 = sub i64 0, %744
  %756 = sub i64 0, %754
  %757 = sub i64 0, %746
  %758 = add i64 %756, %757
  %759 = sub i64 0, %758
  %760 = add i64 %754, %746
  %761 = add i64 %744, 7200395231394403006
  %762 = sub i64 %761, %746
  %763 = sub i64 %762, 7200395231394403006
  %764 = sub i64 %744, %746
  %765 = mul i64 %763, %746
  %766 = add i64 %744, 6791386329426770888
  %767 = sub i64 %766, %746
  %768 = sub i64 %767, 6791386329426770888
  %769 = sub i64 %744, %746
  %770 = mul i64 %768, %746
  %771 = add i64 %744, 2348565765084900560
  %772 = sub i64 %771, %746
  %773 = sub i64 %772, 2348565765084900560
  %774 = sub i64 %744, %746
  %775 = sub i64 0, 2
  %776 = add i64 %773, %775
  %777 = sub i64 %773, 2
  %778 = mul i64 %776, 2
  %779 = sub i64 %773, -3216473297399827198
  %780 = sub i64 %779, 2
  %781 = add i64 %780, -3216473297399827198
  %782 = sub i64 %773, 2
  %783 = mul i64 %781, 2
  %784 = add i64 %773, 7243007763273959493
  %785 = sub i64 %784, 2
  %786 = sub i64 %785, 7243007763273959493
  %787 = sub i64 %773, 2
  %788 = mul i64 %786, 2
  %789 = shl i64 %773, 2
  %790 = shl i64 %773, 2
  %791 = sub i64 %773, -4400987983777742304
  %792 = sub i64 %791, 2
  %793 = add i64 %792, -4400987983777742304
  %794 = sub i64 %773, 2
  %795 = mul i64 %793, 2
  %796 = udiv i64 %773, 2
  %797 = getelementptr inbounds %struct.Edge*, %struct.Edge** %742, i64 %796
  %798 = load volatile i8*, i8** %16
  %799 = load i8, i8* %798, align 1
  %800 = trunc i8 %799 to i1
  store i32 233268319, i32* %30
  br label %849

; <label>:801:                                    ; preds = %33
  %802 = load volatile i64*, i64** %17
  %803 = load i64, i64* %802, align 8
  store i32 951107015, i32* %30
  br label %849

; <label>:804:                                    ; preds = %33
  %805 = load volatile %struct.Edge**, %struct.Edge*** %7
  %806 = load volatile i64, i64* %4
  %807 = getelementptr inbounds %struct.Edge*, %struct.Edge** %805, i64 %806
  %808 = load volatile %struct.Edge***, %struct.Edge**** %13
  store %struct.Edge** %807, %struct.Edge*** %808, align 8
  %809 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %810 = bitcast %"class.std::deque"* %809 to %"class.std::_Deque_base"*
  %811 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %810, i32 0, i32 0
  %812 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %811, i32 0, i32 2
  %813 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %812, i32 0, i32 3
  %814 = load %struct.Edge**, %struct.Edge*** %813, align 8
  %815 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %816 = bitcast %"class.std::deque"* %815 to %"class.std::_Deque_base"*
  %817 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %816, i32 0, i32 0
  %818 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %817, i32 0, i32 3
  %819 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %818, i32 0, i32 3
  %820 = load %struct.Edge**, %struct.Edge*** %819, align 8
  %821 = getelementptr inbounds %struct.Edge*, %struct.Edge** %820, i64 1
  %822 = load volatile %struct.Edge***, %struct.Edge**** %13
  %823 = load %struct.Edge**, %struct.Edge*** %822, align 8
  %824 = call %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge** %814, %struct.Edge** %821, %struct.Edge** %823)
  %825 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %826 = bitcast %"class.std::deque"* %825 to %"class.std::_Deque_base"*
  %827 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %828 = bitcast %"class.std::deque"* %827 to %"class.std::_Deque_base"*
  %829 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %828, i32 0, i32 0
  %830 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %829, i32 0, i32 0
  %831 = load %struct.Edge**, %struct.Edge*** %830, align 8
  %832 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %833 = bitcast %"class.std::deque"* %832 to %"class.std::_Deque_base"*
  %834 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %833, i32 0, i32 0
  %835 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %834, i32 0, i32 1
  %836 = load i64, i64* %835, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %826, %struct.Edge** %831, i64 %836) #3
  %837 = load volatile %struct.Edge***, %struct.Edge**** %11
  %838 = load %struct.Edge**, %struct.Edge*** %837, align 8
  %839 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %840 = bitcast %"class.std::deque"* %839 to %"class.std::_Deque_base"*
  %841 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %840, i32 0, i32 0
  %842 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %841, i32 0, i32 0
  store %struct.Edge** %838, %struct.Edge*** %842, align 8
  %843 = load volatile i64*, i64** %12
  %844 = load i64, i64* %843, align 8
  %845 = load volatile %"class.std::deque"*, %"class.std::deque"** %10
  %846 = bitcast %"class.std::deque"* %845 to %"class.std::_Deque_base"*
  %847 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %846, i32 0, i32 0
  %848 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %847, i32 0, i32 1
  store i64 %844, i64* %848, align 8
  store i32 -996381426, i32* %30
  br label %849

; <label>:849:                                    ; preds = %804, %801, %700, %683, %682, %526, %508, %448, %419, %418, %416, %398, %371, %368, %299, %271, %270, %250, %249, %217, %201, %186, %185, %170, %154, %151, %128, %125, %56, %36, %35
  br label %33
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt4copyIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.210
  %8 = load i32, i32* @y.211
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1354118366, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1354118366, label %20
    i32 1109182970, label %40
    i32 1947617601, label %77
    i32 216664586, label %79
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1109182970, i32 216664586
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %struct.Edge**, align 8
  %42 = alloca %struct.Edge**, align 8
  %43 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %41, align 8
  store %struct.Edge** %1, %struct.Edge*** %42, align 8
  store %struct.Edge** %2, %struct.Edge*** %43, align 8
  %44 = load %struct.Edge**, %struct.Edge*** %41, align 8
  %45 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %44)
  %46 = load %struct.Edge**, %struct.Edge*** %42, align 8
  %47 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %46)
  %48 = load %struct.Edge**, %struct.Edge*** %43, align 8
  %49 = call %struct.Edge** @_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %45, %struct.Edge** %47, %struct.Edge** %48)
  store %struct.Edge** %49, %struct.Edge*** %4
  %50 = load i32, i32* @x.210
  %51 = load i32, i32* @y.211
  %52 = add i32 %50, 552334489
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 552334489
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1947617601, i32 216664586
  store i32 %76, i32* %16
  br label %89

; <label>:77:                                     ; preds = %17
  %78 = load volatile %struct.Edge**, %struct.Edge*** %4
  ret %struct.Edge** %78

; <label>:79:                                     ; preds = %17
  %80 = alloca %struct.Edge**, align 8
  %81 = alloca %struct.Edge**, align 8
  %82 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %80, align 8
  store %struct.Edge** %1, %struct.Edge*** %81, align 8
  store %struct.Edge** %2, %struct.Edge*** %82, align 8
  %83 = load %struct.Edge**, %struct.Edge*** %80, align 8
  %84 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %83)
  %85 = load %struct.Edge**, %struct.Edge*** %81, align 8
  %86 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %85)
  %87 = load %struct.Edge**, %struct.Edge*** %82, align 8
  %88 = call %struct.Edge** @_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %84, %struct.Edge** %86, %struct.Edge** %87)
  store i32 1109182970, i32* %16
  br label %89

; <label>:89:                                     ; preds = %79, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt13copy_backwardIPP4EdgeS2_ET0_T_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %11)
  ret %struct.Edge** %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 914608520, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %74
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 914608520, label %17
    i32 -1739340782, label %22
    i32 -1134622359, label %24
    i32 -2117739046, label %26
    i32 128103603, label %41
    i32 -3760448, label %70
    i32 -1422007587, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %74

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 -1739340782, i32 -1134622359
  store i32 %21, i32* %13
  br label %74

; <label>:22:                                     ; preds = %14
  %23 = load i64*, i64** %8, align 8
  store i64* %23, i64** %6, align 8
  store i32 -2117739046, i32* %13
  br label %74

; <label>:24:                                     ; preds = %14
  %25 = load i64*, i64** %7, align 8
  store i64* %25, i64** %6, align 8
  store i32 -2117739046, i32* %13
  br label %74

; <label>:26:                                     ; preds = %14
  %27 = load i32, i32* @x.214
  %28 = load i32, i32* @y.215
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 128103603, i32 -1422007587
  store i32 %40, i32* %13
  br label %74

; <label>:41:                                     ; preds = %14
  %42 = load i64*, i64** %6, align 8
  store i64* %42, i64** %3
  %43 = load i32, i32* @x.214
  %44 = load i32, i32* @y.215
  %45 = add i32 %43, 387113248
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 387113248
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -3760448, i32 -1422007587
  store i32 %69, i32* %13
  br label %74

; <label>:70:                                     ; preds = %14
  %71 = load volatile i64*, i64** %3
  ret i64* %71

; <label>:72:                                     ; preds = %14
  %73 = load i64*, i64** %6, align 8
  store i32 128103603, i32* %13
  br label %74

; <label>:74:                                     ; preds = %72, %41, %26, %24, %22, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.216
  %4 = load i32, i32* @y.217
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %104

; <label>:16:                                     ; preds = %2, %104
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.14", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %19, %"class.std::_Deque_base"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.216
  %25 = load i32, i32* @y.217
  %26 = sub i32 %24, -1720861194
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -1720861194
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %104

; <label>:50:                                     ; preds = %16
  %51 = invoke %struct.Edge** @_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m(%"class.std::allocator.14"* dereferenceable(1) %19, i64 %23)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %50
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %19) #3
  ret %struct.Edge** %51

; <label>:53:                                     ; preds = %50
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %20, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %21, align 4
  call void @_ZNSaIP4EdgeED2Ev(%"class.std::allocator.14"* %19) #3
  br label %57

; <label>:57:                                     ; preds = %53
  %58 = load i32, i32* @x.216
  %59 = load i32, i32* @y.217
  %60 = add i32 %58, 1929268018
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, 1929268018
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %112

; <label>:72:                                     ; preds = %57, %112
  %73 = load i8*, i8** %20, align 8
  %74 = load i32, i32* %21, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  %77 = load i32, i32* @x.216
  %78 = load i32, i32* @y.217
  %79 = sub i32 %77, 206046307
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 206046307
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %112

; <label>:103:                                    ; preds = %72
  resume { i8*, i32 } %76

; <label>:104:                                    ; preds = %16, %2
  %105 = alloca %"class.std::_Deque_base"*, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::allocator.14", align 1
  %108 = alloca i8*
  %109 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %105, align 8
  store i64 %1, i64* %106, align 8
  %110 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %105, align 8
  call void @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %107, %"class.std::_Deque_base"* %110) #3
  %111 = load i64, i64* %106, align 8
  br label %16

; <label>:112:                                    ; preds = %72, %57
  %113 = load i8*, i8** %20, align 8
  %114 = load i32, i32* %21, align 4
  %115 = insertvalue { i8*, i32 } undef, i8* %113, 0
  %116 = insertvalue { i8*, i32 } %115, i32 %114, 1
  br label %72
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt14__copy_move_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %11)
  %13 = call %struct.Edge** @_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %12)
  ret %struct.Edge** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZSt12__miter_baseIPP4EdgeENSt11_Miter_baseIT_E13iterator_typeES4_(%struct.Edge**) #4 comdat {
  %2 = alloca %struct.Edge**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.220
  %6 = load i32, i32* @y.221
  %7 = sub i32 %5, -1691415795
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1691415795
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1534991231, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1534991231, label %19
    i32 -1491505692, label %39
    i32 842176910, label %58
    i32 1760384667, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1491505692, i32 1760384667
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %40, align 8
  %41 = load %struct.Edge**, %struct.Edge*** %40, align 8
  %42 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %41)
  store %struct.Edge** %42, %struct.Edge*** %2
  %43 = load i32, i32* @x.220
  %44 = load i32, i32* @y.221
  %45 = add i32 %43, 155896630
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 155896630
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 842176910, i32 1760384667
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %struct.Edge**, %struct.Edge*** %2
  ret %struct.Edge** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %61, align 8
  %62 = load %struct.Edge**, %struct.Edge*** %61, align 8
  %63 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %62)
  store i32 -1491505692, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt13__copy_move_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.222
  %8 = load i32, i32* @y.223
  %9 = sub i32 %7, 670994110
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 670994110
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1171145311, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %64
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1171145311, label %21
    i32 1302104347, label %29
    i32 -1327273579, label %53
    i32 -1636302292, label %55
  ]

; <label>:20:                                     ; preds = %18
  br label %64

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 1302104347, i32 -1636302292
  store i32 %28, i32* %17
  br label %64

; <label>:29:                                     ; preds = %18
  %30 = alloca %struct.Edge**, align 8
  %31 = alloca %struct.Edge**, align 8
  %32 = alloca %struct.Edge**, align 8
  %33 = alloca i8, align 1
  store %struct.Edge** %0, %struct.Edge*** %30, align 8
  store %struct.Edge** %1, %struct.Edge*** %31, align 8
  store %struct.Edge** %2, %struct.Edge*** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load %struct.Edge**, %struct.Edge*** %30, align 8
  %35 = load %struct.Edge**, %struct.Edge*** %31, align 8
  %36 = load %struct.Edge**, %struct.Edge*** %32, align 8
  %37 = call %struct.Edge** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge** %34, %struct.Edge** %35, %struct.Edge** %36)
  store %struct.Edge** %37, %struct.Edge*** %4
  %38 = load i32, i32* @x.222
  %39 = load i32, i32* @y.223
  %40 = add i32 %38, 1562991504
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1562991504
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1327273579, i32 -1636302292
  store i32 %52, i32* %17
  br label %64

; <label>:53:                                     ; preds = %18
  %54 = load volatile %struct.Edge**, %struct.Edge*** %4
  ret %struct.Edge** %54

; <label>:55:                                     ; preds = %18
  %56 = alloca %struct.Edge**, align 8
  %57 = alloca %struct.Edge**, align 8
  %58 = alloca %struct.Edge**, align 8
  %59 = alloca i8, align 1
  store %struct.Edge** %0, %struct.Edge*** %56, align 8
  store %struct.Edge** %1, %struct.Edge*** %57, align 8
  store %struct.Edge** %2, %struct.Edge*** %58, align 8
  store i8 1, i8* %59, align 1
  %60 = load %struct.Edge**, %struct.Edge*** %56, align 8
  %61 = load %struct.Edge**, %struct.Edge*** %57, align 8
  %62 = load %struct.Edge**, %struct.Edge*** %58, align 8
  %63 = call %struct.Edge** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge** %60, %struct.Edge** %61, %struct.Edge** %62)
  store i32 1302104347, i32* %17
  br label %64

; <label>:64:                                     ; preds = %55, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge**) #0 comdat {
  %2 = alloca %struct.Edge**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.224
  %6 = load i32, i32* @y.225
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -28684354, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -28684354, label %18
    i32 1527934956, label %26
    i32 -321271660, label %45
    i32 -1301167826, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1527934956, i32 -1301167826
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %27, align 8
  %28 = load %struct.Edge**, %struct.Edge*** %27, align 8
  %29 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %28)
  store %struct.Edge** %29, %struct.Edge*** %2
  %30 = load i32, i32* @x.224
  %31 = load i32, i32* @y.225
  %32 = sub i32 %30, 1220186746
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 1220186746
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -321271660, i32 -1301167826
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %struct.Edge**, %struct.Edge*** %2
  ret %struct.Edge** %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %48, align 8
  %49 = load %struct.Edge**, %struct.Edge*** %48, align 8
  %50 = call %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge** %49)
  store i32 1527934956, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #4 comdat align 2 {
  %4 = alloca %struct.Edge**
  %5 = alloca i64
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca %struct.Edge**, align 8
  %9 = alloca i64, align 8
  store %struct.Edge** %0, %struct.Edge*** %6, align 8
  store %struct.Edge** %1, %struct.Edge*** %7, align 8
  store %struct.Edge** %2, %struct.Edge*** %8, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = ptrtoint %struct.Edge** %10 to i64
  %13 = ptrtoint %struct.Edge** %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 516340044, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %86
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 516340044, label %23
    i32 -1449757207, label %27
    i32 -68990662, label %34
    i32 -2106293480, label %61
    i32 -4168061, label %80
    i32 -1845653834, label %82
  ]

; <label>:22:                                     ; preds = %20
  br label %86

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1449757207, i32 -68990662
  store i32 %26, i32* %19
  br label %86

; <label>:27:                                     ; preds = %20
  %28 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %29 = bitcast %struct.Edge** %28 to i8*
  %30 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %31 = bitcast %struct.Edge** %30 to i8*
  %32 = load i64, i64* %9, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 -68990662, i32* %19
  br label %86

; <label>:34:                                     ; preds = %20
  %35 = load i32, i32* @x.226
  %36 = load i32, i32* @y.227
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -2106293480, i32 -1845653834
  store i32 %60, i32* %19
  br label %86

; <label>:61:                                     ; preds = %20
  %62 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %63 = load i64, i64* %9, align 8
  %64 = getelementptr inbounds %struct.Edge*, %struct.Edge** %62, i64 %63
  store %struct.Edge** %64, %struct.Edge*** %4
  %65 = load i32, i32* @x.226
  %66 = load i32, i32* @y.227
  %67 = add i32 %65, -156346091
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -156346091
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  %79 = select i1 %77, i32 -4168061, i32 -1845653834
  store i32 %79, i32* %19
  br label %86

; <label>:80:                                     ; preds = %20
  %81 = load volatile %struct.Edge**, %struct.Edge*** %4
  ret %struct.Edge** %81

; <label>:82:                                     ; preds = %20
  %83 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %84 = load i64, i64* %9, align 8
  %85 = getelementptr inbounds %struct.Edge*, %struct.Edge** %83, i64 %84
  store i32 -2106293480, i32* %19
  br label %86

; <label>:86:                                     ; preds = %82, %61, %34, %27, %23, %22
  br label %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt10_Iter_baseIPP4EdgeLb0EE7_S_baseES2_(%struct.Edge**) #4 comdat align 2 {
  %2 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %2, align 8
  %3 = load %struct.Edge**, %struct.Edge*** %2, align 8
  ret %struct.Edge** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt23__copy_move_backward_a2ILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %7 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %8 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %7)
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %9)
  %11 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %12 = call %struct.Edge** @_ZSt12__niter_baseIPP4EdgeENSt11_Niter_baseIT_E13iterator_typeES4_(%struct.Edge** %11)
  %13 = call %struct.Edge** @_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge** %8, %struct.Edge** %10, %struct.Edge** %12)
  ret %struct.Edge** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZSt22__copy_move_backward_aILb0EPP4EdgeS2_ET1_T0_S4_S3_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #0 comdat {
  %4 = alloca %struct.Edge**, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca i8, align 1
  store %struct.Edge** %0, %struct.Edge*** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %11 = call %struct.Edge** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge** %8, %struct.Edge** %9, %struct.Edge** %10)
  ret %struct.Edge** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIP4EdgeEEPT_PKS5_S8_S6_(%struct.Edge**, %struct.Edge**, %struct.Edge**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca i64, align 8
  store %struct.Edge** %0, %struct.Edge*** %5, align 8
  store %struct.Edge** %1, %struct.Edge*** %6, align 8
  store %struct.Edge** %2, %struct.Edge*** %7, align 8
  %9 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %10 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %11 = ptrtoint %struct.Edge** %9 to i64
  %12 = ptrtoint %struct.Edge** %10 to i64
  %13 = add i64 %11, 2179646288849422400
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 2179646288849422400
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1142640997, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %48
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1142640997, label %23
    i32 613310973, label %27
    i32 -494592941, label %40
  ]

; <label>:22:                                     ; preds = %20
  br label %48

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 613310973, i32 -494592941
  store i32 %26, i32* %19
  br label %48

; <label>:27:                                     ; preds = %20
  %28 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = add i64 0, -1524466652467554318
  %31 = sub i64 %30, %29
  %32 = sub i64 %31, -1524466652467554318
  %33 = sub i64 0, %29
  %34 = getelementptr inbounds %struct.Edge*, %struct.Edge** %28, i64 %32
  %35 = bitcast %struct.Edge** %34 to i8*
  %36 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %37 = bitcast %struct.Edge** %36 to i8*
  %38 = load i64, i64* %8, align 8
  %39 = mul i64 8, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %35, i8* %37, i64 %39, i32 8, i1 false)
  store i32 -494592941, i32* %19
  br label %48

; <label>:40:                                     ; preds = %20
  %41 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = sub i64 0, -4401090274809370972
  %44 = sub i64 %43, %42
  %45 = add i64 %44, -4401090274809370972
  %46 = sub i64 0, %42
  %47 = getelementptr inbounds %struct.Edge*, %struct.Edge** %41, i64 %45
  ret %struct.Edge** %47

; <label>:48:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZNSt16allocator_traitsISaIP4EdgeEE8allocateERS2_m(%"class.std::allocator.14"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %struct.Edge**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.236
  %7 = load i32, i32* @y.237
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1610122924, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1610122924, label %19
    i32 -1824760801, label %39
    i32 1394602685, label %72
    i32 538057878, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1824760801, i32 538057878
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.14"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %40, align 8
  %43 = bitcast %"class.std::allocator.14"* %42 to %"class.__gnu_cxx::new_allocator.15"*
  %44 = load i64, i64* %41, align 8
  %45 = call %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %43, i64 %44, i8* null)
  store %struct.Edge** %45, %struct.Edge*** %3
  %46 = load i32, i32* @x.236
  %47 = load i32, i32* @y.237
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1394602685, i32 538057878
  store i32 %71, i32* %15
  br label %81

; <label>:72:                                     ; preds = %16
  %73 = load volatile %struct.Edge**, %struct.Edge*** %3
  ret %struct.Edge** %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::allocator.14"*, align 8
  %76 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %75, align 8
  store i64 %1, i64* %76, align 8
  %77 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %75, align 8
  %78 = bitcast %"class.std::allocator.14"* %77 to %"class.__gnu_cxx::new_allocator.15"*
  %79 = load i64, i64* %76, align 8
  %80 = call %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %78, i64 %79, i8* null)
  store i32 -1824760801, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge** @_ZN9__gnu_cxx13new_allocatorIP4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %struct.Edge**
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -420705342, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %109
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -420705342, label %17
    i32 460178719, label %22
    i32 1003482556, label %23
    i32 513264577, label %39
    i32 444427168, label %70
    i32 -488828369, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %109

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 460178719, i32 1003482556
  store i32 %21, i32* %13
  br label %109

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.238
  %25 = load i32, i32* @y.239
  %26 = sub i32 %24, 1513006953
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1513006953
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 513264577, i32 -488828369
  store i32 %38, i32* %13
  br label %109

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 8
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %struct.Edge**
  store %struct.Edge** %43, %struct.Edge*** %4
  %44 = load i32, i32* @x.238
  %45 = load i32, i32* @y.239
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 444427168, i32 -488828369
  store i32 %69, i32* %13
  br label %109

; <label>:70:                                     ; preds = %14
  %71 = load volatile %struct.Edge**, %struct.Edge*** %4
  ret %struct.Edge** %71

; <label>:72:                                     ; preds = %14
  %73 = load i64, i64* %8, align 8
  %74 = add i64 0, 8163074786622201023
  %75 = sub i64 %74, %73
  %76 = sub i64 %75, 8163074786622201023
  %77 = sub i64 0, %73
  %78 = add i64 %76, -4722347933807438485
  %79 = add i64 %78, 8
  %80 = sub i64 %79, -4722347933807438485
  %81 = add i64 %76, 8
  %82 = sub i64 0, 8
  %83 = add i64 %73, %82
  %84 = sub i64 %73, 8
  %85 = mul i64 %83, 8
  %86 = add i64 %73, 4493786626869157254
  %87 = sub i64 %86, 8
  %88 = sub i64 %87, 4493786626869157254
  %89 = sub i64 %73, 8
  %90 = mul i64 %88, 8
  %91 = sub i64 0, 3963534531309837925
  %92 = sub i64 %91, %73
  %93 = add i64 %92, 3963534531309837925
  %94 = sub i64 0, %73
  %95 = sub i64 0, 8
  %96 = sub i64 %93, %95
  %97 = add i64 %93, 8
  %98 = sub i64 0, %73
  %99 = add i64 0, %98
  %100 = sub i64 0, %73
  %101 = sub i64 0, %99
  %102 = sub i64 0, 8
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, 8
  %106 = mul i64 %73, 8
  %107 = call i8* @_Znwm(i64 %106)
  %108 = bitcast i8* %107 to %struct.Edge**
  store i32 513264577, i32* %13
  br label %109

; <label>:109:                                    ; preds = %72, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIP4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.240
  %5 = load i32, i32* @y.241
  %6 = add i32 %4, -222779423
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -222779423
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 517303397, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %59
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 517303397, label %18
    i32 -1902997924, label %38
    i32 -1698220965, label %55
    i32 -921323430, label %56
  ]

; <label>:17:                                     ; preds = %15
  br label %59

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1902997924, i32 -921323430
  store i32 %37, i32* %14
  br label %59

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %39, align 8
  %41 = load i32, i32* @x.240
  %42 = load i32, i32* @y.241
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1698220965, i32 -921323430
  store i32 %54, i32* %14
  br label %59

; <label>:55:                                     ; preds = %15
  ret i64 2305843009213693951

; <label>:56:                                     ; preds = %15
  %57 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %57, align 8
  store i32 -1902997924, i32* %14
  br label %59

; <label>:59:                                     ; preds = %56, %38, %18, %17
  br label %15
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZNSt16allocator_traitsISaI4EdgeEE8allocateERS1_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %struct.Edge* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %struct.Edge* @_ZN9__gnu_cxx13new_allocatorI4EdgeE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -406041004, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -406041004, label %16
    i32 -1822591844, label %21
    i32 -1283836478, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1822591844, i32 -1283836478
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %struct.Edge*
  ret %struct.Edge* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorI4EdgeE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiimEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), %struct.Edge*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  %12 = bitcast %"class.std::allocator.5"* %11 to %"class.__gnu_cxx::new_allocator.6"*
  %13 = load %struct.Edge*, %struct.Edge** %7, align 8
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %14) #3
  %16 = load i32*, i32** %9, align 8
  %17 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiimEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %12, %struct.Edge* %13, i32* dereferenceable(4) %15, i32* dereferenceable(4) %17, i64* dereferenceable(8) %19)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EE16_M_push_back_auxIJRiimEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store i64* %3, i64** %8, align 8
  %11 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  call void @_ZNSt5dequeI4EdgeSaIS0_EE22_M_reserve_map_at_backEm(%"class.std::deque"* %11, i64 1)
  %12 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %13 = call %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %12)
  %14 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %15, i32 0, i32 3
  %17 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %16, i32 0, i32 3
  %18 = load %struct.Edge**, %struct.Edge*** %17, align 8
  %19 = getelementptr inbounds %struct.Edge*, %struct.Edge** %18, i64 1
  store %struct.Edge* %13, %struct.Edge** %19, align 8
  %20 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %21 to %"class.std::allocator.5"*
  %23 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %24 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %24, i32 0, i32 3
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %25, i32 0, i32 0
  %27 = load %struct.Edge*, %struct.Edge** %26, align 8
  %28 = load i32*, i32** %6, align 8
  %29 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %28) #3
  %30 = load i32*, i32** %7, align 8
  %31 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %30) #3
  %32 = load i64*, i64** %8, align 8
  %33 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %32) #3
  invoke void @_ZNSt16allocator_traitsISaI4EdgeEE9constructIS0_JRiimEEEvRS1_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %22, %struct.Edge* %27, i32* dereferenceable(4) %29, i32* dereferenceable(4) %31, i64* dereferenceable(8) %33)
          to label %34 unwind label %94

; <label>:34:                                     ; preds = %4
  %35 = load i32, i32* @x.252
  %36 = load i32, i32* @y.253
  %37 = add i32 %35, 2125920487
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 2125920487
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %195

; <label>:61:                                     ; preds = %34, %195
  %62 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %63, i32 0, i32 3
  %65 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %66, i32 0, i32 3
  %68 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %67, i32 0, i32 3
  %69 = load %struct.Edge**, %struct.Edge*** %68, align 8
  %70 = getelementptr inbounds %struct.Edge*, %struct.Edge** %69, i64 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %64, %struct.Edge** %70) #3
  %71 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %72 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %72, i32 0, i32 3
  %74 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %73, i32 0, i32 1
  %75 = load %struct.Edge*, %struct.Edge** %74, align 8
  %76 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %77, i32 0, i32 3
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 0
  store %struct.Edge* %75, %struct.Edge** %79, align 8
  %80 = load i32, i32* @x.252
  %81 = load i32, i32* @y.253
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %195

; <label>:93:                                     ; preds = %61
  br label %155

; <label>:94:                                     ; preds = %4
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %9, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %10, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i8*, i8** %9, align 8
  %100 = call i8* @__cxa_begin_catch(i8* %99) #3
  %101 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %102 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %103 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %103, i32 0, i32 3
  %105 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %104, i32 0, i32 3
  %106 = load %struct.Edge**, %struct.Edge*** %105, align 8
  %107 = getelementptr inbounds %struct.Edge*, %struct.Edge** %106, i64 1
  %108 = load %struct.Edge*, %struct.Edge** %107, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE18_M_deallocate_nodeEPS0_(%"class.std::_Deque_base"* %101, %struct.Edge* %108) #3
  invoke void @__cxa_rethrow() #12
          to label %194 unwind label %109

; <label>:109:                                    ; preds = %98
  %110 = landingpad { i8*, i32 }
          cleanup
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %9, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %10, align 4
  invoke void @__cxa_end_catch()
          to label %113 unwind label %191

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @x.252
  %115 = load i32, i32* @y.253
  %116 = sub i32 %114, -1121852182
  %117 = sub i32 %116, 1
  %118 = add i32 %117, -1121852182
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 true, true
  %127 = and i1 %124, true
  %128 = and i1 %122, %126
  %129 = and i1 %125, true
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 true, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %214

; <label>:140:                                    ; preds = %113, %214
  %141 = load i32, i32* @x.252
  %142 = load i32, i32* @y.253
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %214

; <label>:154:                                    ; preds = %140
  br label %156

; <label>:155:                                    ; preds = %93
  ret void

; <label>:156:                                    ; preds = %154
  %157 = load i32, i32* @x.252
  %158 = load i32, i32* @y.253
  %159 = add i32 %157, -94276452
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -94276452
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %215

; <label>:171:                                    ; preds = %156, %215
  %172 = load i8*, i8** %9, align 8
  %173 = load i32, i32* %10, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  %176 = load i32, i32* @x.252
  %177 = load i32, i32* @y.253
  %178 = add i32 %176, 272917070
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, 272917070
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  br i1 %188, label %190, label %215

; <label>:190:                                    ; preds = %171
  resume { i8*, i32 } %175

; <label>:191:                                    ; preds = %109
  %192 = landingpad { i8*, i32 }
          catch i8* null
  %193 = extractvalue { i8*, i32 } %192, 0
  call void @__clang_call_terminate(i8* %193) #11
  unreachable

; <label>:194:                                    ; preds = %98
  unreachable

; <label>:195:                                    ; preds = %61, %34
  %196 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %197 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %197, i32 0, i32 3
  %199 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %200 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %200, i32 0, i32 3
  %202 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %201, i32 0, i32 3
  %203 = load %struct.Edge**, %struct.Edge*** %202, align 8
  %204 = getelementptr inbounds %struct.Edge*, %struct.Edge** %203, i64 1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %198, %struct.Edge** %204) #3
  %205 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %206 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %205, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %206, i32 0, i32 3
  %208 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %207, i32 0, i32 1
  %209 = load %struct.Edge*, %struct.Edge** %208, align 8
  %210 = bitcast %"class.std::deque"* %11 to %"class.std::_Deque_base"*
  %211 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %211, i32 0, i32 3
  %213 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %212, i32 0, i32 0
  store %struct.Edge* %209, %struct.Edge** %213, align 8
  br label %61

; <label>:214:                                    ; preds = %140, %113
  br label %140

; <label>:215:                                    ; preds = %171, %156
  %216 = load i8*, i8** %9, align 8
  %217 = load i32, i32* %10, align 4
  %218 = insertvalue { i8*, i32 } undef, i8* %216, 0
  %219 = insertvalue { i8*, i32 } %218, i32 %217, 1
  br label %171
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeE9constructIS1_JRiimEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, %struct.Edge*, i32* dereferenceable(4), i32* dereferenceable(4), i64* dereferenceable(8)) #0 comdat align 2 {
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca %struct.Edge*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store %struct.Edge* %1, %struct.Edge** %7, align 8
  store i32* %2, i32** %8, align 8
  store i32* %3, i32** %9, align 8
  store i64* %4, i64** %10, align 8
  %11 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %12 = load %struct.Edge*, %struct.Edge** %7, align 8
  %13 = bitcast %struct.Edge* %12 to i8*
  %14 = bitcast i8* %13 to %struct.Edge*
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %15) #3
  %17 = load i32, i32* %16, align 4
  %18 = load i32*, i32** %9, align 8
  %19 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %18) #3
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = load i64*, i64** %10, align 8
  %23 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %22) #3
  %24 = load i64, i64* %23, align 8
  %25 = trunc i64 %24 to i32
  call void @_ZN4EdgeC2Eixi(%struct.Edge* %14, i32 %17, i64 %21, i32 %25)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.256
  %6 = load i32, i32* @y.257
  %7 = add i32 %5, 901878826
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 901878826
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1361089745, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1361089745, label %19
    i32 -2015495297, label %39
    i32 2143020153, label %73
    i32 1224098865, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2015495297, i32 1224098865
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %42, i32 0, i32 0
  %44 = load i32**, i32*** %41, align 8
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %43, align 8
  %46 = load i32, i32* @x.256
  %47 = load i32, i32* @y.257
  %48 = add i32 %46, 905229583
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 905229583
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 2143020153, i32 1224098865
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %76 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  store i32** %1, i32*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %77, i32 0, i32 0
  %79 = load i32**, i32*** %76, align 8
  %80 = load i32*, i32** %79, align 8
  store i32* %80, i32** %78, align 8
  store i32 -2015495297, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.258
  %6 = load i32, i32* @y.259
  %7 = add i32 %5, -1208579724
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1208579724
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -207834634, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -207834634, label %19
    i32 -1748691805, label %39
    i32 1844982035, label %69
    i32 1047205147, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1748691805, i32 1047205147
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %41, i32 0, i32 0
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.258
  %44 = load i32, i32* @y.259
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1844982035, i32 1047205147
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32**, i32*** %2
  ret i32** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %73 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %73, i32 0, i32 0
  store i32 -1748691805, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2ERKS0_(%"class.std::_Deque_base.9"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE19_M_range_initializeIPKiEEvT_S5_St20forward_iterator_tag(%"class.std::deque.8"*, i32*, i32*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::forward_iterator_tag", align 1
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"struct.std::_Deque_iterator.10", align 8
  %14 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  %15 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  %16 = load i32*, i32** %6, align 8
  %17 = load i32*, i32** %7, align 8
  %18 = call i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32* %16, i32* %17)
  store i64 %18, i64* %8, align 8
  %19 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %20 = load i64, i64* %8, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"* %19, i64 %20)
  %21 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %22 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 2
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  store i32** %25, i32*** %9, align 8
  br label %26

; <label>:26:                                     ; preds = %102, %3
  %27 = load i32**, i32*** %9, align 8
  %28 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %29 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 3
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %30, i32 0, i32 3
  %32 = load i32**, i32*** %31, align 8
  %33 = icmp ult i32** %27, %32
  br i1 %33, label %34, label %212

; <label>:34:                                     ; preds = %26
  %35 = load i32*, i32** %6, align 8
  store i32* %35, i32** %10, align 8
  %36 = call i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #3
  invoke void @_ZSt7advanceIPKimEvRT_T0_(i32** dereferenceable(8) %10, i64 %36)
          to label %37 unwind label %103

; <label>:37:                                     ; preds = %34
  %38 = load i32*, i32** %6, align 8
  %39 = load i32*, i32** %10, align 8
  %40 = load i32**, i32*** %9, align 8
  %41 = load i32*, i32** %40, align 8
  %42 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %43 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %42) #3
  %44 = invoke i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %38, i32* %39, i32* %41, %"class.std::allocator.2"* dereferenceable(1) %43)
          to label %45 unwind label %103

; <label>:45:                                     ; preds = %37
  %46 = load i32*, i32** %10, align 8
  store i32* %46, i32** %6, align 8
  br label %47

; <label>:47:                                     ; preds = %45
  %48 = load i32, i32* @x.262
  %49 = load i32, i32* @y.263
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %478

; <label>:73:                                     ; preds = %47, %478
  %74 = load i32**, i32*** %9, align 8
  %75 = getelementptr inbounds i32*, i32** %74, i32 1
  store i32** %75, i32*** %9, align 8
  %76 = load i32, i32* @x.262
  %77 = load i32, i32* @y.263
  %78 = add i32 %76, 1743424817
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 1743424817
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %478

; <label>:102:                                    ; preds = %73
  br label %26

; <label>:103:                                    ; preds = %251, %37, %34
  %104 = load i32, i32* @x.262
  %105 = load i32, i32* @y.263
  %106 = sub i32 %104, 798202824
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 798202824
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  br i1 %128, label %130, label %481

; <label>:130:                                    ; preds = %103, %481
  %131 = landingpad { i8*, i32 }
          catch i8* null
  %132 = extractvalue { i8*, i32 } %131, 0
  store i8* %132, i8** %11, align 8
  %133 = extractvalue { i8*, i32 } %131, 1
  store i32 %133, i32* %12, align 4
  %134 = load i32, i32* @x.262
  %135 = load i32, i32* @y.263
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %481

; <label>:159:                                    ; preds = %130
  br label %160

; <label>:160:                                    ; preds = %159
  %161 = load i8*, i8** %11, align 8
  %162 = call i8* @__cxa_begin_catch(i8* %161) #3
  %163 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %164 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %163, i32 0, i32 0
  %165 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %164, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %13, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %165) #3
  %166 = load i32**, i32*** %9, align 8
  %167 = load i32*, i32** %166, align 8
  %168 = load i32**, i32*** %9, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator.10"* %14, i32* %167, i32** %168) #3
  %169 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %170 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %169) #3
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator.10"* %13, %"struct.std::_Deque_iterator.10"* %14, %"class.std::allocator.2"* dereferenceable(1) %170)
          to label %171 unwind label %296

; <label>:171:                                    ; preds = %160
  %172 = load i32, i32* @x.262
  %173 = load i32, i32* @y.263
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %485

; <label>:185:                                    ; preds = %171, %485
  %186 = load i32, i32* @x.262
  %187 = load i32, i32* @y.263
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = xor i1 %193, true
  %196 = xor i1 %194, true
  %197 = xor i1 false, true
  %198 = and i1 %195, false
  %199 = and i1 %193, %197
  %200 = and i1 %196, false
  %201 = and i1 %194, %197
  %202 = or i1 %198, %199
  %203 = or i1 %200, %201
  %204 = xor i1 %202, %203
  %205 = or i1 %195, %196
  %206 = xor i1 %205, true
  %207 = or i1 false, %197
  %208 = and i1 %206, %207
  %209 = or i1 %204, %208
  %210 = or i1 %193, %194
  br i1 %209, label %211, label %485

; <label>:211:                                    ; preds = %185
  invoke void @__cxa_rethrow() #12
          to label %435 unwind label %296

; <label>:212:                                    ; preds = %26
  %213 = load i32, i32* @x.262
  %214 = load i32, i32* @y.263
  %215 = sub i32 %213, 1723414154
  %216 = sub i32 %215, 1
  %217 = add i32 %216, 1723414154
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %486

; <label>:227:                                    ; preds = %212, %486
  %228 = load i32*, i32** %6, align 8
  %229 = load i32*, i32** %7, align 8
  %230 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %231 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %230, i32 0, i32 0
  %232 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %231, i32 0, i32 3
  %233 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %232, i32 0, i32 1
  %234 = load i32*, i32** %233, align 8
  %235 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %236 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %235) #3
  %237 = load i32, i32* @x.262
  %238 = load i32, i32* @y.263
  %239 = sub i32 %237, 550410779
  %240 = sub i32 %239, 1
  %241 = add i32 %240, 550410779
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %486

; <label>:251:                                    ; preds = %227
  %252 = invoke i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32* %228, i32* %229, i32* %234, %"class.std::allocator.2"* dereferenceable(1) %236)
          to label %253 unwind label %103

; <label>:253:                                    ; preds = %251
  %254 = load i32, i32* @x.262
  %255 = load i32, i32* @y.263
  %256 = sub i32 %254, 1151322896
  %257 = sub i32 %256, 1
  %258 = add i32 %257, 1151322896
  %259 = sub i32 %254, 1
  %260 = mul i32 %254, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %255, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  br i1 %266, label %268, label %496

; <label>:268:                                    ; preds = %253, %496
  %269 = load i32, i32* @x.262
  %270 = load i32, i32* @y.263
  %271 = sub i32 %269, -2078897886
  %272 = sub i32 %271, 1
  %273 = add i32 %272, -2078897886
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %496

; <label>:295:                                    ; preds = %268
  br label %342

; <label>:296:                                    ; preds = %211, %160
  %297 = load i32, i32* @x.262
  %298 = load i32, i32* @y.263
  %299 = sub i32 %297, 779480348
  %300 = sub i32 %299, 1
  %301 = add i32 %300, 779480348
  %302 = sub i32 %297, 1
  %303 = mul i32 %297, %301
  %304 = urem i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = icmp slt i32 %298, 10
  %307 = and i1 %305, %306
  %308 = xor i1 %305, %306
  %309 = or i1 %307, %308
  %310 = or i1 %305, %306
  br i1 %309, label %311, label %497

; <label>:311:                                    ; preds = %296, %497
  %312 = landingpad { i8*, i32 }
          cleanup
  %313 = extractvalue { i8*, i32 } %312, 0
  store i8* %313, i8** %11, align 8
  %314 = extractvalue { i8*, i32 } %312, 1
  store i32 %314, i32* %12, align 4
  %315 = load i32, i32* @x.262
  %316 = load i32, i32* @y.263
  %317 = sub i32 0, 1
  %318 = add i32 %315, %317
  %319 = sub i32 %315, 1
  %320 = mul i32 %315, %318
  %321 = urem i32 %320, 2
  %322 = icmp eq i32 %321, 0
  %323 = icmp slt i32 %316, 10
  %324 = xor i1 %322, true
  %325 = xor i1 %323, true
  %326 = xor i1 false, true
  %327 = and i1 %324, false
  %328 = and i1 %322, %326
  %329 = and i1 %325, false
  %330 = and i1 %323, %326
  %331 = or i1 %327, %328
  %332 = or i1 %329, %330
  %333 = xor i1 %331, %332
  %334 = or i1 %324, %325
  %335 = xor i1 %334, true
  %336 = or i1 false, %326
  %337 = and i1 %335, %336
  %338 = or i1 %333, %337
  %339 = or i1 %322, %323
  br i1 %338, label %340, label %497

; <label>:340:                                    ; preds = %311
  invoke void @__cxa_end_catch()
          to label %341 unwind label %390

; <label>:341:                                    ; preds = %340
  br label %385

; <label>:342:                                    ; preds = %295
  %343 = load i32, i32* @x.262
  %344 = load i32, i32* @y.263
  %345 = sub i32 %343, 356910652
  %346 = sub i32 %345, 1
  %347 = add i32 %346, 356910652
  %348 = sub i32 %343, 1
  %349 = mul i32 %343, %347
  %350 = urem i32 %349, 2
  %351 = icmp eq i32 %350, 0
  %352 = icmp slt i32 %344, 10
  %353 = xor i1 %351, true
  %354 = xor i1 %352, true
  %355 = xor i1 true, true
  %356 = and i1 %353, true
  %357 = and i1 %351, %355
  %358 = and i1 %354, true
  %359 = and i1 %352, %355
  %360 = or i1 %356, %357
  %361 = or i1 %358, %359
  %362 = xor i1 %360, %361
  %363 = or i1 %353, %354
  %364 = xor i1 %363, true
  %365 = or i1 true, %355
  %366 = and i1 %364, %365
  %367 = or i1 %362, %366
  %368 = or i1 %351, %352
  br i1 %367, label %369, label %501

; <label>:369:                                    ; preds = %342, %501
  %370 = load i32, i32* @x.262
  %371 = load i32, i32* @y.263
  %372 = sub i32 %370, -2062781045
  %373 = sub i32 %372, 1
  %374 = add i32 %373, -2062781045
  %375 = sub i32 %370, 1
  %376 = mul i32 %370, %374
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %371, 10
  %380 = and i1 %378, %379
  %381 = xor i1 %378, %379
  %382 = or i1 %380, %381
  %383 = or i1 %378, %379
  br i1 %382, label %384, label %501

; <label>:384:                                    ; preds = %369
  ret void

; <label>:385:                                    ; preds = %341
  %386 = load i8*, i8** %11, align 8
  %387 = load i32, i32* %12, align 4
  %388 = insertvalue { i8*, i32 } undef, i8* %386, 0
  %389 = insertvalue { i8*, i32 } %388, i32 %387, 1
  resume { i8*, i32 } %389

; <label>:390:                                    ; preds = %340
  %391 = load i32, i32* @x.262
  %392 = load i32, i32* @y.263
  %393 = add i32 %391, 535951654
  %394 = sub i32 %393, 1
  %395 = sub i32 %394, 535951654
  %396 = sub i32 %391, 1
  %397 = mul i32 %391, %395
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %392, 10
  %401 = and i1 %399, %400
  %402 = xor i1 %399, %400
  %403 = or i1 %401, %402
  %404 = or i1 %399, %400
  br i1 %403, label %405, label %502

; <label>:405:                                    ; preds = %390, %502
  %406 = landingpad { i8*, i32 }
          catch i8* null
  %407 = extractvalue { i8*, i32 } %406, 0
  call void @__clang_call_terminate(i8* %407) #11
  %408 = load i32, i32* @x.262
  %409 = load i32, i32* @y.263
  %410 = add i32 %408, -41866222
  %411 = sub i32 %410, 1
  %412 = sub i32 %411, -41866222
  %413 = sub i32 %408, 1
  %414 = mul i32 %408, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %409, 10
  %418 = xor i1 %416, true
  %419 = xor i1 %417, true
  %420 = xor i1 false, true
  %421 = and i1 %418, false
  %422 = and i1 %416, %420
  %423 = and i1 %419, false
  %424 = and i1 %417, %420
  %425 = or i1 %421, %422
  %426 = or i1 %423, %424
  %427 = xor i1 %425, %426
  %428 = or i1 %418, %419
  %429 = xor i1 %428, true
  %430 = or i1 false, %420
  %431 = and i1 %429, %430
  %432 = or i1 %427, %431
  %433 = or i1 %416, %417
  br i1 %432, label %434, label %502

; <label>:434:                                    ; preds = %405
  unreachable

; <label>:435:                                    ; preds = %211
  %436 = load i32, i32* @x.262
  %437 = load i32, i32* @y.263
  %438 = add i32 %436, -1989549010
  %439 = sub i32 %438, 1
  %440 = sub i32 %439, -1989549010
  %441 = sub i32 %436, 1
  %442 = mul i32 %436, %440
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %437, 10
  %446 = and i1 %444, %445
  %447 = xor i1 %444, %445
  %448 = or i1 %446, %447
  %449 = or i1 %444, %445
  br i1 %448, label %450, label %505

; <label>:450:                                    ; preds = %435, %505
  %451 = load i32, i32* @x.262
  %452 = load i32, i32* @y.263
  %453 = sub i32 %451, -1503690950
  %454 = sub i32 %453, 1
  %455 = add i32 %454, -1503690950
  %456 = sub i32 %451, 1
  %457 = mul i32 %451, %455
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %452, 10
  %461 = xor i1 %459, true
  %462 = xor i1 %460, true
  %463 = xor i1 false, true
  %464 = and i1 %461, false
  %465 = and i1 %459, %463
  %466 = and i1 %462, false
  %467 = and i1 %460, %463
  %468 = or i1 %464, %465
  %469 = or i1 %466, %467
  %470 = xor i1 %468, %469
  %471 = or i1 %461, %462
  %472 = xor i1 %471, true
  %473 = or i1 false, %463
  %474 = and i1 %472, %473
  %475 = or i1 %470, %474
  %476 = or i1 %459, %460
  br i1 %475, label %477, label %505

; <label>:477:                                    ; preds = %450
  unreachable

; <label>:478:                                    ; preds = %73, %47
  %479 = load i32**, i32*** %9, align 8
  %480 = getelementptr inbounds i32*, i32** %479, i32 1
  store i32** %480, i32*** %9, align 8
  br label %73

; <label>:481:                                    ; preds = %130, %103
  %482 = landingpad { i8*, i32 }
          catch i8* null
  %483 = extractvalue { i8*, i32 } %482, 0
  store i8* %483, i8** %11, align 8
  %484 = extractvalue { i8*, i32 } %482, 1
  store i32 %484, i32* %12, align 4
  br label %130

; <label>:485:                                    ; preds = %185, %171
  br label %185

; <label>:486:                                    ; preds = %227, %212
  %487 = load i32*, i32** %6, align 8
  %488 = load i32*, i32** %7, align 8
  %489 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %490 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %489, i32 0, i32 0
  %491 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %490, i32 0, i32 3
  %492 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %491, i32 0, i32 1
  %493 = load i32*, i32** %492, align 8
  %494 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %495 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %494) #3
  br label %227

; <label>:496:                                    ; preds = %268, %253
  br label %268

; <label>:497:                                    ; preds = %311, %296
  %498 = landingpad { i8*, i32 }
          cleanup
  %499 = extractvalue { i8*, i32 } %498, 0
  store i8* %499, i8** %11, align 8
  %500 = extractvalue { i8*, i32 } %498, 1
  store i32 %500, i32* %12, align 4
  br label %311

; <label>:501:                                    ; preds = %369, %342
  br label %369

; <label>:502:                                    ; preds = %405, %390
  %503 = landingpad { i8*, i32 }
          catch i8* null
  %504 = extractvalue { i8*, i32 } %503, 0
  call void @__clang_call_terminate(i8* %504) #11
  br label %405

; <label>:505:                                    ; preds = %450, %435
  br label %450
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt16initializer_listIiE3endEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %2, align 8
  %3 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %2, align 8
  %4 = call i32* @_ZNKSt16initializer_listIiE5beginEv(%"class.std::initializer_list"* %3) #3
  %5 = call i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list"* %3) #3
  %6 = getelementptr inbounds i32, i32* %4, i64 %5
  ret i32* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base.9"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base.9"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.268
  %7 = load i32, i32* @y.269
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -725764524, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %162
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -725764524, label %19
    i32 560032720, label %27
    i32 -1816856741, label %50
    i32 -619749384, label %53
    i32 -650839954, label %80
    i32 -270207728, label %129
    i32 -223947000, label %130
    i32 -1632218135, label %133
    i32 -783732579, label %140
  ]

; <label>:18:                                     ; preds = %16
  br label %162

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 560032720, i32 -1632218135
  store i32 %26, i32* %15
  br label %162

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %28, align 8
  %29 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %28, align 8
  store %"class.std::_Deque_base.9"* %29, %"class.std::_Deque_base.9"** %3
  %30 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %31 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 0
  %33 = load i32**, i32*** %32, align 8
  %34 = icmp ne i32** %33, null
  store i1 %34, i1* %2
  %35 = load i32, i32* @x.268
  %36 = load i32, i32* @y.269
  %37 = add i32 %35, -867162047
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -867162047
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1816856741, i32 -1632218135
  store i32 %49, i32* %15
  br label %162

; <label>:50:                                     ; preds = %16
  %51 = load volatile i1, i1* %2
  %52 = select i1 %51, i32 -619749384, i32 -223947000
  store i32 %52, i32* %15
  br label %162

; <label>:53:                                     ; preds = %16
  %54 = load i32, i32* @x.268
  %55 = load i32, i32* @y.269
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -650839954, i32 -783732579
  store i32 %79, i32* %15
  br label %162

; <label>:80:                                     ; preds = %16
  %81 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %82 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 2
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %83, i32 0, i32 3
  %85 = load i32**, i32*** %84, align 8
  %86 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %87 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %87, i32 0, i32 3
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %88, i32 0, i32 3
  %90 = load i32**, i32*** %89, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i64 1
  %92 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %92, i32** %85, i32** %91) #3
  %93 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %94 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 0
  %96 = load i32**, i32*** %95, align 8
  %97 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %98 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %98, i32 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %101, i32** %96, i64 %100) #3
  %102 = load i32, i32* @x.268
  %103 = load i32, i32* @y.269
  %104 = add i32 %102, -209786446
  %105 = sub i32 %104, 1
  %106 = sub i32 %105, -209786446
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 -270207728, i32 -783732579
  store i32 %128, i32* %15
  br label %162

; <label>:129:                                    ; preds = %16
  store i32 -223947000, i32* %15
  br label %162

; <label>:130:                                    ; preds = %16
  %131 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %132 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %131, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %132) #3
  ret void

; <label>:133:                                    ; preds = %16
  %134 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %134, align 8
  %135 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %134, align 8
  %136 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %135, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %136, i32 0, i32 0
  %138 = load i32**, i32*** %137, align 8
  %139 = icmp ne i32** %138, null
  store i32 560032720, i32* %15
  br label %162

; <label>:140:                                    ; preds = %16
  %141 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %142 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %142, i32 0, i32 2
  %144 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %143, i32 0, i32 3
  %145 = load i32**, i32*** %144, align 8
  %146 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %147 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %146, i32 0, i32 0
  %148 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %147, i32 0, i32 3
  %149 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %148, i32 0, i32 3
  %150 = load i32**, i32*** %149, align 8
  %151 = getelementptr inbounds i32*, i32** %150, i64 1
  %152 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %152, i32** %145, i32** %151) #3
  %153 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %154 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %153, i32 0, i32 0
  %155 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %154, i32 0, i32 0
  %156 = load i32**, i32*** %155, align 8
  %157 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  %158 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %158, i32 0, i32 1
  %160 = load i64, i64* %159, align 8
  %161 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %161, i32** %156, i64 %160) #3
  store i32 -650839954, i32* %15
  br label %162

; <label>:162:                                    ; preds = %140, %133, %129, %80, %53, %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2ERKS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator.10"* %10) #3
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator.10"* %11) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"* %6, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.274
  %5 = load i32, i32* @y.275
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1553469070, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1553469070, label %17
    i32 -1552760802, label %37
    i32 1438702512, label %71
    i32 -521617539, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1552760802, i32 -521617539
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %38, align 8
  %39 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %38, align 8
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %39, i32 0, i32 0
  store i32* null, i32** %40, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %39, i32 0, i32 1
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %39, i32 0, i32 2
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %39, i32 0, i32 3
  store i32** null, i32*** %43, align 8
  %44 = load i32, i32* @x.274
  %45 = load i32, i32* @y.275
  %46 = add i32 %44, -268726093
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -268726093
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1438702512, i32 -521617539
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %73, align 8
  %74 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %73, align 8
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %74, i32 0, i32 0
  store i32* null, i32** %75, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %74, i32 0, i32 1
  store i32* null, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %74, i32 0, i32 2
  store i32* null, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %74, i32 0, i32 3
  store i32** null, i32*** %78, align 8
  store i32 -1552760802, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.276
  %6 = load i32, i32* @y.277
  %7 = add i32 %5, 850795697
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 850795697
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 734495449, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 734495449, label %19
    i32 -1175984584, label %27
    i32 -534725984, label %46
    i32 -416666077, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1175984584, i32 -416666077
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %28, align 8
  %31 = load i32, i32* @x.276
  %32 = load i32, i32* @y.277
  %33 = sub i32 %31, 437208755
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 437208755
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -534725984, i32 -416666077
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %49 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %48, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %48, align 8
  store i32 -1175984584, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZSt8distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_(i32*, i32*) #0 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.278
  %7 = load i32, i32* @y.279
  %8 = sub i32 %6, -867847722
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -867847722
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -696635590, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %61
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -696635590, label %20
    i32 813913878, label %28
    i32 133895905, label %51
    i32 667474936, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %61

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 813913878, i32 667474936
  store i32 %27, i32* %16
  br label %61

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca %"struct.std::random_access_iterator_tag", align 1
  %32 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %29)
  %35 = call i64 @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32* %33, i32* %34)
  store i64 %35, i64* %3
  %36 = load i32, i32* @x.278
  %37 = load i32, i32* @y.279
  %38 = sub i32 %36, -13516970
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -13516970
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 133895905, i32 667474936
  store i32 %50, i32* %16
  br label %61

; <label>:51:                                     ; preds = %17
  %52 = load volatile i64, i64* %3
  ret i64 %52

; <label>:53:                                     ; preds = %17
  %54 = alloca i32*, align 8
  %55 = alloca i32*, align 8
  %56 = alloca %"struct.std::random_access_iterator_tag", align 1
  %57 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32* %0, i32** %54, align 8
  store i32* %1, i32** %55, align 8
  %58 = load i32*, i32** %54, align 8
  %59 = load i32*, i32** %55, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %54)
  %60 = call i64 @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32* %58, i32* %59)
  store i32 813913878, i32* %16
  br label %61

; <label>:61:                                     ; preds = %53, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base.9"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = add i64 %15, 6863419417875029643
  %17 = add i64 %16, 1
  %18 = sub i64 %17, 6863419417875029643
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = add i64 %20, -7258281127866070951
  %22 = add i64 %21, 2
  %23 = sub i64 %22, -7258281127866070951
  %24 = add i64 %20, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base.9"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33, i32 0, i32 0
  store i32** %32, i32*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load i32**, i32*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = add i64 %40, 3189903730686331924
  %43 = sub i64 %42, %41
  %44 = sub i64 %43, 3189903730686331924
  %45 = sub i64 %40, %41
  %46 = udiv i64 %44, 2
  %47 = getelementptr inbounds i32*, i32** %37, i64 %46
  store i32** %47, i32*** %8, align 8
  %48 = load i32**, i32*** %8, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i32*, i32** %48, i64 %49
  store i32** %50, i32*** %9, align 8
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base.9"* %12, i32** %51, i32** %52)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %2
  br label %160

; <label>:54:                                     ; preds = %2
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %10, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %11, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %10, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 0
  %63 = load i32**, i32*** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %12, i32** %63, i64 %66) #3
  %67 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 0
  store i32** null, i32*** %68, align 8
  %69 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 1
  store i64 0, i64* %70, align 8
  invoke void @__cxa_rethrow() #12
          to label %302 unwind label %71

; <label>:71:                                     ; preds = %58
  %72 = load i32, i32* @x.280
  %73 = load i32, i32* @y.281
  %74 = add i32 %72, -1508857468
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1508857468
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %303

; <label>:86:                                     ; preds = %71, %303
  %87 = landingpad { i8*, i32 }
          cleanup
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %10, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %11, align 4
  %90 = load i32, i32* @x.280
  %91 = load i32, i32* @y.281
  %92 = sub i32 %90, -1015844831
  %93 = sub i32 %92, 1
  %94 = add i32 %93, -1015844831
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %303

; <label>:104:                                    ; preds = %86
  invoke void @__cxa_end_catch()
          to label %105 unwind label %299

; <label>:105:                                    ; preds = %104
  %106 = load i32, i32* @x.280
  %107 = load i32, i32* @y.281
  %108 = add i32 %106, 1653334263
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 1653334263
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 false, true
  %119 = and i1 %116, false
  %120 = and i1 %114, %118
  %121 = and i1 %117, false
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 false, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %307

; <label>:132:                                    ; preds = %105, %307
  %133 = load i32, i32* @x.280
  %134 = load i32, i32* @y.281
  %135 = sub i32 %133, 936390413
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 936390413
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %307

; <label>:159:                                    ; preds = %132
  br label %240

; <label>:160:                                    ; preds = %53
  %161 = load i32, i32* @x.280
  %162 = load i32, i32* @y.281
  %163 = add i32 %161, -1948915381
  %164 = sub i32 %163, 1
  %165 = sub i32 %164, -1948915381
  %166 = sub i32 %161, 1
  %167 = mul i32 %161, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %162, 10
  %171 = xor i1 %169, true
  %172 = xor i1 %170, true
  %173 = xor i1 true, true
  %174 = and i1 %171, true
  %175 = and i1 %169, %173
  %176 = and i1 %172, true
  %177 = and i1 %170, %173
  %178 = or i1 %174, %175
  %179 = or i1 %176, %177
  %180 = xor i1 %178, %179
  %181 = or i1 %171, %172
  %182 = xor i1 %181, true
  %183 = or i1 true, %173
  %184 = and i1 %182, %183
  %185 = or i1 %180, %184
  %186 = or i1 %169, %170
  br i1 %185, label %187, label %308

; <label>:187:                                    ; preds = %160, %308
  %188 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 2
  %190 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %189, i32** %190) #3
  %191 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %191, i32 0, i32 3
  %193 = load i32**, i32*** %9, align 8
  %194 = getelementptr inbounds i32*, i32** %193, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %192, i32** %194) #3
  %195 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %196 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %195, i32 0, i32 2
  %197 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %196, i32 0, i32 1
  %198 = load i32*, i32** %197, align 8
  %199 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %199, i32 0, i32 2
  %201 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %200, i32 0, i32 0
  store i32* %198, i32** %201, align 8
  %202 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %202, i32 0, i32 3
  %204 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %203, i32 0, i32 1
  %205 = load i32*, i32** %204, align 8
  %206 = load i64, i64* %4, align 8
  %207 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %208 = urem i64 %206, %207
  %209 = getelementptr inbounds i32, i32* %205, i64 %208
  %210 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %210, i32 0, i32 3
  %212 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %211, i32 0, i32 0
  store i32* %209, i32** %212, align 8
  %213 = load i32, i32* @x.280
  %214 = load i32, i32* @y.281
  %215 = add i32 %213, -1327827087
  %216 = sub i32 %215, 1
  %217 = sub i32 %216, -1327827087
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = xor i1 %221, true
  %224 = xor i1 %222, true
  %225 = xor i1 false, true
  %226 = and i1 %223, false
  %227 = and i1 %221, %225
  %228 = and i1 %224, false
  %229 = and i1 %222, %225
  %230 = or i1 %226, %227
  %231 = or i1 %228, %229
  %232 = xor i1 %230, %231
  %233 = or i1 %223, %224
  %234 = xor i1 %233, true
  %235 = or i1 false, %225
  %236 = and i1 %234, %235
  %237 = or i1 %232, %236
  %238 = or i1 %221, %222
  br i1 %237, label %239, label %308

; <label>:239:                                    ; preds = %187
  ret void

; <label>:240:                                    ; preds = %159
  %241 = load i32, i32* @x.280
  %242 = load i32, i32* @y.281
  %243 = add i32 %241, 2082297770
  %244 = sub i32 %243, 1
  %245 = sub i32 %244, 2082297770
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = xor i1 %249, true
  %252 = xor i1 %250, true
  %253 = xor i1 false, true
  %254 = and i1 %251, false
  %255 = and i1 %249, %253
  %256 = and i1 %252, false
  %257 = and i1 %250, %253
  %258 = or i1 %254, %255
  %259 = or i1 %256, %257
  %260 = xor i1 %258, %259
  %261 = or i1 %251, %252
  %262 = xor i1 %261, true
  %263 = or i1 false, %253
  %264 = and i1 %262, %263
  %265 = or i1 %260, %264
  %266 = or i1 %249, %250
  br i1 %265, label %267, label %354

; <label>:267:                                    ; preds = %240, %354
  %268 = load i8*, i8** %10, align 8
  %269 = load i32, i32* %11, align 4
  %270 = insertvalue { i8*, i32 } undef, i8* %268, 0
  %271 = insertvalue { i8*, i32 } %270, i32 %269, 1
  %272 = load i32, i32* @x.280
  %273 = load i32, i32* @y.281
  %274 = add i32 %272, -1010767543
  %275 = sub i32 %274, 1
  %276 = sub i32 %275, -1010767543
  %277 = sub i32 %272, 1
  %278 = mul i32 %272, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %273, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 false, true
  %285 = and i1 %282, false
  %286 = and i1 %280, %284
  %287 = and i1 %283, false
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 false, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %354

; <label>:298:                                    ; preds = %267
  resume { i8*, i32 } %271

; <label>:299:                                    ; preds = %104
  %300 = landingpad { i8*, i32 }
          catch i8* null
  %301 = extractvalue { i8*, i32 } %300, 0
  call void @__clang_call_terminate(i8* %301) #11
  unreachable

; <label>:302:                                    ; preds = %58
  unreachable

; <label>:303:                                    ; preds = %86, %71
  %304 = landingpad { i8*, i32 }
          cleanup
  %305 = extractvalue { i8*, i32 } %304, 0
  store i8* %305, i8** %10, align 8
  %306 = extractvalue { i8*, i32 } %304, 1
  store i32 %306, i32* %11, align 4
  br label %86

; <label>:307:                                    ; preds = %132, %105
  br label %132

; <label>:308:                                    ; preds = %187, %160
  %309 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %309, i32 0, i32 2
  %311 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %310, i32** %311) #3
  %312 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %313 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %312, i32 0, i32 3
  %314 = load i32**, i32*** %9, align 8
  %315 = getelementptr inbounds i32*, i32** %314, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %313, i32** %315) #3
  %316 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %316, i32 0, i32 2
  %318 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %317, i32 0, i32 1
  %319 = load i32*, i32** %318, align 8
  %320 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %320, i32 0, i32 2
  %322 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %321, i32 0, i32 0
  store i32* %319, i32** %322, align 8
  %323 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %323, i32 0, i32 3
  %325 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %324, i32 0, i32 1
  %326 = load i32*, i32** %325, align 8
  %327 = load i64, i64* %4, align 8
  %328 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %329 = sub i64 %327, -2196911820463145840
  %330 = sub i64 %329, %328
  %331 = add i64 %330, -2196911820463145840
  %332 = sub i64 %327, %328
  %333 = mul i64 %331, %328
  %334 = shl i64 %327, %328
  %335 = add i64 0, -169989235844450051
  %336 = sub i64 %335, %327
  %337 = sub i64 %336, -169989235844450051
  %338 = sub i64 0, %327
  %339 = sub i64 0, %328
  %340 = sub i64 %337, %339
  %341 = add i64 %337, %328
  %342 = shl i64 %327, %328
  %343 = sub i64 0, %327
  %344 = add i64 0, %343
  %345 = sub i64 0, %327
  %346 = sub i64 0, %328
  %347 = sub i64 %344, %346
  %348 = add i64 %344, %328
  %349 = urem i64 %327, %328
  %350 = getelementptr inbounds i32, i32* %326, i64 %349
  %351 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %352 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %351, i32 0, i32 3
  %353 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %352, i32 0, i32 0
  store i32* %350, i32** %353, align 8
  br label %187

; <label>:354:                                    ; preds = %267, %240
  %355 = load i8*, i8** %10, align 8
  %356 = load i32, i32* %11, align 4
  %357 = insertvalue { i8*, i32 } undef, i8* %355, 0
  %358 = insertvalue { i8*, i32 } %357, i32 %356, 1
  br label %267
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt7advanceIPKimEvRT_T0_(i32** dereferenceable(8), i64) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.282
  %6 = load i32, i32* @y.283
  %7 = add i32 %5, -683535862
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -683535862
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -192265218, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -192265218, label %19
    i32 340928697, label %39
    i32 -1276377607, label %64
    i32 700900989, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 340928697, i32 700900989
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  %41 = alloca i64, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::random_access_iterator_tag", align 1
  %44 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32** %0, i32*** %40, align 8
  store i64 %1, i64* %41, align 8
  %45 = load i64, i64* %41, align 8
  store i64 %45, i64* %42, align 8
  %46 = load i32**, i32*** %40, align 8
  %47 = load i64, i64* %42, align 8
  %48 = load i32**, i32*** %40, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %48)
  call void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8) %46, i64 %47)
  %49 = load i32, i32* @x.282
  %50 = load i32, i32* @y.283
  %51 = sub i32 %49, -1578138759
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -1578138759
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1276377607, i32 700900989
  store i32 %63, i32* %15
  br label %75

; <label>:64:                                     ; preds = %16
  ret void

; <label>:65:                                     ; preds = %16
  %66 = alloca i32**, align 8
  %67 = alloca i64, align 8
  %68 = alloca i64, align 8
  %69 = alloca %"struct.std::random_access_iterator_tag", align 1
  %70 = alloca %"struct.std::random_access_iterator_tag", align 1
  store i32** %0, i32*** %66, align 8
  store i64 %1, i64* %67, align 8
  %71 = load i64, i64* %67, align 8
  store i64 %71, i64* %68, align 8
  %72 = load i32**, i32*** %66, align 8
  %73 = load i64, i64* %68, align 8
  %74 = load i32**, i32*** %66, align 8
  call void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8) %74)
  call void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8) %72, i64 %73)
  store i32 340928697, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt5dequeIiSaIiEE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.284
  %2 = load i32, i32* @y.285
  %3 = add i32 %1, 2007207381
  %4 = sub i32 %3, 1
  %5 = sub i32 %4, 2007207381
  %6 = sub i32 %1, 1
  %7 = mul i32 %1, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %2, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %113

; <label>:27:                                     ; preds = %0, %113
  %28 = load i32, i32* @x.284
  %29 = load i32, i32* @y.285
  %30 = add i32 %28, -1754786749
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1754786749
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %113

; <label>:54:                                     ; preds = %27
  %55 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %56 unwind label %57

; <label>:56:                                     ; preds = %54
  ret i64 %55

; <label>:57:                                     ; preds = %54
  %58 = load i32, i32* @x.284
  %59 = load i32, i32* @y.285
  %60 = sub i32 %58, 946073608
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 946073608
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  br i1 %82, label %84, label %114

; <label>:84:                                     ; preds = %57, %114
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  call void @__clang_call_terminate(i8* %86) #11
  %87 = load i32, i32* @x.284
  %88 = load i32, i32* @y.285
  %89 = sub i32 0, 1
  %90 = add i32 %87, %89
  %91 = sub i32 %87, 1
  %92 = mul i32 %87, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %88, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %114

; <label>:112:                                    ; preds = %84
  unreachable

; <label>:113:                                    ; preds = %27, %0
  br label %27

; <label>:114:                                    ; preds = %84, %57
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  call void @__clang_call_terminate(i8* %116) #11
  br label %84
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aIPKiPiiET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  store i32* %0, i32** %5, align 8
  store i32* %1, i32** %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_(i32* %9, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.288
  %6 = load i32, i32* @y.289
  %7 = sub i32 %5, 713620766
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 713620766
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -376400380, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -376400380, label %19
    i32 -1671878944, label %27
    i32 493576999, label %59
    i32 -1007659945, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1671878944, i32 -1007659945
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %28, align 8
  %29 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %31, %"class.std::allocator.2"** %2
  %32 = load i32, i32* @x.288
  %33 = load i32, i32* @y.289
  %34 = sub i32 %32, 255315176
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 255315176
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 493576999, i32 -1007659945
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %62, align 8
  %63 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64 to %"class.std::allocator.2"*
  store i32 -1671878944, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEiEvT_S4_RSaIT0_E(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.290
  %7 = load i32, i32* @y.291
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1141054901, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1141054901, label %19
    i32 -625636276, label %27
    i32 1521171552, label %58
    i32 -1182661930, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -625636276, i32 -1182661930
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator.10", align 8
  %30 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %28, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %29, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %30, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator.10"* %29, %"struct.std::_Deque_iterator.10"* %30)
  %31 = load i32, i32* @x.290
  %32 = load i32, i32* @y.291
  %33 = add i32 %31, 1775787820
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1775787820
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 1521171552, i32 -1182661930
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.2"*, align 8
  %61 = alloca %"struct.std::_Deque_iterator.10", align 8
  %62 = alloca %"struct.std::_Deque_iterator.10", align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %60, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %61, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %62, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator.10"* %61, %"struct.std::_Deque_iterator.10"* %62)
  store i32 -625636276, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %3, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ES1_PS1_(%"struct.std::_Deque_iterator.10"*, i32*, i32**) unnamed_addr #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.294
  %7 = load i32, i32* @y.295
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -565308196, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %89
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -565308196, label %19
    i32 1833658939, label %39
    i32 674611893, label %71
    i32 1876195307, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %89

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1833658939, i32 1876195307
  store i32 %38, i32* %15
  br label %89

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %41 = alloca i32*, align 8
  %42 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %40, align 8
  store i32* %1, i32** %41, align 8
  store i32** %2, i32*** %42, align 8
  %43 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 0
  %45 = load i32*, i32** %41, align 8
  store i32* %45, i32** %44, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 1
  %47 = load i32**, i32*** %42, align 8
  %48 = load i32*, i32** %47, align 8
  store i32* %48, i32** %46, align 8
  %49 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 2
  %50 = load i32**, i32*** %42, align 8
  %51 = load i32*, i32** %50, align 8
  %52 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32* %53, i32** %49, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 3
  %55 = load i32**, i32*** %42, align 8
  store i32** %55, i32*** %54, align 8
  %56 = load i32, i32* @x.294
  %57 = load i32, i32* @y.295
  %58 = sub i32 %56, -108044325
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -108044325
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 674611893, i32 1876195307
  store i32 %70, i32* %15
  br label %89

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %74 = alloca i32*, align 8
  %75 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %73, align 8
  store i32* %1, i32** %74, align 8
  store i32** %2, i32*** %75, align 8
  %76 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %76, i32 0, i32 0
  %78 = load i32*, i32** %74, align 8
  store i32* %78, i32** %77, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %76, i32 0, i32 1
  %80 = load i32**, i32*** %75, align 8
  %81 = load i32*, i32** %80, align 8
  store i32* %81, i32** %79, align 8
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %76, i32 0, i32 2
  %83 = load i32**, i32*** %75, align 8
  %84 = load i32*, i32** %83, align 8
  %85 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %86 = getelementptr inbounds i32, i32* %84, i64 %85
  store i32* %86, i32** %82, align 8
  %87 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %76, i32 0, i32 3
  %88 = load i32**, i32*** %75, align 8
  store i32** %88, i32*** %87, align 8
  store i32 1833658939, i32* %15
  br label %89

; <label>:89:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt10__distanceIPKiENSt15iterator_traitsIT_E15difference_typeES3_S3_St26random_access_iterator_tag(i32*, i32*) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.296
  %7 = load i32, i32* @y.297
  %8 = sub i32 %6, 524843066
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 524843066
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1741129729, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %125
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1741129729, label %20
    i32 293703895, label %40
    i32 -837924196, label %68
    i32 -998438576, label %70
  ]

; <label>:19:                                     ; preds = %17
  br label %125

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 293703895, i32 -998438576
  store i32 %39, i32* %16
  br label %125

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::random_access_iterator_tag", align 1
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  %44 = load i32*, i32** %43, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = ptrtoint i32* %44 to i64
  %47 = ptrtoint i32* %45 to i64
  %48 = add i64 %46, 215554260597257554
  %49 = sub i64 %48, %47
  %50 = sub i64 %49, 215554260597257554
  %51 = sub i64 %46, %47
  %52 = sdiv exact i64 %50, 4
  store i64 %52, i64* %3
  %53 = load i32, i32* @x.296
  %54 = load i32, i32* @y.297
  %55 = add i32 %53, -1937588119
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1937588119
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -837924196, i32 -998438576
  store i32 %67, i32* %16
  br label %125

; <label>:68:                                     ; preds = %17
  %69 = load volatile i64, i64* %3
  ret i64 %69

; <label>:70:                                     ; preds = %17
  %71 = alloca %"struct.std::random_access_iterator_tag", align 1
  %72 = alloca i32*, align 8
  %73 = alloca i32*, align 8
  store i32* %0, i32** %72, align 8
  store i32* %1, i32** %73, align 8
  %74 = load i32*, i32** %73, align 8
  %75 = load i32*, i32** %72, align 8
  %76 = ptrtoint i32* %74 to i64
  %77 = ptrtoint i32* %75 to i64
  %78 = shl i64 %76, %77
  %79 = shl i64 %76, %77
  %80 = shl i64 %76, %77
  %81 = sub i64 %76, -8618498802562993050
  %82 = sub i64 %81, %77
  %83 = add i64 %82, -8618498802562993050
  %84 = sub i64 %76, %77
  %85 = mul i64 %83, %77
  %86 = sub i64 %76, 2478233824087982643
  %87 = sub i64 %86, %77
  %88 = add i64 %87, 2478233824087982643
  %89 = sub i64 %76, %77
  %90 = add i64 %88, 5809776865015681716
  %91 = sub i64 %90, 4
  %92 = sub i64 %91, 5809776865015681716
  %93 = sub i64 %88, 4
  %94 = mul i64 %92, 4
  %95 = add i64 0, 1022229813847475142
  %96 = sub i64 %95, %88
  %97 = sub i64 %96, 1022229813847475142
  %98 = sub i64 0, %88
  %99 = add i64 %97, 3330155312615492577
  %100 = add i64 %99, 4
  %101 = sub i64 %100, 3330155312615492577
  %102 = add i64 %97, 4
  %103 = sub i64 %88, -3765820181112886452
  %104 = sub i64 %103, 4
  %105 = add i64 %104, -3765820181112886452
  %106 = sub i64 %88, 4
  %107 = mul i64 %105, 4
  %108 = sub i64 0, %88
  %109 = add i64 0, %108
  %110 = sub i64 0, %88
  %111 = add i64 %109, -5270887569976987149
  %112 = add i64 %111, 4
  %113 = sub i64 %112, -5270887569976987149
  %114 = add i64 %109, 4
  %115 = shl i64 %88, 4
  %116 = sub i64 0, 1088283574233401017
  %117 = sub i64 %116, %88
  %118 = add i64 %117, 1088283574233401017
  %119 = sub i64 0, %88
  %120 = sub i64 0, 4
  %121 = sub i64 %118, %120
  %122 = add i64 %118, 4
  %123 = shl i64 %88, 4
  %124 = sdiv exact i64 %88, 4
  store i32 293703895, i32* %16
  br label %125

; <label>:125:                                    ; preds = %70, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt19__iterator_categoryIPKiENSt15iterator_traitsIT_E17iterator_categoryERKS3_(i32** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.std::random_access_iterator_tag", align 1
  %3 = alloca i32**, align 8
  store i32** %0, i32*** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base.9"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.300
  %4 = load i32, i32* @y.301
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %62

; <label>:16:                                     ; preds = %2, %62
  %17 = alloca %"class.std::_Deque_base.9"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.17", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %17, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %19, %"class.std::_Deque_base.9"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.300
  %25 = load i32, i32* @y.301
  %26 = sub i32 %24, -72978647
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -72978647
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  br i1 %48, label %50, label %62

; <label>:50:                                     ; preds = %16
  %51 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1) %19, i64 %23)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %50
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  ret i32** %51

; <label>:53:                                     ; preds = %50
  %54 = landingpad { i8*, i32 }
          cleanup
  %55 = extractvalue { i8*, i32 } %54, 0
  store i8* %55, i8** %20, align 8
  %56 = extractvalue { i8*, i32 } %54, 1
  store i32 %56, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  br label %57

; <label>:57:                                     ; preds = %53
  %58 = load i8*, i8** %20, align 8
  %59 = load i32, i32* %21, align 4
  %60 = insertvalue { i8*, i32 } undef, i8* %58, 0
  %61 = insertvalue { i8*, i32 } %60, i32 %59, 1
  resume { i8*, i32 } %61

; <label>:62:                                     ; preds = %16, %2
  %63 = alloca %"class.std::_Deque_base.9"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca %"class.std::allocator.17", align 1
  %66 = alloca i8*
  %67 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %63, align 8
  store i64 %1, i64* %64, align 8
  %68 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %63, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %65, %"class.std::_Deque_base.9"* %68) #3
  %69 = load i64, i64* %64, align 8
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base.9"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base.9"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %61, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %167

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.302
  %18 = load i32, i32* @y.303
  %19 = add i32 %17, 1654532837
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 1654532837
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %361

; <label>:43:                                     ; preds = %16, %361
  %44 = load i32, i32* @x.302
  %45 = load i32, i32* @y.303
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %361

; <label>:57:                                     ; preds = %43
  %58 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base.9"* %10)
          to label %59 unwind label %64

; <label>:59:                                     ; preds = %57
  %60 = load i32**, i32*** %7, align 8
  store i32* %58, i32** %60, align 8
  br label %61

; <label>:61:                                     ; preds = %59
  %62 = load i32**, i32*** %7, align 8
  %63 = getelementptr inbounds i32*, i32** %62, i32 1
  store i32** %63, i32*** %7, align 8
  br label %12

; <label>:64:                                     ; preds = %57
  %65 = load i32, i32* @x.302
  %66 = load i32, i32* @y.303
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %362

; <label>:90:                                     ; preds = %64, %362
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %8, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %9, align 4
  %94 = load i32, i32* @x.302
  %95 = load i32, i32* @y.303
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 true, true
  %106 = and i1 %103, true
  %107 = and i1 %101, %105
  %108 = and i1 %104, true
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 true, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  br i1 %117, label %119, label %362

; <label>:119:                                    ; preds = %90
  br label %120

; <label>:120:                                    ; preds = %119
  %121 = load i32, i32* @x.302
  %122 = load i32, i32* @y.303
  %123 = add i32 %121, 1893844609
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, 1893844609
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %366

; <label>:147:                                    ; preds = %120, %366
  %148 = load i8*, i8** %8, align 8
  %149 = call i8* @__cxa_begin_catch(i8* %148) #3
  %150 = load i32**, i32*** %5, align 8
  %151 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %10, i32** %150, i32** %151) #3
  %152 = load i32, i32* @x.302
  %153 = load i32, i32* @y.303
  %154 = sub i32 %152, 477641008
  %155 = sub i32 %154, 1
  %156 = add i32 %155, 477641008
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %366

; <label>:166:                                    ; preds = %147
  invoke void @__cxa_rethrow() #12
          to label %318 unwind label %210

; <label>:167:                                    ; preds = %12
  %168 = load i32, i32* @x.302
  %169 = load i32, i32* @y.303
  %170 = sub i32 %168, -709669475
  %171 = sub i32 %170, 1
  %172 = add i32 %171, -709669475
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = xor i1 %176, true
  %179 = xor i1 %177, true
  %180 = xor i1 true, true
  %181 = and i1 %178, true
  %182 = and i1 %176, %180
  %183 = and i1 %179, true
  %184 = and i1 %177, %180
  %185 = or i1 %181, %182
  %186 = or i1 %183, %184
  %187 = xor i1 %185, %186
  %188 = or i1 %178, %179
  %189 = xor i1 %188, true
  %190 = or i1 true, %180
  %191 = and i1 %189, %190
  %192 = or i1 %187, %191
  %193 = or i1 %176, %177
  br i1 %192, label %194, label %371

; <label>:194:                                    ; preds = %167, %371
  %195 = load i32, i32* @x.302
  %196 = load i32, i32* @y.303
  %197 = add i32 %195, 832212890
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, 832212890
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %371

; <label>:209:                                    ; preds = %194
  br label %255

; <label>:210:                                    ; preds = %166
  %211 = landingpad { i8*, i32 }
          cleanup
  %212 = extractvalue { i8*, i32 } %211, 0
  store i8* %212, i8** %8, align 8
  %213 = extractvalue { i8*, i32 } %211, 1
  store i32 %213, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %214 unwind label %315

; <label>:214:                                    ; preds = %210
  %215 = load i32, i32* @x.302
  %216 = load i32, i32* @y.303
  %217 = sub i32 0, 1
  %218 = add i32 %215, %217
  %219 = sub i32 %215, 1
  %220 = mul i32 %215, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %216, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 false, true
  %227 = and i1 %224, false
  %228 = and i1 %222, %226
  %229 = and i1 %225, false
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 false, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  br i1 %238, label %240, label %372

; <label>:240:                                    ; preds = %214, %372
  %241 = load i32, i32* @x.302
  %242 = load i32, i32* @y.303
  %243 = sub i32 0, 1
  %244 = add i32 %241, %243
  %245 = sub i32 %241, 1
  %246 = mul i32 %241, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %242, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  br i1 %252, label %254, label %372

; <label>:254:                                    ; preds = %240
  br label %256

; <label>:255:                                    ; preds = %209
  ret void

; <label>:256:                                    ; preds = %254
  %257 = load i32, i32* @x.302
  %258 = load i32, i32* @y.303
  %259 = sub i32 %257, -1999535220
  %260 = sub i32 %259, 1
  %261 = add i32 %260, -1999535220
  %262 = sub i32 %257, 1
  %263 = mul i32 %257, %261
  %264 = urem i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = icmp slt i32 %258, 10
  %267 = xor i1 %265, true
  %268 = xor i1 %266, true
  %269 = xor i1 false, true
  %270 = and i1 %267, false
  %271 = and i1 %265, %269
  %272 = and i1 %268, false
  %273 = and i1 %266, %269
  %274 = or i1 %270, %271
  %275 = or i1 %272, %273
  %276 = xor i1 %274, %275
  %277 = or i1 %267, %268
  %278 = xor i1 %277, true
  %279 = or i1 false, %269
  %280 = and i1 %278, %279
  %281 = or i1 %276, %280
  %282 = or i1 %265, %266
  br i1 %281, label %283, label %373

; <label>:283:                                    ; preds = %256, %373
  %284 = load i8*, i8** %8, align 8
  %285 = load i32, i32* %9, align 4
  %286 = insertvalue { i8*, i32 } undef, i8* %284, 0
  %287 = insertvalue { i8*, i32 } %286, i32 %285, 1
  %288 = load i32, i32* @x.302
  %289 = load i32, i32* @y.303
  %290 = sub i32 %288, -637621241
  %291 = sub i32 %290, 1
  %292 = add i32 %291, -637621241
  %293 = sub i32 %288, 1
  %294 = mul i32 %288, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %289, 10
  %298 = xor i1 %296, true
  %299 = xor i1 %297, true
  %300 = xor i1 false, true
  %301 = and i1 %298, false
  %302 = and i1 %296, %300
  %303 = and i1 %299, false
  %304 = and i1 %297, %300
  %305 = or i1 %301, %302
  %306 = or i1 %303, %304
  %307 = xor i1 %305, %306
  %308 = or i1 %298, %299
  %309 = xor i1 %308, true
  %310 = or i1 false, %300
  %311 = and i1 %309, %310
  %312 = or i1 %307, %311
  %313 = or i1 %296, %297
  br i1 %312, label %314, label %373

; <label>:314:                                    ; preds = %283
  resume { i8*, i32 } %287

; <label>:315:                                    ; preds = %210
  %316 = landingpad { i8*, i32 }
          catch i8* null
  %317 = extractvalue { i8*, i32 } %316, 0
  call void @__clang_call_terminate(i8* %317) #11
  unreachable

; <label>:318:                                    ; preds = %166
  %319 = load i32, i32* @x.302
  %320 = load i32, i32* @y.303
  %321 = add i32 %319, 1673420031
  %322 = sub i32 %321, 1
  %323 = sub i32 %322, 1673420031
  %324 = sub i32 %319, 1
  %325 = mul i32 %319, %323
  %326 = urem i32 %325, 2
  %327 = icmp eq i32 %326, 0
  %328 = icmp slt i32 %320, 10
  %329 = xor i1 %327, true
  %330 = xor i1 %328, true
  %331 = xor i1 false, true
  %332 = and i1 %329, false
  %333 = and i1 %327, %331
  %334 = and i1 %330, false
  %335 = and i1 %328, %331
  %336 = or i1 %332, %333
  %337 = or i1 %334, %335
  %338 = xor i1 %336, %337
  %339 = or i1 %329, %330
  %340 = xor i1 %339, true
  %341 = or i1 false, %331
  %342 = and i1 %340, %341
  %343 = or i1 %338, %342
  %344 = or i1 %327, %328
  br i1 %343, label %345, label %378

; <label>:345:                                    ; preds = %318, %378
  %346 = load i32, i32* @x.302
  %347 = load i32, i32* @y.303
  %348 = add i32 %346, -147612620
  %349 = sub i32 %348, 1
  %350 = sub i32 %349, -147612620
  %351 = sub i32 %346, 1
  %352 = mul i32 %346, %350
  %353 = urem i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = icmp slt i32 %347, 10
  %356 = and i1 %354, %355
  %357 = xor i1 %354, %355
  %358 = or i1 %356, %357
  %359 = or i1 %354, %355
  br i1 %358, label %360, label %378

; <label>:360:                                    ; preds = %345
  unreachable

; <label>:361:                                    ; preds = %43, %16
  br label %43

; <label>:362:                                    ; preds = %90, %64
  %363 = landingpad { i8*, i32 }
          catch i8* null
  %364 = extractvalue { i8*, i32 } %363, 0
  store i8* %364, i8** %8, align 8
  %365 = extractvalue { i8*, i32 } %363, 1
  store i32 %365, i32* %9, align 4
  br label %90

; <label>:366:                                    ; preds = %147, %120
  %367 = load i8*, i8** %8, align 8
  %368 = call i8* @__cxa_begin_catch(i8* %367) #3
  %369 = load i32**, i32*** %5, align 8
  %370 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"* %10, i32** %369, i32** %370) #3
  br label %147

; <label>:371:                                    ; preds = %194, %167
  br label %194

; <label>:372:                                    ; preds = %240, %214
  br label %240

; <label>:373:                                    ; preds = %283, %256
  %374 = load i8*, i8** %8, align 8
  %375 = load i32, i32* %9, align 4
  %376 = insertvalue { i8*, i32 } undef, i8* %374, 0
  %377 = insertvalue { i8*, i32 } %376, i32 %375, 1
  br label %283

; <label>:378:                                    ; preds = %345, %318
  br label %345
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"*, i32**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.304
  %5 = load i32, i32* @y.305
  %6 = add i32 %4, 525281250
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 525281250
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %62

; <label>:30:                                     ; preds = %3, %62
  %31 = alloca %"class.std::_Deque_base.9"*, align 8
  %32 = alloca i32**, align 8
  %33 = alloca i64, align 8
  %34 = alloca %"class.std::allocator.17", align 1
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %31, align 8
  store i32** %1, i32*** %32, align 8
  store i64 %2, i64* %33, align 8
  %37 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %31, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %34, %"class.std::_Deque_base.9"* %37) #3
  %38 = load i32**, i32*** %32, align 8
  %39 = load i64, i64* %33, align 8
  %40 = load i32, i32* @x.304
  %41 = load i32, i32* @y.305
  %42 = add i32 %40, 2073348480
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 2073348480
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %62

; <label>:54:                                     ; preds = %30
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1) %34, i32** %38, i64 %39)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %54
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %34) #3
  ret void

; <label>:56:                                     ; preds = %54
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %35, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %36, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %34) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %35, align 8
  call void @__clang_call_terminate(i8* %61) #11
  unreachable

; <label>:62:                                     ; preds = %30, %3
  %63 = alloca %"class.std::_Deque_base.9"*, align 8
  %64 = alloca i32**, align 8
  %65 = alloca i64, align 8
  %66 = alloca %"class.std::allocator.17", align 1
  %67 = alloca i8*
  %68 = alloca i32
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %63, align 8
  store i32** %1, i32*** %64, align 8
  store i64 %2, i64* %65, align 8
  %69 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %63, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %66, %"class.std::_Deque_base.9"* %69) #3
  %70 = load i32**, i32*** %64, align 8
  %71 = load i64, i64* %65, align 8
  br label %30
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"*, i32**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* noalias sret, %"class.std::_Deque_base.9"*) #4 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %1, %"class.std::_Deque_base.9"** %3, align 8
  %4 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %2, align 8
  %3 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %2, align 8
  %4 = bitcast %"class.std::allocator.17"* %3 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.314
  %6 = load i32, i32* @y.315
  %7 = add i32 %5, 146785710
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 146785710
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1451783571, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1451783571, label %19
    i32 -1207457100, label %27
    i32 -251485161, label %59
    i32 -1660306960, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1207457100, i32 -1660306960
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %28, align 8
  %29 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.2"*
  store %"class.std::allocator.2"* %31, %"class.std::allocator.2"** %2
  %32 = load i32, i32* @x.314
  %33 = load i32, i32* @y.315
  %34 = add i32 %32, -880541072
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -880541072
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -251485161, i32 -1660306960
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.2"*, %"class.std::allocator.2"** %2
  ret %"class.std::allocator.2"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %62, align 8
  %63 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64 to %"class.std::allocator.2"*
  store i32 -1207457100, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.316
  %6 = load i32, i32* @y.317
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1451622512, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1451622512, label %18
    i32 -2064622918, label %26
    i32 1225840947, label %46
    i32 -1254867755, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2064622918, i32 -1254867755
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.17"*, align 8
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %27, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %28, align 8
  %29 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %27, align 8
  %30 = bitcast %"class.std::allocator.17"* %29 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %30) #3
  %31 = load i32, i32* @x.316
  %32 = load i32, i32* @y.317
  %33 = add i32 %31, 1973413227
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1973413227
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1225840947, i32 -1254867755
  store i32 %45, i32* %14
  br label %52

; <label>:46:                                     ; preds = %15
  ret void

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.std::allocator.17"*, align 8
  %49 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %48, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %49, align 8
  %50 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %48, align 8
  %51 = bitcast %"class.std::allocator.17"* %50 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %51) #3
  store i32 -2064622918, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.318
  %5 = load i32, i32* @y.319
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 805553039, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 805553039, label %17
    i32 177221483, label %37
    i32 -885923545, label %54
    i32 -1736029176, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 177221483, i32 -1736029176
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %40 = load i32, i32* @x.318
  %41 = load i32, i32* @y.319
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -885923545, i32 -1736029176
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %56, align 8
  store i32 177221483, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -951148987, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %82
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -951148987, label %16
    i32 79298087, label %21
    i32 -2121884380, label %48
    i32 -1379695000, label %75
    i32 1550571064, label %76
    i32 1899845801, label %81
  ]

; <label>:15:                                     ; preds = %13
  br label %82

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 79298087, i32 1550571064
  store i32 %20, i32* %12
  br label %82

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.320
  %23 = load i32, i32* @y.321
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -2121884380, i32 1899845801
  store i32 %47, i32* %12
  br label %82

; <label>:48:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %49 = load i32, i32* @x.320
  %50 = load i32, i32* @y.321
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1379695000, i32 1899845801
  store i32 %74, i32* %12
  br label %82

; <label>:75:                                     ; preds = %13
  unreachable

; <label>:76:                                     ; preds = %13
  %77 = load i64, i64* %7, align 8
  %78 = mul i64 %77, 8
  %79 = call i8* @_Znwm(i64 %78)
  %80 = bitcast i8* %79 to i32**
  ret i32** %80

; <label>:81:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -2121884380, i32* %12
  br label %82

; <label>:82:                                     ; preds = %81, %48, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.324
  %5 = load i32, i32* @y.325
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1630720508, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %70
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1630720508, label %17
    i32 -499469644, label %37
    i32 -499418496, label %66
    i32 77703196, label %67
  ]

; <label>:16:                                     ; preds = %14
  br label %70

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -499469644, i32 77703196
  store i32 %36, i32* %13
  br label %70

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %38, align 8
  %40 = load i32, i32* @x.324
  %41 = load i32, i32* @y.325
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -499418496, i32 77703196
  store i32 %65, i32* %13
  br label %70

; <label>:66:                                     ; preds = %14
  ret void

; <label>:67:                                     ; preds = %14
  %68 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %68, align 8
  %69 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %68, align 8
  store i32 -499469644, i32* %13
  br label %70

; <label>:70:                                     ; preds = %67, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base.9"*) #0 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = sub i32 %5, 1864058011
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1864058011
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1125621353, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1125621353, label %19
    i32 955079511, label %27
    i32 -418742425, label %61
    i32 -1082186505, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 955079511, i32 -1082186505
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %28, align 8
  %29 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %28, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator.2"*
  %32 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %33 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %31, i64 %32)
  store i32* %33, i32** %2
  %34 = load i32, i32* @x.326
  %35 = load i32, i32* @y.327
  %36 = add i32 %34, -1389499347
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -1389499347
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -418742425, i32 -1082186505
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile i32*, i32** %2
  ret i32* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::_Deque_base.9"*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %64, align 8
  %65 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %65, i32 0, i32 0
  %67 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %66 to %"class.std::allocator.2"*
  %68 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %69 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %67, i64 %68)
  store i32 955079511, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base.9"*, i32**, i32**) #4 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base.9"*
  %5 = alloca %"class.std::_Deque_base.9"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %5, align 8
  store %"class.std::_Deque_base.9"* %9, %"class.std::_Deque_base.9"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 110730638, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %96
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 110730638, label %15
    i32 433718026, label %20
    i32 -878447438, label %24
    i32 1445503380, label %40
    i32 72138878, label %58
    i32 -387695084, label %59
    i32 184222801, label %75
    i32 -2117314332, label %91
    i32 -1385719449, label %92
    i32 -659769172, label %95
  ]

; <label>:14:                                     ; preds = %12
  br label %96

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 433718026, i32 -387695084
  store i32 %19, i32* %11
  br label %96

; <label>:20:                                     ; preds = %12
  %21 = load i32**, i32*** %8, align 8
  %22 = load i32*, i32** %21, align 8
  %23 = load volatile %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"* %23, i32* %22) #3
  store i32 -878447438, i32* %11
  br label %96

; <label>:24:                                     ; preds = %12
  %25 = load i32, i32* @x.328
  %26 = load i32, i32* @y.329
  %27 = add i32 %25, -307032922
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -307032922
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 1445503380, i32 -1385719449
  store i32 %39, i32* %11
  br label %96

; <label>:40:                                     ; preds = %12
  %41 = load i32**, i32*** %8, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i32 1
  store i32** %42, i32*** %8, align 8
  %43 = load i32, i32* @x.328
  %44 = load i32, i32* @y.329
  %45 = sub i32 %43, 1320244821
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1320244821
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 72138878, i32 -1385719449
  store i32 %57, i32* %11
  br label %96

; <label>:58:                                     ; preds = %12
  store i32 110730638, i32* %11
  br label %96

; <label>:59:                                     ; preds = %12
  %60 = load i32, i32* @x.328
  %61 = load i32, i32* @y.329
  %62 = sub i32 %60, 1591671253
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1591671253
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 184222801, i32 -659769172
  store i32 %74, i32* %11
  br label %96

; <label>:75:                                     ; preds = %12
  %76 = load i32, i32* @x.328
  %77 = load i32, i32* @y.329
  %78 = sub i32 %76, -1973386459
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -1973386459
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  %90 = select i1 %88, i32 -2117314332, i32 -659769172
  store i32 %90, i32* %11
  br label %96

; <label>:91:                                     ; preds = %12
  ret void

; <label>:92:                                     ; preds = %12
  %93 = load i32**, i32*** %8, align 8
  %94 = getelementptr inbounds i32*, i32** %93, i32 1
  store i32** %94, i32*** %8, align 8
  store i32 1445503380, i32* %11
  br label %96

; <label>:95:                                     ; preds = %12
  store i32 184222801, i32* %11
  br label %96

; <label>:96:                                     ; preds = %95, %92, %75, %59, %58, %40, %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 573651677, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %78
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 573651677, label %17
    i32 455523583, label %22
    i32 -448945295, label %23
    i32 -1017059591, label %38
    i32 -199859577, label %58
    i32 686387801, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %78

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 455523583, i32 -448945295
  store i32 %21, i32* %13
  br label %78

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.332
  %25 = load i32, i32* @y.333
  %26 = sub i32 0, 1
  %27 = add i32 %24, %26
  %28 = sub i32 %24, 1
  %29 = mul i32 %24, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %25, 10
  %33 = and i1 %31, %32
  %34 = xor i1 %31, %32
  %35 = or i1 %33, %34
  %36 = or i1 %31, %32
  %37 = select i1 %35, i32 -1017059591, i32 686387801
  store i32 %37, i32* %13
  br label %78

; <label>:38:                                     ; preds = %14
  %39 = load i64, i64* %8, align 8
  %40 = mul i64 %39, 4
  %41 = call i8* @_Znwm(i64 %40)
  %42 = bitcast i8* %41 to i32*
  store i32* %42, i32** %4
  %43 = load i32, i32* @x.332
  %44 = load i32, i32* @y.333
  %45 = sub i32 %43, -1135524511
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1135524511
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -199859577, i32 686387801
  store i32 %57, i32* %13
  br label %78

; <label>:58:                                     ; preds = %14
  %59 = load volatile i32*, i32** %4
  ret i32* %59

; <label>:60:                                     ; preds = %14
  %61 = load i64, i64* %8, align 8
  %62 = shl i64 %61, 4
  %63 = shl i64 %61, 4
  %64 = sub i64 0, -6064348740826465396
  %65 = sub i64 %64, %61
  %66 = add i64 %65, -6064348740826465396
  %67 = sub i64 0, %61
  %68 = sub i64 0, %66
  %69 = sub i64 0, 4
  %70 = add i64 %68, %69
  %71 = sub i64 0, %70
  %72 = add i64 %66, 4
  %73 = shl i64 %61, 4
  %74 = shl i64 %61, 4
  %75 = mul i64 %61, 4
  %76 = call i8* @_Znwm(i64 %75)
  %77 = bitcast i8* %76 to i32*
  store i32 -1017059591, i32* %13
  br label %78

; <label>:78:                                     ; preds = %60, %38, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.334
  %5 = load i32, i32* @y.335
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 811130647, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 811130647, label %17
    i32 -900065841, label %37
    i32 -644674447, label %54
    i32 -294521716, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -900065841, i32 -294521716
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %38, align 8
  %40 = load i32, i32* @x.334
  %41 = load i32, i32* @y.335
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -644674447, i32 -294521716
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i64 4611686018427387903

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %56, align 8
  store i32 -900065841, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base.9"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base.9"* %0, %"class.std::_Deque_base.9"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base.9"*, %"class.std::_Deque_base.9"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.2"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %53

; <label>:10:                                     ; preds = %2
  %11 = load i32, i32* @x.336
  %12 = load i32, i32* @y.337
  %13 = sub i32 %11, -281997874
  %14 = sub i32 %13, 1
  %15 = add i32 %14, -281997874
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %56

; <label>:25:                                     ; preds = %10, %56
  %26 = load i32, i32* @x.336
  %27 = load i32, i32* @y.337
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 false, true
  %38 = and i1 %35, false
  %39 = and i1 %33, %37
  %40 = and i1 %36, false
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 false, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %56

; <label>:51:                                     ; preds = %25
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.2"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51, %2
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #11
  unreachable

; <label>:56:                                     ; preds = %25, %10
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.338
  %7 = load i32, i32* @y.339
  %8 = add i32 %6, -1163067532
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1163067532
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -694636703, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -694636703, label %20
    i32 -1487364243, label %40
    i32 -1874206253, label %62
    i32 -346203613, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1487364243, i32 -346203613
  store i32 %39, i32* %16
  br label %71

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.17"*, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %41, align 8
  %45 = bitcast %"class.std::allocator.17"* %44 to %"class.__gnu_cxx::new_allocator.18"*
  %46 = load i32**, i32*** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %45, i32** %46, i64 %47)
  %48 = load i32, i32* @x.338
  %49 = load i32, i32* @y.339
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -1874206253, i32 -346203613
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.std::allocator.17"*, align 8
  %65 = alloca i32**, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %64, align 8
  store i32** %1, i32*** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %64, align 8
  %68 = bitcast %"class.std::allocator.17"* %67 to %"class.__gnu_cxx::new_allocator.18"*
  %69 = load i32**, i32*** %65, align 8
  %70 = load i64, i64* %66, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %68, i32** %69, i64 %70)
  store i32 -1487364243, i32* %16
  br label %71

; <label>:71:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"*, i32**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.342
  %2 = load i32, i32* @y.343
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = xor i1 %8, true
  %11 = xor i1 %9, true
  %12 = xor i1 false, true
  %13 = and i1 %10, false
  %14 = and i1 %8, %12
  %15 = and i1 %11, false
  %16 = and i1 %9, %12
  %17 = or i1 %13, %14
  %18 = or i1 %15, %16
  %19 = xor i1 %17, %18
  %20 = or i1 %10, %11
  %21 = xor i1 %20, true
  %22 = or i1 false, %12
  %23 = and i1 %21, %22
  %24 = or i1 %19, %23
  %25 = or i1 %8, %9
  br i1 %24, label %26, label %112

; <label>:26:                                     ; preds = %0, %112
  %27 = load i32, i32* @x.342
  %28 = load i32, i32* @y.343
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %112

; <label>:52:                                     ; preds = %26
  %53 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %52
  ret i64 %53

; <label>:55:                                     ; preds = %52
  %56 = load i32, i32* @x.342
  %57 = load i32, i32* @y.343
  %58 = sub i32 %56, 1936574954
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1936574954
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %113

; <label>:82:                                     ; preds = %55, %113
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  call void @__clang_call_terminate(i8* %84) #11
  %85 = load i32, i32* @x.342
  %86 = load i32, i32* @y.343
  %87 = sub i32 %85, 943054472
  %88 = sub i32 %87, 1
  %89 = add i32 %88, 943054472
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %113

; <label>:111:                                    ; preds = %82
  unreachable

; <label>:112:                                    ; preds = %26, %0
  br label %26

; <label>:113:                                    ; preds = %82, %55
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  call void @__clang_call_terminate(i8* %115) #11
  br label %82
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt9__advanceIPKilEvRT_T0_St26random_access_iterator_tag(i32** dereferenceable(8), i64) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.344
  %6 = load i32, i32* @y.345
  %7 = sub i32 %5, 1911033571
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1911033571
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1329628884, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %59
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1329628884, label %19
    i32 -1528183782, label %27
    i32 -2076562470, label %50
    i32 -996811899, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %59

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1528183782, i32 -996811899
  store i32 %26, i32* %15
  br label %59

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::random_access_iterator_tag", align 1
  %29 = alloca i32**, align 8
  %30 = alloca i64, align 8
  store i32** %0, i32*** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load i64, i64* %30, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = load i32*, i32** %32, align 8
  %34 = getelementptr inbounds i32, i32* %33, i64 %31
  store i32* %34, i32** %32, align 8
  %35 = load i32, i32* @x.344
  %36 = load i32, i32* @y.345
  %37 = add i32 %35, -754983784
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -754983784
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -2076562470, i32 -996811899
  store i32 %49, i32* %15
  br label %59

; <label>:50:                                     ; preds = %16
  ret void

; <label>:51:                                     ; preds = %16
  %52 = alloca %"struct.std::random_access_iterator_tag", align 1
  %53 = alloca i32**, align 8
  %54 = alloca i64, align 8
  store i32** %0, i32*** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load i64, i64* %54, align 8
  %56 = load i32**, i32*** %53, align 8
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i64 %55
  store i32* %58, i32** %56, align 8
  store i32 -1528183782, i32* %15
  br label %59

; <label>:59:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyIPKiPiET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPKiPiEET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.348
  %8 = load i32, i32* @y.349
  %9 = add i32 %7, -334747332
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -334747332
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -366558483, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %62
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -366558483, label %21
    i32 -1160349969, label %29
    i32 238195757, label %52
    i32 942591642, label %54
  ]

; <label>:20:                                     ; preds = %18
  br label %62

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1160349969, i32 942591642
  store i32 %28, i32* %17
  br label %62

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = load i32*, i32** %31, align 8
  %35 = load i32*, i32** %32, align 8
  %36 = call i32* @_ZSt4copyIPKiPiET0_T_S4_S3_(i32* %33, i32* %34, i32* %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.348
  %38 = load i32, i32* @y.349
  %39 = sub i32 %37, -1065122489
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1065122489
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 238195757, i32 942591642
  store i32 %51, i32* %17
  br label %62

; <label>:52:                                     ; preds = %18
  %53 = load volatile i32*, i32** %4
  ret i32* %53

; <label>:54:                                     ; preds = %18
  %55 = alloca i32*, align 8
  %56 = alloca i32*, align 8
  %57 = alloca i32*, align 8
  store i32* %0, i32** %55, align 8
  store i32* %1, i32** %56, align 8
  store i32* %2, i32** %57, align 8
  %58 = load i32*, i32** %55, align 8
  %59 = load i32*, i32** %56, align 8
  %60 = load i32*, i32** %57, align 8
  %61 = call i32* @_ZSt4copyIPKiPiET0_T_S4_S3_(i32* %58, i32* %59, i32* %60)
  store i32 -1160349969, i32* %17
  br label %62

; <label>:62:                                     ; preds = %54, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyIPKiPiET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_(i32* %8, i32* %10, i32* %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt12__miter_baseIPKiENSt11_Miter_baseIT_E13iterator_typeES3_(i32*) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb0EPKiPiET1_T0_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPKiENSt11_Niter_baseIT_E13iterator_typeES3_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  store i32* %2, i32** %8, align 8
  %10 = load i32*, i32** %7, align 8
  %11 = load i32*, i32** %6, align 8
  %12 = ptrtoint i32* %10 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 1076835389, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %75
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1076835389, label %23
    i32 -380874859, label %27
    i32 929210982, label %34
    i32 -1559260530, label %50
    i32 -165452478, label %69
    i32 663219435, label %71
  ]

; <label>:22:                                     ; preds = %20
  br label %75

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -380874859, i32 929210982
  store i32 %26, i32* %19
  br label %75

; <label>:27:                                     ; preds = %20
  %28 = load i32*, i32** %8, align 8
  %29 = bitcast i32* %28 to i8*
  %30 = load i32*, i32** %6, align 8
  %31 = bitcast i32* %30 to i8*
  %32 = load i64, i64* %9, align 8
  %33 = mul i64 4, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 929210982, i32* %19
  br label %75

; <label>:34:                                     ; preds = %20
  %35 = load i32, i32* @x.362
  %36 = load i32, i32* @y.363
  %37 = sub i32 %35, -878842480
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -878842480
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1559260530, i32 663219435
  store i32 %49, i32* %19
  br label %75

; <label>:50:                                     ; preds = %20
  %51 = load i32*, i32** %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = getelementptr inbounds i32, i32* %51, i64 %52
  store i32* %53, i32** %4
  %54 = load i32, i32* @x.362
  %55 = load i32, i32* @y.363
  %56 = add i32 %54, 853844900
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 853844900
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -165452478, i32 663219435
  store i32 %68, i32* %19
  br label %75

; <label>:69:                                     ; preds = %20
  %70 = load volatile i32*, i32** %4
  ret i32* %70

; <label>:71:                                     ; preds = %20
  %72 = load i32*, i32** %8, align 8
  %73 = load i64, i64* %9, align 8
  %74 = getelementptr inbounds i32, i32* %72, i64 %73
  store i32 -1559260530, i32* %19
  br label %75

; <label>:75:                                     ; preds = %71, %50, %34, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPKiLb0EE7_S_baseES1_(i32*) #4 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.366
  %6 = load i32, i32* @y.367
  %7 = add i32 %5, -495722607
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -495722607
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 24860811, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 24860811, label %19
    i32 1210804444, label %39
    i32 -1763879610, label %69
    i32 1943384855, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1210804444, i32 1943384855
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.366
  %43 = load i32, i32* @y.367
  %44 = sub i32 %42, 1593226549
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1593226549
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1763879610, i32 1943384855
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32*, i32** %2
  ret i32* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32*, align 8
  store i32* %0, i32** %72, align 8
  %73 = load i32*, i32** %72, align 8
  store i32 1210804444, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorIiRiPiEEvT_S4_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*) #0 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.10", align 8
  %4 = alloca %"struct.std::_Deque_iterator.10", align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %4, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %1) #3
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator.10"* %3, %"struct.std::_Deque_iterator.10"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorIiRiPiEEEvT_S6_(%"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*) #4 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt16initializer_listIiE4sizeEv(%"class.std::initializer_list"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.372
  %6 = load i32, i32* @y.373
  %7 = sub i32 %5, -506736164
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -506736164
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1830560344, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1830560344, label %19
    i32 -2106900105, label %27
    i32 259081385, label %47
    i32 154038414, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2106900105, i32 154038414
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %28, align 8
  %29 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %28, align 8
  %30 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.372
  %33 = load i32, i32* @y.373
  %34 = sub i32 %32, 1034533930
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1034533930
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 259081385, i32 154038414
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::initializer_list"*, align 8
  store %"class.std::initializer_list"* %0, %"class.std::initializer_list"** %50, align 8
  %51 = load %"class.std::initializer_list"*, %"class.std::initializer_list"** %50, align 8
  %52 = getelementptr inbounds %"class.std::initializer_list", %"class.std::initializer_list"* %51, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  store i32 -2106900105, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.2"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.2"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque.8"*, %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"*, %"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca %"class.std::deque.8"*, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %5, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %6, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator.10"* noalias sret, %"class.std::deque.8"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %3, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %5 = bitcast %"class.std::deque.8"* %4 to %"class.std::_Deque_base.9"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator.10"* noalias sret, %"class.std::deque.8"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %1, %"class.std::deque.8"** %3, align 8
  %4 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  %5 = bitcast %"class.std::deque.8"* %4 to %"class.std::_Deque_base.9"*
  %6 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator.10"* dereferenceable(32), %"struct.std::_Deque_iterator.10"* dereferenceable(32)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.382
  %7 = load i32, i32* @y.383
  %8 = add i32 %6, -1347899321
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1347899321
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1443331090, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1443331090, label %20
    i32 1183966529, label %40
    i32 1704148133, label %65
    i32 1126926977, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1183966529, i32 1126926977
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %42 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %41, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %42, align 8
  %43 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %41, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %42, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.382
  %51 = load i32, i32* @y.383
  %52 = add i32 %50, -2011346015
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2011346015
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1704148133, i32 1126926977
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i1, i1* %3
  ret i1 %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  %69 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %68, align 8
  store %"struct.std::_Deque_iterator.10"* %1, %"struct.std::_Deque_iterator.10"** %69, align 8
  %70 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %68, align 8
  %71 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %70, i32 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %69, align 8
  %74 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %73, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = icmp eq i32* %72, %75
  store i32 1183966529, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator.10"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator.10"*, align 8
  store %"struct.std::_Deque_iterator.10"* %0, %"struct.std::_Deque_iterator.10"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator.10"*, %"struct.std::_Deque_iterator.10"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque.8"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque.8"*, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %2, align 8
  %3 = load %"class.std::deque.8"*, %"class.std::deque.8"** %2, align 8
  %4 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base.9"* %4) #3
  %6 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %7 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.2"* dereferenceable(1) %5, i32* %10)
  %11 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %12 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %13 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"* %11, i32* %16) #3
  %17 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %18 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18, i32 0, i32 2
  %20 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %21 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %19, i32** %25) #3
  %26 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %27 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %28, i32 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %"class.std::deque.8"* %3 to %"class.std::_Deque_base.9"*
  %32 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %33, i32 0, i32 0
  store i32* %30, i32** %34, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.3"*, i32*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.390
  %6 = load i32, i32* @y.391
  %7 = sub i32 %5, -433450037
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -433450037
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 458879901, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 458879901, label %19
    i32 -1473857424, label %39
    i32 1543076520, label %58
    i32 -608096757, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1473857424, i32 -608096757
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load i32, i32* @x.390
  %44 = load i32, i32* @y.391
  %45 = sub i32 %43, -1094322976
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1094322976
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1543076520, i32 -608096757
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %61 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store i32* %1, i32** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store i32 -1473857424, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.392
  %6 = load i32, i32* @y.393
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 554234792, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %94
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 554234792, label %18
    i32 -130268806, label %26
    i32 48772816, label %73
    i32 588669475, label %74
  ]

; <label>:17:                                     ; preds = %15
  br label %94

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -130268806, i32 588669475
  store i32 %25, i32* %14
  br label %94

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator"*, align 8
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %27, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %27, align 8
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %31, i32 0, i32 0
  %33 = load %struct.Edge*, %struct.Edge** %32, align 8
  store %struct.Edge* %33, %struct.Edge** %30, align 8
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 1
  %35 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %36 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %35, i32 0, i32 1
  %37 = load %struct.Edge*, %struct.Edge** %36, align 8
  store %struct.Edge* %37, %struct.Edge** %34, align 8
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 2
  %39 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 2
  %41 = load %struct.Edge*, %struct.Edge** %40, align 8
  store %struct.Edge* %41, %struct.Edge** %38, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 3
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 3
  %45 = load %struct.Edge**, %struct.Edge*** %44, align 8
  store %struct.Edge** %45, %struct.Edge*** %42, align 8
  %46 = load i32, i32* @x.392
  %47 = load i32, i32* @y.393
  %48 = sub i32 %46, 1449455918
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1449455918
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 48772816, i32 588669475
  store i32 %72, i32* %14
  br label %94

; <label>:73:                                     ; preds = %15
  ret void

; <label>:74:                                     ; preds = %15
  %75 = alloca %"struct.std::_Deque_iterator"*, align 8
  %76 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %75, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %76, align 8
  %77 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %75, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 0
  %79 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %79, i32 0, i32 0
  %81 = load %struct.Edge*, %struct.Edge** %80, align 8
  store %struct.Edge* %81, %struct.Edge** %78, align 8
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 1
  %83 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 1
  %85 = load %struct.Edge*, %struct.Edge** %84, align 8
  store %struct.Edge* %85, %struct.Edge** %82, align 8
  %86 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 2
  %87 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %88 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %87, i32 0, i32 2
  %89 = load %struct.Edge*, %struct.Edge** %88, align 8
  store %struct.Edge* %89, %struct.Edge** %86, align 8
  %90 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %77, i32 0, i32 3
  %91 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %76, align 8
  %92 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %91, i32 0, i32 3
  %93 = load %struct.Edge**, %struct.Edge*** %92, align 8
  store %struct.Edge** %93, %struct.Edge*** %90, align 8
  store i32 -130268806, i32* %14
  br label %94

; <label>:94:                                     ; preds = %74, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqI4EdgeRS0_PS0_EbRKSt15_Deque_iteratorIT_T0_T1_ES9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load %struct.Edge*, %struct.Edge** %9, align 8
  %11 = icmp eq %struct.Edge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.2"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  %8 = bitcast %"class.std::allocator.2"* %7 to %"class.__gnu_cxx::new_allocator.3"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque.8"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque.8"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque.8"*, %"class.std::deque.8"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque.8"* %7, i64 1)
  %8 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base.9"* %8)
  %10 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %11 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %17 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.2"*
  %19 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %20 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %87

; <label>:26:                                     ; preds = %2
  %27 = load i32, i32* @x.398
  %28 = load i32, i32* @y.399
  %29 = add i32 %27, 1311428182
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1311428182
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %269

; <label>:53:                                     ; preds = %26, %269
  %54 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %55 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %55, i32 0, i32 3
  %57 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %58 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %57, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %58, i32 0, i32 3
  %60 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %59, i32 0, i32 3
  %61 = load i32**, i32*** %60, align 8
  %62 = getelementptr inbounds i32*, i32** %61, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %56, i32** %62) #3
  %63 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %64 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 3
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %65, i32 0, i32 1
  %67 = load i32*, i32** %66, align 8
  %68 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %69 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 3
  %71 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %70, i32 0, i32 0
  store i32* %67, i32** %71, align 8
  %72 = load i32, i32* @x.398
  %73 = load i32, i32* @y.399
  %74 = sub i32 %72, -2030940657
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -2030940657
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %269

; <label>:86:                                     ; preds = %53
  br label %176

; <label>:87:                                     ; preds = %2
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %5, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %6, align 4
  br label %91

; <label>:91:                                     ; preds = %87
  %92 = load i32, i32* @x.398
  %93 = load i32, i32* @y.399
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %288

; <label>:105:                                    ; preds = %91, %288
  %106 = load i8*, i8** %5, align 8
  %107 = call i8* @__cxa_begin_catch(i8* %106) #3
  %108 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %109 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %110 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %110, i32 0, i32 3
  %112 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %111, i32 0, i32 3
  %113 = load i32**, i32*** %112, align 8
  %114 = getelementptr inbounds i32*, i32** %113, i64 1
  %115 = load i32*, i32** %114, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"* %108, i32* %115) #3
  %116 = load i32, i32* @x.398
  %117 = load i32, i32* @y.399
  %118 = add i32 %116, -1229611555
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, -1229611555
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %288

; <label>:142:                                    ; preds = %105
  invoke void @__cxa_rethrow() #12
          to label %268 unwind label %143

; <label>:143:                                    ; preds = %142
  %144 = load i32, i32* @x.398
  %145 = load i32, i32* @y.399
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  br i1 %155, label %157, label %299

; <label>:157:                                    ; preds = %143, %299
  %158 = landingpad { i8*, i32 }
          cleanup
  %159 = extractvalue { i8*, i32 } %158, 0
  store i8* %159, i8** %5, align 8
  %160 = extractvalue { i8*, i32 } %158, 1
  store i32 %160, i32* %6, align 4
  %161 = load i32, i32* @x.398
  %162 = load i32, i32* @y.399
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = and i1 %168, %169
  %171 = xor i1 %168, %169
  %172 = or i1 %170, %171
  %173 = or i1 %168, %169
  br i1 %172, label %174, label %299

; <label>:174:                                    ; preds = %157
  invoke void @__cxa_end_catch()
          to label %175 unwind label %265

; <label>:175:                                    ; preds = %174
  br label %207

; <label>:176:                                    ; preds = %86
  %177 = load i32, i32* @x.398
  %178 = load i32, i32* @y.399
  %179 = add i32 %177, 888188387
  %180 = sub i32 %179, 1
  %181 = sub i32 %180, 888188387
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = and i1 %185, %186
  %188 = xor i1 %185, %186
  %189 = or i1 %187, %188
  %190 = or i1 %185, %186
  br i1 %189, label %191, label %303

; <label>:191:                                    ; preds = %176, %303
  %192 = load i32, i32* @x.398
  %193 = load i32, i32* @y.399
  %194 = add i32 %192, 674801455
  %195 = sub i32 %194, 1
  %196 = sub i32 %195, 674801455
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  br i1 %204, label %206, label %303

; <label>:206:                                    ; preds = %191
  ret void

; <label>:207:                                    ; preds = %175
  %208 = load i32, i32* @x.398
  %209 = load i32, i32* @y.399
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 true, true
  %220 = and i1 %217, true
  %221 = and i1 %215, %219
  %222 = and i1 %218, true
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 true, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %304

; <label>:233:                                    ; preds = %207, %304
  %234 = load i8*, i8** %5, align 8
  %235 = load i32, i32* %6, align 4
  %236 = insertvalue { i8*, i32 } undef, i8* %234, 0
  %237 = insertvalue { i8*, i32 } %236, i32 %235, 1
  %238 = load i32, i32* @x.398
  %239 = load i32, i32* @y.399
  %240 = add i32 %238, 423145170
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 423145170
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = xor i1 %246, true
  %249 = xor i1 %247, true
  %250 = xor i1 false, true
  %251 = and i1 %248, false
  %252 = and i1 %246, %250
  %253 = and i1 %249, false
  %254 = and i1 %247, %250
  %255 = or i1 %251, %252
  %256 = or i1 %253, %254
  %257 = xor i1 %255, %256
  %258 = or i1 %248, %249
  %259 = xor i1 %258, true
  %260 = or i1 false, %250
  %261 = and i1 %259, %260
  %262 = or i1 %257, %261
  %263 = or i1 %246, %247
  br i1 %262, label %264, label %304

; <label>:264:                                    ; preds = %233
  resume { i8*, i32 } %237

; <label>:265:                                    ; preds = %174
  %266 = landingpad { i8*, i32 }
          catch i8* null
  %267 = extractvalue { i8*, i32 } %266, 0
  call void @__clang_call_terminate(i8* %267) #11
  unreachable

; <label>:268:                                    ; preds = %142
  unreachable

; <label>:269:                                    ; preds = %53, %26
  %270 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %271 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %271, i32 0, i32 3
  %273 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %274 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %273, i32 0, i32 0
  %275 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %274, i32 0, i32 3
  %276 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %275, i32 0, i32 3
  %277 = load i32**, i32*** %276, align 8
  %278 = getelementptr inbounds i32*, i32** %277, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %272, i32** %278) #3
  %279 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %280 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %280, i32 0, i32 3
  %282 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %281, i32 0, i32 1
  %283 = load i32*, i32** %282, align 8
  %284 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %285 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %285, i32 0, i32 3
  %287 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %286, i32 0, i32 0
  store i32* %283, i32** %287, align 8
  br label %53

; <label>:288:                                    ; preds = %105, %91
  %289 = load i8*, i8** %5, align 8
  %290 = call i8* @__cxa_begin_catch(i8* %289) #3
  %291 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %292 = bitcast %"class.std::deque.8"* %7 to %"class.std::_Deque_base.9"*
  %293 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %293, i32 0, i32 3
  %295 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %294, i32 0, i32 3
  %296 = load i32**, i32*** %295, align 8
  %297 = getelementptr inbounds i32*, i32** %296, i64 1
  %298 = load i32*, i32** %297, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base.9"* %291, i32* %298) #3
  br label %105

; <label>:299:                                    ; preds = %157, %143
  %300 = landingpad { i8*, i32 }
          cleanup
  %301 = extractvalue { i8*, i32 } %300, 0
  store i8* %301, i8** %5, align 8
  %302 = extractvalue { i8*, i32 } %300, 1
  store i32 %302, i32* %6, align 4
  br label %157

; <label>:303:                                    ; preds = %191, %176
  br label %191

; <label>:304:                                    ; preds = %233, %207
  %305 = load i8*, i8** %5, align 8
  %306 = load i32, i32* %6, align 4
  %307 = insertvalue { i8*, i32 } undef, i8* %305, 0
  %308 = insertvalue { i8*, i32 } %307, i32 %306, 1
  br label %233
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque.8"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque.8"*
  %6 = alloca %"class.std::deque.8"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque.8"*, %"class.std::deque.8"** %6, align 8
  store %"class.std::deque.8"* %8, %"class.std::deque.8"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, %9
  %11 = sub i64 0, 1
  %12 = add i64 %10, %11
  %13 = sub i64 0, %12
  %14 = add i64 %9, 1
  store i64 %13, i64* %4
  %15 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %5
  %16 = bitcast %"class.std::deque.8"* %15 to %"class.std::_Deque_base.9"*
  %17 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %5
  %21 = bitcast %"class.std::deque.8"* %20 to %"class.std::_Deque_base.9"*
  %22 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  %26 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %5
  %27 = bitcast %"class.std::deque.8"* %26 to %"class.std::_Deque_base.9"*
  %28 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %25 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = add i64 %31, -520199437038152890
  %34 = sub i64 %33, %32
  %35 = sub i64 %34, -520199437038152890
  %36 = sub i64 %31, %32
  %37 = sdiv exact i64 %35, 8
  %38 = sub i64 0, %37
  %39 = add i64 %19, %38
  %40 = sub i64 %19, %37
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 1282659328, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %119
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 1282659328, label %45
    i32 -1570731270, label %50
    i32 1535995116, label %65
    i32 1708392961, label %82
    i32 469624008, label %83
    i32 603933645, label %99
    i32 -1567935184, label %114
    i32 -654714877, label %115
    i32 1572911962, label %118
  ]

; <label>:44:                                     ; preds = %42
  br label %119

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 -1570731270, i32 469624008
  store i32 %49, i32* %41
  br label %119

; <label>:50:                                     ; preds = %42
  %51 = load i32, i32* @x.404
  %52 = load i32, i32* @y.405
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1535995116, i32 -654714877
  store i32 %64, i32* %41
  br label %119

; <label>:65:                                     ; preds = %42
  %66 = load i64, i64* %7, align 8
  %67 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque.8"* %67, i64 %66, i1 zeroext false)
  %68 = load i32, i32* @x.404
  %69 = load i32, i32* @y.405
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1708392961, i32 -654714877
  store i32 %81, i32* %41
  br label %119

; <label>:82:                                     ; preds = %42
  store i32 469624008, i32* %41
  br label %119

; <label>:83:                                     ; preds = %42
  %84 = load i32, i32* @x.404
  %85 = load i32, i32* @y.405
  %86 = sub i32 %84, -708581499
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -708581499
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  %98 = select i1 %96, i32 603933645, i32 1572911962
  store i32 %98, i32* %41
  br label %119

; <label>:99:                                     ; preds = %42
  %100 = load i32, i32* @x.404
  %101 = load i32, i32* @y.405
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -1567935184, i32 1572911962
  store i32 %113, i32* %41
  br label %119

; <label>:114:                                    ; preds = %42
  ret void

; <label>:115:                                    ; preds = %42
  %116 = load i64, i64* %7, align 8
  %117 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque.8"* %117, i64 %116, i1 zeroext false)
  store i32 1535995116, i32* %41
  br label %119

; <label>:118:                                    ; preds = %42
  store i32 603933645, i32* %41
  br label %119

; <label>:119:                                    ; preds = %118, %115, %99, %83, %82, %65, %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque.8"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**
  %6 = alloca i64
  %7 = alloca i32**
  %8 = alloca i64
  %9 = alloca i64
  %10 = alloca %"class.std::deque.8"*
  %11 = alloca %"class.std::deque.8"*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i8, align 1
  %14 = alloca i64, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  %17 = alloca i64, align 8
  %18 = alloca i32**, align 8
  store %"class.std::deque.8"* %0, %"class.std::deque.8"** %11, align 8
  store i64 %1, i64* %12, align 8
  %19 = zext i1 %2 to i8
  store i8 %19, i8* %13, align 1
  %20 = load %"class.std::deque.8"*, %"class.std::deque.8"** %11, align 8
  store %"class.std::deque.8"* %20, %"class.std::deque.8"** %10
  %21 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %22 = bitcast %"class.std::deque.8"* %21 to %"class.std::_Deque_base.9"*
  %23 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %23, i32 0, i32 3
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %24, i32 0, i32 3
  %26 = load i32**, i32*** %25, align 8
  %27 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %28 = bitcast %"class.std::deque.8"* %27 to %"class.std::_Deque_base.9"*
  %29 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %28, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 2
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %30, i32 0, i32 3
  %32 = load i32**, i32*** %31, align 8
  %33 = ptrtoint i32** %26 to i64
  %34 = ptrtoint i32** %32 to i64
  %35 = add i64 %33, 4740571868710403549
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, 4740571868710403549
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 8
  %40 = add i64 %39, 964309430785120073
  %41 = add i64 %40, 1
  %42 = sub i64 %41, 964309430785120073
  %43 = add nsw i64 %39, 1
  store i64 %42, i64* %14, align 8
  %44 = load i64, i64* %14, align 8
  %45 = load i64, i64* %12, align 8
  %46 = sub i64 0, %44
  %47 = sub i64 0, %45
  %48 = add i64 %46, %47
  %49 = sub i64 0, %48
  %50 = add i64 %44, %45
  store i64 %49, i64* %15, align 8
  %51 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %52 = bitcast %"class.std::deque.8"* %51 to %"class.std::_Deque_base.9"*
  %53 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  store i64 %55, i64* %9
  %56 = load i64, i64* %15, align 8
  %57 = mul i64 2, %56
  store i64 %57, i64* %8
  %58 = alloca i32
  store i32 2001902609, i32* %58
  %59 = alloca i64
  %60 = alloca i64
  br label %61

; <label>:61:                                     ; preds = %3, %433
  %62 = load i32, i32* %58
  switch i32 %62, label %63 [
    i32 2001902609, label %64
    i32 1335378913, label %69
    i32 1270560412, label %90
    i32 -669390680, label %118
    i32 -1286507527, label %135
    i32 -1169620366, label %137
    i32 -985960482, label %165
    i32 -1629757577, label %193
    i32 -591585577, label %194
    i32 1029148592, label %207
    i32 -55294751, label %223
    i32 1149395592, label %241
    i32 266584027, label %242
    i32 -896842573, label %275
    i32 937069895, label %277
    i32 -458118347, label %278
    i32 1676724793, label %307
    i32 -414233490, label %374
    i32 776107226, label %375
    i32 -220734152, label %389
    i32 1347069670, label %391
    i32 850707181, label %392
  ]

; <label>:63:                                     ; preds = %61
  br label %433

; <label>:64:                                     ; preds = %61
  %65 = load volatile i64, i64* %9
  %66 = load volatile i64, i64* %8
  %67 = icmp ugt i64 %65, %66
  %68 = select i1 %67, i32 1335378913, i32 266584027
  store i32 %68, i32* %58
  br label %433

; <label>:69:                                     ; preds = %61
  %70 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %71 = bitcast %"class.std::deque.8"* %70 to %"class.std::_Deque_base.9"*
  %72 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 0
  %74 = load i32**, i32*** %73, align 8
  %75 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %76 = bitcast %"class.std::deque.8"* %75 to %"class.std::_Deque_base.9"*
  %77 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %77, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = load i64, i64* %15, align 8
  %81 = sub i64 %79, -726677889211822221
  %82 = sub i64 %81, %80
  %83 = add i64 %82, -726677889211822221
  %84 = sub i64 %79, %80
  %85 = udiv i64 %83, 2
  %86 = getelementptr inbounds i32*, i32** %74, i64 %85
  store i32** %86, i32*** %7
  %87 = load i8, i8* %13, align 1
  %88 = trunc i8 %87 to i1
  %89 = select i1 %88, i32 1270560412, i32 -1169620366
  store i32 %89, i32* %58
  br label %433

; <label>:90:                                     ; preds = %61
  %91 = load i32, i32* @x.406
  %92 = load i32, i32* @y.407
  %93 = add i32 %91, -1008111323
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1008111323
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 true, true
  %104 = and i1 %101, true
  %105 = and i1 %99, %103
  %106 = and i1 %102, true
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 true, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -669390680, i32 -220734152
  store i32 %117, i32* %58
  br label %433

; <label>:118:                                    ; preds = %61
  %119 = load i64, i64* %12, align 8
  store i64 %119, i64* %6
  %120 = load i32, i32* @x.406
  %121 = load i32, i32* @y.407
  %122 = sub i32 %120, -206125075
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -206125075
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -1286507527, i32 -220734152
  store i32 %134, i32* %58
  br label %433

; <label>:135:                                    ; preds = %61
  store i32 -591585577, i32* %58
  %136 = load volatile i64, i64* %6
  store i64 %136, i64* %59
  br label %433

; <label>:137:                                    ; preds = %61
  %138 = load i32, i32* @x.406
  %139 = load i32, i32* @y.407
  %140 = sub i32 %138, 313074833
  %141 = sub i32 %140, 1
  %142 = add i32 %141, 313074833
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 false, true
  %151 = and i1 %148, false
  %152 = and i1 %146, %150
  %153 = and i1 %149, false
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 false, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  %164 = select i1 %162, i32 -985960482, i32 1347069670
  store i32 %164, i32* %58
  br label %433

; <label>:165:                                    ; preds = %61
  %166 = load i32, i32* @x.406
  %167 = load i32, i32* @y.407
  %168 = sub i32 %166, -310474351
  %169 = sub i32 %168, 1
  %170 = add i32 %169, -310474351
  %171 = sub i32 %166, 1
  %172 = mul i32 %166, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %167, 10
  %176 = xor i1 %174, true
  %177 = xor i1 %175, true
  %178 = xor i1 false, true
  %179 = and i1 %176, false
  %180 = and i1 %174, %178
  %181 = and i1 %177, false
  %182 = and i1 %175, %178
  %183 = or i1 %179, %180
  %184 = or i1 %181, %182
  %185 = xor i1 %183, %184
  %186 = or i1 %176, %177
  %187 = xor i1 %186, true
  %188 = or i1 false, %178
  %189 = and i1 %187, %188
  %190 = or i1 %185, %189
  %191 = or i1 %174, %175
  %192 = select i1 %190, i32 -1629757577, i32 1347069670
  store i32 %192, i32* %58
  br label %433

; <label>:193:                                    ; preds = %61
  store i32 -591585577, i32* %58
  store i64 0, i64* %59
  br label %433

; <label>:194:                                    ; preds = %61
  %195 = load i64, i64* %59
  %196 = load volatile i32**, i32*** %7
  %197 = getelementptr inbounds i32*, i32** %196, i64 %195
  store i32** %197, i32*** %16, align 8
  %198 = load i32**, i32*** %16, align 8
  %199 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %200 = bitcast %"class.std::deque.8"* %199 to %"class.std::_Deque_base.9"*
  %201 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %201, i32 0, i32 2
  %203 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %202, i32 0, i32 3
  %204 = load i32**, i32*** %203, align 8
  %205 = icmp ult i32** %198, %204
  %206 = select i1 %205, i32 1029148592, i32 -55294751
  store i32 %206, i32* %58
  br label %433

; <label>:207:                                    ; preds = %61
  %208 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %209 = bitcast %"class.std::deque.8"* %208 to %"class.std::_Deque_base.9"*
  %210 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %210, i32 0, i32 2
  %212 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %211, i32 0, i32 3
  %213 = load i32**, i32*** %212, align 8
  %214 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %215 = bitcast %"class.std::deque.8"* %214 to %"class.std::_Deque_base.9"*
  %216 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %216, i32 0, i32 3
  %218 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %217, i32 0, i32 3
  %219 = load i32**, i32*** %218, align 8
  %220 = getelementptr inbounds i32*, i32** %219, i64 1
  %221 = load i32**, i32*** %16, align 8
  %222 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %213, i32** %220, i32** %221)
  store i32 1149395592, i32* %58
  br label %433

; <label>:223:                                    ; preds = %61
  %224 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %225 = bitcast %"class.std::deque.8"* %224 to %"class.std::_Deque_base.9"*
  %226 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %225, i32 0, i32 0
  %227 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %226, i32 0, i32 2
  %228 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %227, i32 0, i32 3
  %229 = load i32**, i32*** %228, align 8
  %230 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %231 = bitcast %"class.std::deque.8"* %230 to %"class.std::_Deque_base.9"*
  %232 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %232, i32 0, i32 3
  %234 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %233, i32 0, i32 3
  %235 = load i32**, i32*** %234, align 8
  %236 = getelementptr inbounds i32*, i32** %235, i64 1
  %237 = load i32**, i32*** %16, align 8
  %238 = load i64, i64* %14, align 8
  %239 = getelementptr inbounds i32*, i32** %237, i64 %238
  %240 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %229, i32** %236, i32** %239)
  store i32 1149395592, i32* %58
  br label %433

; <label>:241:                                    ; preds = %61
  store i32 776107226, i32* %58
  br label %433

; <label>:242:                                    ; preds = %61
  %243 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %244 = bitcast %"class.std::deque.8"* %243 to %"class.std::_Deque_base.9"*
  %245 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %245, i32 0, i32 1
  %247 = load i64, i64* %246, align 8
  %248 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %249 = bitcast %"class.std::deque.8"* %248 to %"class.std::_Deque_base.9"*
  %250 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %249, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %250, i32 0, i32 1
  %252 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %251, i64* dereferenceable(8) %12)
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 0, %253
  %255 = sub i64 %247, %254
  %256 = add i64 %247, %253
  %257 = sub i64 0, 2
  %258 = sub i64 %255, %257
  %259 = add i64 %255, 2
  store i64 %258, i64* %17, align 8
  %260 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %261 = bitcast %"class.std::deque.8"* %260 to %"class.std::_Deque_base.9"*
  %262 = load i64, i64* %17, align 8
  %263 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base.9"* %261, i64 %262)
  store i32** %263, i32*** %18, align 8
  %264 = load i32**, i32*** %18, align 8
  %265 = load i64, i64* %17, align 8
  %266 = load i64, i64* %15, align 8
  %267 = sub i64 0, %266
  %268 = add i64 %265, %267
  %269 = sub i64 %265, %266
  %270 = udiv i64 %268, 2
  %271 = getelementptr inbounds i32*, i32** %264, i64 %270
  store i32** %271, i32*** %5
  %272 = load i8, i8* %13, align 1
  %273 = trunc i8 %272 to i1
  %274 = select i1 %273, i32 -896842573, i32 937069895
  store i32 %274, i32* %58
  br label %433

; <label>:275:                                    ; preds = %61
  %276 = load i64, i64* %12, align 8
  store i32 -458118347, i32* %58
  store i64 %276, i64* %60
  br label %433

; <label>:277:                                    ; preds = %61
  store i32 -458118347, i32* %58
  store i64 0, i64* %60
  br label %433

; <label>:278:                                    ; preds = %61
  %279 = load i64, i64* %60
  store i64 %279, i64* %4
  %280 = load i32, i32* @x.406
  %281 = load i32, i32* @y.407
  %282 = add i32 %280, 245297202
  %283 = sub i32 %282, 1
  %284 = sub i32 %283, 245297202
  %285 = sub i32 %280, 1
  %286 = mul i32 %280, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %281, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 true, true
  %293 = and i1 %290, true
  %294 = and i1 %288, %292
  %295 = and i1 %291, true
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 true, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  %306 = select i1 %304, i32 1676724793, i32 850707181
  store i32 %306, i32* %58
  br label %433

; <label>:307:                                    ; preds = %61
  %308 = load volatile i32**, i32*** %5
  %309 = load volatile i64, i64* %4
  %310 = getelementptr inbounds i32*, i32** %308, i64 %309
  store i32** %310, i32*** %16, align 8
  %311 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %312 = bitcast %"class.std::deque.8"* %311 to %"class.std::_Deque_base.9"*
  %313 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %313, i32 0, i32 2
  %315 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %314, i32 0, i32 3
  %316 = load i32**, i32*** %315, align 8
  %317 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %318 = bitcast %"class.std::deque.8"* %317 to %"class.std::_Deque_base.9"*
  %319 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %318, i32 0, i32 0
  %320 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %319, i32 0, i32 3
  %321 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %320, i32 0, i32 3
  %322 = load i32**, i32*** %321, align 8
  %323 = getelementptr inbounds i32*, i32** %322, i64 1
  %324 = load i32**, i32*** %16, align 8
  %325 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %316, i32** %323, i32** %324)
  %326 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %327 = bitcast %"class.std::deque.8"* %326 to %"class.std::_Deque_base.9"*
  %328 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %329 = bitcast %"class.std::deque.8"* %328 to %"class.std::_Deque_base.9"*
  %330 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %329, i32 0, i32 0
  %331 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %330, i32 0, i32 0
  %332 = load i32**, i32*** %331, align 8
  %333 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %334 = bitcast %"class.std::deque.8"* %333 to %"class.std::_Deque_base.9"*
  %335 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %335, i32 0, i32 1
  %337 = load i64, i64* %336, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %327, i32** %332, i64 %337) #3
  %338 = load i32**, i32*** %18, align 8
  %339 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %340 = bitcast %"class.std::deque.8"* %339 to %"class.std::_Deque_base.9"*
  %341 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %340, i32 0, i32 0
  %342 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %341, i32 0, i32 0
  store i32** %338, i32*** %342, align 8
  %343 = load i64, i64* %17, align 8
  %344 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %345 = bitcast %"class.std::deque.8"* %344 to %"class.std::_Deque_base.9"*
  %346 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %345, i32 0, i32 0
  %347 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %346, i32 0, i32 1
  store i64 %343, i64* %347, align 8
  %348 = load i32, i32* @x.406
  %349 = load i32, i32* @y.407
  %350 = sub i32 0, 1
  %351 = add i32 %348, %350
  %352 = sub i32 %348, 1
  %353 = mul i32 %348, %351
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %349, 10
  %357 = xor i1 %355, true
  %358 = xor i1 %356, true
  %359 = xor i1 false, true
  %360 = and i1 %357, false
  %361 = and i1 %355, %359
  %362 = and i1 %358, false
  %363 = and i1 %356, %359
  %364 = or i1 %360, %361
  %365 = or i1 %362, %363
  %366 = xor i1 %364, %365
  %367 = or i1 %357, %358
  %368 = xor i1 %367, true
  %369 = or i1 false, %359
  %370 = and i1 %368, %369
  %371 = or i1 %366, %370
  %372 = or i1 %355, %356
  %373 = select i1 %371, i32 -414233490, i32 850707181
  store i32 %373, i32* %58
  br label %433

; <label>:374:                                    ; preds = %61
  store i32 776107226, i32* %58
  br label %433

; <label>:375:                                    ; preds = %61
  %376 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %377 = bitcast %"class.std::deque.8"* %376 to %"class.std::_Deque_base.9"*
  %378 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %377, i32 0, i32 0
  %379 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %378, i32 0, i32 2
  %380 = load i32**, i32*** %16, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %379, i32** %380) #3
  %381 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %382 = bitcast %"class.std::deque.8"* %381 to %"class.std::_Deque_base.9"*
  %383 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %383, i32 0, i32 3
  %385 = load i32**, i32*** %16, align 8
  %386 = load i64, i64* %14, align 8
  %387 = getelementptr inbounds i32*, i32** %385, i64 %386
  %388 = getelementptr inbounds i32*, i32** %387, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator.10"* %384, i32** %388) #3
  ret void

; <label>:389:                                    ; preds = %61
  %390 = load i64, i64* %12, align 8
  store i32 -669390680, i32* %58
  br label %433

; <label>:391:                                    ; preds = %61
  store i32 -985960482, i32* %58
  br label %433

; <label>:392:                                    ; preds = %61
  %393 = load volatile i32**, i32*** %5
  %394 = load volatile i64, i64* %4
  %395 = getelementptr inbounds i32*, i32** %393, i64 %394
  store i32** %395, i32*** %16, align 8
  %396 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %397 = bitcast %"class.std::deque.8"* %396 to %"class.std::_Deque_base.9"*
  %398 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %398, i32 0, i32 2
  %400 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %399, i32 0, i32 3
  %401 = load i32**, i32*** %400, align 8
  %402 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %403 = bitcast %"class.std::deque.8"* %402 to %"class.std::_Deque_base.9"*
  %404 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %403, i32 0, i32 0
  %405 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %404, i32 0, i32 3
  %406 = getelementptr inbounds %"struct.std::_Deque_iterator.10", %"struct.std::_Deque_iterator.10"* %405, i32 0, i32 3
  %407 = load i32**, i32*** %406, align 8
  %408 = getelementptr inbounds i32*, i32** %407, i64 1
  %409 = load i32**, i32*** %16, align 8
  %410 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %401, i32** %408, i32** %409)
  %411 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %412 = bitcast %"class.std::deque.8"* %411 to %"class.std::_Deque_base.9"*
  %413 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %414 = bitcast %"class.std::deque.8"* %413 to %"class.std::_Deque_base.9"*
  %415 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %414, i32 0, i32 0
  %416 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %415, i32 0, i32 0
  %417 = load i32**, i32*** %416, align 8
  %418 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %419 = bitcast %"class.std::deque.8"* %418 to %"class.std::_Deque_base.9"*
  %420 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %419, i32 0, i32 0
  %421 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %420, i32 0, i32 1
  %422 = load i64, i64* %421, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base.9"* %412, i32** %417, i64 %422) #3
  %423 = load i32**, i32*** %18, align 8
  %424 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %425 = bitcast %"class.std::deque.8"* %424 to %"class.std::_Deque_base.9"*
  %426 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %426, i32 0, i32 0
  store i32** %423, i32*** %427, align 8
  %428 = load i64, i64* %17, align 8
  %429 = load volatile %"class.std::deque.8"*, %"class.std::deque.8"** %10
  %430 = bitcast %"class.std::deque.8"* %429 to %"class.std::_Deque_base.9"*
  %431 = getelementptr inbounds %"class.std::_Deque_base.9", %"class.std::_Deque_base.9"* %430, i32 0, i32 0
  %432 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %431, i32 0, i32 1
  store i64 %428, i64* %432, align 8
  store i32 1676724793, i32* %58
  br label %433

; <label>:433:                                    ; preds = %392, %391, %389, %374, %307, %278, %277, %275, %242, %241, %223, %207, %194, %193, %165, %137, %135, %118, %90, %69, %64, %63
  br label %61
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.408
  %8 = load i32, i32* @y.409
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1169788748, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1169788748, label %20
    i32 -422101006, label %28
    i32 -507561209, label %65
    i32 -540546780, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -422101006, i32 -540546780
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca i32**, align 8
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  store i32** %0, i32*** %29, align 8
  store i32** %1, i32*** %30, align 8
  store i32** %2, i32*** %31, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %32)
  %34 = load i32**, i32*** %30, align 8
  %35 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %34)
  %36 = load i32**, i32*** %31, align 8
  %37 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %33, i32** %35, i32** %36)
  store i32** %37, i32*** %4
  %38 = load i32, i32* @x.408
  %39 = load i32, i32* @y.409
  %40 = sub i32 %38, 1752274076
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1752274076
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -507561209, i32 -540546780
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %17
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  %71 = load i32**, i32*** %68, align 8
  %72 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %71)
  %73 = load i32**, i32*** %69, align 8
  %74 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %73)
  %75 = load i32**, i32*** %70, align 8
  %76 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %72, i32** %74, i32** %75)
  store i32 -422101006, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.410
  %8 = load i32, i32* @y.411
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -384893534, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -384893534, label %20
    i32 -1308539101, label %40
    i32 -314270718, label %65
    i32 1762633779, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1308539101, i32 1762633779
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  %44 = load i32**, i32*** %41, align 8
  %45 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %44)
  %46 = load i32**, i32*** %42, align 8
  %47 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %46)
  %48 = load i32**, i32*** %43, align 8
  %49 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %45, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.410
  %51 = load i32, i32* @y.411
  %52 = sub i32 %50, 1371113267
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1371113267
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -314270718, i32 1762633779
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %17
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  %71 = load i32**, i32*** %68, align 8
  %72 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %71)
  %73 = load i32**, i32*** %69, align 8
  %74 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %73)
  %75 = load i32**, i32*** %70, align 8
  %76 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %72, i32** %74, i32** %75)
  store i32 -1308539101, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.412
  %8 = load i32, i32* @y.413
  %9 = add i32 %7, 51652935
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 51652935
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -178137896, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %67
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -178137896, label %21
    i32 687096269, label %29
    i32 -76112818, label %54
    i32 1622857894, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %67

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 687096269, i32 1622857894
  store i32 %28, i32* %17
  br label %67

; <label>:29:                                     ; preds = %18
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i32**, align 8
  store i32** %0, i32*** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i32** %2, i32*** %32, align 8
  %33 = load i32**, i32*** %30, align 8
  %34 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %33)
  %35 = load i32**, i32*** %31, align 8
  %36 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %35)
  %37 = load i32**, i32*** %32, align 8
  %38 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %37)
  %39 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %34, i32** %36, i32** %38)
  store i32** %39, i32*** %4
  %40 = load i32, i32* @x.412
  %41 = load i32, i32* @y.413
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -76112818, i32 1622857894
  store i32 %53, i32* %17
  br label %67

; <label>:54:                                     ; preds = %18
  %55 = load volatile i32**, i32*** %4
  ret i32** %55

; <label>:56:                                     ; preds = %18
  %57 = alloca i32**, align 8
  %58 = alloca i32**, align 8
  %59 = alloca i32**, align 8
  store i32** %0, i32*** %57, align 8
  store i32** %1, i32*** %58, align 8
  store i32** %2, i32*** %59, align 8
  %60 = load i32**, i32*** %57, align 8
  %61 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %60)
  %62 = load i32**, i32*** %58, align 8
  %63 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %62)
  %64 = load i32**, i32*** %59, align 8
  %65 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %64)
  %66 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %61, i32** %63, i32** %65)
  store i32 687096269, i32* %17
  br label %67

; <label>:67:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.416
  %8 = load i32, i32* @y.417
  %9 = add i32 %7, 1209969648
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1209969648
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 182322967, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 182322967, label %21
    i32 -796186178, label %29
    i32 -1887603066, label %65
    i32 -1246540850, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -796186178, i32 -1246540850
  store i32 %28, i32* %17
  br label %76

; <label>:29:                                     ; preds = %18
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  %32 = alloca i32**, align 8
  %33 = alloca i8, align 1
  store i32** %0, i32*** %30, align 8
  store i32** %1, i32*** %31, align 8
  store i32** %2, i32*** %32, align 8
  store i8 1, i8* %33, align 1
  %34 = load i32**, i32*** %30, align 8
  %35 = load i32**, i32*** %31, align 8
  %36 = load i32**, i32*** %32, align 8
  %37 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %34, i32** %35, i32** %36)
  store i32** %37, i32*** %4
  %38 = load i32, i32* @x.416
  %39 = load i32, i32* @y.417
  %40 = sub i32 %38, 370257078
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 370257078
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1887603066, i32 -1246540850
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 -796186178, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.418
  %6 = load i32, i32* @y.419
  %7 = add i32 %5, 770460732
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 770460732
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1234526552, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1234526552, label %19
    i32 1323652596, label %39
    i32 1959797976, label %69
    i32 1392763444, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1323652596, i32 1392763444
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  %42 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %41)
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.418
  %44 = load i32, i32* @y.419
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1959797976, i32 1392763444
  store i32 %68, i32* %15
  br label %75

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32**, i32*** %2
  ret i32** %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32**, align 8
  store i32** %0, i32*** %72, align 8
  %73 = load i32**, i32*** %72, align 8
  %74 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %73)
  store i32 1323652596, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i64
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i64, align 8
  store i32** %0, i32*** %6, align 8
  store i32** %1, i32*** %7, align 8
  store i32** %2, i32*** %8, align 8
  %10 = load i32**, i32*** %7, align 8
  %11 = load i32**, i32*** %6, align 8
  %12 = ptrtoint i32** %10 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 1318485417, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %74
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1318485417, label %23
    i32 -1719882845, label %27
    i32 35279678, label %34
    i32 2101857538, label %50
    i32 -352512972, label %68
    i32 1413054042, label %70
  ]

; <label>:22:                                     ; preds = %20
  br label %74

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1719882845, i32 35279678
  store i32 %26, i32* %19
  br label %74

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %8, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %6, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %9, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 35279678, i32* %19
  br label %74

; <label>:34:                                     ; preds = %20
  %35 = load i32, i32* @x.420
  %36 = load i32, i32* @y.421
  %37 = sub i32 %35, -1809968475
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1809968475
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 2101857538, i32 1413054042
  store i32 %49, i32* %19
  br label %74

; <label>:50:                                     ; preds = %20
  %51 = load i32**, i32*** %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = getelementptr inbounds i32*, i32** %51, i64 %52
  store i32** %53, i32*** %4
  %54 = load i32, i32* @x.420
  %55 = load i32, i32* @y.421
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -352512972, i32 1413054042
  store i32 %67, i32* %19
  br label %74

; <label>:68:                                     ; preds = %20
  %69 = load volatile i32**, i32*** %4
  ret i32** %69

; <label>:70:                                     ; preds = %20
  %71 = load i32**, i32*** %8, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds i32*, i32** %71, i64 %72
  store i32 2101857538, i32* %19
  br label %74

; <label>:74:                                     ; preds = %70, %50, %34, %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #4 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32***
  %8 = alloca i32***
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.428
  %12 = load i32, i32* @y.429
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 1986077631, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %276
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1986077631, label %24
    i32 -2006383567, label %44
    i32 -1906723652, label %92
    i32 -544281499, label %95
    i32 -110331966, label %111
    i32 -1213886607, label %139
    i32 -161268603, label %163
    i32 323072715, label %165
    i32 -910963391, label %233
  ]

; <label>:23:                                     ; preds = %21
  br label %276

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -2006383567, i32 323072715
  store i32 %43, i32* %20
  br label %276

; <label>:44:                                     ; preds = %21
  %45 = alloca i32**, align 8
  store i32*** %45, i32**** %8
  %46 = alloca i32**, align 8
  %47 = alloca i32**, align 8
  store i32*** %47, i32**** %7
  %48 = alloca i64, align 8
  store i64* %48, i64** %6
  %49 = load volatile i32***, i32**** %8
  store i32** %0, i32*** %49, align 8
  store i32** %1, i32*** %46, align 8
  %50 = load volatile i32***, i32**** %7
  store i32** %2, i32*** %50, align 8
  %51 = load i32**, i32*** %46, align 8
  %52 = load volatile i32***, i32**** %8
  %53 = load i32**, i32*** %52, align 8
  %54 = ptrtoint i32** %51 to i64
  %55 = ptrtoint i32** %53 to i64
  %56 = sub i64 %54, 834100621693330362
  %57 = sub i64 %56, %55
  %58 = add i64 %57, 834100621693330362
  %59 = sub i64 %54, %55
  %60 = sdiv exact i64 %58, 8
  %61 = load volatile i64*, i64** %6
  store i64 %60, i64* %61, align 8
  %62 = load volatile i64*, i64** %6
  %63 = load i64, i64* %62, align 8
  %64 = icmp ne i64 %63, 0
  store i1 %64, i1* %5
  %65 = load i32, i32* @x.428
  %66 = load i32, i32* @y.429
  %67 = add i32 %65, 1549366516
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, 1549366516
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -1906723652, i32 323072715
  store i32 %91, i32* %20
  br label %276

; <label>:92:                                     ; preds = %21
  %93 = load volatile i1, i1* %5
  %94 = select i1 %93, i32 -544281499, i32 -110331966
  store i32 %94, i32* %20
  br label %276

; <label>:95:                                     ; preds = %21
  %96 = load volatile i32***, i32**** %7
  %97 = load i32**, i32*** %96, align 8
  %98 = load volatile i64*, i64** %6
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 0, %99
  %101 = add i64 0, %100
  %102 = sub i64 0, %99
  %103 = getelementptr inbounds i32*, i32** %97, i64 %101
  %104 = bitcast i32** %103 to i8*
  %105 = load volatile i32***, i32**** %8
  %106 = load i32**, i32*** %105, align 8
  %107 = bitcast i32** %106 to i8*
  %108 = load volatile i64*, i64** %6
  %109 = load i64, i64* %108, align 8
  %110 = mul i64 8, %109
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %104, i8* %107, i64 %110, i32 8, i1 false)
  store i32 -110331966, i32* %20
  br label %276

; <label>:111:                                    ; preds = %21
  %112 = load i32, i32* @x.428
  %113 = load i32, i32* @y.429
  %114 = sub i32 %112, -1862129679
  %115 = sub i32 %114, 1
  %116 = add i32 %115, -1862129679
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  %138 = select i1 %136, i32 -1213886607, i32 -910963391
  store i32 %138, i32* %20
  br label %276

; <label>:139:                                    ; preds = %21
  %140 = load volatile i32***, i32**** %7
  %141 = load i32**, i32*** %140, align 8
  %142 = load volatile i64*, i64** %6
  %143 = load i64, i64* %142, align 8
  %144 = sub i64 0, 8013441934568798561
  %145 = sub i64 %144, %143
  %146 = add i64 %145, 8013441934568798561
  %147 = sub i64 0, %143
  %148 = getelementptr inbounds i32*, i32** %141, i64 %146
  store i32** %148, i32*** %4
  %149 = load i32, i32* @x.428
  %150 = load i32, i32* @y.429
  %151 = sub i32 0, 1
  %152 = add i32 %149, %151
  %153 = sub i32 %149, 1
  %154 = mul i32 %149, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %150, 10
  %158 = and i1 %156, %157
  %159 = xor i1 %156, %157
  %160 = or i1 %158, %159
  %161 = or i1 %156, %157
  %162 = select i1 %160, i32 -161268603, i32 -910963391
  store i32 %162, i32* %20
  br label %276

; <label>:163:                                    ; preds = %21
  %164 = load volatile i32**, i32*** %4
  ret i32** %164

; <label>:165:                                    ; preds = %21
  %166 = alloca i32**, align 8
  %167 = alloca i32**, align 8
  %168 = alloca i32**, align 8
  %169 = alloca i64, align 8
  store i32** %0, i32*** %166, align 8
  store i32** %1, i32*** %167, align 8
  store i32** %2, i32*** %168, align 8
  %170 = load i32**, i32*** %167, align 8
  %171 = load i32**, i32*** %166, align 8
  %172 = ptrtoint i32** %170 to i64
  %173 = ptrtoint i32** %171 to i64
  %174 = sub i64 0, %172
  %175 = add i64 0, %174
  %176 = sub i64 0, %172
  %177 = sub i64 0, %173
  %178 = sub i64 %175, %177
  %179 = add i64 %175, %173
  %180 = add i64 0, 583476868546094982
  %181 = sub i64 %180, %172
  %182 = sub i64 %181, 583476868546094982
  %183 = sub i64 0, %172
  %184 = sub i64 %182, -4958400237684218010
  %185 = add i64 %184, %173
  %186 = add i64 %185, -4958400237684218010
  %187 = add i64 %182, %173
  %188 = shl i64 %172, %173
  %189 = sub i64 %172, 2419379091831970093
  %190 = sub i64 %189, %173
  %191 = add i64 %190, 2419379091831970093
  %192 = sub i64 %172, %173
  %193 = mul i64 %191, %173
  %194 = shl i64 %172, %173
  %195 = sub i64 %172, 2413523530122999546
  %196 = sub i64 %195, %173
  %197 = add i64 %196, 2413523530122999546
  %198 = sub i64 %172, %173
  %199 = mul i64 %197, %173
  %200 = shl i64 %172, %173
  %201 = sub i64 %172, -2913402749612138176
  %202 = sub i64 %201, %173
  %203 = add i64 %202, -2913402749612138176
  %204 = sub i64 %172, %173
  %205 = shl i64 %203, 8
  %206 = sub i64 0, -8921384985307950273
  %207 = sub i64 %206, %203
  %208 = add i64 %207, -8921384985307950273
  %209 = sub i64 0, %203
  %210 = add i64 %208, -522786653734878792
  %211 = add i64 %210, 8
  %212 = sub i64 %211, -522786653734878792
  %213 = add i64 %208, 8
  %214 = sub i64 0, -5785139670993093862
  %215 = sub i64 %214, %203
  %216 = add i64 %215, -5785139670993093862
  %217 = sub i64 0, %203
  %218 = sub i64 0, 8
  %219 = sub i64 %216, %218
  %220 = add i64 %216, 8
  %221 = shl i64 %203, 8
  %222 = shl i64 %203, 8
  %223 = sub i64 0, %203
  %224 = add i64 0, %223
  %225 = sub i64 0, %203
  %226 = add i64 %224, -2842972418654113611
  %227 = add i64 %226, 8
  %228 = sub i64 %227, -2842972418654113611
  %229 = add i64 %224, 8
  %230 = sdiv exact i64 %203, 8
  store i64 %230, i64* %169, align 8
  %231 = load i64, i64* %169, align 8
  %232 = icmp ne i64 %231, 0
  store i32 -2006383567, i32* %20
  br label %276

; <label>:233:                                    ; preds = %21
  %234 = load volatile i32***, i32**** %7
  %235 = load i32**, i32*** %234, align 8
  %236 = load volatile i64*, i64** %6
  %237 = load i64, i64* %236, align 8
  %238 = sub i64 0, 0
  %239 = add i64 0, %238
  %240 = sub i64 0, 0
  %241 = sub i64 0, %239
  %242 = sub i64 0, %237
  %243 = add i64 %241, %242
  %244 = sub i64 0, %243
  %245 = add i64 %239, %237
  %246 = shl i64 0, %237
  %247 = sub i64 0, -2471725388690835263
  %248 = sub i64 %247, %237
  %249 = add i64 %248, -2471725388690835263
  %250 = sub i64 0, %237
  %251 = mul i64 %249, %237
  %252 = sub i64 0, %237
  %253 = add i64 0, %252
  %254 = sub i64 0, %237
  %255 = mul i64 %253, %237
  %256 = sub i64 0, 0
  %257 = add i64 0, %256
  %258 = sub i64 0, 0
  %259 = sub i64 0, %237
  %260 = sub i64 %257, %259
  %261 = add i64 %257, %237
  %262 = sub i64 0, %237
  %263 = add i64 0, %262
  %264 = sub i64 0, %237
  %265 = mul i64 %263, %237
  %266 = add i64 0, 1990986038831645176
  %267 = sub i64 %266, %237
  %268 = sub i64 %267, 1990986038831645176
  %269 = sub i64 0, %237
  %270 = mul i64 %268, %237
  %271 = add i64 0, 1724396282862547092
  %272 = sub i64 %271, %237
  %273 = sub i64 %272, 1724396282862547092
  %274 = sub i64 0, %237
  %275 = getelementptr inbounds i32*, i32** %235, i64 %273
  store i32 -1213886607, i32* %20
  br label %276

; <label>:276:                                    ; preds = %233, %165, %139, %111, %95, %92, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EixEl(%"struct.std::_Deque_iterator"*, i64) #4 comdat align 2 {
  %3 = alloca %struct.Edge*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.430
  %7 = load i32, i32* @y.431
  %8 = sub i32 %6, -1347473146
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1347473146
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1139053418, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1139053418, label %20
    i32 415359019, label %40
    i32 1952505174, label %74
    i32 1027278587, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 415359019, i32 1027278587
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %41, align 8
  store i64 %1, i64* %42, align 8
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %45 = load i64, i64* %42, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %43, %"struct.std::_Deque_iterator"* %44, i64 %45) #3
  %46 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %43) #3
  store %struct.Edge* %46, %struct.Edge** %3
  %47 = load i32, i32* @x.430
  %48 = load i32, i32* @y.431
  %49 = sub i32 %47, 1394557695
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1394557695
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1952505174, i32 1027278587
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  %75 = load volatile %struct.Edge*, %struct.Edge** %3
  ret %struct.Edge* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"struct.std::_Deque_iterator"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %77, align 8
  store i64 %1, i64* %78, align 8
  %80 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %77, align 8
  %81 = load i64, i64* %78, align 8
  call void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* sret %79, %"struct.std::_Deque_iterator"* %80, i64 %81) #3
  %82 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %79) #3
  store i32 415359019, i32* %16
  br label %83

; <label>:83:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EplEl(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.432
  %7 = load i32, i32* @y.433
  %8 = sub i32 %6, -557776316
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -557776316
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 590265612, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 590265612, label %20
    i32 -465526802, label %28
    i32 -565802009, label %50
    i32 -1665046495, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -465526802, i32 -1665046495
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  store i64 %2, i64* %30, align 8
  %32 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %31, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i64, i64* %30, align 8
  %34 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"* %31, i64 %33) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %34) #3
  %35 = load i32, i32* @x.432
  %36 = load i32, i32* @y.433
  %37 = sub i32 %35, 824438878
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 824438878
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -565802009, i32 -1665046495
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"struct.std::_Deque_iterator"*, align 8
  %53 = alloca i64, align 8
  %54 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %52, align 8
  store i64 %2, i64* %53, align 8
  %55 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %52, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %54, %"struct.std::_Deque_iterator"* dereferenceable(32) %55) #3
  %56 = load i64, i64* %53, align 8
  %57 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"* %54, i64 %56) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %57) #3
  store i32 -465526802, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EpLEl(%"struct.std::_Deque_iterator"*, i64) #4 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca %"struct.std::_Deque_iterator"*
  %8 = alloca %"struct.std::_Deque_iterator"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %8, align 8
  store i64 %1, i64* %9, align 8
  %12 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %8, align 8
  store %"struct.std::_Deque_iterator"* %12, %"struct.std::_Deque_iterator"** %7
  %13 = load i64, i64* %9, align 8
  %14 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 0
  %16 = load %struct.Edge*, %struct.Edge** %15, align 8
  %17 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %17, i32 0, i32 1
  %19 = load %struct.Edge*, %struct.Edge** %18, align 8
  %20 = ptrtoint %struct.Edge* %16 to i64
  %21 = ptrtoint %struct.Edge* %19 to i64
  %22 = sub i64 %20, -6033111980372697349
  %23 = sub i64 %22, %21
  %24 = add i64 %23, -6033111980372697349
  %25 = sub i64 %20, %21
  %26 = sdiv exact i64 %24, 24
  %27 = sub i64 0, %26
  %28 = sub i64 %13, %27
  %29 = add nsw i64 %13, %26
  store i64 %28, i64* %10, align 8
  %30 = load i64, i64* %10, align 8
  store i64 %30, i64* %6
  %31 = alloca i32
  store i32 -754750495, i32* %31
  %32 = alloca i64
  br label %33

; <label>:33:                                     ; preds = %2, %417
  %34 = load i32, i32* %31
  switch i32 %34, label %35 [
    i32 -754750495, label %36
    i32 -401364051, label %40
    i32 -818039499, label %56
    i32 1898063168, label %75
    i32 519325352, label %78
    i32 -1501693340, label %105
    i32 -1617793356, label %125
    i32 -255653252, label %126
    i32 1944414089, label %154
    i32 433014842, label %172
    i32 138682575, label %175
    i32 -1053516257, label %179
    i32 -1387579369, label %207
    i32 -648928076, label %253
    i32 -211282132, label %255
    i32 1103713060, label %277
    i32 2022057327, label %279
    i32 555762109, label %283
    i32 2098380306, label %289
    i32 -1974199898, label %292
  ]

; <label>:35:                                     ; preds = %33
  br label %417

; <label>:36:                                     ; preds = %33
  %37 = load volatile i64, i64* %6
  %38 = icmp sge i64 %37, 0
  %39 = select i1 %38, i32 -401364051, i32 -255653252
  store i32 %39, i32* %31
  br label %417

; <label>:40:                                     ; preds = %33
  %41 = load i32, i32* @x.434
  %42 = load i32, i32* @y.435
  %43 = add i32 %41, -730491488
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -730491488
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -818039499, i32 2022057327
  store i32 %55, i32* %31
  br label %417

; <label>:56:                                     ; preds = %33
  %57 = load i64, i64* %10, align 8
  %58 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %59 = icmp slt i64 %57, %58
  store i1 %59, i1* %5
  %60 = load i32, i32* @x.434
  %61 = load i32, i32* @y.435
  %62 = sub i32 %60, 1310050586
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1310050586
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1898063168, i32 2022057327
  store i32 %74, i32* %31
  br label %417

; <label>:75:                                     ; preds = %33
  %76 = load volatile i1, i1* %5
  %77 = select i1 %76, i32 519325352, i32 -255653252
  store i32 %77, i32* %31
  br label %417

; <label>:78:                                     ; preds = %33
  %79 = load i32, i32* @x.434
  %80 = load i32, i32* @y.435
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 -1501693340, i32 555762109
  store i32 %104, i32* %31
  br label %417

; <label>:105:                                    ; preds = %33
  %106 = load i64, i64* %9, align 8
  %107 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 0
  %109 = load %struct.Edge*, %struct.Edge** %108, align 8
  %110 = getelementptr inbounds %struct.Edge, %struct.Edge* %109, i64 %106
  store %struct.Edge* %110, %struct.Edge** %108, align 8
  %111 = load i32, i32* @x.434
  %112 = load i32, i32* @y.435
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 -1617793356, i32 555762109
  store i32 %124, i32* %31
  br label %417

; <label>:125:                                    ; preds = %33
  store i32 1103713060, i32* %31
  br label %417

; <label>:126:                                    ; preds = %33
  %127 = load i32, i32* @x.434
  %128 = load i32, i32* @y.435
  %129 = sub i32 %127, 1504064450
  %130 = sub i32 %129, 1
  %131 = add i32 %130, 1504064450
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 1944414089, i32 2098380306
  store i32 %153, i32* %31
  br label %417

; <label>:154:                                    ; preds = %33
  %155 = load i64, i64* %10, align 8
  %156 = icmp sgt i64 %155, 0
  store i1 %156, i1* %4
  %157 = load i32, i32* @x.434
  %158 = load i32, i32* @y.435
  %159 = add i32 %157, -965833294
  %160 = sub i32 %159, 1
  %161 = sub i32 %160, -965833294
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 433014842, i32 2098380306
  store i32 %171, i32* %31
  br label %417

; <label>:172:                                    ; preds = %33
  %173 = load volatile i1, i1* %4
  %174 = select i1 %173, i32 138682575, i32 -1053516257
  store i32 %174, i32* %31
  br label %417

; <label>:175:                                    ; preds = %33
  %176 = load i64, i64* %10, align 8
  %177 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %178 = sdiv i64 %176, %177
  store i32 -211282132, i32* %31
  store i64 %178, i64* %32
  br label %417

; <label>:179:                                    ; preds = %33
  %180 = load i32, i32* @x.434
  %181 = load i32, i32* @y.435
  %182 = sub i32 %180, -639713427
  %183 = sub i32 %182, 1
  %184 = add i32 %183, -639713427
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 false, true
  %193 = and i1 %190, false
  %194 = and i1 %188, %192
  %195 = and i1 %191, false
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 false, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  %206 = select i1 %204, i32 -1387579369, i32 -1974199898
  store i32 %206, i32* %31
  br label %417

; <label>:207:                                    ; preds = %33
  %208 = load i64, i64* %10, align 8
  %209 = add i64 0, -6823288524536241115
  %210 = sub i64 %209, %208
  %211 = sub i64 %210, -6823288524536241115
  %212 = sub nsw i64 0, %208
  %213 = sub i64 %211, -8638451516801012550
  %214 = sub i64 %213, 1
  %215 = add i64 %214, -8638451516801012550
  %216 = sub nsw i64 %211, 1
  %217 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %218 = udiv i64 %215, %217
  %219 = add i64 0, 1855837367329683557
  %220 = sub i64 %219, %218
  %221 = sub i64 %220, 1855837367329683557
  %222 = sub nsw i64 0, %218
  %223 = sub i64 %221, -7208579885664504845
  %224 = sub i64 %223, 1
  %225 = add i64 %224, -7208579885664504845
  %226 = sub nsw i64 %221, 1
  store i64 %225, i64* %3
  %227 = load i32, i32* @x.434
  %228 = load i32, i32* @y.435
  %229 = sub i32 0, 1
  %230 = add i32 %227, %229
  %231 = sub i32 %227, 1
  %232 = mul i32 %227, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %228, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 true, true
  %239 = and i1 %236, true
  %240 = and i1 %234, %238
  %241 = and i1 %237, true
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 true, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 -648928076, i32 -1974199898
  store i32 %252, i32* %31
  br label %417

; <label>:253:                                    ; preds = %33
  store i32 -211282132, i32* %31
  %254 = load volatile i64, i64* %3
  store i64 %254, i64* %32
  br label %417

; <label>:255:                                    ; preds = %33
  %256 = load i64, i64* %32
  store i64 %256, i64* %11, align 8
  %257 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %258 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %257, i32 0, i32 3
  %259 = load %struct.Edge**, %struct.Edge*** %258, align 8
  %260 = load i64, i64* %11, align 8
  %261 = getelementptr inbounds %struct.Edge*, %struct.Edge** %259, i64 %260
  %262 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %262, %struct.Edge** %261) #3
  %263 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %264 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %263, i32 0, i32 1
  %265 = load %struct.Edge*, %struct.Edge** %264, align 8
  %266 = load i64, i64* %10, align 8
  %267 = load i64, i64* %11, align 8
  %268 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %269 = mul nsw i64 %267, %268
  %270 = add i64 %266, -6916693538534573816
  %271 = sub i64 %270, %269
  %272 = sub i64 %271, -6916693538534573816
  %273 = sub nsw i64 %266, %269
  %274 = getelementptr inbounds %struct.Edge, %struct.Edge* %265, i64 %272
  %275 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %276 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %275, i32 0, i32 0
  store %struct.Edge* %274, %struct.Edge** %276, align 8
  store i32 1103713060, i32* %31
  br label %417

; <label>:277:                                    ; preds = %33
  %278 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  ret %"struct.std::_Deque_iterator"* %278

; <label>:279:                                    ; preds = %33
  %280 = load i64, i64* %10, align 8
  %281 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %282 = icmp slt i64 %280, %281
  store i32 -818039499, i32* %31
  br label %417

; <label>:283:                                    ; preds = %33
  %284 = load i64, i64* %9, align 8
  %285 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %7
  %286 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %285, i32 0, i32 0
  %287 = load %struct.Edge*, %struct.Edge** %286, align 8
  %288 = getelementptr inbounds %struct.Edge, %struct.Edge* %287, i64 %284
  store %struct.Edge* %288, %struct.Edge** %286, align 8
  store i32 -1501693340, i32* %31
  br label %417

; <label>:289:                                    ; preds = %33
  %290 = load i64, i64* %10, align 8
  %291 = icmp sgt i64 %290, 0
  store i32 1944414089, i32* %31
  br label %417

; <label>:292:                                    ; preds = %33
  %293 = load i64, i64* %10, align 8
  %294 = shl i64 0, %293
  %295 = add i64 0, 1197181819378273597
  %296 = sub i64 %295, 0
  %297 = sub i64 %296, 1197181819378273597
  %298 = sub i64 0, 0
  %299 = sub i64 %297, -5629376516228277702
  %300 = add i64 %299, %293
  %301 = add i64 %300, -5629376516228277702
  %302 = add i64 %297, %293
  %303 = sub i64 0, 4137752221169796993
  %304 = sub i64 %303, %293
  %305 = add i64 %304, 4137752221169796993
  %306 = sub i64 0, %293
  %307 = mul i64 %305, %293
  %308 = sub i64 0, 0
  %309 = add i64 0, %308
  %310 = sub i64 0, 0
  %311 = sub i64 0, %309
  %312 = sub i64 0, %293
  %313 = add i64 %311, %312
  %314 = sub i64 0, %313
  %315 = add i64 %309, %293
  %316 = sub i64 0, %293
  %317 = add i64 0, %316
  %318 = sub i64 0, %293
  %319 = mul i64 %317, %293
  %320 = shl i64 0, %293
  %321 = sub i64 0, %293
  %322 = add i64 0, %321
  %323 = sub nsw i64 0, %293
  %324 = sub i64 0, 8536086425689513134
  %325 = sub i64 %324, %322
  %326 = add i64 %325, 8536086425689513134
  %327 = sub i64 0, %322
  %328 = sub i64 0, %326
  %329 = sub i64 0, 1
  %330 = add i64 %328, %329
  %331 = sub i64 0, %330
  %332 = add i64 %326, 1
  %333 = shl i64 %322, 1
  %334 = sub i64 %322, -1600876434307683526
  %335 = sub i64 %334, 1
  %336 = add i64 %335, -1600876434307683526
  %337 = sub i64 %322, 1
  %338 = mul i64 %336, 1
  %339 = sub i64 0, %322
  %340 = add i64 0, %339
  %341 = sub i64 0, %322
  %342 = add i64 %340, 712320589890808408
  %343 = add i64 %342, 1
  %344 = sub i64 %343, 712320589890808408
  %345 = add i64 %340, 1
  %346 = shl i64 %322, 1
  %347 = sub i64 %322, 8610709367950750050
  %348 = sub i64 %347, 1
  %349 = add i64 %348, 8610709367950750050
  %350 = sub i64 %322, 1
  %351 = mul i64 %349, 1
  %352 = add i64 %322, 5785504073028464544
  %353 = sub i64 %352, 1
  %354 = sub i64 %353, 5785504073028464544
  %355 = sub nsw i64 %322, 1
  %356 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E14_S_buffer_sizeEv() #3
  %357 = shl i64 %354, %356
  %358 = sub i64 0, 7653972130091085388
  %359 = sub i64 %358, %354
  %360 = add i64 %359, 7653972130091085388
  %361 = sub i64 0, %354
  %362 = sub i64 0, %356
  %363 = sub i64 %360, %362
  %364 = add i64 %360, %356
  %365 = sub i64 0, 908393471464289986
  %366 = sub i64 %365, %354
  %367 = add i64 %366, 908393471464289986
  %368 = sub i64 0, %354
  %369 = add i64 %367, -4733927622231794308
  %370 = add i64 %369, %356
  %371 = sub i64 %370, -4733927622231794308
  %372 = add i64 %367, %356
  %373 = shl i64 %354, %356
  %374 = sub i64 0, %356
  %375 = add i64 %354, %374
  %376 = sub i64 %354, %356
  %377 = mul i64 %375, %356
  %378 = sub i64 %354, -6649181344713804142
  %379 = sub i64 %378, %356
  %380 = add i64 %379, -6649181344713804142
  %381 = sub i64 %354, %356
  %382 = mul i64 %380, %356
  %383 = shl i64 %354, %356
  %384 = shl i64 %354, %356
  %385 = udiv i64 %354, %356
  %386 = sub i64 0, 0
  %387 = add i64 0, %386
  %388 = sub i64 0, 0
  %389 = sub i64 %387, -4150176976250164421
  %390 = add i64 %389, %385
  %391 = add i64 %390, -4150176976250164421
  %392 = add i64 %387, %385
  %393 = shl i64 0, %385
  %394 = add i64 0, 1312624256024193055
  %395 = sub i64 %394, 0
  %396 = sub i64 %395, 1312624256024193055
  %397 = sub i64 0, 0
  %398 = sub i64 0, %396
  %399 = sub i64 0, %385
  %400 = add i64 %398, %399
  %401 = sub i64 0, %400
  %402 = add i64 %396, %385
  %403 = sub i64 0, %385
  %404 = add i64 0, %403
  %405 = sub nsw i64 0, %385
  %406 = add i64 0, -5798144232669380483
  %407 = sub i64 %406, %404
  %408 = sub i64 %407, -5798144232669380483
  %409 = sub i64 0, %404
  %410 = sub i64 0, 1
  %411 = sub i64 %408, %410
  %412 = add i64 %408, 1
  %413 = sub i64 %404, 5317351018828612247
  %414 = sub i64 %413, 1
  %415 = add i64 %414, 5317351018828612247
  %416 = sub nsw i64 %404, 1
  store i32 -1387579369, i32* %31
  br label %417

; <label>:417:                                    ; preds = %292, %289, %283, %279, %255, %253, %207, %179, %175, %172, %154, %126, %125, %105, %78, %75, %56, %40, %36, %35
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::deque"*, %"class.std::deque"** %10, align 8
  %12 = ptrtoint %"class.std::deque"* %7 to i64
  %13 = ptrtoint %"class.std::deque"* %11 to i64
  %14 = sub i64 %12, 4613989439421054268
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 4613989439421054268
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 80
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE17_M_default_appendEm(%"class.std::vector"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.438
  %4 = load i32, i32* @y.439
  %5 = add i32 %3, 179059918
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 179059918
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %441

; <label>:17:                                     ; preds = %2, %441
  %18 = alloca %"class.std::vector"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca %"class.std::deque"*, align 8
  %23 = alloca %"class.std::deque"*, align 8
  %24 = alloca i8*
  %25 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %18, align 8
  store i64 %1, i64* %19, align 8
  %26 = load %"class.std::vector"*, %"class.std::vector"** %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = icmp ne i64 %27, 0
  %29 = load i32, i32* @x.438
  %30 = load i32, i32* @y.439
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %441

; <label>:42:                                     ; preds = %17
  br i1 %28, label %43, label %389

; <label>:43:                                     ; preds = %42
  %44 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %45, i32 0, i32 2
  %47 = load %"class.std::deque"*, %"class.std::deque"** %46, align 8
  %48 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %49 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %49, i32 0, i32 1
  %51 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  %52 = ptrtoint %"class.std::deque"* %47 to i64
  %53 = ptrtoint %"class.std::deque"* %51 to i64
  %54 = sub i64 0, %53
  %55 = add i64 %52, %54
  %56 = sub i64 %52, %53
  %57 = sdiv exact i64 %55, 80
  %58 = load i64, i64* %19, align 8
  %59 = icmp uge i64 %57, %58
  br i1 %59, label %60, label %114

; <label>:60:                                     ; preds = %43
  %61 = load i32, i32* @x.438
  %62 = load i32, i32* @y.439
  %63 = sub i32 %61, 1781154461
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1781154461
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %453

; <label>:75:                                     ; preds = %60, %453
  %76 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"class.std::deque"*, %"class.std::deque"** %78, align 8
  %80 = load i64, i64* %19, align 8
  %81 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %82 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %81) #3
  %83 = call %"class.std::deque"* @_ZSt27__uninitialized_default_n_aIPSt5dequeI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::deque"* %79, i64 %80, %"class.std::allocator"* dereferenceable(1) %82)
  %84 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %85, i32 0, i32 1
  store %"class.std::deque"* %83, %"class.std::deque"** %86, align 8
  %87 = load i32, i32* @x.438
  %88 = load i32, i32* @y.439
  %89 = add i32 %87, 538845357
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, 538845357
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %453

; <label>:113:                                    ; preds = %75
  br label %347

; <label>:114:                                    ; preds = %43
  %115 = load i64, i64* %19, align 8
  %116 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector"* %26, i64 %115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %116, i64* %20, align 8
  %117 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %26) #3
  store i64 %117, i64* %21, align 8
  %118 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %119 = load i64, i64* %20, align 8
  %120 = call %"class.std::deque"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base"* %118, i64 %119)
  store %"class.std::deque"* %120, %"class.std::deque"** %22, align 8
  %121 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  store %"class.std::deque"* %121, %"class.std::deque"** %23, align 8
  %122 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %123, i32 0, i32 0
  %125 = load %"class.std::deque"*, %"class.std::deque"** %124, align 8
  %126 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %127, i32 0, i32 1
  %129 = load %"class.std::deque"*, %"class.std::deque"** %128, align 8
  %130 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %131 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %132 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %131) #3
  %133 = invoke %"class.std::deque"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5dequeI4EdgeSaIS1_EES4_SaIS3_EET0_T_S7_S6_RT1_(%"class.std::deque"* %125, %"class.std::deque"* %129, %"class.std::deque"* %130, %"class.std::allocator"* dereferenceable(1) %132)
          to label %134 unwind label %182

; <label>:134:                                    ; preds = %114
  store %"class.std::deque"* %133, %"class.std::deque"** %23, align 8
  %135 = load %"class.std::deque"*, %"class.std::deque"** %23, align 8
  %136 = load i64, i64* %19, align 8
  %137 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %138 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %137) #3
  %139 = invoke %"class.std::deque"* @_ZSt27__uninitialized_default_n_aIPSt5dequeI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::deque"* %135, i64 %136, %"class.std::allocator"* dereferenceable(1) %138)
          to label %140 unwind label %182

; <label>:140:                                    ; preds = %134
  %141 = load i32, i32* @x.438
  %142 = load i32, i32* @y.439
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %465

; <label>:166:                                    ; preds = %140, %465
  store %"class.std::deque"* %139, %"class.std::deque"** %23, align 8
  %167 = load i32, i32* @x.438
  %168 = load i32, i32* @y.439
  %169 = add i32 %167, 305355834
  %170 = sub i32 %169, 1
  %171 = sub i32 %170, 305355834
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %465

; <label>:181:                                    ; preds = %166
  br label %303

; <label>:182:                                    ; preds = %134, %114
  %183 = load i32, i32* @x.438
  %184 = load i32, i32* @y.439
  %185 = sub i32 %183, 1136010116
  %186 = sub i32 %185, 1
  %187 = add i32 %186, 1136010116
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %466

; <label>:197:                                    ; preds = %182, %466
  %198 = landingpad { i8*, i32 }
          catch i8* null
  %199 = extractvalue { i8*, i32 } %198, 0
  store i8* %199, i8** %24, align 8
  %200 = extractvalue { i8*, i32 } %198, 1
  store i32 %200, i32* %25, align 4
  %201 = load i32, i32* @x.438
  %202 = load i32, i32* @y.439
  %203 = add i32 %201, 1464913145
  %204 = sub i32 %203, 1
  %205 = sub i32 %204, 1464913145
  %206 = sub i32 %201, 1
  %207 = mul i32 %201, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %202, 10
  %211 = and i1 %209, %210
  %212 = xor i1 %209, %210
  %213 = or i1 %211, %212
  %214 = or i1 %209, %210
  br i1 %213, label %215, label %466

; <label>:215:                                    ; preds = %197
  br label %216

; <label>:216:                                    ; preds = %215
  %217 = load i32, i32* @x.438
  %218 = load i32, i32* @y.439
  %219 = sub i32 0, 1
  %220 = add i32 %217, %219
  %221 = sub i32 %217, 1
  %222 = mul i32 %217, %220
  %223 = urem i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = icmp slt i32 %218, 10
  %226 = and i1 %224, %225
  %227 = xor i1 %224, %225
  %228 = or i1 %226, %227
  %229 = or i1 %224, %225
  br i1 %228, label %230, label %470

; <label>:230:                                    ; preds = %216, %470
  %231 = load i8*, i8** %24, align 8
  %232 = call i8* @__cxa_begin_catch(i8* %231) #3
  %233 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %234 = load %"class.std::deque"*, %"class.std::deque"** %23, align 8
  %235 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %236 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %235) #3
  %237 = load i32, i32* @x.438
  %238 = load i32, i32* @y.439
  %239 = add i32 %237, -1699263254
  %240 = sub i32 %239, 1
  %241 = sub i32 %240, -1699263254
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = xor i1 %245, true
  %248 = xor i1 %246, true
  %249 = xor i1 true, true
  %250 = and i1 %247, true
  %251 = and i1 %245, %249
  %252 = and i1 %248, true
  %253 = and i1 %246, %249
  %254 = or i1 %250, %251
  %255 = or i1 %252, %253
  %256 = xor i1 %254, %255
  %257 = or i1 %247, %248
  %258 = xor i1 %257, true
  %259 = or i1 true, %249
  %260 = and i1 %258, %259
  %261 = or i1 %256, %260
  %262 = or i1 %245, %246
  br i1 %261, label %263, label %470

; <label>:263:                                    ; preds = %230
  invoke void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::deque"* %233, %"class.std::deque"* %234, %"class.std::allocator"* dereferenceable(1) %236)
          to label %264 unwind label %298

; <label>:264:                                    ; preds = %263
  %265 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %266 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %267 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"* %265, %"class.std::deque"* %266, i64 %267)
          to label %268 unwind label %298

; <label>:268:                                    ; preds = %264
  %269 = load i32, i32* @x.438
  %270 = load i32, i32* @y.439
  %271 = sub i32 0, 1
  %272 = add i32 %269, %271
  %273 = sub i32 %269, 1
  %274 = mul i32 %269, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %270, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  br i1 %280, label %282, label %477

; <label>:282:                                    ; preds = %268, %477
  %283 = load i32, i32* @x.438
  %284 = load i32, i32* @y.439
  %285 = add i32 %283, 2083212248
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, 2083212248
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %477

; <label>:297:                                    ; preds = %282
  invoke void @__cxa_rethrow() #12
          to label %440 unwind label %298

; <label>:298:                                    ; preds = %297, %264, %263
  %299 = landingpad { i8*, i32 }
          cleanup
  %300 = extractvalue { i8*, i32 } %299, 0
  store i8* %300, i8** %24, align 8
  %301 = extractvalue { i8*, i32 } %299, 1
  store i32 %301, i32* %25, align 4
  invoke void @__cxa_end_catch()
          to label %302 unwind label %395

; <label>:302:                                    ; preds = %298
  br label %390

; <label>:303:                                    ; preds = %181
  %304 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %305 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %304, i32 0, i32 0
  %306 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %305, i32 0, i32 0
  %307 = load %"class.std::deque"*, %"class.std::deque"** %306, align 8
  %308 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %309, i32 0, i32 1
  %311 = load %"class.std::deque"*, %"class.std::deque"** %310, align 8
  %312 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %313 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %312) #3
  call void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::deque"* %307, %"class.std::deque"* %311, %"class.std::allocator"* dereferenceable(1) %313)
  %314 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %315 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %316 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %315, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %316, i32 0, i32 0
  %318 = load %"class.std::deque"*, %"class.std::deque"** %317, align 8
  %319 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %320 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %320, i32 0, i32 2
  %322 = load %"class.std::deque"*, %"class.std::deque"** %321, align 8
  %323 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %324 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %323, i32 0, i32 0
  %325 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %324, i32 0, i32 0
  %326 = load %"class.std::deque"*, %"class.std::deque"** %325, align 8
  %327 = ptrtoint %"class.std::deque"* %322 to i64
  %328 = ptrtoint %"class.std::deque"* %326 to i64
  %329 = sub i64 0, %328
  %330 = add i64 %327, %329
  %331 = sub i64 %327, %328
  %332 = sdiv exact i64 %330, 80
  call void @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE13_M_deallocateEPS3_m(%"struct.std::_Vector_base"* %314, %"class.std::deque"* %318, i64 %332)
  %333 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %334 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %335 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %334, i32 0, i32 0
  %336 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %335, i32 0, i32 0
  store %"class.std::deque"* %333, %"class.std::deque"** %336, align 8
  %337 = load %"class.std::deque"*, %"class.std::deque"** %23, align 8
  %338 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %339 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %338, i32 0, i32 0
  %340 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %339, i32 0, i32 1
  store %"class.std::deque"* %337, %"class.std::deque"** %340, align 8
  %341 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %342 = load i64, i64* %20, align 8
  %343 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %341, i64 %342
  %344 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %345 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %344, i32 0, i32 0
  %346 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %345, i32 0, i32 2
  store %"class.std::deque"* %343, %"class.std::deque"** %346, align 8
  br label %347

; <label>:347:                                    ; preds = %303, %113
  %348 = load i32, i32* @x.438
  %349 = load i32, i32* @y.439
  %350 = sub i32 0, 1
  %351 = add i32 %348, %350
  %352 = sub i32 %348, 1
  %353 = mul i32 %348, %351
  %354 = urem i32 %353, 2
  %355 = icmp eq i32 %354, 0
  %356 = icmp slt i32 %349, 10
  %357 = and i1 %355, %356
  %358 = xor i1 %355, %356
  %359 = or i1 %357, %358
  %360 = or i1 %355, %356
  br i1 %359, label %361, label %478

; <label>:361:                                    ; preds = %347, %478
  %362 = load i32, i32* @x.438
  %363 = load i32, i32* @y.439
  %364 = sub i32 %362, -892114130
  %365 = sub i32 %364, 1
  %366 = add i32 %365, -892114130
  %367 = sub i32 %362, 1
  %368 = mul i32 %362, %366
  %369 = urem i32 %368, 2
  %370 = icmp eq i32 %369, 0
  %371 = icmp slt i32 %363, 10
  %372 = xor i1 %370, true
  %373 = xor i1 %371, true
  %374 = xor i1 true, true
  %375 = and i1 %372, true
  %376 = and i1 %370, %374
  %377 = and i1 %373, true
  %378 = and i1 %371, %374
  %379 = or i1 %375, %376
  %380 = or i1 %377, %378
  %381 = xor i1 %379, %380
  %382 = or i1 %372, %373
  %383 = xor i1 %382, true
  %384 = or i1 true, %374
  %385 = and i1 %383, %384
  %386 = or i1 %381, %385
  %387 = or i1 %370, %371
  br i1 %386, label %388, label %478

; <label>:388:                                    ; preds = %361
  br label %389

; <label>:389:                                    ; preds = %388, %42
  ret void

; <label>:390:                                    ; preds = %302
  %391 = load i8*, i8** %24, align 8
  %392 = load i32, i32* %25, align 4
  %393 = insertvalue { i8*, i32 } undef, i8* %391, 0
  %394 = insertvalue { i8*, i32 } %393, i32 %392, 1
  resume { i8*, i32 } %394

; <label>:395:                                    ; preds = %298
  %396 = load i32, i32* @x.438
  %397 = load i32, i32* @y.439
  %398 = add i32 %396, 2077768550
  %399 = sub i32 %398, 1
  %400 = sub i32 %399, 2077768550
  %401 = sub i32 %396, 1
  %402 = mul i32 %396, %400
  %403 = urem i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = icmp slt i32 %397, 10
  %406 = and i1 %404, %405
  %407 = xor i1 %404, %405
  %408 = or i1 %406, %407
  %409 = or i1 %404, %405
  br i1 %408, label %410, label %479

; <label>:410:                                    ; preds = %395, %479
  %411 = landingpad { i8*, i32 }
          catch i8* null
  %412 = extractvalue { i8*, i32 } %411, 0
  call void @__clang_call_terminate(i8* %412) #11
  %413 = load i32, i32* @x.438
  %414 = load i32, i32* @y.439
  %415 = sub i32 %413, -1580636914
  %416 = sub i32 %415, 1
  %417 = add i32 %416, -1580636914
  %418 = sub i32 %413, 1
  %419 = mul i32 %413, %417
  %420 = urem i32 %419, 2
  %421 = icmp eq i32 %420, 0
  %422 = icmp slt i32 %414, 10
  %423 = xor i1 %421, true
  %424 = xor i1 %422, true
  %425 = xor i1 true, true
  %426 = and i1 %423, true
  %427 = and i1 %421, %425
  %428 = and i1 %424, true
  %429 = and i1 %422, %425
  %430 = or i1 %426, %427
  %431 = or i1 %428, %429
  %432 = xor i1 %430, %431
  %433 = or i1 %423, %424
  %434 = xor i1 %433, true
  %435 = or i1 true, %425
  %436 = and i1 %434, %435
  %437 = or i1 %432, %436
  %438 = or i1 %421, %422
  br i1 %437, label %439, label %479

; <label>:439:                                    ; preds = %410
  unreachable

; <label>:440:                                    ; preds = %297
  unreachable

; <label>:441:                                    ; preds = %17, %2
  %442 = alloca %"class.std::vector"*, align 8
  %443 = alloca i64, align 8
  %444 = alloca i64, align 8
  %445 = alloca i64, align 8
  %446 = alloca %"class.std::deque"*, align 8
  %447 = alloca %"class.std::deque"*, align 8
  %448 = alloca i8*
  %449 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %442, align 8
  store i64 %1, i64* %443, align 8
  %450 = load %"class.std::vector"*, %"class.std::vector"** %442, align 8
  %451 = load i64, i64* %443, align 8
  %452 = icmp ne i64 %451, 0
  br label %17

; <label>:453:                                    ; preds = %75, %60
  %454 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %455 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %454, i32 0, i32 0
  %456 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %455, i32 0, i32 1
  %457 = load %"class.std::deque"*, %"class.std::deque"** %456, align 8
  %458 = load i64, i64* %19, align 8
  %459 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %460 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %459) #3
  %461 = call %"class.std::deque"* @_ZSt27__uninitialized_default_n_aIPSt5dequeI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::deque"* %457, i64 %458, %"class.std::allocator"* dereferenceable(1) %460)
  %462 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %463 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %462, i32 0, i32 0
  %464 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %463, i32 0, i32 1
  store %"class.std::deque"* %461, %"class.std::deque"** %464, align 8
  br label %75

; <label>:465:                                    ; preds = %166, %140
  store %"class.std::deque"* %139, %"class.std::deque"** %23, align 8
  br label %166

; <label>:466:                                    ; preds = %197, %182
  %467 = landingpad { i8*, i32 }
          catch i8* null
  %468 = extractvalue { i8*, i32 } %467, 0
  store i8* %468, i8** %24, align 8
  %469 = extractvalue { i8*, i32 } %467, 1
  store i32 %469, i32* %25, align 4
  br label %197

; <label>:470:                                    ; preds = %230, %216
  %471 = load i8*, i8** %24, align 8
  %472 = call i8* @__cxa_begin_catch(i8* %471) #3
  %473 = load %"class.std::deque"*, %"class.std::deque"** %22, align 8
  %474 = load %"class.std::deque"*, %"class.std::deque"** %23, align 8
  %475 = bitcast %"class.std::vector"* %26 to %"struct.std::_Vector_base"*
  %476 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %475) #3
  br label %230

; <label>:477:                                    ; preds = %282, %268
  br label %282

; <label>:478:                                    ; preds = %361, %347
  br label %361

; <label>:479:                                    ; preds = %410, %395
  %480 = landingpad { i8*, i32 }
          catch i8* null
  %481 = extractvalue { i8*, i32 } %480, 0
  call void @__clang_call_terminate(i8* %481) #11
  br label %410
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector"*, %"class.std::deque"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::deque"*, %"class.std::deque"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EES3_EvT_S5_RSaIT0_E(%"class.std::deque"* %6, %"class.std::deque"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %72

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.440
  %15 = load i32, i32* @y.441
  %16 = add i32 %14, 1611227715
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1611227715
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %116

; <label>:40:                                     ; preds = %13, %116
  %41 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %42 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %43, i32 0, i32 1
  store %"class.std::deque"* %41, %"class.std::deque"** %44, align 8
  %45 = load i32, i32* @x.440
  %46 = load i32, i32* @y.441
  %47 = add i32 %45, 512140146
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 512140146
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %116

; <label>:71:                                     ; preds = %40
  ret void

; <label>:72:                                     ; preds = %2
  %73 = load i32, i32* @x.440
  %74 = load i32, i32* @y.441
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 false, true
  %85 = and i1 %82, false
  %86 = and i1 %80, %84
  %87 = and i1 %83, false
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 false, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %121

; <label>:98:                                     ; preds = %72, %121
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  call void @__clang_call_terminate(i8* %100) #11
  %101 = load i32, i32* @x.440
  %102 = load i32, i32* @y.441
  %103 = sub i32 %101, -206722824
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -206722824
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %121

; <label>:115:                                    ; preds = %98
  unreachable

; <label>:116:                                    ; preds = %40, %13
  %117 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %118 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %119 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %118, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %119, i32 0, i32 1
  store %"class.std::deque"* %117, %"class.std::deque"** %120, align 8
  br label %40

; <label>:121:                                    ; preds = %98, %72
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  call void @__clang_call_terminate(i8* %123) #11
  br label %98
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZSt27__uninitialized_default_n_aIPSt5dequeI4EdgeSaIS1_EEmS3_ET_S5_T0_RSaIT1_E(%"class.std::deque"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::deque"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.442
  %8 = load i32, i32* @y.443
  %9 = sub i32 %7, -1087522664
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1087522664
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -373703430, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -373703430, label %21
    i32 1258510128, label %41
    i32 1528399603, label %75
    i32 549024765, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1258510128, i32 549024765
  store i32 %40, i32* %17
  br label %84

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::deque"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %44, align 8
  %45 = load %"class.std::deque"*, %"class.std::deque"** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = call %"class.std::deque"* @_ZSt25__uninitialized_default_nIPSt5dequeI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::deque"* %45, i64 %46)
  store %"class.std::deque"* %47, %"class.std::deque"** %4
  %48 = load i32, i32* @x.442
  %49 = load i32, i32* @y.443
  %50 = sub i32 %48, 288456490
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 288456490
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1528399603, i32 549024765
  store i32 %74, i32* %17
  br label %84

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"class.std::deque"*, %"class.std::deque"** %4
  ret %"class.std::deque"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.std::deque"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %78, align 8
  store i64 %1, i64* %79, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %80, align 8
  %81 = load %"class.std::deque"*, %"class.std::deque"** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = call %"class.std::deque"* @_ZSt25__uninitialized_default_nIPSt5dequeI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::deque"* %81, i64 %82)
  store i32 1258510128, i32* %17
  br label %84

; <label>:84:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector"*
  %9 = alloca %"class.std::vector"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %9, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %8
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %16 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector"* %15) #3
  %17 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %18 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %17) #3
  %19 = add i64 %16, 5220335938368944147
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, 5220335938368944147
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -16685610, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %206
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -16685610, label %29
    i32 253193057, label %34
    i32 -218672270, label %36
    i32 -1263337029, label %64
    i32 -1517876842, label %107
    i32 -72757291, label %110
    i32 1972543719, label %116
    i32 956887193, label %119
    i32 2133608956, label %135
    i32 810216250, label %164
    i32 -592256622, label %166
    i32 1051402686, label %168
    i32 1221045001, label %204
  ]

; <label>:28:                                     ; preds = %26
  br label %206

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 253193057, i32 -218672270
  store i32 %33, i32* %24
  br label %206

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.444
  %38 = load i32, i32* @y.445
  %39 = sub i32 %37, -1881153263
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1881153263
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1263337029, i32 1051402686
  store i32 %63, i32* %24
  br label %206

; <label>:64:                                     ; preds = %26
  %65 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %66 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %65) #3
  %67 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %68 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %67) #3
  store i64 %68, i64* %13, align 8
  %69 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 0, %66
  %72 = sub i64 0, %70
  %73 = add i64 %71, %72
  %74 = sub i64 0, %73
  %75 = add i64 %66, %70
  store i64 %74, i64* %12, align 8
  %76 = load i64, i64* %12, align 8
  %77 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %78 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %77) #3
  %79 = icmp ult i64 %76, %78
  store i1 %79, i1* %5
  %80 = load i32, i32* @x.444
  %81 = load i32, i32* @y.445
  %82 = add i32 %80, 709930953
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, 709930953
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -1517876842, i32 1051402686
  store i32 %106, i32* %24
  br label %206

; <label>:107:                                    ; preds = %26
  %108 = load volatile i1, i1* %5
  %109 = select i1 %108, i32 1972543719, i32 -72757291
  store i32 %109, i32* %24
  br label %206

; <label>:110:                                    ; preds = %26
  %111 = load i64, i64* %12, align 8
  %112 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %113 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector"* %112) #3
  %114 = icmp ugt i64 %111, %113
  %115 = select i1 %114, i32 1972543719, i32 956887193
  store i32 %115, i32* %24
  br label %206

; <label>:116:                                    ; preds = %26
  %117 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %118 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector"* %117) #3
  store i32 -592256622, i32* %24
  store i64 %118, i64* %25
  br label %206

; <label>:119:                                    ; preds = %26
  %120 = load i32, i32* @x.444
  %121 = load i32, i32* @y.445
  %122 = add i32 %120, -573511368
  %123 = sub i32 %122, 1
  %124 = sub i32 %123, -573511368
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 2133608956, i32 1221045001
  store i32 %134, i32* %24
  br label %206

; <label>:135:                                    ; preds = %26
  %136 = load i64, i64* %12, align 8
  store i64 %136, i64* %4
  %137 = load i32, i32* @x.444
  %138 = load i32, i32* @y.445
  %139 = add i32 %137, -2007544521
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, -2007544521
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 810216250, i32 1221045001
  store i32 %163, i32* %24
  br label %206

; <label>:164:                                    ; preds = %26
  store i32 -592256622, i32* %24
  %165 = load volatile i64, i64* %4
  store i64 %165, i64* %25
  br label %206

; <label>:166:                                    ; preds = %26
  %167 = load i64, i64* %25
  ret i64 %167

; <label>:168:                                    ; preds = %26
  %169 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %170 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %169) #3
  %171 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %172 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %171) #3
  store i64 %172, i64* %13, align 8
  %173 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %174 = load i64, i64* %173, align 8
  %175 = sub i64 %170, 3170491402439732935
  %176 = sub i64 %175, %174
  %177 = add i64 %176, 3170491402439732935
  %178 = sub i64 %170, %174
  %179 = mul i64 %177, %174
  %180 = shl i64 %170, %174
  %181 = sub i64 0, %170
  %182 = add i64 0, %181
  %183 = sub i64 0, %170
  %184 = sub i64 %182, 93449689008382958
  %185 = add i64 %184, %174
  %186 = add i64 %185, 93449689008382958
  %187 = add i64 %182, %174
  %188 = add i64 0, -3886795143500740650
  %189 = sub i64 %188, %170
  %190 = sub i64 %189, -3886795143500740650
  %191 = sub i64 0, %170
  %192 = sub i64 %190, 3820433622470255053
  %193 = add i64 %192, %174
  %194 = add i64 %193, 3820433622470255053
  %195 = add i64 %190, %174
  %196 = shl i64 %170, %174
  %197 = sub i64 0, %174
  %198 = sub i64 %170, %197
  %199 = add i64 %170, %174
  store i64 %198, i64* %12, align 8
  %200 = load i64, i64* %12, align 8
  %201 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %202 = call i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %201) #3
  %203 = icmp ult i64 %200, %202
  store i32 -1263337029, i32* %24
  br label %206

; <label>:204:                                    ; preds = %26
  %205 = load i64, i64* %12, align 8
  store i32 2133608956, i32* %24
  br label %206

; <label>:206:                                    ; preds = %204, %168, %164, %135, %119, %116, %110, %107, %64, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZNSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 519166456, i32* %9
  %10 = alloca %"class.std::deque"*
  br label %11

; <label>:11:                                     ; preds = %2, %59
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 519166456, label %14
    i32 -1845026428, label %18
    i32 2119566770, label %24
    i32 269892851, label %39
    i32 -1631521793, label %55
    i32 -1250339289, label %56
    i32 402549329, label %58
  ]

; <label>:13:                                     ; preds = %11
  br label %59

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1845026428, i32 2119566770
  store i32 %17, i32* %9
  br label %59

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::deque"* @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 -1250339289, i32* %9
  store %"class.std::deque"* %23, %"class.std::deque"** %10
  br label %59

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.446
  %26 = load i32, i32* @y.447
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 269892851, i32 402549329
  store i32 %38, i32* %9
  br label %59

; <label>:39:                                     ; preds = %11
  %40 = load i32, i32* @x.446
  %41 = load i32, i32* @y.447
  %42 = sub i32 %40, -145414306
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -145414306
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -1631521793, i32 402549329
  store i32 %54, i32* %9
  br label %59

; <label>:55:                                     ; preds = %11
  store i32 -1250339289, i32* %9
  store %"class.std::deque"* null, %"class.std::deque"** %10
  br label %59

; <label>:56:                                     ; preds = %11
  %57 = load %"class.std::deque"*, %"class.std::deque"** %10
  ret %"class.std::deque"* %57

; <label>:58:                                     ; preds = %11
  store i32 269892851, i32* %9
  br label %59

; <label>:59:                                     ; preds = %58, %55, %39, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt5dequeI4EdgeSaIS1_EES4_SaIS3_EET0_T_S7_S6_RT1_(%"class.std::deque"*, %"class.std::deque"*, %"class.std::deque"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %2, %"class.std::deque"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %10 = call %"class.std::deque"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_(%"class.std::deque"* %9)
  %11 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %12 = call %"class.std::deque"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_(%"class.std::deque"* %11)
  %13 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %15 = call %"class.std::deque"* @_ZSt22__uninitialized_copy_aIPSt5dequeI4EdgeSaIS1_EES4_S3_ET0_T_S6_S5_RSaIT1_E(%"class.std::deque"* %10, %"class.std::deque"* %12, %"class.std::deque"* %13, %"class.std::allocator"* dereferenceable(1) %14)
  ret %"class.std::deque"* %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZSt25__uninitialized_default_nIPSt5dequeI4EdgeSaIS1_EEmET_S5_T0_(%"class.std::deque"*, i64) #0 comdat {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::deque"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt5dequeI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::deque"* %6, i64 %7)
  ret %"class.std::deque"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt5dequeI4EdgeSaIS3_EEmEET_S7_T0_(%"class.std::deque"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %135, %2
  %10 = load i32, i32* @x.452
  %11 = load i32, i32* @y.453
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %11, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %205

; <label>:23:                                     ; preds = %9, %205
  %24 = load i64, i64* %4, align 8
  %25 = icmp ugt i64 %24, 0
  %26 = load i32, i32* @x.452
  %27 = load i32, i32* @y.453
  %28 = sub i32 %26, 291411549
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 291411549
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %205

; <label>:52:                                     ; preds = %23
  br i1 %25, label %53, label %146

; <label>:53:                                     ; preds = %52
  %54 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %55 = call %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80) %54) #3
  invoke void @_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::deque"* %55)
          to label %56 unwind label %136

; <label>:56:                                     ; preds = %53
  %57 = load i32, i32* @x.452
  %58 = load i32, i32* @y.453
  %59 = add i32 %57, -1117623667
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1117623667
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %208

; <label>:71:                                     ; preds = %56, %208
  %72 = load i32, i32* @x.452
  %73 = load i32, i32* @y.453
  %74 = add i32 %72, -1563268179
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, -1563268179
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %208

; <label>:98:                                     ; preds = %71
  br label %99

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* @x.452
  %101 = load i32, i32* @y.453
  %102 = sub i32 %100, 1239968577
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 1239968577
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %209

; <label>:114:                                    ; preds = %99, %209
  %115 = load i64, i64* %4, align 8
  %116 = sub i64 0, -1
  %117 = sub i64 %115, %116
  %118 = add i64 %115, -1
  store i64 %117, i64* %4, align 8
  %119 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %120 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %119, i32 1
  store %"class.std::deque"* %120, %"class.std::deque"** %5, align 8
  %121 = load i32, i32* @x.452
  %122 = load i32, i32* @y.453
  %123 = add i32 %121, -1685208223
  %124 = sub i32 %123, 1
  %125 = sub i32 %124, -1685208223
  %126 = sub i32 %121, 1
  %127 = mul i32 %121, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %122, 10
  %131 = and i1 %129, %130
  %132 = xor i1 %129, %130
  %133 = or i1 %131, %132
  %134 = or i1 %129, %130
  br i1 %133, label %135, label %209

; <label>:135:                                    ; preds = %114
  br label %9

; <label>:136:                                    ; preds = %53
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %6, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %7, align 4
  br label %140

; <label>:140:                                    ; preds = %136
  %141 = load i8*, i8** %6, align 8
  %142 = call i8* @__cxa_begin_catch(i8* %141) #3
  %143 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %144 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  invoke void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EEEvT_S5_(%"class.std::deque"* %143, %"class.std::deque"* %144)
          to label %145 unwind label %148

; <label>:145:                                    ; preds = %140
  invoke void @__cxa_rethrow() #12
          to label %204 unwind label %148

; <label>:146:                                    ; preds = %52
  %147 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret %"class.std::deque"* %147

; <label>:148:                                    ; preds = %145, %140
  %149 = landingpad { i8*, i32 }
          cleanup
  %150 = extractvalue { i8*, i32 } %149, 0
  store i8* %150, i8** %6, align 8
  %151 = extractvalue { i8*, i32 } %149, 1
  store i32 %151, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %152 unwind label %201

; <label>:152:                                    ; preds = %148
  br label %154
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:154:                                    ; preds = %152
  %155 = load i32, i32* @x.452
  %156 = load i32, i32* @y.453
  %157 = add i32 %155, 1544475868
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 1544475868
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %222

; <label>:181:                                    ; preds = %154, %222
  %182 = load i8*, i8** %6, align 8
  %183 = load i32, i32* %7, align 4
  %184 = insertvalue { i8*, i32 } undef, i8* %182, 0
  %185 = insertvalue { i8*, i32 } %184, i32 %183, 1
  %186 = load i32, i32* @x.452
  %187 = load i32, i32* @y.453
  %188 = add i32 %186, 650691166
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 650691166
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %222

; <label>:200:                                    ; preds = %181
  resume { i8*, i32 } %185

; <label>:201:                                    ; preds = %148
  %202 = landingpad { i8*, i32 }
          catch i8* null
  %203 = extractvalue { i8*, i32 } %202, 0
  call void @__clang_call_terminate(i8* %203) #11
  unreachable

; <label>:204:                                    ; preds = %145
  unreachable

; <label>:205:                                    ; preds = %23, %9
  %206 = load i64, i64* %4, align 8
  %207 = icmp ugt i64 %206, 0
  br label %23

; <label>:208:                                    ; preds = %71, %56
  br label %71

; <label>:209:                                    ; preds = %114, %99
  %210 = load i64, i64* %4, align 8
  %211 = add i64 %210, 5273982779613496098
  %212 = sub i64 %211, -1
  %213 = sub i64 %212, 5273982779613496098
  %214 = sub i64 %210, -1
  %215 = mul i64 %213, -1
  %216 = add i64 %210, -7272344789297252866
  %217 = add i64 %216, -1
  %218 = sub i64 %217, -7272344789297252866
  %219 = add i64 %210, -1
  store i64 %218, i64* %4, align 8
  %220 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %221 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %220, i32 1
  store %"class.std::deque"* %221, %"class.std::deque"** %5, align 8
  br label %114

; <label>:222:                                    ; preds = %181, %154
  %223 = load i8*, i8** %6, align 8
  %224 = load i32, i32* %7, align 4
  %225 = insertvalue { i8*, i32 } undef, i8* %223, 0
  %226 = insertvalue { i8*, i32 } %225, i32 %224, 1
  br label %181
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJEEvPT_DpOT0_(%"class.std::deque"*) #0 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.454
  %5 = load i32, i32* @y.455
  %6 = sub i32 %4, 1322506262
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1322506262
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 880813518, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 880813518, label %18
    i32 725730874, label %38
    i32 494114147, label %70
    i32 558865264, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 725730874, i32 558865264
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %39, align 8
  %40 = load %"class.std::deque"*, %"class.std::deque"** %39, align 8
  %41 = bitcast %"class.std::deque"* %40 to i8*
  %42 = bitcast i8* %41 to %"class.std::deque"*
  call void @_ZNSt5dequeI4EdgeSaIS0_EEC2Ev(%"class.std::deque"* %42)
  %43 = load i32, i32* @x.454
  %44 = load i32, i32* @y.455
  %45 = sub i32 %43, -454696478
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -454696478
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 494114147, i32 558865264
  store i32 %69, i32* %14
  br label %76

; <label>:70:                                     ; preds = %15
  ret void

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %72, align 8
  %73 = load %"class.std::deque"*, %"class.std::deque"** %72, align 8
  %74 = bitcast %"class.std::deque"* %73 to i8*
  %75 = bitcast i8* %74 to %"class.std::deque"*
  call void @_ZNSt5dequeI4EdgeSaIS0_EEC2Ev(%"class.std::deque"* %75)
  store i32 725730874, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %50

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.458
  %9 = load i32, i32* @y.459
  %10 = sub i32 %8, 1381821805
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1381821805
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = and i1 %16, %17
  %19 = xor i1 %16, %17
  %20 = or i1 %18, %19
  %21 = or i1 %16, %17
  br i1 %20, label %22, label %101

; <label>:22:                                     ; preds = %7, %101
  %23 = load i32, i32* @x.458
  %24 = load i32, i32* @y.459
  %25 = add i32 %23, -1253026042
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1253026042
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %101

; <label>:49:                                     ; preds = %22
  ret void

; <label>:50:                                     ; preds = %1
  %51 = landingpad { i8*, i32 }
          cleanup
  %52 = extractvalue { i8*, i32 } %51, 0
  store i8* %52, i8** %3, align 8
  %53 = extractvalue { i8*, i32 } %51, 1
  store i32 %53, i32* %4, align 4
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6) #3
  br label %54

; <label>:54:                                     ; preds = %50
  %55 = load i32, i32* @x.458
  %56 = load i32, i32* @y.459
  %57 = sub i32 %55, 1825335694
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1825335694
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %102

; <label>:81:                                     ; preds = %54, %102
  %82 = load i8*, i8** %3, align 8
  %83 = load i32, i32* %4, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  %86 = load i32, i32* @x.458
  %87 = load i32, i32* @y.459
  %88 = add i32 %86, -1209889685
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -1209889685
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %102

; <label>:100:                                    ; preds = %81
  resume { i8*, i32 } %85

; <label>:101:                                    ; preds = %22, %7
  br label %22

; <label>:102:                                    ; preds = %81, %54
  %103 = load i8*, i8** %3, align 8
  %104 = load i32, i32* %4, align 4
  %105 = insertvalue { i8*, i32 } undef, i8* %103, 0
  %106 = insertvalue { i8*, i32 } %105, i32 %104, 1
  br label %81
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.5"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca %struct.Edge**, align 8
  %9 = alloca %struct.Edge**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, %15
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add i64 %15, 1
  store i64 %19, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 0, %21
  %23 = sub i64 0, 2
  %24 = add i64 %22, %23
  %25 = sub i64 0, %24
  %26 = add i64 %21, 2
  store i64 %25, i64* %7, align 8
  %27 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %29, i32 0, i32 1
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call %struct.Edge** @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %33)
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %35, i32 0, i32 0
  store %struct.Edge** %34, %struct.Edge*** %36, align 8
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %37, i32 0, i32 0
  %39 = load %struct.Edge**, %struct.Edge*** %38, align 8
  %40 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %40, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = udiv i64 %45, 2
  %48 = getelementptr inbounds %struct.Edge*, %struct.Edge** %39, i64 %47
  store %struct.Edge** %48, %struct.Edge*** %8, align 8
  %49 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %50 = load i64, i64* %5, align 8
  %51 = getelementptr inbounds %struct.Edge*, %struct.Edge** %49, i64 %50
  store %struct.Edge** %51, %struct.Edge*** %9, align 8
  %52 = load %struct.Edge**, %struct.Edge*** %8, align 8
  %53 = load %struct.Edge**, %struct.Edge*** %9, align 8
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"* %12, %struct.Edge** %52, %struct.Edge** %53)
          to label %54 unwind label %109

; <label>:54:                                     ; preds = %2
  %55 = load i32, i32* @x.462
  %56 = load i32, i32* @y.463
  %57 = sub i32 %55, 1454875822
  %58 = sub i32 %57, 1
  %59 = add i32 %58, 1454875822
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %278

; <label>:81:                                     ; preds = %54, %278
  %82 = load i32, i32* @x.462
  %83 = load i32, i32* @y.463
  %84 = add i32 %82, -1016543761
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1016543761
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 false, true
  %95 = and i1 %92, false
  %96 = and i1 %90, %94
  %97 = and i1 %93, false
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 false, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %278

; <label>:108:                                    ; preds = %81
  br label %172

; <label>:109:                                    ; preds = %2
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %10, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %11, align 4
  br label %113

; <label>:113:                                    ; preds = %109
  %114 = load i32, i32* @x.462
  %115 = load i32, i32* @y.463
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %279

; <label>:127:                                    ; preds = %113, %279
  %128 = load i8*, i8** %10, align 8
  %129 = call i8* @__cxa_begin_catch(i8* %128) #3
  %130 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %130, i32 0, i32 0
  %132 = load %struct.Edge**, %struct.Edge*** %131, align 8
  %133 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %134 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %133, i32 0, i32 1
  %135 = load i64, i64* %134, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %12, %struct.Edge** %132, i64 %135) #3
  %136 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %137 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %136, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %137, align 8
  %138 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %138, i32 0, i32 1
  store i64 0, i64* %139, align 8
  %140 = load i32, i32* @x.462
  %141 = load i32, i32* @y.463
  %142 = sub i32 %140, 1923763685
  %143 = sub i32 %142, 1
  %144 = add i32 %143, 1923763685
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 false, true
  %153 = and i1 %150, false
  %154 = and i1 %148, %152
  %155 = and i1 %151, false
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 false, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %279

; <label>:166:                                    ; preds = %127
  invoke void @__cxa_rethrow() #12
          to label %277 unwind label %167

; <label>:167:                                    ; preds = %166
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %10, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %171 unwind label %244

; <label>:171:                                    ; preds = %167
  br label %239

; <label>:172:                                    ; preds = %108
  %173 = load i32, i32* @x.462
  %174 = load i32, i32* @y.463
  %175 = sub i32 0, 1
  %176 = add i32 %173, %175
  %177 = sub i32 %173, 1
  %178 = mul i32 %173, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %174, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %292

; <label>:186:                                    ; preds = %172, %292
  %187 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %187, i32 0, i32 2
  %189 = load %struct.Edge**, %struct.Edge*** %8, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %188, %struct.Edge** %189) #3
  %190 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %190, i32 0, i32 3
  %192 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %193 = getelementptr inbounds %struct.Edge*, %struct.Edge** %192, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %191, %struct.Edge** %193) #3
  %194 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %194, i32 0, i32 2
  %196 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %195, i32 0, i32 1
  %197 = load %struct.Edge*, %struct.Edge** %196, align 8
  %198 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %198, i32 0, i32 2
  %200 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %199, i32 0, i32 0
  store %struct.Edge* %197, %struct.Edge** %200, align 8
  %201 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %201, i32 0, i32 3
  %203 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %202, i32 0, i32 1
  %204 = load %struct.Edge*, %struct.Edge** %203, align 8
  %205 = load i64, i64* %4, align 8
  %206 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %207 = urem i64 %205, %206
  %208 = getelementptr inbounds %struct.Edge, %struct.Edge* %204, i64 %207
  %209 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %209, i32 0, i32 3
  %211 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %210, i32 0, i32 0
  store %struct.Edge* %208, %struct.Edge** %211, align 8
  %212 = load i32, i32* @x.462
  %213 = load i32, i32* @y.463
  %214 = sub i32 %212, 814829966
  %215 = sub i32 %214, 1
  %216 = add i32 %215, 814829966
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %292

; <label>:238:                                    ; preds = %186
  ret void

; <label>:239:                                    ; preds = %171
  %240 = load i8*, i8** %10, align 8
  %241 = load i32, i32* %11, align 4
  %242 = insertvalue { i8*, i32 } undef, i8* %240, 0
  %243 = insertvalue { i8*, i32 } %242, i32 %241, 1
  resume { i8*, i32 } %243

; <label>:244:                                    ; preds = %167
  %245 = load i32, i32* @x.462
  %246 = load i32, i32* @y.463
  %247 = sub i32 %245, -591739209
  %248 = sub i32 %247, 1
  %249 = add i32 %248, -591739209
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  br i1 %257, label %259, label %339

; <label>:259:                                    ; preds = %244, %339
  %260 = landingpad { i8*, i32 }
          catch i8* null
  %261 = extractvalue { i8*, i32 } %260, 0
  call void @__clang_call_terminate(i8* %261) #11
  %262 = load i32, i32* @x.462
  %263 = load i32, i32* @y.463
  %264 = add i32 %262, 2137989453
  %265 = sub i32 %264, 1
  %266 = sub i32 %265, 2137989453
  %267 = sub i32 %262, 1
  %268 = mul i32 %262, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %263, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %339

; <label>:276:                                    ; preds = %259
  unreachable

; <label>:277:                                    ; preds = %166
  unreachable

; <label>:278:                                    ; preds = %81, %54
  br label %81

; <label>:279:                                    ; preds = %127, %113
  %280 = load i8*, i8** %10, align 8
  %281 = call i8* @__cxa_begin_catch(i8* %280) #3
  %282 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %282, i32 0, i32 0
  %284 = load %struct.Edge**, %struct.Edge*** %283, align 8
  %285 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %285, i32 0, i32 1
  %287 = load i64, i64* %286, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_deallocate_mapEPPS0_m(%"class.std::_Deque_base"* %12, %struct.Edge** %284, i64 %287) #3
  %288 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %289 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %288, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %289, align 8
  %290 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %291 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %290, i32 0, i32 1
  store i64 0, i64* %291, align 8
  br label %127

; <label>:292:                                    ; preds = %186, %172
  %293 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %293, i32 0, i32 2
  %295 = load %struct.Edge**, %struct.Edge*** %8, align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %294, %struct.Edge** %295) #3
  %296 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %297 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %296, i32 0, i32 3
  %298 = load %struct.Edge**, %struct.Edge*** %9, align 8
  %299 = getelementptr inbounds %struct.Edge*, %struct.Edge** %298, i64 -1
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_E11_M_set_nodeEPS2_(%"struct.std::_Deque_iterator"* %297, %struct.Edge** %299) #3
  %300 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %301 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %300, i32 0, i32 2
  %302 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %301, i32 0, i32 1
  %303 = load %struct.Edge*, %struct.Edge** %302, align 8
  %304 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %304, i32 0, i32 2
  %306 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %305, i32 0, i32 0
  store %struct.Edge* %303, %struct.Edge** %306, align 8
  %307 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %307, i32 0, i32 3
  %309 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %308, i32 0, i32 1
  %310 = load %struct.Edge*, %struct.Edge** %309, align 8
  %311 = load i64, i64* %4, align 8
  %312 = call i64 @_ZSt16__deque_buf_sizem(i64 24)
  %313 = sub i64 0, %311
  %314 = add i64 0, %313
  %315 = sub i64 0, %311
  %316 = sub i64 0, %314
  %317 = sub i64 0, %312
  %318 = add i64 %316, %317
  %319 = sub i64 0, %318
  %320 = add i64 %314, %312
  %321 = sub i64 %311, 4755669358186102041
  %322 = sub i64 %321, %312
  %323 = add i64 %322, 4755669358186102041
  %324 = sub i64 %311, %312
  %325 = mul i64 %323, %312
  %326 = add i64 0, 8393912321967116780
  %327 = sub i64 %326, %311
  %328 = sub i64 %327, 8393912321967116780
  %329 = sub i64 0, %311
  %330 = sub i64 0, %312
  %331 = sub i64 %328, %330
  %332 = add i64 %328, %312
  %333 = shl i64 %311, %312
  %334 = urem i64 %311, %312
  %335 = getelementptr inbounds %struct.Edge, %struct.Edge* %310, i64 %334
  %336 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %336, i32 0, i32 3
  %338 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %337, i32 0, i32 0
  store %struct.Edge* %335, %struct.Edge** %338, align 8
  br label %186

; <label>:339:                                    ; preds = %259, %244
  %340 = landingpad { i8*, i32 }
          catch i8* null
  %341 = extractvalue { i8*, i32 } %340, 0
  call void @__clang_call_terminate(i8* %341) #11
  br label %259
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeEC2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.464
  %5 = load i32, i32* @y.465
  %6 = sub i32 %4, 2015174833
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 2015174833
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1523446448, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1523446448, label %18
    i32 170143380, label %26
    i32 557123636, label %44
    i32 -824744087, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 170143380, i32 -824744087
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %27, align 8
  %28 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %27, align 8
  %29 = bitcast %"class.std::allocator.5"* %28 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %29) #3
  %30 = load i32, i32* @x.464
  %31 = load i32, i32* @y.465
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 557123636, i32 -824744087
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %46, align 8
  %47 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %46, align 8
  %48 = bitcast %"class.std::allocator.5"* %47 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %48) #3
  store i32 170143380, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store %struct.Edge* null, %struct.Edge** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store %struct.Edge* null, %struct.Edge** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store %struct.Edge* null, %struct.Edge** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store %struct.Edge** null, %struct.Edge*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE15_M_create_nodesEPPS0_S4_(%"class.std::_Deque_base"*, %struct.Edge**, %struct.Edge**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %struct.Edge**, align 8
  %6 = alloca %struct.Edge**, align 8
  %7 = alloca %struct.Edge**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %struct.Edge** %1, %struct.Edge*** %5, align 8
  store %struct.Edge** %2, %struct.Edge*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load %struct.Edge**, %struct.Edge*** %5, align 8
  store %struct.Edge** %11, %struct.Edge*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %72, %3
  %13 = load i32, i32* @x.470
  %14 = load i32, i32* @y.471
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %211

; <label>:38:                                     ; preds = %12, %211
  %39 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %40 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %41 = icmp ult %struct.Edge** %39, %40
  %42 = load i32, i32* @x.470
  %43 = load i32, i32* @y.471
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %211

; <label>:67:                                     ; preds = %38
  br i1 %41, label %68, label %84

; <label>:68:                                     ; preds = %67
  %69 = invoke %struct.Edge* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %70 unwind label %75

; <label>:70:                                     ; preds = %68
  %71 = load %struct.Edge**, %struct.Edge*** %7, align 8
  store %struct.Edge* %69, %struct.Edge** %71, align 8
  br label %72

; <label>:72:                                     ; preds = %70
  %73 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %74 = getelementptr inbounds %struct.Edge*, %struct.Edge** %73, i32 1
  store %struct.Edge** %74, %struct.Edge*** %7, align 8
  br label %12

; <label>:75:                                     ; preds = %68
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %8, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %9, align 4
  br label %79

; <label>:79:                                     ; preds = %75
  %80 = load i8*, i8** %8, align 8
  %81 = call i8* @__cxa_begin_catch(i8* %80) #3
  %82 = load %struct.Edge**, %struct.Edge*** %5, align 8
  %83 = load %struct.Edge**, %struct.Edge*** %7, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE16_M_destroy_nodesEPPS0_S4_(%"class.std::_Deque_base"* %10, %struct.Edge** %82, %struct.Edge** %83) #3
  invoke void @__cxa_rethrow() #12
          to label %210 unwind label %85

; <label>:84:                                     ; preds = %67
  br label %119

; <label>:85:                                     ; preds = %79
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %8, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %89 unwind label %207

; <label>:89:                                     ; preds = %85
  %90 = load i32, i32* @x.470
  %91 = load i32, i32* @y.471
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %215

; <label>:103:                                    ; preds = %89, %215
  %104 = load i32, i32* @x.470
  %105 = load i32, i32* @y.471
  %106 = sub i32 %104, 2113833670
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 2113833670
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %215

; <label>:118:                                    ; preds = %103
  br label %150

; <label>:119:                                    ; preds = %84
  %120 = load i32, i32* @x.470
  %121 = load i32, i32* @y.471
  %122 = sub i32 %120, -85969119
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -85969119
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %216

; <label>:134:                                    ; preds = %119, %216
  %135 = load i32, i32* @x.470
  %136 = load i32, i32* @y.471
  %137 = add i32 %135, -710429655
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, -710429655
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %216

; <label>:149:                                    ; preds = %134
  ret void

; <label>:150:                                    ; preds = %118
  %151 = load i32, i32* @x.470
  %152 = load i32, i32* @y.471
  %153 = sub i32 0, 1
  %154 = add i32 %151, %153
  %155 = sub i32 %151, 1
  %156 = mul i32 %151, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %152, 10
  %160 = xor i1 %158, true
  %161 = xor i1 %159, true
  %162 = xor i1 false, true
  %163 = and i1 %160, false
  %164 = and i1 %158, %162
  %165 = and i1 %161, false
  %166 = and i1 %159, %162
  %167 = or i1 %163, %164
  %168 = or i1 %165, %166
  %169 = xor i1 %167, %168
  %170 = or i1 %160, %161
  %171 = xor i1 %170, true
  %172 = or i1 false, %162
  %173 = and i1 %171, %172
  %174 = or i1 %169, %173
  %175 = or i1 %158, %159
  br i1 %174, label %176, label %217

; <label>:176:                                    ; preds = %150, %217
  %177 = load i8*, i8** %8, align 8
  %178 = load i32, i32* %9, align 4
  %179 = insertvalue { i8*, i32 } undef, i8* %177, 0
  %180 = insertvalue { i8*, i32 } %179, i32 %178, 1
  %181 = load i32, i32* @x.470
  %182 = load i32, i32* @y.471
  %183 = sub i32 0, 1
  %184 = add i32 %181, %183
  %185 = sub i32 %181, 1
  %186 = mul i32 %181, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %182, 10
  %190 = xor i1 %188, true
  %191 = xor i1 %189, true
  %192 = xor i1 true, true
  %193 = and i1 %190, true
  %194 = and i1 %188, %192
  %195 = and i1 %191, true
  %196 = and i1 %189, %192
  %197 = or i1 %193, %194
  %198 = or i1 %195, %196
  %199 = xor i1 %197, %198
  %200 = or i1 %190, %191
  %201 = xor i1 %200, true
  %202 = or i1 true, %192
  %203 = and i1 %201, %202
  %204 = or i1 %199, %203
  %205 = or i1 %188, %189
  br i1 %204, label %206, label %217

; <label>:206:                                    ; preds = %176
  resume { i8*, i32 } %180

; <label>:207:                                    ; preds = %85
  %208 = landingpad { i8*, i32 }
          catch i8* null
  %209 = extractvalue { i8*, i32 } %208, 0
  call void @__clang_call_terminate(i8* %209) #11
  unreachable

; <label>:210:                                    ; preds = %79
  unreachable

; <label>:211:                                    ; preds = %38, %12
  %212 = load %struct.Edge**, %struct.Edge*** %7, align 8
  %213 = load %struct.Edge**, %struct.Edge*** %6, align 8
  %214 = icmp ult %struct.Edge** %212, %213
  br label %38

; <label>:215:                                    ; preds = %103, %89
  br label %103

; <label>:216:                                    ; preds = %134, %119
  br label %134

; <label>:217:                                    ; preds = %176, %150
  %218 = load i8*, i8** %8, align 8
  %219 = load i32, i32* %9, align 4
  %220 = insertvalue { i8*, i32 } undef, i8* %218, 0
  %221 = insertvalue { i8*, i32 } %220, i32 %219, 1
  br label %176
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt5dequeI4EdgeSaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8max_sizeERKS4_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8max_sizeERKS4_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.474
  %6 = load i32, i32* @y.475
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -709164807, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -709164807, label %18
    i32 1395288907, label %38
    i32 1319777170, label %58
    i32 2128734267, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1395288907, i32 2128734267
  store i32 %37, i32* %14
  br label %65

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  %42 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %41) #3
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.474
  %44 = load i32, i32* @y.475
  %45 = sub i32 %43, -1065407783
  %46 = sub i32 %45, 1
  %47 = add i32 %46, -1065407783
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1319777170, i32 2128734267
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %61, align 8
  %62 = load %"class.std::allocator"*, %"class.std::allocator"** %61, align 8
  %63 = bitcast %"class.std::allocator"* %62 to %"class.__gnu_cxx::new_allocator"*
  %64 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %63) #3
  store i32 1395288907, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt5dequeI4EdgeSaIS1_EESaIS3_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::deque<Edge, std::allocator<Edge> >, std::allocator<std::deque<Edge, std::allocator<Edge> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 230584300921369395
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZNSt16allocator_traitsISaISt5dequeI4EdgeSaIS1_EEEE8allocateERS4_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::deque"* @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.std::deque"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZN9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.482
  %9 = load i32, i32* @y.483
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 307454844, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 307454844, label %21
    i32 -1716400529, label %41
    i32 -2047476101, label %65
    i32 -270444156, label %68
    i32 758264102, label %69
    i32 -1339265943, label %75
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1716400529, i32 -1339265943
  store i32 %40, i32* %17
  br label %83

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.482
  %52 = load i32, i32* @y.483
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -2047476101, i32 -1339265943
  store i32 %64, i32* %17
  br label %83

; <label>:65:                                     ; preds = %18
  %66 = load volatile i1, i1* %4
  %67 = select i1 %66, i32 -270444156, i32 758264102
  store i32 %67, i32* %17
  br label %83

; <label>:68:                                     ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:69:                                     ; preds = %18
  %70 = load volatile i64*, i64** %5
  %71 = load i64, i64* %70, align 8
  %72 = mul i64 %71, 80
  %73 = call i8* @_Znwm(i64 %72)
  %74 = bitcast i8* %73 to %"class.std::deque"*
  ret %"class.std::deque"* %74

; <label>:75:                                     ; preds = %18
  %76 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %76, align 8
  store i64 %1, i64* %77, align 8
  store i8* %2, i8** %78, align 8
  %79 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt5dequeI4EdgeSaIS2_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %79) #3
  %82 = icmp ugt i64 %80, %81
  store i32 -1716400529, i32* %17
  br label %83

; <label>:83:                                     ; preds = %75, %65, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZSt22__uninitialized_copy_aIPSt5dequeI4EdgeSaIS1_EES4_S3_ET0_T_S6_S5_RSaIT1_E(%"class.std::deque"*, %"class.std::deque"*, %"class.std::deque"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %2, %"class.std::deque"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %11 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %12 = call %"class.std::deque"* @_ZSt18uninitialized_copyIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_S6_S5_(%"class.std::deque"* %9, %"class.std::deque"* %10, %"class.std::deque"* %11)
  ret %"class.std::deque"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::deque"* @_ZSt32__make_move_if_noexcept_iteratorIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_(%"class.std::deque"*) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZSt18uninitialized_copyIPSt5dequeI4EdgeSaIS1_EES4_ET0_T_S6_S5_(%"class.std::deque"*, %"class.std::deque"*, %"class.std::deque"*) #0 comdat {
  %4 = alloca %"class.std::deque"*, align 8
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::deque"* %0, %"class.std::deque"** %4, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %5, align 8
  store %"class.std::deque"* %2, %"class.std::deque"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %9 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %11 = call %"class.std::deque"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5dequeI4EdgeSaIS3_EES6_EET0_T_S8_S7_(%"class.std::deque"* %8, %"class.std::deque"* %9, %"class.std::deque"* %10)
  ret %"class.std::deque"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::deque"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIPSt5dequeI4EdgeSaIS3_EES6_EET0_T_S8_S7_(%"class.std::deque"*, %"class.std::deque"*, %"class.std::deque"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::deque"*, align 8
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca %"class.std::deque"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %4, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %5, align 8
  store %"class.std::deque"* %2, %"class.std::deque"** %6, align 8
  %10 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %10, %"class.std::deque"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %159, %3
  %12 = load i32, i32* @x.490
  %13 = load i32, i32* @y.491
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  br i1 %35, label %37, label %377

; <label>:37:                                     ; preds = %11, %377
  %38 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %40 = icmp ne %"class.std::deque"* %38, %39
  %41 = load i32, i32* @x.490
  %42 = load i32, i32* @y.491
  %43 = sub i32 %41, -118665599
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -118665599
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %377

; <label>:67:                                     ; preds = %37
  br i1 %40, label %68, label %264

; <label>:68:                                     ; preds = %67
  %69 = load i32, i32* @x.490
  %70 = load i32, i32* @y.491
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 true, true
  %81 = and i1 %78, true
  %82 = and i1 %76, %80
  %83 = and i1 %79, true
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 true, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %381

; <label>:94:                                     ; preds = %68, %381
  %95 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %96 = call %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80) %95) #3
  %97 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %98 = load i32, i32* @x.490
  %99 = load i32, i32* @y.491
  %100 = sub i32 %98, 1146417061
  %101 = sub i32 %100, 1
  %102 = add i32 %101, 1146417061
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %381

; <label>:112:                                    ; preds = %94
  invoke void @_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJRS3_EEvPT_DpOT0_(%"class.std::deque"* %96, %"class.std::deque"* dereferenceable(80) %97)
          to label %113 unwind label %160

; <label>:113:                                    ; preds = %112
  br label %114

; <label>:114:                                    ; preds = %113
  %115 = load i32, i32* @x.490
  %116 = load i32, i32* @y.491
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  br i1 %126, label %128, label %385

; <label>:128:                                    ; preds = %114, %385
  %129 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %130 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %129, i32 1
  store %"class.std::deque"* %130, %"class.std::deque"** %4, align 8
  %131 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %132 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %131, i32 1
  store %"class.std::deque"* %132, %"class.std::deque"** %7, align 8
  %133 = load i32, i32* @x.490
  %134 = load i32, i32* @y.491
  %135 = sub i32 %133, 1300983772
  %136 = sub i32 %135, 1
  %137 = add i32 %136, 1300983772
  %138 = sub i32 %133, 1
  %139 = mul i32 %133, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %134, 10
  %143 = xor i1 %141, true
  %144 = xor i1 %142, true
  %145 = xor i1 false, true
  %146 = and i1 %143, false
  %147 = and i1 %141, %145
  %148 = and i1 %144, false
  %149 = and i1 %142, %145
  %150 = or i1 %146, %147
  %151 = or i1 %148, %149
  %152 = xor i1 %150, %151
  %153 = or i1 %143, %144
  %154 = xor i1 %153, true
  %155 = or i1 false, %145
  %156 = and i1 %154, %155
  %157 = or i1 %152, %156
  %158 = or i1 %141, %142
  br i1 %157, label %159, label %385

; <label>:159:                                    ; preds = %128
  br label %11

; <label>:160:                                    ; preds = %112
  %161 = load i32, i32* @x.490
  %162 = load i32, i32* @y.491
  %163 = sub i32 0, 1
  %164 = add i32 %161, %163
  %165 = sub i32 %161, 1
  %166 = mul i32 %161, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %162, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 true, true
  %173 = and i1 %170, true
  %174 = and i1 %168, %172
  %175 = and i1 %171, true
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 true, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  br i1 %184, label %186, label %390

; <label>:186:                                    ; preds = %160, %390
  %187 = landingpad { i8*, i32 }
          catch i8* null
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %8, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %9, align 4
  %190 = load i32, i32* @x.490
  %191 = load i32, i32* @y.491
  %192 = sub i32 0, 1
  %193 = add i32 %190, %192
  %194 = sub i32 %190, 1
  %195 = mul i32 %190, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %191, 10
  %199 = xor i1 %197, true
  %200 = xor i1 %198, true
  %201 = xor i1 true, true
  %202 = and i1 %199, true
  %203 = and i1 %197, %201
  %204 = and i1 %200, true
  %205 = and i1 %198, %201
  %206 = or i1 %202, %203
  %207 = or i1 %204, %205
  %208 = xor i1 %206, %207
  %209 = or i1 %199, %200
  %210 = xor i1 %209, true
  %211 = or i1 true, %201
  %212 = and i1 %210, %211
  %213 = or i1 %208, %212
  %214 = or i1 %197, %198
  br i1 %213, label %215, label %390

; <label>:215:                                    ; preds = %186
  br label %216

; <label>:216:                                    ; preds = %215
  %217 = load i8*, i8** %8, align 8
  %218 = call i8* @__cxa_begin_catch(i8* %217) #3
  %219 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  %220 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt5dequeI4EdgeSaIS1_EEEvT_S5_(%"class.std::deque"* %219, %"class.std::deque"* %220)
          to label %221 unwind label %266

; <label>:221:                                    ; preds = %216
  %222 = load i32, i32* @x.490
  %223 = load i32, i32* @y.491
  %224 = sub i32 %222, -1473452299
  %225 = sub i32 %224, 1
  %226 = add i32 %225, -1473452299
  %227 = sub i32 %222, 1
  %228 = mul i32 %222, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %223, 10
  %232 = xor i1 %230, true
  %233 = xor i1 %231, true
  %234 = xor i1 false, true
  %235 = and i1 %232, false
  %236 = and i1 %230, %234
  %237 = and i1 %233, false
  %238 = and i1 %231, %234
  %239 = or i1 %235, %236
  %240 = or i1 %237, %238
  %241 = xor i1 %239, %240
  %242 = or i1 %232, %233
  %243 = xor i1 %242, true
  %244 = or i1 false, %234
  %245 = and i1 %243, %244
  %246 = or i1 %241, %245
  %247 = or i1 %230, %231
  br i1 %246, label %248, label %394

; <label>:248:                                    ; preds = %221, %394
  %249 = load i32, i32* @x.490
  %250 = load i32, i32* @y.491
  %251 = add i32 %249, -1507840110
  %252 = sub i32 %251, 1
  %253 = sub i32 %252, -1507840110
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %394

; <label>:263:                                    ; preds = %248
  invoke void @__cxa_rethrow() #12
          to label %334 unwind label %266

; <label>:264:                                    ; preds = %67
  %265 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  ret %"class.std::deque"* %265

; <label>:266:                                    ; preds = %263, %216
  %267 = landingpad { i8*, i32 }
          cleanup
  %268 = extractvalue { i8*, i32 } %267, 0
  store i8* %268, i8** %8, align 8
  %269 = extractvalue { i8*, i32 } %267, 1
  store i32 %269, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %270 unwind label %331

; <label>:270:                                    ; preds = %266
  %271 = load i32, i32* @x.490
  %272 = load i32, i32* @y.491
  %273 = sub i32 %271, 1077272496
  %274 = sub i32 %273, 1
  %275 = add i32 %274, 1077272496
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 false, true
  %284 = and i1 %281, false
  %285 = and i1 %279, %283
  %286 = and i1 %282, false
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 false, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %395

; <label>:297:                                    ; preds = %270, %395
  %298 = load i32, i32* @x.490
  %299 = load i32, i32* @y.491
  %300 = sub i32 %298, -1085851368
  %301 = sub i32 %300, 1
  %302 = add i32 %301, -1085851368
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = xor i1 %306, true
  %309 = xor i1 %307, true
  %310 = xor i1 true, true
  %311 = and i1 %308, true
  %312 = and i1 %306, %310
  %313 = and i1 %309, true
  %314 = and i1 %307, %310
  %315 = or i1 %311, %312
  %316 = or i1 %313, %314
  %317 = xor i1 %315, %316
  %318 = or i1 %308, %309
  %319 = xor i1 %318, true
  %320 = or i1 true, %310
  %321 = and i1 %319, %320
  %322 = or i1 %317, %321
  %323 = or i1 %306, %307
  br i1 %322, label %324, label %395

; <label>:324:                                    ; preds = %297
  br label %326
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:326:                                    ; preds = %324
  %327 = load i8*, i8** %8, align 8
  %328 = load i32, i32* %9, align 4
  %329 = insertvalue { i8*, i32 } undef, i8* %327, 0
  %330 = insertvalue { i8*, i32 } %329, i32 %328, 1
  resume { i8*, i32 } %330

; <label>:331:                                    ; preds = %266
  %332 = landingpad { i8*, i32 }
          catch i8* null
  %333 = extractvalue { i8*, i32 } %332, 0
  call void @__clang_call_terminate(i8* %333) #11
  unreachable

; <label>:334:                                    ; preds = %263
  %335 = load i32, i32* @x.490
  %336 = load i32, i32* @y.491
  %337 = sub i32 %335, -177291379
  %338 = sub i32 %337, 1
  %339 = add i32 %338, -177291379
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  br i1 %347, label %349, label %396

; <label>:349:                                    ; preds = %334, %396
  %350 = load i32, i32* @x.490
  %351 = load i32, i32* @y.491
  %352 = sub i32 %350, 672832173
  %353 = sub i32 %352, 1
  %354 = add i32 %353, 672832173
  %355 = sub i32 %350, 1
  %356 = mul i32 %350, %354
  %357 = urem i32 %356, 2
  %358 = icmp eq i32 %357, 0
  %359 = icmp slt i32 %351, 10
  %360 = xor i1 %358, true
  %361 = xor i1 %359, true
  %362 = xor i1 false, true
  %363 = and i1 %360, false
  %364 = and i1 %358, %362
  %365 = and i1 %361, false
  %366 = and i1 %359, %362
  %367 = or i1 %363, %364
  %368 = or i1 %365, %366
  %369 = xor i1 %367, %368
  %370 = or i1 %360, %361
  %371 = xor i1 %370, true
  %372 = or i1 false, %362
  %373 = and i1 %371, %372
  %374 = or i1 %369, %373
  %375 = or i1 %358, %359
  br i1 %374, label %376, label %396

; <label>:376:                                    ; preds = %349
  unreachable

; <label>:377:                                    ; preds = %37, %11
  %378 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %379 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  %380 = icmp ne %"class.std::deque"* %378, %379
  br label %37

; <label>:381:                                    ; preds = %94, %68
  %382 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %383 = call %"class.std::deque"* @_ZSt11__addressofISt5dequeI4EdgeSaIS1_EEEPT_RS4_(%"class.std::deque"* dereferenceable(80) %382) #3
  %384 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  br label %94

; <label>:385:                                    ; preds = %128, %114
  %386 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %387 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %386, i32 1
  store %"class.std::deque"* %387, %"class.std::deque"** %4, align 8
  %388 = load %"class.std::deque"*, %"class.std::deque"** %7, align 8
  %389 = getelementptr inbounds %"class.std::deque", %"class.std::deque"* %388, i32 1
  store %"class.std::deque"* %389, %"class.std::deque"** %7, align 8
  br label %128

; <label>:390:                                    ; preds = %186, %160
  %391 = landingpad { i8*, i32 }
          catch i8* null
  %392 = extractvalue { i8*, i32 } %391, 0
  store i8* %392, i8** %8, align 8
  %393 = extractvalue { i8*, i32 } %391, 1
  store i32 %393, i32* %9, align 4
  br label %186

; <label>:394:                                    ; preds = %248, %221
  br label %248

; <label>:395:                                    ; preds = %297, %270
  br label %297

; <label>:396:                                    ; preds = %349, %334
  br label %349
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt5dequeI4EdgeSaIS1_EEJRS3_EEvPT_DpOT0_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) #0 comdat {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::deque"*
  %8 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::deque"* @_ZSt7forwardIRSt5dequeI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::deque"* dereferenceable(80) %8) #3
  call void @_ZNSt5dequeI4EdgeSaIS0_EEC2ERKS2_(%"class.std::deque"* %7, %"class.std::deque"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt7forwardIRSt5dequeI4EdgeSaIS1_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeI4EdgeSaIS0_EEC2ERKS2_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  %5 = alloca %"class.std::allocator.5", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"struct.std::_Deque_iterator.20", align 8
  %9 = alloca %"struct.std::_Deque_iterator.20", align 8
  %10 = alloca %"struct.std::_Deque_iterator", align 8
  %11 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %12 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %13 = bitcast %"class.std::deque"* %12 to %"class.std::_Deque_base"*
  %14 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_(%"class.std::allocator.5"* sret %5, %"class.std::allocator.5"* dereferenceable(1) %16)
  %17 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %18 = call i64 @_ZNKSt5dequeI4EdgeSaIS0_EE4sizeEv(%"class.std::deque"* %17) #3
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2ERKS1_m(%"class.std::_Deque_base"* %13, %"class.std::allocator.5"* dereferenceable(1) %5, i64 %18)
          to label %19 unwind label %28

; <label>:19:                                     ; preds = %2
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.5"* %5) #3
  %20 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  call void @_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.20"* sret %8, %"class.std::deque"* %20) #3
  %21 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  call void @_ZNKSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator.20"* sret %9, %"class.std::deque"* %21) #3
  %22 = bitcast %"class.std::deque"* %12 to %"class.std::_Deque_base"*
  %23 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %23, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %10, %"struct.std::_Deque_iterator"* dereferenceable(32) %24) #3
  %25 = bitcast %"class.std::deque"* %12 to %"class.std::_Deque_base"*
  %26 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseI4EdgeSaIS0_EE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %25) #3
  invoke void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_ES1_ET0_T_SA_S9_RSaIT1_E(%"struct.std::_Deque_iterator"* sret %11, %"struct.std::_Deque_iterator.20"* byval align 8 %8, %"struct.std::_Deque_iterator.20"* byval align 8 %9, %"struct.std::_Deque_iterator"* %10, %"class.std::allocator.5"* dereferenceable(1) %26)
          to label %27 unwind label %32

; <label>:27:                                     ; preds = %19
  ret void

; <label>:28:                                     ; preds = %2
  %29 = landingpad { i8*, i32 }
          cleanup
  %30 = extractvalue { i8*, i32 } %29, 0
  store i8* %30, i8** %6, align 8
  %31 = extractvalue { i8*, i32 } %29, 1
  store i32 %31, i32* %7, align 4
  call void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.5"* %5) #3
  br label %37

; <label>:32:                                     ; preds = %19
  %33 = landingpad { i8*, i32 }
          cleanup
  %34 = extractvalue { i8*, i32 } %33, 0
  store i8* %34, i8** %6, align 8
  %35 = extractvalue { i8*, i32 } %33, 1
  store i32 %35, i32* %7, align 4
  %36 = bitcast %"class.std::deque"* %12 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EED2Ev(%"class.std::_Deque_base"* %36) #3
  br label %37

; <label>:37:                                     ; preds = %32, %28
  %38 = load i32, i32* @x.496
  %39 = load i32, i32* @y.497
  %40 = sub i32 %38, -1130843420
  %41 = sub i32 %40, 1
  %42 = add i32 %41, -1130843420
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %84

; <label>:64:                                     ; preds = %37, %84
  %65 = load i8*, i8** %6, align 8
  %66 = load i32, i32* %7, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  %69 = load i32, i32* @x.496
  %70 = load i32, i32* @y.497
  %71 = add i32 %69, 1553143396
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1553143396
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %84

; <label>:83:                                     ; preds = %64
  resume { i8*, i32 } %68

; <label>:84:                                     ; preds = %64, %37
  %85 = load i8*, i8** %6, align 8
  %86 = load i32, i32* %7, align 4
  %87 = insertvalue { i8*, i32 } undef, i8* %85, 0
  %88 = insertvalue { i8*, i32 } %87, i32 %86, 1
  br label %64
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaI4EdgeEE17_S_select_on_copyERKS2_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.498
  %6 = load i32, i32* @y.499
  %7 = sub i32 %5, 696191379
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 696191379
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1913204180, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1913204180, label %19
    i32 956303731, label %27
    i32 529368879, label %57
    i32 -443722833, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 956303731, i32 -443722833
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %28, align 8
  %29 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %28, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_(%"class.std::allocator.5"* sret %0, %"class.std::allocator.5"* dereferenceable(1) %29)
  %30 = load i32, i32* @x.498
  %31 = load i32, i32* @y.499
  %32 = add i32 %30, -719710977
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -719710977
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 529368879, i32 -443722833
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %59, align 8
  %60 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %59, align 8
  call void @_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_(%"class.std::allocator.5"* sret %0, %"class.std::allocator.5"* dereferenceable(1) %60)
  store i32 956303731, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EEC2ERKS1_m(%"class.std::_Deque_base"*, %"class.std::allocator.5"* dereferenceable(1), i64) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::allocator.5"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %5, align 8
  store i64 %2, i64* %6, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %5, align 8
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2ERKS1_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %10, %"class.std::allocator.5"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE17_M_initialize_mapEm(%"class.std::_Deque_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implD2Ev(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeED2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt22__uninitialized_copy_aISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_ES1_ET0_T_SA_S9_RSaIT1_E(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca %"struct.std::_Deque_iterator.20", align 8
  %8 = alloca %"struct.std::_Deque_iterator.20", align 8
  %9 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::allocator.5"* %4, %"class.std::allocator.5"** %6, align 8
  %10 = bitcast %"struct.std::_Deque_iterator.20"* %7 to i8*
  %11 = bitcast %"struct.std::_Deque_iterator.20"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 32, i32 8, i1 false)
  %12 = bitcast %"struct.std::_Deque_iterator.20"* %8 to i8*
  %13 = bitcast %"struct.std::_Deque_iterator.20"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZSt18uninitialized_copyISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_EET0_T_SA_S9_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.20"* byval align 8 %7, %"struct.std::_Deque_iterator.20"* byval align 8 %8, %"struct.std::_Deque_iterator"* %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeI4EdgeSaIS0_EE5beginEv(%"struct.std::_Deque_iterator.20"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt5dequeI4EdgeSaIS0_EE3endEv(%"struct.std::_Deque_iterator.20"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaI4EdgeEE37select_on_container_copy_constructionERKS1_(%"class.std::allocator.5"* noalias sret, %"class.std::allocator.5"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %3, align 8
  %4 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.5"* %0, %"class.std::allocator.5"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_(%"class.__gnu_cxx::new_allocator.6"* %6, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorI4EdgeEC2ERKS2_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseI4EdgeSaIS0_EE11_Deque_implC2ERKS1_(%"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %0, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"*, %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5 to %"class.std::allocator.5"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  call void @_ZNSaI4EdgeEC2ERKS0_(%"class.std::allocator.5"* %6, %"class.std::allocator.5"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 0
  store %struct.Edge** null, %struct.Edge*** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %10) #3
  %11 = getelementptr inbounds %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl", %"struct.std::_Deque_base<Edge, std::allocator<Edge> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt18uninitialized_copyISt15_Deque_iteratorI4EdgeRKS1_PS2_ES0_IS1_RS1_PS1_EET0_T_SA_S9_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat {
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::_Deque_iterator.20", align 8
  %7 = alloca %"struct.std::_Deque_iterator.20", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  store i8 1, i8* %5, align 1
  %9 = bitcast %"struct.std::_Deque_iterator.20"* %6 to i8*
  %10 = bitcast %"struct.std::_Deque_iterator.20"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 32, i32 8, i1 false)
  %11 = bitcast %"struct.std::_Deque_iterator.20"* %7 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator.20"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt15_Deque_iteratorI4EdgeRKS3_PS4_ES2_IS3_RS3_PS3_EEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* sret %0, %"struct.std::_Deque_iterator.20"* byval align 8 %6, %"struct.std::_Deque_iterator.20"* byval align 8 %7, %"struct.std::_Deque_iterator"* %8)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #8

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt15_Deque_iteratorI4EdgeRKS3_PS4_ES2_IS3_RS3_PS3_EEET0_T_SC_SB_(%"struct.std::_Deque_iterator"* noalias sret, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator.20"* byval align 8, %"struct.std::_Deque_iterator"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca i8*
  %6 = alloca i32
  %7 = alloca %"struct.std::_Deque_iterator", align 8
  %8 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  br label %9

; <label>:9:                                      ; preds = %58, %4
  %10 = call zeroext i1 @_ZStneI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_(%"struct.std::_Deque_iterator.20"* dereferenceable(32) %1, %"struct.std::_Deque_iterator.20"* dereferenceable(32) %2) #3
  br i1 %10, label %11, label %176

; <label>:11:                                     ; preds = %9
  %12 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRS0_PS0_EdeEv(%"struct.std::_Deque_iterator"* %0) #3
  %13 = call %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24) %12) #3
  %14 = call dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv(%"struct.std::_Deque_iterator.20"* %1) #3
  invoke void @_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_(%struct.Edge* %13, %struct.Edge* dereferenceable(24) %14)
          to label %15 unwind label %61

; <label>:15:                                     ; preds = %11
  %16 = load i32, i32* @x.520
  %17 = load i32, i32* @y.521
  %18 = add i32 %16, -1429443640
  %19 = sub i32 %18, 1
  %20 = sub i32 %19, -1429443640
  %21 = sub i32 %16, 1
  %22 = mul i32 %16, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %17, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %246

; <label>:30:                                     ; preds = %15, %246
  %31 = load i32, i32* @x.520
  %32 = load i32, i32* @y.521
  %33 = add i32 %31, -1900859331
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1900859331
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %246

; <label>:57:                                     ; preds = %30
  br label %58

; <label>:58:                                     ; preds = %57
  %59 = call dereferenceable(32) %"struct.std::_Deque_iterator.20"* @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EppEv(%"struct.std::_Deque_iterator.20"* %1) #3
  %60 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EppEv(%"struct.std::_Deque_iterator"* %0) #3
  br label %9

; <label>:61:                                     ; preds = %11
  %62 = load i32, i32* @x.520
  %63 = load i32, i32* @y.521
  %64 = sub i32 %62, 496887871
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 496887871
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %247

; <label>:88:                                     ; preds = %61, %247
  %89 = landingpad { i8*, i32 }
          catch i8* null
  %90 = extractvalue { i8*, i32 } %89, 0
  store i8* %90, i8** %5, align 8
  %91 = extractvalue { i8*, i32 } %89, 1
  store i32 %91, i32* %6, align 4
  %92 = load i32, i32* @x.520
  %93 = load i32, i32* @y.521
  %94 = sub i32 %92, 1682093099
  %95 = sub i32 %94, 1
  %96 = add i32 %95, 1682093099
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %247

; <label>:118:                                    ; preds = %88
  br label %119

; <label>:119:                                    ; preds = %118
  %120 = load i32, i32* @x.520
  %121 = load i32, i32* @y.521
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 true, true
  %132 = and i1 %129, true
  %133 = and i1 %127, %131
  %134 = and i1 %130, true
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 true, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  br i1 %143, label %145, label %251

; <label>:145:                                    ; preds = %119, %251
  %146 = load i8*, i8** %5, align 8
  %147 = call i8* @__cxa_begin_catch(i8* %146) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  %148 = load i32, i32* @x.520
  %149 = load i32, i32* @y.521
  %150 = add i32 %148, 221156499
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, 221156499
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 false, true
  %161 = and i1 %158, false
  %162 = and i1 %156, %160
  %163 = and i1 %159, false
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 false, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %251

; <label>:174:                                    ; preds = %145
  invoke void @_ZSt8_DestroyISt15_Deque_iteratorI4EdgeRS1_PS1_EEvT_S5_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* %8)
          to label %175 unwind label %231

; <label>:175:                                    ; preds = %174
  invoke void @__cxa_rethrow() #12
          to label %245 unwind label %231

; <label>:176:                                    ; preds = %9
  %177 = load i32, i32* @x.520
  %178 = load i32, i32* @y.521
  %179 = sub i32 %177, -822838706
  %180 = sub i32 %179, 1
  %181 = add i32 %180, -822838706
  %182 = sub i32 %177, 1
  %183 = mul i32 %177, %181
  %184 = urem i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = icmp slt i32 %178, 10
  %187 = xor i1 %185, true
  %188 = xor i1 %186, true
  %189 = xor i1 true, true
  %190 = and i1 %187, true
  %191 = and i1 %185, %189
  %192 = and i1 %188, true
  %193 = and i1 %186, %189
  %194 = or i1 %190, %191
  %195 = or i1 %192, %193
  %196 = xor i1 %194, %195
  %197 = or i1 %187, %188
  %198 = xor i1 %197, true
  %199 = or i1 true, %189
  %200 = and i1 %198, %199
  %201 = or i1 %196, %200
  %202 = or i1 %185, %186
  br i1 %201, label %203, label %254

; <label>:203:                                    ; preds = %176, %254
  %204 = load i32, i32* @x.520
  %205 = load i32, i32* @y.521
  %206 = add i32 %204, -777727336
  %207 = sub i32 %206, 1
  %208 = sub i32 %207, -777727336
  %209 = sub i32 %204, 1
  %210 = mul i32 %204, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %205, 10
  %214 = xor i1 %212, true
  %215 = xor i1 %213, true
  %216 = xor i1 true, true
  %217 = and i1 %214, true
  %218 = and i1 %212, %216
  %219 = and i1 %215, true
  %220 = and i1 %213, %216
  %221 = or i1 %217, %218
  %222 = or i1 %219, %220
  %223 = xor i1 %221, %222
  %224 = or i1 %214, %215
  %225 = xor i1 %224, true
  %226 = or i1 true, %216
  %227 = and i1 %225, %226
  %228 = or i1 %223, %227
  %229 = or i1 %212, %213
  br i1 %228, label %230, label %254

; <label>:230:                                    ; preds = %203
  ret void

; <label>:231:                                    ; preds = %175, %174
  %232 = landingpad { i8*, i32 }
          cleanup
  %233 = extractvalue { i8*, i32 } %232, 0
  store i8* %233, i8** %5, align 8
  %234 = extractvalue { i8*, i32 } %232, 1
  store i32 %234, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %235 unwind label %242

; <label>:235:                                    ; preds = %231
  br label %237
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:237:                                    ; preds = %235
  %238 = load i8*, i8** %5, align 8
  %239 = load i32, i32* %6, align 4
  %240 = insertvalue { i8*, i32 } undef, i8* %238, 0
  %241 = insertvalue { i8*, i32 } %240, i32 %239, 1
  resume { i8*, i32 } %241

; <label>:242:                                    ; preds = %231
  %243 = landingpad { i8*, i32 }
          catch i8* null
  %244 = extractvalue { i8*, i32 } %243, 0
  call void @__clang_call_terminate(i8* %244) #11
  unreachable

; <label>:245:                                    ; preds = %175
  unreachable

; <label>:246:                                    ; preds = %30, %15
  br label %30

; <label>:247:                                    ; preds = %88, %61
  %248 = landingpad { i8*, i32 }
          catch i8* null
  %249 = extractvalue { i8*, i32 } %248, 0
  store i8* %249, i8** %5, align 8
  %250 = extractvalue { i8*, i32 } %248, 1
  store i32 %250, i32* %6, align 4
  br label %88

; <label>:251:                                    ; preds = %145, %119
  %252 = load i8*, i8** %5, align 8
  %253 = call i8* @__cxa_begin_catch(i8* %252) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %7, %"struct.std::_Deque_iterator"* dereferenceable(32) %3) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %8, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  br label %145

; <label>:254:                                    ; preds = %203, %176
  br label %203
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZStneI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_(%"struct.std::_Deque_iterator.20"* dereferenceable(32), %"struct.std::_Deque_iterator.20"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %3, align 8
  store %"struct.std::_Deque_iterator.20"* %1, %"struct.std::_Deque_iterator.20"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %3, align 8
  %6 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4, align 8
  %7 = call zeroext i1 @_ZSteqI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_(%"struct.std::_Deque_iterator.20"* dereferenceable(32) %5, %"struct.std::_Deque_iterator.20"* dereferenceable(32) %6) #3
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructI4EdgeJRKS0_EEvPT_DpOT0_(%struct.Edge*, %struct.Edge* dereferenceable(24)) #4 comdat {
  %3 = alloca %struct.Edge*, align 8
  %4 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %3, align 8
  store %struct.Edge* %1, %struct.Edge** %4, align 8
  %5 = load %struct.Edge*, %struct.Edge** %3, align 8
  %6 = bitcast %struct.Edge* %5 to i8*
  %7 = bitcast i8* %6 to %struct.Edge*
  %8 = load %struct.Edge*, %struct.Edge** %4, align 8
  %9 = call dereferenceable(24) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(24) %8) #3
  %10 = bitcast %struct.Edge* %7 to i8*
  %11 = bitcast %struct.Edge* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %struct.Edge* @_ZSt11__addressofI4EdgeEPT_RS1_(%struct.Edge* dereferenceable(24)) #4 comdat {
  %2 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %2, align 8
  %3 = load %struct.Edge*, %struct.Edge** %2, align 8
  %4 = bitcast %struct.Edge* %3 to i8*
  %5 = bitcast i8* %4 to %struct.Edge*
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZNKSt15_Deque_iteratorI4EdgeRKS0_PS1_EdeEv(%"struct.std::_Deque_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %3, i32 0, i32 0
  %5 = load %struct.Edge*, %struct.Edge** %4, align 8
  ret %struct.Edge* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator.20"* @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EppEv(%"struct.std::_Deque_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %struct.Edge*
  %3 = alloca %struct.Edge*
  %4 = alloca %"struct.std::_Deque_iterator.20"*
  %5 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %5, align 8
  %6 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %5, align 8
  store %"struct.std::_Deque_iterator.20"* %6, %"struct.std::_Deque_iterator.20"** %4
  %7 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %7, i32 0, i32 0
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  %10 = getelementptr inbounds %struct.Edge, %struct.Edge* %9, i32 1
  store %struct.Edge* %10, %struct.Edge** %8, align 8
  %11 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %11, i32 0, i32 0
  %13 = load %struct.Edge*, %struct.Edge** %12, align 8
  store %struct.Edge* %13, %struct.Edge** %3
  %14 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %14, i32 0, i32 2
  %16 = load %struct.Edge*, %struct.Edge** %15, align 8
  store %struct.Edge* %16, %struct.Edge** %2
  %17 = alloca i32
  store i32 -2077431235, i32* %17
  br label %18

; <label>:18:                                     ; preds = %1, %93
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2077431235, label %21
    i32 12816614, label %26
    i32 987312999, label %41
    i32 1126769263, label %79
    i32 527321645, label %80
    i32 1764099169, label %82
  ]

; <label>:20:                                     ; preds = %18
  br label %93

; <label>:21:                                     ; preds = %18
  %22 = load volatile %struct.Edge*, %struct.Edge** %3
  %23 = load volatile %struct.Edge*, %struct.Edge** %2
  %24 = icmp eq %struct.Edge* %22, %23
  %25 = select i1 %24, i32 12816614, i32 527321645
  store i32 %25, i32* %17
  br label %93

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.530
  %28 = load i32, i32* @y.531
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 987312999, i32 1764099169
  store i32 %40, i32* %17
  br label %93

; <label>:41:                                     ; preds = %18
  %42 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %42, i32 0, i32 3
  %44 = load %struct.Edge**, %struct.Edge*** %43, align 8
  %45 = getelementptr inbounds %struct.Edge*, %struct.Edge** %44, i64 1
  %46 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E11_M_set_nodeEPPS0_(%"struct.std::_Deque_iterator.20"* %46, %struct.Edge** %45) #3
  %47 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %47, i32 0, i32 1
  %49 = load %struct.Edge*, %struct.Edge** %48, align 8
  %50 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %50, i32 0, i32 0
  store %struct.Edge* %49, %struct.Edge** %51, align 8
  %52 = load i32, i32* @x.530
  %53 = load i32, i32* @y.531
  %54 = add i32 %52, -1477817600
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1477817600
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 1126769263, i32 1764099169
  store i32 %78, i32* %17
  br label %93

; <label>:79:                                     ; preds = %18
  store i32 527321645, i32* %17
  br label %93

; <label>:80:                                     ; preds = %18
  %81 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  ret %"struct.std::_Deque_iterator.20"* %81

; <label>:82:                                     ; preds = %18
  %83 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %83, i32 0, i32 3
  %85 = load %struct.Edge**, %struct.Edge*** %84, align 8
  %86 = getelementptr inbounds %struct.Edge*, %struct.Edge** %85, i64 1
  %87 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  call void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E11_M_set_nodeEPPS0_(%"struct.std::_Deque_iterator.20"* %87, %struct.Edge** %86) #3
  %88 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %88, i32 0, i32 1
  %90 = load %struct.Edge*, %struct.Edge** %89, align 8
  %91 = load volatile %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4
  %92 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %91, i32 0, i32 0
  store %struct.Edge* %90, %struct.Edge** %92, align 8
  store i32 987312999, i32* %17
  br label %93

; <label>:93:                                     ; preds = %82, %79, %41, %26, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyISt15_Deque_iteratorI4EdgeRS1_PS1_EEvT_S5_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.532
  %6 = load i32, i32* @y.533
  %7 = sub i32 %5, 954429204
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 954429204
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -868957035, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %60
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -868957035, label %19
    i32 1655595250, label %27
    i32 131165862, label %56
    i32 2037437740, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %60

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1655595250, i32 2037437740
  store i32 %26, i32* %15
  br label %60

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator", align 8
  %29 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %28, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %29, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorI4EdgeRS3_PS3_EEEvT_S7_(%"struct.std::_Deque_iterator"* %28, %"struct.std::_Deque_iterator"* %29)
  %30 = load i32, i32* @x.532
  %31 = load i32, i32* @y.533
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 131165862, i32 2037437740
  store i32 %55, i32* %15
  br label %60

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca %"struct.std::_Deque_iterator", align 8
  %59 = alloca %"struct.std::_Deque_iterator", align 8
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %58, %"struct.std::_Deque_iterator"* dereferenceable(32) %0) #3
  call void @_ZNSt15_Deque_iteratorI4EdgeRS0_PS0_EC2ERKS3_(%"struct.std::_Deque_iterator"* %59, %"struct.std::_Deque_iterator"* dereferenceable(32) %1) #3
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorI4EdgeRS3_PS3_EEEvT_S7_(%"struct.std::_Deque_iterator"* %58, %"struct.std::_Deque_iterator"* %59)
  store i32 1655595250, i32* %15
  br label %60

; <label>:60:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqI4EdgeRKS0_PS1_EbRKSt15_Deque_iteratorIT_T0_T1_ESA_(%"struct.std::_Deque_iterator.20"* dereferenceable(32), %"struct.std::_Deque_iterator.20"* dereferenceable(32)) #4 comdat {
  %3 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %3, align 8
  store %"struct.std::_Deque_iterator.20"* %1, %"struct.std::_Deque_iterator.20"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %5, i32 0, i32 0
  %7 = load %struct.Edge*, %struct.Edge** %6, align 8
  %8 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %8, i32 0, i32 0
  %10 = load %struct.Edge*, %struct.Edge** %9, align 8
  %11 = icmp eq %struct.Edge* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %struct.Edge* @_ZSt7forwardIRK4EdgeEOT_RNSt16remove_referenceIS3_E4typeE(%struct.Edge* dereferenceable(24)) #4 comdat {
  %2 = alloca %struct.Edge*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.536
  %6 = load i32, i32* @y.537
  %7 = add i32 %5, -1275883835
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1275883835
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 636580746, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 636580746, label %19
    i32 -1040122121, label %39
    i32 1574235673, label %57
    i32 457760485, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1040122121, i32 457760485
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %40, align 8
  %41 = load %struct.Edge*, %struct.Edge** %40, align 8
  store %struct.Edge* %41, %struct.Edge** %2
  %42 = load i32, i32* @x.536
  %43 = load i32, i32* @y.537
  %44 = sub i32 %42, 1266568394
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1266568394
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1574235673, i32 457760485
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %struct.Edge*, %struct.Edge** %2
  ret %struct.Edge* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %struct.Edge*, align 8
  store %struct.Edge* %0, %struct.Edge** %60, align 8
  %61 = load %struct.Edge*, %struct.Edge** %60, align 8
  store i32 -1040122121, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E11_M_set_nodeEPPS0_(%"struct.std::_Deque_iterator.20"*, %struct.Edge**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  %4 = alloca %struct.Edge**, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %3, align 8
  store %struct.Edge** %1, %struct.Edge*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %3, align 8
  %6 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %5, i32 0, i32 3
  store %struct.Edge** %6, %struct.Edge*** %7, align 8
  %8 = load %struct.Edge**, %struct.Edge*** %4, align 8
  %9 = load %struct.Edge*, %struct.Edge** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %5, i32 0, i32 1
  store %struct.Edge* %9, %struct.Edge** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %5, i32 0, i32 1
  %12 = load %struct.Edge*, %struct.Edge** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds %struct.Edge, %struct.Edge* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %5, i32 0, i32 2
  store %struct.Edge* %14, %struct.Edge** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_E14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 24)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyISt15_Deque_iteratorI4EdgeRS3_PS3_EEEvT_S7_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorI4EdgeRKS0_PS1_EC2ERKS_IS0_RS0_PS0_E(%"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.544
  %6 = load i32, i32* @y.545
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1426654250, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %106
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1426654250, label %18
    i32 1580704835, label %38
    i32 -1173965794, label %85
    i32 -1578227316, label %86
  ]

; <label>:17:                                     ; preds = %15
  br label %106

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1580704835, i32 -1578227316
  store i32 %37, i32* %14
  br label %106

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %39, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %41, i32 0, i32 0
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load %struct.Edge*, %struct.Edge** %44, align 8
  store %struct.Edge* %45, %struct.Edge** %42, align 8
  %46 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %41, i32 0, i32 1
  %47 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 1
  %49 = load %struct.Edge*, %struct.Edge** %48, align 8
  store %struct.Edge* %49, %struct.Edge** %46, align 8
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %41, i32 0, i32 2
  %51 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 2
  %53 = load %struct.Edge*, %struct.Edge** %52, align 8
  store %struct.Edge* %53, %struct.Edge** %50, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %41, i32 0, i32 3
  %55 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load %struct.Edge**, %struct.Edge*** %56, align 8
  store %struct.Edge** %57, %struct.Edge*** %54, align 8
  %58 = load i32, i32* @x.544
  %59 = load i32, i32* @y.545
  %60 = sub i32 %58, 1131211709
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 1131211709
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1173965794, i32 -1578227316
  store i32 %84, i32* %14
  br label %106

; <label>:85:                                     ; preds = %15
  ret void

; <label>:86:                                     ; preds = %15
  %87 = alloca %"struct.std::_Deque_iterator.20"*, align 8
  %88 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator.20"* %0, %"struct.std::_Deque_iterator.20"** %87, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %88, align 8
  %89 = load %"struct.std::_Deque_iterator.20"*, %"struct.std::_Deque_iterator.20"** %87, align 8
  %90 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %89, i32 0, i32 0
  %91 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %88, align 8
  %92 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %91, i32 0, i32 0
  %93 = load %struct.Edge*, %struct.Edge** %92, align 8
  store %struct.Edge* %93, %struct.Edge** %90, align 8
  %94 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %89, i32 0, i32 1
  %95 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %88, align 8
  %96 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %95, i32 0, i32 1
  %97 = load %struct.Edge*, %struct.Edge** %96, align 8
  store %struct.Edge* %97, %struct.Edge** %94, align 8
  %98 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %89, i32 0, i32 2
  %99 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %88, align 8
  %100 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %99, i32 0, i32 2
  %101 = load %struct.Edge*, %struct.Edge** %100, align 8
  store %struct.Edge* %101, %struct.Edge** %98, align 8
  %102 = getelementptr inbounds %"struct.std::_Deque_iterator.20", %"struct.std::_Deque_iterator.20"* %89, i32 0, i32 3
  %103 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %88, align 8
  %104 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %103, i32 0, i32 3
  %105 = load %struct.Edge**, %struct.Edge*** %104, align 8
  store %struct.Edge** %105, %struct.Edge*** %102, align 8
  store i32 1580704835, i32* %14
  br label %106

; <label>:106:                                    ; preds = %86, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 4
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.0"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.548
  %4 = load i32, i32* @y.549
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %435

; <label>:16:                                     ; preds = %2, %435
  %17 = alloca %"class.std::vector.0"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32*, align 8
  %22 = alloca i32*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  store i64 %1, i64* %18, align 8
  %25 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %26 = load i64, i64* %18, align 8
  %27 = icmp ne i64 %26, 0
  %28 = load i32, i32* @x.548
  %29 = load i32, i32* @y.549
  %30 = sub i32 %28, 2033635004
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 2033635004
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %435

; <label>:42:                                     ; preds = %16
  br i1 %27, label %43, label %371

; <label>:43:                                     ; preds = %42
  %44 = load i32, i32* @x.548
  %45 = load i32, i32* @y.549
  %46 = sub i32 %44, -1938937118
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1938937118
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  br i1 %56, label %58, label %447

; <label>:58:                                     ; preds = %43, %447
  %59 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60, i32 0, i32 2
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = ptrtoint i32* %62 to i64
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 0, %68
  %70 = add i64 %67, %69
  %71 = sub i64 %67, %68
  %72 = sdiv exact i64 %70, 4
  %73 = load i64, i64* %18, align 8
  %74 = icmp uge i64 %72, %73
  %75 = load i32, i32* @x.548
  %76 = load i32, i32* @y.549
  %77 = add i32 %75, 994434113
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 994434113
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %447

; <label>:89:                                     ; preds = %58
  br i1 %74, label %90, label %102

; <label>:90:                                     ; preds = %89
  %91 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %92, i32 0, i32 1
  %94 = load i32*, i32** %93, align 8
  %95 = load i64, i64* %18, align 8
  %96 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %97 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %96) #3
  %98 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %94, i64 %95, %"class.std::allocator.2"* dereferenceable(1) %97)
  %99 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %100, i32 0, i32 1
  store i32* %98, i32** %101, align 8
  br label %329

; <label>:102:                                    ; preds = %89
  %103 = load i64, i64* %18, align 8
  %104 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.0"* %25, i64 %103, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i32 0, i32 0))
  store i64 %104, i64* %19, align 8
  %105 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %25) #3
  store i64 %105, i64* %20, align 8
  %106 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %107 = load i64, i64* %19, align 8
  %108 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.1"* %106, i64 %107)
  store i32* %108, i32** %21, align 8
  %109 = load i32*, i32** %21, align 8
  store i32* %109, i32** %22, align 8
  %110 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %111, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %115, i32 0, i32 1
  %117 = load i32*, i32** %116, align 8
  %118 = load i32*, i32** %21, align 8
  %119 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %120 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %119) #3
  %121 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %113, i32* %117, i32* %118, %"class.std::allocator.2"* dereferenceable(1) %120)
          to label %122 unwind label %182

; <label>:122:                                    ; preds = %102
  store i32* %121, i32** %22, align 8
  %123 = load i32*, i32** %22, align 8
  %124 = load i64, i64* %18, align 8
  %125 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %126 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %125) #3
  %127 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %123, i64 %124, %"class.std::allocator.2"* dereferenceable(1) %126)
          to label %128 unwind label %182

; <label>:128:                                    ; preds = %122
  %129 = load i32, i32* @x.548
  %130 = load i32, i32* @y.549
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %485

; <label>:154:                                    ; preds = %128, %485
  store i32* %127, i32** %22, align 8
  %155 = load i32, i32* @x.548
  %156 = load i32, i32* @y.549
  %157 = add i32 %155, -1555563966
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, -1555563966
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %485

; <label>:181:                                    ; preds = %154
  br label %285

; <label>:182:                                    ; preds = %122, %102
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %23, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %24, align 4
  br label %186

; <label>:186:                                    ; preds = %182
  %187 = load i8*, i8** %23, align 8
  %188 = call i8* @__cxa_begin_catch(i8* %187) #3
  %189 = load i32*, i32** %21, align 8
  %190 = load i32*, i32** %22, align 8
  %191 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %192 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %191) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %189, i32* %190, %"class.std::allocator.2"* dereferenceable(1) %192)
          to label %193 unwind label %280

; <label>:193:                                    ; preds = %186
  %194 = load i32, i32* @x.548
  %195 = load i32, i32* @y.549
  %196 = sub i32 0, 1
  %197 = add i32 %194, %196
  %198 = sub i32 %194, 1
  %199 = mul i32 %194, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %195, 10
  %203 = and i1 %201, %202
  %204 = xor i1 %201, %202
  %205 = or i1 %203, %204
  %206 = or i1 %201, %202
  br i1 %205, label %207, label %486

; <label>:207:                                    ; preds = %193, %486
  %208 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %209 = load i32*, i32** %21, align 8
  %210 = load i64, i64* %19, align 8
  %211 = load i32, i32* @x.548
  %212 = load i32, i32* @y.549
  %213 = sub i32 %211, 1324190283
  %214 = sub i32 %213, 1
  %215 = add i32 %214, 1324190283
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = xor i1 %219, true
  %222 = xor i1 %220, true
  %223 = xor i1 true, true
  %224 = and i1 %221, true
  %225 = and i1 %219, %223
  %226 = and i1 %222, true
  %227 = and i1 %220, %223
  %228 = or i1 %224, %225
  %229 = or i1 %226, %227
  %230 = xor i1 %228, %229
  %231 = or i1 %221, %222
  %232 = xor i1 %231, true
  %233 = or i1 true, %223
  %234 = and i1 %232, %233
  %235 = or i1 %230, %234
  %236 = or i1 %219, %220
  br i1 %235, label %237, label %486

; <label>:237:                                    ; preds = %207
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.1"* %208, i32* %209, i64 %210)
          to label %238 unwind label %280

; <label>:238:                                    ; preds = %237
  %239 = load i32, i32* @x.548
  %240 = load i32, i32* @y.549
  %241 = sub i32 0, 1
  %242 = add i32 %239, %241
  %243 = sub i32 %239, 1
  %244 = mul i32 %239, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %240, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %490

; <label>:252:                                    ; preds = %238, %490
  %253 = load i32, i32* @x.548
  %254 = load i32, i32* @y.549
  %255 = sub i32 %253, 1693658953
  %256 = sub i32 %255, 1
  %257 = add i32 %256, 1693658953
  %258 = sub i32 %253, 1
  %259 = mul i32 %253, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %254, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 true, true
  %266 = and i1 %263, true
  %267 = and i1 %261, %265
  %268 = and i1 %264, true
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 true, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  br i1 %277, label %279, label %490

; <label>:279:                                    ; preds = %252
  invoke void @__cxa_rethrow() #12
          to label %434 unwind label %280

; <label>:280:                                    ; preds = %279, %237, %186
  %281 = landingpad { i8*, i32 }
          cleanup
  %282 = extractvalue { i8*, i32 } %281, 0
  store i8* %282, i8** %23, align 8
  %283 = extractvalue { i8*, i32 } %281, 1
  store i32 %283, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %284 unwind label %431

; <label>:284:                                    ; preds = %280
  br label %372

; <label>:285:                                    ; preds = %181
  %286 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %287 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %287, i32 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %291 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %291, i32 0, i32 1
  %293 = load i32*, i32** %292, align 8
  %294 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %295 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %294) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %289, i32* %293, %"class.std::allocator.2"* dereferenceable(1) %295)
  %296 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %297 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %298 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %297, i32 0, i32 0
  %299 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %298, i32 0, i32 0
  %300 = load i32*, i32** %299, align 8
  %301 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %302, i32 0, i32 2
  %304 = load i32*, i32** %303, align 8
  %305 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %306 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %305, i32 0, i32 0
  %307 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %306, i32 0, i32 0
  %308 = load i32*, i32** %307, align 8
  %309 = ptrtoint i32* %304 to i64
  %310 = ptrtoint i32* %308 to i64
  %311 = sub i64 0, %310
  %312 = add i64 %309, %311
  %313 = sub i64 %309, %310
  %314 = sdiv exact i64 %312, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.1"* %296, i32* %300, i64 %314)
  %315 = load i32*, i32** %21, align 8
  %316 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %317 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %316, i32 0, i32 0
  %318 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %317, i32 0, i32 0
  store i32* %315, i32** %318, align 8
  %319 = load i32*, i32** %22, align 8
  %320 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %321 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %320, i32 0, i32 0
  %322 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %321, i32 0, i32 1
  store i32* %319, i32** %322, align 8
  %323 = load i32*, i32** %21, align 8
  %324 = load i64, i64* %19, align 8
  %325 = getelementptr inbounds i32, i32* %323, i64 %324
  %326 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %327 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %326, i32 0, i32 0
  %328 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %327, i32 0, i32 2
  store i32* %325, i32** %328, align 8
  br label %329

; <label>:329:                                    ; preds = %285, %90
  %330 = load i32, i32* @x.548
  %331 = load i32, i32* @y.549
  %332 = sub i32 0, 1
  %333 = add i32 %330, %332
  %334 = sub i32 %330, 1
  %335 = mul i32 %330, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %331, 10
  %339 = and i1 %337, %338
  %340 = xor i1 %337, %338
  %341 = or i1 %339, %340
  %342 = or i1 %337, %338
  br i1 %341, label %343, label %491

; <label>:343:                                    ; preds = %329, %491
  %344 = load i32, i32* @x.548
  %345 = load i32, i32* @y.549
  %346 = add i32 %344, 1116692404
  %347 = sub i32 %346, 1
  %348 = sub i32 %347, 1116692404
  %349 = sub i32 %344, 1
  %350 = mul i32 %344, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %345, 10
  %354 = xor i1 %352, true
  %355 = xor i1 %353, true
  %356 = xor i1 true, true
  %357 = and i1 %354, true
  %358 = and i1 %352, %356
  %359 = and i1 %355, true
  %360 = and i1 %353, %356
  %361 = or i1 %357, %358
  %362 = or i1 %359, %360
  %363 = xor i1 %361, %362
  %364 = or i1 %354, %355
  %365 = xor i1 %364, true
  %366 = or i1 true, %356
  %367 = and i1 %365, %366
  %368 = or i1 %363, %367
  %369 = or i1 %352, %353
  br i1 %368, label %370, label %491

; <label>:370:                                    ; preds = %343
  br label %371

; <label>:371:                                    ; preds = %370, %42
  ret void

; <label>:372:                                    ; preds = %284
  %373 = load i32, i32* @x.548
  %374 = load i32, i32* @y.549
  %375 = sub i32 %373, -915581503
  %376 = sub i32 %375, 1
  %377 = add i32 %376, -915581503
  %378 = sub i32 %373, 1
  %379 = mul i32 %373, %377
  %380 = urem i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = icmp slt i32 %374, 10
  %383 = xor i1 %381, true
  %384 = xor i1 %382, true
  %385 = xor i1 false, true
  %386 = and i1 %383, false
  %387 = and i1 %381, %385
  %388 = and i1 %384, false
  %389 = and i1 %382, %385
  %390 = or i1 %386, %387
  %391 = or i1 %388, %389
  %392 = xor i1 %390, %391
  %393 = or i1 %383, %384
  %394 = xor i1 %393, true
  %395 = or i1 false, %385
  %396 = and i1 %394, %395
  %397 = or i1 %392, %396
  %398 = or i1 %381, %382
  br i1 %397, label %399, label %492

; <label>:399:                                    ; preds = %372, %492
  %400 = load i8*, i8** %23, align 8
  %401 = load i32, i32* %24, align 4
  %402 = insertvalue { i8*, i32 } undef, i8* %400, 0
  %403 = insertvalue { i8*, i32 } %402, i32 %401, 1
  %404 = load i32, i32* @x.548
  %405 = load i32, i32* @y.549
  %406 = sub i32 %404, 752054735
  %407 = sub i32 %406, 1
  %408 = add i32 %407, 752054735
  %409 = sub i32 %404, 1
  %410 = mul i32 %404, %408
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %405, 10
  %414 = xor i1 %412, true
  %415 = xor i1 %413, true
  %416 = xor i1 false, true
  %417 = and i1 %414, false
  %418 = and i1 %412, %416
  %419 = and i1 %415, false
  %420 = and i1 %413, %416
  %421 = or i1 %417, %418
  %422 = or i1 %419, %420
  %423 = xor i1 %421, %422
  %424 = or i1 %414, %415
  %425 = xor i1 %424, true
  %426 = or i1 false, %416
  %427 = and i1 %425, %426
  %428 = or i1 %423, %427
  %429 = or i1 %412, %413
  br i1 %428, label %430, label %492

; <label>:430:                                    ; preds = %399
  resume { i8*, i32 } %403

; <label>:431:                                    ; preds = %280
  %432 = landingpad { i8*, i32 }
          catch i8* null
  %433 = extractvalue { i8*, i32 } %432, 0
  call void @__clang_call_terminate(i8* %433) #11
  unreachable

; <label>:434:                                    ; preds = %279
  unreachable

; <label>:435:                                    ; preds = %16, %2
  %436 = alloca %"class.std::vector.0"*, align 8
  %437 = alloca i64, align 8
  %438 = alloca i64, align 8
  %439 = alloca i64, align 8
  %440 = alloca i32*, align 8
  %441 = alloca i32*, align 8
  %442 = alloca i8*
  %443 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %436, align 8
  store i64 %1, i64* %437, align 8
  %444 = load %"class.std::vector.0"*, %"class.std::vector.0"** %436, align 8
  %445 = load i64, i64* %437, align 8
  %446 = icmp ne i64 %445, 0
  br label %16

; <label>:447:                                    ; preds = %58, %43
  %448 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %449 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %448, i32 0, i32 0
  %450 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %449, i32 0, i32 2
  %451 = load i32*, i32** %450, align 8
  %452 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %453 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %452, i32 0, i32 0
  %454 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %453, i32 0, i32 1
  %455 = load i32*, i32** %454, align 8
  %456 = ptrtoint i32* %451 to i64
  %457 = ptrtoint i32* %455 to i64
  %458 = sub i64 0, %457
  %459 = add i64 %456, %458
  %460 = sub i64 %456, %457
  %461 = sub i64 %459, 1749180788069279677
  %462 = sub i64 %461, 4
  %463 = add i64 %462, 1749180788069279677
  %464 = sub i64 %459, 4
  %465 = mul i64 %463, 4
  %466 = sub i64 0, %459
  %467 = add i64 0, %466
  %468 = sub i64 0, %459
  %469 = sub i64 0, %467
  %470 = sub i64 0, 4
  %471 = add i64 %469, %470
  %472 = sub i64 0, %471
  %473 = add i64 %467, 4
  %474 = add i64 0, 4944934770663445512
  %475 = sub i64 %474, %459
  %476 = sub i64 %475, 4944934770663445512
  %477 = sub i64 0, %459
  %478 = add i64 %476, -947697371373572315
  %479 = add i64 %478, 4
  %480 = sub i64 %479, -947697371373572315
  %481 = add i64 %476, 4
  %482 = sdiv exact i64 %459, 4
  %483 = load i64, i64* %18, align 8
  %484 = icmp uge i64 %482, %483
  br label %58

; <label>:485:                                    ; preds = %154, %128
  store i32* %127, i32** %22, align 8
  br label %154

; <label>:486:                                    ; preds = %207, %193
  %487 = bitcast %"class.std::vector.0"* %25 to %"struct.std::_Vector_base.1"*
  %488 = load i32*, i32** %21, align 8
  %489 = load i64, i64* %19, align 8
  br label %207

; <label>:490:                                    ; preds = %252, %238
  br label %252

; <label>:491:                                    ; preds = %343, %329
  br label %343

; <label>:492:                                    ; preds = %399, %372
  %493 = load i8*, i8** %23, align 8
  %494 = load i32, i32* %24, align 4
  %495 = insertvalue { i8*, i32 } undef, i8* %493, 0
  %496 = insertvalue { i8*, i32 } %495, i32 %494, 1
  br label %399
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.0"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %12 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.2"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i32*, i32** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.0"* %15) #3
  %17 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %18 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %17) #3
  %19 = add i64 %16, 5094011386410151876
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, 5094011386410151876
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -1394216357, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %156
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -1394216357, label %29
    i32 -63779286, label %34
    i32 -312377081, label %36
    i32 -494881976, label %53
    i32 -2133327607, label %59
    i32 -1392238096, label %62
    i32 917937448, label %77
    i32 42025, label %105
    i32 1671704646, label %107
    i32 -1160991547, label %124
    i32 -1197610930, label %151
    i32 787769540, label %153
    i32 -39919789, label %155
  ]

; <label>:28:                                     ; preds = %26
  br label %156

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -63779286, i32 -312377081
  store i32 %33, i32* %24
  br label %156

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %37) #3
  %39 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %39) #3
  store i64 %40, i64* %13, align 8
  %41 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 0, %38
  %44 = sub i64 0, %42
  %45 = add i64 %43, %44
  %46 = sub i64 0, %45
  %47 = add i64 %38, %42
  store i64 %46, i64* %12, align 8
  %48 = load i64, i64* %12, align 8
  %49 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %50 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.0"* %49) #3
  %51 = icmp ult i64 %48, %50
  %52 = select i1 %51, i32 -2133327607, i32 -494881976
  store i32 %52, i32* %24
  br label %156

; <label>:53:                                     ; preds = %26
  %54 = load i64, i64* %12, align 8
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %56 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.0"* %55) #3
  %57 = icmp ugt i64 %54, %56
  %58 = select i1 %57, i32 -2133327607, i32 -1392238096
  store i32 %58, i32* %24
  br label %156

; <label>:59:                                     ; preds = %26
  %60 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %61 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.0"* %60) #3
  store i32 1671704646, i32* %24
  store i64 %61, i64* %25
  br label %156

; <label>:62:                                     ; preds = %26
  %63 = load i32, i32* @x.554
  %64 = load i32, i32* @y.555
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 917937448, i32 787769540
  store i32 %76, i32* %24
  br label %156

; <label>:77:                                     ; preds = %26
  %78 = load i64, i64* %12, align 8
  store i64 %78, i64* %5
  %79 = load i32, i32* @x.554
  %80 = load i32, i32* @y.555
  %81 = sub i32 0, 1
  %82 = add i32 %79, %81
  %83 = sub i32 %79, 1
  %84 = mul i32 %79, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %80, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 true, true
  %91 = and i1 %88, true
  %92 = and i1 %86, %90
  %93 = and i1 %89, true
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 true, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 42025, i32 787769540
  store i32 %104, i32* %24
  br label %156

; <label>:105:                                    ; preds = %26
  store i32 1671704646, i32* %24
  %106 = load volatile i64, i64* %5
  store i64 %106, i64* %25
  br label %156

; <label>:107:                                    ; preds = %26
  %108 = load i64, i64* %25
  store i64 %108, i64* %4
  %109 = load i32, i32* @x.554
  %110 = load i32, i32* @y.555
  %111 = add i32 %109, 797213294
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 797213294
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 -1160991547, i32 -39919789
  store i32 %123, i32* %24
  br label %156

; <label>:124:                                    ; preds = %26
  %125 = load i32, i32* @x.554
  %126 = load i32, i32* @y.555
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 -1197610930, i32 -39919789
  store i32 %150, i32* %24
  br label %156

; <label>:151:                                    ; preds = %26
  %152 = load volatile i64, i64* %4
  ret i64 %152

; <label>:153:                                    ; preds = %26
  %154 = load i64, i64* %12, align 8
  store i32 917937448, i32* %24
  br label %156

; <label>:155:                                    ; preds = %26
  store i32 -1160991547, i32* %24
  br label %156

; <label>:156:                                    ; preds = %155, %153, %124, %107, %105, %77, %62, %59, %53, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca %"struct.std::_Vector_base.1"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5, align 8
  store %"struct.std::_Vector_base.1"* %7, %"struct.std::_Vector_base.1"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1317658324, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1317658324, label %14
    i32 -1919335209, label %18
    i32 -994587045, label %24
    i32 -1819774591, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -1919335209, i32 -994587045
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator.2"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.2"* dereferenceable(1) %21, i64 %22)
  store i32 -1819774591, i32* %9
  store i32* %23, i32** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -1819774591, i32* %9
  store i32* null, i32** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i32*, i32** %10
  ret i32* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.558
  %9 = load i32, i32* @y.559
  %10 = add i32 %8, -1223602244
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1223602244
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1249128000, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %111
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1249128000, label %22
    i32 -684121651, label %42
    i32 -1678886828, label %89
    i32 1764155404, label %91
  ]

; <label>:21:                                     ; preds = %19
  br label %111

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -684121651, i32 1764155404
  store i32 %41, i32* %18
  br label %111

; <label>:42:                                     ; preds = %19
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %46 = alloca %"class.std::allocator.2"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  store i32* %0, i32** %43, align 8
  store i32* %1, i32** %44, align 8
  store i32* %2, i32** %45, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %46, align 8
  %49 = load i32*, i32** %43, align 8
  %50 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store i32* %50, i32** %51, align 8
  %52 = load i32*, i32** %44, align 8
  %53 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  store i32* %53, i32** %54, align 8
  %55 = load i32*, i32** %45, align 8
  %56 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %58, i32* %60, i32* %55, %"class.std::allocator.2"* dereferenceable(1) %56)
  store i32* %61, i32** %5
  %62 = load i32, i32* @x.558
  %63 = load i32, i32* @y.559
  %64 = sub i32 %62, 628161818
  %65 = sub i32 %64, 1
  %66 = add i32 %65, 628161818
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -1678886828, i32 1764155404
  store i32 %88, i32* %18
  br label %111

; <label>:89:                                     ; preds = %19
  %90 = load volatile i32*, i32** %5
  ret i32* %90

; <label>:91:                                     ; preds = %19
  %92 = alloca i32*, align 8
  %93 = alloca i32*, align 8
  %94 = alloca i32*, align 8
  %95 = alloca %"class.std::allocator.2"*, align 8
  %96 = alloca %"class.std::move_iterator", align 8
  %97 = alloca %"class.std::move_iterator", align 8
  store i32* %0, i32** %92, align 8
  store i32* %1, i32** %93, align 8
  store i32* %2, i32** %94, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %95, align 8
  %98 = load i32*, i32** %92, align 8
  %99 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %98)
  %100 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  store i32* %99, i32** %100, align 8
  %101 = load i32*, i32** %93, align 8
  %102 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %101)
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %97, i32 0, i32 0
  store i32* %102, i32** %103, align 8
  %104 = load i32*, i32** %94, align 8
  %105 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %95, align 8
  %106 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %96, i32 0, i32 0
  %107 = load i32*, i32** %106, align 8
  %108 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %97, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %107, i32* %109, i32* %104, %"class.std::allocator.2"* dereferenceable(1) %105)
  store i32 -684121651, i32* %18
  br label %111

; <label>:111:                                    ; preds = %91, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.562
  %7 = load i32, i32* @y.563
  %8 = add i32 %6, -1249970063
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1249970063
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1187274537, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1187274537, label %20
    i32 1885103703, label %28
    i32 1577019587, label %61
    i32 -1957060157, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1885103703, i32 -1957060157
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32, align 4
  store i32* %0, i32** %29, align 8
  store i64 %1, i64* %30, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = load i64, i64* %30, align 8
  store i32 0, i32* %31, align 4
  %34 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %32, i64 %33, i32* dereferenceable(4) %31)
  store i32* %34, i32** %3
  %35 = load i32, i32* @x.562
  %36 = load i32, i32* @y.563
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1577019587, i32 -1957060157
  store i32 %60, i32* %16
  br label %70

; <label>:61:                                     ; preds = %17
  %62 = load volatile i32*, i32** %3
  ret i32* %62

; <label>:63:                                     ; preds = %17
  %64 = alloca i32*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i32, align 4
  store i32* %0, i32** %64, align 8
  store i64 %1, i64* %65, align 8
  %67 = load i32*, i32** %64, align 8
  %68 = load i64, i64* %65, align 8
  store i32 0, i32* %66, align 4
  %69 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %67, i64 %68, i32* dereferenceable(4) %66)
  store i32 1885103703, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i64*
  %5 = alloca i32*
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.566
  %10 = load i32, i32* @y.567
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -1718641017, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %90
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1718641017, label %22
    i32 762817184, label %30
    i32 -1050080149, label %56
    i32 676216868, label %57
    i32 2032604329, label %62
    i32 530235665, label %67
    i32 -2053445407, label %78
    i32 -306928226, label %81
  ]

; <label>:21:                                     ; preds = %19
  br label %90

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 762817184, i32 -306928226
  store i32 %29, i32* %18
  br label %90

; <label>:30:                                     ; preds = %19
  %31 = alloca i32*, align 8
  store i32** %31, i32*** %6
  %32 = alloca i64, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i32, align 4
  store i32* %34, i32** %5
  %35 = alloca i64, align 8
  store i64* %35, i64** %4
  %36 = load volatile i32**, i32*** %6
  store i32* %0, i32** %36, align 8
  store i64 %1, i64* %32, align 8
  store i32* %2, i32** %33, align 8
  %37 = load i32*, i32** %33, align 8
  %38 = load i32, i32* %37, align 4
  %39 = load volatile i32*, i32** %5
  store i32 %38, i32* %39, align 4
  %40 = load i64, i64* %32, align 8
  %41 = load volatile i64*, i64** %4
  store i64 %40, i64* %41, align 8
  %42 = load i32, i32* @x.566
  %43 = load i32, i32* @y.567
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1050080149, i32 -306928226
  store i32 %55, i32* %18
  br label %90

; <label>:56:                                     ; preds = %19
  store i32 676216868, i32* %18
  br label %90

; <label>:57:                                     ; preds = %19
  %58 = load volatile i64*, i64** %4
  %59 = load i64, i64* %58, align 8
  %60 = icmp ugt i64 %59, 0
  %61 = select i1 %60, i32 2032604329, i32 -2053445407
  store i32 %61, i32* %18
  br label %90

; <label>:62:                                     ; preds = %19
  %63 = load volatile i32*, i32** %5
  %64 = load i32, i32* %63, align 4
  %65 = load volatile i32**, i32*** %6
  %66 = load i32*, i32** %65, align 8
  store i32 %64, i32* %66, align 4
  store i32 530235665, i32* %18
  br label %90

; <label>:67:                                     ; preds = %19
  %68 = load volatile i64*, i64** %4
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 0, -1
  %71 = sub i64 %69, %70
  %72 = add i64 %69, -1
  %73 = load volatile i64*, i64** %4
  store i64 %71, i64* %73, align 8
  %74 = load volatile i32**, i32*** %6
  %75 = load i32*, i32** %74, align 8
  %76 = getelementptr inbounds i32, i32* %75, i32 1
  %77 = load volatile i32**, i32*** %6
  store i32* %76, i32** %77, align 8
  store i32 676216868, i32* %18
  br label %90

; <label>:78:                                     ; preds = %19
  %79 = load volatile i32**, i32*** %6
  %80 = load i32*, i32** %79, align 8
  ret i32* %80

; <label>:81:                                     ; preds = %19
  %82 = alloca i32*, align 8
  %83 = alloca i64, align 8
  %84 = alloca i32*, align 8
  %85 = alloca i32, align 4
  %86 = alloca i64, align 8
  store i32* %0, i32** %82, align 8
  store i64 %1, i64* %83, align 8
  store i32* %2, i32** %84, align 8
  %87 = load i32*, i32** %84, align 8
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %85, align 4
  %89 = load i64, i64* %83, align 8
  store i64 %89, i64* %86, align 8
  store i32 762817184, i32* %18
  br label %90

; <label>:90:                                     ; preds = %81, %67, %62, %57, %56, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.0"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.2"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.574
  %9 = load i32, i32* @y.575
  %10 = add i32 %8, -1156019466
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1156019466
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1169696388, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %108
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1169696388, label %22
    i32 231557934, label %42
    i32 1096319141, label %87
    i32 -54223821, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %108

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 231557934, i32 -54223821
  store i32 %41, i32* %18
  br label %108

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca i32*, align 8
  %46 = alloca %"class.std::allocator.2"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store i32* %0, i32** %49, align 8
  %50 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  store i32* %1, i32** %50, align 8
  store i32* %2, i32** %45, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %46, align 8
  %51 = bitcast %"class.std::move_iterator"* %47 to i8*
  %52 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.std::move_iterator"* %48 to i8*
  %54 = bitcast %"class.std::move_iterator"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load i32*, i32** %45, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %57, i32* %59, i32* %55)
  store i32* %60, i32** %5
  %61 = load i32, i32* @x.574
  %62 = load i32, i32* @y.575
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 1096319141, i32 -54223821
  store i32 %86, i32* %18
  br label %108

; <label>:87:                                     ; preds = %19
  %88 = load volatile i32*, i32** %5
  ret i32* %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.std::move_iterator", align 8
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca i32*, align 8
  %93 = alloca %"class.std::allocator.2"*, align 8
  %94 = alloca %"class.std::move_iterator", align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %90, i32 0, i32 0
  store i32* %0, i32** %96, align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store i32* %1, i32** %97, align 8
  store i32* %2, i32** %92, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %93, align 8
  %98 = bitcast %"class.std::move_iterator"* %94 to i8*
  %99 = bitcast %"class.std::move_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.std::move_iterator"* %95 to i8*
  %101 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load i32*, i32** %92, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %104, i32* %106, i32* %102)
  store i32 231557934, i32* %18
  br label %108

; <label>:108:                                    ; preds = %89, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.580
  %8 = load i32, i32* @y.581
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 269940755, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %105
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 269940755, label %20
    i32 211693632, label %40
    i32 -1883294014, label %85
    i32 928101700, label %87
  ]

; <label>:19:                                     ; preds = %17
  br label %105

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 211693632, i32 928101700
  store i32 %39, i32* %16
  br label %105

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator", align 8
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.std::move_iterator", align 8
  %45 = alloca %"class.std::move_iterator", align 8
  %46 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.std::move_iterator"* %44 to i8*
  %49 = bitcast %"class.std::move_iterator"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.std::move_iterator"* %45 to i8*
  %51 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = load i32*, i32** %43, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %44, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %54, i32* %56, i32* %52)
  store i32* %57, i32** %4
  %58 = load i32, i32* @x.580
  %59 = load i32, i32* @y.581
  %60 = sub i32 %58, -1747608030
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -1747608030
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1883294014, i32 928101700
  store i32 %84, i32* %16
  br label %105

; <label>:85:                                     ; preds = %17
  %86 = load volatile i32*, i32** %4
  ret i32* %86

; <label>:87:                                     ; preds = %17
  %88 = alloca %"class.std::move_iterator", align 8
  %89 = alloca %"class.std::move_iterator", align 8
  %90 = alloca i32*, align 8
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca %"class.std::move_iterator", align 8
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %88, i32 0, i32 0
  store i32* %0, i32** %93, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %89, i32 0, i32 0
  store i32* %1, i32** %94, align 8
  store i32* %2, i32** %90, align 8
  %95 = bitcast %"class.std::move_iterator"* %91 to i8*
  %96 = bitcast %"class.std::move_iterator"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %95, i8* %96, i64 8, i32 8, i1 false)
  %97 = bitcast %"class.std::move_iterator"* %92 to i8*
  %98 = bitcast %"class.std::move_iterator"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = load i32*, i32** %90, align 8
  %100 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %92, i32 0, i32 0
  %103 = load i32*, i32** %102, align 8
  %104 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %101, i32* %103, i32* %99)
  store i32 211693632, i32* %16
  br label %105

; <label>:105:                                    ; preds = %87, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator", align 8
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %14)
  %16 = bitcast %"class.std::move_iterator"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %15, i32* %20, i32* %21)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.584
  %8 = load i32, i32* @y.585
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 190765414, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 190765414, label %20
    i32 -148078075, label %40
    i32 1220823476, label %65
    i32 259728590, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -148078075, i32 259728590
  store i32 %39, i32* %16
  br label %78

; <label>:40:                                     ; preds = %17
  %41 = alloca i32*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store i32* %0, i32** %41, align 8
  store i32* %1, i32** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load i32*, i32** %41, align 8
  %45 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %44)
  %46 = load i32*, i32** %42, align 8
  %47 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %46)
  %48 = load i32*, i32** %43, align 8
  %49 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %48)
  %50 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %45, i32* %47, i32* %49)
  store i32* %50, i32** %4
  %51 = load i32, i32* @x.584
  %52 = load i32, i32* @y.585
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 1220823476, i32 259728590
  store i32 %64, i32* %16
  br label %78

; <label>:65:                                     ; preds = %17
  %66 = load volatile i32*, i32** %4
  ret i32* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store i32* %0, i32** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load i32*, i32** %68, align 8
  %72 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %71)
  %73 = load i32*, i32** %69, align 8
  %74 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %73)
  %75 = load i32*, i32** %70, align 8
  %76 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %75)
  %77 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %72, i32* %74, i32* %76)
  store i32 -148078075, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.586
  %6 = load i32, i32* @y.587
  %7 = sub i32 %5, -2011139343
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2011139343
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 352244804, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 352244804, label %19
    i32 -629548625, label %39
    i32 -108800923, label %75
    i32 839406806, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -629548625, i32 839406806
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator", align 8
  %41 = alloca %"class.std::move_iterator", align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  store i32* %0, i32** %42, align 8
  %43 = bitcast %"class.std::move_iterator"* %41 to i8*
  %44 = bitcast %"class.std::move_iterator"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %46)
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.586
  %49 = load i32, i32* @y.587
  %50 = add i32 %48, -1394199967
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -1394199967
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -108800923, i32 839406806
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile i32*, i32** %2
  ret i32* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.std::move_iterator", align 8
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %78, i32 0, i32 0
  store i32* %0, i32** %80, align 8
  %81 = bitcast %"class.std::move_iterator"* %79 to i8*
  %82 = bitcast %"class.std::move_iterator"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %81, i8* %82, i64 8, i32 8, i1 false)
  %83 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %84)
  store i32 -629548625, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %8, i32* %9, i32* %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.590
  %11 = load i32, i32* @y.591
  %12 = add i32 %10, 1079873608
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1079873608
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 713975896, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %221
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 713975896, label %24
    i32 1596900864, label %44
    i32 -1791714231, label %78
    i32 -951098361, label %81
    i32 -1075243036, label %96
    i32 -555735624, label %121
    i32 701448110, label %122
    i32 537424967, label %128
    i32 -1219767093, label %169
  ]

; <label>:23:                                     ; preds = %21
  br label %221

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1596900864, i32 537424967
  store i32 %43, i32* %20
  br label %221

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i32* %1, i32** %46, align 8
  %50 = load volatile i32**, i32*** %6
  store i32* %2, i32** %50, align 8
  %51 = load i32*, i32** %46, align 8
  %52 = load volatile i32**, i32*** %7
  %53 = load i32*, i32** %52, align 8
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 0, %55
  %57 = add i64 %54, %56
  %58 = sub i64 %54, %55
  %59 = sdiv exact i64 %57, 4
  %60 = load volatile i64*, i64** %5
  store i64 %59, i64* %60, align 8
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = icmp ne i64 %62, 0
  store i1 %63, i1* %4
  %64 = load i32, i32* @x.590
  %65 = load i32, i32* @y.591
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  %77 = select i1 %75, i32 -1791714231, i32 537424967
  store i32 %77, i32* %20
  br label %221

; <label>:78:                                     ; preds = %21
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 -951098361, i32 701448110
  store i32 %80, i32* %20
  br label %221

; <label>:81:                                     ; preds = %21
  %82 = load i32, i32* @x.590
  %83 = load i32, i32* @y.591
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 -1075243036, i32 -1219767093
  store i32 %95, i32* %20
  br label %221

; <label>:96:                                     ; preds = %21
  %97 = load volatile i32**, i32*** %6
  %98 = load i32*, i32** %97, align 8
  %99 = bitcast i32* %98 to i8*
  %100 = load volatile i32**, i32*** %7
  %101 = load i32*, i32** %100, align 8
  %102 = bitcast i32* %101 to i8*
  %103 = load volatile i64*, i64** %5
  %104 = load i64, i64* %103, align 8
  %105 = mul i64 4, %104
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %99, i8* %102, i64 %105, i32 4, i1 false)
  %106 = load i32, i32* @x.590
  %107 = load i32, i32* @y.591
  %108 = sub i32 %106, -1579908118
  %109 = sub i32 %108, 1
  %110 = add i32 %109, -1579908118
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  %120 = select i1 %118, i32 -555735624, i32 -1219767093
  store i32 %120, i32* %20
  br label %221

; <label>:121:                                    ; preds = %21
  store i32 701448110, i32* %20
  br label %221

; <label>:122:                                    ; preds = %21
  %123 = load volatile i32**, i32*** %6
  %124 = load i32*, i32** %123, align 8
  %125 = load volatile i64*, i64** %5
  %126 = load i64, i64* %125, align 8
  %127 = getelementptr inbounds i32, i32* %124, i64 %126
  ret i32* %127

; <label>:128:                                    ; preds = %21
  %129 = alloca i32*, align 8
  %130 = alloca i32*, align 8
  %131 = alloca i32*, align 8
  %132 = alloca i64, align 8
  store i32* %0, i32** %129, align 8
  store i32* %1, i32** %130, align 8
  store i32* %2, i32** %131, align 8
  %133 = load i32*, i32** %130, align 8
  %134 = load i32*, i32** %129, align 8
  %135 = ptrtoint i32* %133 to i64
  %136 = ptrtoint i32* %134 to i64
  %137 = shl i64 %135, %136
  %138 = sub i64 0, %136
  %139 = add i64 %135, %138
  %140 = sub i64 %135, %136
  %141 = shl i64 %139, 4
  %142 = sub i64 0, 4
  %143 = add i64 %139, %142
  %144 = sub i64 %139, 4
  %145 = mul i64 %143, 4
  %146 = shl i64 %139, 4
  %147 = add i64 %139, 4436683849071661129
  %148 = sub i64 %147, 4
  %149 = sub i64 %148, 4436683849071661129
  %150 = sub i64 %139, 4
  %151 = mul i64 %149, 4
  %152 = shl i64 %139, 4
  %153 = sub i64 0, 7117480719340895301
  %154 = sub i64 %153, %139
  %155 = add i64 %154, 7117480719340895301
  %156 = sub i64 0, %139
  %157 = add i64 %155, 7334112785241405213
  %158 = add i64 %157, 4
  %159 = sub i64 %158, 7334112785241405213
  %160 = add i64 %155, 4
  %161 = sub i64 %139, -8457899793190058148
  %162 = sub i64 %161, 4
  %163 = add i64 %162, -8457899793190058148
  %164 = sub i64 %139, 4
  %165 = mul i64 %163, 4
  %166 = sdiv exact i64 %139, 4
  store i64 %166, i64* %132, align 8
  %167 = load i64, i64* %132, align 8
  %168 = icmp ne i64 %167, 0
  store i32 1596900864, i32* %20
  br label %221

; <label>:169:                                    ; preds = %21
  %170 = load volatile i32**, i32*** %6
  %171 = load i32*, i32** %170, align 8
  %172 = bitcast i32* %171 to i8*
  %173 = load volatile i32**, i32*** %7
  %174 = load i32*, i32** %173, align 8
  %175 = bitcast i32* %174 to i8*
  %176 = load volatile i64*, i64** %5
  %177 = load i64, i64* %176, align 8
  %178 = sub i64 0, 4
  %179 = add i64 0, %178
  %180 = sub i64 0, 4
  %181 = sub i64 %179, 5198431674200029404
  %182 = add i64 %181, %177
  %183 = add i64 %182, 5198431674200029404
  %184 = add i64 %179, %177
  %185 = add i64 4, -4542202654586048756
  %186 = sub i64 %185, %177
  %187 = sub i64 %186, -4542202654586048756
  %188 = sub i64 4, %177
  %189 = mul i64 %187, %177
  %190 = add i64 4, -8075937772581994590
  %191 = sub i64 %190, %177
  %192 = sub i64 %191, -8075937772581994590
  %193 = sub i64 4, %177
  %194 = mul i64 %192, %177
  %195 = sub i64 0, 4
  %196 = add i64 0, %195
  %197 = sub i64 0, 4
  %198 = sub i64 0, %196
  %199 = sub i64 0, %177
  %200 = add i64 %198, %199
  %201 = sub i64 0, %200
  %202 = add i64 %196, %177
  %203 = shl i64 4, %177
  %204 = sub i64 0, 1866091444585864444
  %205 = sub i64 %204, 4
  %206 = add i64 %205, 1866091444585864444
  %207 = sub i64 0, 4
  %208 = sub i64 0, %206
  %209 = sub i64 0, %177
  %210 = add i64 %208, %209
  %211 = sub i64 0, %210
  %212 = add i64 %206, %177
  %213 = shl i64 4, %177
  %214 = shl i64 4, %177
  %215 = add i64 4, 5680102868147070219
  %216 = sub i64 %215, %177
  %217 = sub i64 %216, 5680102868147070219
  %218 = sub i64 4, %177
  %219 = mul i64 %217, %177
  %220 = mul i64 4, %177
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %172, i8* %175, i64 %220, i32 4, i1 false)
  store i32 -1075243036, i32* %20
  br label %221

; <label>:221:                                    ; preds = %169, %128, %121, %96, %81, %78, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator"*, i32*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s990488172.cpp() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.598
  %4 = load i32, i32* @y.599
  %5 = add i32 %3, 1061382393
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1061382393
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1187376674, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %67
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1187376674, label %17
    i32 105424957, label %37
    i32 -46904264, label %65
    i32 -514197577, label %66
  ]

; <label>:16:                                     ; preds = %14
  br label %67

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 105424957, i32 -514197577
  store i32 %36, i32* %13
  br label %67

; <label>:37:                                     ; preds = %14
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  call void @__cxx_global_var_init.3()
  %38 = load i32, i32* @x.598
  %39 = load i32, i32* @y.599
  %40 = add i32 %38, -1751810856
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -1751810856
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -46904264, i32 -514197577
  store i32 %64, i32* %13
  br label %67

; <label>:65:                                     ; preds = %14
  ret void

; <label>:66:                                     ; preds = %14
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  call void @__cxx_global_var_init.3()
  store i32 105424957, i32* %13
  br label %67

; <label>:67:                                     ; preds = %66, %37, %17, %16
  br label %14
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
