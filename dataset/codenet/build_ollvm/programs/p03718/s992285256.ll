; ModuleID = 'Project_CodeNet_C++1400/p03718/s992285256.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s992285256.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%struct.Dinic = type { i32, %"class.std::vector", %"class.std::vector", %struct.Graph }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%struct.Graph = type { i32, %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl" = type { %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl" = type { %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"* }
%"struct.Graph::edge" = type { i32, i64, i64 }
%"class.std::allocator.0" = type { i8 }
%"class.__gnu_cxx::new_allocator.1" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.13" = type { %"class.std::vector.8"* }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.8"* }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.14" = type { %"struct.Graph::edge"* }
%"class.std::move_iterator" = type { %"class.std::vector.8"* }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.15" = type { %"struct.Graph::edge"* }
%"class.std::move_iterator.16" = type { %"struct.Graph::edge"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.20" = type { i32* }

$_ZN5DinicC2Ei = comdat any

$_ZN5Dinic8add_edgeEiixx = comdat any

$_ZN5Dinic8max_flowEii = comdat any

$_ZN5DinicD2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZN5GraphC2Ei = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_ = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ = comdat any

$_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Graph4edgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Graph4edgeEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_ = comdat any

$_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_ = comdat any

$_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZSt4swapIPN5Graph4edgeEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_ = comdat any

$_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_ = comdat any

$_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_ = comdat any

$_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv = comdat any

$_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZN5GraphixEi = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_ = comdat any

$_ZN5Dinic7g_levelEii = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZN5Dinic3dfsEiix = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZN5GraphD2Ev = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@nn = global i64 0, align 8
@cnt = global i64 0, align 8
@ans = global i64 0, align 8
@a = global [1000000 x i64] zeroinitializer, align 16
@b = global i64 0, align 8
@d = global i64 0, align 8
@tmp = global i64 0, align 8
@tmpp = global i64 0, align 8
@m = global i64 0, align 8
@h = global i64 0, align 8
@w = global i64 0, align 8
@x = global i64 0, align 8
@y = global i64 0, align 8
@sum = global i64 0, align 8
@pos = global i64 0, align 8
@k = global i64 0, align 8
@xx = global i64 0, align 8
@yy = global i64 0, align 8
@doua = global x86_fp80 0xK00000000000000000000, align 16
@dy = global [4 x i32] [i32 1, i32 0, i32 -1, i32 0], align 16
@dx = global [4 x i32] [i32 0, i32 1, i32 0, i32 -1], align 16
@_Z4alphB5cxx11 = global %"class.std::__cxx11::basic_string" zeroinitializer, align 8
@.str = private unnamed_addr constant [27 x i8] c"abcdefghijklmnopqrstuvwxyz\00", align 1
@c = global [105 x [105 x i8]] zeroinitializer, align 16
@fl = global i8 0, align 1
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str.2 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.3 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s992285256.cpp, i8* null }]
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca %"class.std::allocator", align 1
  %2 = alloca i8*
  %3 = alloca i32
  call void @_ZNSaIcEC1Ev(%"class.std::allocator"* %1) #3
  invoke void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"* @_Z4alphB5cxx11, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str, i32 0, i32 0), %"class.std::allocator"* dereferenceable(1) %1)
          to label %4 unwind label %48

; <label>:4:                                      ; preds = %0
  %5 = load i32, i32* @x.6
  %6 = load i32, i32* @y.7
  %7 = sub i32 %5, 1760601027
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1760601027
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %97

; <label>:19:                                     ; preds = %4, %97
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %1) #3
  %20 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_Z4alphB5cxx11 to i8*), i8* @__dso_handle) #3
  %21 = load i32, i32* @x.6
  %22 = load i32, i32* @y.7
  %23 = add i32 %21, 1897797399
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1897797399
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %97

; <label>:47:                                     ; preds = %19
  ret void

; <label>:48:                                     ; preds = %0
  %49 = load i32, i32* @x.6
  %50 = load i32, i32* @y.7
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %99

; <label>:62:                                     ; preds = %48, %99
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %2, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %3, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %1) #3
  %66 = load i32, i32* @x.6
  %67 = load i32, i32* @y.7
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %99

; <label>:91:                                     ; preds = %62
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = load i8*, i8** %2, align 8
  %94 = load i32, i32* %3, align 4
  %95 = insertvalue { i8*, i32 } undef, i8* %93, 0
  %96 = insertvalue { i8*, i32 } %95, i32 %94, 1
  resume { i8*, i32 } %96

; <label>:97:                                     ; preds = %19, %4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %1) #3
  %98 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::__cxx11::basic_string"*)* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev to void (i8*)*), i8* bitcast (%"class.std::__cxx11::basic_string"* @_Z4alphB5cxx11 to i8*), i8* @__dso_handle) #3
  br label %19

; <label>:99:                                     ; preds = %62, %48
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %2, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %3, align 4
  call void @_ZNSaIcED1Ev(%"class.std::allocator"* %1) #3
  br label %62
}

; Function Attrs: nounwind
declare void @_ZNSaIcEC1Ev(%"class.std::allocator"*) unnamed_addr #2

declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1EPKcRKS3_(%"class.std::__cxx11::basic_string"*, i8*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind
declare void @_ZNSaIcED1Ev(%"class.std::allocator"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %struct.Dinic, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i8*
  %10 = alloca i32
  store i32 0, i32* %1, align 4
  %11 = load i8*, i8** bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8**), align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds i8, i8* bitcast (%"class.std::basic_istream"* @_ZSt3cin to i8*), i64 %14
  %16 = bitcast i8* %15 to %"class.std::basic_ios"*
  %17 = call %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"* %16, %"class.std::basic_ostream"* null)
  %18 = call zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext false)
  %19 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* @_ZSt3cin, i64* dereferenceable(8) @h)
  %20 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"* %19, i64* dereferenceable(8) @w)
  store i32 0, i32* %2, align 4
  br label %21

; <label>:21:                                     ; preds = %76, %0
  %22 = load i32, i32* %2, align 4
  %23 = load i64, i64* @h, align 8
  %24 = trunc i64 %23 to i32
  %25 = icmp slt i32 %22, %24
  br i1 %25, label %26, label %82

; <label>:26:                                     ; preds = %21
  store i32 0, i32* %3, align 4
  br label %27

; <label>:27:                                     ; preds = %70, %26
  %28 = load i32, i32* @x.8
  %29 = load i32, i32* @y.9
  %30 = add i32 %28, 90854783
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 90854783
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %572

; <label>:42:                                     ; preds = %27, %572
  %43 = load i32, i32* %3, align 4
  %44 = load i64, i64* @w, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp slt i32 %43, %45
  %47 = load i32, i32* @x.8
  %48 = load i32, i32* @y.9
  %49 = sub i32 %47, 81074159
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 81074159
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %572

; <label>:61:                                     ; preds = %42
  br i1 %46, label %62, label %75

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* %2, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %64
  %66 = load i32, i32* %3, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds [105 x i8], [105 x i8]* %65, i64 0, i64 %67
  %69 = call dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, i8* dereferenceable(1) %68)
  br label %70

; <label>:70:                                     ; preds = %62
  %71 = load i32, i32* %3, align 4
  %72 = sub i32 0, 1
  %73 = sub i32 %71, %72
  %74 = add nsw i32 %71, 1
  store i32 %73, i32* %3, align 4
  br label %27

; <label>:75:                                     ; preds = %61
  br label %76

; <label>:76:                                     ; preds = %75
  %77 = load i32, i32* %2, align 4
  %78 = sub i32 %77, 1515723510
  %79 = add i32 %78, 1
  %80 = add i32 %79, 1515723510
  %81 = add nsw i32 %77, 1
  store i32 %80, i32* %2, align 4
  br label %21

; <label>:82:                                     ; preds = %21
  store i32 0, i32* %4, align 4
  %83 = load i64, i64* @h, align 8
  %84 = load i64, i64* @w, align 8
  %85 = sub i64 0, %84
  %86 = sub i64 %83, %85
  %87 = add nsw i64 %83, %84
  %88 = sub i64 0, 1
  %89 = sub i64 %86, %88
  %90 = add nsw i64 %86, 1
  %91 = trunc i64 %89 to i32
  store i32 %91, i32* %5, align 4
  %92 = load i64, i64* @h, align 8
  %93 = load i64, i64* @w, align 8
  %94 = sub i64 0, %93
  %95 = sub i64 %92, %94
  %96 = add nsw i64 %92, %93
  %97 = add i64 %95, -4924808873990921936
  %98 = add i64 %97, 1
  %99 = sub i64 %98, -4924808873990921936
  %100 = add nsw i64 %95, 1
  %101 = sub i64 %99, -5312992034224209886
  %102 = add i64 %101, 2
  %103 = add i64 %102, -5312992034224209886
  %104 = add nsw i64 %99, 2
  %105 = trunc i64 %103 to i32
  call void @_ZN5DinicC2Ei(%struct.Dinic* %6, i32 %105)
  store i32 0, i32* %7, align 4
  br label %106

; <label>:106:                                    ; preds = %447, %82
  %107 = load i32, i32* %7, align 4
  %108 = load i64, i64* @h, align 8
  %109 = trunc i64 %108 to i32
  %110 = icmp slt i32 %107, %109
  br i1 %110, label %111, label %448

; <label>:111:                                    ; preds = %106
  store i32 0, i32* %8, align 4
  br label %112

; <label>:112:                                    ; preds = %391, %111
  %113 = load i32, i32* %8, align 4
  %114 = load i64, i64* @w, align 8
  %115 = trunc i64 %114 to i32
  %116 = icmp slt i32 %113, %115
  br i1 %116, label %117, label %398

; <label>:117:                                    ; preds = %112
  %118 = load i32, i32* @x.8
  %119 = load i32, i32* @y.9
  %120 = add i32 %118, -654702064
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, -654702064
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  br i1 %130, label %132, label %577

; <label>:132:                                    ; preds = %117, %577
  %133 = load i32, i32* %7, align 4
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %134
  %136 = load i32, i32* %8, align 4
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds [105 x i8], [105 x i8]* %135, i64 0, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = icmp eq i32 %140, 111
  %142 = load i32, i32* @x.8
  %143 = load i32, i32* @y.9
  %144 = sub i32 0, 1
  %145 = add i32 %142, %144
  %146 = sub i32 %142, 1
  %147 = mul i32 %142, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %143, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %577

; <label>:155:                                    ; preds = %132
  br i1 %141, label %156, label %181

; <label>:156:                                    ; preds = %155
  %157 = load i32, i32* %7, align 4
  %158 = sub i32 %157, -1205003354
  %159 = add i32 %158, 1
  %160 = add i32 %159, -1205003354
  %161 = add nsw i32 %157, 1
  %162 = load i64, i64* @h, align 8
  %163 = sub i64 0, %162
  %164 = sub i64 0, 1
  %165 = add i64 %163, %164
  %166 = sub i64 0, %165
  %167 = add nsw i64 %162, 1
  %168 = load i32, i32* %8, align 4
  %169 = sext i32 %168 to i64
  %170 = sub i64 0, %166
  %171 = sub i64 0, %169
  %172 = add i64 %170, %171
  %173 = sub i64 0, %172
  %174 = add nsw i64 %166, %169
  %175 = trunc i64 %173 to i32
  invoke void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic* %6, i32 %160, i32 %175, i64 1, i64 1)
          to label %176 unwind label %177

; <label>:176:                                    ; preds = %156
  br label %390

; <label>:177:                                    ; preds = %562, %560, %556, %553, %509, %327, %326, %240, %232, %156
  %178 = landingpad { i8*, i32 }
          cleanup
  %179 = extractvalue { i8*, i32 } %178, 0
  store i8* %179, i8** %9, align 8
  %180 = extractvalue { i8*, i32 } %178, 1
  store i32 %180, i32* %10, align 4
  call void @_ZN5DinicD2Ev(%struct.Dinic* %6) #3
  br label %567

; <label>:181:                                    ; preds = %155
  %182 = load i32, i32* @x.8
  %183 = load i32, i32* @y.9
  %184 = add i32 %182, -327669569
  %185 = sub i32 %184, 1
  %186 = sub i32 %185, -327669569
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = and i1 %190, %191
  %193 = xor i1 %190, %191
  %194 = or i1 %192, %193
  %195 = or i1 %190, %191
  br i1 %194, label %196, label %587

; <label>:196:                                    ; preds = %181, %587
  %197 = load i32, i32* %7, align 4
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %198
  %200 = load i32, i32* %8, align 4
  %201 = sext i32 %200 to i64
  %202 = getelementptr inbounds [105 x i8], [105 x i8]* %199, i64 0, i64 %201
  %203 = load i8, i8* %202, align 1
  %204 = sext i8 %203 to i32
  %205 = icmp eq i32 %204, 83
  %206 = load i32, i32* @x.8
  %207 = load i32, i32* @y.9
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %587

; <label>:231:                                    ; preds = %196
  br i1 %205, label %232, label %258

; <label>:232:                                    ; preds = %231
  %233 = load i32, i32* %4, align 4
  %234 = load i32, i32* %7, align 4
  %235 = sub i32 0, %234
  %236 = sub i32 0, 1
  %237 = add i32 %235, %236
  %238 = sub i32 0, %237
  %239 = add nsw i32 %234, 1
  invoke void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic* %6, i32 %233, i32 %238, i64 1000000000, i64 1000000000)
          to label %240 unwind label %177

; <label>:240:                                    ; preds = %232
  %241 = load i32, i32* %4, align 4
  %242 = load i64, i64* @h, align 8
  %243 = sub i64 %242, -8011747770108350329
  %244 = add i64 %243, 1
  %245 = add i64 %244, -8011747770108350329
  %246 = add nsw i64 %242, 1
  %247 = load i32, i32* %8, align 4
  %248 = sext i32 %247 to i64
  %249 = sub i64 0, %248
  %250 = sub i64 %245, %249
  %251 = add nsw i64 %245, %248
  %252 = trunc i64 %250 to i32
  invoke void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic* %6, i32 %241, i32 %252, i64 1000000000, i64 1000000000)
          to label %253 unwind label %177

; <label>:253:                                    ; preds = %240
  %254 = load i32, i32* %8, align 4
  %255 = sext i32 %254 to i64
  store i64 %255, i64* @x, align 8
  %256 = load i32, i32* %7, align 4
  %257 = sext i32 %256 to i64
  store i64 %257, i64* @y, align 8
  br label %347

; <label>:258:                                    ; preds = %231
  %259 = load i32, i32* %7, align 4
  %260 = sext i32 %259 to i64
  %261 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %260
  %262 = load i32, i32* %8, align 4
  %263 = sext i32 %262 to i64
  %264 = getelementptr inbounds [105 x i8], [105 x i8]* %261, i64 0, i64 %263
  %265 = load i8, i8* %264, align 1
  %266 = sext i8 %265 to i32
  %267 = icmp eq i32 %266, 84
  br i1 %267, label %268, label %346

; <label>:268:                                    ; preds = %258
  %269 = load i32, i32* @x.8
  %270 = load i32, i32* @y.9
  %271 = add i32 %269, 1087957415
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, 1087957415
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = xor i1 %277, true
  %280 = xor i1 %278, true
  %281 = xor i1 false, true
  %282 = and i1 %279, false
  %283 = and i1 %277, %281
  %284 = and i1 %280, false
  %285 = and i1 %278, %281
  %286 = or i1 %282, %283
  %287 = or i1 %284, %285
  %288 = xor i1 %286, %287
  %289 = or i1 %279, %280
  %290 = xor i1 %289, true
  %291 = or i1 false, %281
  %292 = and i1 %290, %291
  %293 = or i1 %288, %292
  %294 = or i1 %277, %278
  br i1 %293, label %295, label %597

; <label>:295:                                    ; preds = %268, %597
  %296 = load i32, i32* %7, align 4
  %297 = sub i32 0, 1
  %298 = sub i32 %296, %297
  %299 = add nsw i32 %296, 1
  %300 = load i32, i32* %5, align 4
  %301 = load i32, i32* @x.8
  %302 = load i32, i32* @y.9
  %303 = sub i32 0, 1
  %304 = add i32 %301, %303
  %305 = sub i32 %301, 1
  %306 = mul i32 %301, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %302, 10
  %310 = xor i1 %308, true
  %311 = xor i1 %309, true
  %312 = xor i1 false, true
  %313 = and i1 %310, false
  %314 = and i1 %308, %312
  %315 = and i1 %311, false
  %316 = and i1 %309, %312
  %317 = or i1 %313, %314
  %318 = or i1 %315, %316
  %319 = xor i1 %317, %318
  %320 = or i1 %310, %311
  %321 = xor i1 %320, true
  %322 = or i1 false, %312
  %323 = and i1 %321, %322
  %324 = or i1 %319, %323
  %325 = or i1 %308, %309
  br i1 %324, label %326, label %597

; <label>:326:                                    ; preds = %295
  invoke void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic* %6, i32 %298, i32 %300, i64 1000000000, i64 1000000000)
          to label %327 unwind label %177

; <label>:327:                                    ; preds = %326
  %328 = load i64, i64* @h, align 8
  %329 = sub i64 0, 1
  %330 = sub i64 %328, %329
  %331 = add nsw i64 %328, 1
  %332 = load i32, i32* %8, align 4
  %333 = sext i32 %332 to i64
  %334 = sub i64 0, %330
  %335 = sub i64 0, %333
  %336 = add i64 %334, %335
  %337 = sub i64 0, %336
  %338 = add nsw i64 %330, %333
  %339 = trunc i64 %337 to i32
  %340 = load i32, i32* %5, align 4
  invoke void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic* %6, i32 %339, i32 %340, i64 1000000000, i64 1000000000)
          to label %341 unwind label %177

; <label>:341:                                    ; preds = %327
  %342 = load i32, i32* %8, align 4
  %343 = sext i32 %342 to i64
  store i64 %343, i64* @xx, align 8
  %344 = load i32, i32* %7, align 4
  %345 = sext i32 %344 to i64
  store i64 %345, i64* @yy, align 8
  br label %346

; <label>:346:                                    ; preds = %341, %258
  br label %347

; <label>:347:                                    ; preds = %346, %253
  %348 = load i32, i32* @x.8
  %349 = load i32, i32* @y.9
  %350 = sub i32 %348, -730818
  %351 = sub i32 %350, 1
  %352 = add i32 %351, -730818
  %353 = sub i32 %348, 1
  %354 = mul i32 %348, %352
  %355 = urem i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = icmp slt i32 %349, 10
  %358 = xor i1 %356, true
  %359 = xor i1 %357, true
  %360 = xor i1 true, true
  %361 = and i1 %358, true
  %362 = and i1 %356, %360
  %363 = and i1 %359, true
  %364 = and i1 %357, %360
  %365 = or i1 %361, %362
  %366 = or i1 %363, %364
  %367 = xor i1 %365, %366
  %368 = or i1 %358, %359
  %369 = xor i1 %368, true
  %370 = or i1 true, %360
  %371 = and i1 %369, %370
  %372 = or i1 %367, %371
  %373 = or i1 %356, %357
  br i1 %372, label %374, label %623

; <label>:374:                                    ; preds = %347, %623
  %375 = load i32, i32* @x.8
  %376 = load i32, i32* @y.9
  %377 = add i32 %375, -204312200
  %378 = sub i32 %377, 1
  %379 = sub i32 %378, -204312200
  %380 = sub i32 %375, 1
  %381 = mul i32 %375, %379
  %382 = urem i32 %381, 2
  %383 = icmp eq i32 %382, 0
  %384 = icmp slt i32 %376, 10
  %385 = and i1 %383, %384
  %386 = xor i1 %383, %384
  %387 = or i1 %385, %386
  %388 = or i1 %383, %384
  br i1 %387, label %389, label %623

; <label>:389:                                    ; preds = %374
  br label %390

; <label>:390:                                    ; preds = %389, %176
  br label %391

; <label>:391:                                    ; preds = %390
  %392 = load i32, i32* %8, align 4
  %393 = sub i32 0, %392
  %394 = sub i32 0, 1
  %395 = add i32 %393, %394
  %396 = sub i32 0, %395
  %397 = add nsw i32 %392, 1
  store i32 %396, i32* %8, align 4
  br label %112

; <label>:398:                                    ; preds = %112
  br label %399

; <label>:399:                                    ; preds = %398
  %400 = load i32, i32* @x.8
  %401 = load i32, i32* @y.9
  %402 = sub i32 %400, 1824283127
  %403 = sub i32 %402, 1
  %404 = add i32 %403, 1824283127
  %405 = sub i32 %400, 1
  %406 = mul i32 %400, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %401, 10
  %410 = xor i1 %408, true
  %411 = xor i1 %409, true
  %412 = xor i1 true, true
  %413 = and i1 %410, true
  %414 = and i1 %408, %412
  %415 = and i1 %411, true
  %416 = and i1 %409, %412
  %417 = or i1 %413, %414
  %418 = or i1 %415, %416
  %419 = xor i1 %417, %418
  %420 = or i1 %410, %411
  %421 = xor i1 %420, true
  %422 = or i1 true, %412
  %423 = and i1 %421, %422
  %424 = or i1 %419, %423
  %425 = or i1 %408, %409
  br i1 %424, label %426, label %624

; <label>:426:                                    ; preds = %399, %624
  %427 = load i32, i32* %7, align 4
  %428 = sub i32 0, %427
  %429 = sub i32 0, 1
  %430 = add i32 %428, %429
  %431 = sub i32 0, %430
  %432 = add nsw i32 %427, 1
  store i32 %431, i32* %7, align 4
  %433 = load i32, i32* @x.8
  %434 = load i32, i32* @y.9
  %435 = add i32 %433, 321323399
  %436 = sub i32 %435, 1
  %437 = sub i32 %436, 321323399
  %438 = sub i32 %433, 1
  %439 = mul i32 %433, %437
  %440 = urem i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = icmp slt i32 %434, 10
  %443 = and i1 %441, %442
  %444 = xor i1 %441, %442
  %445 = or i1 %443, %444
  %446 = or i1 %441, %442
  br i1 %445, label %447, label %624

; <label>:447:                                    ; preds = %426
  br label %106

; <label>:448:                                    ; preds = %106
  %449 = load i32, i32* @x.8
  %450 = load i32, i32* @y.9
  %451 = sub i32 %449, -752543868
  %452 = sub i32 %451, 1
  %453 = add i32 %452, -752543868
  %454 = sub i32 %449, 1
  %455 = mul i32 %449, %453
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %450, 10
  %459 = xor i1 %457, true
  %460 = xor i1 %458, true
  %461 = xor i1 false, true
  %462 = and i1 %459, false
  %463 = and i1 %457, %461
  %464 = and i1 %460, false
  %465 = and i1 %458, %461
  %466 = or i1 %462, %463
  %467 = or i1 %464, %465
  %468 = xor i1 %466, %467
  %469 = or i1 %459, %460
  %470 = xor i1 %469, true
  %471 = or i1 false, %461
  %472 = and i1 %470, %471
  %473 = or i1 %468, %472
  %474 = or i1 %457, %458
  br i1 %473, label %475, label %645

; <label>:475:                                    ; preds = %448, %645
  %476 = load i64, i64* @x, align 8
  %477 = load i64, i64* @xx, align 8
  %478 = icmp eq i64 %476, %477
  %479 = load i32, i32* @x.8
  %480 = load i32, i32* @y.9
  %481 = sub i32 0, 1
  %482 = add i32 %479, %481
  %483 = sub i32 %479, 1
  %484 = mul i32 %479, %482
  %485 = urem i32 %484, 2
  %486 = icmp eq i32 %485, 0
  %487 = icmp slt i32 %480, 10
  %488 = xor i1 %486, true
  %489 = xor i1 %487, true
  %490 = xor i1 true, true
  %491 = and i1 %488, true
  %492 = and i1 %486, %490
  %493 = and i1 %489, true
  %494 = and i1 %487, %490
  %495 = or i1 %491, %492
  %496 = or i1 %493, %494
  %497 = xor i1 %495, %496
  %498 = or i1 %488, %489
  %499 = xor i1 %498, true
  %500 = or i1 true, %490
  %501 = and i1 %499, %500
  %502 = or i1 %497, %501
  %503 = or i1 %486, %487
  br i1 %502, label %504, label %645

; <label>:504:                                    ; preds = %475
  br i1 %478, label %509, label %505

; <label>:505:                                    ; preds = %504
  %506 = load i64, i64* @y, align 8
  %507 = load i64, i64* @yy, align 8
  %508 = icmp eq i64 %506, %507
  br i1 %508, label %509, label %556

; <label>:509:                                    ; preds = %505, %504
  %510 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 -1)
          to label %511 unwind label %177

; <label>:511:                                    ; preds = %509
  %512 = load i32, i32* @x.8
  %513 = load i32, i32* @y.9
  %514 = add i32 %512, -1104984491
  %515 = sub i32 %514, 1
  %516 = sub i32 %515, -1104984491
  %517 = sub i32 %512, 1
  %518 = mul i32 %512, %516
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %513, 10
  %522 = xor i1 %520, true
  %523 = xor i1 %521, true
  %524 = xor i1 true, true
  %525 = and i1 %522, true
  %526 = and i1 %520, %524
  %527 = and i1 %523, true
  %528 = and i1 %521, %524
  %529 = or i1 %525, %526
  %530 = or i1 %527, %528
  %531 = xor i1 %529, %530
  %532 = or i1 %522, %523
  %533 = xor i1 %532, true
  %534 = or i1 true, %524
  %535 = and i1 %533, %534
  %536 = or i1 %531, %535
  %537 = or i1 %520, %521
  br i1 %536, label %538, label %649

; <label>:538:                                    ; preds = %511, %649
  %539 = load i32, i32* @x.8
  %540 = load i32, i32* @y.9
  %541 = add i32 %539, -738623514
  %542 = sub i32 %541, 1
  %543 = sub i32 %542, -738623514
  %544 = sub i32 %539, 1
  %545 = mul i32 %539, %543
  %546 = urem i32 %545, 2
  %547 = icmp eq i32 %546, 0
  %548 = icmp slt i32 %540, 10
  %549 = and i1 %547, %548
  %550 = xor i1 %547, %548
  %551 = or i1 %549, %550
  %552 = or i1 %547, %548
  br i1 %551, label %553, label %649

; <label>:553:                                    ; preds = %538
  %554 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %510, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %555 unwind label %177

; <label>:555:                                    ; preds = %553
  br label %565

; <label>:556:                                    ; preds = %505
  %557 = load i32, i32* %4, align 4
  %558 = load i32, i32* %5, align 4
  %559 = invoke i64 @_ZN5Dinic8max_flowEii(%struct.Dinic* %6, i32 %557, i32 %558)
          to label %560 unwind label %177

; <label>:560:                                    ; preds = %556
  %561 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %559)
          to label %562 unwind label %177

; <label>:562:                                    ; preds = %560
  %563 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %561, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %564 unwind label %177

; <label>:564:                                    ; preds = %562
  br label %565

; <label>:565:                                    ; preds = %564, %555
  store i32 0, i32* %1, align 4
  call void @_ZN5DinicD2Ev(%struct.Dinic* %6) #3
  %566 = load i32, i32* %1, align 4
  ret i32 %566

; <label>:567:                                    ; preds = %177
  %568 = load i8*, i8** %9, align 8
  %569 = load i32, i32* %10, align 4
  %570 = insertvalue { i8*, i32 } undef, i8* %568, 0
  %571 = insertvalue { i8*, i32 } %570, i32 %569, 1
  resume { i8*, i32 } %571

; <label>:572:                                    ; preds = %42, %27
  %573 = load i32, i32* %3, align 4
  %574 = load i64, i64* @w, align 8
  %575 = trunc i64 %574 to i32
  %576 = icmp slt i32 %573, %575
  br label %42

; <label>:577:                                    ; preds = %132, %117
  %578 = load i32, i32* %7, align 4
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %579
  %581 = load i32, i32* %8, align 4
  %582 = sext i32 %581 to i64
  %583 = getelementptr inbounds [105 x i8], [105 x i8]* %580, i64 0, i64 %582
  %584 = load i8, i8* %583, align 1
  %585 = sext i8 %584 to i32
  %586 = icmp eq i32 %585, 111
  br label %132

; <label>:587:                                    ; preds = %196, %181
  %588 = load i32, i32* %7, align 4
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds [105 x [105 x i8]], [105 x [105 x i8]]* @c, i64 0, i64 %589
  %591 = load i32, i32* %8, align 4
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds [105 x i8], [105 x i8]* %590, i64 0, i64 %592
  %594 = load i8, i8* %593, align 1
  %595 = sext i8 %594 to i32
  %596 = icmp eq i32 %595, 83
  br label %196

; <label>:597:                                    ; preds = %295, %268
  %598 = load i32, i32* %7, align 4
  %599 = sub i32 0, 62086030
  %600 = sub i32 %599, %598
  %601 = add i32 %600, 62086030
  %602 = sub i32 0, %598
  %603 = sub i32 0, %601
  %604 = sub i32 0, 1
  %605 = add i32 %603, %604
  %606 = sub i32 0, %605
  %607 = add i32 %601, 1
  %608 = shl i32 %598, 1
  %609 = sub i32 0, 1
  %610 = add i32 %598, %609
  %611 = sub i32 %598, 1
  %612 = mul i32 %610, 1
  %613 = sub i32 0, 1
  %614 = add i32 %598, %613
  %615 = sub i32 %598, 1
  %616 = mul i32 %614, 1
  %617 = sub i32 0, %598
  %618 = sub i32 0, 1
  %619 = add i32 %617, %618
  %620 = sub i32 0, %619
  %621 = add nsw i32 %598, 1
  %622 = load i32, i32* %5, align 4
  br label %295

; <label>:623:                                    ; preds = %374, %347
  br label %374

; <label>:624:                                    ; preds = %426, %399
  %625 = load i32, i32* %7, align 4
  %626 = sub i32 0, %625
  %627 = add i32 0, %626
  %628 = sub i32 0, %625
  %629 = sub i32 0, 1
  %630 = sub i32 %627, %629
  %631 = add i32 %627, 1
  %632 = sub i32 0, -2056850311
  %633 = sub i32 %632, %625
  %634 = add i32 %633, -2056850311
  %635 = sub i32 0, %625
  %636 = sub i32 %634, 1580549396
  %637 = add i32 %636, 1
  %638 = add i32 %637, 1580549396
  %639 = add i32 %634, 1
  %640 = shl i32 %625, 1
  %641 = sub i32 %625, -808624932
  %642 = add i32 %641, 1
  %643 = add i32 %642, -808624932
  %644 = add nsw i32 %625, 1
  store i32 %643, i32* %7, align 4
  br label %426

; <label>:645:                                    ; preds = %475, %448
  %646 = load i64, i64* @x, align 8
  %647 = load i64, i64* @xx, align 8
  %648 = icmp eq i64 %646, %647
  br label %475

; <label>:649:                                    ; preds = %538, %511
  br label %538
}

declare %"class.std::basic_ostream"* @_ZNSt9basic_iosIcSt11char_traitsIcEE3tieEPSo(%"class.std::basic_ios"*, %"class.std::basic_ostream"*) #1

declare zeroext i1 @_ZNSt8ios_base15sync_with_stdioEb(i1 zeroext) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERx(%"class.std::basic_istream"*, i64* dereferenceable(8)) #1

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcEERSt13basic_istreamIT_T0_ES6_RS3_(%"class.std::basic_istream"* dereferenceable(280), i8* dereferenceable(1)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicC2Ei(%struct.Dinic*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.Dinic*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %struct.Dinic* %0, %struct.Dinic** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.Dinic*, %struct.Dinic** %3, align 8
  %8 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %8) #3
  %9 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %9) #3
  %10 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 3
  %11 = load i32, i32* %4, align 4
  invoke void @_ZN5GraphC2Ei(%struct.Graph* %10, i32 %11)
          to label %12 unwind label %56

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.10
  %14 = load i32, i32* @y.11
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %14, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %65

; <label>:38:                                     ; preds = %12, %65
  %39 = load i32, i32* %4, align 4
  %40 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 0
  store i32 %39, i32* %40, align 8
  %41 = load i32, i32* @x.10
  %42 = load i32, i32* @y.11
  %43 = sub i32 %41, 2049287434
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 2049287434
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %65

; <label>:55:                                     ; preds = %38
  ret void

; <label>:56:                                     ; preds = %2
  %57 = landingpad { i8*, i32 }
          cleanup
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %9) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %8) #3
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %5, align 8
  %62 = load i32, i32* %6, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  resume { i8*, i32 } %64

; <label>:65:                                     ; preds = %38, %12
  %66 = load i32, i32* %4, align 4
  %67 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 0
  store i32 %66, i32* %67, align 8
  br label %38
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Dinic8add_edgeEiixx(%struct.Dinic*, i32, i32, i64, i64) #0 comdat align 2 {
  %6 = alloca %struct.Dinic*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"struct.Graph::edge", align 8
  %12 = alloca %"struct.Graph::edge", align 8
  store %struct.Dinic* %0, %struct.Dinic** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i64 %3, i64* %9, align 8
  store i64 %4, i64* %10, align 8
  %13 = load %struct.Dinic*, %struct.Dinic** %6, align 8
  %14 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %15 = load i32, i32* %7, align 4
  %16 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %14, i32 %15)
  %17 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 0
  %18 = load i32, i32* %8, align 4
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 1
  %20 = load i64, i64* %9, align 8
  store i64 %20, i64* %19, align 8
  %21 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 2
  %22 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %23 = load i32, i32* %8, align 4
  %24 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %22, i32 %23)
  %25 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %24) #3
  %26 = trunc i64 %25 to i32
  %27 = sext i32 %26 to i64
  store i64 %27, i64* %21, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %16, %"struct.Graph::edge"* dereferenceable(24) %11)
  %28 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %29 = load i32, i32* %8, align 4
  %30 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %28, i32 %29)
  %31 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 0
  %32 = load i32, i32* %7, align 4
  store i32 %32, i32* %31, align 8
  %33 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 1
  %34 = load i64, i64* %10, align 8
  store i64 %34, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 2
  %36 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %37 = load i32, i32* %7, align 4
  %38 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %36, i32 %37)
  %39 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %38) #3
  %40 = trunc i64 %39 to i32
  %41 = sub i32 0, 1
  %42 = add i32 %40, %41
  %43 = sub nsw i32 %40, 1
  %44 = sext i32 %42 to i64
  store i64 %44, i64* %35, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %30, %"struct.Graph::edge"* dereferenceable(24) %12)
  ret void
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Dinic8max_flowEii(%struct.Dinic*, i32, i32) #0 comdat align 2 {
  %4 = alloca %struct.Dinic*
  %5 = alloca %struct.Dinic*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  store %struct.Dinic* %0, %struct.Dinic** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  %11 = load %struct.Dinic*, %struct.Dinic** %5, align 8
  store %struct.Dinic* %11, %struct.Dinic** %4
  store i64 0, i64* %8, align 8
  %12 = alloca i32
  store i32 984306134, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %151
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 984306134, label %16
    i32 -292317136, label %22
    i32 -1569229624, label %49
    i32 806179853, label %82
    i32 -280100305, label %83
    i32 1957631539, label %90
    i32 -1451832929, label %96
    i32 -121471325, label %124
    i32 -904445419, label %140
    i32 -421467535, label %141
    i32 -795196550, label %143
    i32 -558050247, label %150
  ]

; <label>:15:                                     ; preds = %13
  br label %151

; <label>:16:                                     ; preds = %13
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %20 = call zeroext i1 @_ZN5Dinic7g_levelEii(%struct.Dinic* %19, i32 %17, i32 %18)
  %21 = select i1 %20, i32 -292317136, i32 -421467535
  store i32 %21, i32* %12
  br label %151

; <label>:22:                                     ; preds = %13
  %23 = load i32, i32* @x.14
  %24 = load i32, i32* @y.15
  %25 = sub i32 0, 1
  %26 = add i32 %23, %25
  %27 = sub i32 %23, 1
  %28 = mul i32 %23, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %24, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1569229624, i32 -795196550
  store i32 %48, i32* %12
  br label %151

; <label>:49:                                     ; preds = %13
  %50 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %51 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %50, i32 0, i32 2
  %52 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %53 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %52, i32 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = sext i32 %54 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %51, i64 %55, i32* dereferenceable(4) %10)
  %56 = load i32, i32* @x.14
  %57 = load i32, i32* @y.15
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 806179853, i32 -795196550
  store i32 %81, i32* %12
  br label %151

; <label>:82:                                     ; preds = %13
  store i32 -280100305, i32* %12
  br label %151

; <label>:83:                                     ; preds = %13
  %84 = load i32, i32* %6, align 4
  %85 = load i32, i32* %7, align 4
  %86 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %87 = call i64 @_ZN5Dinic3dfsEiix(%struct.Dinic* %86, i32 %84, i32 %85, i64 1000000000)
  store i64 %87, i64* %9, align 8
  %88 = icmp sgt i64 %87, 0
  %89 = select i1 %88, i32 1957631539, i32 -1451832929
  store i32 %89, i32* %12
  br label %151

; <label>:90:                                     ; preds = %13
  %91 = load i64, i64* %9, align 8
  %92 = load i64, i64* %8, align 8
  %93 = sub i64 0, %91
  %94 = sub i64 %92, %93
  %95 = add nsw i64 %92, %91
  store i64 %94, i64* %8, align 8
  store i32 -280100305, i32* %12
  br label %151

; <label>:96:                                     ; preds = %13
  %97 = load i32, i32* @x.14
  %98 = load i32, i32* @y.15
  %99 = sub i32 %97, 367159380
  %100 = sub i32 %99, 1
  %101 = add i32 %100, 367159380
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -121471325, i32 -558050247
  store i32 %123, i32* %12
  br label %151

; <label>:124:                                    ; preds = %13
  %125 = load i32, i32* @x.14
  %126 = load i32, i32* @y.15
  %127 = add i32 %125, 1798791947
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 1798791947
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  %139 = select i1 %137, i32 -904445419, i32 -558050247
  store i32 %139, i32* %12
  br label %151

; <label>:140:                                    ; preds = %13
  store i32 984306134, i32* %12
  br label %151

; <label>:141:                                    ; preds = %13
  %142 = load i64, i64* %8, align 8
  ret i64 %142

; <label>:143:                                    ; preds = %13
  %144 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %145 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %144, i32 0, i32 2
  %146 = load volatile %struct.Dinic*, %struct.Dinic** %4
  %147 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = sext i32 %148 to i64
  store i32 0, i32* %10, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %145, i64 %149, i32* dereferenceable(4) %10)
  store i32 -1569229624, i32* %12
  br label %151

; <label>:150:                                    ; preds = %13
  store i32 -121471325, i32* %12
  br label %151

; <label>:151:                                    ; preds = %150, %143, %140, %124, %96, %90, %83, %82, %49, %22, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5DinicD2Ev(%struct.Dinic*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %struct.Dinic*, align 8
  store %struct.Dinic* %0, %struct.Dinic** %2, align 8
  %3 = load %struct.Dinic*, %struct.Dinic** %2, align 8
  %4 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 3
  call void @_ZN5GraphD2Ev(%struct.Graph* %4) #3
  %5 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %5) #3
  %6 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.18
  %3 = load i32, i32* @y.19
  %4 = add i32 %2, 1863315107
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1863315107
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %62

; <label>:28:                                     ; preds = %1, %62
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = load i32, i32* @x.18
  %33 = load i32, i32* @y.19
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %62

; <label>:57:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"* %31)
          to label %58 unwind label %59

; <label>:58:                                     ; preds = %57
  ret void

; <label>:59:                                     ; preds = %57
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #11
  unreachable

; <label>:62:                                     ; preds = %28, %1
  %63 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  %64 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %65 = bitcast %"class.std::vector"* %64 to %"struct.std::_Vector_base"*
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ei(%struct.Graph*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.8", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.Graph*, %struct.Graph** %3, align 8
  %9 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.3"* %9) #3
  %10 = load i32, i32* %4, align 4
  %11 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 1
  %13 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev(%"class.std::vector.8"* %5) #3
  invoke void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_(%"class.std::vector.3"* %12, i64 %15, %"class.std::vector.8"* dereferenceable(24) %5)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  ret void

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.20
  %19 = load i32, i32* @y.21
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %84

; <label>:31:                                     ; preds = %17, %84
  %32 = landingpad { i8*, i32 }
          cleanup
  %33 = extractvalue { i8*, i32 } %32, 0
  store i8* %33, i8** %6, align 8
  %34 = extractvalue { i8*, i32 } %32, 1
  store i32 %34, i32* %7, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %9) #3
  %35 = load i32, i32* @x.20
  %36 = load i32, i32* @y.21
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %84

; <label>:48:                                     ; preds = %31
  br label %49

; <label>:49:                                     ; preds = %48
  %50 = load i32, i32* @x.20
  %51 = load i32, i32* @y.21
  %52 = sub i32 %50, -1410870608
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1410870608
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %88

; <label>:64:                                     ; preds = %49, %88
  %65 = load i8*, i8** %6, align 8
  %66 = load i32, i32* %7, align 4
  %67 = insertvalue { i8*, i32 } undef, i8* %65, 0
  %68 = insertvalue { i8*, i32 } %67, i32 %66, 1
  %69 = load i32, i32* @x.20
  %70 = load i32, i32* @y.21
  %71 = sub i32 %69, 883707117
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 883707117
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %88

; <label>:83:                                     ; preds = %64
  resume { i8*, i32 } %68

; <label>:84:                                     ; preds = %31, %17
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %6, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %7, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %9) #3
  br label %31

; <label>:88:                                     ; preds = %64, %49
  %89 = load i8*, i8** %6, align 8
  %90 = load i32, i32* %7, align 4
  %91 = insertvalue { i8*, i32 } undef, i8* %89, 0
  %92 = insertvalue { i8*, i32 } %91, i32 %90, 1
  br label %64
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.22
  %3 = load i32, i32* @y.23
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %120

; <label>:27:                                     ; preds = %1, %120
  %28 = alloca %"class.std::vector"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %40) #3
  %42 = load i32, i32* @x.22
  %43 = load i32, i32* @y.23
  %44 = sub i32 %42, -15190046
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -15190046
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %120

; <label>:56:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %35, i32* %39, %"class.std::allocator.0"* dereferenceable(1) %41)
          to label %57 unwind label %59

; <label>:57:                                     ; preds = %56
  %58 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %58) #3
  ret void

; <label>:59:                                     ; preds = %56
  %60 = load i32, i32* @x.22
  %61 = load i32, i32* @y.23
  %62 = add i32 %60, 499794116
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 499794116
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %135

; <label>:86:                                     ; preds = %59, %135
  %87 = landingpad { i8*, i32 }
          catch i8* null
  %88 = extractvalue { i8*, i32 } %87, 0
  store i8* %88, i8** %29, align 8
  %89 = extractvalue { i8*, i32 } %87, 1
  store i32 %89, i32* %30, align 4
  %90 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %90) #3
  %91 = load i32, i32* @x.22
  %92 = load i32, i32* @y.23
  %93 = add i32 %91, 1035810314
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, 1035810314
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %135

; <label>:117:                                    ; preds = %86
  br label %118

; <label>:118:                                    ; preds = %117
  %119 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %119) #11
  unreachable

; <label>:120:                                    ; preds = %27, %1
  %121 = alloca %"class.std::vector"*, align 8
  %122 = alloca i8*
  %123 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %121, align 8
  %124 = load %"class.std::vector"*, %"class.std::vector"** %121, align 8
  %125 = bitcast %"class.std::vector"* %124 to %"struct.std::_Vector_base"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %126, i32 0, i32 0
  %128 = load i32*, i32** %127, align 8
  %129 = bitcast %"class.std::vector"* %124 to %"struct.std::_Vector_base"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %130, i32 0, i32 1
  %132 = load i32*, i32** %131, align 8
  %133 = bitcast %"class.std::vector"* %124 to %"struct.std::_Vector_base"*
  %134 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %133) #3
  br label %27

; <label>:135:                                    ; preds = %86, %59
  %136 = landingpad { i8*, i32 }
          catch i8* null
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %29, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %30, align 4
  %139 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %139) #3
  br label %86
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.26
  %5 = load i32, i32* @y.27
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -895061585, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -895061585, label %17
    i32 1709407652, label %25
    i32 -1104477952, label %54
    i32 -206064814, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1709407652, i32 -206064814
  store i32 %24, i32* %13
  br label %57

; <label>:25:                                     ; preds = %14
  %26 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  %27 = load i32, i32* @x.26
  %28 = load i32, i32* @y.27
  %29 = add i32 %27, 582240839
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 582240839
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 false, true
  %40 = and i1 %37, false
  %41 = and i1 %35, %39
  %42 = and i1 %38, false
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 false, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -1104477952, i32 -206064814
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  unreachable

; <label>:55:                                     ; preds = %14
  %56 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  store i32 1709407652, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %25, %17, %16
  br label %14
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.28
  %5 = load i32, i32* @y.29
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 443262593, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %79
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 443262593, label %17
    i32 -267489296, label %37
    i32 1483251116, label %71
    i32 -2082888398, label %72
  ]

; <label>:16:                                     ; preds = %14
  br label %79

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -267489296, i32 -2082888398
  store i32 %36, i32* %13
  br label %79

; <label>:37:                                     ; preds = %14
  %38 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %39 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %38, align 8
  %40 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39 to %"class.std::allocator.0"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %40) #3
  %41 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 1
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 2
  store i32* null, i32** %43, align 8
  %44 = load i32, i32* @x.28
  %45 = load i32, i32* @y.29
  %46 = sub i32 %44, 991377031
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 991377031
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1483251116, i32 -2082888398
  store i32 %70, i32* %13
  br label %79

; <label>:71:                                     ; preds = %14
  ret void

; <label>:72:                                     ; preds = %14
  %73 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %73, align 8
  %74 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %73, align 8
  %75 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74 to %"class.std::allocator.0"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %75) #3
  %76 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74, i32 0, i32 0
  store i32* null, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74, i32 0, i32 1
  store i32* null, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %74, i32 0, i32 2
  store i32* null, i32** %78, align 8
  store i32 -267489296, i32* %13
  br label %79

; <label>:79:                                     ; preds = %72, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_(%"class.std::vector.3"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::vector.8"*, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %10, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %17 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 -792596569, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %152
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -792596569, label %22
    i32 518827465, label %27
    i32 2906725, label %43
    i32 541104279, label %58
    i32 -169031771, label %89
    i32 -1069919426, label %92
    i32 430250237, label %101
    i32 -2251277, label %102
    i32 -1523163681, label %130
    i32 -1799831325, label %145
    i32 -1232380499, label %146
    i32 855894081, label %151
  ]

; <label>:21:                                     ; preds = %19
  br label %152

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 518827465, i32 2906725
  store i32 %26, i32* %18
  br label %152

; <label>:27:                                     ; preds = %19
  %28 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %29 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %30, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"* %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #3
  %31 = load i64, i64* %9, align 8
  %32 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %33 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %32) #3
  %34 = sub i64 0, %33
  %35 = add i64 %31, %34
  %36 = sub i64 %31, %33
  %37 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  %39 = load %"class.std::vector.8"*, %"class.std::vector.8"** %38, align 8
  %40 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %41 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_(%"class.std::vector.3"* %40, %"class.std::vector.8"* %39, i64 %35, %"class.std::vector.8"* dereferenceable(24) %37)
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %41, %"class.std::vector.8"** %42, align 8
  store i32 -2251277, i32* %18
  br label %152

; <label>:43:                                     ; preds = %19
  %44 = load i32, i32* @x.36
  %45 = load i32, i32* @y.37
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 541104279, i32 -1232380499
  store i32 %57, i32* %18
  br label %152

; <label>:58:                                     ; preds = %19
  %59 = load i64, i64* %9, align 8
  %60 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %61 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %60) #3
  %62 = icmp ult i64 %59, %61
  store i1 %62, i1* %4
  %63 = load i32, i32* @x.36
  %64 = load i32, i32* @y.37
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 true, true
  %75 = and i1 %72, true
  %76 = and i1 %70, %74
  %77 = and i1 %73, true
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 true, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -169031771, i32 -1232380499
  store i32 %88, i32* %18
  br label %152

; <label>:89:                                     ; preds = %19
  %90 = load volatile i1, i1* %4
  %91 = select i1 %90, i32 -1069919426, i32 430250237
  store i32 %91, i32* %18
  br label %152

; <label>:92:                                     ; preds = %19
  %93 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %94 = bitcast %"class.std::vector.3"* %93 to %"struct.std::_Vector_base.4"*
  %95 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %95, i32 0, i32 0
  %97 = load %"class.std::vector.8"*, %"class.std::vector.8"** %96, align 8
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %97, i64 %98
  %100 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.3"* %100, %"class.std::vector.8"* %99) #3
  store i32 430250237, i32* %18
  br label %152

; <label>:101:                                    ; preds = %19
  store i32 -2251277, i32* %18
  br label %152

; <label>:102:                                    ; preds = %19
  %103 = load i32, i32* @x.36
  %104 = load i32, i32* @y.37
  %105 = sub i32 %103, -1267550757
  %106 = sub i32 %105, 1
  %107 = add i32 %106, -1267550757
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 false, true
  %116 = and i1 %113, false
  %117 = and i1 %111, %115
  %118 = and i1 %114, false
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 false, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -1523163681, i32 855894081
  store i32 %129, i32* %18
  br label %152

; <label>:130:                                    ; preds = %19
  %131 = load i32, i32* @x.36
  %132 = load i32, i32* @y.37
  %133 = sub i32 0, 1
  %134 = add i32 %131, %133
  %135 = sub i32 %131, 1
  %136 = mul i32 %131, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %132, 10
  %140 = and i1 %138, %139
  %141 = xor i1 %138, %139
  %142 = or i1 %140, %141
  %143 = or i1 %138, %139
  %144 = select i1 %142, i32 -1799831325, i32 855894081
  store i32 %144, i32* %18
  br label %152

; <label>:145:                                    ; preds = %19
  ret void

; <label>:146:                                    ; preds = %19
  %147 = load i64, i64* %9, align 8
  %148 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %149 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %148) #3
  %150 = icmp ult i64 %147, %149
  store i32 541104279, i32* %18
  br label %152

; <label>:151:                                    ; preds = %19
  store i32 -1523163681, i32* %18
  br label %152

; <label>:152:                                    ; preds = %151, %146, %130, %102, %101, %92, %89, %58, %43, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = load i32, i32* @x.38
  %8 = load i32, i32* @y.39
  %9 = sub i32 %7, 434882308
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 434882308
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = icmp slt i32 %8, 10
  %17 = xor i1 %15, true
  %18 = xor i1 %16, true
  %19 = xor i1 true, true
  %20 = and i1 %17, true
  %21 = and i1 %15, %19
  %22 = and i1 %18, true
  %23 = and i1 %16, %19
  %24 = or i1 %20, %21
  %25 = or i1 %22, %23
  %26 = xor i1 %24, %25
  %27 = or i1 %17, %18
  %28 = xor i1 %27, true
  %29 = or i1 true, %19
  %30 = and i1 %28, %29
  %31 = or i1 %26, %30
  %32 = or i1 %15, %16
  br i1 %31, label %33, label %50

; <label>:33:                                     ; preds = %6, %50
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  call void @__clang_call_terminate(i8* %35) #11
  %36 = load i32, i32* @x.38
  %37 = load i32, i32* @y.39
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %33
  unreachable

; <label>:50:                                     ; preds = %33, %6
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #11
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  %10 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %12, align 8
  %14 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %15 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %14) #3
  invoke void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %9, %"struct.Graph::edge"* %13, %"class.std::allocator.10"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.40
  %20 = load i32, i32* @y.41
  %21 = sub i32 %19, 1208634953
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1208634953
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %54

; <label>:33:                                     ; preds = %18, %54
  %34 = landingpad { i8*, i32 }
          catch i8* null
  %35 = extractvalue { i8*, i32 } %34, 0
  store i8* %35, i8** %3, align 8
  %36 = extractvalue { i8*, i32 } %34, 1
  store i32 %36, i32* %4, align 4
  %37 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %37) #3
  %38 = load i32, i32* @x.40
  %39 = load i32, i32* @y.41
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %54

; <label>:51:                                     ; preds = %33
  br label %52

; <label>:52:                                     ; preds = %51
  %53 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %53) #11
  unreachable

; <label>:54:                                     ; preds = %33, %18
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %3, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %4, align 4
  %58 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %58) #3
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %9, %"class.std::vector.8"* %13, %"class.std::allocator.5"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.44
  %5 = load i32, i32* @y.45
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 455374499, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %61
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 455374499, label %17
    i32 1000492550, label %25
    i32 1991383308, label %56
    i32 -308839463, label %57
  ]

; <label>:16:                                     ; preds = %14
  br label %61

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1000492550, i32 -308839463
  store i32 %24, i32* %13
  br label %61

; <label>:25:                                     ; preds = %14
  %26 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %26, align 8
  %27 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %26, align 8
  %28 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %27, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %28)
  %29 = load i32, i32* @x.44
  %30 = load i32, i32* @y.45
  %31 = add i32 %29, -1436623300
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -1436623300
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 1991383308, i32 -308839463
  store i32 %55, i32* %13
  br label %61

; <label>:56:                                     ; preds = %14
  ret void

; <label>:57:                                     ; preds = %14
  %58 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %58, align 8
  %59 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %58, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %60)
  store i32 1000492550, i32* %13
  br label %61

; <label>:61:                                     ; preds = %57, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.46
  %5 = load i32, i32* @y.47
  %6 = add i32 %4, -1151809871
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1151809871
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1402952941, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1402952941, label %18
    i32 -873603280, label %38
    i32 -559052626, label %60
    i32 971110570, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -873603280, i32 971110570
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %40 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %40, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %40, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %40, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %44, align 8
  %45 = load i32, i32* @x.46
  %46 = load i32, i32* @y.47
  %47 = add i32 %45, -1404676756
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1404676756
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -559052626, i32 971110570
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %63 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %63, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %63, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %63, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %67, align 8
  store i32 -873603280, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %12 = ptrtoint %"class.std::vector.8"* %7 to i64
  %13 = ptrtoint %"class.std::vector.8"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_(%"class.std::vector.3"*, %"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.8"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %6, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %15, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %2, i64* %8, align 8
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %9, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %17 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv(%"class.std::vector.3"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %17, %"class.std::vector.8"** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %11) #3
  store i64 %19, i64* %10, align 8
  %20 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %16) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %20, %"class.std::vector.8"** %21, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %13, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %23, %"class.std::vector.8"** %24, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(%"class.std::vector.3"* %16, %"class.std::vector.8"* %28, i64 %25, %"class.std::vector.8"* dereferenceable(24) %26)
  %29 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %16) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %30, align 8
  %31 = load i64, i64* %10, align 8
  %32 = call %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %14, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %32, %"class.std::vector.8"** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  ret %"class.std::vector.8"* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.8"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  store %"class.std::vector.8"* %9, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.3"*, %"class.std::vector.8"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.60
  %4 = load i32, i32* @y.61
  %5 = add i32 %3, 849690161
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 849690161
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %159

; <label>:29:                                     ; preds = %2, %159
  %30 = alloca %"class.std::vector.3"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %30, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %31, align 8
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %30, align 8
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %34 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"class.std::vector.8"*, %"class.std::vector.8"** %36, align 8
  %38 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %39 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %38) #3
  %40 = load i32, i32* @x.60
  %41 = load i32, i32* @y.61
  %42 = add i32 %40, 699088675
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 699088675
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %159

; <label>:54:                                     ; preds = %29
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %33, %"class.std::vector.8"* %37, %"class.std::allocator.5"* dereferenceable(1) %39)
          to label %55 unwind label %114

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.60
  %57 = load i32, i32* @y.61
  %58 = sub i32 %56, 1557271829
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1557271829
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %170

; <label>:82:                                     ; preds = %55, %170
  %83 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %84 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %85, i32 0, i32 1
  store %"class.std::vector.8"* %83, %"class.std::vector.8"** %86, align 8
  %87 = load i32, i32* @x.60
  %88 = load i32, i32* @y.61
  %89 = add i32 %87, -1273754487
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1273754487
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %170

; <label>:113:                                    ; preds = %82
  ret void

; <label>:114:                                    ; preds = %54
  %115 = load i32, i32* @x.60
  %116 = load i32, i32* @y.61
  %117 = sub i32 %115, 1091022200
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 1091022200
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %175

; <label>:129:                                    ; preds = %114, %175
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #11
  %132 = load i32, i32* @x.60
  %133 = load i32, i32* @y.61
  %134 = sub i32 %132, -1858352280
  %135 = sub i32 %134, 1
  %136 = add i32 %135, -1858352280
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %175

; <label>:158:                                    ; preds = %129
  unreachable

; <label>:159:                                    ; preds = %29, %2
  %160 = alloca %"class.std::vector.3"*, align 8
  %161 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %160, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %161, align 8
  %162 = load %"class.std::vector.3"*, %"class.std::vector.3"** %160, align 8
  %163 = load %"class.std::vector.8"*, %"class.std::vector.8"** %161, align 8
  %164 = bitcast %"class.std::vector.3"* %162 to %"struct.std::_Vector_base.4"*
  %165 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %165, i32 0, i32 1
  %167 = load %"class.std::vector.8"*, %"class.std::vector.8"** %166, align 8
  %168 = bitcast %"class.std::vector.3"* %162 to %"struct.std::_Vector_base.4"*
  %169 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %168) #3
  br label %29

; <label>:170:                                    ; preds = %82, %55
  %171 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %172 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %173, i32 0, i32 1
  store %"class.std::vector.8"* %171, %"class.std::vector.8"** %174, align 8
  br label %82

; <label>:175:                                    ; preds = %129, %114
  %176 = landingpad { i8*, i32 }
          catch i8* null
  %177 = extractvalue { i8*, i32 } %176, 0
  call void @__clang_call_terminate(i8* %177) #11
  br label %129
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.62
  %7 = load i32, i32* @y.63
  %8 = add i32 %6, -913781615
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -913781615
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 752815399, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %120
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 752815399, label %20
    i32 2004536259, label %28
    i32 791230738, label %69
    i32 670660234, label %71
  ]

; <label>:19:                                     ; preds = %17
  br label %120

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2004536259, i32 670660234
  store i32 %27, i32* %16
  br label %120

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %29, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %30, align 8
  %31 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %29, align 8
  %32 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %31) #3
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %34 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %30, align 8
  %35 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %34) #3
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %35, align 8
  %37 = ptrtoint %"class.std::vector.8"* %33 to i64
  %38 = ptrtoint %"class.std::vector.8"* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 24
  store i64 %42, i64* %3
  %43 = load i32, i32* @x.62
  %44 = load i32, i32* @y.63
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 791230738, i32 670660234
  store i32 %68, i32* %16
  br label %120

; <label>:69:                                     ; preds = %17
  %70 = load volatile i64, i64* %3
  ret i64 %70

; <label>:71:                                     ; preds = %17
  %72 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %72, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %72, align 8
  %75 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %74) #3
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %75, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %73, align 8
  %78 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %77) #3
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  %80 = ptrtoint %"class.std::vector.8"* %76 to i64
  %81 = ptrtoint %"class.std::vector.8"* %79 to i64
  %82 = sub i64 0, 2882275671230130290
  %83 = sub i64 %82, %80
  %84 = add i64 %83, 2882275671230130290
  %85 = sub i64 0, %80
  %86 = sub i64 0, %84
  %87 = sub i64 0, %81
  %88 = add i64 %86, %87
  %89 = sub i64 0, %88
  %90 = add i64 %84, %81
  %91 = shl i64 %80, %81
  %92 = sub i64 0, %81
  %93 = add i64 %80, %92
  %94 = sub i64 %80, %81
  %95 = sub i64 %93, 1861229588958423468
  %96 = sub i64 %95, 24
  %97 = add i64 %96, 1861229588958423468
  %98 = sub i64 %93, 24
  %99 = mul i64 %97, 24
  %100 = sub i64 %93, 1002430306222676570
  %101 = sub i64 %100, 24
  %102 = add i64 %101, 1002430306222676570
  %103 = sub i64 %93, 24
  %104 = mul i64 %102, 24
  %105 = sub i64 0, %93
  %106 = add i64 0, %105
  %107 = sub i64 0, %93
  %108 = add i64 %106, -7983415205153256874
  %109 = add i64 %108, 24
  %110 = sub i64 %109, -7983415205153256874
  %111 = add i64 %106, 24
  %112 = add i64 0, -6481420920517995142
  %113 = sub i64 %112, %93
  %114 = sub i64 %113, -6481420920517995142
  %115 = sub i64 0, %93
  %116 = sub i64 0, 24
  %117 = sub i64 %114, %116
  %118 = add i64 %114, 24
  %119 = sdiv exact i64 %93, 24
  store i32 2004536259, i32* %16
  br label %120

; <label>:120:                                    ; preds = %71, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.64
  %6 = load i32, i32* @y.65
  %7 = sub i32 %5, 1567284835
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1567284835
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -846126312, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -846126312, label %19
    i32 1544470300, label %39
    i32 1183238131, label %77
    i32 2115636685, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1544470300, i32 2115636685
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %46, align 8
  store %"class.std::vector.8"* %47, %"class.std::vector.8"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"* %40, %"class.std::vector.8"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  store %"class.std::vector.8"* %49, %"class.std::vector.8"** %2
  %50 = load i32, i32* @x.64
  %51 = load i32, i32* @y.65
  %52 = add i32 %50, -2032136171
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -2032136171
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1183238131, i32 2115636685
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %81 = alloca %"class.std::vector.3"*, align 8
  %82 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %81, align 8
  %83 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %84 = bitcast %"class.std::vector.3"* %83 to %"struct.std::_Vector_base.4"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"class.std::vector.8"*, %"class.std::vector.8"** %86, align 8
  store %"class.std::vector.8"* %87, %"class.std::vector.8"** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"* %80, %"class.std::vector.8"** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %80, i32 0, i32 0
  %89 = load %"class.std::vector.8"*, %"class.std::vector.8"** %88, align 8
  store i32 1544470300, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(%"class.std::vector.3"*, %"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::vector.8"*, align 8
  %9 = alloca %"class.std::vector.8", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.std::vector.8"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca %"class.std::vector.8"*, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %20, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %8, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %693

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %26, i32 0, i32 2
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %33 = ptrtoint %"class.std::vector.8"* %28 to i64
  %34 = ptrtoint %"class.std::vector.8"* %32 to i64
  %35 = sub i64 %33, 4065320762234549986
  %36 = sub i64 %35, %34
  %37 = add i64 %36, 4065320762234549986
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 24
  %40 = load i64, i64* %7, align 8
  %41 = icmp uge i64 %39, %40
  br i1 %41, label %42, label %299

; <label>:42:                                     ; preds = %24
  %43 = load i32, i32* @x.66
  %44 = load i32, i32* @y.67
  %45 = add i32 %43, 1575130597
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1575130597
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %744

; <label>:57:                                     ; preds = %42, %744
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %9, %"class.std::vector.8"* dereferenceable(24) %58)
  %59 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %21) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %59, %"class.std::vector.8"** %60, align 8
  %61 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %61, i64* %10, align 8
  %62 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %63, i32 0, i32 1
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  store %"class.std::vector.8"* %65, %"class.std::vector.8"** %12, align 8
  %66 = load i64, i64* %10, align 8
  %67 = load i64, i64* %7, align 8
  %68 = icmp ugt i64 %66, %67
  %69 = load i32, i32* @x.66
  %70 = load i32, i32* @y.67
  %71 = add i32 %69, -975615289
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -975615289
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %744

; <label>:83:                                     ; preds = %57
  br i1 %68, label %84, label %178

; <label>:84:                                     ; preds = %83
  %85 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %86, i32 0, i32 1
  %88 = load %"class.std::vector.8"*, %"class.std::vector.8"** %87, align 8
  %89 = load i64, i64* %7, align 8
  %90 = sub i64 0, -5225734029773484195
  %91 = sub i64 %90, %89
  %92 = add i64 %91, -5225734029773484195
  %93 = sub i64 0, %89
  %94 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %88, i64 %92
  %95 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %96, i32 0, i32 1
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %97, align 8
  %99 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %100 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %99, i32 0, i32 0
  %101 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %100, i32 0, i32 1
  %102 = load %"class.std::vector.8"*, %"class.std::vector.8"** %101, align 8
  %103 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %104 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %103) #3
  %105 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %94, %"class.std::vector.8"* %98, %"class.std::vector.8"* %102, %"class.std::allocator.5"* dereferenceable(1) %104)
          to label %106 unwind label %174

; <label>:106:                                    ; preds = %84
  %107 = load i64, i64* %7, align 8
  %108 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %109 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %108, i32 0, i32 0
  %110 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %109, i32 0, i32 1
  %111 = load %"class.std::vector.8"*, %"class.std::vector.8"** %110, align 8
  %112 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %111, i64 %107
  store %"class.std::vector.8"* %112, %"class.std::vector.8"** %110, align 8
  %113 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %114 = load %"class.std::vector.8"*, %"class.std::vector.8"** %113, align 8
  %115 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %116 = load i64, i64* %7, align 8
  %117 = add i64 0, -7313356069162880871
  %118 = sub i64 %117, %116
  %119 = sub i64 %118, -7313356069162880871
  %120 = sub i64 0, %116
  %121 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %115, i64 %119
  %122 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %123 = invoke %"class.std::vector.8"* @_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"* %114, %"class.std::vector.8"* %121, %"class.std::vector.8"* %122)
          to label %124 unwind label %174

; <label>:124:                                    ; preds = %106
  %125 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %126 = load %"class.std::vector.8"*, %"class.std::vector.8"** %125, align 8
  %127 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %128 = load %"class.std::vector.8"*, %"class.std::vector.8"** %127, align 8
  %129 = load i64, i64* %7, align 8
  %130 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %128, i64 %129
  invoke void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"* %126, %"class.std::vector.8"* %130, %"class.std::vector.8"* dereferenceable(24) %9)
          to label %131 unwind label %174

; <label>:131:                                    ; preds = %124
  %132 = load i32, i32* @x.66
  %133 = load i32, i32* @y.67
  %134 = add i32 %132, -1263463882
  %135 = sub i32 %134, 1
  %136 = sub i32 %135, -1263463882
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = and i1 %140, %141
  %143 = xor i1 %140, %141
  %144 = or i1 %142, %143
  %145 = or i1 %140, %141
  br i1 %144, label %146, label %756

; <label>:146:                                    ; preds = %131, %756
  %147 = load i32, i32* @x.66
  %148 = load i32, i32* @y.67
  %149 = sub i32 %147, 348626405
  %150 = sub i32 %149, 1
  %151 = add i32 %150, 348626405
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = xor i1 %155, true
  %158 = xor i1 %156, true
  %159 = xor i1 false, true
  %160 = and i1 %157, false
  %161 = and i1 %155, %159
  %162 = and i1 %158, false
  %163 = and i1 %156, %159
  %164 = or i1 %160, %161
  %165 = or i1 %162, %163
  %166 = xor i1 %164, %165
  %167 = or i1 %157, %158
  %168 = xor i1 %167, true
  %169 = or i1 false, %159
  %170 = and i1 %168, %169
  %171 = or i1 %166, %170
  %172 = or i1 %155, %156
  br i1 %171, label %173, label %756

; <label>:173:                                    ; preds = %146
  br label %257

; <label>:174:                                    ; preds = %246, %244, %178, %124, %106, %84
  %175 = landingpad { i8*, i32 }
          cleanup
  %176 = extractvalue { i8*, i32 } %175, 0
  store i8* %176, i8** %13, align 8
  %177 = extractvalue { i8*, i32 } %175, 1
  store i32 %177, i32* %14, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %9) #3
  br label %694

; <label>:178:                                    ; preds = %83
  %179 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %180 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %179, i32 0, i32 0
  %181 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %180, i32 0, i32 1
  %182 = load %"class.std::vector.8"*, %"class.std::vector.8"** %181, align 8
  %183 = load i64, i64* %7, align 8
  %184 = load i64, i64* %10, align 8
  %185 = sub i64 0, %184
  %186 = add i64 %183, %185
  %187 = sub i64 %183, %184
  %188 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %189 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %188) #3
  %190 = invoke %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"* %182, i64 %186, %"class.std::vector.8"* dereferenceable(24) %9, %"class.std::allocator.5"* dereferenceable(1) %189)
          to label %191 unwind label %174

; <label>:191:                                    ; preds = %178
  %192 = load i32, i32* @x.66
  %193 = load i32, i32* @y.67
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = xor i1 %199, true
  %202 = xor i1 %200, true
  %203 = xor i1 false, true
  %204 = and i1 %201, false
  %205 = and i1 %199, %203
  %206 = and i1 %202, false
  %207 = and i1 %200, %203
  %208 = or i1 %204, %205
  %209 = or i1 %206, %207
  %210 = xor i1 %208, %209
  %211 = or i1 %201, %202
  %212 = xor i1 %211, true
  %213 = or i1 false, %203
  %214 = and i1 %212, %213
  %215 = or i1 %210, %214
  %216 = or i1 %199, %200
  br i1 %215, label %217, label %757

; <label>:217:                                    ; preds = %191, %757
  %218 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %219, i32 0, i32 1
  store %"class.std::vector.8"* %190, %"class.std::vector.8"** %220, align 8
  %221 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %222 = load %"class.std::vector.8"*, %"class.std::vector.8"** %221, align 8
  %223 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %224 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %225 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %225, i32 0, i32 1
  %227 = load %"class.std::vector.8"*, %"class.std::vector.8"** %226, align 8
  %228 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %229 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %228) #3
  %230 = load i32, i32* @x.66
  %231 = load i32, i32* @y.67
  %232 = sub i32 %230, 708320538
  %233 = sub i32 %232, 1
  %234 = add i32 %233, 708320538
  %235 = sub i32 %230, 1
  %236 = mul i32 %230, %234
  %237 = urem i32 %236, 2
  %238 = icmp eq i32 %237, 0
  %239 = icmp slt i32 %231, 10
  %240 = and i1 %238, %239
  %241 = xor i1 %238, %239
  %242 = or i1 %240, %241
  %243 = or i1 %238, %239
  br i1 %242, label %244, label %757

; <label>:244:                                    ; preds = %217
  %245 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %222, %"class.std::vector.8"* %223, %"class.std::vector.8"* %227, %"class.std::allocator.5"* dereferenceable(1) %229)
          to label %246 unwind label %174

; <label>:246:                                    ; preds = %244
  %247 = load i64, i64* %10, align 8
  %248 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %249 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %248, i32 0, i32 0
  %250 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %249, i32 0, i32 1
  %251 = load %"class.std::vector.8"*, %"class.std::vector.8"** %250, align 8
  %252 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %251, i64 %247
  store %"class.std::vector.8"* %252, %"class.std::vector.8"** %250, align 8
  %253 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %254 = load %"class.std::vector.8"*, %"class.std::vector.8"** %253, align 8
  %255 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  invoke void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"* %254, %"class.std::vector.8"* %255, %"class.std::vector.8"* dereferenceable(24) %9)
          to label %256 unwind label %174

; <label>:256:                                    ; preds = %246
  br label %257

; <label>:257:                                    ; preds = %256, %173
  %258 = load i32, i32* @x.66
  %259 = load i32, i32* @y.67
  %260 = add i32 %258, -2021911269
  %261 = sub i32 %260, 1
  %262 = sub i32 %261, -2021911269
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %770

; <label>:272:                                    ; preds = %257, %770
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %9) #3
  %273 = load i32, i32* @x.66
  %274 = load i32, i32* @y.67
  %275 = sub i32 0, 1
  %276 = add i32 %273, %275
  %277 = sub i32 %273, 1
  %278 = mul i32 %273, %276
  %279 = urem i32 %278, 2
  %280 = icmp eq i32 %279, 0
  %281 = icmp slt i32 %274, 10
  %282 = xor i1 %280, true
  %283 = xor i1 %281, true
  %284 = xor i1 true, true
  %285 = and i1 %282, true
  %286 = and i1 %280, %284
  %287 = and i1 %283, true
  %288 = and i1 %281, %284
  %289 = or i1 %285, %286
  %290 = or i1 %287, %288
  %291 = xor i1 %289, %290
  %292 = or i1 %282, %283
  %293 = xor i1 %292, true
  %294 = or i1 true, %284
  %295 = and i1 %293, %294
  %296 = or i1 %291, %295
  %297 = or i1 %280, %281
  br i1 %296, label %298, label %770

; <label>:298:                                    ; preds = %272
  br label %650

; <label>:299:                                    ; preds = %24
  %300 = load i32, i32* @x.66
  %301 = load i32, i32* @y.67
  %302 = sub i32 0, 1
  %303 = add i32 %300, %302
  %304 = sub i32 %300, 1
  %305 = mul i32 %300, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %301, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 false, true
  %312 = and i1 %309, false
  %313 = and i1 %307, %311
  %314 = and i1 %310, false
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 false, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  br i1 %323, label %325, label %771

; <label>:325:                                    ; preds = %299, %771
  %326 = load i64, i64* %7, align 8
  %327 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %21, i64 %326, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %327, i64* %15, align 8
  %328 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %21) #3
  %329 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"class.std::vector.8"* %328, %"class.std::vector.8"** %329, align 8
  %330 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17) #3
  store i64 %330, i64* %16, align 8
  %331 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %332 = load i64, i64* %15, align 8
  %333 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %331, i64 %332)
  store %"class.std::vector.8"* %333, %"class.std::vector.8"** %18, align 8
  %334 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  store %"class.std::vector.8"* %334, %"class.std::vector.8"** %19, align 8
  %335 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %336 = load i64, i64* %16, align 8
  %337 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %335, i64 %336
  %338 = load i64, i64* %7, align 8
  %339 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %340 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %341 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %340) #3
  %342 = load i32, i32* @x.66
  %343 = load i32, i32* @y.67
  %344 = add i32 %342, -456220526
  %345 = sub i32 %344, 1
  %346 = sub i32 %345, -456220526
  %347 = sub i32 %342, 1
  %348 = mul i32 %342, %346
  %349 = urem i32 %348, 2
  %350 = icmp eq i32 %349, 0
  %351 = icmp slt i32 %343, 10
  %352 = and i1 %350, %351
  %353 = xor i1 %350, %351
  %354 = or i1 %352, %353
  %355 = or i1 %350, %351
  br i1 %354, label %356, label %771

; <label>:356:                                    ; preds = %325
  %357 = invoke %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"* %337, i64 %338, %"class.std::vector.8"* dereferenceable(24) %339, %"class.std::allocator.5"* dereferenceable(1) %341)
          to label %358 unwind label %413

; <label>:358:                                    ; preds = %356
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %19, align 8
  %359 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %359, i32 0, i32 0
  %361 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %360, i32 0, i32 0
  %362 = load %"class.std::vector.8"*, %"class.std::vector.8"** %361, align 8
  %363 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %364 = load %"class.std::vector.8"*, %"class.std::vector.8"** %363, align 8
  %365 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %366 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %367 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %366) #3
  %368 = invoke %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %362, %"class.std::vector.8"* %364, %"class.std::vector.8"* %365, %"class.std::allocator.5"* dereferenceable(1) %367)
          to label %369 unwind label %413

; <label>:369:                                    ; preds = %358
  store %"class.std::vector.8"* %368, %"class.std::vector.8"** %19, align 8
  %370 = load i64, i64* %7, align 8
  %371 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %372 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %371, i64 %370
  store %"class.std::vector.8"* %372, %"class.std::vector.8"** %19, align 8
  %373 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %374 = load %"class.std::vector.8"*, %"class.std::vector.8"** %373, align 8
  %375 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %375, i32 0, i32 0
  %377 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %376, i32 0, i32 1
  %378 = load %"class.std::vector.8"*, %"class.std::vector.8"** %377, align 8
  %379 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %380 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %381 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %380) #3
  %382 = invoke %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %374, %"class.std::vector.8"* %378, %"class.std::vector.8"* %379, %"class.std::allocator.5"* dereferenceable(1) %381)
          to label %383 unwind label %413

; <label>:383:                                    ; preds = %369
  %384 = load i32, i32* @x.66
  %385 = load i32, i32* @y.67
  %386 = sub i32 0, 1
  %387 = add i32 %384, %386
  %388 = sub i32 %384, 1
  %389 = mul i32 %384, %387
  %390 = urem i32 %389, 2
  %391 = icmp eq i32 %390, 0
  %392 = icmp slt i32 %385, 10
  %393 = and i1 %391, %392
  %394 = xor i1 %391, %392
  %395 = or i1 %393, %394
  %396 = or i1 %391, %392
  br i1 %395, label %397, label %788

; <label>:397:                                    ; preds = %383, %788
  store %"class.std::vector.8"* %382, %"class.std::vector.8"** %19, align 8
  %398 = load i32, i32* @x.66
  %399 = load i32, i32* @y.67
  %400 = add i32 %398, -1868079288
  %401 = sub i32 %400, 1
  %402 = sub i32 %401, -1868079288
  %403 = sub i32 %398, 1
  %404 = mul i32 %398, %402
  %405 = urem i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = icmp slt i32 %399, 10
  %408 = and i1 %406, %407
  %409 = xor i1 %406, %407
  %410 = or i1 %408, %409
  %411 = or i1 %406, %407
  br i1 %410, label %412, label %788

; <label>:412:                                    ; preds = %397
  br label %605

; <label>:413:                                    ; preds = %369, %358, %356
  %414 = landingpad { i8*, i32 }
          catch i8* null
  %415 = extractvalue { i8*, i32 } %414, 0
  store i8* %415, i8** %13, align 8
  %416 = extractvalue { i8*, i32 } %414, 1
  store i32 %416, i32* %14, align 4
  br label %417

; <label>:417:                                    ; preds = %413
  %418 = load i8*, i8** %13, align 8
  %419 = call i8* @__cxa_begin_catch(i8* %418) #3
  %420 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %421 = icmp ne %"class.std::vector.8"* %420, null
  br i1 %421, label %480, label %422

; <label>:422:                                    ; preds = %417
  %423 = load i32, i32* @x.66
  %424 = load i32, i32* @y.67
  %425 = sub i32 %423, -28490746
  %426 = sub i32 %425, 1
  %427 = add i32 %426, -28490746
  %428 = sub i32 %423, 1
  %429 = mul i32 %423, %427
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %424, 10
  %433 = xor i1 %431, true
  %434 = xor i1 %432, true
  %435 = xor i1 true, true
  %436 = and i1 %433, true
  %437 = and i1 %431, %435
  %438 = and i1 %434, true
  %439 = and i1 %432, %435
  %440 = or i1 %436, %437
  %441 = or i1 %438, %439
  %442 = xor i1 %440, %441
  %443 = or i1 %433, %434
  %444 = xor i1 %443, true
  %445 = or i1 true, %435
  %446 = and i1 %444, %445
  %447 = or i1 %442, %446
  %448 = or i1 %431, %432
  br i1 %447, label %449, label %789

; <label>:449:                                    ; preds = %422, %789
  %450 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %451 = load i64, i64* %16, align 8
  %452 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %450, i64 %451
  %453 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %454 = load i64, i64* %16, align 8
  %455 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %453, i64 %454
  %456 = load i64, i64* %7, align 8
  %457 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %455, i64 %456
  %458 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %459 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %458) #3
  %460 = load i32, i32* @x.66
  %461 = load i32, i32* @y.67
  %462 = sub i32 %460, -1929054435
  %463 = sub i32 %462, 1
  %464 = add i32 %463, -1929054435
  %465 = sub i32 %460, 1
  %466 = mul i32 %460, %464
  %467 = urem i32 %466, 2
  %468 = icmp eq i32 %467, 0
  %469 = icmp slt i32 %461, 10
  %470 = and i1 %468, %469
  %471 = xor i1 %468, %469
  %472 = or i1 %470, %471
  %473 = or i1 %468, %469
  br i1 %472, label %474, label %789

; <label>:474:                                    ; preds = %449
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %452, %"class.std::vector.8"* %457, %"class.std::allocator.5"* dereferenceable(1) %459)
          to label %475 unwind label %476

; <label>:475:                                    ; preds = %474
  br label %557

; <label>:476:                                    ; preds = %561, %557, %526, %474
  %477 = landingpad { i8*, i32 }
          cleanup
  %478 = extractvalue { i8*, i32 } %477, 0
  store i8* %478, i8** %13, align 8
  %479 = extractvalue { i8*, i32 } %477, 1
  store i32 %479, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %562 unwind label %740

; <label>:480:                                    ; preds = %417
  %481 = load i32, i32* @x.66
  %482 = load i32, i32* @y.67
  %483 = add i32 %481, -1281243799
  %484 = sub i32 %483, 1
  %485 = sub i32 %484, -1281243799
  %486 = sub i32 %481, 1
  %487 = mul i32 %481, %485
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %482, 10
  %491 = xor i1 %489, true
  %492 = xor i1 %490, true
  %493 = xor i1 true, true
  %494 = and i1 %491, true
  %495 = and i1 %489, %493
  %496 = and i1 %492, true
  %497 = and i1 %490, %493
  %498 = or i1 %494, %495
  %499 = or i1 %496, %497
  %500 = xor i1 %498, %499
  %501 = or i1 %491, %492
  %502 = xor i1 %501, true
  %503 = or i1 true, %493
  %504 = and i1 %502, %503
  %505 = or i1 %500, %504
  %506 = or i1 %489, %490
  br i1 %505, label %507, label %800

; <label>:507:                                    ; preds = %480, %800
  %508 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %509 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %510 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %511 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %510) #3
  %512 = load i32, i32* @x.66
  %513 = load i32, i32* @y.67
  %514 = add i32 %512, 2011009194
  %515 = sub i32 %514, 1
  %516 = sub i32 %515, 2011009194
  %517 = sub i32 %512, 1
  %518 = mul i32 %512, %516
  %519 = urem i32 %518, 2
  %520 = icmp eq i32 %519, 0
  %521 = icmp slt i32 %513, 10
  %522 = and i1 %520, %521
  %523 = xor i1 %520, %521
  %524 = or i1 %522, %523
  %525 = or i1 %520, %521
  br i1 %524, label %526, label %800

; <label>:526:                                    ; preds = %507
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %508, %"class.std::vector.8"* %509, %"class.std::allocator.5"* dereferenceable(1) %511)
          to label %527 unwind label %476

; <label>:527:                                    ; preds = %526
  %528 = load i32, i32* @x.66
  %529 = load i32, i32* @y.67
  %530 = add i32 %528, 387997445
  %531 = sub i32 %530, 1
  %532 = sub i32 %531, 387997445
  %533 = sub i32 %528, 1
  %534 = mul i32 %528, %532
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %529, 10
  %538 = and i1 %536, %537
  %539 = xor i1 %536, %537
  %540 = or i1 %538, %539
  %541 = or i1 %536, %537
  br i1 %540, label %542, label %805

; <label>:542:                                    ; preds = %527, %805
  %543 = load i32, i32* @x.66
  %544 = load i32, i32* @y.67
  %545 = sub i32 0, 1
  %546 = add i32 %543, %545
  %547 = sub i32 %543, 1
  %548 = mul i32 %543, %546
  %549 = urem i32 %548, 2
  %550 = icmp eq i32 %549, 0
  %551 = icmp slt i32 %544, 10
  %552 = and i1 %550, %551
  %553 = xor i1 %550, %551
  %554 = or i1 %552, %553
  %555 = or i1 %550, %551
  br i1 %554, label %556, label %805

; <label>:556:                                    ; preds = %542
  br label %557

; <label>:557:                                    ; preds = %556, %475
  %558 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %559 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %560 = load i64, i64* %15, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %558, %"class.std::vector.8"* %559, i64 %560)
          to label %561 unwind label %476

; <label>:561:                                    ; preds = %557
  invoke void @__cxa_rethrow() #12
          to label %743 unwind label %476

; <label>:562:                                    ; preds = %476
  %563 = load i32, i32* @x.66
  %564 = load i32, i32* @y.67
  %565 = add i32 %563, -980032896
  %566 = sub i32 %565, 1
  %567 = sub i32 %566, -980032896
  %568 = sub i32 %563, 1
  %569 = mul i32 %563, %567
  %570 = urem i32 %569, 2
  %571 = icmp eq i32 %570, 0
  %572 = icmp slt i32 %564, 10
  %573 = xor i1 %571, true
  %574 = xor i1 %572, true
  %575 = xor i1 false, true
  %576 = and i1 %573, false
  %577 = and i1 %571, %575
  %578 = and i1 %574, false
  %579 = and i1 %572, %575
  %580 = or i1 %576, %577
  %581 = or i1 %578, %579
  %582 = xor i1 %580, %581
  %583 = or i1 %573, %574
  %584 = xor i1 %583, true
  %585 = or i1 false, %575
  %586 = and i1 %584, %585
  %587 = or i1 %582, %586
  %588 = or i1 %571, %572
  br i1 %587, label %589, label %806

; <label>:589:                                    ; preds = %562, %806
  %590 = load i32, i32* @x.66
  %591 = load i32, i32* @y.67
  %592 = sub i32 %590, 832343256
  %593 = sub i32 %592, 1
  %594 = add i32 %593, 832343256
  %595 = sub i32 %590, 1
  %596 = mul i32 %590, %594
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %591, 10
  %600 = and i1 %598, %599
  %601 = xor i1 %598, %599
  %602 = or i1 %600, %601
  %603 = or i1 %598, %599
  br i1 %602, label %604, label %806

; <label>:604:                                    ; preds = %589
  br label %694

; <label>:605:                                    ; preds = %412
  %606 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %607 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %606, i32 0, i32 0
  %608 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %607, i32 0, i32 0
  %609 = load %"class.std::vector.8"*, %"class.std::vector.8"** %608, align 8
  %610 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %611 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %610, i32 0, i32 0
  %612 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %611, i32 0, i32 1
  %613 = load %"class.std::vector.8"*, %"class.std::vector.8"** %612, align 8
  %614 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %615 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %614) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %609, %"class.std::vector.8"* %613, %"class.std::allocator.5"* dereferenceable(1) %615)
  %616 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %617 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %618 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %617, i32 0, i32 0
  %619 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %618, i32 0, i32 0
  %620 = load %"class.std::vector.8"*, %"class.std::vector.8"** %619, align 8
  %621 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %622 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %621, i32 0, i32 0
  %623 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %622, i32 0, i32 2
  %624 = load %"class.std::vector.8"*, %"class.std::vector.8"** %623, align 8
  %625 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %626 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %625, i32 0, i32 0
  %627 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %626, i32 0, i32 0
  %628 = load %"class.std::vector.8"*, %"class.std::vector.8"** %627, align 8
  %629 = ptrtoint %"class.std::vector.8"* %624 to i64
  %630 = ptrtoint %"class.std::vector.8"* %628 to i64
  %631 = add i64 %629, -4674768789966964366
  %632 = sub i64 %631, %630
  %633 = sub i64 %632, -4674768789966964366
  %634 = sub i64 %629, %630
  %635 = sdiv exact i64 %633, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %616, %"class.std::vector.8"* %620, i64 %635)
  %636 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %637 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %638 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %637, i32 0, i32 0
  %639 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %638, i32 0, i32 0
  store %"class.std::vector.8"* %636, %"class.std::vector.8"** %639, align 8
  %640 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %641 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %642 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %641, i32 0, i32 0
  %643 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %642, i32 0, i32 1
  store %"class.std::vector.8"* %640, %"class.std::vector.8"** %643, align 8
  %644 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %645 = load i64, i64* %15, align 8
  %646 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %644, i64 %645
  %647 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %648 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %647, i32 0, i32 0
  %649 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %648, i32 0, i32 2
  store %"class.std::vector.8"* %646, %"class.std::vector.8"** %649, align 8
  br label %650

; <label>:650:                                    ; preds = %605, %298
  %651 = load i32, i32* @x.66
  %652 = load i32, i32* @y.67
  %653 = sub i32 %651, 540070351
  %654 = sub i32 %653, 1
  %655 = add i32 %654, 540070351
  %656 = sub i32 %651, 1
  %657 = mul i32 %651, %655
  %658 = urem i32 %657, 2
  %659 = icmp eq i32 %658, 0
  %660 = icmp slt i32 %652, 10
  %661 = xor i1 %659, true
  %662 = xor i1 %660, true
  %663 = xor i1 true, true
  %664 = and i1 %661, true
  %665 = and i1 %659, %663
  %666 = and i1 %662, true
  %667 = and i1 %660, %663
  %668 = or i1 %664, %665
  %669 = or i1 %666, %667
  %670 = xor i1 %668, %669
  %671 = or i1 %661, %662
  %672 = xor i1 %671, true
  %673 = or i1 true, %663
  %674 = and i1 %672, %673
  %675 = or i1 %670, %674
  %676 = or i1 %659, %660
  br i1 %675, label %677, label %807

; <label>:677:                                    ; preds = %650, %807
  %678 = load i32, i32* @x.66
  %679 = load i32, i32* @y.67
  %680 = sub i32 %678, 689493146
  %681 = sub i32 %680, 1
  %682 = add i32 %681, 689493146
  %683 = sub i32 %678, 1
  %684 = mul i32 %678, %682
  %685 = urem i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = icmp slt i32 %679, 10
  %688 = and i1 %686, %687
  %689 = xor i1 %686, %687
  %690 = or i1 %688, %689
  %691 = or i1 %686, %687
  br i1 %690, label %692, label %807

; <label>:692:                                    ; preds = %677
  br label %693

; <label>:693:                                    ; preds = %692, %4
  ret void

; <label>:694:                                    ; preds = %604, %174
  %695 = load i32, i32* @x.66
  %696 = load i32, i32* @y.67
  %697 = add i32 %695, -891716819
  %698 = sub i32 %697, 1
  %699 = sub i32 %698, -891716819
  %700 = sub i32 %695, 1
  %701 = mul i32 %695, %699
  %702 = urem i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = icmp slt i32 %696, 10
  %705 = and i1 %703, %704
  %706 = xor i1 %703, %704
  %707 = or i1 %705, %706
  %708 = or i1 %703, %704
  br i1 %707, label %709, label %808

; <label>:709:                                    ; preds = %694, %808
  %710 = load i8*, i8** %13, align 8
  %711 = load i32, i32* %14, align 4
  %712 = insertvalue { i8*, i32 } undef, i8* %710, 0
  %713 = insertvalue { i8*, i32 } %712, i32 %711, 1
  %714 = load i32, i32* @x.66
  %715 = load i32, i32* @y.67
  %716 = sub i32 0, 1
  %717 = add i32 %714, %716
  %718 = sub i32 %714, 1
  %719 = mul i32 %714, %717
  %720 = urem i32 %719, 2
  %721 = icmp eq i32 %720, 0
  %722 = icmp slt i32 %715, 10
  %723 = xor i1 %721, true
  %724 = xor i1 %722, true
  %725 = xor i1 false, true
  %726 = and i1 %723, false
  %727 = and i1 %721, %725
  %728 = and i1 %724, false
  %729 = and i1 %722, %725
  %730 = or i1 %726, %727
  %731 = or i1 %728, %729
  %732 = xor i1 %730, %731
  %733 = or i1 %723, %724
  %734 = xor i1 %733, true
  %735 = or i1 false, %725
  %736 = and i1 %734, %735
  %737 = or i1 %732, %736
  %738 = or i1 %721, %722
  br i1 %737, label %739, label %808

; <label>:739:                                    ; preds = %709
  resume { i8*, i32 } %713

; <label>:740:                                    ; preds = %476
  %741 = landingpad { i8*, i32 }
          catch i8* null
  %742 = extractvalue { i8*, i32 } %741, 0
  call void @__clang_call_terminate(i8* %742) #11
  unreachable

; <label>:743:                                    ; preds = %561
  unreachable

; <label>:744:                                    ; preds = %57, %42
  %745 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %9, %"class.std::vector.8"* dereferenceable(24) %745)
  %746 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %21) #3
  %747 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %746, %"class.std::vector.8"** %747, align 8
  %748 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %748, i64* %10, align 8
  %749 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %750 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %749, i32 0, i32 0
  %751 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %750, i32 0, i32 1
  %752 = load %"class.std::vector.8"*, %"class.std::vector.8"** %751, align 8
  store %"class.std::vector.8"* %752, %"class.std::vector.8"** %12, align 8
  %753 = load i64, i64* %10, align 8
  %754 = load i64, i64* %7, align 8
  %755 = icmp ugt i64 %753, %754
  br label %57

; <label>:756:                                    ; preds = %146, %131
  br label %146

; <label>:757:                                    ; preds = %217, %191
  %758 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %759 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %758, i32 0, i32 0
  %760 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %759, i32 0, i32 1
  store %"class.std::vector.8"* %190, %"class.std::vector.8"** %760, align 8
  %761 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %762 = load %"class.std::vector.8"*, %"class.std::vector.8"** %761, align 8
  %763 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %764 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %765 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %764, i32 0, i32 0
  %766 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %765, i32 0, i32 1
  %767 = load %"class.std::vector.8"*, %"class.std::vector.8"** %766, align 8
  %768 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %769 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %768) #3
  br label %217

; <label>:770:                                    ; preds = %272, %257
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %9) #3
  br label %272

; <label>:771:                                    ; preds = %325, %299
  %772 = load i64, i64* %7, align 8
  %773 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %21, i64 %772, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i32 0, i32 0))
  store i64 %773, i64* %15, align 8
  %774 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %21) #3
  %775 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"class.std::vector.8"* %774, %"class.std::vector.8"** %775, align 8
  %776 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17) #3
  store i64 %776, i64* %16, align 8
  %777 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %778 = load i64, i64* %15, align 8
  %779 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %777, i64 %778)
  store %"class.std::vector.8"* %779, %"class.std::vector.8"** %18, align 8
  %780 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  store %"class.std::vector.8"* %780, %"class.std::vector.8"** %19, align 8
  %781 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %782 = load i64, i64* %16, align 8
  %783 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %781, i64 %782
  %784 = load i64, i64* %7, align 8
  %785 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %786 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %787 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %786) #3
  br label %325

; <label>:788:                                    ; preds = %397, %383
  store %"class.std::vector.8"* %382, %"class.std::vector.8"** %19, align 8
  br label %397

; <label>:789:                                    ; preds = %449, %422
  %790 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %791 = load i64, i64* %16, align 8
  %792 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %790, i64 %791
  %793 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %794 = load i64, i64* %16, align 8
  %795 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %793, i64 %794
  %796 = load i64, i64* %7, align 8
  %797 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %795, i64 %796
  %798 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %799 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %798) #3
  br label %449

; <label>:800:                                    ; preds = %507, %480
  %801 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %802 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %803 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %804 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %803) #3
  br label %507

; <label>:805:                                    ; preds = %542, %527
  br label %542

; <label>:806:                                    ; preds = %589, %562
  br label %589

; <label>:807:                                    ; preds = %677, %650
  br label %677

; <label>:808:                                    ; preds = %709, %694
  %809 = load i8*, i8** %13, align 8
  %810 = load i32, i32* %14, align 4
  %811 = insertvalue { i8*, i32 } undef, i8* %809, 0
  %812 = insertvalue { i8*, i32 } %811, i32 %810, 1
  br label %709
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.8"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %9, i64 %10
  store %"class.std::vector.8"* %11, %"class.std::vector.8"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %3, %"class.std::vector.8"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  ret %"class.std::vector.8"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %3, i32 0, i32 0
  ret %"class.std::vector.8"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.74
  %6 = load i32, i32* @y.75
  %7 = sub i32 %5, 1501840801
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1501840801
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1203613798, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1203613798, label %19
    i32 -1437197279, label %39
    i32 -1762110382, label %61
    i32 -1057921223, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1437197279, i32 -1057921223
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %41 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %40, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %41, align 8
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  store %"class.std::vector.8"* %45, %"class.std::vector.8"** %43, align 8
  %46 = load i32, i32* @x.74
  %47 = load i32, i32* @y.75
  %48 = sub i32 %46, 1785706004
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1785706004
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1762110382, i32 -1057921223
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %64 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %63, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %64, align 8
  %65 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %63, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %65, i32 0, i32 0
  %67 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %64, align 8
  %68 = load %"class.std::vector.8"*, %"class.std::vector.8"** %67, align 8
  store %"class.std::vector.8"* %68, %"class.std::vector.8"** %66, align 8
  store i32 -1437197279, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::allocator.10", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %12) #3
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* sret %5, %"class.std::allocator.10"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"* %11, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %5)
          to label %17 unwind label %80

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.76
  %19 = load i32, i32* @y.77
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %94

; <label>:43:                                     ; preds = %17, %94
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %45 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %44) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %45, %"struct.Graph::edge"** %46, align 8
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %48 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %47) #3
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %48, %"struct.Graph::edge"** %49, align 8
  %50 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %51, i32 0, i32 0
  %53 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %52, align 8
  %54 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %55 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %54) #3
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %57 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %59 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %58, align 8
  %60 = load i32, i32* @x.76
  %61 = load i32, i32* @y.77
  %62 = sub i32 %60, 1214497623
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1214497623
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %94

; <label>:74:                                     ; preds = %43
  %75 = invoke %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"* %57, %"struct.Graph::edge"* %59, %"struct.Graph::edge"* %53, %"class.std::allocator.10"* dereferenceable(1) %55)
          to label %76 unwind label %84

; <label>:76:                                     ; preds = %74
  %77 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %78, i32 0, i32 1
  store %"struct.Graph::edge"* %75, %"struct.Graph::edge"** %79, align 8
  ret void

; <label>:80:                                     ; preds = %2
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %6, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %7, align 4
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  br label %89

; <label>:84:                                     ; preds = %74
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %6, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %7, align 4
  %88 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %88) #3
  br label %89

; <label>:89:                                     ; preds = %84, %80
  %90 = load i8*, i8** %6, align 8
  %91 = load i32, i32* %7, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %43, %17
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %96 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %95) #3
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %96, %"struct.Graph::edge"** %97, align 8
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %99 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %98) #3
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %99, %"struct.Graph::edge"** %100, align 8
  %101 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %102, i32 0, i32 0
  %104 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %103, align 8
  %105 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %106 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %105) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %108 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %107, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %110 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %109, align 8
  br label %43
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %11 = ptrtoint %"class.std::vector.8"* %7 to i64
  %12 = ptrtoint %"class.std::vector.8"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  ret i64 %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.80
  %9 = load i32, i32* @y.81
  %10 = sub i32 %8, 1352185350
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1352185350
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -578197234, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -578197234, label %22
    i32 -63987029, label %42
    i32 -488448680, label %77
    i32 -97778445, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -63987029, i32 -97778445
  store i32 %41, i32* %18
  br label %99

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.8"*, align 8
  %44 = alloca %"class.std::vector.8"*, align 8
  %45 = alloca %"class.std::vector.8"*, align 8
  %46 = alloca %"class.std::allocator.5"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %43, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %44, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %45, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %46, align 8
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %50 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store %"class.std::vector.8"* %50, %"class.std::vector.8"** %51, align 8
  %52 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %53 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  store %"class.std::vector.8"* %53, %"class.std::vector.8"** %54, align 8
  %55 = load %"class.std::vector.8"*, %"class.std::vector.8"** %45, align 8
  %56 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  %61 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"* %58, %"class.std::vector.8"* %60, %"class.std::vector.8"* %55, %"class.std::allocator.5"* dereferenceable(1) %56)
  store %"class.std::vector.8"* %61, %"class.std::vector.8"** %5
  %62 = load i32, i32* @x.80
  %63 = load i32, i32* @y.81
  %64 = add i32 %62, 1233994866
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 1233994866
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 -488448680, i32 -97778445
  store i32 %76, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  ret %"class.std::vector.8"* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca %"class.std::vector.8"*, align 8
  %81 = alloca %"class.std::vector.8"*, align 8
  %82 = alloca %"class.std::vector.8"*, align 8
  %83 = alloca %"class.std::allocator.5"*, align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %80, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %81, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %82, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %83, align 8
  %86 = load %"class.std::vector.8"*, %"class.std::vector.8"** %80, align 8
  %87 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %86)
  %88 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  store %"class.std::vector.8"* %87, %"class.std::vector.8"** %88, align 8
  %89 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %90 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %89)
  %91 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  store %"class.std::vector.8"* %90, %"class.std::vector.8"** %91, align 8
  %92 = load %"class.std::vector.8"*, %"class.std::vector.8"** %82, align 8
  %93 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %83, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %85, i32 0, i32 0
  %97 = load %"class.std::vector.8"*, %"class.std::vector.8"** %96, align 8
  %98 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"* %95, %"class.std::vector.8"* %97, %"class.std::vector.8"* %92, %"class.std::allocator.5"* dereferenceable(1) %93)
  store i32 -63987029, i32* %18
  br label %99

; <label>:99:                                     ; preds = %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.82
  %6 = load i32, i32* @y.83
  %7 = add i32 %5, 1773401746
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1773401746
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1588635869, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1588635869, label %19
    i32 503141228, label %39
    i32 404519747, label %59
    i32 -1219294243, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 503141228, i32 -1219294243
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %40, align 8
  %41 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %42 to %"class.std::allocator.5"*
  store %"class.std::allocator.5"* %43, %"class.std::allocator.5"** %2
  %44 = load i32, i32* @x.82
  %45 = load i32, i32* @y.83
  %46 = add i32 %44, 329739232
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 329739232
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 404519747, i32 -1219294243
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.5"*, %"class.std::allocator.5"** %2
  ret %"class.std::allocator.5"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %62, align 8
  %63 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %64 to %"class.std::allocator.5"*
  store i32 503141228, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.84
  %8 = load i32, i32* @y.85
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -87874810, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -87874810, label %20
    i32 -1827570599, label %40
    i32 517446970, label %76
    i32 296821131, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1827570599, i32 296821131
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %42, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %43, align 8
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  %45 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %44)
  %46 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  %47 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %46)
  %48 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %49 = call %"class.std::vector.8"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %45, %"class.std::vector.8"* %47, %"class.std::vector.8"* %48)
  store %"class.std::vector.8"* %49, %"class.std::vector.8"** %4
  %50 = load i32, i32* @x.84
  %51 = load i32, i32* @y.85
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 517446970, i32 296821131
  store i32 %75, i32* %16
  br label %88

; <label>:76:                                     ; preds = %17
  %77 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"class.std::vector.8"*, align 8
  %80 = alloca %"class.std::vector.8"*, align 8
  %81 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %79, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %80, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %81, align 8
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %79, align 8
  %83 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %82)
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %80, align 8
  %85 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %84)
  %86 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %87 = call %"class.std::vector.8"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %83, %"class.std::vector.8"* %85, %"class.std::vector.8"* %86)
  store i32 -1827570599, i32* %16
  br label %88

; <label>:88:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.8"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %7)
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %9)
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %10, %"class.std::vector.8"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24), %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %12 = call %"class.std::vector.8"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.8"* %9, i64 %10, %"class.std::vector.8"* dereferenceable(24) %11)
  ret %"class.std::vector.8"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca %"class.std::vector.3"*
  %7 = alloca i64*
  %8 = alloca i64*
  %9 = alloca i8**
  %10 = alloca i64*
  %11 = alloca i1
  %12 = alloca i1
  %13 = load i32, i32* @x.92
  %14 = load i32, i32* @y.93
  %15 = sub i32 0, 1
  %16 = add i32 %13, %15
  %17 = sub i32 %13, 1
  %18 = mul i32 %13, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %12
  %21 = icmp slt i32 %14, 10
  store i1 %21, i1* %11
  %22 = alloca i32
  store i32 -598594281, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %279
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 -598594281, label %27
    i32 -416651799, label %47
    i32 -1691832686, label %94
    i32 359946277, label %97
    i32 -786997039, label %125
    i32 -1923910081, label %143
    i32 719960495, label %144
    i32 -1357719659, label %165
    i32 544092245, label %172
    i32 -628791221, label %200
    i32 1871851928, label %218
    i32 -140914651, label %220
    i32 -518038696, label %223
    i32 930360514, label %225
    i32 -1998167291, label %273
    i32 -436058869, label %276
  ]

; <label>:26:                                     ; preds = %24
  br label %279

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %12
  %29 = load volatile i1, i1* %11
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -416651799, i32 930360514
  store i32 %46, i32* %22
  br label %279

; <label>:47:                                     ; preds = %24
  %48 = alloca %"class.std::vector.3"*, align 8
  %49 = alloca i64, align 8
  store i64* %49, i64** %10
  %50 = alloca i8*, align 8
  store i8** %50, i8*** %9
  %51 = alloca i64, align 8
  store i64* %51, i64** %8
  %52 = alloca i64, align 8
  store i64* %52, i64** %7
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %48, align 8
  %53 = load volatile i64*, i64** %10
  store i64 %1, i64* %53, align 8
  %54 = load volatile i8**, i8*** %9
  store i8* %2, i8** %54, align 8
  %55 = load %"class.std::vector.3"*, %"class.std::vector.3"** %48, align 8
  store %"class.std::vector.3"* %55, %"class.std::vector.3"** %6
  %56 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %57 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %56) #3
  %58 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %59 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %58) #3
  %60 = add i64 %57, 6429350928743916050
  %61 = sub i64 %60, %59
  %62 = sub i64 %61, 6429350928743916050
  %63 = sub i64 %57, %59
  %64 = load volatile i64*, i64** %10
  %65 = load i64, i64* %64, align 8
  %66 = icmp ult i64 %62, %65
  store i1 %66, i1* %5
  %67 = load i32, i32* @x.92
  %68 = load i32, i32* @y.93
  %69 = add i32 %67, -795203918
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -795203918
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 false, true
  %80 = and i1 %77, false
  %81 = and i1 %75, %79
  %82 = and i1 %78, false
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 false, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 -1691832686, i32 930360514
  store i32 %93, i32* %22
  br label %279

; <label>:94:                                     ; preds = %24
  %95 = load volatile i1, i1* %5
  %96 = select i1 %95, i32 359946277, i32 719960495
  store i32 %96, i32* %22
  br label %279

; <label>:97:                                     ; preds = %24
  %98 = load i32, i32* @x.92
  %99 = load i32, i32* @y.93
  %100 = sub i32 %98, -670948572
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -670948572
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 -786997039, i32 -1998167291
  store i32 %124, i32* %22
  br label %279

; <label>:125:                                    ; preds = %24
  %126 = load volatile i8**, i8*** %9
  %127 = load i8*, i8** %126, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %127) #12
  %128 = load i32, i32* @x.92
  %129 = load i32, i32* @y.93
  %130 = sub i32 %128, 1687870196
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 1687870196
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  %142 = select i1 %140, i32 -1923910081, i32 -1998167291
  store i32 %142, i32* %22
  br label %279

; <label>:143:                                    ; preds = %24
  unreachable

; <label>:144:                                    ; preds = %24
  %145 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %146 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %145) #3
  %147 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %148 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %147) #3
  %149 = load volatile i64*, i64** %7
  store i64 %148, i64* %149, align 8
  %150 = load volatile i64*, i64** %10
  %151 = load volatile i64*, i64** %7
  %152 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %151, i64* dereferenceable(8) %150)
  %153 = load i64, i64* %152, align 8
  %154 = add i64 %146, -7724401214705963605
  %155 = add i64 %154, %153
  %156 = sub i64 %155, -7724401214705963605
  %157 = add i64 %146, %153
  %158 = load volatile i64*, i64** %8
  store i64 %156, i64* %158, align 8
  %159 = load volatile i64*, i64** %8
  %160 = load i64, i64* %159, align 8
  %161 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %162 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %161) #3
  %163 = icmp ult i64 %160, %162
  %164 = select i1 %163, i32 544092245, i32 -1357719659
  store i32 %164, i32* %22
  br label %279

; <label>:165:                                    ; preds = %24
  %166 = load volatile i64*, i64** %8
  %167 = load i64, i64* %166, align 8
  %168 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %169 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %168) #3
  %170 = icmp ugt i64 %167, %169
  %171 = select i1 %170, i32 544092245, i32 -140914651
  store i32 %171, i32* %22
  br label %279

; <label>:172:                                    ; preds = %24
  %173 = load i32, i32* @x.92
  %174 = load i32, i32* @y.93
  %175 = add i32 %173, 1801537109
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, 1801537109
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = xor i1 %181, true
  %184 = xor i1 %182, true
  %185 = xor i1 true, true
  %186 = and i1 %183, true
  %187 = and i1 %181, %185
  %188 = and i1 %184, true
  %189 = and i1 %182, %185
  %190 = or i1 %186, %187
  %191 = or i1 %188, %189
  %192 = xor i1 %190, %191
  %193 = or i1 %183, %184
  %194 = xor i1 %193, true
  %195 = or i1 true, %185
  %196 = and i1 %194, %195
  %197 = or i1 %192, %196
  %198 = or i1 %181, %182
  %199 = select i1 %197, i32 -628791221, i32 -436058869
  store i32 %199, i32* %22
  br label %279

; <label>:200:                                    ; preds = %24
  %201 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %202 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %201) #3
  store i64 %202, i64* %4
  %203 = load i32, i32* @x.92
  %204 = load i32, i32* @y.93
  %205 = sub i32 %203, 797416036
  %206 = sub i32 %205, 1
  %207 = add i32 %206, 797416036
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  %217 = select i1 %215, i32 1871851928, i32 -436058869
  store i32 %217, i32* %22
  br label %279

; <label>:218:                                    ; preds = %24
  store i32 -518038696, i32* %22
  %219 = load volatile i64, i64* %4
  store i64 %219, i64* %23
  br label %279

; <label>:220:                                    ; preds = %24
  %221 = load volatile i64*, i64** %8
  %222 = load i64, i64* %221, align 8
  store i32 -518038696, i32* %22
  store i64 %222, i64* %23
  br label %279

; <label>:223:                                    ; preds = %24
  %224 = load i64, i64* %23
  ret i64 %224

; <label>:225:                                    ; preds = %24
  %226 = alloca %"class.std::vector.3"*, align 8
  %227 = alloca i64, align 8
  %228 = alloca i8*, align 8
  %229 = alloca i64, align 8
  %230 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %226, align 8
  store i64 %1, i64* %227, align 8
  store i8* %2, i8** %228, align 8
  %231 = load %"class.std::vector.3"*, %"class.std::vector.3"** %226, align 8
  %232 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %231) #3
  %233 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %231) #3
  %234 = sub i64 0, %233
  %235 = add i64 %232, %234
  %236 = sub i64 %232, %233
  %237 = mul i64 %235, %233
  %238 = add i64 0, 2464429012263515234
  %239 = sub i64 %238, %232
  %240 = sub i64 %239, 2464429012263515234
  %241 = sub i64 0, %232
  %242 = sub i64 0, %233
  %243 = sub i64 %240, %242
  %244 = add i64 %240, %233
  %245 = shl i64 %232, %233
  %246 = sub i64 0, 7536133742049427044
  %247 = sub i64 %246, %232
  %248 = add i64 %247, 7536133742049427044
  %249 = sub i64 0, %232
  %250 = sub i64 %248, 6918016893477819640
  %251 = add i64 %250, %233
  %252 = add i64 %251, 6918016893477819640
  %253 = add i64 %248, %233
  %254 = add i64 0, 2447897967002721764
  %255 = sub i64 %254, %232
  %256 = sub i64 %255, 2447897967002721764
  %257 = sub i64 0, %232
  %258 = add i64 %256, 971857031814138637
  %259 = add i64 %258, %233
  %260 = sub i64 %259, 971857031814138637
  %261 = add i64 %256, %233
  %262 = sub i64 0, %232
  %263 = add i64 0, %262
  %264 = sub i64 0, %232
  %265 = sub i64 0, %233
  %266 = sub i64 %263, %265
  %267 = add i64 %263, %233
  %268 = sub i64 0, %233
  %269 = add i64 %232, %268
  %270 = sub i64 %232, %233
  %271 = load i64, i64* %227, align 8
  %272 = icmp ult i64 %269, %271
  store i32 -416651799, i32* %22
  br label %279

; <label>:273:                                    ; preds = %24
  %274 = load volatile i8**, i8*** %9
  %275 = load i8*, i8** %274, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %275) #12
  store i32 -786997039, i32* %22
  br label %279

; <label>:276:                                    ; preds = %24
  %277 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %278 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %277) #3
  store i32 -628791221, i32* %22
  br label %279

; <label>:279:                                    ; preds = %276, %273, %225, %220, %218, %200, %172, %165, %144, %125, %97, %94, %47, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %8, %"struct.std::_Vector_base.4"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -373817249, i32* %10
  %11 = alloca %"class.std::vector.8"*
  br label %12

; <label>:12:                                     ; preds = %2, %73
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -373817249, label %15
    i32 -1399062784, label %19
    i32 -1191637575, label %25
    i32 -590409482, label %26
    i32 -518093605, label %42
    i32 -1896860859, label %70
    i32 753880218, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %73

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1399062784, i32 -1191637575
  store i32 %18, i32* %10
  br label %73

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1) %22, i64 %23)
  store i32 -590409482, i32* %10
  store %"class.std::vector.8"* %24, %"class.std::vector.8"** %11
  br label %73

; <label>:25:                                     ; preds = %12
  store i32 -590409482, i32* %10
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %11
  br label %73

; <label>:26:                                     ; preds = %12
  %27 = load %"class.std::vector.8"*, %"class.std::vector.8"** %11
  store %"class.std::vector.8"* %27, %"class.std::vector.8"** %3
  %28 = load i32, i32* @x.94
  %29 = load i32, i32* @y.95
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -518093605, i32 753880218
  store i32 %41, i32* %10
  br label %73

; <label>:42:                                     ; preds = %12
  %43 = load i32, i32* @x.94
  %44 = load i32, i32* @y.95
  %45 = add i32 %43, -650440383
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -650440383
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1896860859, i32 753880218
  store i32 %69, i32* %10
  br label %73

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %71

; <label>:72:                                     ; preds = %12
  store i32 -518093605, i32* %10
  br label %73

; <label>:73:                                     ; preds = %72, %42, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %13, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %15 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %15, %"class.std::vector.8"** %16, align 8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %23 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"* %20, %"class.std::vector.8"* %22, %"class.std::vector.8"* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret %"class.std::vector.8"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %7, %"class.std::vector.8"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"*, %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %4
  %11 = alloca i32
  store i32 -87003857, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %70
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -87003857, label %15
    i32 -2048567688, label %19
    i32 -1042323341, label %25
    i32 -2031232242, label %41
    i32 747209217, label %68
    i32 207260975, label %69
  ]

; <label>:14:                                     ; preds = %12
  br label %70

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %17 = icmp ne %"class.std::vector.8"* %16, null
  %18 = select i1 %17, i32 -2048567688, i32 -1042323341
  store i32 %18, i32* %11
  br label %70

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.5"*
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1) %22, %"class.std::vector.8"* %23, i64 %24)
  store i32 -1042323341, i32* %11
  br label %70

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.100
  %27 = load i32, i32* @y.101
  %28 = sub i32 %26, 100826611
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 100826611
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -2031232242, i32 207260975
  store i32 %40, i32* %11
  br label %70

; <label>:41:                                     ; preds = %12
  %42 = load i32, i32* @x.100
  %43 = load i32, i32* @y.101
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 747209217, i32 207260975
  store i32 %67, i32* %11
  br label %70

; <label>:68:                                     ; preds = %12
  ret void

; <label>:69:                                     ; preds = %12
  store i32 -2031232242, i32* %11
  br label %70

; <label>:70:                                     ; preds = %69, %41, %25, %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.102
  %6 = load i32, i32* @y.103
  %7 = sub i32 %5, -1998813512
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1998813512
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 780751623, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %141
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 780751623, label %19
    i32 -1848631254, label %27
    i32 1257547019, label %59
    i32 1438165386, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %141

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1848631254, i32 1438165386
  store i32 %26, i32* %15
  br label %141

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %34 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %36, align 8
  %38 = ptrtoint %"struct.Graph::edge"* %33 to i64
  %39 = ptrtoint %"struct.Graph::edge"* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 24
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.102
  %45 = load i32, i32* @y.103
  %46 = sub i32 %44, 1233351429
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1233351429
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1257547019, i32 1438165386
  store i32 %58, i32* %15
  br label %141

; <label>:59:                                     ; preds = %16
  %60 = load volatile i64, i64* %2
  ret i64 %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %62, align 8
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %62, align 8
  %64 = bitcast %"class.std::vector.8"* %63 to %"struct.std::_Vector_base.9"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %66, align 8
  %68 = bitcast %"class.std::vector.8"* %63 to %"struct.std::_Vector_base.9"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %69, i32 0, i32 0
  %71 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %70, align 8
  %72 = ptrtoint %"struct.Graph::edge"* %67 to i64
  %73 = ptrtoint %"struct.Graph::edge"* %71 to i64
  %74 = sub i64 0, %73
  %75 = add i64 %72, %74
  %76 = sub i64 %72, %73
  %77 = mul i64 %75, %73
  %78 = sub i64 0, -8894353555064546650
  %79 = sub i64 %78, %72
  %80 = add i64 %79, -8894353555064546650
  %81 = sub i64 0, %72
  %82 = add i64 %80, -7638302990032472827
  %83 = add i64 %82, %73
  %84 = sub i64 %83, -7638302990032472827
  %85 = add i64 %80, %73
  %86 = shl i64 %72, %73
  %87 = sub i64 0, %73
  %88 = add i64 %72, %87
  %89 = sub i64 %72, %73
  %90 = mul i64 %88, %73
  %91 = sub i64 0, 5333012780687458315
  %92 = sub i64 %91, %72
  %93 = add i64 %92, 5333012780687458315
  %94 = sub i64 0, %72
  %95 = sub i64 0, %93
  %96 = sub i64 0, %73
  %97 = add i64 %95, %96
  %98 = sub i64 0, %97
  %99 = add i64 %93, %73
  %100 = sub i64 %72, -9118814575609119652
  %101 = sub i64 %100, %73
  %102 = add i64 %101, -9118814575609119652
  %103 = sub i64 %72, %73
  %104 = mul i64 %102, %73
  %105 = add i64 0, 8415668617553511053
  %106 = sub i64 %105, %72
  %107 = sub i64 %106, 8415668617553511053
  %108 = sub i64 0, %72
  %109 = sub i64 %107, -960346533835076209
  %110 = add i64 %109, %73
  %111 = add i64 %110, -960346533835076209
  %112 = add i64 %107, %73
  %113 = sub i64 0, %73
  %114 = add i64 %72, %113
  %115 = sub i64 %72, %73
  %116 = sub i64 %114, -1242143422255796000
  %117 = sub i64 %116, 24
  %118 = add i64 %117, -1242143422255796000
  %119 = sub i64 %114, 24
  %120 = mul i64 %118, 24
  %121 = shl i64 %114, 24
  %122 = add i64 0, -5719867979373886775
  %123 = sub i64 %122, %114
  %124 = sub i64 %123, -5719867979373886775
  %125 = sub i64 0, %114
  %126 = sub i64 %124, 1529686567250218388
  %127 = add i64 %126, 24
  %128 = add i64 %127, 1529686567250218388
  %129 = add i64 %124, 24
  %130 = shl i64 %114, 24
  %131 = shl i64 %114, 24
  %132 = shl i64 %114, 24
  %133 = sub i64 0, %114
  %134 = add i64 0, %133
  %135 = sub i64 0, %114
  %136 = add i64 %134, 5404900635410477427
  %137 = add i64 %136, 24
  %138 = sub i64 %137, 5404900635410477427
  %139 = add i64 %134, 24
  %140 = sdiv exact i64 %114, 24
  store i32 -1848631254, i32* %15
  br label %141

; <label>:141:                                    ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.104
  %6 = load i32, i32* @y.105
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -137477888, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -137477888, label %18
    i32 -108397140, label %26
    i32 -2098535206, label %44
    i32 -1456349500, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -108397140, i32 -1456349500
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %27, align 8
  %28 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %27, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %28)
  %29 = load i32, i32* @x.104
  %30 = load i32, i32* @y.105
  %31 = add i32 %29, -799061139
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -799061139
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -2098535206, i32 -1456349500
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %46, align 8
  %47 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %46, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %47)
  store i32 -108397140, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.106
  %6 = load i32, i32* @y.107
  %7 = add i32 %5, -1781372996
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1781372996
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2123917943, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2123917943, label %19
    i32 580682193, label %39
    i32 417381953, label %71
    i32 808133254, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 580682193, i32 808133254
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %40, align 8
  %41 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %42 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %43, %"class.std::allocator.10"** %2
  %44 = load i32, i32* @x.106
  %45 = load i32, i32* @y.107
  %46 = add i32 %44, -491207315
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -491207315
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 417381953, i32 808133254
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %74, align 8
  %75 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %76 to %"class.std::allocator.10"*
  store i32 580682193, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.108
  %16 = load i32, i32* @y.109
  %17 = sub i32 %15, 474978644
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 474978644
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %118

; <label>:41:                                     ; preds = %14, %118
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10) #3
  %45 = load i32, i32* @x.108
  %46 = load i32, i32* @y.109
  %47 = sub i32 %45, 478665728
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 478665728
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %118

; <label>:71:                                     ; preds = %41
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i32, i32* @x.108
  %74 = load i32, i32* @y.109
  %75 = add i32 %73, 95943118
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 95943118
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %122

; <label>:87:                                     ; preds = %72, %122
  %88 = load i8*, i8** %7, align 8
  %89 = load i32, i32* %8, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  %92 = load i32, i32* @x.108
  %93 = load i32, i32* @y.109
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  br i1 %115, label %117, label %122

; <label>:117:                                    ; preds = %87
  resume { i8*, i32 } %91

; <label>:118:                                    ; preds = %41, %14
  %119 = landingpad { i8*, i32 }
          cleanup
  %120 = extractvalue { i8*, i32 } %119, 0
  store i8* %120, i8** %7, align 8
  %121 = extractvalue { i8*, i32 } %119, 1
  store i32 %121, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10) #3
  br label %41

; <label>:122:                                    ; preds = %87, %72
  %123 = load i8*, i8** %7, align 8
  %124 = load i32, i32* %8, align 4
  %125 = insertvalue { i8*, i32 } undef, i8* %123, 0
  %126 = insertvalue { i8*, i32 } %125, i32 %124, 1
  br label %87
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.112
  %9 = load i32, i32* @y.113
  %10 = add i32 %8, -1404059416
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1404059416
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -66693918, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %108
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -66693918, label %22
    i32 -1120322688, label %42
    i32 -428565651, label %87
    i32 -693336181, label %89
  ]

; <label>:21:                                     ; preds = %19
  br label %108

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -1120322688, i32 -693336181
  store i32 %41, i32* %18
  br label %108

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %45 = alloca %"struct.Graph::edge"*, align 8
  %46 = alloca %"class.std::allocator.10"*, align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %43, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %49, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %44, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %50, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %45, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %46, align 8
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %47 to i8*
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %48 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %44 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %47, i32 0, i32 0
  %57 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %56, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %48, i32 0, i32 0
  %59 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %58, align 8
  %60 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %57, %"struct.Graph::edge"* %59, %"struct.Graph::edge"* %55)
  store %"struct.Graph::edge"* %60, %"struct.Graph::edge"** %5
  %61 = load i32, i32* @x.112
  %62 = load i32, i32* @y.113
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 false, true
  %73 = and i1 %70, false
  %74 = and i1 %68, %72
  %75 = and i1 %71, false
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 false, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -428565651, i32 -693336181
  store i32 %86, i32* %18
  br label %108

; <label>:87:                                     ; preds = %19
  %88 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %5
  ret %"struct.Graph::edge"* %88

; <label>:89:                                     ; preds = %19
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %92 = alloca %"struct.Graph::edge"*, align 8
  %93 = alloca %"class.std::allocator.10"*, align 8
  %94 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %95 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %90, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %96, align 8
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %91, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %97, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %92, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %93, align 8
  %98 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %94 to i8*
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %95 to i8*
  %101 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %92, align 8
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %94, i32 0, i32 0
  %104 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %103, align 8
  %105 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %95, i32 0, i32 0
  %106 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %105, align 8
  %107 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %104, %"struct.Graph::edge"* %106, %"struct.Graph::edge"* %102)
  store i32 -1120322688, i32* %18
  br label %108

; <label>:108:                                    ; preds = %89, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  store %"struct.Graph::edge"* %9, %"struct.Graph::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %2, %"struct.Graph::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  store %"struct.Graph::edge"* %9, %"struct.Graph::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %2, %"struct.Graph::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.120
  %3 = load i32, i32* @y.121
  %4 = sub i32 %2, 1818939382
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1818939382
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %144

; <label>:16:                                     ; preds = %1, %144
  %17 = alloca %"struct.std::_Vector_base.9"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %17, align 8
  %20 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %28, align 8
  %30 = ptrtoint %"struct.Graph::edge"* %26 to i64
  %31 = ptrtoint %"struct.Graph::edge"* %29 to i64
  %32 = sub i64 %30, -6205667001726209975
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -6205667001726209975
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.120
  %38 = load i32, i32* @y.121
  %39 = sub i32 %37, -1036094557
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -1036094557
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %144

; <label>:63:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %20, %"struct.Graph::edge"* %23, i64 %36)
          to label %64 unwind label %108

; <label>:64:                                     ; preds = %63
  %65 = load i32, i32* @x.120
  %66 = load i32, i32* @y.121
  %67 = add i32 %65, -2038581859
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -2038581859
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  br i1 %89, label %91, label %186

; <label>:91:                                     ; preds = %64, %186
  %92 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %92) #3
  %93 = load i32, i32* @x.120
  %94 = load i32, i32* @y.121
  %95 = sub i32 %93, -245510351
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -245510351
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  br i1 %105, label %107, label %186

; <label>:107:                                    ; preds = %91
  ret void

; <label>:108:                                    ; preds = %63
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  store i8* %110, i8** %18, align 8
  %111 = extractvalue { i8*, i32 } %109, 1
  store i32 %111, i32* %19, align 4
  %112 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %112) #3
  br label %113

; <label>:113:                                    ; preds = %108
  %114 = load i32, i32* @x.120
  %115 = load i32, i32* @y.121
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %188

; <label>:127:                                    ; preds = %113, %188
  %128 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %128) #11
  %129 = load i32, i32* @x.120
  %130 = load i32, i32* @y.121
  %131 = sub i32 %129, -1081118458
  %132 = sub i32 %131, 1
  %133 = add i32 %132, -1081118458
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %188

; <label>:143:                                    ; preds = %127
  unreachable

; <label>:144:                                    ; preds = %16, %1
  %145 = alloca %"struct.std::_Vector_base.9"*, align 8
  %146 = alloca i8*
  %147 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %145, align 8
  %148 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %145, align 8
  %149 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %149, i32 0, i32 0
  %151 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %150, align 8
  %152 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %148, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %152, i32 0, i32 2
  %154 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %153, align 8
  %155 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %148, i32 0, i32 0
  %156 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %155, i32 0, i32 0
  %157 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %156, align 8
  %158 = ptrtoint %"struct.Graph::edge"* %154 to i64
  %159 = ptrtoint %"struct.Graph::edge"* %157 to i64
  %160 = shl i64 %158, %159
  %161 = sub i64 %158, 547302092004878195
  %162 = sub i64 %161, %159
  %163 = add i64 %162, 547302092004878195
  %164 = sub i64 %158, %159
  %165 = shl i64 %163, 24
  %166 = shl i64 %163, 24
  %167 = add i64 %163, -6596731570166009319
  %168 = sub i64 %167, 24
  %169 = sub i64 %168, -6596731570166009319
  %170 = sub i64 %163, 24
  %171 = mul i64 %169, 24
  %172 = shl i64 %163, 24
  %173 = add i64 0, 3174872377235154818
  %174 = sub i64 %173, %163
  %175 = sub i64 %174, 3174872377235154818
  %176 = sub i64 0, %163
  %177 = sub i64 %175, -3895630140658670552
  %178 = add i64 %177, 24
  %179 = add i64 %178, -3895630140658670552
  %180 = add i64 %175, 24
  %181 = sub i64 0, 24
  %182 = add i64 %163, %181
  %183 = sub i64 %163, 24
  %184 = mul i64 %182, 24
  %185 = sdiv exact i64 %163, 24
  br label %16

; <label>:186:                                    ; preds = %91, %64
  %187 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %187) #3
  br label %91

; <label>:188:                                    ; preds = %127, %113
  %189 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %189) #11
  br label %127
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %3, align 8
  %4 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %7, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Graph::edge"* %12, %"struct.Graph::edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Graph::edge"* %19, %"struct.Graph::edge"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.9"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.134
  %9 = load i32, i32* @y.135
  %10 = add i32 %8, -215113704
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -215113704
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -2140881736, i32* %18
  %19 = alloca %"struct.Graph::edge"*
  br label %20

; <label>:20:                                     ; preds = %2, %130
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 -2140881736, label %23
    i32 1446689361, label %31
    i32 -1673635871, label %54
    i32 1856106301, label %57
    i32 2120055636, label %64
    i32 -185645242, label %92
    i32 -594481833, label %120
    i32 -1368449869, label %121
    i32 -1617857238, label %123
    i32 -187784568, label %129
  ]

; <label>:22:                                     ; preds = %20
  br label %130

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %7
  %25 = load volatile i1, i1* %6
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 1446689361, i32 -1617857238
  store i32 %30, i32* %18
  br label %130

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.9"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %5
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %32, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %32, align 8
  store %"struct.std::_Vector_base.9"* %35, %"struct.std::_Vector_base.9"** %4
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %3
  %39 = load i32, i32* @x.134
  %40 = load i32, i32* @y.135
  %41 = sub i32 %39, -729298888
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -729298888
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1673635871, i32 -1617857238
  store i32 %53, i32* %18
  br label %130

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %3
  %56 = select i1 %55, i32 1856106301, i32 2120055636
  store i32 %56, i32* %18
  br label %130

; <label>:57:                                     ; preds = %20
  %58 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4
  %59 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %58, i32 0, i32 0
  %60 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %59 to %"class.std::allocator.10"*
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = call %"struct.Graph::edge"* @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1) %60, i64 %62)
  store i32 -1368449869, i32* %18
  store %"struct.Graph::edge"* %63, %"struct.Graph::edge"** %19
  br label %130

; <label>:64:                                     ; preds = %20
  %65 = load i32, i32* @x.134
  %66 = load i32, i32* @y.135
  %67 = sub i32 %65, -1414938747
  %68 = sub i32 %67, 1
  %69 = add i32 %68, -1414938747
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 false, true
  %78 = and i1 %75, false
  %79 = and i1 %73, %77
  %80 = and i1 %76, false
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 false, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 -185645242, i32 -187784568
  store i32 %91, i32* %18
  br label %130

; <label>:92:                                     ; preds = %20
  %93 = load i32, i32* @x.134
  %94 = load i32, i32* @y.135
  %95 = add i32 %93, 1016125184
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, 1016125184
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 -594481833, i32 -187784568
  store i32 %119, i32* %18
  br label %130

; <label>:120:                                    ; preds = %20
  store i32 -1368449869, i32* %18
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %19
  br label %130

; <label>:121:                                    ; preds = %20
  %122 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %19
  ret %"struct.Graph::edge"* %122

; <label>:123:                                    ; preds = %20
  %124 = alloca %"struct.std::_Vector_base.9"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %124, align 8
  store i64 %1, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %124, align 8
  %127 = load i64, i64* %125, align 8
  %128 = icmp ne i64 %127, 0
  store i32 1446689361, i32* %18
  br label %130

; <label>:129:                                    ; preds = %20
  store i32 -185645242, i32* %18
  br label %130

; <label>:130:                                    ; preds = %129, %123, %120, %92, %64, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"struct.Graph::edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 666573409, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 666573409, label %16
    i32 471552447, label %21
    i32 1352225058, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 471552447, i32 1352225058
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.Graph::edge"*
  ret %"struct.Graph::edge"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.144
  %8 = load i32, i32* @y.145
  %9 = sub i32 %7, 1357617461
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1357617461
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 375174780, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %84
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 375174780, label %21
    i32 576185567, label %29
    i32 -1925869747, label %63
    i32 685749416, label %65
  ]

; <label>:20:                                     ; preds = %18
  br label %84

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 576185567, i32 685749416
  store i32 %28, i32* %17
  br label %84

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %32 = alloca %"struct.Graph::edge"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %30, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %31, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %37, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %34 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %35 to i8*
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %34, i32 0, i32 0
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  %47 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::edge"* %44, %"struct.Graph::edge"* %46, %"struct.Graph::edge"* %42)
  store %"struct.Graph::edge"* %47, %"struct.Graph::edge"** %4
  %48 = load i32, i32* @x.144
  %49 = load i32, i32* @y.145
  %50 = add i32 %48, 1132389412
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1132389412
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1925869747, i32 685749416
  store i32 %62, i32* %17
  br label %84

; <label>:63:                                     ; preds = %18
  %64 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  ret %"struct.Graph::edge"* %64

; <label>:65:                                     ; preds = %18
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %67 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %68 = alloca %"struct.Graph::edge"*, align 8
  %69 = alloca i8, align 1
  %70 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %71 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %72 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %66, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %72, align 8
  %73 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %67, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %73, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %68, align 8
  store i8 1, i8* %69, align 1
  %74 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %70 to i8*
  %75 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %71 to i8*
  %77 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %76, i8* %77, i64 8, i32 8, i1 false)
  %78 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %68, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %70, i32 0, i32 0
  %80 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %79, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %71, i32 0, i32 0
  %82 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %81, align 8
  %83 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::edge"* %80, %"struct.Graph::edge"* %82, %"struct.Graph::edge"* %78)
  store i32 576185567, i32* %17
  br label %84

; <label>:84:                                     ; preds = %65, %29, %21, %20
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %17, %"struct.Graph::edge"* %19, %"struct.Graph::edge"* %15)
  ret %"struct.Graph::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %17 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %17, %"struct.Graph::edge"** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %23 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %23, %"struct.Graph::edge"** %24, align 8
  %25 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %27 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %28, align 8
  %30 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Graph::edge"* %27, %"struct.Graph::edge"* %29, %"struct.Graph::edge"* %25)
  ret %"struct.Graph::edge"* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %19)
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %21)
  %23 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"* %15, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %22)
  ret %"struct.Graph::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.152
  %6 = load i32, i32* @y.153
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -321956773, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -321956773, label %18
    i32 1022302974, label %26
    i32 1297982197, label %53
    i32 -1754311670, label %55
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1022302974, i32 -1754311670
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %29, i32 0, i32 0
  %34 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %33, align 8
  %35 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"* %34)
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %27, i32 0, i32 0
  store %"struct.Graph::edge"* %35, %"struct.Graph::edge"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %27, i32 0, i32 0
  %38 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %37, align 8
  store %"struct.Graph::edge"* %38, %"struct.Graph::edge"** %2
  %39 = load i32, i32* @x.152
  %40 = load i32, i32* @y.153
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 1297982197, i32 -1754311670
  store i32 %52, i32* %14
  br label %68

; <label>:53:                                     ; preds = %15
  %54 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %54

; <label>:55:                                     ; preds = %15
  %56 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %57 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %57, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %59, align 8
  %60 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %58 to i8*
  %61 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %60, i8* %61, i64 8, i32 8, i1 false)
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %58, i32 0, i32 0
  %63 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %62, align 8
  %64 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"* %63)
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %56, i32 0, i32 0
  store %"struct.Graph::edge"* %64, %"struct.Graph::edge"** %65, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %56, i32 0, i32 0
  %67 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %66, align 8
  store i32 1022302974, i32* %14
  br label %68

; <label>:68:                                     ; preds = %55, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Graph::edge"* %8)
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %2, align 8
  %3 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %2, align 8
  %4 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %3)
  ret %"struct.Graph::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %11 = ptrtoint %"struct.Graph::edge"* %9 to i64
  %12 = ptrtoint %"struct.Graph::edge"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 -1720353409, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1720353409, label %22
    i32 -140875039, label %26
    i32 -1602604137, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -140875039, i32 -1602604137
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %28 = bitcast %"struct.Graph::edge"* %27 to i8*
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %30 = bitcast %"struct.Graph::edge"* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 24, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 8, i1 false)
  store i32 -1602604137, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %34, i64 %35
  ret %"struct.Graph::edge"* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Graph::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"* %2) #3
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  ret %"struct.Graph::edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.166
  %6 = load i32, i32* @y.167
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1717939963, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1717939963, label %18
    i32 -293725937, label %26
    i32 979931081, label %43
    i32 -1072692335, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -293725937, i32 -1072692335
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %27, align 8
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %27, align 8
  store %"struct.Graph::edge"* %28, %"struct.Graph::edge"** %2
  %29 = load i32, i32* @x.166
  %30 = load i32, i32* @y.167
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 979931081, i32 -1072692335
  store i32 %42, i32* %14
  br label %48

; <label>:43:                                     ; preds = %15
  %44 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %44

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %46, align 8
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %46, align 8
  store i32 -293725937, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.168
  %6 = load i32, i32* @y.169
  %7 = sub i32 %5, 1847485105
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1847485105
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 715625246, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 715625246, label %19
    i32 -775664407, label %39
    i32 1544207136, label %74
    i32 2017992393, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -775664407, i32 2017992393
  store i32 %38, i32* %15
  br label %84

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %41, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %40, i32 0, i32 0
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  store %"struct.Graph::edge"* %46, %"struct.Graph::edge"** %2
  %47 = load i32, i32* @x.168
  %48 = load i32, i32* @y.169
  %49 = add i32 %47, -1626122169
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -1626122169
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1544207136, i32 2017992393
  store i32 %73, i32* %15
  br label %84

; <label>:74:                                     ; preds = %16
  %75 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %78, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %79, align 8
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %77 to i8*
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %77, i32 0, i32 0
  %83 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %82, align 8
  store i32 -775664407, i32* %15
  br label %84

; <label>:84:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"*, %"struct.Graph::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  %4 = alloca %"struct.Graph::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %3, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %8, %"struct.Graph::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"*, %"struct.Graph::edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca i64*
  %7 = alloca %"struct.Graph::edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.172
  %11 = load i32, i32* @y.173
  %12 = add i32 %10, -1106585831
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1106585831
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -848333205, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %88
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -848333205, label %24
    i32 94115627, label %44
    i32 -161418787, label %69
    i32 -110734475, label %72
    i32 610912138, label %80
    i32 -2022285471, label %81
  ]

; <label>:23:                                     ; preds = %21
  br label %88

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 94115627, i32 -2022285471
  store i32 %43, i32* %20
  br label %88

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.9"*, align 8
  %46 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %46, %"struct.Graph::edge"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %45, align 8
  %48 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %45, align 8
  store %"struct.std::_Vector_base.9"* %50, %"struct.std::_Vector_base.9"** %5
  %51 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  %52 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %51, align 8
  %53 = icmp ne %"struct.Graph::edge"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.172
  %55 = load i32, i32* @y.173
  %56 = sub i32 %54, 845422409
  %57 = sub i32 %56, 1
  %58 = add i32 %57, 845422409
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -161418787, i32 -2022285471
  store i32 %68, i32* %20
  br label %88

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 -110734475, i32 610912138
  store i32 %71, i32* %20
  br label %88

; <label>:72:                                     ; preds = %21
  %73 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %74 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %73, i32 0, i32 0
  %75 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %74 to %"class.std::allocator.10"*
  %76 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  %77 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %76, align 8
  %78 = load volatile i64*, i64** %6
  %79 = load i64, i64* %78, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1) %75, %"struct.Graph::edge"* %77, i64 %79)
  store i32 610912138, i32* %20
  br label %88

; <label>:80:                                     ; preds = %21
  ret void

; <label>:81:                                     ; preds = %21
  %82 = alloca %"struct.std::_Vector_base.9"*, align 8
  %83 = alloca %"struct.Graph::edge"*, align 8
  %84 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %82, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %83, align 8
  store i64 %2, i64* %84, align 8
  %85 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %82, align 8
  %86 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %83, align 8
  %87 = icmp ne %"struct.Graph::edge"* %86, null
  store i32 94115627, i32* %20
  br label %88

; <label>:88:                                     ; preds = %81, %72, %69, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Graph::edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.176
  %7 = load i32, i32* @y.177
  %8 = sub i32 %6, -1051281604
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1051281604
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -2061477176, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2061477176, label %20
    i32 -534983564, label %28
    i32 1845039302, label %61
    i32 2064978549, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -534983564, i32 2064978549
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %30 = alloca %"struct.Graph::edge"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %29, align 8
  %33 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %30, align 8
  %34 = bitcast %"struct.Graph::edge"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.176
  %36 = load i32, i32* @y.177
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1845039302, i32 2064978549
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %64 = alloca %"struct.Graph::edge"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %63, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %63, align 8
  %67 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %64, align 8
  %68 = bitcast %"struct.Graph::edge"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -534983564, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #10

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %12, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  %22 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.8"* %19, %"class.std::vector.8"* %21, %"class.std::vector.8"* %17)
  ret %"class.std::vector.8"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"* %2, %"class.std::vector.8"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  ret %"class.std::vector.8"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.8"* %18, %"class.std::vector.8"* %20, %"class.std::vector.8"* %16)
  ret %"class.std::vector.8"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.184
  %5 = load i32, i32* @y.185
  %6 = add i32 %4, -1053104140
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1053104140
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %289

; <label>:30:                                     ; preds = %3, %289
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"class.std::vector.8"*, align 8
  %34 = alloca %"class.std::vector.8"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %38, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %33, align 8
  %39 = load %"class.std::vector.8"*, %"class.std::vector.8"** %33, align 8
  store %"class.std::vector.8"* %39, %"class.std::vector.8"** %34, align 8
  %40 = load i32, i32* @x.184
  %41 = load i32, i32* @y.185
  %42 = add i32 %40, 1430635831
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1430635831
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %289

; <label>:54:                                     ; preds = %30
  br label %55

; <label>:55:                                     ; preds = %190, %54
  %56 = load i32, i32* @x.184
  %57 = load i32, i32* @y.185
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %299

; <label>:69:                                     ; preds = %55, %299
  %70 = load i32, i32* @x.184
  %71 = load i32, i32* @y.185
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %299

; <label>:83:                                     ; preds = %69
  %84 = invoke zeroext i1 @_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8) %31, %"class.std::move_iterator"* dereferenceable(8) %32)
          to label %85 unwind label %193

; <label>:85:                                     ; preds = %83
  %86 = load i32, i32* @x.184
  %87 = load i32, i32* @y.185
  %88 = sub i32 %86, -577848792
  %89 = sub i32 %88, 1
  %90 = add i32 %89, -577848792
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = xor i1 %94, true
  %97 = xor i1 %95, true
  %98 = xor i1 true, true
  %99 = and i1 %96, true
  %100 = and i1 %94, %98
  %101 = and i1 %97, true
  %102 = and i1 %95, %98
  %103 = or i1 %99, %100
  %104 = or i1 %101, %102
  %105 = xor i1 %103, %104
  %106 = or i1 %96, %97
  %107 = xor i1 %106, true
  %108 = or i1 true, %98
  %109 = and i1 %107, %108
  %110 = or i1 %105, %109
  %111 = or i1 %94, %95
  br i1 %110, label %112, label %300

; <label>:112:                                    ; preds = %85, %300
  %113 = load i32, i32* @x.184
  %114 = load i32, i32* @y.185
  %115 = add i32 %113, 1286377914
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, 1286377914
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  br i1 %137, label %139, label %300

; <label>:139:                                    ; preds = %112
  br i1 %84, label %140, label %243

; <label>:140:                                    ; preds = %139
  %141 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  %142 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %141) #3
  %143 = invoke dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv(%"class.std::move_iterator"* %31)
          to label %144 unwind label %193

; <label>:144:                                    ; preds = %140
  invoke void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.8"* %142, %"class.std::vector.8"* dereferenceable(24) %143)
          to label %145 unwind label %193

; <label>:145:                                    ; preds = %144
  br label %146

; <label>:146:                                    ; preds = %145
  %147 = load i32, i32* @x.184
  %148 = load i32, i32* @y.185
  %149 = sub i32 %147, -1662348548
  %150 = sub i32 %149, 1
  %151 = add i32 %150, -1662348548
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %301

; <label>:161:                                    ; preds = %146, %301
  %162 = load i32, i32* @x.184
  %163 = load i32, i32* @y.185
  %164 = add i32 %162, -506315907
  %165 = sub i32 %164, 1
  %166 = sub i32 %165, -506315907
  %167 = sub i32 %162, 1
  %168 = mul i32 %162, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %163, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 true, true
  %175 = and i1 %172, true
  %176 = and i1 %170, %174
  %177 = and i1 %173, true
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 true, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  br i1 %186, label %188, label %301

; <label>:188:                                    ; preds = %161
  %189 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv(%"class.std::move_iterator"* %31)
          to label %190 unwind label %193

; <label>:190:                                    ; preds = %188
  %191 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  %192 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %191, i32 1
  store %"class.std::vector.8"* %192, %"class.std::vector.8"** %34, align 8
  br label %55

; <label>:193:                                    ; preds = %188, %144, %140, %83
  %194 = load i32, i32* @x.184
  %195 = load i32, i32* @y.185
  %196 = sub i32 0, 1
  %197 = add i32 %194, %196
  %198 = sub i32 %194, 1
  %199 = mul i32 %194, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %195, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 false, true
  %206 = and i1 %203, false
  %207 = and i1 %201, %205
  %208 = and i1 %204, false
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 false, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %302

; <label>:219:                                    ; preds = %193, %302
  %220 = landingpad { i8*, i32 }
          catch i8* null
  %221 = extractvalue { i8*, i32 } %220, 0
  store i8* %221, i8** %35, align 8
  %222 = extractvalue { i8*, i32 } %220, 1
  store i32 %222, i32* %36, align 4
  %223 = load i32, i32* @x.184
  %224 = load i32, i32* @y.185
  %225 = sub i32 0, 1
  %226 = add i32 %223, %225
  %227 = sub i32 %223, 1
  %228 = mul i32 %223, %226
  %229 = urem i32 %228, 2
  %230 = icmp eq i32 %229, 0
  %231 = icmp slt i32 %224, 10
  %232 = and i1 %230, %231
  %233 = xor i1 %230, %231
  %234 = or i1 %232, %233
  %235 = or i1 %230, %231
  br i1 %234, label %236, label %302

; <label>:236:                                    ; preds = %219
  br label %237

; <label>:237:                                    ; preds = %236
  %238 = load i8*, i8** %35, align 8
  %239 = call i8* @__cxa_begin_catch(i8* %238) #3
  %240 = load %"class.std::vector.8"*, %"class.std::vector.8"** %33, align 8
  %241 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %240, %"class.std::vector.8"* %241)
          to label %242 unwind label %245

; <label>:242:                                    ; preds = %237
  invoke void @__cxa_rethrow() #12
          to label %288 unwind label %245

; <label>:243:                                    ; preds = %139
  %244 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  ret %"class.std::vector.8"* %244

; <label>:245:                                    ; preds = %242, %237
  %246 = load i32, i32* @x.184
  %247 = load i32, i32* @y.185
  %248 = sub i32 %246, 746763147
  %249 = sub i32 %248, 1
  %250 = add i32 %249, 746763147
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %306

; <label>:260:                                    ; preds = %245, %306
  %261 = landingpad { i8*, i32 }
          cleanup
  %262 = extractvalue { i8*, i32 } %261, 0
  store i8* %262, i8** %35, align 8
  %263 = extractvalue { i8*, i32 } %261, 1
  store i32 %263, i32* %36, align 4
  %264 = load i32, i32* @x.184
  %265 = load i32, i32* @y.185
  %266 = sub i32 0, 1
  %267 = add i32 %264, %266
  %268 = sub i32 %264, 1
  %269 = mul i32 %264, %267
  %270 = urem i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = icmp slt i32 %265, 10
  %273 = and i1 %271, %272
  %274 = xor i1 %271, %272
  %275 = or i1 %273, %274
  %276 = or i1 %271, %272
  br i1 %275, label %277, label %306

; <label>:277:                                    ; preds = %260
  invoke void @__cxa_end_catch()
          to label %278 unwind label %285

; <label>:278:                                    ; preds = %277
  br label %280
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:280:                                    ; preds = %278
  %281 = load i8*, i8** %35, align 8
  %282 = load i32, i32* %36, align 4
  %283 = insertvalue { i8*, i32 } undef, i8* %281, 0
  %284 = insertvalue { i8*, i32 } %283, i32 %282, 1
  resume { i8*, i32 } %284

; <label>:285:                                    ; preds = %277
  %286 = landingpad { i8*, i32 }
          catch i8* null
  %287 = extractvalue { i8*, i32 } %286, 0
  call void @__clang_call_terminate(i8* %287) #11
  unreachable

; <label>:288:                                    ; preds = %242
  unreachable

; <label>:289:                                    ; preds = %30, %3
  %290 = alloca %"class.std::move_iterator", align 8
  %291 = alloca %"class.std::move_iterator", align 8
  %292 = alloca %"class.std::vector.8"*, align 8
  %293 = alloca %"class.std::vector.8"*, align 8
  %294 = alloca i8*
  %295 = alloca i32
  %296 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %290, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %296, align 8
  %297 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %291, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %297, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %292, align 8
  %298 = load %"class.std::vector.8"*, %"class.std::vector.8"** %292, align 8
  store %"class.std::vector.8"* %298, %"class.std::vector.8"** %293, align 8
  br label %30

; <label>:299:                                    ; preds = %69, %55
  br label %69

; <label>:300:                                    ; preds = %112, %85
  br label %112

; <label>:301:                                    ; preds = %161, %146
  br label %161

; <label>:302:                                    ; preds = %219, %193
  %303 = landingpad { i8*, i32 }
          catch i8* null
  %304 = extractvalue { i8*, i32 } %303, 0
  store i8* %304, i8** %35, align 8
  %305 = extractvalue { i8*, i32 } %303, 1
  store i32 %305, i32* %36, align 4
  br label %219

; <label>:306:                                    ; preds = %260, %245
  %307 = landingpad { i8*, i32 }
          cleanup
  %308 = extractvalue { i8*, i32 } %307, 0
  store i8* %308, i8** %35, align 8
  %309 = extractvalue { i8*, i32 } %307, 1
  store i32 %309, i32* %36, align 4
  br label %260
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.192
  %6 = load i32, i32* @y.193
  %7 = add i32 %5, 267410351
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 267410351
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -672915886, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -672915886, label %19
    i32 2022446950, label %27
    i32 -1158210034, label %46
    i32 1935763842, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 2022446950, i32 1935763842
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %31, %"class.std::vector.8"** %2
  %32 = load i32, i32* @x.192
  %33 = load i32, i32* @y.193
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1158210034, i32 1935763842
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load %"class.std::vector.8"*, %"class.std::vector.8"** %51, align 8
  store i32 2022446950, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %5, i32 1
  store %"class.std::vector.8"* %6, %"class.std::vector.8"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"* %5, %"class.std::vector.8"* %6)
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::vector.8"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.8"* %8 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.9"* %6, %"struct.std::_Vector_base.9"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, %"class.std::allocator.10"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  ret %"class.std::allocator.10"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %6, %"struct.Graph::edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %9, %"struct.Graph::edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %12, %"struct.Graph::edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8), %"struct.Graph::edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Graph::edge"**, align 8
  %4 = alloca %"struct.Graph::edge"**, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %0, %"struct.Graph::edge"*** %3, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %4, align 8
  %6 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %8, %"struct.Graph::edge"** %5, align 8
  %9 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  %12 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %3, align 8
  store %"struct.Graph::edge"* %11, %"struct.Graph::edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  store %"struct.Graph::edge"* %14, %"struct.Graph::edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Graph::edge"**, align 8
  store %"struct.Graph::edge"** %0, %"struct.Graph::edge"*** %2, align 8
  %3 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %2, align 8
  ret %"struct.Graph::edge"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"**
  %4 = alloca %"class.std::vector.8"**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.220
  %8 = load i32, i32* @y.221
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1762297871, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %93
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1762297871, label %20
    i32 1569967291, label %40
    i32 1855557677, label %72
    i32 496305242, label %73
    i32 337600835, label %80
    i32 1308576512, label %84
    i32 -395678973, label %89
    i32 1946488638, label %90
  ]

; <label>:19:                                     ; preds = %17
  br label %93

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1569967291, i32 1946488638
  store i32 %39, i32* %16
  br label %93

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %41, %"class.std::vector.8"*** %4
  %42 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %42, %"class.std::vector.8"*** %3
  %43 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %43, align 8
  %44 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %3
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %44, align 8
  %45 = load i32, i32* @x.220
  %46 = load i32, i32* @y.221
  %47 = sub i32 %45, -751046767
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -751046767
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1855557677, i32 1946488638
  store i32 %71, i32* %16
  br label %93

; <label>:72:                                     ; preds = %17
  store i32 496305242, i32* %16
  br label %93

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %74, align 8
  %76 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %3
  %77 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  %78 = icmp ne %"class.std::vector.8"* %75, %77
  %79 = select i1 %78, i32 337600835, i32 -395678973
  store i32 %79, i32* %16
  br label %93

; <label>:80:                                     ; preds = %17
  %81 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %83 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %82) #3
  call void @_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_(%"class.std::vector.8"* %83)
  store i32 1308576512, i32* %16
  br label %93

; <label>:84:                                     ; preds = %17
  %85 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  %86 = load %"class.std::vector.8"*, %"class.std::vector.8"** %85, align 8
  %87 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %86, i32 1
  %88 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %4
  store %"class.std::vector.8"* %87, %"class.std::vector.8"** %88, align 8
  store i32 496305242, i32* %16
  br label %93

; <label>:89:                                     ; preds = %17
  ret void

; <label>:90:                                     ; preds = %17
  %91 = alloca %"class.std::vector.8"*, align 8
  %92 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %91, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %92, align 8
  store i32 1569967291, i32* %16
  br label %93

; <label>:93:                                     ; preds = %90, %84, %80, %73, %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"*, %"class.std::vector.8"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %7, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %7)
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %9)
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %12 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %11)
  %13 = call %"class.std::vector.8"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %10, %"class.std::vector.8"* %12)
  ret %"class.std::vector.8"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %3)
  ret %"class.std::vector.8"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %11 = call %"class.std::vector.8"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %9, %"class.std::vector.8"* %10)
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %3)
  ret %"class.std::vector.8"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %11 = ptrtoint %"class.std::vector.8"* %9 to i64
  %12 = ptrtoint %"class.std::vector.8"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 24
  store i64 %16, i64* %8, align 8
  %17 = alloca i32
  store i32 -275557906, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %145
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -275557906, label %21
    i32 -1659227529, label %49
    i32 1127579114, label %78
    i32 2137516008, label %81
    i32 -1461059283, label %88
    i32 727167261, label %104
    i32 130524840, label %124
    i32 -1415914616, label %125
    i32 1725122889, label %127
    i32 -416229585, label %130
  ]

; <label>:20:                                     ; preds = %18
  br label %145

; <label>:21:                                     ; preds = %18
  %22 = load i32, i32* @x.234
  %23 = load i32, i32* @y.235
  %24 = sub i32 %22, -2081674857
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -2081674857
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = xor i1 %30, true
  %33 = xor i1 %31, true
  %34 = xor i1 true, true
  %35 = and i1 %32, true
  %36 = and i1 %30, %34
  %37 = and i1 %33, true
  %38 = and i1 %31, %34
  %39 = or i1 %35, %36
  %40 = or i1 %37, %38
  %41 = xor i1 %39, %40
  %42 = or i1 %32, %33
  %43 = xor i1 %42, true
  %44 = or i1 true, %34
  %45 = and i1 %43, %44
  %46 = or i1 %41, %45
  %47 = or i1 %30, %31
  %48 = select i1 %46, i32 -1659227529, i32 1725122889
  store i32 %48, i32* %17
  br label %145

; <label>:49:                                     ; preds = %18
  %50 = load i64, i64* %8, align 8
  %51 = icmp sgt i64 %50, 0
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.234
  %53 = load i32, i32* @y.235
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1127579114, i32 1725122889
  store i32 %77, i32* %17
  br label %145

; <label>:78:                                     ; preds = %18
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 2137516008, i32 -1415914616
  store i32 %80, i32* %17
  br label %145

; <label>:81:                                     ; preds = %18
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %83 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %82, i32 -1
  store %"class.std::vector.8"* %83, %"class.std::vector.8"** %6, align 8
  %84 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %83) #3
  %85 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %86 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %85, i32 -1
  store %"class.std::vector.8"* %86, %"class.std::vector.8"** %7, align 8
  %87 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_(%"class.std::vector.8"* %86, %"class.std::vector.8"* dereferenceable(24) %84) #3
  store i32 -1461059283, i32* %17
  br label %145

; <label>:88:                                     ; preds = %18
  %89 = load i32, i32* @x.234
  %90 = load i32, i32* @y.235
  %91 = add i32 %89, -447123095
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -447123095
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  %103 = select i1 %101, i32 727167261, i32 -416229585
  store i32 %103, i32* %17
  br label %145

; <label>:104:                                    ; preds = %18
  %105 = load i64, i64* %8, align 8
  %106 = sub i64 0, -1
  %107 = sub i64 %105, %106
  %108 = add nsw i64 %105, -1
  store i64 %107, i64* %8, align 8
  %109 = load i32, i32* @x.234
  %110 = load i32, i32* @y.235
  %111 = add i32 %109, 210811069
  %112 = sub i32 %111, 1
  %113 = sub i32 %112, 210811069
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 130524840, i32 -416229585
  store i32 %123, i32* %17
  br label %145

; <label>:124:                                    ; preds = %18
  store i32 -275557906, i32* %17
  br label %145

; <label>:125:                                    ; preds = %18
  %126 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %126

; <label>:127:                                    ; preds = %18
  %128 = load i64, i64* %8, align 8
  %129 = icmp sgt i64 %128, 0
  store i32 -1659227529, i32* %17
  br label %145

; <label>:130:                                    ; preds = %18
  %131 = load i64, i64* %8, align 8
  %132 = sub i64 0, %131
  %133 = add i64 0, %132
  %134 = sub i64 0, %131
  %135 = sub i64 0, %133
  %136 = sub i64 0, -1
  %137 = add i64 %135, %136
  %138 = sub i64 0, %137
  %139 = add i64 %133, -1
  %140 = sub i64 0, %131
  %141 = sub i64 0, -1
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add nsw i64 %131, -1
  store i64 %143, i64* %8, align 8
  store i32 727167261, i32* %17
  br label %145

; <label>:145:                                    ; preds = %130, %127, %124, %104, %88, %81, %78, %49, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret %"class.std::vector.8"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.238
  %4 = load i32, i32* @y.239
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %103

; <label>:28:                                     ; preds = %2, %103
  %29 = alloca %"struct.std::integral_constant", align 1
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca %"class.std::vector.8", align 8
  %33 = alloca %"class.std::allocator.10", align 1
  %34 = alloca i8*
  %35 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %31, align 8
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %37 = bitcast %"class.std::vector.8"* %36 to %"struct.std::_Vector_base.9"*
  call void @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv(%"class.std::allocator.10"* sret %33, %"struct.std::_Vector_base.9"* %37) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_(%"class.std::vector.8"* %32, %"class.std::allocator.10"* dereferenceable(1) %33) #3
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %33) #3
  %38 = bitcast %"class.std::vector.8"* %36 to %"struct.std::_Vector_base.9"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %38, i32 0, i32 0
  %40 = bitcast %"class.std::vector.8"* %32 to %"struct.std::_Vector_base.9"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %40, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %39, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %41) #3
  %42 = bitcast %"class.std::vector.8"* %36 to %"struct.std::_Vector_base.9"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %42, i32 0, i32 0
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %45 = bitcast %"class.std::vector.8"* %44 to %"struct.std::_Vector_base.9"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %45, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %43, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %46) #3
  %47 = bitcast %"class.std::vector.8"* %36 to %"struct.std::_Vector_base.9"*
  %48 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %47) #3
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %50 = bitcast %"class.std::vector.8"* %49 to %"struct.std::_Vector_base.9"*
  %51 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %50) #3
  %52 = load i32, i32* @x.238
  %53 = load i32, i32* @y.239
  %54 = add i32 %52, -1314809344
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1314809344
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %103

; <label>:66:                                     ; preds = %28
  invoke void @_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_(%"class.std::allocator.10"* dereferenceable(1) %48, %"class.std::allocator.10"* dereferenceable(1) %51)
          to label %67 unwind label %68

; <label>:67:                                     ; preds = %66
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %32) #3
  ret void

; <label>:68:                                     ; preds = %66
  %69 = load i32, i32* @x.238
  %70 = load i32, i32* @y.239
  %71 = sub i32 0, 1
  %72 = add i32 %69, %71
  %73 = sub i32 %69, 1
  %74 = mul i32 %69, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %70, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %127

; <label>:82:                                     ; preds = %68, %127
  %83 = landingpad { i8*, i32 }
          catch i8* null
  %84 = extractvalue { i8*, i32 } %83, 0
  store i8* %84, i8** %34, align 8
  %85 = extractvalue { i8*, i32 } %83, 1
  store i32 %85, i32* %35, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %32) #3
  %86 = load i32, i32* @x.238
  %87 = load i32, i32* @y.239
  %88 = add i32 %86, -120697014
  %89 = sub i32 %88, 1
  %90 = sub i32 %89, -120697014
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %127

; <label>:100:                                    ; preds = %82
  br label %101

; <label>:101:                                    ; preds = %100
  %102 = load i8*, i8** %34, align 8
  call void @__clang_call_terminate(i8* %102) #11
  unreachable

; <label>:103:                                    ; preds = %28, %2
  %104 = alloca %"struct.std::integral_constant", align 1
  %105 = alloca %"class.std::vector.8"*, align 8
  %106 = alloca %"class.std::vector.8"*, align 8
  %107 = alloca %"class.std::vector.8", align 8
  %108 = alloca %"class.std::allocator.10", align 1
  %109 = alloca i8*
  %110 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %105, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %106, align 8
  %111 = load %"class.std::vector.8"*, %"class.std::vector.8"** %105, align 8
  %112 = bitcast %"class.std::vector.8"* %111 to %"struct.std::_Vector_base.9"*
  call void @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv(%"class.std::allocator.10"* sret %108, %"struct.std::_Vector_base.9"* %112) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_(%"class.std::vector.8"* %107, %"class.std::allocator.10"* dereferenceable(1) %108) #3
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %108) #3
  %113 = bitcast %"class.std::vector.8"* %111 to %"struct.std::_Vector_base.9"*
  %114 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %113, i32 0, i32 0
  %115 = bitcast %"class.std::vector.8"* %107 to %"struct.std::_Vector_base.9"*
  %116 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %115, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %114, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %116) #3
  %117 = bitcast %"class.std::vector.8"* %111 to %"struct.std::_Vector_base.9"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %117, i32 0, i32 0
  %119 = load %"class.std::vector.8"*, %"class.std::vector.8"** %106, align 8
  %120 = bitcast %"class.std::vector.8"* %119 to %"struct.std::_Vector_base.9"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %120, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %118, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %121) #3
  %122 = bitcast %"class.std::vector.8"* %111 to %"struct.std::_Vector_base.9"*
  %123 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %122) #3
  %124 = load %"class.std::vector.8"*, %"class.std::vector.8"** %106, align 8
  %125 = bitcast %"class.std::vector.8"* %124 to %"struct.std::_Vector_base.9"*
  %126 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %125) #3
  br label %28

; <label>:127:                                    ; preds = %82, %68
  %128 = landingpad { i8*, i32 }
          catch i8* null
  %129 = extractvalue { i8*, i32 } %128, 0
  store i8* %129, i8** %34, align 8
  %130 = extractvalue { i8*, i32 } %128, 1
  store i32 %130, i32* %35, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %32) #3
  br label %82
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv(%"class.std::allocator.10"* noalias sret, %"struct.std::_Vector_base.9"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %3, align 8
  %4 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_(%"class.std::vector.8"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_(%"struct.std::_Vector_base.9"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.244
  %6 = load i32, i32* @y.245
  %7 = add i32 %5, -507863456
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -507863456
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -782668393, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -782668393, label %19
    i32 75408406, label %39
    i32 1644958122, label %60
    i32 -54992222, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 75408406, i32 -54992222
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  %41 = alloca %"class.std::allocator.10"*, align 8
  %42 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %40, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %41, align 8
  %43 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  %44 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %41, align 8
  call void @_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1) %43, %"class.std::allocator.10"* dereferenceable(1) %44)
  %45 = load i32, i32* @x.244
  %46 = load i32, i32* @y.245
  %47 = sub i32 %45, 210679870
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 210679870
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1644958122, i32 -54992222
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.10"*, align 8
  %63 = alloca %"class.std::allocator.10"*, align 8
  %64 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %62, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %63, align 8
  %65 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %62, align 8
  %66 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %63, align 8
  call void @_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1) %65, %"class.std::allocator.10"* dereferenceable(1) %66)
  store i32 75408406, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_(%"struct.std::_Vector_base.9"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #5 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %5, align 8
  %6 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  %8 = alloca i32
  store i32 1817198148, i32* %8
  br label %9

; <label>:9:                                      ; preds = %3, %119
  %10 = load i32, i32* %8
  switch i32 %10, label %11 [
    i32 1817198148, label %12
    i32 500617323, label %28
    i32 -751939332, label %59
    i32 1966708119, label %62
    i32 -686564729, label %66
    i32 -1429740977, label %69
    i32 -1035850111, label %97
    i32 -1631000972, label %113
    i32 1534836581, label %114
    i32 27365045, label %118
  ]

; <label>:11:                                     ; preds = %9
  br label %119

; <label>:12:                                     ; preds = %9
  %13 = load i32, i32* @x.252
  %14 = load i32, i32* @y.253
  %15 = add i32 %13, -1013710609
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -1013710609
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 500617323, i32 1534836581
  store i32 %27, i32* %8
  br label %119

; <label>:28:                                     ; preds = %9
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %31 = icmp ne %"class.std::vector.8"* %29, %30
  store i1 %31, i1* %4
  %32 = load i32, i32* @x.252
  %33 = load i32, i32* @y.253
  %34 = sub i32 %32, -1089986843
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1089986843
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -751939332, i32 1534836581
  store i32 %58, i32* %8
  br label %119

; <label>:59:                                     ; preds = %9
  %60 = load volatile i1, i1* %4
  %61 = select i1 %60, i32 1966708119, i32 -1429740977
  store i32 %61, i32* %8
  br label %119

; <label>:62:                                     ; preds = %9
  %63 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %64 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %65 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"* %64, %"class.std::vector.8"* dereferenceable(24) %63)
  store i32 -686564729, i32* %8
  br label %119

; <label>:66:                                     ; preds = %9
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %68 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %67, i32 1
  store %"class.std::vector.8"* %68, %"class.std::vector.8"** %5, align 8
  store i32 1817198148, i32* %8
  br label %119

; <label>:69:                                     ; preds = %9
  %70 = load i32, i32* @x.252
  %71 = load i32, i32* @y.253
  %72 = sub i32 %70, 1560874157
  %73 = sub i32 %72, 1
  %74 = add i32 %73, 1560874157
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 false, true
  %83 = and i1 %80, false
  %84 = and i1 %78, %82
  %85 = and i1 %81, false
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 false, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 -1035850111, i32 27365045
  store i32 %96, i32* %8
  br label %119

; <label>:97:                                     ; preds = %9
  %98 = load i32, i32* @x.252
  %99 = load i32, i32* @y.253
  %100 = add i32 %98, 1991962750
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, 1991962750
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  %112 = select i1 %110, i32 -1631000972, i32 27365045
  store i32 %112, i32* %8
  br label %119

; <label>:113:                                    ; preds = %9
  ret void

; <label>:114:                                    ; preds = %9
  %115 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %116 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %117 = icmp ne %"class.std::vector.8"* %115, %116
  store i32 500617323, i32* %8
  br label %119

; <label>:118:                                    ; preds = %9
  store i32 -1035850111, i32* %8
  br label %119

; <label>:119:                                    ; preds = %118, %114, %97, %69, %66, %62, %59, %28, %12, %11
  br label %9
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca %"class.std::vector.8"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %14 = alloca %"struct.Graph::edge"**
  %15 = alloca i64*
  %16 = alloca %"class.std::vector.8"**
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.254
  %20 = load i32, i32* @y.255
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  store i1 %26, i1* %18
  %27 = icmp slt i32 %20, 10
  store i1 %27, i1* %17
  %28 = alloca i32
  store i32 -1110001942, i32* %28
  br label %29

; <label>:29:                                     ; preds = %2, %458
  %30 = load i32, i32* %28
  switch i32 %30, label %31 [
    i32 -1110001942, label %32
    i32 341090747, label %40
    i32 565572299, label %84
    i32 -152710439, label %87
    i32 -1208293134, label %114
    i32 -506335872, label %139
    i32 588092402, label %142
    i32 -624145700, label %219
    i32 -1235262788, label %234
    i32 831751784, label %255
    i32 -865808215, label %258
    i32 -167875824, label %298
    i32 -939431941, label %344
    i32 -520279958, label %345
    i32 -1936500534, label %372
    i32 1986776795, label %411
    i32 -1373690950, label %412
    i32 238176963, label %414
    i32 -376021115, label %429
    i32 -215061468, label %439
    i32 782552950, label %445
  ]

; <label>:31:                                     ; preds = %29
  br label %458

; <label>:32:                                     ; preds = %29
  %33 = load volatile i1, i1* %18
  %34 = load volatile i1, i1* %17
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 341090747, i32 238176963
  store i32 %39, i32* %28
  br label %458

; <label>:40:                                     ; preds = %29
  %41 = alloca %"class.std::vector.8"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %42, %"class.std::vector.8"*** %16
  %43 = alloca i64, align 8
  store i64* %43, i64** %15
  %44 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %44, %"struct.Graph::edge"*** %14
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %45, %"class.__gnu_cxx::__normal_iterator.14"** %13
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %46, %"class.__gnu_cxx::__normal_iterator.14"** %12
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %47, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %48, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %49, %"class.__gnu_cxx::__normal_iterator.14"** %9
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %50, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %51 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %51, %"class.__gnu_cxx::__normal_iterator.15"** %7
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %41, align 8
  %52 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %52, align 8
  %53 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  store %"class.std::vector.8"* %53, %"class.std::vector.8"** %6
  %54 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %55 = load %"class.std::vector.8"*, %"class.std::vector.8"** %54, align 8
  %56 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %57 = icmp ne %"class.std::vector.8"* %55, %56
  store i1 %57, i1* %5
  %58 = load i32, i32* @x.254
  %59 = load i32, i32* @y.255
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 565572299, i32 238176963
  store i32 %83, i32* %28
  br label %458

; <label>:84:                                     ; preds = %29
  %85 = load volatile i1, i1* %5
  %86 = select i1 %85, i32 -152710439, i32 -1373690950
  store i32 %86, i32* %28
  br label %458

; <label>:87:                                     ; preds = %29
  %88 = load i32, i32* @x.254
  %89 = load i32, i32* @y.255
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -1208293134, i32 -376021115
  store i32 %113, i32* %28
  br label %458

; <label>:114:                                    ; preds = %29
  %115 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %116 = load %"class.std::vector.8"*, %"class.std::vector.8"** %115, align 8
  %117 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %116) #3
  %118 = load volatile i64*, i64** %15
  store i64 %117, i64* %118, align 8
  %119 = load volatile i64*, i64** %15
  %120 = load i64, i64* %119, align 8
  %121 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %122 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"* %121) #3
  %123 = icmp ugt i64 %120, %122
  store i1 %123, i1* %4
  %124 = load i32, i32* @x.254
  %125 = load i32, i32* @y.255
  %126 = add i32 %124, 2057607585
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, 2057607585
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  %138 = select i1 %136, i32 -506335872, i32 -376021115
  store i32 %138, i32* %28
  br label %458

; <label>:139:                                    ; preds = %29
  %140 = load volatile i1, i1* %4
  %141 = select i1 %140, i32 588092402, i32 -624145700
  store i32 %141, i32* %28
  br label %458

; <label>:142:                                    ; preds = %29
  %143 = load volatile i64*, i64** %15
  %144 = load i64, i64* %143, align 8
  %145 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %146 = load %"class.std::vector.8"*, %"class.std::vector.8"** %145, align 8
  %147 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %146) #3
  %148 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %13
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %148, i32 0, i32 0
  store %"struct.Graph::edge"* %147, %"struct.Graph::edge"** %149, align 8
  %150 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %151 = load %"class.std::vector.8"*, %"class.std::vector.8"** %150, align 8
  %152 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %151) #3
  %153 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %12
  %154 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %153, i32 0, i32 0
  store %"struct.Graph::edge"* %152, %"struct.Graph::edge"** %154, align 8
  %155 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %13
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %155, i32 0, i32 0
  %157 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %156, align 8
  %158 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %12
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %158, i32 0, i32 0
  %160 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %159, align 8
  %161 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %162 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"* %161, i64 %144, %"struct.Graph::edge"* %157, %"struct.Graph::edge"* %160)
  %163 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %14
  store %"struct.Graph::edge"* %162, %"struct.Graph::edge"** %163, align 8
  %164 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %165 = bitcast %"class.std::vector.8"* %164 to %"struct.std::_Vector_base.9"*
  %166 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %166, i32 0, i32 0
  %168 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %167, align 8
  %169 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %170 = bitcast %"class.std::vector.8"* %169 to %"struct.std::_Vector_base.9"*
  %171 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %171, i32 0, i32 1
  %173 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %172, align 8
  %174 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %175 = bitcast %"class.std::vector.8"* %174 to %"struct.std::_Vector_base.9"*
  %176 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %175) #3
  call void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %168, %"struct.Graph::edge"* %173, %"class.std::allocator.10"* dereferenceable(1) %176)
  %177 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %178 = bitcast %"class.std::vector.8"* %177 to %"struct.std::_Vector_base.9"*
  %179 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %180 = bitcast %"class.std::vector.8"* %179 to %"struct.std::_Vector_base.9"*
  %181 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %180, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %181, i32 0, i32 0
  %183 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %182, align 8
  %184 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %185 = bitcast %"class.std::vector.8"* %184 to %"struct.std::_Vector_base.9"*
  %186 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %186, i32 0, i32 2
  %188 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %187, align 8
  %189 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %190 = bitcast %"class.std::vector.8"* %189 to %"struct.std::_Vector_base.9"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %190, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %191, i32 0, i32 0
  %193 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %192, align 8
  %194 = ptrtoint %"struct.Graph::edge"* %188 to i64
  %195 = ptrtoint %"struct.Graph::edge"* %193 to i64
  %196 = sub i64 %194, 3515835844159703753
  %197 = sub i64 %196, %195
  %198 = add i64 %197, 3515835844159703753
  %199 = sub i64 %194, %195
  %200 = sdiv exact i64 %198, 24
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %178, %"struct.Graph::edge"* %183, i64 %200)
  %201 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %14
  %202 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %201, align 8
  %203 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %204 = bitcast %"class.std::vector.8"* %203 to %"struct.std::_Vector_base.9"*
  %205 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %204, i32 0, i32 0
  %206 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %205, i32 0, i32 0
  store %"struct.Graph::edge"* %202, %"struct.Graph::edge"** %206, align 8
  %207 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %208 = bitcast %"class.std::vector.8"* %207 to %"struct.std::_Vector_base.9"*
  %209 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %208, i32 0, i32 0
  %210 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %209, i32 0, i32 0
  %211 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %210, align 8
  %212 = load volatile i64*, i64** %15
  %213 = load i64, i64* %212, align 8
  %214 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %211, i64 %213
  %215 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %216 = bitcast %"class.std::vector.8"* %215 to %"struct.std::_Vector_base.9"*
  %217 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %216, i32 0, i32 0
  %218 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %217, i32 0, i32 2
  store %"struct.Graph::edge"* %214, %"struct.Graph::edge"** %218, align 8
  store i32 -520279958, i32* %28
  br label %458

; <label>:219:                                    ; preds = %29
  %220 = load i32, i32* @x.254
  %221 = load i32, i32* @y.255
  %222 = sub i32 0, 1
  %223 = add i32 %220, %222
  %224 = sub i32 %220, 1
  %225 = mul i32 %220, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %221, 10
  %229 = and i1 %227, %228
  %230 = xor i1 %227, %228
  %231 = or i1 %229, %230
  %232 = or i1 %227, %228
  %233 = select i1 %231, i32 -1235262788, i32 -215061468
  store i32 %233, i32* %28
  br label %458

; <label>:234:                                    ; preds = %29
  %235 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %236 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %235) #3
  %237 = load volatile i64*, i64** %15
  %238 = load i64, i64* %237, align 8
  %239 = icmp uge i64 %236, %238
  store i1 %239, i1* %3
  %240 = load i32, i32* @x.254
  %241 = load i32, i32* @y.255
  %242 = sub i32 %240, 323419590
  %243 = sub i32 %242, 1
  %244 = add i32 %243, 323419590
  %245 = sub i32 %240, 1
  %246 = mul i32 %240, %244
  %247 = urem i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = icmp slt i32 %241, 10
  %250 = and i1 %248, %249
  %251 = xor i1 %248, %249
  %252 = or i1 %250, %251
  %253 = or i1 %248, %249
  %254 = select i1 %252, i32 831751784, i32 -215061468
  store i32 %254, i32* %28
  br label %458

; <label>:255:                                    ; preds = %29
  %256 = load volatile i1, i1* %3
  %257 = select i1 %256, i32 -865808215, i32 -167875824
  store i32 %257, i32* %28
  br label %458

; <label>:258:                                    ; preds = %29
  %259 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %260 = load %"class.std::vector.8"*, %"class.std::vector.8"** %259, align 8
  %261 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %260) #3
  %262 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %263 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %262, i32 0, i32 0
  store %"struct.Graph::edge"* %261, %"struct.Graph::edge"** %263, align 8
  %264 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %265 = load %"class.std::vector.8"*, %"class.std::vector.8"** %264, align 8
  %266 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %265) #3
  %267 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %9
  %268 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %267, i32 0, i32 0
  store %"struct.Graph::edge"* %266, %"struct.Graph::edge"** %268, align 8
  %269 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %270 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %269) #3
  %271 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %272 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %271, i32 0, i32 0
  store %"struct.Graph::edge"* %270, %"struct.Graph::edge"** %272, align 8
  %273 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %274 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %273, i32 0, i32 0
  %275 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %274, align 8
  %276 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %9
  %277 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %276, i32 0, i32 0
  %278 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %277, align 8
  %279 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %8
  %280 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %279, i32 0, i32 0
  %281 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %280, align 8
  %282 = call %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Graph::edge"* %275, %"struct.Graph::edge"* %278, %"struct.Graph::edge"* %281)
  %283 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %284 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %283, i32 0, i32 0
  store %"struct.Graph::edge"* %282, %"struct.Graph::edge"** %284, align 8
  %285 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %286 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %285) #3
  %287 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %288 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %287, i32 0, i32 0
  store %"struct.Graph::edge"* %286, %"struct.Graph::edge"** %288, align 8
  %289 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %290 = bitcast %"class.std::vector.8"* %289 to %"struct.std::_Vector_base.9"*
  %291 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %290) #3
  %292 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %11
  %293 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %292, i32 0, i32 0
  %294 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %293, align 8
  %295 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %7
  %296 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %295, i32 0, i32 0
  %297 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %296, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Graph::edge"* %294, %"struct.Graph::edge"* %297, %"class.std::allocator.10"* dereferenceable(1) %291)
  store i32 -939431941, i32* %28
  br label %458

; <label>:298:                                    ; preds = %29
  %299 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %300 = load %"class.std::vector.8"*, %"class.std::vector.8"** %299, align 8
  %301 = bitcast %"class.std::vector.8"* %300 to %"struct.std::_Vector_base.9"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %302, i32 0, i32 0
  %304 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %303, align 8
  %305 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %306 = load %"class.std::vector.8"*, %"class.std::vector.8"** %305, align 8
  %307 = bitcast %"class.std::vector.8"* %306 to %"struct.std::_Vector_base.9"*
  %308 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %307, i32 0, i32 0
  %309 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %308, i32 0, i32 0
  %310 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %309, align 8
  %311 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %312 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %311) #3
  %313 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %310, i64 %312
  %314 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %315 = bitcast %"class.std::vector.8"* %314 to %"struct.std::_Vector_base.9"*
  %316 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %315, i32 0, i32 0
  %317 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %316, i32 0, i32 0
  %318 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %317, align 8
  %319 = call %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %304, %"struct.Graph::edge"* %313, %"struct.Graph::edge"* %318)
  %320 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %321 = load %"class.std::vector.8"*, %"class.std::vector.8"** %320, align 8
  %322 = bitcast %"class.std::vector.8"* %321 to %"struct.std::_Vector_base.9"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %322, i32 0, i32 0
  %324 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %323, i32 0, i32 0
  %325 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %324, align 8
  %326 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %327 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %326) #3
  %328 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %325, i64 %327
  %329 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %330 = load %"class.std::vector.8"*, %"class.std::vector.8"** %329, align 8
  %331 = bitcast %"class.std::vector.8"* %330 to %"struct.std::_Vector_base.9"*
  %332 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %331, i32 0, i32 0
  %333 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %332, i32 0, i32 1
  %334 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %333, align 8
  %335 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %336 = bitcast %"class.std::vector.8"* %335 to %"struct.std::_Vector_base.9"*
  %337 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %336, i32 0, i32 0
  %338 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %337, i32 0, i32 1
  %339 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %338, align 8
  %340 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %341 = bitcast %"class.std::vector.8"* %340 to %"struct.std::_Vector_base.9"*
  %342 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %341) #3
  %343 = call %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Graph::edge"* %328, %"struct.Graph::edge"* %334, %"struct.Graph::edge"* %339, %"class.std::allocator.10"* dereferenceable(1) %342)
  store i32 -939431941, i32* %28
  br label %458

; <label>:344:                                    ; preds = %29
  store i32 -520279958, i32* %28
  br label %458

; <label>:345:                                    ; preds = %29
  %346 = load i32, i32* @x.254
  %347 = load i32, i32* @y.255
  %348 = sub i32 0, 1
  %349 = add i32 %346, %348
  %350 = sub i32 %346, 1
  %351 = mul i32 %346, %349
  %352 = urem i32 %351, 2
  %353 = icmp eq i32 %352, 0
  %354 = icmp slt i32 %347, 10
  %355 = xor i1 %353, true
  %356 = xor i1 %354, true
  %357 = xor i1 true, true
  %358 = and i1 %355, true
  %359 = and i1 %353, %357
  %360 = and i1 %356, true
  %361 = and i1 %354, %357
  %362 = or i1 %358, %359
  %363 = or i1 %360, %361
  %364 = xor i1 %362, %363
  %365 = or i1 %355, %356
  %366 = xor i1 %365, true
  %367 = or i1 true, %357
  %368 = and i1 %366, %367
  %369 = or i1 %364, %368
  %370 = or i1 %353, %354
  %371 = select i1 %369, i32 -1936500534, i32 782552950
  store i32 %371, i32* %28
  br label %458

; <label>:372:                                    ; preds = %29
  %373 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %374 = bitcast %"class.std::vector.8"* %373 to %"struct.std::_Vector_base.9"*
  %375 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %374, i32 0, i32 0
  %376 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %375, i32 0, i32 0
  %377 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %376, align 8
  %378 = load volatile i64*, i64** %15
  %379 = load i64, i64* %378, align 8
  %380 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %377, i64 %379
  %381 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %382 = bitcast %"class.std::vector.8"* %381 to %"struct.std::_Vector_base.9"*
  %383 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %382, i32 0, i32 0
  %384 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %383, i32 0, i32 1
  store %"struct.Graph::edge"* %380, %"struct.Graph::edge"** %384, align 8
  %385 = load i32, i32* @x.254
  %386 = load i32, i32* @y.255
  %387 = sub i32 0, 1
  %388 = add i32 %385, %387
  %389 = sub i32 %385, 1
  %390 = mul i32 %385, %388
  %391 = urem i32 %390, 2
  %392 = icmp eq i32 %391, 0
  %393 = icmp slt i32 %386, 10
  %394 = xor i1 %392, true
  %395 = xor i1 %393, true
  %396 = xor i1 true, true
  %397 = and i1 %394, true
  %398 = and i1 %392, %396
  %399 = and i1 %395, true
  %400 = and i1 %393, %396
  %401 = or i1 %397, %398
  %402 = or i1 %399, %400
  %403 = xor i1 %401, %402
  %404 = or i1 %394, %395
  %405 = xor i1 %404, true
  %406 = or i1 true, %396
  %407 = and i1 %405, %406
  %408 = or i1 %403, %407
  %409 = or i1 %392, %393
  %410 = select i1 %408, i32 1986776795, i32 782552950
  store i32 %410, i32* %28
  br label %458

; <label>:411:                                    ; preds = %29
  store i32 -1373690950, i32* %28
  br label %458

; <label>:412:                                    ; preds = %29
  %413 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  ret %"class.std::vector.8"* %413

; <label>:414:                                    ; preds = %29
  %415 = alloca %"class.std::vector.8"*, align 8
  %416 = alloca %"class.std::vector.8"*, align 8
  %417 = alloca i64, align 8
  %418 = alloca %"struct.Graph::edge"*, align 8
  %419 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %420 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %421 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %422 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %423 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %424 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %425 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %415, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %416, align 8
  %426 = load %"class.std::vector.8"*, %"class.std::vector.8"** %415, align 8
  %427 = load %"class.std::vector.8"*, %"class.std::vector.8"** %416, align 8
  %428 = icmp ne %"class.std::vector.8"* %427, %426
  store i32 341090747, i32* %28
  br label %458

; <label>:429:                                    ; preds = %29
  %430 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %16
  %431 = load %"class.std::vector.8"*, %"class.std::vector.8"** %430, align 8
  %432 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %431) #3
  %433 = load volatile i64*, i64** %15
  store i64 %432, i64* %433, align 8
  %434 = load volatile i64*, i64** %15
  %435 = load i64, i64* %434, align 8
  %436 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %437 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"* %436) #3
  %438 = icmp ugt i64 %435, %437
  store i32 -1208293134, i32* %28
  br label %458

; <label>:439:                                    ; preds = %29
  %440 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %441 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %440) #3
  %442 = load volatile i64*, i64** %15
  %443 = load i64, i64* %442, align 8
  %444 = icmp uge i64 %441, %443
  store i32 -1235262788, i32* %28
  br label %458

; <label>:445:                                    ; preds = %29
  %446 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %447 = bitcast %"class.std::vector.8"* %446 to %"struct.std::_Vector_base.9"*
  %448 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %447, i32 0, i32 0
  %449 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %448, i32 0, i32 0
  %450 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %449, align 8
  %451 = load volatile i64*, i64** %15
  %452 = load i64, i64* %451, align 8
  %453 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %450, i64 %452
  %454 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %455 = bitcast %"class.std::vector.8"* %454 to %"struct.std::_Vector_base.9"*
  %456 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %455, i32 0, i32 0
  %457 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %456, i32 0, i32 1
  store %"struct.Graph::edge"* %453, %"struct.Graph::edge"** %457, align 8
  store i32 -1936500534, i32* %28
  br label %458

; <label>:458:                                    ; preds = %445, %439, %429, %414, %411, %372, %345, %344, %298, %258, %255, %234, %219, %142, %139, %114, %87, %84, %40, %32, %31
  br label %29
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph::edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph::edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"*, i64, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.258
  %6 = load i32, i32* @y.259
  %7 = add i32 %5, 1028047066
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1028047066
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %174

; <label>:19:                                     ; preds = %4, %174
  %20 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %21 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %22 = alloca %"class.std::vector.8"*, align 8
  %23 = alloca i64, align 8
  %24 = alloca %"struct.Graph::edge"*, align 8
  %25 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %26 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %27 = alloca i8*
  %28 = alloca i32
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %20, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %29, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %21, i32 0, i32 0
  store %"struct.Graph::edge"* %3, %"struct.Graph::edge"** %30, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %22, align 8
  store i64 %1, i64* %23, align 8
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %32 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %33 = load i64, i64* %23, align 8
  %34 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %32, i64 %33)
  store %"struct.Graph::edge"* %34, %"struct.Graph::edge"** %24, align 8
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %25 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %26 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %21 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %24, align 8
  %40 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %41 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %40) #3
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %25, i32 0, i32 0
  %43 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %42, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %26, i32 0, i32 0
  %45 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %44, align 8
  %46 = load i32, i32* @x.258
  %47 = load i32, i32* @y.259
  %48 = add i32 %46, -1216573475
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1216573475
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %174

; <label>:60:                                     ; preds = %19
  %61 = invoke %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"* %43, %"struct.Graph::edge"* %45, %"struct.Graph::edge"* %39, %"class.std::allocator.10"* dereferenceable(1) %41)
          to label %62 unwind label %64

; <label>:62:                                     ; preds = %60
  %63 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %24, align 8
  ret %"struct.Graph::edge"* %63

; <label>:64:                                     ; preds = %60
  %65 = landingpad { i8*, i32 }
          catch i8* null
  %66 = extractvalue { i8*, i32 } %65, 0
  store i8* %66, i8** %27, align 8
  %67 = extractvalue { i8*, i32 } %65, 1
  store i32 %67, i32* %28, align 4
  br label %68

; <label>:68:                                     ; preds = %64
  %69 = load i8*, i8** %27, align 8
  %70 = call i8* @__cxa_begin_catch(i8* %69) #3
  %71 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %72 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %24, align 8
  %73 = load i64, i64* %23, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %71, %"struct.Graph::edge"* %72, i64 %73)
          to label %74 unwind label %75

; <label>:74:                                     ; preds = %68
  invoke void @__cxa_rethrow() #12
          to label %131 unwind label %75

; <label>:75:                                     ; preds = %74, %68
  %76 = landingpad { i8*, i32 }
          cleanup
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %27, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %28, align 4
  invoke void @__cxa_end_catch()
          to label %79 unwind label %128

; <label>:79:                                     ; preds = %75
  br label %81
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:81:                                     ; preds = %79
  %82 = load i32, i32* @x.258
  %83 = load i32, i32* @y.259
  %84 = sub i32 %82, -1478674390
  %85 = sub i32 %84, 1
  %86 = add i32 %85, -1478674390
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %201

; <label>:96:                                     ; preds = %81, %201
  %97 = load i8*, i8** %27, align 8
  %98 = load i32, i32* %28, align 4
  %99 = insertvalue { i8*, i32 } undef, i8* %97, 0
  %100 = insertvalue { i8*, i32 } %99, i32 %98, 1
  %101 = load i32, i32* @x.258
  %102 = load i32, i32* @y.259
  %103 = add i32 %101, 1455247698
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 1455247698
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 true, true
  %114 = and i1 %111, true
  %115 = and i1 %109, %113
  %116 = and i1 %112, true
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 true, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %201

; <label>:127:                                    ; preds = %96
  resume { i8*, i32 } %100

; <label>:128:                                    ; preds = %75
  %129 = landingpad { i8*, i32 }
          catch i8* null
  %130 = extractvalue { i8*, i32 } %129, 0
  call void @__clang_call_terminate(i8* %130) #11
  unreachable

; <label>:131:                                    ; preds = %74
  %132 = load i32, i32* @x.258
  %133 = load i32, i32* @y.259
  %134 = sub i32 %132, 398671367
  %135 = sub i32 %134, 1
  %136 = add i32 %135, 398671367
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 false, true
  %145 = and i1 %142, false
  %146 = and i1 %140, %144
  %147 = and i1 %143, false
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 false, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  br i1 %156, label %158, label %206

; <label>:158:                                    ; preds = %131, %206
  %159 = load i32, i32* @x.258
  %160 = load i32, i32* @y.259
  %161 = add i32 %159, -1942485920
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, -1942485920
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = and i1 %167, %168
  %170 = xor i1 %167, %168
  %171 = or i1 %169, %170
  %172 = or i1 %167, %168
  br i1 %171, label %173, label %206

; <label>:173:                                    ; preds = %158
  unreachable

; <label>:174:                                    ; preds = %19, %4
  %175 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %176 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %177 = alloca %"class.std::vector.8"*, align 8
  %178 = alloca i64, align 8
  %179 = alloca %"struct.Graph::edge"*, align 8
  %180 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %181 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %182 = alloca i8*
  %183 = alloca i32
  %184 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %175, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %184, align 8
  %185 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %176, i32 0, i32 0
  store %"struct.Graph::edge"* %3, %"struct.Graph::edge"** %185, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %177, align 8
  store i64 %1, i64* %178, align 8
  %186 = load %"class.std::vector.8"*, %"class.std::vector.8"** %177, align 8
  %187 = bitcast %"class.std::vector.8"* %186 to %"struct.std::_Vector_base.9"*
  %188 = load i64, i64* %178, align 8
  %189 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %187, i64 %188)
  store %"struct.Graph::edge"* %189, %"struct.Graph::edge"** %179, align 8
  %190 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %180 to i8*
  %191 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %175 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %190, i8* %191, i64 8, i32 8, i1 false)
  %192 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %181 to i8*
  %193 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %192, i8* %193, i64 8, i32 8, i1 false)
  %194 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %179, align 8
  %195 = bitcast %"class.std::vector.8"* %186 to %"struct.std::_Vector_base.9"*
  %196 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %195) #3
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %180, i32 0, i32 0
  %198 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %197, align 8
  %199 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %181, i32 0, i32 0
  %200 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %199, align 8
  br label %19

; <label>:201:                                    ; preds = %96, %81
  %202 = load i8*, i8** %27, align 8
  %203 = load i32, i32* %28, align 4
  %204 = insertvalue { i8*, i32 } undef, i8* %202, 0
  %205 = insertvalue { i8*, i32 } %204, i32 %203, 1
  br label %96

; <label>:206:                                    ; preds = %158, %131
  br label %158
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  call void @_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_(%"struct.Graph::edge"* %7, %"struct.Graph::edge"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Graph::edge"* %16, %"struct.Graph::edge"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %20, %"struct.Graph::edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %11, i32 0, i32 0
  %25 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %24, align 8
  %26 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  store %"struct.Graph::edge"* %26, %"struct.Graph::edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %31 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %33 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %12, i32 0, i32 0
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %34, align 8
  %36 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Graph::edge"* %31, %"struct.Graph::edge"* %33, %"struct.Graph::edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %36, %"struct.Graph::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %39 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %38, align 8
  ret %"struct.Graph::edge"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.266
  %6 = load i32, i32* @y.267
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1523915567, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1523915567, label %18
    i32 1178290167, label %26
    i32 479343480, label %61
    i32 1464427460, label %63
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1178290167, i32 1464427460
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %31, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %27, %"struct.Graph::edge"** dereferenceable(8) %32) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %27, i32 0, i32 0
  %34 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %33, align 8
  store %"struct.Graph::edge"* %34, %"struct.Graph::edge"** %2
  %35 = load i32, i32* @x.266
  %36 = load i32, i32* @y.267
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 479343480, i32 1464427460
  store i32 %60, i32* %14
  br label %72

; <label>:61:                                     ; preds = %15
  %62 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %62

; <label>:63:                                     ; preds = %15
  %64 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %65 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %65, align 8
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %65, align 8
  %67 = bitcast %"class.std::vector.8"* %66 to %"struct.std::_Vector_base.9"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %68, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %64, %"struct.Graph::edge"** dereferenceable(8) %69) #3
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %64, i32 0, i32 0
  %71 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %70, align 8
  store i32 1178290167, i32* %14
  br label %72

; <label>:72:                                     ; preds = %63, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %2, %"struct.Graph::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.270
  %8 = load i32, i32* @y.271
  %9 = sub i32 %7, 2079173749
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 2079173749
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -456775588, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %66
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -456775588, label %21
    i32 -965346603, label %29
    i32 1077732856, label %54
    i32 -604232136, label %56
  ]

; <label>:20:                                     ; preds = %18
  br label %66

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -965346603, i32 -604232136
  store i32 %28, i32* %17
  br label %66

; <label>:29:                                     ; preds = %18
  %30 = alloca %"struct.Graph::edge"*, align 8
  %31 = alloca %"struct.Graph::edge"*, align 8
  %32 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %30, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %31, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %32, align 8
  %33 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %30, align 8
  %34 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %33)
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %31, align 8
  %36 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %35)
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %38 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %34, %"struct.Graph::edge"* %36, %"struct.Graph::edge"* %37)
  store %"struct.Graph::edge"* %38, %"struct.Graph::edge"** %4
  %39 = load i32, i32* @x.270
  %40 = load i32, i32* @y.271
  %41 = sub i32 %39, 621170785
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 621170785
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 1077732856, i32 -604232136
  store i32 %53, i32* %17
  br label %66

; <label>:54:                                     ; preds = %18
  %55 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  ret %"struct.Graph::edge"* %55

; <label>:56:                                     ; preds = %18
  %57 = alloca %"struct.Graph::edge"*, align 8
  %58 = alloca %"struct.Graph::edge"*, align 8
  %59 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %57, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %58, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %59, align 8
  %60 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %57, align 8
  %61 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %60)
  %62 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %58, align 8
  %63 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %62)
  %64 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %59, align 8
  %65 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %61, %"struct.Graph::edge"* %63, %"struct.Graph::edge"* %64)
  store i32 -965346603, i32* %17
  br label %66

; <label>:66:                                     ; preds = %56, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %11)
  ret %"struct.Graph::edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %3 = alloca %"struct.Graph::edge"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %3, align 8
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_(%"struct.Graph::edge"* %5, %"struct.Graph::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.278
  %6 = load i32, i32* @y.279
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1992665436, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %72
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1992665436, label %18
    i32 -1056085754, label %26
    i32 583299823, label %56
    i32 -215194006, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %72

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1056085754, i32 -215194006
  store i32 %25, i32* %14
  br label %72

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %27, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %31, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %32, align 8
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %29 to i8*
  %34 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %33, i8* %34, i64 8, i32 8, i1 false)
  %35 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %30 to i8*
  %36 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %35, i8* %36, i64 8, i32 8, i1 false)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %29, i32 0, i32 0
  %38 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %37, align 8
  %39 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %30, i32 0, i32 0
  %40 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %39, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Graph::edge"* %38, %"struct.Graph::edge"* %40)
  %41 = load i32, i32* @x.278
  %42 = load i32, i32* @y.279
  %43 = add i32 %41, -1268891055
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1268891055
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 583299823, i32 -215194006
  store i32 %55, i32* %14
  br label %72

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %58, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %62, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %59, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %63, align 8
  %64 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %60 to i8*
  %65 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %58 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %64, i8* %65, i64 8, i32 8, i1 false)
  %66 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %61 to i8*
  %67 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %66, i8* %67, i64 8, i32 8, i1 false)
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %60, i32 0, i32 0
  %69 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %68, align 8
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %61, i32 0, i32 0
  %71 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %70, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Graph::edge"* %69, %"struct.Graph::edge"* %71)
  store i32 -1056085754, i32* %14
  br label %72

; <label>:72:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"struct.Graph::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  %19 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %23 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %24 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %11, i32 0, i32 0
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %27, align 8
  %29 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::edge"* %28)
  %30 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"* %19, %"struct.Graph::edge"* %24, %"struct.Graph::edge"* %29)
  store %"struct.Graph::edge"* %30, %"struct.Graph::edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %4, %"struct.Graph::edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %32 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %31, align 8
  ret %"struct.Graph::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.284
  %6 = load i32, i32* @y.285
  %7 = add i32 %5, 1379043564
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1379043564
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 482887133, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 482887133, label %19
    i32 856263101, label %27
    i32 -172289231, label %62
    i32 -99006688, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 856263101, i32 -99006688
  store i32 %26, i32* %15
  br label %73

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %29, i32 0, i32 0
  %34 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %33, align 8
  %35 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::edge"* %34)
  store %"struct.Graph::edge"* %35, %"struct.Graph::edge"** %2
  %36 = load i32, i32* @x.284
  %37 = load i32, i32* @y.285
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 -172289231, i32 -99006688
  store i32 %61, i32* %15
  br label %73

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %65, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %66 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %66, i32 0, i32 0
  %71 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %70, align 8
  %72 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::edge"* %71)
  store i32 856263101, i32* %15
  br label %73

; <label>:73:                                     ; preds = %64, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"*, %"struct.Graph::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.286
  %6 = load i32, i32* @y.287
  %7 = sub i32 %5, 2068968362
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2068968362
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 622632976, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 622632976, label %19
    i32 1388321199, label %39
    i32 453130731, label %60
    i32 -390329978, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1388321199, i32 -390329978
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %41 = alloca %"struct.Graph::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %41, align 8
  %45 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %44, align 8
  store %"struct.Graph::edge"* %45, %"struct.Graph::edge"** %43, align 8
  %46 = load i32, i32* @x.286
  %47 = load i32, i32* @y.287
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 453130731, i32 -390329978
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %63 = alloca %"struct.Graph::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %62, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %64, i32 0, i32 0
  %66 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %63, align 8
  %67 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %66, align 8
  store %"struct.Graph::edge"* %67, %"struct.Graph::edge"** %65, align 8
  store i32 1388321199, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::edge"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %2) #3
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.290
  %6 = load i32, i32* @y.291
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 528400453, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %51
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 528400453, label %18
    i32 -2106375614, label %26
    i32 1280877061, label %45
    i32 -1683241678, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %51

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -2106375614, i32 -1683241678
  store i32 %25, i32* %14
  br label %51

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  store %"struct.Graph::edge"** %29, %"struct.Graph::edge"*** %2
  %30 = load i32, i32* @x.290
  %31 = load i32, i32* @y.291
  %32 = sub i32 %30, 577499440
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 577499440
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1280877061, i32 -1683241678
  store i32 %44, i32* %14
  br label %51

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %2
  ret %"struct.Graph::edge"** %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %48, align 8
  %49 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %48, align 8
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %49, i32 0, i32 0
  store i32 -2106375614, i32* %14
  br label %51

; <label>:51:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %7)
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %9)
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %11)
  %13 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %12)
  ret %"struct.Graph::edge"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"*) #5 comdat {
  %2 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %2, align 8
  %3 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %2, align 8
  %4 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %3)
  ret %"struct.Graph::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #5 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %7, %"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9)
  ret %"struct.Graph::edge"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %11 = call %"class.std::vector.8"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.8"* %8, i64 %9, %"class.std::vector.8"* dereferenceable(24) %10)
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %109, %3
  %12 = load i64, i64* %5, align 8
  %13 = icmp ugt i64 %12, 0
  br i1 %13, label %14, label %120

; <label>:14:                                     ; preds = %11
  %15 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %16 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %15) #3
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"* %16, %"class.std::vector.8"* dereferenceable(24) %17)
          to label %18 unwind label %110

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.304
  %20 = load i32, i32* @y.305
  %21 = sub i32 %19, 991682130
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 991682130
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %137

; <label>:45:                                     ; preds = %18, %137
  %46 = load i32, i32* @x.304
  %47 = load i32, i32* @y.305
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %137

; <label>:59:                                     ; preds = %45
  br label %60

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.304
  %62 = load i32, i32* @y.305
  %63 = add i32 %61, -232079469
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -232079469
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %138

; <label>:75:                                     ; preds = %60, %138
  %76 = load i64, i64* %5, align 8
  %77 = sub i64 %76, -7828192514052425986
  %78 = add i64 %77, -1
  %79 = add i64 %78, -7828192514052425986
  %80 = add i64 %76, -1
  store i64 %79, i64* %5, align 8
  %81 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %82 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %81, i32 1
  store %"class.std::vector.8"* %82, %"class.std::vector.8"** %7, align 8
  %83 = load i32, i32* @x.304
  %84 = load i32, i32* @y.305
  %85 = sub i32 %83, 1632207628
  %86 = sub i32 %85, 1
  %87 = add i32 %86, 1632207628
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %138

; <label>:109:                                    ; preds = %75
  br label %11

; <label>:110:                                    ; preds = %14
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %8, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %9, align 4
  br label %114

; <label>:114:                                    ; preds = %110
  %115 = load i8*, i8** %8, align 8
  %116 = call i8* @__cxa_begin_catch(i8* %115) #3
  %117 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %118 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %117, %"class.std::vector.8"* %118)
          to label %119 unwind label %122

; <label>:119:                                    ; preds = %114
  invoke void @__cxa_rethrow() #12
          to label %136 unwind label %122

; <label>:120:                                    ; preds = %11
  %121 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %121

; <label>:122:                                    ; preds = %119, %114
  %123 = landingpad { i8*, i32 }
          cleanup
  %124 = extractvalue { i8*, i32 } %123, 0
  store i8* %124, i8** %8, align 8
  %125 = extractvalue { i8*, i32 } %123, 1
  store i32 %125, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %126 unwind label %133

; <label>:126:                                    ; preds = %122
  br label %128
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:128:                                    ; preds = %126
  %129 = load i8*, i8** %8, align 8
  %130 = load i32, i32* %9, align 4
  %131 = insertvalue { i8*, i32 } undef, i8* %129, 0
  %132 = insertvalue { i8*, i32 } %131, i32 %130, 1
  resume { i8*, i32 } %132

; <label>:133:                                    ; preds = %122
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #11
  unreachable

; <label>:136:                                    ; preds = %119
  unreachable

; <label>:137:                                    ; preds = %45, %18
  br label %45

; <label>:138:                                    ; preds = %75, %60
  %139 = load i64, i64* %5, align 8
  %140 = add i64 %139, -7581764783003927610
  %141 = sub i64 %140, -1
  %142 = sub i64 %141, -7581764783003927610
  %143 = sub i64 %139, -1
  %144 = mul i64 %142, -1
  %145 = sub i64 0, 7736353497565155277
  %146 = sub i64 %145, %139
  %147 = add i64 %146, 7736353497565155277
  %148 = sub i64 0, %139
  %149 = sub i64 0, -1
  %150 = sub i64 %147, %149
  %151 = add i64 %147, -1
  %152 = shl i64 %139, -1
  %153 = shl i64 %139, -1
  %154 = sub i64 0, %139
  %155 = add i64 0, %154
  %156 = sub i64 0, %139
  %157 = sub i64 0, -1
  %158 = sub i64 %155, %157
  %159 = add i64 %155, -1
  %160 = sub i64 %139, -8893427045071294565
  %161 = sub i64 %160, -1
  %162 = add i64 %161, -8893427045071294565
  %163 = sub i64 %139, -1
  %164 = mul i64 %162, -1
  %165 = sub i64 0, -1
  %166 = add i64 %139, %165
  %167 = sub i64 %139, -1
  %168 = mul i64 %166, -1
  %169 = add i64 %139, 4566904263027062872
  %170 = sub i64 %169, -1
  %171 = sub i64 %170, 4566904263027062872
  %172 = sub i64 %139, -1
  %173 = mul i64 %171, -1
  %174 = shl i64 %139, -1
  %175 = sub i64 0, 1049074487895953350
  %176 = sub i64 %175, %139
  %177 = add i64 %176, 1049074487895953350
  %178 = sub i64 0, %139
  %179 = sub i64 %177, -2861235683439901035
  %180 = add i64 %179, -1
  %181 = add i64 %180, -2861235683439901035
  %182 = add i64 %177, -1
  %183 = sub i64 %139, -2503512150540063583
  %184 = add i64 %183, -1
  %185 = add i64 %184, -2503512150540063583
  %186 = add i64 %139, -1
  store i64 %185, i64* %5, align 8
  %187 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %188 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %187, i32 1
  store %"class.std::vector.8"* %188, %"class.std::vector.8"** %7, align 8
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i1
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i64**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.312
  %11 = load i32, i32* @y.313
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1998402814, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %199
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1998402814, label %23
    i32 1127712194, label %43
    i32 662305432, label %83
    i32 1934007508, label %86
    i32 1636520034, label %114
    i32 -1869569101, label %132
    i32 -1502132567, label %133
    i32 -562105483, label %137
    i32 1396973060, label %164
    i32 1599481977, label %181
    i32 -909716760, label %183
    i32 -2024879064, label %192
    i32 -1561618896, label %196
  ]

; <label>:22:                                     ; preds = %20
  br label %199

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 false, true
  %29 = and i1 %26, false
  %30 = and i1 %24, %28
  %31 = and i1 %27, false
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 false, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 1127712194, i32 -909716760
  store i32 %42, i32* %19
  br label %199

; <label>:43:                                     ; preds = %20
  %44 = alloca i64*, align 8
  store i64** %44, i64*** %7
  %45 = alloca i64*, align 8
  store i64** %45, i64*** %6
  %46 = alloca i64*, align 8
  store i64** %46, i64*** %5
  %47 = load volatile i64**, i64*** %6
  store i64* %0, i64** %47, align 8
  %48 = load volatile i64**, i64*** %5
  store i64* %1, i64** %48, align 8
  %49 = load volatile i64**, i64*** %6
  %50 = load i64*, i64** %49, align 8
  %51 = load i64, i64* %50, align 8
  %52 = load volatile i64**, i64*** %5
  %53 = load i64*, i64** %52, align 8
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %4
  %56 = load i32, i32* @x.312
  %57 = load i32, i32* @y.313
  %58 = sub i32 %56, 13731566
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 13731566
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 662305432, i32 -909716760
  store i32 %82, i32* %19
  br label %199

; <label>:83:                                     ; preds = %20
  %84 = load volatile i1, i1* %4
  %85 = select i1 %84, i32 1934007508, i32 -1502132567
  store i32 %85, i32* %19
  br label %199

; <label>:86:                                     ; preds = %20
  %87 = load i32, i32* @x.312
  %88 = load i32, i32* @y.313
  %89 = add i32 %87, -219475321
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -219475321
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 1636520034, i32 -2024879064
  store i32 %113, i32* %19
  br label %199

; <label>:114:                                    ; preds = %20
  %115 = load volatile i64**, i64*** %5
  %116 = load i64*, i64** %115, align 8
  %117 = load volatile i64**, i64*** %7
  store i64* %116, i64** %117, align 8
  %118 = load i32, i32* @x.312
  %119 = load i32, i32* @y.313
  %120 = sub i32 0, 1
  %121 = add i32 %118, %120
  %122 = sub i32 %118, 1
  %123 = mul i32 %118, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %119, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 -1869569101, i32 -2024879064
  store i32 %131, i32* %19
  br label %199

; <label>:132:                                    ; preds = %20
  store i32 -562105483, i32* %19
  br label %199

; <label>:133:                                    ; preds = %20
  %134 = load volatile i64**, i64*** %6
  %135 = load i64*, i64** %134, align 8
  %136 = load volatile i64**, i64*** %7
  store i64* %135, i64** %136, align 8
  store i32 -562105483, i32* %19
  br label %199

; <label>:137:                                    ; preds = %20
  %138 = load i32, i32* @x.312
  %139 = load i32, i32* @y.313
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 1396973060, i32 -1561618896
  store i32 %163, i32* %19
  br label %199

; <label>:164:                                    ; preds = %20
  %165 = load volatile i64**, i64*** %7
  %166 = load i64*, i64** %165, align 8
  store i64* %166, i64** %3
  %167 = load i32, i32* @x.312
  %168 = load i32, i32* @y.313
  %169 = sub i32 0, 1
  %170 = add i32 %167, %169
  %171 = sub i32 %167, 1
  %172 = mul i32 %167, %170
  %173 = urem i32 %172, 2
  %174 = icmp eq i32 %173, 0
  %175 = icmp slt i32 %168, 10
  %176 = and i1 %174, %175
  %177 = xor i1 %174, %175
  %178 = or i1 %176, %177
  %179 = or i1 %174, %175
  %180 = select i1 %178, i32 1599481977, i32 -1561618896
  store i32 %180, i32* %19
  br label %199

; <label>:181:                                    ; preds = %20
  %182 = load volatile i64*, i64** %3
  ret i64* %182

; <label>:183:                                    ; preds = %20
  %184 = alloca i64*, align 8
  %185 = alloca i64*, align 8
  %186 = alloca i64*, align 8
  store i64* %0, i64** %185, align 8
  store i64* %1, i64** %186, align 8
  %187 = load i64*, i64** %185, align 8
  %188 = load i64, i64* %187, align 8
  %189 = load i64*, i64** %186, align 8
  %190 = load i64, i64* %189, align 8
  %191 = icmp ult i64 %188, %190
  store i32 1127712194, i32* %19
  br label %199

; <label>:192:                                    ; preds = %20
  %193 = load volatile i64**, i64*** %5
  %194 = load i64*, i64** %193, align 8
  %195 = load volatile i64**, i64*** %7
  store i64* %194, i64** %195, align 8
  store i32 1636520034, i32* %19
  br label %199

; <label>:196:                                    ; preds = %20
  %197 = load volatile i64**, i64*** %7
  %198 = load i64*, i64** %197, align 8
  store i32 1396973060, i32* %19
  br label %199

; <label>:199:                                    ; preds = %196, %192, %183, %164, %137, %133, %132, %114, %86, %83, %43, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.318
  %5 = load i32, i32* @y.319
  %6 = add i32 %4, -1557154728
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1557154728
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1529169669, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1529169669, label %18
    i32 -114659457, label %38
    i32 2125213063, label %56
    i32 -109978906, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -114659457, i32 -109978906
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %39, align 8
  %41 = load i32, i32* @x.318
  %42 = load i32, i32* @y.319
  %43 = add i32 %41, -1672446162
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1672446162
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 2125213063, i32 -109978906
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %58, align 8
  store i32 -114659457, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.320
  %7 = load i32, i32* @y.321
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1182658678, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1182658678, label %19
    i32 -2074726848, label %39
    i32 -130627290, label %60
    i32 -1382107655, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2074726848, i32 -1382107655
  store i32 %38, i32* %15
  br label %69

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.5"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  %43 = bitcast %"class.std::allocator.5"* %42 to %"class.__gnu_cxx::new_allocator.6"*
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %43, i64 %44, i8* null)
  store %"class.std::vector.8"* %45, %"class.std::vector.8"** %3
  %46 = load i32, i32* @x.320
  %47 = load i32, i32* @y.321
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -130627290, i32 -1382107655
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.5"*, align 8
  %64 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %63, align 8
  %66 = bitcast %"class.std::allocator.5"* %65 to %"class.__gnu_cxx::new_allocator.6"*
  %67 = load i64, i64* %64, align 8
  %68 = call %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %66, i64 %67, i8* null)
  store i32 -2074726848, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1756816266, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1756816266, label %16
    i32 434236410, label %21
    i32 219873937, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 434236410, i32 219873937
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"* %2, %"class.std::vector.8"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  ret %"class.std::vector.8"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1), %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.326
  %7 = load i32, i32* @y.327
  %8 = add i32 %6, -151360176
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -151360176
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1373616760, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1373616760, label %20
    i32 1282216318, label %40
    i32 1767828144, label %75
    i32 1868349880, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1282216318, i32 1868349880
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.5"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %41, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %41, align 8
  %45 = bitcast %"class.std::allocator.5"* %44 to %"class.__gnu_cxx::new_allocator.6"*
  %46 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %45, %"class.std::vector.8"* %46, i64 %47)
  %48 = load i32, i32* @x.326
  %49 = load i32, i32* @y.327
  %50 = add i32 %48, -226439997
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, -226439997
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1767828144, i32 1868349880
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.5"*, align 8
  %78 = alloca %"class.std::vector.8"*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %77, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %77, align 8
  %81 = bitcast %"class.std::allocator.5"* %80 to %"class.__gnu_cxx::new_allocator.6"*
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %81, %"class.std::vector.8"* %82, i64 %83)
  store i32 1282216318, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::vector.8"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %9 = bitcast %"class.std::vector.8"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Graph4edgeEEC2Ev(%"class.std::allocator.10"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEEC2Ev(%"class.std::allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.336
  %5 = load i32, i32* @y.337
  %6 = add i32 %4, -1786011510
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1786011510
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 522156406, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 522156406, label %18
    i32 200657861, label %38
    i32 -708851823, label %57
    i32 -1401492931, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 200657861, i32 -1401492931
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %39, align 8
  %40 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %39, align 8
  %41 = bitcast %"class.std::allocator.10"* %40 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %41) #3
  %42 = load i32, i32* @x.336
  %43 = load i32, i32* @y.337
  %44 = add i32 %42, 1105616214
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1105616214
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -708851823, i32 -1401492931
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %59, align 8
  %60 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %59, align 8
  %61 = bitcast %"class.std::allocator.10"* %60 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %61) #3
  store i32 200657861, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.338
  %5 = load i32, i32* @y.339
  %6 = sub i32 %4, -152292260
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -152292260
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 516480815, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 516480815, label %18
    i32 -590955477, label %38
    i32 3878546, label %56
    i32 34139934, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -590955477, i32 34139934
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %39, align 8
  %41 = load i32, i32* @x.338
  %42 = load i32, i32* @y.339
  %43 = add i32 %41, -1553435997
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1553435997
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 3878546, i32 34139934
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %58, align 8
  store i32 -590955477, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.340
  %3 = load i32, i32* @y.341
  %4 = sub i32 %2, 1814650647
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1814650647
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %132

; <label>:16:                                     ; preds = %1, %132
  %17 = alloca %"struct.std::_Vector_base.4"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %17, align 8
  %20 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %17, align 8
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %22, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %24, i32 0, i32 2
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %25, align 8
  %27 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %27, i32 0, i32 0
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %30 = ptrtoint %"class.std::vector.8"* %26 to i64
  %31 = ptrtoint %"class.std::vector.8"* %29 to i64
  %32 = sub i64 %30, 4032347001864323263
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 4032347001864323263
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 24
  %37 = load i32, i32* @x.340
  %38 = load i32, i32* @y.341
  %39 = sub i32 %37, 2143212517
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 2143212517
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %132

; <label>:51:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %20, %"class.std::vector.8"* %23, i64 %36)
          to label %52 unwind label %83

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.340
  %54 = load i32, i32* @y.341
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  br i1 %64, label %66, label %238

; <label>:66:                                     ; preds = %52, %238
  %67 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %67) #3
  %68 = load i32, i32* @x.340
  %69 = load i32, i32* @y.341
  %70 = sub i32 %68, -741067332
  %71 = sub i32 %70, 1
  %72 = add i32 %71, -741067332
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = and i1 %76, %77
  %79 = xor i1 %76, %77
  %80 = or i1 %78, %79
  %81 = or i1 %76, %77
  br i1 %80, label %82, label %238

; <label>:82:                                     ; preds = %66
  ret void

; <label>:83:                                     ; preds = %51
  %84 = landingpad { i8*, i32 }
          catch i8* null
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %18, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %19, align 4
  %87 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %87) #3
  br label %88

; <label>:88:                                     ; preds = %83
  %89 = load i32, i32* @x.340
  %90 = load i32, i32* @y.341
  %91 = sub i32 %89, 2102832713
  %92 = sub i32 %91, 1
  %93 = add i32 %92, 2102832713
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %240

; <label>:103:                                    ; preds = %88, %240
  %104 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %104) #11
  %105 = load i32, i32* @x.340
  %106 = load i32, i32* @y.341
  %107 = add i32 %105, 1861549062
  %108 = sub i32 %107, 1
  %109 = sub i32 %108, 1861549062
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 false, true
  %118 = and i1 %115, false
  %119 = and i1 %113, %117
  %120 = and i1 %116, false
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 false, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  br i1 %129, label %131, label %240

; <label>:131:                                    ; preds = %103
  unreachable

; <label>:132:                                    ; preds = %16, %1
  %133 = alloca %"struct.std::_Vector_base.4"*, align 8
  %134 = alloca i8*
  %135 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %133, align 8
  %136 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %133, align 8
  %137 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %137, i32 0, i32 0
  %139 = load %"class.std::vector.8"*, %"class.std::vector.8"** %138, align 8
  %140 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %136, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %140, i32 0, i32 2
  %142 = load %"class.std::vector.8"*, %"class.std::vector.8"** %141, align 8
  %143 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %136, i32 0, i32 0
  %144 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %143, i32 0, i32 0
  %145 = load %"class.std::vector.8"*, %"class.std::vector.8"** %144, align 8
  %146 = ptrtoint %"class.std::vector.8"* %142 to i64
  %147 = ptrtoint %"class.std::vector.8"* %145 to i64
  %148 = add i64 0, 931223900083458243
  %149 = sub i64 %148, %146
  %150 = sub i64 %149, 931223900083458243
  %151 = sub i64 0, %146
  %152 = sub i64 0, %150
  %153 = sub i64 0, %147
  %154 = add i64 %152, %153
  %155 = sub i64 0, %154
  %156 = add i64 %150, %147
  %157 = sub i64 %146, -2569477896268610760
  %158 = sub i64 %157, %147
  %159 = add i64 %158, -2569477896268610760
  %160 = sub i64 %146, %147
  %161 = mul i64 %159, %147
  %162 = sub i64 0, %146
  %163 = add i64 0, %162
  %164 = sub i64 0, %146
  %165 = sub i64 0, %163
  %166 = sub i64 0, %147
  %167 = add i64 %165, %166
  %168 = sub i64 0, %167
  %169 = add i64 %163, %147
  %170 = add i64 0, -6361399156265732031
  %171 = sub i64 %170, %146
  %172 = sub i64 %171, -6361399156265732031
  %173 = sub i64 0, %146
  %174 = sub i64 0, %147
  %175 = sub i64 %172, %174
  %176 = add i64 %172, %147
  %177 = add i64 0, -328817102692022070
  %178 = sub i64 %177, %146
  %179 = sub i64 %178, -328817102692022070
  %180 = sub i64 0, %146
  %181 = sub i64 0, %179
  %182 = sub i64 0, %147
  %183 = add i64 %181, %182
  %184 = sub i64 0, %183
  %185 = add i64 %179, %147
  %186 = add i64 %146, -2129119162094859765
  %187 = sub i64 %186, %147
  %188 = sub i64 %187, -2129119162094859765
  %189 = sub i64 %146, %147
  %190 = mul i64 %188, %147
  %191 = sub i64 0, %146
  %192 = add i64 0, %191
  %193 = sub i64 0, %146
  %194 = add i64 %192, -7943567515839478287
  %195 = add i64 %194, %147
  %196 = sub i64 %195, -7943567515839478287
  %197 = add i64 %192, %147
  %198 = sub i64 %146, -3990936246405197225
  %199 = sub i64 %198, %147
  %200 = add i64 %199, -3990936246405197225
  %201 = sub i64 %146, %147
  %202 = shl i64 %200, 24
  %203 = sub i64 0, 24
  %204 = add i64 %200, %203
  %205 = sub i64 %200, 24
  %206 = mul i64 %204, 24
  %207 = shl i64 %200, 24
  %208 = sub i64 %200, -5317383839660047191
  %209 = sub i64 %208, 24
  %210 = add i64 %209, -5317383839660047191
  %211 = sub i64 %200, 24
  %212 = mul i64 %210, 24
  %213 = add i64 0, 8899641285455724600
  %214 = sub i64 %213, %200
  %215 = sub i64 %214, 8899641285455724600
  %216 = sub i64 0, %200
  %217 = add i64 %215, -7142213704842034404
  %218 = add i64 %217, 24
  %219 = sub i64 %218, -7142213704842034404
  %220 = add i64 %215, 24
  %221 = sub i64 0, %200
  %222 = add i64 0, %221
  %223 = sub i64 0, %200
  %224 = add i64 %222, 6332815146023054354
  %225 = add i64 %224, 24
  %226 = sub i64 %225, 6332815146023054354
  %227 = add i64 %222, 24
  %228 = sub i64 0, 2568185541823746125
  %229 = sub i64 %228, %200
  %230 = add i64 %229, 2568185541823746125
  %231 = sub i64 0, %200
  %232 = sub i64 0, %230
  %233 = sub i64 0, 24
  %234 = add i64 %232, %233
  %235 = sub i64 0, %234
  %236 = add i64 %230, 24
  %237 = sdiv exact i64 %200, 24
  br label %16

; <label>:238:                                    ; preds = %66, %52
  %239 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %239) #3
  br label %66

; <label>:240:                                    ; preds = %103, %88
  %241 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %241) #11
  br label %103
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.346
  %5 = load i32, i32* @y.347
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -328072597, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -328072597, label %17
    i32 -1019676567, label %37
    i32 811496890, label %55
    i32 -429367485, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1019676567, i32 -429367485
  store i32 %36, i32* %13
  br label %59

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %40 = load i32, i32* @x.346
  %41 = load i32, i32* @y.347
  %42 = sub i32 %40, -1052051238
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1052051238
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 811496890, i32 -429367485
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret void

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %57, align 8
  store i32 -1019676567, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.352
  %3 = load i32, i32* @y.353
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %102

; <label>:15:                                     ; preds = %1, %102
  %16 = alloca %"struct.std::_Vector_base"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %16, align 8
  %19 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %16, align 8
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 0
  %22 = load i32*, i32** %21, align 8
  %23 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %23, i32 0, i32 2
  %25 = load i32*, i32** %24, align 8
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = ptrtoint i32* %25 to i64
  %30 = ptrtoint i32* %28 to i64
  %31 = sub i64 %29, 1231662862849227683
  %32 = sub i64 %31, %30
  %33 = add i64 %32, 1231662862849227683
  %34 = sub i64 %29, %30
  %35 = sdiv exact i64 %33, 4
  %36 = load i32, i32* @x.352
  %37 = load i32, i32* @y.353
  %38 = add i32 %36, 1065700656
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1065700656
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  br i1 %60, label %62, label %102

; <label>:62:                                     ; preds = %15
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %19, i32* %22, i64 %35)
          to label %63 unwind label %95

; <label>:63:                                     ; preds = %62
  %64 = load i32, i32* @x.352
  %65 = load i32, i32* @y.353
  %66 = sub i32 %64, -194892592
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -194892592
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  br i1 %76, label %78, label %180

; <label>:78:                                     ; preds = %63, %180
  %79 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79) #3
  %80 = load i32, i32* @x.352
  %81 = load i32, i32* @y.353
  %82 = add i32 %80, -1022821098
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -1022821098
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %180

; <label>:94:                                     ; preds = %78
  ret void

; <label>:95:                                     ; preds = %62
  %96 = landingpad { i8*, i32 }
          catch i8* null
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %17, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %18, align 4
  %99 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %99) #3
  br label %100

; <label>:100:                                    ; preds = %95
  %101 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %101) #11
  unreachable

; <label>:102:                                    ; preds = %15, %1
  %103 = alloca %"struct.std::_Vector_base"*, align 8
  %104 = alloca i8*
  %105 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %103, align 8
  %106 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %103, align 8
  %107 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %107, i32 0, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %110, i32 0, i32 2
  %112 = load i32*, i32** %111, align 8
  %113 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %106, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %113, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  %116 = ptrtoint i32* %112 to i64
  %117 = ptrtoint i32* %115 to i64
  %118 = sub i64 %116, 4158151280796353622
  %119 = sub i64 %118, %117
  %120 = add i64 %119, 4158151280796353622
  %121 = sub i64 %116, %117
  %122 = mul i64 %120, %117
  %123 = shl i64 %116, %117
  %124 = add i64 0, -7417138063325097756
  %125 = sub i64 %124, %116
  %126 = sub i64 %125, -7417138063325097756
  %127 = sub i64 0, %116
  %128 = sub i64 0, %117
  %129 = sub i64 %126, %128
  %130 = add i64 %126, %117
  %131 = add i64 %116, 4356069181301360137
  %132 = sub i64 %131, %117
  %133 = sub i64 %132, 4356069181301360137
  %134 = sub i64 %116, %117
  %135 = add i64 0, 5549828516683553842
  %136 = sub i64 %135, %133
  %137 = sub i64 %136, 5549828516683553842
  %138 = sub i64 0, %133
  %139 = sub i64 %137, -7996765497524681415
  %140 = add i64 %139, 4
  %141 = add i64 %140, -7996765497524681415
  %142 = add i64 %137, 4
  %143 = sub i64 %133, -810958821590648036
  %144 = sub i64 %143, 4
  %145 = add i64 %144, -810958821590648036
  %146 = sub i64 %133, 4
  %147 = mul i64 %145, 4
  %148 = shl i64 %133, 4
  %149 = sub i64 %133, -8503543532472791978
  %150 = sub i64 %149, 4
  %151 = add i64 %150, -8503543532472791978
  %152 = sub i64 %133, 4
  %153 = mul i64 %151, 4
  %154 = sub i64 %133, 3330810411167200910
  %155 = sub i64 %154, 4
  %156 = add i64 %155, 3330810411167200910
  %157 = sub i64 %133, 4
  %158 = mul i64 %156, 4
  %159 = sub i64 %133, 4429306891616571901
  %160 = sub i64 %159, 4
  %161 = add i64 %160, 4429306891616571901
  %162 = sub i64 %133, 4
  %163 = mul i64 %161, 4
  %164 = sub i64 0, %133
  %165 = add i64 0, %164
  %166 = sub i64 0, %133
  %167 = sub i64 %165, 8521705971416776517
  %168 = add i64 %167, 4
  %169 = add i64 %168, 8521705971416776517
  %170 = add i64 %165, 4
  %171 = sub i64 0, %133
  %172 = add i64 0, %171
  %173 = sub i64 0, %133
  %174 = sub i64 0, %172
  %175 = sub i64 0, 4
  %176 = add i64 %174, %175
  %177 = sub i64 0, %176
  %178 = add i64 %172, 4
  %179 = sdiv exact i64 %133, 4
  br label %15

; <label>:180:                                    ; preds = %78, %63
  %181 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %181) #3
  br label %78
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.356
  %6 = load i32, i32* @y.357
  %7 = sub i32 %5, -1890870978
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1890870978
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 556003318, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 556003318, label %19
    i32 -866766230, label %27
    i32 2052034617, label %57
    i32 -15057817, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -866766230, i32 -15057817
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load i32, i32* @x.356
  %31 = load i32, i32* @y.357
  %32 = add i32 %30, 579161543
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 579161543
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 2052034617, i32 -15057817
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca i32*, align 8
  %60 = alloca i32*, align 8
  store i32* %0, i32** %59, align 8
  store i32* %1, i32** %60, align 8
  store i32 -866766230, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.358
  %11 = load i32, i32* @y.359
  %12 = add i32 %10, 1651172335
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 1651172335
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -348764890, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %139
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -348764890, label %24
    i32 -631998869, label %32
    i32 -1705318623, label %69
    i32 1550631612, label %72
    i32 1693311647, label %87
    i32 1184828126, label %122
    i32 -1213933432, label %123
    i32 1701130265, label %124
    i32 -1099894174, label %131
  ]

; <label>:23:                                     ; preds = %21
  br label %139

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -631998869, i32 1701130265
  store i32 %31, i32* %20
  br label %139

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base"*, align 8
  %34 = alloca i32*, align 8
  store i32** %34, i32*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %33, align 8
  %36 = load volatile i32**, i32*** %7
  store i32* %1, i32** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %33, align 8
  store %"struct.std::_Vector_base"* %38, %"struct.std::_Vector_base"** %5
  %39 = load volatile i32**, i32*** %7
  %40 = load i32*, i32** %39, align 8
  %41 = icmp ne i32* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.358
  %43 = load i32, i32* @y.359
  %44 = add i32 %42, -2043970235
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -2043970235
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -1705318623, i32 1701130265
  store i32 %68, i32* %20
  br label %139

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 1550631612, i32 -1213933432
  store i32 %71, i32* %20
  br label %139

; <label>:72:                                     ; preds = %21
  %73 = load i32, i32* @x.358
  %74 = load i32, i32* @y.359
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 1693311647, i32 -1099894174
  store i32 %86, i32* %20
  br label %139

; <label>:87:                                     ; preds = %21
  %88 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %89 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %89 to %"class.std::allocator.0"*
  %91 = load volatile i32**, i32*** %7
  %92 = load i32*, i32** %91, align 8
  %93 = load volatile i64*, i64** %6
  %94 = load i64, i64* %93, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %90, i32* %92, i64 %94)
  %95 = load i32, i32* @x.358
  %96 = load i32, i32* @y.359
  %97 = add i32 %95, -1889314414
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, -1889314414
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 1184828126, i32 -1099894174
  store i32 %121, i32* %20
  br label %139

; <label>:122:                                    ; preds = %21
  store i32 -1213933432, i32* %20
  br label %139

; <label>:123:                                    ; preds = %21
  ret void

; <label>:124:                                    ; preds = %21
  %125 = alloca %"struct.std::_Vector_base"*, align 8
  %126 = alloca i32*, align 8
  %127 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %125, align 8
  store i32* %1, i32** %126, align 8
  store i64 %2, i64* %127, align 8
  %128 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %125, align 8
  %129 = load i32*, i32** %126, align 8
  %130 = icmp ne i32* %129, null
  store i32 -631998869, i32* %20
  br label %139

; <label>:131:                                    ; preds = %21
  %132 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %133 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %132, i32 0, i32 0
  %134 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %133 to %"class.std::allocator.0"*
  %135 = load volatile i32**, i32*** %7
  %136 = load i32*, i32** %135, align 8
  %137 = load volatile i64*, i64** %6
  %138 = load i64, i64* %137, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %134, i32* %136, i64 %138)
  store i32 1693311647, i32* %20
  br label %139

; <label>:139:                                    ; preds = %131, %124, %122, %87, %72, %69, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.362
  %7 = load i32, i32* @y.363
  %8 = add i32 %6, -977392916
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -977392916
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1936124300, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %84
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1936124300, label %20
    i32 177887458, label %40
    i32 -543266343, label %75
    i32 1533987370, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %84

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 177887458, i32 1533987370
  store i32 %39, i32* %16
  br label %84

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.0"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %41, align 8
  %45 = bitcast %"class.std::allocator.0"* %44 to %"class.__gnu_cxx::new_allocator.1"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"* %45, i32* %46, i64 %47)
  %48 = load i32, i32* @x.362
  %49 = load i32, i32* @y.363
  %50 = sub i32 %48, -1355533256
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1355533256
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -543266343, i32 1533987370
  store i32 %74, i32* %16
  br label %84

; <label>:75:                                     ; preds = %17
  ret void

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::allocator.0"*, align 8
  %78 = alloca i32*, align 8
  %79 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %77, align 8
  store i32* %1, i32** %78, align 8
  store i64 %2, i64* %79, align 8
  %80 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %77, align 8
  %81 = bitcast %"class.std::allocator.0"* %80 to %"class.__gnu_cxx::new_allocator.1"*
  %82 = load i32*, i32** %78, align 8
  %83 = load i64, i64* %79, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"* %81, i32* %82, i64 %83)
  store i32 177887458, i32* %16
  br label %84

; <label>:84:                                     ; preds = %76, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.1"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.364
  %7 = load i32, i32* @y.365
  %8 = add i32 %6, 1302676293
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1302676293
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -973697905, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -973697905, label %20
    i32 -1078369501, label %28
    i32 573612785, label %50
    i32 -1412718381, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1078369501, i32 -1412718381
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.364
  %36 = load i32, i32* @y.365
  %37 = sub i32 %35, -2103588117
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -2103588117
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 573612785, i32 -1412718381
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %53 = alloca i32*, align 8
  %54 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %52, align 8
  store i32* %1, i32** %53, align 8
  store i64 %2, i64* %54, align 8
  %55 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %52, align 8
  %56 = load i32*, i32** %53, align 8
  %57 = bitcast i32* %56 to i8*
  call void @_ZdlPv(i8* %57) #3
  store i32 -1078369501, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.0"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  %4 = bitcast %"class.std::allocator.0"* %3 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.1"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph*, i32) #5 comdat align 2 {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca i32, align 4
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.Graph*, %struct.Graph** %3, align 8
  %6 = getelementptr inbounds %struct.Graph, %struct.Graph* %5, i32 0, i32 1
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %6, i64 %8) #3
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %7 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::edge"* dereferenceable(24) %6) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"* %5, %"struct.Graph::edge"* dereferenceable(24) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.374
  %7 = load i32, i32* @y.375
  %8 = add i32 %6, 859569173
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 859569173
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1104802162, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %65
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1104802162, label %20
    i32 -71796976, label %28
    i32 -1463064855, label %53
    i32 1059897855, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %65

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -71796976, i32 1059897855
  store i32 %27, i32* %16
  br label %65

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %32 = bitcast %"class.std::vector.3"* %31 to %"struct.std::_Vector_base.4"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %35, i64 %36
  store %"class.std::vector.8"* %37, %"class.std::vector.8"** %3
  %38 = load i32, i32* @x.374
  %39 = load i32, i32* @y.375
  %40 = add i32 %38, -804509625
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -804509625
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -1463064855, i32 1059897855
  store i32 %52, i32* %16
  br label %65

; <label>:53:                                     ; preds = %17
  %54 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %54

; <label>:55:                                     ; preds = %17
  %56 = alloca %"class.std::vector.3"*, align 8
  %57 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %56, align 8
  store i64 %1, i64* %57, align 8
  %58 = load %"class.std::vector.3"*, %"class.std::vector.3"** %56, align 8
  %59 = bitcast %"class.std::vector.3"* %58 to %"struct.std::_Vector_base.4"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"class.std::vector.8"*, %"class.std::vector.8"** %61, align 8
  %63 = load i64, i64* %57, align 8
  %64 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %62, i64 %63
  store i32 -71796976, i32* %16
  br label %65

; <label>:65:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %7, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %5
  %9 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %10 = bitcast %"class.std::vector.8"* %9 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %13, %"struct.Graph::edge"** %4
  %14 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  store %"struct.Graph::edge"* %18, %"struct.Graph::edge"** %3
  %19 = alloca i32
  store i32 -1323179101, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %51
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1323179101, label %23
    i32 1063829878, label %28
    i32 -1551580658, label %46
    i32 328065507, label %50
  ]

; <label>:22:                                     ; preds = %20
  br label %51

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  %25 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %3
  %26 = icmp ne %"struct.Graph::edge"* %24, %25
  %27 = select i1 %26, i32 1063829878, i32 -1551580658
  store i32 %27, i32* %19
  br label %51

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %31 to %"class.std::allocator.10"*
  %33 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %34 = bitcast %"class.std::vector.8"* %33 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %36, align 8
  %38 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %39 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %38) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %32, %"struct.Graph::edge"* %37, %"struct.Graph::edge"* dereferenceable(24) %39)
  %40 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %44, i32 1
  store %"struct.Graph::edge"* %45, %"struct.Graph::edge"** %43, align 8
  store i32 328065507, i32* %19
  br label %51

; <label>:46:                                     ; preds = %20
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %48 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %47) #3
  %49 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"* %49, %"struct.Graph::edge"* dereferenceable(24) %48)
  store i32 328065507, i32* %19
  br label %51

; <label>:50:                                     ; preds = %20
  ret void

; <label>:51:                                     ; preds = %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::edge"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.378
  %6 = load i32, i32* @y.379
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -55109258, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -55109258, label %18
    i32 -1962442880, label %26
    i32 311864292, label %44
    i32 947125061, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1962442880, i32 947125061
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %27, align 8
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %27, align 8
  store %"struct.Graph::edge"* %28, %"struct.Graph::edge"** %2
  %29 = load i32, i32* @x.378
  %30 = load i32, i32* @y.379
  %31 = sub i32 %29, -52740335
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -52740335
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 311864292, i32 947125061
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %47, align 8
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %47, align 8
  store i32 -1962442880, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %2, align 8
  %3 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %2, align 8
  ret %"struct.Graph::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = load i64, i64* %5, align 8
  %14 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %12, i64 %13)
  store %"struct.Graph::edge"* %14, %"struct.Graph::edge"** %6, align 8
  %15 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %15, %"struct.Graph::edge"** %7, align 8
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %17 to %"class.std::allocator.10"*
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %21 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %19, i64 %20
  %22 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %23 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %18, %"struct.Graph::edge"* %21, %"struct.Graph::edge"* dereferenceable(24) %23)
          to label %24 unwind label %82

; <label>:24:                                     ; preds = %2
  %25 = load i32, i32* @x.384
  %26 = load i32, i32* @y.385
  %27 = sub i32 %25, 938770403
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 938770403
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %239

; <label>:39:                                     ; preds = %24, %239
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %7, align 8
  %40 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %41, i32 0, i32 0
  %43 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %42, align 8
  %44 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %45, i32 0, i32 1
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %46, align 8
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %49 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %50 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %49) #3
  %51 = load i32, i32* @x.384
  %52 = load i32, i32* @y.385
  %53 = add i32 %51, 1757750509
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, 1757750509
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %239

; <label>:77:                                     ; preds = %39
  %78 = invoke %"struct.Graph::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::edge"* %43, %"struct.Graph::edge"* %47, %"struct.Graph::edge"* %48, %"class.std::allocator.10"* dereferenceable(1) %50)
          to label %79 unwind label %82

; <label>:79:                                     ; preds = %77
  store %"struct.Graph::edge"* %78, %"struct.Graph::edge"** %7, align 8
  %80 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %81 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %80, i32 1
  store %"struct.Graph::edge"* %81, %"struct.Graph::edge"** %7, align 8
  br label %185

; <label>:82:                                     ; preds = %77, %2
  %83 = load i32, i32* @x.384
  %84 = load i32, i32* @y.385
  %85 = sub i32 %83, 1404452212
  %86 = sub i32 %85, 1
  %87 = add i32 %86, 1404452212
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 false, true
  %96 = and i1 %93, false
  %97 = and i1 %91, %95
  %98 = and i1 %94, false
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 false, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %251

; <label>:109:                                    ; preds = %82, %251
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %8, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %9, align 4
  %113 = load i32, i32* @x.384
  %114 = load i32, i32* @y.385
  %115 = add i32 %113, -2028479882
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -2028479882
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %251

; <label>:127:                                    ; preds = %109
  br label %128

; <label>:128:                                    ; preds = %127
  %129 = load i8*, i8** %8, align 8
  %130 = call i8* @__cxa_begin_catch(i8* %129) #3
  %131 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %132 = icmp ne %"struct.Graph::edge"* %131, null
  br i1 %132, label %173, label %133

; <label>:133:                                    ; preds = %128
  %134 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %134, i32 0, i32 0
  %136 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %135 to %"class.std::allocator.10"*
  %137 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %138 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %10) #3
  %139 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %137, i64 %138
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1) %136, %"struct.Graph::edge"* %139)
          to label %140 unwind label %169

; <label>:140:                                    ; preds = %133
  %141 = load i32, i32* @x.384
  %142 = load i32, i32* @y.385
  %143 = sub i32 0, 1
  %144 = add i32 %141, %143
  %145 = sub i32 %141, 1
  %146 = mul i32 %141, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %142, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %255

; <label>:154:                                    ; preds = %140, %255
  %155 = load i32, i32* @x.384
  %156 = load i32, i32* @y.385
  %157 = sub i32 0, 1
  %158 = add i32 %155, %157
  %159 = sub i32 %155, 1
  %160 = mul i32 %155, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %156, 10
  %164 = and i1 %162, %163
  %165 = xor i1 %162, %163
  %166 = or i1 %164, %165
  %167 = or i1 %162, %163
  br i1 %166, label %168, label %255

; <label>:168:                                    ; preds = %154
  br label %179

; <label>:169:                                    ; preds = %183, %179, %173, %133
  %170 = landingpad { i8*, i32 }
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %8, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %184 unwind label %235

; <label>:173:                                    ; preds = %128
  %174 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %175 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %176 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %177 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %176) #3
  invoke void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %174, %"struct.Graph::edge"* %175, %"class.std::allocator.10"* dereferenceable(1) %177)
          to label %178 unwind label %169

; <label>:178:                                    ; preds = %173
  br label %179

; <label>:179:                                    ; preds = %178, %168
  %180 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %181 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %182 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %180, %"struct.Graph::edge"* %181, i64 %182)
          to label %183 unwind label %169

; <label>:183:                                    ; preds = %179
  invoke void @__cxa_rethrow() #12
          to label %238 unwind label %169

; <label>:184:                                    ; preds = %169
  br label %230

; <label>:185:                                    ; preds = %79
  %186 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %187 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %187, i32 0, i32 0
  %189 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %188, align 8
  %190 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %190, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %191, i32 0, i32 1
  %193 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %192, align 8
  %194 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %195 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %194) #3
  call void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %189, %"struct.Graph::edge"* %193, %"class.std::allocator.10"* dereferenceable(1) %195)
  %196 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %197 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %198, i32 0, i32 0
  %200 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %199, align 8
  %201 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %202, i32 0, i32 2
  %204 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %203, align 8
  %205 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %205, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %206, i32 0, i32 0
  %208 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %207, align 8
  %209 = ptrtoint %"struct.Graph::edge"* %204 to i64
  %210 = ptrtoint %"struct.Graph::edge"* %208 to i64
  %211 = sub i64 %209, 5351525382495628906
  %212 = sub i64 %211, %210
  %213 = add i64 %212, 5351525382495628906
  %214 = sub i64 %209, %210
  %215 = sdiv exact i64 %213, 24
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %196, %"struct.Graph::edge"* %200, i64 %215)
  %216 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %217 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %218, i32 0, i32 0
  store %"struct.Graph::edge"* %216, %"struct.Graph::edge"** %219, align 8
  %220 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %221 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %222, i32 0, i32 1
  store %"struct.Graph::edge"* %220, %"struct.Graph::edge"** %223, align 8
  %224 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %225 = load i64, i64* %5, align 8
  %226 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %224, i64 %225
  %227 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %228, i32 0, i32 2
  store %"struct.Graph::edge"* %226, %"struct.Graph::edge"** %229, align 8
  ret void

; <label>:230:                                    ; preds = %184
  %231 = load i8*, i8** %8, align 8
  %232 = load i32, i32* %9, align 4
  %233 = insertvalue { i8*, i32 } undef, i8* %231, 0
  %234 = insertvalue { i8*, i32 } %233, i32 %232, 1
  resume { i8*, i32 } %234

; <label>:235:                                    ; preds = %169
  %236 = landingpad { i8*, i32 }
          catch i8* null
  %237 = extractvalue { i8*, i32 } %236, 0
  call void @__clang_call_terminate(i8* %237) #11
  unreachable

; <label>:238:                                    ; preds = %183
  unreachable

; <label>:239:                                    ; preds = %39, %24
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %7, align 8
  %240 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %241 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %241, i32 0, i32 0
  %243 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %242, align 8
  %244 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %245, i32 0, i32 1
  %247 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %246, align 8
  %248 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %249 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %250 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %249) #3
  br label %39

; <label>:251:                                    ; preds = %109, %82
  %252 = landingpad { i8*, i32 }
          catch i8* null
  %253 = extractvalue { i8*, i32 } %252, 0
  store i8* %253, i8** %8, align 8
  %254 = extractvalue { i8*, i32 } %252, 1
  store i32 %254, i32* %9, align 4
  br label %109

; <label>:255:                                    ; preds = %154, %140
  br label %154
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*, %"struct.Graph::edge"* dereferenceable(24)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %9 = bitcast %"struct.Graph::edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::edge"*
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %11) #3
  %13 = bitcast %"struct.Graph::edge"* %10 to i8*
  %14 = bitcast %"struct.Graph::edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.8"*
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %6
  %13 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %14 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %13) #3
  %15 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %16 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %15) #3
  %17 = add i64 %14, -8332079310506549577
  %18 = sub i64 %17, %16
  %19 = sub i64 %18, -8332079310506549577
  %20 = sub i64 %14, %16
  store i64 %19, i64* %5
  %21 = load i64, i64* %8, align 8
  store i64 %21, i64* %4
  %22 = alloca i32
  store i32 1852527685, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %62
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1852527685, label %27
    i32 -1053840950, label %32
    i32 -1915209541, label %34
    i32 -239338868, label %49
    i32 -1142209748, label %55
    i32 2142197687, label %58
    i32 526234842, label %60
  ]

; <label>:26:                                     ; preds = %24
  br label %62

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %5
  %29 = load volatile i64, i64* %4
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -1053840950, i32 -1915209541
  store i32 %31, i32* %22
  br label %62

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %9, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %36 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %35) #3
  %37 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %38 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %37) #3
  store i64 %38, i64* %11, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %11, i64* dereferenceable(8) %8)
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 0, %40
  %42 = sub i64 %36, %41
  %43 = add i64 %36, %40
  store i64 %42, i64* %10, align 8
  %44 = load i64, i64* %10, align 8
  %45 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %46 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %45) #3
  %47 = icmp ult i64 %44, %46
  %48 = select i1 %47, i32 -1142209748, i32 -239338868
  store i32 %48, i32* %22
  br label %62

; <label>:49:                                     ; preds = %24
  %50 = load i64, i64* %10, align 8
  %51 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %52 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %51) #3
  %53 = icmp ugt i64 %50, %52
  %54 = select i1 %53, i32 -1142209748, i32 2142197687
  store i32 %54, i32* %22
  br label %62

; <label>:55:                                     ; preds = %24
  %56 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %6
  %57 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %56) #3
  store i32 526234842, i32* %22
  store i64 %57, i64* %23
  br label %62

; <label>:58:                                     ; preds = %24
  %59 = load i64, i64* %10, align 8
  store i32 526234842, i32* %22
  store i64 %59, i64* %23
  br label %62

; <label>:60:                                     ; preds = %24
  %61 = load i64, i64* %23
  ret i64 %61

; <label>:62:                                     ; preds = %58, %55, %49, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.390
  %9 = load i32, i32* @y.391
  %10 = add i32 %8, 1672022649
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1672022649
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1863937453, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %87
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1863937453, label %22
    i32 -243351099, label %30
    i32 -498352206, label %65
    i32 -745222527, label %67
  ]

; <label>:21:                                     ; preds = %19
  br label %87

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -243351099, i32 -745222527
  store i32 %29, i32* %18
  br label %87

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.Graph::edge"*, align 8
  %32 = alloca %"struct.Graph::edge"*, align 8
  %33 = alloca %"struct.Graph::edge"*, align 8
  %34 = alloca %"class.std::allocator.10"*, align 8
  %35 = alloca %"class.std::move_iterator.16", align 8
  %36 = alloca %"class.std::move_iterator.16", align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %31, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %32, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %33, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %34, align 8
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %31, align 8
  %38 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %37)
  %39 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %35, i32 0, i32 0
  store %"struct.Graph::edge"* %38, %"struct.Graph::edge"** %39, align 8
  %40 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %41 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %40)
  %42 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %36, i32 0, i32 0
  store %"struct.Graph::edge"* %41, %"struct.Graph::edge"** %42, align 8
  %43 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %33, align 8
  %44 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %34, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %36, i32 0, i32 0
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %47, align 8
  %49 = call %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::edge"* %46, %"struct.Graph::edge"* %48, %"struct.Graph::edge"* %43, %"class.std::allocator.10"* dereferenceable(1) %44)
  store %"struct.Graph::edge"* %49, %"struct.Graph::edge"** %5
  %50 = load i32, i32* @x.390
  %51 = load i32, i32* @y.391
  %52 = add i32 %50, -516716613
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -516716613
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -498352206, i32 -745222527
  store i32 %64, i32* %18
  br label %87

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %5
  ret %"struct.Graph::edge"* %66

; <label>:67:                                     ; preds = %19
  %68 = alloca %"struct.Graph::edge"*, align 8
  %69 = alloca %"struct.Graph::edge"*, align 8
  %70 = alloca %"struct.Graph::edge"*, align 8
  %71 = alloca %"class.std::allocator.10"*, align 8
  %72 = alloca %"class.std::move_iterator.16", align 8
  %73 = alloca %"class.std::move_iterator.16", align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %68, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %69, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %70, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %71, align 8
  %74 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %68, align 8
  %75 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %74)
  %76 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %72, i32 0, i32 0
  store %"struct.Graph::edge"* %75, %"struct.Graph::edge"** %76, align 8
  %77 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %69, align 8
  %78 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %77)
  %79 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %73, i32 0, i32 0
  store %"struct.Graph::edge"* %78, %"struct.Graph::edge"** %79, align 8
  %80 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %70, align 8
  %81 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %71, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %72, i32 0, i32 0
  %83 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %82, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %73, i32 0, i32 0
  %85 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %84, align 8
  %86 = call %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::edge"* %83, %"struct.Graph::edge"* %85, %"struct.Graph::edge"* %80, %"class.std::allocator.10"* dereferenceable(1) %81)
  store i32 -243351099, i32* %18
  br label %87

; <label>:87:                                     ; preds = %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"struct.Graph::edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.394
  %6 = load i32, i32* @y.395
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1796300993, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1796300993, label %18
    i32 565420682, label %38
    i32 -1088220343, label %71
    i32 -450813034, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 565420682, i32 -450813034
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %39, align 8
  %40 = load %"class.std::vector.8"*, %"class.std::vector.8"** %39, align 8
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %41) #3
  %43 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1) %42) #3
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.394
  %45 = load i32, i32* @y.395
  %46 = sub i32 %44, 1589164106
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1589164106
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1088220343, i32 -450813034
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %74, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %74, align 8
  %76 = bitcast %"class.std::vector.8"* %75 to %"struct.std::_Vector_base.9"*
  %77 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1) %77) #3
  store i32 565420682, i32* %14
  br label %79

; <label>:79:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"class.std::move_iterator.16", align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.16", align 8
  %10 = alloca %"class.std::move_iterator.16", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.16"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.16"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %20, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"* %19, %"struct.Graph::edge"* %21, %"struct.Graph::edge"* %17)
  ret %"struct.Graph::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.400
  %6 = load i32, i32* @y.401
  %7 = add i32 %5, 302159170
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 302159170
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -311325155, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -311325155, label %19
    i32 781414594, label %27
    i32 -962254105, label %60
    i32 -329204816, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 781414594, i32 -329204816
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.16", align 8
  %29 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %29, align 8
  %30 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %29, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_(%"class.std::move_iterator.16"* %28, %"struct.Graph::edge"* %30)
  %31 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %28, i32 0, i32 0
  %32 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %31, align 8
  store %"struct.Graph::edge"* %32, %"struct.Graph::edge"** %2
  %33 = load i32, i32* @x.400
  %34 = load i32, i32* @y.401
  %35 = add i32 %33, 356499581
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 356499581
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -962254105, i32 -329204816
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.16", align 8
  %64 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %64, align 8
  %65 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %64, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_(%"class.std::move_iterator.16"* %63, %"struct.Graph::edge"* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %63, i32 0, i32 0
  %67 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %66, align 8
  store i32 781414594, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.402
  %8 = load i32, i32* @y.403
  %9 = sub i32 %7, 87653198
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 87653198
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1643777029, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %83
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1643777029, label %21
    i32 -1045267099, label %29
    i32 645183633, label %62
    i32 271763897, label %64
  ]

; <label>:20:                                     ; preds = %18
  br label %83

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1045267099, i32 271763897
  store i32 %28, i32* %17
  br label %83

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.16", align 8
  %31 = alloca %"class.std::move_iterator.16", align 8
  %32 = alloca %"struct.Graph::edge"*, align 8
  %33 = alloca i8, align 1
  %34 = alloca %"class.std::move_iterator.16", align 8
  %35 = alloca %"class.std::move_iterator.16", align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %30, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %36, align 8
  %37 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %31, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %37, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %32, align 8
  store i8 1, i8* %33, align 1
  %38 = bitcast %"class.std::move_iterator.16"* %34 to i8*
  %39 = bitcast %"class.std::move_iterator.16"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = bitcast %"class.std::move_iterator.16"* %35 to i8*
  %41 = bitcast %"class.std::move_iterator.16"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 8, i32 8, i1 false)
  %42 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %34, i32 0, i32 0
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %35, i32 0, i32 0
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  %47 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_(%"struct.Graph::edge"* %44, %"struct.Graph::edge"* %46, %"struct.Graph::edge"* %42)
  store %"struct.Graph::edge"* %47, %"struct.Graph::edge"** %4
  %48 = load i32, i32* @x.402
  %49 = load i32, i32* @y.403
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 645183633, i32 271763897
  store i32 %61, i32* %17
  br label %83

; <label>:62:                                     ; preds = %18
  %63 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  ret %"struct.Graph::edge"* %63

; <label>:64:                                     ; preds = %18
  %65 = alloca %"class.std::move_iterator.16", align 8
  %66 = alloca %"class.std::move_iterator.16", align 8
  %67 = alloca %"struct.Graph::edge"*, align 8
  %68 = alloca i8, align 1
  %69 = alloca %"class.std::move_iterator.16", align 8
  %70 = alloca %"class.std::move_iterator.16", align 8
  %71 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %65, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %71, align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %66, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %72, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %67, align 8
  store i8 1, i8* %68, align 1
  %73 = bitcast %"class.std::move_iterator.16"* %69 to i8*
  %74 = bitcast %"class.std::move_iterator.16"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %73, i8* %74, i64 8, i32 8, i1 false)
  %75 = bitcast %"class.std::move_iterator.16"* %70 to i8*
  %76 = bitcast %"class.std::move_iterator.16"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %75, i8* %76, i64 8, i32 8, i1 false)
  %77 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %67, align 8
  %78 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %69, i32 0, i32 0
  %79 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %78, align 8
  %80 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %70, i32 0, i32 0
  %81 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %80, align 8
  %82 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_(%"struct.Graph::edge"* %79, %"struct.Graph::edge"* %81, %"struct.Graph::edge"* %77)
  store i32 -1045267099, i32* %17
  br label %83

; <label>:83:                                     ; preds = %64, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.16", align 8
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.16", align 8
  %8 = alloca %"class.std::move_iterator.16", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.16"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.16"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %7, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"* %17, %"struct.Graph::edge"* %19, %"struct.Graph::edge"* %15)
  ret %"struct.Graph::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.16", align 8
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.16", align 8
  %8 = alloca %"class.std::move_iterator.16", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.16"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %7, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = call %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"* %14)
  %16 = bitcast %"class.std::move_iterator.16"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"* %19)
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %15, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %21)
  ret %"struct.Graph::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %7)
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %9)
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %11)
  %13 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %12)
  ret %"struct.Graph::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.16", align 8
  %3 = alloca %"class.std::move_iterator.16", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator.16"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_(%"struct.Graph::edge"* %8)
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.412
  %8 = load i32, i32* @y.413
  %9 = sub i32 %7, 258950400
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 258950400
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1624392788, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1624392788, label %21
    i32 -325312750, label %41
    i32 2072516729, label %64
    i32 1698481836, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -325312750, i32 1698481836
  store i32 %40, i32* %17
  br label %75

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Graph::edge"*, align 8
  %43 = alloca %"struct.Graph::edge"*, align 8
  %44 = alloca %"struct.Graph::edge"*, align 8
  %45 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %42, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %43, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %42, align 8
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %44, align 8
  %49 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %46, %"struct.Graph::edge"* %47, %"struct.Graph::edge"* %48)
  store %"struct.Graph::edge"* %49, %"struct.Graph::edge"** %4
  %50 = load i32, i32* @x.412
  %51 = load i32, i32* @y.413
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 2072516729, i32 1698481836
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  ret %"struct.Graph::edge"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.Graph::edge"*, align 8
  %68 = alloca %"struct.Graph::edge"*, align 8
  %69 = alloca %"struct.Graph::edge"*, align 8
  %70 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %67, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %68, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %67, align 8
  %72 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %68, align 8
  %73 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %69, align 8
  %74 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %71, %"struct.Graph::edge"* %72, %"struct.Graph::edge"* %73)
  store i32 -325312750, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %11 = ptrtoint %"struct.Graph::edge"* %9 to i64
  %12 = ptrtoint %"struct.Graph::edge"* %10 to i64
  %13 = sub i64 %11, -3853901966991479026
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -3853901966991479026
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 860163547, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 860163547, label %23
    i32 2118848779, label %27
    i32 1780286627, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 2118848779, i32 1780286627
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %29 = bitcast %"struct.Graph::edge"* %28 to i8*
  %30 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %31 = bitcast %"struct.Graph::edge"* %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 24, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 1780286627, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %35, i64 %36
  ret %"struct.Graph::edge"* %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_(%"struct.Graph::edge"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.16", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call %"struct.Graph::edge"* @_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv(%"class.std::move_iterator.16"* %2)
  ret %"struct.Graph::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv(%"class.std::move_iterator.16"*) #5 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.418
  %6 = load i32, i32* @y.419
  %7 = add i32 %5, 1849110717
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1849110717
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1581943648, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1581943648, label %19
    i32 -932706755, label %39
    i32 -899252087, label %59
    i32 -382841421, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -932706755, i32 -382841421
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.16"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %40, align 8
  %41 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %41, i32 0, i32 0
  %43 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %42, align 8
  store %"struct.Graph::edge"* %43, %"struct.Graph::edge"** %2
  %44 = load i32, i32* @x.418
  %45 = load i32, i32* @y.419
  %46 = add i32 %44, 1211045033
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1211045033
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -899252087, i32 -382841421
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator.16"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %62, align 8
  %63 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %63, i32 0, i32 0
  %65 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %64, align 8
  store i32 -932706755, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_(%"class.std::move_iterator.16"*, %"struct.Graph::edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.420
  %6 = load i32, i32* @y.421
  %7 = sub i32 %5, -560086192
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -560086192
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1814905320, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1814905320, label %19
    i32 -1023859560, label %39
    i32 -2127769349, label %71
    i32 1817389621, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1023859560, i32 1817389621
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.16"*, align 8
  %41 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %40, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %41, align 8
  %42 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %40, align 8
  %43 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %41, align 8
  store %"struct.Graph::edge"* %44, %"struct.Graph::edge"** %43, align 8
  %45 = load i32, i32* @x.420
  %46 = load i32, i32* @y.421
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -2127769349, i32 1817389621
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  ret void

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::move_iterator.16"*, align 8
  %74 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %73, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %74, align 8
  %75 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %73, align 8
  %76 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %75, i32 0, i32 0
  %77 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %74, align 8
  store %"struct.Graph::edge"* %77, %"struct.Graph::edge"** %76, align 8
  store i32 -1023859560, i32* %15
  br label %78

; <label>:78:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN5Dinic7g_levelEii(%struct.Dinic*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.Dinic*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::queue", align 8
  %9 = alloca %"class.std::deque", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.8"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %16 = alloca %"struct.Graph::edge"*, align 8
  store %struct.Dinic* %0, %struct.Dinic** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %17 = load %struct.Dinic*, %struct.Dinic** %4, align 8
  %18 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %19 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  store i32 -1, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %18, i64 %21, i32* dereferenceable(4) %7)
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %9)
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %8, %"class.std::deque"* dereferenceable(80) %9)
          to label %22 unwind label %202

; <label>:22:                                     ; preds = %3
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %9) #3
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %8, i32* dereferenceable(4) %5)
          to label %23 unwind label %258

; <label>:23:                                     ; preds = %22
  %24 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %24, i64 %26) #3
  store i32 0, i32* %27, align 4
  br label %28

; <label>:28:                                     ; preds = %361, %23
  %29 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %8)
          to label %30 unwind label %258

; <label>:30:                                     ; preds = %28
  %31 = xor i1 %29, true
  %32 = and i1 true, %31
  %33 = xor i1 true, true
  %34 = and i1 %29, %33
  %35 = or i1 %32, %34
  %36 = xor i1 %29, true
  br i1 %35, label %37, label %362

; <label>:37:                                     ; preds = %30
  %38 = load i32, i32* @x.424
  %39 = load i32, i32* @y.425
  %40 = sub i32 %38, 33010307
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 33010307
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  br i1 %50, label %52, label %415

; <label>:52:                                     ; preds = %37, %415
  %53 = load i32, i32* @x.424
  %54 = load i32, i32* @y.425
  %55 = add i32 %53, -1247052311
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1247052311
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %415

; <label>:67:                                     ; preds = %52
  %68 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %8)
          to label %69 unwind label %258

; <label>:69:                                     ; preds = %67
  %70 = load i32, i32* @x.424
  %71 = load i32, i32* @y.425
  %72 = add i32 %70, -447217411
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -447217411
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %416

; <label>:96:                                     ; preds = %69, %416
  %97 = load i32, i32* %68, align 4
  store i32 %97, i32* %12, align 4
  %98 = load i32, i32* @x.424
  %99 = load i32, i32* @y.425
  %100 = add i32 %98, -1962080222
  %101 = sub i32 %100, 1
  %102 = sub i32 %101, -1962080222
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  br i1 %122, label %124, label %416

; <label>:124:                                    ; preds = %96
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %8)
          to label %125 unwind label %258

; <label>:125:                                    ; preds = %124
  %126 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 3
  %127 = load i32, i32* %12, align 4
  %128 = invoke dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %126, i32 %127)
          to label %129 unwind label %258

; <label>:129:                                    ; preds = %125
  store %"class.std::vector.8"* %128, %"class.std::vector.8"** %13, align 8
  %130 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %131 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %130) #3
  %132 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  store %"struct.Graph::edge"* %131, %"struct.Graph::edge"** %132, align 8
  %133 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %134 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %133) #3
  %135 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %15, i32 0, i32 0
  store %"struct.Graph::edge"* %134, %"struct.Graph::edge"** %135, align 8
  br label %136

; <label>:136:                                    ; preds = %306, %129
  %137 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %15) #3
  br i1 %137, label %138, label %307

; <label>:138:                                    ; preds = %136
  %139 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  store %"struct.Graph::edge"* %139, %"struct.Graph::edge"** %16, align 8
  %140 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %141 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %140, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp sgt i64 %142, 0
  br i1 %143, label %144, label %262

; <label>:144:                                    ; preds = %138
  %145 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %146 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %147 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %146, i32 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = sext i32 %148 to i64
  %150 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %145, i64 %149) #3
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, -1
  br i1 %152, label %153, label %262

; <label>:153:                                    ; preds = %144
  %154 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %155 = load i32, i32* %12, align 4
  %156 = sext i32 %155 to i64
  %157 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %154, i64 %156) #3
  %158 = load i32, i32* %157, align 4
  %159 = sub i32 %158, 1848556349
  %160 = add i32 %159, 1
  %161 = add i32 %160, 1848556349
  %162 = add nsw i32 %158, 1
  %163 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %164 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %165 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %164, i32 0, i32 0
  %166 = load i32, i32* %165, align 8
  %167 = sext i32 %166 to i64
  %168 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %163, i64 %167) #3
  store i32 %161, i32* %168, align 4
  %169 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %170 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %169, i32 0, i32 0
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %8, i32* dereferenceable(4) %170)
          to label %171 unwind label %258

; <label>:171:                                    ; preds = %153
  %172 = load i32, i32* @x.424
  %173 = load i32, i32* @y.425
  %174 = sub i32 %172, -213784617
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -213784617
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = and i1 %180, %181
  %183 = xor i1 %180, %181
  %184 = or i1 %182, %183
  %185 = or i1 %180, %181
  br i1 %184, label %186, label %418

; <label>:186:                                    ; preds = %171, %418
  %187 = load i32, i32* @x.424
  %188 = load i32, i32* @y.425
  %189 = sub i32 %187, -436645795
  %190 = sub i32 %189, 1
  %191 = add i32 %190, -436645795
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %418

; <label>:201:                                    ; preds = %186
  br label %262

; <label>:202:                                    ; preds = %3
  %203 = load i32, i32* @x.424
  %204 = load i32, i32* @y.425
  %205 = sub i32 0, 1
  %206 = add i32 %203, %205
  %207 = sub i32 %203, 1
  %208 = mul i32 %203, %206
  %209 = urem i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = icmp slt i32 %204, 10
  %212 = xor i1 %210, true
  %213 = xor i1 %211, true
  %214 = xor i1 true, true
  %215 = and i1 %212, true
  %216 = and i1 %210, %214
  %217 = and i1 %213, true
  %218 = and i1 %211, %214
  %219 = or i1 %215, %216
  %220 = or i1 %217, %218
  %221 = xor i1 %219, %220
  %222 = or i1 %212, %213
  %223 = xor i1 %222, true
  %224 = or i1 true, %214
  %225 = and i1 %223, %224
  %226 = or i1 %221, %225
  %227 = or i1 %210, %211
  br i1 %226, label %228, label %419

; <label>:228:                                    ; preds = %202, %419
  %229 = landingpad { i8*, i32 }
          cleanup
  %230 = extractvalue { i8*, i32 } %229, 0
  store i8* %230, i8** %10, align 8
  %231 = extractvalue { i8*, i32 } %229, 1
  store i32 %231, i32* %11, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %9) #3
  %232 = load i32, i32* @x.424
  %233 = load i32, i32* @y.425
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 true, true
  %244 = and i1 %241, true
  %245 = and i1 %239, %243
  %246 = and i1 %242, true
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 true, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %419

; <label>:257:                                    ; preds = %228
  br label %369

; <label>:258:                                    ; preds = %153, %125, %124, %67, %28, %22
  %259 = landingpad { i8*, i32 }
          cleanup
  %260 = extractvalue { i8*, i32 } %259, 0
  store i8* %260, i8** %10, align 8
  %261 = extractvalue { i8*, i32 } %259, 1
  store i32 %261, i32* %11, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %8) #3
  br label %369

; <label>:262:                                    ; preds = %201, %144, %138
  br label %263

; <label>:263:                                    ; preds = %262
  %264 = load i32, i32* @x.424
  %265 = load i32, i32* @y.425
  %266 = add i32 %264, -31990715
  %267 = sub i32 %266, 1
  %268 = sub i32 %267, -31990715
  %269 = sub i32 %264, 1
  %270 = mul i32 %264, %268
  %271 = urem i32 %270, 2
  %272 = icmp eq i32 %271, 0
  %273 = icmp slt i32 %265, 10
  %274 = xor i1 %272, true
  %275 = xor i1 %273, true
  %276 = xor i1 false, true
  %277 = and i1 %274, false
  %278 = and i1 %272, %276
  %279 = and i1 %275, false
  %280 = and i1 %273, %276
  %281 = or i1 %277, %278
  %282 = or i1 %279, %280
  %283 = xor i1 %281, %282
  %284 = or i1 %274, %275
  %285 = xor i1 %284, true
  %286 = or i1 false, %276
  %287 = and i1 %285, %286
  %288 = or i1 %283, %287
  %289 = or i1 %272, %273
  br i1 %288, label %290, label %423

; <label>:290:                                    ; preds = %263, %423
  %291 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  %292 = load i32, i32* @x.424
  %293 = load i32, i32* @y.425
  %294 = sub i32 %292, -1376442749
  %295 = sub i32 %294, 1
  %296 = add i32 %295, -1376442749
  %297 = sub i32 %292, 1
  %298 = mul i32 %292, %296
  %299 = urem i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = icmp slt i32 %293, 10
  %302 = and i1 %300, %301
  %303 = xor i1 %300, %301
  %304 = or i1 %302, %303
  %305 = or i1 %300, %301
  br i1 %304, label %306, label %423

; <label>:306:                                    ; preds = %290
  br label %136

; <label>:307:                                    ; preds = %136
  %308 = load i32, i32* @x.424
  %309 = load i32, i32* @y.425
  %310 = add i32 %308, -1459628668
  %311 = sub i32 %310, 1
  %312 = sub i32 %311, -1459628668
  %313 = sub i32 %308, 1
  %314 = mul i32 %308, %312
  %315 = urem i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = icmp slt i32 %309, 10
  %318 = xor i1 %316, true
  %319 = xor i1 %317, true
  %320 = xor i1 false, true
  %321 = and i1 %318, false
  %322 = and i1 %316, %320
  %323 = and i1 %319, false
  %324 = and i1 %317, %320
  %325 = or i1 %321, %322
  %326 = or i1 %323, %324
  %327 = xor i1 %325, %326
  %328 = or i1 %318, %319
  %329 = xor i1 %328, true
  %330 = or i1 false, %320
  %331 = and i1 %329, %330
  %332 = or i1 %327, %331
  %333 = or i1 %316, %317
  br i1 %332, label %334, label %425

; <label>:334:                                    ; preds = %307, %425
  %335 = load i32, i32* @x.424
  %336 = load i32, i32* @y.425
  %337 = sub i32 %335, -643512769
  %338 = sub i32 %337, 1
  %339 = add i32 %338, -643512769
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = xor i1 %343, true
  %346 = xor i1 %344, true
  %347 = xor i1 false, true
  %348 = and i1 %345, false
  %349 = and i1 %343, %347
  %350 = and i1 %346, false
  %351 = and i1 %344, %347
  %352 = or i1 %348, %349
  %353 = or i1 %350, %351
  %354 = xor i1 %352, %353
  %355 = or i1 %345, %346
  %356 = xor i1 %355, true
  %357 = or i1 false, %347
  %358 = and i1 %356, %357
  %359 = or i1 %354, %358
  %360 = or i1 %343, %344
  br i1 %359, label %361, label %425

; <label>:361:                                    ; preds = %334
  br label %28

; <label>:362:                                    ; preds = %30
  %363 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %364 = load i32, i32* %6, align 4
  %365 = sext i32 %364 to i64
  %366 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %363, i64 %365) #3
  %367 = load i32, i32* %366, align 4
  %368 = icmp sge i32 %367, 0
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %8) #3
  ret i1 %368

; <label>:369:                                    ; preds = %258, %257
  %370 = load i32, i32* @x.424
  %371 = load i32, i32* @y.425
  %372 = add i32 %370, -67150079
  %373 = sub i32 %372, 1
  %374 = sub i32 %373, -67150079
  %375 = sub i32 %370, 1
  %376 = mul i32 %370, %374
  %377 = urem i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = icmp slt i32 %371, 10
  %380 = xor i1 %378, true
  %381 = xor i1 %379, true
  %382 = xor i1 false, true
  %383 = and i1 %380, false
  %384 = and i1 %378, %382
  %385 = and i1 %381, false
  %386 = and i1 %379, %382
  %387 = or i1 %383, %384
  %388 = or i1 %385, %386
  %389 = xor i1 %387, %388
  %390 = or i1 %380, %381
  %391 = xor i1 %390, true
  %392 = or i1 false, %382
  %393 = and i1 %391, %392
  %394 = or i1 %389, %393
  %395 = or i1 %378, %379
  br i1 %394, label %396, label %426

; <label>:396:                                    ; preds = %369, %426
  %397 = load i8*, i8** %10, align 8
  %398 = load i32, i32* %11, align 4
  %399 = insertvalue { i8*, i32 } undef, i8* %397, 0
  %400 = insertvalue { i8*, i32 } %399, i32 %398, 1
  %401 = load i32, i32* @x.424
  %402 = load i32, i32* @y.425
  %403 = sub i32 0, 1
  %404 = add i32 %401, %403
  %405 = sub i32 %401, 1
  %406 = mul i32 %401, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %402, 10
  %410 = and i1 %408, %409
  %411 = xor i1 %408, %409
  %412 = or i1 %410, %411
  %413 = or i1 %408, %409
  br i1 %412, label %414, label %426

; <label>:414:                                    ; preds = %396
  resume { i8*, i32 } %400

; <label>:415:                                    ; preds = %52, %37
  br label %52

; <label>:416:                                    ; preds = %96, %69
  %417 = load i32, i32* %68, align 4
  store i32 %417, i32* %12, align 4
  br label %96

; <label>:418:                                    ; preds = %186, %171
  br label %186

; <label>:419:                                    ; preds = %228, %202
  %420 = landingpad { i8*, i32 }
          cleanup
  %421 = extractvalue { i8*, i32 } %420, 0
  store i8* %421, i8** %10, align 8
  %422 = extractvalue { i8*, i32 } %420, 1
  store i32 %422, i32* %11, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %9) #3
  br label %228

; <label>:423:                                    ; preds = %290, %263
  %424 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  br label %290

; <label>:425:                                    ; preds = %334, %307
  br label %334

; <label>:426:                                    ; preds = %396, %369
  %427 = load i8*, i8** %10, align 8
  %428 = load i32, i32* %11, align 4
  %429 = insertvalue { i8*, i32 } undef, i8* %427, 0
  %430 = insertvalue { i8*, i32 } %429, i32 %428, 1
  br label %396
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.426
  %7 = load i32, i32* @y.427
  %8 = add i32 %6, 1627568977
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1627568977
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 536450869, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %58
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 536450869, label %20
    i32 -463283432, label %28
    i32 950944600, label %50
    i32 677863216, label %51
  ]

; <label>:19:                                     ; preds = %17
  br label %58

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -463283432, i32 677863216
  store i32 %27, i32* %16
  br label %58

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = load i64, i64* %30, align 8
  %34 = load i32*, i32** %31, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector"* %32, i64 %33, i32* dereferenceable(4) %34)
  %35 = load i32, i32* @x.426
  %36 = load i32, i32* @y.427
  %37 = sub i32 %35, 544581594
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 544581594
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 950944600, i32 677863216
  store i32 %49, i32* %16
  br label %58

; <label>:50:                                     ; preds = %17
  ret void

; <label>:51:                                     ; preds = %17
  %52 = alloca %"class.std::vector"*, align 8
  %53 = alloca i64, align 8
  %54 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %52, align 8
  store i64 %1, i64* %53, align 8
  store i32* %2, i32** %54, align 8
  %55 = load %"class.std::vector"*, %"class.std::vector"** %52, align 8
  %56 = load i64, i64* %53, align 8
  %57 = load i32*, i32** %54, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector"* %55, i64 %56, i32* dereferenceable(4) %57)
  store i32 -463283432, i32* %16
  br label %58

; <label>:58:                                     ; preds = %51, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Dinic3dfsEiix(%struct.Dinic*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca %struct.Dinic*
  %9 = alloca i64, align 8
  %10 = alloca %struct.Dinic*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i64, align 8
  %14 = alloca i32*, align 8
  %15 = alloca %"struct.Graph::edge"*, align 8
  %16 = alloca i64, align 8
  store %struct.Dinic* %0, %struct.Dinic** %10, align 8
  store i32 %1, i32* %11, align 4
  store i32 %2, i32* %12, align 4
  store i64 %3, i64* %13, align 8
  %17 = load %struct.Dinic*, %struct.Dinic** %10, align 8
  store %struct.Dinic* %17, %struct.Dinic** %8
  %18 = load i32, i32* %11, align 4
  store i32 %18, i32* %7
  %19 = load i32, i32* %12, align 4
  store i32 %19, i32* %6
  %20 = alloca i32
  store i32 -1153014470, i32* %20
  br label %21

; <label>:21:                                     ; preds = %4, %360
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1153014470, label %24
    i32 -62020630, label %29
    i32 -200915872, label %31
    i32 -460805086, label %59
    i32 436805066, label %92
    i32 305950554, label %93
    i32 -649623318, label %104
    i32 -1102854213, label %118
    i32 -1104467193, label %134
    i32 -1489310257, label %165
    i32 896390053, label %168
    i32 -1052859593, label %182
    i32 -1943789180, label %198
    i32 -343076248, label %239
    i32 1167067337, label %240
    i32 1495438367, label %268
    i32 1267422964, label %284
    i32 2103980894, label %285
    i32 1936864626, label %286
    i32 -1967109950, label %292
    i32 -1923281882, label %293
    i32 978266304, label %295
    i32 -784073897, label %301
    i32 968996737, label %317
    i32 -490107147, label %359
  ]

; <label>:23:                                     ; preds = %21
  br label %360

; <label>:24:                                     ; preds = %21
  %25 = load volatile i32, i32* %7
  %26 = load volatile i32, i32* %6
  %27 = icmp eq i32 %25, %26
  %28 = select i1 %27, i32 -62020630, i32 -200915872
  store i32 %28, i32* %20
  br label %360

; <label>:29:                                     ; preds = %21
  %30 = load i64, i64* %13, align 8
  store i64 %30, i64* %9, align 8
  store i32 -1923281882, i32* %20
  br label %360

; <label>:31:                                     ; preds = %21
  %32 = load i32, i32* @x.428
  %33 = load i32, i32* @y.429
  %34 = sub i32 %32, -1079468938
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -1079468938
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -460805086, i32 978266304
  store i32 %58, i32* %20
  br label %360

; <label>:59:                                     ; preds = %21
  %60 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %61 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %60, i32 0, i32 2
  %62 = load i32, i32* %11, align 4
  %63 = sext i32 %62 to i64
  %64 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %61, i64 %63) #3
  store i32* %64, i32** %14, align 8
  %65 = load i32, i32* @x.428
  %66 = load i32, i32* @y.429
  %67 = add i32 %65, -1630274546
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -1630274546
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = xor i1 %73, true
  %76 = xor i1 %74, true
  %77 = xor i1 true, true
  %78 = and i1 %75, true
  %79 = and i1 %73, %77
  %80 = and i1 %76, true
  %81 = and i1 %74, %77
  %82 = or i1 %78, %79
  %83 = or i1 %80, %81
  %84 = xor i1 %82, %83
  %85 = or i1 %75, %76
  %86 = xor i1 %85, true
  %87 = or i1 true, %77
  %88 = and i1 %86, %87
  %89 = or i1 %84, %88
  %90 = or i1 %73, %74
  %91 = select i1 %89, i32 436805066, i32 978266304
  store i32 %91, i32* %20
  br label %360

; <label>:92:                                     ; preds = %21
  store i32 305950554, i32* %20
  br label %360

; <label>:93:                                     ; preds = %21
  %94 = load i32*, i32** %14, align 8
  %95 = load i32, i32* %94, align 4
  %96 = sext i32 %95 to i64
  %97 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %98 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %97, i32 0, i32 3
  %99 = load i32, i32* %11, align 4
  %100 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %98, i32 %99)
  %101 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %100) #3
  %102 = icmp ult i64 %96, %101
  %103 = select i1 %102, i32 -649623318, i32 -1967109950
  store i32 %103, i32* %20
  br label %360

; <label>:104:                                    ; preds = %21
  %105 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %106 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %105, i32 0, i32 3
  %107 = load i32, i32* %11, align 4
  %108 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %106, i32 %107)
  %109 = load i32*, i32** %14, align 8
  %110 = load i32, i32* %109, align 4
  %111 = sext i32 %110 to i64
  %112 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %108, i64 %111) #3
  store %"struct.Graph::edge"* %112, %"struct.Graph::edge"** %15, align 8
  %113 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %114 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %113, i32 0, i32 1
  %115 = load i64, i64* %114, align 8
  %116 = icmp sgt i64 %115, 0
  %117 = select i1 %116, i32 -1102854213, i32 2103980894
  store i32 %117, i32* %20
  br label %360

; <label>:118:                                    ; preds = %21
  %119 = load i32, i32* @x.428
  %120 = load i32, i32* @y.429
  %121 = add i32 %119, 1489680035
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, 1489680035
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -1104467193, i32 -784073897
  store i32 %133, i32* %20
  br label %360

; <label>:134:                                    ; preds = %21
  %135 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %136 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %135, i32 0, i32 1
  %137 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %138 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %137, i32 0, i32 0
  %139 = load i32, i32* %138, align 8
  %140 = sext i32 %139 to i64
  %141 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %136, i64 %140) #3
  %142 = load i32, i32* %141, align 4
  %143 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %144 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %143, i32 0, i32 1
  %145 = load i32, i32* %11, align 4
  %146 = sext i32 %145 to i64
  %147 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %144, i64 %146) #3
  %148 = load i32, i32* %147, align 4
  %149 = icmp sgt i32 %142, %148
  store i1 %149, i1* %5
  %150 = load i32, i32* @x.428
  %151 = load i32, i32* @y.429
  %152 = add i32 %150, 867418213
  %153 = sub i32 %152, 1
  %154 = sub i32 %153, 867418213
  %155 = sub i32 %150, 1
  %156 = mul i32 %150, %154
  %157 = urem i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = icmp slt i32 %151, 10
  %160 = and i1 %158, %159
  %161 = xor i1 %158, %159
  %162 = or i1 %160, %161
  %163 = or i1 %158, %159
  %164 = select i1 %162, i32 -1489310257, i32 -784073897
  store i32 %164, i32* %20
  br label %360

; <label>:165:                                    ; preds = %21
  %166 = load volatile i1, i1* %5
  %167 = select i1 %166, i32 896390053, i32 2103980894
  store i32 %167, i32* %20
  br label %360

; <label>:168:                                    ; preds = %21
  %169 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %170 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %169, i32 0, i32 0
  %171 = load i32, i32* %170, align 8
  %172 = load i32, i32* %12, align 4
  %173 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %174 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %173, i32 0, i32 1
  %175 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %174)
  %176 = load i64, i64* %175, align 8
  %177 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %178 = call i64 @_ZN5Dinic3dfsEiix(%struct.Dinic* %177, i32 %171, i32 %172, i64 %176)
  store i64 %178, i64* %16, align 8
  %179 = load i64, i64* %16, align 8
  %180 = icmp sgt i64 %179, 0
  %181 = select i1 %180, i32 -1052859593, i32 1167067337
  store i32 %181, i32* %20
  br label %360

; <label>:182:                                    ; preds = %21
  %183 = load i32, i32* @x.428
  %184 = load i32, i32* @y.429
  %185 = add i32 %183, -5761714
  %186 = sub i32 %185, 1
  %187 = sub i32 %186, -5761714
  %188 = sub i32 %183, 1
  %189 = mul i32 %183, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %184, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  %197 = select i1 %195, i32 -1943789180, i32 968996737
  store i32 %197, i32* %20
  br label %360

; <label>:198:                                    ; preds = %21
  %199 = load i64, i64* %16, align 8
  %200 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %201 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %200, i32 0, i32 1
  %202 = load i64, i64* %201, align 8
  %203 = add i64 %202, -8068938725856366586
  %204 = sub i64 %203, %199
  %205 = sub i64 %204, -8068938725856366586
  %206 = sub nsw i64 %202, %199
  store i64 %205, i64* %201, align 8
  %207 = load i64, i64* %16, align 8
  %208 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %209 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %208, i32 0, i32 3
  %210 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %211 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %210, i32 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %209, i32 %212)
  %214 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %215 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %214, i32 0, i32 2
  %216 = load i64, i64* %215, align 8
  %217 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %213, i64 %216) #3
  %218 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %217, i32 0, i32 1
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 0, %207
  %221 = sub i64 %219, %220
  %222 = add nsw i64 %219, %207
  store i64 %221, i64* %218, align 8
  %223 = load i64, i64* %16, align 8
  store i64 %223, i64* %9, align 8
  %224 = load i32, i32* @x.428
  %225 = load i32, i32* @y.429
  %226 = add i32 %224, -1234813439
  %227 = sub i32 %226, 1
  %228 = sub i32 %227, -1234813439
  %229 = sub i32 %224, 1
  %230 = mul i32 %224, %228
  %231 = urem i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = icmp slt i32 %225, 10
  %234 = and i1 %232, %233
  %235 = xor i1 %232, %233
  %236 = or i1 %234, %235
  %237 = or i1 %232, %233
  %238 = select i1 %236, i32 -343076248, i32 968996737
  store i32 %238, i32* %20
  br label %360

; <label>:239:                                    ; preds = %21
  store i32 -1923281882, i32* %20
  br label %360

; <label>:240:                                    ; preds = %21
  %241 = load i32, i32* @x.428
  %242 = load i32, i32* @y.429
  %243 = add i32 %241, 687535337
  %244 = sub i32 %243, 1
  %245 = sub i32 %244, 687535337
  %246 = sub i32 %241, 1
  %247 = mul i32 %241, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %242, 10
  %251 = xor i1 %249, true
  %252 = xor i1 %250, true
  %253 = xor i1 false, true
  %254 = and i1 %251, false
  %255 = and i1 %249, %253
  %256 = and i1 %252, false
  %257 = and i1 %250, %253
  %258 = or i1 %254, %255
  %259 = or i1 %256, %257
  %260 = xor i1 %258, %259
  %261 = or i1 %251, %252
  %262 = xor i1 %261, true
  %263 = or i1 false, %253
  %264 = and i1 %262, %263
  %265 = or i1 %260, %264
  %266 = or i1 %249, %250
  %267 = select i1 %265, i32 1495438367, i32 -490107147
  store i32 %267, i32* %20
  br label %360

; <label>:268:                                    ; preds = %21
  %269 = load i32, i32* @x.428
  %270 = load i32, i32* @y.429
  %271 = sub i32 %269, -1338202622
  %272 = sub i32 %271, 1
  %273 = add i32 %272, -1338202622
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = and i1 %277, %278
  %280 = xor i1 %277, %278
  %281 = or i1 %279, %280
  %282 = or i1 %277, %278
  %283 = select i1 %281, i32 1267422964, i32 -490107147
  store i32 %283, i32* %20
  br label %360

; <label>:284:                                    ; preds = %21
  store i32 2103980894, i32* %20
  br label %360

; <label>:285:                                    ; preds = %21
  store i32 1936864626, i32* %20
  br label %360

; <label>:286:                                    ; preds = %21
  %287 = load i32*, i32** %14, align 8
  %288 = load i32, i32* %287, align 4
  %289 = sub i32 0, 1
  %290 = sub i32 %288, %289
  %291 = add nsw i32 %288, 1
  store i32 %290, i32* %287, align 4
  store i32 305950554, i32* %20
  br label %360

; <label>:292:                                    ; preds = %21
  store i64 0, i64* %9, align 8
  store i32 -1923281882, i32* %20
  br label %360

; <label>:293:                                    ; preds = %21
  %294 = load i64, i64* %9, align 8
  ret i64 %294

; <label>:295:                                    ; preds = %21
  %296 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %297 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %296, i32 0, i32 2
  %298 = load i32, i32* %11, align 4
  %299 = sext i32 %298 to i64
  %300 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %297, i64 %299) #3
  store i32* %300, i32** %14, align 8
  store i32 -460805086, i32* %20
  br label %360

; <label>:301:                                    ; preds = %21
  %302 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %303 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %302, i32 0, i32 1
  %304 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %305 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %304, i32 0, i32 0
  %306 = load i32, i32* %305, align 8
  %307 = sext i32 %306 to i64
  %308 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %303, i64 %307) #3
  %309 = load i32, i32* %308, align 4
  %310 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %311 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %310, i32 0, i32 1
  %312 = load i32, i32* %11, align 4
  %313 = sext i32 %312 to i64
  %314 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %311, i64 %313) #3
  %315 = load i32, i32* %314, align 4
  %316 = icmp sgt i32 %309, %315
  store i32 -1104467193, i32* %20
  br label %360

; <label>:317:                                    ; preds = %21
  %318 = load i64, i64* %16, align 8
  %319 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %320 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %319, i32 0, i32 1
  %321 = load i64, i64* %320, align 8
  %322 = add i64 %321, 6132867810549463931
  %323 = sub i64 %322, %318
  %324 = sub i64 %323, 6132867810549463931
  %325 = sub i64 %321, %318
  %326 = mul i64 %324, %318
  %327 = sub i64 %321, -8513950248453008424
  %328 = sub i64 %327, %318
  %329 = add i64 %328, -8513950248453008424
  %330 = sub i64 %321, %318
  %331 = mul i64 %329, %318
  %332 = sub i64 0, %318
  %333 = add i64 %321, %332
  %334 = sub nsw i64 %321, %318
  store i64 %333, i64* %320, align 8
  %335 = load i64, i64* %16, align 8
  %336 = load volatile %struct.Dinic*, %struct.Dinic** %8
  %337 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %336, i32 0, i32 3
  %338 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %339 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %338, i32 0, i32 0
  %340 = load i32, i32* %339, align 8
  %341 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %337, i32 %340)
  %342 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %343 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %342, i32 0, i32 2
  %344 = load i64, i64* %343, align 8
  %345 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %341, i64 %344) #3
  %346 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %345, i32 0, i32 1
  %347 = load i64, i64* %346, align 8
  %348 = shl i64 %347, %335
  %349 = sub i64 0, %335
  %350 = add i64 %347, %349
  %351 = sub i64 %347, %335
  %352 = mul i64 %350, %335
  %353 = sub i64 0, %347
  %354 = sub i64 0, %335
  %355 = add i64 %353, %354
  %356 = sub i64 0, %355
  %357 = add nsw i64 %347, %335
  store i64 %356, i64* %346, align 8
  %358 = load i64, i64* %16, align 8
  store i64 %358, i64* %9, align 8
  store i32 -1943789180, i32* %20
  br label %360

; <label>:359:                                    ; preds = %21
  store i32 1495438367, i32* %20
  br label %360

; <label>:360:                                    ; preds = %359, %317, %301, %295, %292, %286, %285, %284, %268, %240, %239, %198, %182, %168, %165, %134, %118, %104, %93, %92, %59, %31, %29, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.430
  %5 = load i32, i32* @y.431
  %6 = add i32 %4, -986277477
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -986277477
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 410240461, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 410240461, label %18
    i32 -40977452, label %38
    i32 477025227, label %57
    i32 1504019375, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -40977452, i32 1504019375
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %39, align 8
  %40 = load %"class.std::deque"*, %"class.std::deque"** %39, align 8
  %41 = bitcast %"class.std::deque"* %40 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %41)
  %42 = load i32, i32* @x.430
  %43 = load i32, i32* @y.431
  %44 = add i32 %42, -1371800840
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1371800840
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 477025227, i32 1504019375
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %59, align 8
  %60 = load %"class.std::deque"*, %"class.std::deque"** %59, align 8
  %61 = bitcast %"class.std::deque"* %60 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %61)
  store i32 -40977452, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.434
  %3 = load i32, i32* @y.435
  %4 = sub i32 %2, 1299026611
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1299026611
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %102

; <label>:28:                                     ; preds = %1, %102
  %29 = alloca %"class.std::deque"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %29, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %30, %"class.std::deque"* %34) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %31, %"class.std::deque"* %34) #3
  %35 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %36 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %35) #3
  %37 = load i32, i32* @x.434
  %38 = load i32, i32* @y.435
  %39 = add i32 %37, 2045449762
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, 2045449762
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %102

; <label>:51:                                     ; preds = %28
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %34, %"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* %31, %"class.std::allocator.0"* dereferenceable(1) %36)
          to label %52 unwind label %54

; <label>:52:                                     ; preds = %51
  %53 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %53) #3
  ret void

; <label>:54:                                     ; preds = %51
  %55 = load i32, i32* @x.434
  %56 = load i32, i32* @y.435
  %57 = sub i32 %55, -72830234
  %58 = sub i32 %57, 1
  %59 = add i32 %58, -72830234
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %111

; <label>:81:                                     ; preds = %54, %111
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  store i8* %83, i8** %32, align 8
  %84 = extractvalue { i8*, i32 } %82, 1
  store i32 %84, i32* %33, align 4
  %85 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %85) #3
  %86 = load i32, i32* @x.434
  %87 = load i32, i32* @y.435
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %111

; <label>:99:                                     ; preds = %81
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i8*, i8** %32, align 8
  call void @__clang_call_terminate(i8* %101) #11
  unreachable

; <label>:102:                                    ; preds = %28, %1
  %103 = alloca %"class.std::deque"*, align 8
  %104 = alloca %"struct.std::_Deque_iterator", align 8
  %105 = alloca %"struct.std::_Deque_iterator", align 8
  %106 = alloca i8*
  %107 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %103, align 8
  %108 = load %"class.std::deque"*, %"class.std::deque"** %103, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %104, %"class.std::deque"* %108) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %105, %"class.std::deque"* %108) #3
  %109 = bitcast %"class.std::deque"* %108 to %"class.std::_Deque_base"*
  %110 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %109) #3
  br label %28

; <label>:111:                                    ; preds = %81, %54
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %32, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %33, align 4
  %115 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %115) #3
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.438
  %7 = load i32, i32* @y.439
  %8 = sub i32 %6, 201921279
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 201921279
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -654397842, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -654397842, label %20
    i32 -502972266, label %28
    i32 -435840467, label %64
    i32 1435608952, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -502972266, i32 1435608952
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  store i32* %37, i32** %3
  %38 = load i32, i32* @x.438
  %39 = load i32, i32* @y.439
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -435840467, i32 1435608952
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %3
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector"*, %"class.std::vector"** %67, align 8
  %70 = bitcast %"class.std::vector"* %69 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 -502972266, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %5) #3
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %8) #3
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %5, i32 1
  store %"struct.Graph::edge"* %6, %"struct.Graph::edge"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator.15"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %8

; <label>:7:                                      ; preds = %1
  ret void

; <label>:8:                                      ; preds = %1
  %9 = load i32, i32* @x.454
  %10 = load i32, i32* @y.455
  %11 = add i32 %9, 450923010
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, 450923010
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = icmp slt i32 %10, 10
  %19 = and i1 %17, %18
  %20 = xor i1 %17, %18
  %21 = or i1 %19, %20
  %22 = or i1 %17, %18
  br i1 %21, label %23, label %99

; <label>:23:                                     ; preds = %8, %99
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #3
  %27 = load i32, i32* @x.454
  %28 = load i32, i32* @y.455
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %99

; <label>:52:                                     ; preds = %23
  br label %53

; <label>:53:                                     ; preds = %52
  %54 = load i32, i32* @x.454
  %55 = load i32, i32* @y.455
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %103

; <label>:79:                                     ; preds = %53, %103
  %80 = load i8*, i8** %3, align 8
  %81 = load i32, i32* %4, align 4
  %82 = insertvalue { i8*, i32 } undef, i8* %80, 0
  %83 = insertvalue { i8*, i32 } %82, i32 %81, 1
  %84 = load i32, i32* @x.454
  %85 = load i32, i32* @y.455
  %86 = sub i32 %84, -1055472860
  %87 = sub i32 %86, 1
  %88 = add i32 %87, -1055472860
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %103

; <label>:98:                                     ; preds = %79
  resume { i8*, i32 } %83

; <label>:99:                                     ; preds = %23, %8
  %100 = landingpad { i8*, i32 }
          cleanup
  %101 = extractvalue { i8*, i32 } %100, 0
  store i8* %101, i8** %3, align 8
  %102 = extractvalue { i8*, i32 } %100, 1
  store i32 %102, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #3
  br label %23

; <label>:103:                                    ; preds = %79, %53
  %104 = load i8*, i8** %3, align 8
  %105 = load i32, i32* %4, align 4
  %106 = insertvalue { i8*, i32 } undef, i8* %104, 0
  %107 = insertvalue { i8*, i32 } %106, i32 %105, 1
  br label %79
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.0"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.0"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 0
  store i32** null, i32*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, %15
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add i64 %15, 1
  store i64 %19, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 0, %21
  %23 = sub i64 0, 2
  %24 = add i64 %22, %23
  %25 = sub i64 0, %24
  %26 = add i64 %21, 2
  store i64 %25, i64* %7, align 8
  %27 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  store i64 %28, i64* %30, align 8
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %33)
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  store i32** %34, i32*** %36, align 8
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 0
  %39 = load i32**, i32*** %38, align 8
  %40 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 1
  %42 = load i64, i64* %41, align 8
  %43 = load i64, i64* %5, align 8
  %44 = sub i64 %42, 2055525837343711457
  %45 = sub i64 %44, %43
  %46 = add i64 %45, 2055525837343711457
  %47 = sub i64 %42, %43
  %48 = udiv i64 %46, 2
  %49 = getelementptr inbounds i32*, i32** %39, i64 %48
  store i32** %49, i32*** %8, align 8
  %50 = load i32**, i32*** %8, align 8
  %51 = load i64, i64* %5, align 8
  %52 = getelementptr inbounds i32*, i32** %50, i64 %51
  store i32** %52, i32*** %9, align 8
  %53 = load i32**, i32*** %8, align 8
  %54 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %53, i32** %54)
          to label %55 unwind label %56

; <label>:55:                                     ; preds = %2
  br label %107

; <label>:56:                                     ; preds = %2
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %10, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %11, align 4
  br label %60

; <label>:60:                                     ; preds = %56
  %61 = load i8*, i8** %10, align 8
  %62 = call i8* @__cxa_begin_catch(i8* %61) #3
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 0
  %65 = load i32**, i32*** %64, align 8
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %66, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %65, i64 %68) #3
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 0
  store i32** null, i32*** %70, align 8
  %71 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %71, i32 0, i32 1
  store i64 0, i64* %72, align 8
  invoke void @__cxa_rethrow() #12
          to label %183 unwind label %73

; <label>:73:                                     ; preds = %60
  %74 = landingpad { i8*, i32 }
          cleanup
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %10, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %77 unwind label %138

; <label>:77:                                     ; preds = %73
  %78 = load i32, i32* @x.458
  %79 = load i32, i32* @y.459
  %80 = sub i32 %78, 326508242
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 326508242
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %184

; <label>:92:                                     ; preds = %77, %184
  %93 = load i32, i32* @x.458
  %94 = load i32, i32* @y.459
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %184

; <label>:106:                                    ; preds = %92
  br label %133

; <label>:107:                                    ; preds = %55
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 2
  %110 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %109, i32** %110) #3
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %111, i32 0, i32 3
  %113 = load i32**, i32*** %9, align 8
  %114 = getelementptr inbounds i32*, i32** %113, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %112, i32** %114) #3
  %115 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %115, i32 0, i32 2
  %117 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %116, i32 0, i32 1
  %118 = load i32*, i32** %117, align 8
  %119 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %119, i32 0, i32 2
  %121 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %120, i32 0, i32 0
  store i32* %118, i32** %121, align 8
  %122 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %122, i32 0, i32 3
  %124 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %123, i32 0, i32 1
  %125 = load i32*, i32** %124, align 8
  %126 = load i64, i64* %4, align 8
  %127 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %128 = urem i64 %126, %127
  %129 = getelementptr inbounds i32, i32* %125, i64 %128
  %130 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %130, i32 0, i32 3
  %132 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %131, i32 0, i32 0
  store i32* %129, i32** %132, align 8
  ret void

; <label>:133:                                    ; preds = %106
  %134 = load i8*, i8** %10, align 8
  %135 = load i32, i32* %11, align 4
  %136 = insertvalue { i8*, i32 } undef, i8* %134, 0
  %137 = insertvalue { i8*, i32 } %136, i32 %135, 1
  resume { i8*, i32 } %137

; <label>:138:                                    ; preds = %73
  %139 = load i32, i32* @x.458
  %140 = load i32, i32* @y.459
  %141 = sub i32 %139, -26198126
  %142 = sub i32 %141, 1
  %143 = add i32 %142, -26198126
  %144 = sub i32 %139, 1
  %145 = mul i32 %139, %143
  %146 = urem i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = icmp slt i32 %140, 10
  %149 = and i1 %147, %148
  %150 = xor i1 %147, %148
  %151 = or i1 %149, %150
  %152 = or i1 %147, %148
  br i1 %151, label %153, label %185

; <label>:153:                                    ; preds = %138, %185
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #11
  %156 = load i32, i32* @x.458
  %157 = load i32, i32* @y.459
  %158 = add i32 %156, 1084555165
  %159 = sub i32 %158, 1
  %160 = sub i32 %159, 1084555165
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = xor i1 %164, true
  %167 = xor i1 %165, true
  %168 = xor i1 false, true
  %169 = and i1 %166, false
  %170 = and i1 %164, %168
  %171 = and i1 %167, false
  %172 = and i1 %165, %168
  %173 = or i1 %169, %170
  %174 = or i1 %171, %172
  %175 = xor i1 %173, %174
  %176 = or i1 %166, %167
  %177 = xor i1 %176, true
  %178 = or i1 false, %168
  %179 = and i1 %177, %178
  %180 = or i1 %175, %179
  %181 = or i1 %164, %165
  br i1 %180, label %182, label %185

; <label>:182:                                    ; preds = %153
  unreachable

; <label>:183:                                    ; preds = %60
  unreachable

; <label>:184:                                    ; preds = %92, %77
  br label %92

; <label>:185:                                    ; preds = %153, %138
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  call void @__clang_call_terminate(i8* %187) #11
  br label %153
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.460
  %5 = load i32, i32* @y.461
  %6 = sub i32 %4, 1375820890
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1375820890
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1161266942, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1161266942, label %18
    i32 -1466151197, label %26
    i32 -2086588962, label %44
    i32 741831076, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1466151197, i32 741831076
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %28 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %29) #3
  %30 = load i32, i32* @x.460
  %31 = load i32, i32* @y.461
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -2086588962, i32 741831076
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %46, align 8
  %47 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %46, align 8
  %48 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47 to %"class.std::allocator.0"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.0"* %48) #3
  store i32 -1466151197, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i64*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.464
  %8 = load i32, i32* @y.465
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -609010034, i32* %16
  %17 = alloca i64
  br label %18

; <label>:18:                                     ; preds = %1, %167
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -609010034, label %21
    i32 329012757, label %29
    i32 1194599051, label %62
    i32 481441694, label %65
    i32 1671331270, label %93
    i32 -39830478, label %124
    i32 219654908, label %126
    i32 -495225554, label %127
    i32 -1488482924, label %129
    i32 1767632235, label %133
  ]

; <label>:20:                                     ; preds = %18
  br label %167

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 329012757, i32 -1488482924
  store i32 %28, i32* %16
  br label %167

; <label>:29:                                     ; preds = %18
  %30 = alloca i64, align 8
  store i64* %30, i64** %4
  %31 = load volatile i64*, i64** %4
  store i64 %0, i64* %31, align 8
  %32 = load volatile i64*, i64** %4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, 512
  store i1 %34, i1* %3
  %35 = load i32, i32* @x.464
  %36 = load i32, i32* @y.465
  %37 = add i32 %35, -1156831771
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1156831771
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 1194599051, i32 -1488482924
  store i32 %61, i32* %16
  br label %167

; <label>:62:                                     ; preds = %18
  %63 = load volatile i1, i1* %3
  %64 = select i1 %63, i32 481441694, i32 219654908
  store i32 %64, i32* %16
  br label %167

; <label>:65:                                     ; preds = %18
  %66 = load i32, i32* @x.464
  %67 = load i32, i32* @y.465
  %68 = add i32 %66, 1207861858
  %69 = sub i32 %68, 1
  %70 = sub i32 %69, 1207861858
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 false, true
  %79 = and i1 %76, false
  %80 = and i1 %74, %78
  %81 = and i1 %77, false
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 false, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 1671331270, i32 1767632235
  store i32 %92, i32* %16
  br label %167

; <label>:93:                                     ; preds = %18
  %94 = load volatile i64*, i64** %4
  %95 = load i64, i64* %94, align 8
  %96 = udiv i64 512, %95
  store i64 %96, i64* %2
  %97 = load i32, i32* @x.464
  %98 = load i32, i32* @y.465
  %99 = add i32 %97, -897049119
  %100 = sub i32 %99, 1
  %101 = sub i32 %100, -897049119
  %102 = sub i32 %97, 1
  %103 = mul i32 %97, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %98, 10
  %107 = xor i1 %105, true
  %108 = xor i1 %106, true
  %109 = xor i1 false, true
  %110 = and i1 %107, false
  %111 = and i1 %105, %109
  %112 = and i1 %108, false
  %113 = and i1 %106, %109
  %114 = or i1 %110, %111
  %115 = or i1 %112, %113
  %116 = xor i1 %114, %115
  %117 = or i1 %107, %108
  %118 = xor i1 %117, true
  %119 = or i1 false, %109
  %120 = and i1 %118, %119
  %121 = or i1 %116, %120
  %122 = or i1 %105, %106
  %123 = select i1 %121, i32 -39830478, i32 1767632235
  store i32 %123, i32* %16
  br label %167

; <label>:124:                                    ; preds = %18
  store i32 -495225554, i32* %16
  %125 = load volatile i64, i64* %2
  store i64 %125, i64* %17
  br label %167

; <label>:126:                                    ; preds = %18
  store i32 -495225554, i32* %16
  store i64 1, i64* %17
  br label %167

; <label>:127:                                    ; preds = %18
  %128 = load i64, i64* %17
  ret i64 %128

; <label>:129:                                    ; preds = %18
  %130 = alloca i64, align 8
  store i64 %0, i64* %130, align 8
  %131 = load i64, i64* %130, align 8
  %132 = icmp ult i64 %131, 512
  store i32 329012757, i32* %16
  br label %167

; <label>:133:                                    ; preds = %18
  %134 = load volatile i64*, i64** %4
  %135 = load i64, i64* %134, align 8
  %136 = add i64 0, 1837027220106890158
  %137 = sub i64 %136, 512
  %138 = sub i64 %137, 1837027220106890158
  %139 = sub i64 0, 512
  %140 = sub i64 %138, 6373413238025678041
  %141 = add i64 %140, %135
  %142 = add i64 %141, 6373413238025678041
  %143 = add i64 %138, %135
  %144 = sub i64 0, %135
  %145 = add i64 512, %144
  %146 = sub i64 512, %135
  %147 = mul i64 %145, %135
  %148 = shl i64 512, %135
  %149 = sub i64 0, -7382886593006855696
  %150 = sub i64 %149, 512
  %151 = add i64 %150, -7382886593006855696
  %152 = sub i64 0, 512
  %153 = sub i64 0, %151
  %154 = sub i64 0, %135
  %155 = add i64 %153, %154
  %156 = sub i64 0, %155
  %157 = add i64 %151, %135
  %158 = sub i64 0, %135
  %159 = add i64 512, %158
  %160 = sub i64 512, %135
  %161 = mul i64 %159, %135
  %162 = sub i64 0, %135
  %163 = add i64 512, %162
  %164 = sub i64 512, %135
  %165 = mul i64 %163, %135
  %166 = udiv i64 512, %135
  store i32 1671331270, i32* %16
  br label %167

; <label>:167:                                    ; preds = %133, %129, %126, %124, %93, %65, %62, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.466
  %4 = load i32, i32* @y.467
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %91

; <label>:16:                                     ; preds = %2, %91
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.17", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %19, %"class.std::_Deque_base"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.466
  %25 = load i32, i32* @y.467
  %26 = add i32 %24, 454214370
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 454214370
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %91

; <label>:38:                                     ; preds = %16
  %39 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1) %19, i64 %23)
          to label %40 unwind label %41

; <label>:40:                                     ; preds = %38
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  ret i32** %39

; <label>:41:                                     ; preds = %38
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %20, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  br label %45

; <label>:45:                                     ; preds = %41
  %46 = load i32, i32* @x.466
  %47 = load i32, i32* @y.467
  %48 = sub i32 %46, -714023049
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -714023049
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %99

; <label>:60:                                     ; preds = %45, %99
  %61 = load i8*, i8** %20, align 8
  %62 = load i32, i32* %21, align 4
  %63 = insertvalue { i8*, i32 } undef, i8* %61, 0
  %64 = insertvalue { i8*, i32 } %63, i32 %62, 1
  %65 = load i32, i32* @x.466
  %66 = load i32, i32* @y.467
  %67 = sub i32 0, 1
  %68 = add i32 %65, %67
  %69 = sub i32 %65, 1
  %70 = mul i32 %65, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %66, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %99

; <label>:90:                                     ; preds = %60
  resume { i8*, i32 } %64

; <label>:91:                                     ; preds = %16, %2
  %92 = alloca %"class.std::_Deque_base"*, align 8
  %93 = alloca i64, align 8
  %94 = alloca %"class.std::allocator.17", align 1
  %95 = alloca i8*
  %96 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %92, align 8
  store i64 %1, i64* %93, align 8
  %97 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %92, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %94, %"class.std::_Deque_base"* %97) #3
  %98 = load i64, i64* %93, align 8
  br label %16

; <label>:99:                                     ; preds = %60, %45
  %100 = load i8*, i8** %20, align 8
  %101 = load i32, i32* %21, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  br label %60
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %106, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %116

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.468
  %18 = load i32, i32* @y.469
  %19 = add i32 %17, 1937674774
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, 1937674774
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %186

; <label>:43:                                     ; preds = %16, %186
  %44 = load i32, i32* @x.468
  %45 = load i32, i32* @y.469
  %46 = sub i32 %44, 1873080918
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1873080918
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %186

; <label>:70:                                     ; preds = %43
  %71 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %72 unwind label %107

; <label>:72:                                     ; preds = %70
  %73 = load i32**, i32*** %7, align 8
  store i32* %71, i32** %73, align 8
  br label %74

; <label>:74:                                     ; preds = %72
  %75 = load i32, i32* @x.468
  %76 = load i32, i32* @y.469
  %77 = add i32 %75, 1294110304
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 1294110304
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %187

; <label>:89:                                     ; preds = %74, %187
  %90 = load i32**, i32*** %7, align 8
  %91 = getelementptr inbounds i32*, i32** %90, i32 1
  store i32** %91, i32*** %7, align 8
  %92 = load i32, i32* @x.468
  %93 = load i32, i32* @y.469
  %94 = add i32 %92, -1180676901
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, -1180676901
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  br i1 %104, label %106, label %187

; <label>:106:                                    ; preds = %89
  br label %12

; <label>:107:                                    ; preds = %70
  %108 = landingpad { i8*, i32 }
          catch i8* null
  %109 = extractvalue { i8*, i32 } %108, 0
  store i8* %109, i8** %8, align 8
  %110 = extractvalue { i8*, i32 } %108, 1
  store i32 %110, i32* %9, align 4
  br label %111

; <label>:111:                                    ; preds = %107
  %112 = load i8*, i8** %8, align 8
  %113 = call i8* @__cxa_begin_catch(i8* %112) #3
  %114 = load i32**, i32*** %5, align 8
  %115 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %114, i32** %115) #3
  invoke void @__cxa_rethrow() #12
          to label %185 unwind label %117

; <label>:116:                                    ; preds = %12
  br label %122

; <label>:117:                                    ; preds = %111
  %118 = landingpad { i8*, i32 }
          cleanup
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %8, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %121 unwind label %182

; <label>:121:                                    ; preds = %117
  br label %123

; <label>:122:                                    ; preds = %116
  ret void

; <label>:123:                                    ; preds = %121
  %124 = load i32, i32* @x.468
  %125 = load i32, i32* @y.469
  %126 = sub i32 %124, 1580218447
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 1580218447
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %190

; <label>:150:                                    ; preds = %123, %190
  %151 = load i8*, i8** %8, align 8
  %152 = load i32, i32* %9, align 4
  %153 = insertvalue { i8*, i32 } undef, i8* %151, 0
  %154 = insertvalue { i8*, i32 } %153, i32 %152, 1
  %155 = load i32, i32* @x.468
  %156 = load i32, i32* @y.469
  %157 = sub i32 %155, -2102761219
  %158 = sub i32 %157, 1
  %159 = add i32 %158, -2102761219
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 true, true
  %168 = and i1 %165, true
  %169 = and i1 %163, %167
  %170 = and i1 %166, true
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 true, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %190

; <label>:181:                                    ; preds = %150
  resume { i8*, i32 } %154

; <label>:182:                                    ; preds = %117
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  call void @__clang_call_terminate(i8* %184) #11
  unreachable

; <label>:185:                                    ; preds = %111
  unreachable

; <label>:186:                                    ; preds = %43, %16
  br label %43

; <label>:187:                                    ; preds = %89, %74
  %188 = load i32**, i32*** %7, align 8
  %189 = getelementptr inbounds i32*, i32** %188, i32 1
  store i32** %189, i32*** %7, align 8
  br label %89

; <label>:190:                                    ; preds = %150, %123
  %191 = load i8*, i8** %8, align 8
  %192 = load i32, i32* %9, align 4
  %193 = insertvalue { i8*, i32 } undef, i8* %191, 0
  %194 = insertvalue { i8*, i32 } %193, i32 %192, 1
  br label %150
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.17", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          catch i8* null
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %8, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i32, i32* @x.470
  %20 = load i32, i32* @y.471
  %21 = add i32 %19, -2087811077
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -2087811077
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  br i1 %31, label %33, label %49

; <label>:33:                                     ; preds = %18, %49
  %34 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.470
  %36 = load i32, i32* @y.471
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  br i1 %46, label %48, label %49

; <label>:48:                                     ; preds = %33
  unreachable

; <label>:49:                                     ; preds = %33, %18
  %50 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %50) #11
  br label %33
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator.0"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.17"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.478
  %5 = load i32, i32* @y.479
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1665267321, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %73
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1665267321, label %17
    i32 981668200, label %37
    i32 619747074, label %68
    i32 1812359320, label %69
  ]

; <label>:16:                                     ; preds = %14
  br label %73

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 981668200, i32 1812359320
  store i32 %36, i32* %13
  br label %73

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %38, align 8
  %39 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %38, align 8
  %40 = bitcast %"class.std::allocator.17"* %39 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %40) #3
  %41 = load i32, i32* @x.478
  %42 = load i32, i32* @y.479
  %43 = sub i32 %41, -1162947735
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1162947735
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 619747074, i32 1812359320
  store i32 %67, i32* %13
  br label %73

; <label>:68:                                     ; preds = %14
  ret void

; <label>:69:                                     ; preds = %14
  %70 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %70, align 8
  %71 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %70, align 8
  %72 = bitcast %"class.std::allocator.17"* %71 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %72) #3
  store i32 981668200, i32* %13
  br label %73

; <label>:73:                                     ; preds = %69, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1720868163, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1720868163, label %16
    i32 616509407, label %21
    i32 -176494231, label %36
    i32 -297983071, label %64
    i32 83355002, label %65
    i32 -830864757, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 616509407, i32 83355002
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.486
  %23 = load i32, i32* @y.487
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -176494231, i32 -830864757
  store i32 %35, i32* %12
  br label %71

; <label>:36:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %37 = load i32, i32* @x.486
  %38 = load i32, i32* @y.487
  %39 = sub i32 %37, 749719043
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 749719043
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -297983071, i32 -830864757
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 8
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to i32**
  ret i32** %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -176494231, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %36, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.0"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 1595911766, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %63
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1595911766, label %15
    i32 295196419, label %20
    i32 354366849, label %24
    i32 -2059957045, label %40
    i32 -1588524308, label %58
    i32 882316743, label %59
    i32 630908193, label %60
  ]

; <label>:14:                                     ; preds = %12
  br label %63

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 295196419, i32 882316743
  store i32 %19, i32* %11
  br label %63

; <label>:20:                                     ; preds = %12
  %21 = load i32**, i32*** %8, align 8
  %22 = load i32*, i32** %21, align 8
  %23 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %23, i32* %22) #3
  store i32 354366849, i32* %11
  br label %63

; <label>:24:                                     ; preds = %12
  %25 = load i32, i32* @x.494
  %26 = load i32, i32* @y.495
  %27 = add i32 %25, -561640675
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, -561640675
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -2059957045, i32 630908193
  store i32 %39, i32* %11
  br label %63

; <label>:40:                                     ; preds = %12
  %41 = load i32**, i32*** %8, align 8
  %42 = getelementptr inbounds i32*, i32** %41, i32 1
  store i32** %42, i32*** %8, align 8
  %43 = load i32, i32* @x.494
  %44 = load i32, i32* @y.495
  %45 = add i32 %43, 1407706133
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1407706133
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1588524308, i32 630908193
  store i32 %57, i32* %11
  br label %63

; <label>:58:                                     ; preds = %12
  store i32 1595911766, i32* %11
  br label %63

; <label>:59:                                     ; preds = %12
  ret void

; <label>:60:                                     ; preds = %12
  %61 = load i32**, i32*** %8, align 8
  %62 = getelementptr inbounds i32*, i32** %61, i32 1
  store i32** %62, i32*** %8, align 8
  store i32 -2059957045, i32* %11
  br label %63

; <label>:63:                                     ; preds = %60, %58, %40, %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.1"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 2011124378, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 2011124378, label %16
    i32 -782765828, label %21
    i32 635345300, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -782765828, i32 635345300
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 4
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32*
  ret i32* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.1"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.502
  %4 = load i32, i32* @y.503
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %181

; <label>:16:                                     ; preds = %2, %181
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i32* %1, i32** %18, align 8
  %19 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20 to %"class.std::allocator.0"*
  %22 = load i32*, i32** %18, align 8
  %23 = load i32, i32* @x.502
  %24 = load i32, i32* @y.503
  %25 = add i32 %23, -1407014134
  %26 = sub i32 %25, 1
  %27 = sub i32 %26, -1407014134
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %181

; <label>:49:                                     ; preds = %16
  %50 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %51 unwind label %124

; <label>:51:                                     ; preds = %49
  %52 = load i32, i32* @x.502
  %53 = load i32, i32* @y.503
  %54 = sub i32 %52, 239123206
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 239123206
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %188

; <label>:78:                                     ; preds = %51, %188
  %79 = load i32, i32* @x.502
  %80 = load i32, i32* @y.503
  %81 = sub i32 %79, 102752282
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 102752282
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %188

; <label>:93:                                     ; preds = %78
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.0"* dereferenceable(1) %21, i32* %22, i64 %50)
          to label %94 unwind label %124

; <label>:94:                                     ; preds = %93
  %95 = load i32, i32* @x.502
  %96 = load i32, i32* @y.503
  %97 = add i32 %95, -1447680973
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, -1447680973
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %189

; <label>:109:                                    ; preds = %94, %189
  %110 = load i32, i32* @x.502
  %111 = load i32, i32* @y.503
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %189

; <label>:123:                                    ; preds = %109
  ret void

; <label>:124:                                    ; preds = %93, %49
  %125 = load i32, i32* @x.502
  %126 = load i32, i32* @y.503
  %127 = add i32 %125, 75962497
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 75962497
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %190

; <label>:151:                                    ; preds = %124, %190
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  call void @__clang_call_terminate(i8* %153) #11
  %154 = load i32, i32* @x.502
  %155 = load i32, i32* @y.503
  %156 = add i32 %154, -983879978
  %157 = sub i32 %156, 1
  %158 = sub i32 %157, -983879978
  %159 = sub i32 %154, 1
  %160 = mul i32 %154, %158
  %161 = urem i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = icmp slt i32 %155, 10
  %164 = xor i1 %162, true
  %165 = xor i1 %163, true
  %166 = xor i1 false, true
  %167 = and i1 %164, false
  %168 = and i1 %162, %166
  %169 = and i1 %165, false
  %170 = and i1 %163, %166
  %171 = or i1 %167, %168
  %172 = or i1 %169, %170
  %173 = xor i1 %171, %172
  %174 = or i1 %164, %165
  %175 = xor i1 %174, true
  %176 = or i1 false, %166
  %177 = and i1 %175, %176
  %178 = or i1 %173, %177
  %179 = or i1 %162, %163
  br i1 %178, label %180, label %190

; <label>:180:                                    ; preds = %151
  unreachable

; <label>:181:                                    ; preds = %16, %2
  %182 = alloca %"class.std::_Deque_base"*, align 8
  %183 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %182, align 8
  store i32* %1, i32** %183, align 8
  %184 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %182, align 8
  %185 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %184, i32 0, i32 0
  %186 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %185 to %"class.std::allocator.0"*
  %187 = load i32*, i32** %183, align 8
  br label %16

; <label>:188:                                    ; preds = %78, %51
  br label %78

; <label>:189:                                    ; preds = %109, %94
  br label %109

; <label>:190:                                    ; preds = %151, %124
  %191 = landingpad { i8*, i32 }
          catch i8* null
  %192 = extractvalue { i8*, i32 } %191, 0
  call void @__clang_call_terminate(i8* %192) #11
  br label %151
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.504
  %7 = load i32, i32* @y.505
  %8 = add i32 %6, 272341874
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 272341874
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 916943332, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 916943332, label %20
    i32 1626696758, label %40
    i32 894469113, label %63
    i32 1798480596, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1626696758, i32 1798480596
  store i32 %39, i32* %16
  br label %72

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.17"*, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %41, align 8
  %45 = bitcast %"class.std::allocator.17"* %44 to %"class.__gnu_cxx::new_allocator.18"*
  %46 = load i32**, i32*** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %45, i32** %46, i64 %47)
  %48 = load i32, i32* @x.504
  %49 = load i32, i32* @y.505
  %50 = sub i32 %48, -25114939
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -25114939
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 894469113, i32 1798480596
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.17"*, align 8
  %66 = alloca i32**, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %65, align 8
  store i32** %1, i32*** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %65, align 8
  %69 = bitcast %"class.std::allocator.17"* %68 to %"class.__gnu_cxx::new_allocator.18"*
  %70 = load i32**, i32*** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %69, i32** %70, i64 %71)
  store i32 1626696758, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.506
  %7 = load i32, i32* @y.507
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -536244631, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -536244631, label %19
    i32 1202419449, label %27
    i32 648562125, label %60
    i32 1175763701, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1202419449, i32 1175763701
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %29 = alloca i32**, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %28, align 8
  store i32** %1, i32*** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %28, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = bitcast i32** %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.506
  %35 = load i32, i32* @y.507
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 648562125, i32 1175763701
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %63 = alloca i32**, align 8
  %64 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %62, align 8
  store i32** %1, i32*** %63, align 8
  store i64 %2, i64* %64, align 8
  %65 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %62, align 8
  %66 = load i32**, i32*** %63, align 8
  %67 = bitcast i32** %66 to i8*
  call void @_ZdlPv(i8* %67) #3
  store i32 1202419449, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.516
  %6 = load i32, i32* @y.517
  %7 = add i32 %5, 436558032
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 436558032
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -407068656, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -407068656, label %19
    i32 -1216362923, label %27
    i32 -701789628, label %45
    i32 725071491, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1216362923, i32 725071491
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  store %"class.std::_Deque_base"* %29, %"class.std::_Deque_base"** %2
  %30 = load i32, i32* @x.516
  %31 = load i32, i32* @y.517
  %32 = add i32 %30, -37207656
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -37207656
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -701789628, i32 725071491
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2
  ret %"class.std::_Deque_base"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %48, align 8
  %49 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %48, align 8
  store i32 -1216362923, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.0"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %21 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %22) #3
  br label %27

; <label>:23:                                     ; preds = %2
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %81

; <label>:27:                                     ; preds = %19, %13
  %28 = load i32, i32* @x.518
  %29 = load i32, i32* @y.519
  %30 = sub i32 %28, 1828107549
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1828107549
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %86

; <label>:54:                                     ; preds = %27, %86
  %55 = load i32, i32* @x.518
  %56 = load i32, i32* @y.519
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %86

; <label>:80:                                     ; preds = %54
  ret void

; <label>:81:                                     ; preds = %23
  %82 = load i8*, i8** %6, align 8
  %83 = load i32, i32* %7, align 4
  %84 = insertvalue { i8*, i32 } undef, i8* %82, 0
  %85 = insertvalue { i8*, i32 } %84, i32 %83, 1
  resume { i8*, i32 } %85

; <label>:86:                                     ; preds = %54, %27
  br label %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %2, align 8
  %3 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %2, align 8
  ret %"class.std::allocator.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.0"*
  ret %"class.std::allocator.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.0"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.0"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.0"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %6, %"class.std::allocator.0"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"* %6, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %1, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.534
  %6 = load i32, i32* @y.535
  %7 = sub i32 %5, -725257013
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -725257013
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1315870196, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1315870196, label %19
    i32 -956472084, label %27
    i32 480251424, label %55
    i32 -539438323, label %56
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -956472084, i32 -539438323
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca i32***, align 8
  %29 = alloca i32***, align 8
  %30 = alloca i32**, align 8
  store i32*** %0, i32**** %28, align 8
  store i32*** %1, i32**** %29, align 8
  %31 = load i32***, i32**** %28, align 8
  %32 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %31) #3
  %33 = load i32**, i32*** %32, align 8
  store i32** %33, i32*** %30, align 8
  %34 = load i32***, i32**** %29, align 8
  %35 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %34) #3
  %36 = load i32**, i32*** %35, align 8
  %37 = load i32***, i32**** %28, align 8
  store i32** %36, i32*** %37, align 8
  %38 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %39 = load i32**, i32*** %38, align 8
  %40 = load i32***, i32**** %29, align 8
  store i32** %39, i32*** %40, align 8
  %41 = load i32, i32* @x.534
  %42 = load i32, i32* @y.535
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 480251424, i32 -539438323
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  ret void

; <label>:56:                                     ; preds = %16
  %57 = alloca i32***, align 8
  %58 = alloca i32***, align 8
  %59 = alloca i32**, align 8
  store i32*** %0, i32**** %57, align 8
  store i32*** %1, i32**** %58, align 8
  %60 = load i32***, i32**** %57, align 8
  %61 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %60) #3
  %62 = load i32**, i32*** %61, align 8
  store i32** %62, i32*** %59, align 8
  %63 = load i32***, i32**** %58, align 8
  %64 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %63) #3
  %65 = load i32**, i32*** %64, align 8
  %66 = load i32***, i32**** %57, align 8
  store i32** %65, i32*** %66, align 8
  %67 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %59) #3
  %68 = load i32**, i32*** %67, align 8
  %69 = load i32***, i32**** %58, align 8
  store i32** %68, i32*** %69, align 8
  store i32 -956472084, i32* %15
  br label %70

; <label>:70:                                     ; preds = %56, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.538
  %6 = load i32, i32* @y.539
  %7 = sub i32 %5, -419869964
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -419869964
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -291974208, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -291974208, label %19
    i32 679458122, label %39
    i32 -1829612777, label %56
    i32 626288529, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 679458122, i32 626288529
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %40, align 8
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  store %"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"** %2
  %42 = load i32, i32* @x.538
  %43 = load i32, i32* @y.539
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1829612777, i32 626288529
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %59, align 8
  %60 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %59, align 8
  store i32 679458122, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.0"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.0"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 1573712292, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %153
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 1573712292, label %14
    i32 1266897287, label %18
    i32 2091518128, label %46
    i32 -543699229, label %82
    i32 -2137239793, label %83
    i32 -853644368, label %98
    i32 1438965596, label %127
    i32 -2088081438, label %128
    i32 2134882028, label %150
  ]

; <label>:13:                                     ; preds = %11
  br label %153

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 1266897287, i32 -2137239793
  store i32 %17, i32* %10
  br label %153

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.552
  %20 = load i32, i32* @y.553
  %21 = add i32 %19, -1679982417
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1679982417
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 2091518128, i32 -2088081438
  store i32 %45, i32* %10
  br label %153

; <label>:46:                                     ; preds = %11
  %47 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %48, i32 0, i32 2
  %50 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %49, i32 0, i32 3
  %51 = load i32**, i32*** %50, align 8
  %52 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %53 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %53, i32 0, i32 3
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %54, i32 0, i32 3
  %56 = load i32**, i32*** %55, align 8
  %57 = getelementptr inbounds i32*, i32** %56, i64 1
  %58 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %58, i32** %51, i32** %57) #3
  %59 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60, i32 0, i32 0
  %62 = load i32**, i32*** %61, align 8
  %63 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %67, i32** %62, i64 %66) #3
  %68 = load i32, i32* @x.552
  %69 = load i32, i32* @y.553
  %70 = sub i32 0, 1
  %71 = add i32 %68, %70
  %72 = sub i32 %68, 1
  %73 = mul i32 %68, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %69, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -543699229, i32 -2088081438
  store i32 %81, i32* %10
  br label %153

; <label>:82:                                     ; preds = %11
  store i32 -2137239793, i32* %10
  br label %153

; <label>:83:                                     ; preds = %11
  %84 = load i32, i32* @x.552
  %85 = load i32, i32* @y.553
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  %97 = select i1 %95, i32 -853644368, i32 2134882028
  store i32 %97, i32* %10
  br label %153

; <label>:98:                                     ; preds = %11
  %99 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %100 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %99, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %100) #3
  %101 = load i32, i32* @x.552
  %102 = load i32, i32* @y.553
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  %126 = select i1 %124, i32 1438965596, i32 2134882028
  store i32 %126, i32* %10
  br label %153

; <label>:127:                                    ; preds = %11
  ret void

; <label>:128:                                    ; preds = %11
  %129 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %130 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %130, i32 0, i32 2
  %132 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %131, i32 0, i32 3
  %133 = load i32**, i32*** %132, align 8
  %134 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %135 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %135, i32 0, i32 3
  %137 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %136, i32 0, i32 3
  %138 = load i32**, i32*** %137, align 8
  %139 = getelementptr inbounds i32*, i32** %138, i64 1
  %140 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %140, i32** %133, i32** %139) #3
  %141 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %142 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %142, i32 0, i32 0
  %144 = load i32**, i32*** %143, align 8
  %145 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %146 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %146, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %149, i32** %144, i64 %148) #3
  store i32 2091518128, i32* %10
  br label %153

; <label>:150:                                    ; preds = %11
  %151 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %152 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %151, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %152) #3
  store i32 -853644368, i32* %10
  br label %153

; <label>:153:                                    ; preds = %150, %128, %98, %83, %82, %46, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 1098405939, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %54
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1098405939, label %26
    i32 696444780, label %31
    i32 1793243832, label %50
    i32 -1656135553, label %53
  ]

; <label>:25:                                     ; preds = %23
  br label %54

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 696444780, i32 1793243832
  store i32 %30, i32* %22
  br label %54

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.0"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %42)
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %47, align 8
  store i32 -1656135553, i32* %22
  br label %54

; <label>:50:                                     ; preds = %23
  %51 = load i32*, i32** %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %52, i32* dereferenceable(4) %51)
  store i32 -1656135553, i32* %22
  br label %54

; <label>:53:                                     ; preds = %23
  ret void

; <label>:54:                                     ; preds = %50, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %4, align 8
  %8 = bitcast %"class.std::allocator.0"* %7 to %"class.__gnu_cxx::new_allocator.1"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.558
  %4 = load i32, i32* @y.559
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %400

; <label>:28:                                     ; preds = %2, %400
  %29 = alloca %"class.std::deque"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8*
  %32 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %29, align 8
  store i32* %1, i32** %30, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %33, i64 1)
  %34 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %35 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %34)
  %36 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 3
  %40 = load i32**, i32*** %39, align 8
  %41 = getelementptr inbounds i32*, i32** %40, i64 1
  store i32* %35, i32** %41, align 8
  %42 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43 to %"class.std::allocator.0"*
  %45 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = load i32*, i32** %30, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %50) #3
  %52 = load i32, i32* @x.558
  %53 = load i32, i32* @y.559
  %54 = add i32 %52, 2102438295
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 2102438295
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 false, true
  %65 = and i1 %62, false
  %66 = and i1 %60, %64
  %67 = and i1 %63, false
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 false, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %400

; <label>:78:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.0"* dereferenceable(1) %44, i32* %49, i32* dereferenceable(4) %51)
          to label %79 unwind label %152

; <label>:79:                                     ; preds = %78
  %80 = load i32, i32* @x.558
  %81 = load i32, i32* @y.559
  %82 = sub i32 %80, 271848669
  %83 = sub i32 %82, 1
  %84 = add i32 %83, 271848669
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 false, true
  %93 = and i1 %90, false
  %94 = and i1 %88, %92
  %95 = and i1 %91, false
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 false, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  br i1 %104, label %106, label %424

; <label>:106:                                    ; preds = %79, %424
  %107 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %108 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %108, i32 0, i32 3
  %110 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %111, i32 0, i32 3
  %113 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %112, i32 0, i32 3
  %114 = load i32**, i32*** %113, align 8
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %109, i32** %115) #3
  %116 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %117, i32 0, i32 3
  %119 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %118, i32 0, i32 1
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %122 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %122, i32 0, i32 3
  %124 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %123, i32 0, i32 0
  store i32* %120, i32** %124, align 8
  %125 = load i32, i32* @x.558
  %126 = load i32, i32* @y.559
  %127 = add i32 %125, -1585599090
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1585599090
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %424

; <label>:151:                                    ; preds = %106
  br label %253

; <label>:152:                                    ; preds = %78
  %153 = load i32, i32* @x.558
  %154 = load i32, i32* @y.559
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 false, true
  %165 = and i1 %162, false
  %166 = and i1 %160, %164
  %167 = and i1 %163, false
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 false, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  br i1 %176, label %178, label %443

; <label>:178:                                    ; preds = %152, %443
  %179 = landingpad { i8*, i32 }
          catch i8* null
  %180 = extractvalue { i8*, i32 } %179, 0
  store i8* %180, i8** %31, align 8
  %181 = extractvalue { i8*, i32 } %179, 1
  store i32 %181, i32* %32, align 4
  %182 = load i32, i32* @x.558
  %183 = load i32, i32* @y.559
  %184 = sub i32 0, 1
  %185 = add i32 %182, %184
  %186 = sub i32 %182, 1
  %187 = mul i32 %182, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %183, 10
  %191 = and i1 %189, %190
  %192 = xor i1 %189, %190
  %193 = or i1 %191, %192
  %194 = or i1 %189, %190
  br i1 %193, label %195, label %443

; <label>:195:                                    ; preds = %178
  br label %196

; <label>:196:                                    ; preds = %195
  %197 = load i8*, i8** %31, align 8
  %198 = call i8* @__cxa_begin_catch(i8* %197) #3
  %199 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %200 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %201 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %201, i32 0, i32 3
  %203 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %202, i32 0, i32 3
  %204 = load i32**, i32*** %203, align 8
  %205 = getelementptr inbounds i32*, i32** %204, i64 1
  %206 = load i32*, i32** %205, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %199, i32* %206) #3
  invoke void @__cxa_rethrow() #12
          to label %357 unwind label %207

; <label>:207:                                    ; preds = %196
  %208 = load i32, i32* @x.558
  %209 = load i32, i32* @y.559
  %210 = sub i32 0, 1
  %211 = add i32 %208, %210
  %212 = sub i32 %208, 1
  %213 = mul i32 %208, %211
  %214 = urem i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = icmp slt i32 %209, 10
  %217 = xor i1 %215, true
  %218 = xor i1 %216, true
  %219 = xor i1 false, true
  %220 = and i1 %217, false
  %221 = and i1 %215, %219
  %222 = and i1 %218, false
  %223 = and i1 %216, %219
  %224 = or i1 %220, %221
  %225 = or i1 %222, %223
  %226 = xor i1 %224, %225
  %227 = or i1 %217, %218
  %228 = xor i1 %227, true
  %229 = or i1 false, %219
  %230 = and i1 %228, %229
  %231 = or i1 %226, %230
  %232 = or i1 %215, %216
  br i1 %231, label %233, label %447

; <label>:233:                                    ; preds = %207, %447
  %234 = landingpad { i8*, i32 }
          cleanup
  %235 = extractvalue { i8*, i32 } %234, 0
  store i8* %235, i8** %31, align 8
  %236 = extractvalue { i8*, i32 } %234, 1
  store i32 %236, i32* %32, align 4
  %237 = load i32, i32* @x.558
  %238 = load i32, i32* @y.559
  %239 = sub i32 %237, 1842593795
  %240 = sub i32 %239, 1
  %241 = add i32 %240, 1842593795
  %242 = sub i32 %237, 1
  %243 = mul i32 %237, %241
  %244 = urem i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = icmp slt i32 %238, 10
  %247 = and i1 %245, %246
  %248 = xor i1 %245, %246
  %249 = or i1 %247, %248
  %250 = or i1 %245, %246
  br i1 %249, label %251, label %447

; <label>:251:                                    ; preds = %233
  invoke void @__cxa_end_catch()
          to label %252 unwind label %301

; <label>:252:                                    ; preds = %251
  br label %254

; <label>:253:                                    ; preds = %151
  ret void

; <label>:254:                                    ; preds = %252
  %255 = load i32, i32* @x.558
  %256 = load i32, i32* @y.559
  %257 = sub i32 %255, -1866735100
  %258 = sub i32 %257, 1
  %259 = add i32 %258, -1866735100
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = and i1 %263, %264
  %266 = xor i1 %263, %264
  %267 = or i1 %265, %266
  %268 = or i1 %263, %264
  br i1 %267, label %269, label %451

; <label>:269:                                    ; preds = %254, %451
  %270 = load i8*, i8** %31, align 8
  %271 = load i32, i32* %32, align 4
  %272 = insertvalue { i8*, i32 } undef, i8* %270, 0
  %273 = insertvalue { i8*, i32 } %272, i32 %271, 1
  %274 = load i32, i32* @x.558
  %275 = load i32, i32* @y.559
  %276 = add i32 %274, -693569610
  %277 = sub i32 %276, 1
  %278 = sub i32 %277, -693569610
  %279 = sub i32 %274, 1
  %280 = mul i32 %274, %278
  %281 = urem i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = icmp slt i32 %275, 10
  %284 = xor i1 %282, true
  %285 = xor i1 %283, true
  %286 = xor i1 false, true
  %287 = and i1 %284, false
  %288 = and i1 %282, %286
  %289 = and i1 %285, false
  %290 = and i1 %283, %286
  %291 = or i1 %287, %288
  %292 = or i1 %289, %290
  %293 = xor i1 %291, %292
  %294 = or i1 %284, %285
  %295 = xor i1 %294, true
  %296 = or i1 false, %286
  %297 = and i1 %295, %296
  %298 = or i1 %293, %297
  %299 = or i1 %282, %283
  br i1 %298, label %300, label %451

; <label>:300:                                    ; preds = %269
  resume { i8*, i32 } %273

; <label>:301:                                    ; preds = %251
  %302 = load i32, i32* @x.558
  %303 = load i32, i32* @y.559
  %304 = sub i32 0, 1
  %305 = add i32 %302, %304
  %306 = sub i32 %302, 1
  %307 = mul i32 %302, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %303, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 true, true
  %314 = and i1 %311, true
  %315 = and i1 %309, %313
  %316 = and i1 %312, true
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 true, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %456

; <label>:327:                                    ; preds = %301, %456
  %328 = landingpad { i8*, i32 }
          catch i8* null
  %329 = extractvalue { i8*, i32 } %328, 0
  call void @__clang_call_terminate(i8* %329) #11
  %330 = load i32, i32* @x.558
  %331 = load i32, i32* @y.559
  %332 = add i32 %330, -1476742552
  %333 = sub i32 %332, 1
  %334 = sub i32 %333, -1476742552
  %335 = sub i32 %330, 1
  %336 = mul i32 %330, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %331, 10
  %340 = xor i1 %338, true
  %341 = xor i1 %339, true
  %342 = xor i1 false, true
  %343 = and i1 %340, false
  %344 = and i1 %338, %342
  %345 = and i1 %341, false
  %346 = and i1 %339, %342
  %347 = or i1 %343, %344
  %348 = or i1 %345, %346
  %349 = xor i1 %347, %348
  %350 = or i1 %340, %341
  %351 = xor i1 %350, true
  %352 = or i1 false, %342
  %353 = and i1 %351, %352
  %354 = or i1 %349, %353
  %355 = or i1 %338, %339
  br i1 %354, label %356, label %456

; <label>:356:                                    ; preds = %327
  unreachable

; <label>:357:                                    ; preds = %196
  %358 = load i32, i32* @x.558
  %359 = load i32, i32* @y.559
  %360 = add i32 %358, -837706784
  %361 = sub i32 %360, 1
  %362 = sub i32 %361, -837706784
  %363 = sub i32 %358, 1
  %364 = mul i32 %358, %362
  %365 = urem i32 %364, 2
  %366 = icmp eq i32 %365, 0
  %367 = icmp slt i32 %359, 10
  %368 = xor i1 %366, true
  %369 = xor i1 %367, true
  %370 = xor i1 false, true
  %371 = and i1 %368, false
  %372 = and i1 %366, %370
  %373 = and i1 %369, false
  %374 = and i1 %367, %370
  %375 = or i1 %371, %372
  %376 = or i1 %373, %374
  %377 = xor i1 %375, %376
  %378 = or i1 %368, %369
  %379 = xor i1 %378, true
  %380 = or i1 false, %370
  %381 = and i1 %379, %380
  %382 = or i1 %377, %381
  %383 = or i1 %366, %367
  br i1 %382, label %384, label %459

; <label>:384:                                    ; preds = %357, %459
  %385 = load i32, i32* @x.558
  %386 = load i32, i32* @y.559
  %387 = sub i32 %385, -733306190
  %388 = sub i32 %387, 1
  %389 = add i32 %388, -733306190
  %390 = sub i32 %385, 1
  %391 = mul i32 %385, %389
  %392 = urem i32 %391, 2
  %393 = icmp eq i32 %392, 0
  %394 = icmp slt i32 %386, 10
  %395 = and i1 %393, %394
  %396 = xor i1 %393, %394
  %397 = or i1 %395, %396
  %398 = or i1 %393, %394
  br i1 %397, label %399, label %459

; <label>:399:                                    ; preds = %384
  unreachable

; <label>:400:                                    ; preds = %28, %2
  %401 = alloca %"class.std::deque"*, align 8
  %402 = alloca i32*, align 8
  %403 = alloca i8*
  %404 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %401, align 8
  store i32* %1, i32** %402, align 8
  %405 = load %"class.std::deque"*, %"class.std::deque"** %401, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %405, i64 1)
  %406 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %407 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %406)
  %408 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %409 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %408, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %409, i32 0, i32 3
  %411 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %410, i32 0, i32 3
  %412 = load i32**, i32*** %411, align 8
  %413 = getelementptr inbounds i32*, i32** %412, i64 1
  store i32* %407, i32** %413, align 8
  %414 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %415 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %414, i32 0, i32 0
  %416 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %415 to %"class.std::allocator.0"*
  %417 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %418 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %417, i32 0, i32 0
  %419 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %418, i32 0, i32 3
  %420 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %419, i32 0, i32 0
  %421 = load i32*, i32** %420, align 8
  %422 = load i32*, i32** %402, align 8
  %423 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %422) #3
  br label %28

; <label>:424:                                    ; preds = %106, %79
  %425 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %426 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %425, i32 0, i32 0
  %427 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %426, i32 0, i32 3
  %428 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %429 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %428, i32 0, i32 0
  %430 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %429, i32 0, i32 3
  %431 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %430, i32 0, i32 3
  %432 = load i32**, i32*** %431, align 8
  %433 = getelementptr inbounds i32*, i32** %432, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %427, i32** %433) #3
  %434 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %435 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %434, i32 0, i32 0
  %436 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %435, i32 0, i32 3
  %437 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %436, i32 0, i32 1
  %438 = load i32*, i32** %437, align 8
  %439 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %440 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %439, i32 0, i32 0
  %441 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %440, i32 0, i32 3
  %442 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %441, i32 0, i32 0
  store i32* %438, i32** %442, align 8
  br label %106

; <label>:443:                                    ; preds = %178, %152
  %444 = landingpad { i8*, i32 }
          catch i8* null
  %445 = extractvalue { i8*, i32 } %444, 0
  store i8* %445, i8** %31, align 8
  %446 = extractvalue { i8*, i32 } %444, 1
  store i32 %446, i32* %32, align 4
  br label %178

; <label>:447:                                    ; preds = %233, %207
  %448 = landingpad { i8*, i32 }
          cleanup
  %449 = extractvalue { i8*, i32 } %448, 0
  store i8* %449, i8** %31, align 8
  %450 = extractvalue { i8*, i32 } %448, 1
  store i32 %450, i32* %32, align 4
  br label %233

; <label>:451:                                    ; preds = %269, %254
  %452 = load i8*, i8** %31, align 8
  %453 = load i32, i32* %32, align 4
  %454 = insertvalue { i8*, i32 } undef, i8* %452, 0
  %455 = insertvalue { i8*, i32 } %454, i32 %453, 1
  br label %269

; <label>:456:                                    ; preds = %327, %301
  %457 = landingpad { i8*, i32 }
          catch i8* null
  %458 = extractvalue { i8*, i32 } %457, 0
  call void @__clang_call_terminate(i8* %458) #11
  br label %327

; <label>:459:                                    ; preds = %384, %357
  br label %384
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.1"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 %9, 1623301033070766414
  %11 = add i64 %10, 1
  %12 = add i64 %11, 1623301033070766414
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 %30, -3437230035317587828
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -3437230035317587828
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 8
  %37 = sub i64 %18, -6038783604243703272
  %38 = sub i64 %37, %36
  %39 = add i64 %38, -6038783604243703272
  %40 = sub i64 %18, %36
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 -915050041, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %54
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 -915050041, label %45
    i32 222177788, label %50
    i32 -158415594, label %53
  ]

; <label>:44:                                     ; preds = %42
  br label %54

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 222177788, i32 -158415594
  store i32 %49, i32* %41
  br label %54

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %52, i64 %51, i1 zeroext false)
  store i32 -158415594, i32* %41
  br label %54

; <label>:53:                                     ; preds = %42
  ret void

; <label>:54:                                     ; preds = %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca i64
  %9 = alloca i1
  %10 = alloca i32**
  %11 = alloca i64
  %12 = alloca i64
  %13 = alloca %"class.std::deque"*
  %14 = alloca %"class.std::deque"*, align 8
  %15 = alloca i64, align 8
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32**, align 8
  %20 = alloca i64, align 8
  %21 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %14, align 8
  store i64 %1, i64* %15, align 8
  %22 = zext i1 %2 to i8
  store i8 %22, i8* %16, align 1
  %23 = load %"class.std::deque"*, %"class.std::deque"** %14, align 8
  store %"class.std::deque"* %23, %"class.std::deque"** %13
  %24 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %25 = bitcast %"class.std::deque"* %24 to %"class.std::_Deque_base"*
  %26 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %26, i32 0, i32 3
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 3
  %29 = load i32**, i32*** %28, align 8
  %30 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %31 = bitcast %"class.std::deque"* %30 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 3
  %35 = load i32**, i32*** %34, align 8
  %36 = ptrtoint i32** %29 to i64
  %37 = ptrtoint i32** %35 to i64
  %38 = sub i64 %36, -2802555326461973735
  %39 = sub i64 %38, %37
  %40 = add i64 %39, -2802555326461973735
  %41 = sub i64 %36, %37
  %42 = sdiv exact i64 %40, 8
  %43 = add i64 %42, 2409062068350903300
  %44 = add i64 %43, 1
  %45 = sub i64 %44, 2409062068350903300
  %46 = add nsw i64 %42, 1
  store i64 %45, i64* %17, align 8
  %47 = load i64, i64* %17, align 8
  %48 = load i64, i64* %15, align 8
  %49 = sub i64 0, %48
  %50 = sub i64 %47, %49
  %51 = add i64 %47, %48
  store i64 %50, i64* %18, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %53 = bitcast %"class.std::deque"* %52 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  store i64 %56, i64* %12
  %57 = load i64, i64* %18, align 8
  %58 = mul i64 2, %57
  store i64 %58, i64* %11
  %59 = alloca i32
  store i32 -1159173483, i32* %59
  %60 = alloca i64
  %61 = alloca i64
  br label %62

; <label>:62:                                     ; preds = %3, %593
  %63 = load i32, i32* %59
  switch i32 %63, label %64 [
    i32 -1159173483, label %65
    i32 2100518109, label %70
    i32 -1164132654, label %85
    i32 -4590533, label %130
    i32 -93863502, label %133
    i32 -1590971518, label %161
    i32 -1577889000, label %189
    i32 -1500304281, label %191
    i32 370140705, label %192
    i32 846847222, label %209
    i32 -558027380, label %235
    i32 255998338, label %238
    i32 1786987815, label %254
    i32 -1487400350, label %282
    i32 -869560264, label %315
    i32 -1000004512, label %316
    i32 -1577256097, label %317
    i32 2097728026, label %354
    i32 546059237, label %356
    i32 -1920359404, label %357
    i32 -1051238464, label %386
    i32 -1492630454, label %454
    i32 577278913, label %455
    i32 1500527759, label %469
    i32 -1741087772, label %520
    i32 -485701376, label %522
    i32 467284523, label %534
    i32 -433384560, label %552
  ]

; <label>:64:                                     ; preds = %62
  br label %593

; <label>:65:                                     ; preds = %62
  %66 = load volatile i64, i64* %12
  %67 = load volatile i64, i64* %11
  %68 = icmp ugt i64 %66, %67
  %69 = select i1 %68, i32 2100518109, i32 -1577256097
  store i32 %69, i32* %59
  br label %593

; <label>:70:                                     ; preds = %62
  %71 = load i32, i32* @x.566
  %72 = load i32, i32* @y.567
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -1164132654, i32 1500527759
  store i32 %84, i32* %59
  br label %593

; <label>:85:                                     ; preds = %62
  %86 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %87 = bitcast %"class.std::deque"* %86 to %"class.std::_Deque_base"*
  %88 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %88, i32 0, i32 0
  %90 = load i32**, i32*** %89, align 8
  %91 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %92 = bitcast %"class.std::deque"* %91 to %"class.std::_Deque_base"*
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = load i64, i64* %18, align 8
  %97 = sub i64 0, %96
  %98 = add i64 %95, %97
  %99 = sub i64 %95, %96
  %100 = udiv i64 %98, 2
  %101 = getelementptr inbounds i32*, i32** %90, i64 %100
  store i32** %101, i32*** %10
  %102 = load i8, i8* %16, align 1
  %103 = trunc i8 %102 to i1
  store i1 %103, i1* %9
  %104 = load i32, i32* @x.566
  %105 = load i32, i32* @y.567
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = xor i1 %111, true
  %114 = xor i1 %112, true
  %115 = xor i1 true, true
  %116 = and i1 %113, true
  %117 = and i1 %111, %115
  %118 = and i1 %114, true
  %119 = and i1 %112, %115
  %120 = or i1 %116, %117
  %121 = or i1 %118, %119
  %122 = xor i1 %120, %121
  %123 = or i1 %113, %114
  %124 = xor i1 %123, true
  %125 = or i1 true, %115
  %126 = and i1 %124, %125
  %127 = or i1 %122, %126
  %128 = or i1 %111, %112
  %129 = select i1 %127, i32 -4590533, i32 1500527759
  store i32 %129, i32* %59
  br label %593

; <label>:130:                                    ; preds = %62
  %131 = load volatile i1, i1* %9
  %132 = select i1 %131, i32 -93863502, i32 -1500304281
  store i32 %132, i32* %59
  br label %593

; <label>:133:                                    ; preds = %62
  %134 = load i32, i32* @x.566
  %135 = load i32, i32* @y.567
  %136 = sub i32 %134, -472614825
  %137 = sub i32 %136, 1
  %138 = add i32 %137, -472614825
  %139 = sub i32 %134, 1
  %140 = mul i32 %134, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %135, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 true, true
  %147 = and i1 %144, true
  %148 = and i1 %142, %146
  %149 = and i1 %145, true
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 true, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  %160 = select i1 %158, i32 -1590971518, i32 -1741087772
  store i32 %160, i32* %59
  br label %593

; <label>:161:                                    ; preds = %62
  %162 = load i64, i64* %15, align 8
  store i64 %162, i64* %8
  %163 = load i32, i32* @x.566
  %164 = load i32, i32* @y.567
  %165 = sub i32 0, 1
  %166 = add i32 %163, %165
  %167 = sub i32 %163, 1
  %168 = mul i32 %163, %166
  %169 = urem i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = icmp slt i32 %164, 10
  %172 = xor i1 %170, true
  %173 = xor i1 %171, true
  %174 = xor i1 true, true
  %175 = and i1 %172, true
  %176 = and i1 %170, %174
  %177 = and i1 %173, true
  %178 = and i1 %171, %174
  %179 = or i1 %175, %176
  %180 = or i1 %177, %178
  %181 = xor i1 %179, %180
  %182 = or i1 %172, %173
  %183 = xor i1 %182, true
  %184 = or i1 true, %174
  %185 = and i1 %183, %184
  %186 = or i1 %181, %185
  %187 = or i1 %170, %171
  %188 = select i1 %186, i32 -1577889000, i32 -1741087772
  store i32 %188, i32* %59
  br label %593

; <label>:189:                                    ; preds = %62
  store i32 370140705, i32* %59
  %190 = load volatile i64, i64* %8
  store i64 %190, i64* %60
  br label %593

; <label>:191:                                    ; preds = %62
  store i32 370140705, i32* %59
  store i64 0, i64* %60
  br label %593

; <label>:192:                                    ; preds = %62
  %193 = load i64, i64* %60
  store i64 %193, i64* %5
  %194 = load i32, i32* @x.566
  %195 = load i32, i32* @y.567
  %196 = add i32 %194, 1122728426
  %197 = sub i32 %196, 1
  %198 = sub i32 %197, 1122728426
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = and i1 %202, %203
  %205 = xor i1 %202, %203
  %206 = or i1 %204, %205
  %207 = or i1 %202, %203
  %208 = select i1 %206, i32 846847222, i32 -485701376
  store i32 %208, i32* %59
  br label %593

; <label>:209:                                    ; preds = %62
  %210 = load volatile i32**, i32*** %10
  %211 = load volatile i64, i64* %5
  %212 = getelementptr inbounds i32*, i32** %210, i64 %211
  store i32** %212, i32*** %19, align 8
  %213 = load i32**, i32*** %19, align 8
  %214 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %215 = bitcast %"class.std::deque"* %214 to %"class.std::_Deque_base"*
  %216 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %215, i32 0, i32 0
  %217 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %216, i32 0, i32 2
  %218 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %217, i32 0, i32 3
  %219 = load i32**, i32*** %218, align 8
  %220 = icmp ult i32** %213, %219
  store i1 %220, i1* %7
  %221 = load i32, i32* @x.566
  %222 = load i32, i32* @y.567
  %223 = sub i32 0, 1
  %224 = add i32 %221, %223
  %225 = sub i32 %221, 1
  %226 = mul i32 %221, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %222, 10
  %230 = and i1 %228, %229
  %231 = xor i1 %228, %229
  %232 = or i1 %230, %231
  %233 = or i1 %228, %229
  %234 = select i1 %232, i32 -558027380, i32 -485701376
  store i32 %234, i32* %59
  br label %593

; <label>:235:                                    ; preds = %62
  %236 = load volatile i1, i1* %7
  %237 = select i1 %236, i32 255998338, i32 1786987815
  store i32 %237, i32* %59
  br label %593

; <label>:238:                                    ; preds = %62
  %239 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %240 = bitcast %"class.std::deque"* %239 to %"class.std::_Deque_base"*
  %241 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %240, i32 0, i32 0
  %242 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %241, i32 0, i32 2
  %243 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %242, i32 0, i32 3
  %244 = load i32**, i32*** %243, align 8
  %245 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %246 = bitcast %"class.std::deque"* %245 to %"class.std::_Deque_base"*
  %247 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %246, i32 0, i32 0
  %248 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %247, i32 0, i32 3
  %249 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %248, i32 0, i32 3
  %250 = load i32**, i32*** %249, align 8
  %251 = getelementptr inbounds i32*, i32** %250, i64 1
  %252 = load i32**, i32*** %19, align 8
  %253 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %244, i32** %251, i32** %252)
  store i32 -1000004512, i32* %59
  br label %593

; <label>:254:                                    ; preds = %62
  %255 = load i32, i32* @x.566
  %256 = load i32, i32* @y.567
  %257 = sub i32 %255, -1305137962
  %258 = sub i32 %257, 1
  %259 = add i32 %258, -1305137962
  %260 = sub i32 %255, 1
  %261 = mul i32 %255, %259
  %262 = urem i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = icmp slt i32 %256, 10
  %265 = xor i1 %263, true
  %266 = xor i1 %264, true
  %267 = xor i1 true, true
  %268 = and i1 %265, true
  %269 = and i1 %263, %267
  %270 = and i1 %266, true
  %271 = and i1 %264, %267
  %272 = or i1 %268, %269
  %273 = or i1 %270, %271
  %274 = xor i1 %272, %273
  %275 = or i1 %265, %266
  %276 = xor i1 %275, true
  %277 = or i1 true, %267
  %278 = and i1 %276, %277
  %279 = or i1 %274, %278
  %280 = or i1 %263, %264
  %281 = select i1 %279, i32 -1487400350, i32 467284523
  store i32 %281, i32* %59
  br label %593

; <label>:282:                                    ; preds = %62
  %283 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %284 = bitcast %"class.std::deque"* %283 to %"class.std::_Deque_base"*
  %285 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %284, i32 0, i32 0
  %286 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %285, i32 0, i32 2
  %287 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %286, i32 0, i32 3
  %288 = load i32**, i32*** %287, align 8
  %289 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %290 = bitcast %"class.std::deque"* %289 to %"class.std::_Deque_base"*
  %291 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %291, i32 0, i32 3
  %293 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %292, i32 0, i32 3
  %294 = load i32**, i32*** %293, align 8
  %295 = getelementptr inbounds i32*, i32** %294, i64 1
  %296 = load i32**, i32*** %19, align 8
  %297 = load i64, i64* %17, align 8
  %298 = getelementptr inbounds i32*, i32** %296, i64 %297
  %299 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %288, i32** %295, i32** %298)
  %300 = load i32, i32* @x.566
  %301 = load i32, i32* @y.567
  %302 = add i32 %300, 1694501367
  %303 = sub i32 %302, 1
  %304 = sub i32 %303, 1694501367
  %305 = sub i32 %300, 1
  %306 = mul i32 %300, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %301, 10
  %310 = and i1 %308, %309
  %311 = xor i1 %308, %309
  %312 = or i1 %310, %311
  %313 = or i1 %308, %309
  %314 = select i1 %312, i32 -869560264, i32 467284523
  store i32 %314, i32* %59
  br label %593

; <label>:315:                                    ; preds = %62
  store i32 -1000004512, i32* %59
  br label %593

; <label>:316:                                    ; preds = %62
  store i32 577278913, i32* %59
  br label %593

; <label>:317:                                    ; preds = %62
  %318 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %319 = bitcast %"class.std::deque"* %318 to %"class.std::_Deque_base"*
  %320 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %319, i32 0, i32 0
  %321 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %320, i32 0, i32 1
  %322 = load i64, i64* %321, align 8
  %323 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %324 = bitcast %"class.std::deque"* %323 to %"class.std::_Deque_base"*
  %325 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %324, i32 0, i32 0
  %326 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %325, i32 0, i32 1
  %327 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %326, i64* dereferenceable(8) %15)
  %328 = load i64, i64* %327, align 8
  %329 = sub i64 0, %322
  %330 = sub i64 0, %328
  %331 = add i64 %329, %330
  %332 = sub i64 0, %331
  %333 = add i64 %322, %328
  %334 = sub i64 %332, 1318231985901757856
  %335 = add i64 %334, 2
  %336 = add i64 %335, 1318231985901757856
  %337 = add i64 %332, 2
  store i64 %336, i64* %20, align 8
  %338 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %339 = bitcast %"class.std::deque"* %338 to %"class.std::_Deque_base"*
  %340 = load i64, i64* %20, align 8
  %341 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %339, i64 %340)
  store i32** %341, i32*** %21, align 8
  %342 = load i32**, i32*** %21, align 8
  %343 = load i64, i64* %20, align 8
  %344 = load i64, i64* %18, align 8
  %345 = add i64 %343, -3806014735205496132
  %346 = sub i64 %345, %344
  %347 = sub i64 %346, -3806014735205496132
  %348 = sub i64 %343, %344
  %349 = udiv i64 %347, 2
  %350 = getelementptr inbounds i32*, i32** %342, i64 %349
  store i32** %350, i32*** %6
  %351 = load i8, i8* %16, align 1
  %352 = trunc i8 %351 to i1
  %353 = select i1 %352, i32 2097728026, i32 546059237
  store i32 %353, i32* %59
  br label %593

; <label>:354:                                    ; preds = %62
  %355 = load i64, i64* %15, align 8
  store i32 -1920359404, i32* %59
  store i64 %355, i64* %61
  br label %593

; <label>:356:                                    ; preds = %62
  store i32 -1920359404, i32* %59
  store i64 0, i64* %61
  br label %593

; <label>:357:                                    ; preds = %62
  %358 = load i64, i64* %61
  store i64 %358, i64* %4
  %359 = load i32, i32* @x.566
  %360 = load i32, i32* @y.567
  %361 = add i32 %359, 992544035
  %362 = sub i32 %361, 1
  %363 = sub i32 %362, 992544035
  %364 = sub i32 %359, 1
  %365 = mul i32 %359, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %360, 10
  %369 = xor i1 %367, true
  %370 = xor i1 %368, true
  %371 = xor i1 false, true
  %372 = and i1 %369, false
  %373 = and i1 %367, %371
  %374 = and i1 %370, false
  %375 = and i1 %368, %371
  %376 = or i1 %372, %373
  %377 = or i1 %374, %375
  %378 = xor i1 %376, %377
  %379 = or i1 %369, %370
  %380 = xor i1 %379, true
  %381 = or i1 false, %371
  %382 = and i1 %380, %381
  %383 = or i1 %378, %382
  %384 = or i1 %367, %368
  %385 = select i1 %383, i32 -1051238464, i32 -433384560
  store i32 %385, i32* %59
  br label %593

; <label>:386:                                    ; preds = %62
  %387 = load volatile i32**, i32*** %6
  %388 = load volatile i64, i64* %4
  %389 = getelementptr inbounds i32*, i32** %387, i64 %388
  store i32** %389, i32*** %19, align 8
  %390 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %391 = bitcast %"class.std::deque"* %390 to %"class.std::_Deque_base"*
  %392 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %391, i32 0, i32 0
  %393 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %392, i32 0, i32 2
  %394 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %393, i32 0, i32 3
  %395 = load i32**, i32*** %394, align 8
  %396 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %397 = bitcast %"class.std::deque"* %396 to %"class.std::_Deque_base"*
  %398 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %397, i32 0, i32 0
  %399 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %398, i32 0, i32 3
  %400 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %399, i32 0, i32 3
  %401 = load i32**, i32*** %400, align 8
  %402 = getelementptr inbounds i32*, i32** %401, i64 1
  %403 = load i32**, i32*** %19, align 8
  %404 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %395, i32** %402, i32** %403)
  %405 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %406 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %407 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %408 = bitcast %"class.std::deque"* %407 to %"class.std::_Deque_base"*
  %409 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %408, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %409, i32 0, i32 0
  %411 = load i32**, i32*** %410, align 8
  %412 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %413 = bitcast %"class.std::deque"* %412 to %"class.std::_Deque_base"*
  %414 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %414, i32 0, i32 1
  %416 = load i64, i64* %415, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %406, i32** %411, i64 %416) #3
  %417 = load i32**, i32*** %21, align 8
  %418 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %419 = bitcast %"class.std::deque"* %418 to %"class.std::_Deque_base"*
  %420 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %419, i32 0, i32 0
  %421 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %420, i32 0, i32 0
  store i32** %417, i32*** %421, align 8
  %422 = load i64, i64* %20, align 8
  %423 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %424 = bitcast %"class.std::deque"* %423 to %"class.std::_Deque_base"*
  %425 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %424, i32 0, i32 0
  %426 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %425, i32 0, i32 1
  store i64 %422, i64* %426, align 8
  %427 = load i32, i32* @x.566
  %428 = load i32, i32* @y.567
  %429 = add i32 %427, -1712759054
  %430 = sub i32 %429, 1
  %431 = sub i32 %430, -1712759054
  %432 = sub i32 %427, 1
  %433 = mul i32 %427, %431
  %434 = urem i32 %433, 2
  %435 = icmp eq i32 %434, 0
  %436 = icmp slt i32 %428, 10
  %437 = xor i1 %435, true
  %438 = xor i1 %436, true
  %439 = xor i1 false, true
  %440 = and i1 %437, false
  %441 = and i1 %435, %439
  %442 = and i1 %438, false
  %443 = and i1 %436, %439
  %444 = or i1 %440, %441
  %445 = or i1 %442, %443
  %446 = xor i1 %444, %445
  %447 = or i1 %437, %438
  %448 = xor i1 %447, true
  %449 = or i1 false, %439
  %450 = and i1 %448, %449
  %451 = or i1 %446, %450
  %452 = or i1 %435, %436
  %453 = select i1 %451, i32 -1492630454, i32 -433384560
  store i32 %453, i32* %59
  br label %593

; <label>:454:                                    ; preds = %62
  store i32 577278913, i32* %59
  br label %593

; <label>:455:                                    ; preds = %62
  %456 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %457 = bitcast %"class.std::deque"* %456 to %"class.std::_Deque_base"*
  %458 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %457, i32 0, i32 0
  %459 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %458, i32 0, i32 2
  %460 = load i32**, i32*** %19, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %459, i32** %460) #3
  %461 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %462 = bitcast %"class.std::deque"* %461 to %"class.std::_Deque_base"*
  %463 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %462, i32 0, i32 0
  %464 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %463, i32 0, i32 3
  %465 = load i32**, i32*** %19, align 8
  %466 = load i64, i64* %17, align 8
  %467 = getelementptr inbounds i32*, i32** %465, i64 %466
  %468 = getelementptr inbounds i32*, i32** %467, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %464, i32** %468) #3
  ret void

; <label>:469:                                    ; preds = %62
  %470 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %471 = bitcast %"class.std::deque"* %470 to %"class.std::_Deque_base"*
  %472 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %471, i32 0, i32 0
  %473 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %472, i32 0, i32 0
  %474 = load i32**, i32*** %473, align 8
  %475 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %476 = bitcast %"class.std::deque"* %475 to %"class.std::_Deque_base"*
  %477 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %476, i32 0, i32 0
  %478 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %477, i32 0, i32 1
  %479 = load i64, i64* %478, align 8
  %480 = load i64, i64* %18, align 8
  %481 = shl i64 %479, %480
  %482 = add i64 %479, -6361149189334699073
  %483 = sub i64 %482, %480
  %484 = sub i64 %483, -6361149189334699073
  %485 = sub i64 %479, %480
  %486 = mul i64 %484, %480
  %487 = sub i64 %479, 5435617344367660128
  %488 = sub i64 %487, %480
  %489 = add i64 %488, 5435617344367660128
  %490 = sub i64 %479, %480
  %491 = mul i64 %489, %480
  %492 = shl i64 %479, %480
  %493 = add i64 0, -459420595613577605
  %494 = sub i64 %493, %479
  %495 = sub i64 %494, -459420595613577605
  %496 = sub i64 0, %479
  %497 = sub i64 0, %480
  %498 = sub i64 %495, %497
  %499 = add i64 %495, %480
  %500 = sub i64 %479, -1980438978740093614
  %501 = sub i64 %500, %480
  %502 = add i64 %501, -1980438978740093614
  %503 = sub i64 %479, %480
  %504 = mul i64 %502, %480
  %505 = sub i64 %479, -7224360296783291955
  %506 = sub i64 %505, %480
  %507 = add i64 %506, -7224360296783291955
  %508 = sub i64 %479, %480
  %509 = shl i64 %507, 2
  %510 = shl i64 %507, 2
  %511 = sub i64 %507, 3117779534087421036
  %512 = sub i64 %511, 2
  %513 = add i64 %512, 3117779534087421036
  %514 = sub i64 %507, 2
  %515 = mul i64 %513, 2
  %516 = udiv i64 %507, 2
  %517 = getelementptr inbounds i32*, i32** %474, i64 %516
  %518 = load i8, i8* %16, align 1
  %519 = trunc i8 %518 to i1
  store i32 -1164132654, i32* %59
  br label %593

; <label>:520:                                    ; preds = %62
  %521 = load i64, i64* %15, align 8
  store i32 -1590971518, i32* %59
  br label %593

; <label>:522:                                    ; preds = %62
  %523 = load volatile i32**, i32*** %10
  %524 = load volatile i64, i64* %5
  %525 = getelementptr inbounds i32*, i32** %523, i64 %524
  store i32** %525, i32*** %19, align 8
  %526 = load i32**, i32*** %19, align 8
  %527 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %528 = bitcast %"class.std::deque"* %527 to %"class.std::_Deque_base"*
  %529 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %528, i32 0, i32 0
  %530 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %529, i32 0, i32 2
  %531 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %530, i32 0, i32 3
  %532 = load i32**, i32*** %531, align 8
  %533 = icmp ult i32** %526, %532
  store i32 846847222, i32* %59
  br label %593

; <label>:534:                                    ; preds = %62
  %535 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %536 = bitcast %"class.std::deque"* %535 to %"class.std::_Deque_base"*
  %537 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %536, i32 0, i32 0
  %538 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %537, i32 0, i32 2
  %539 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %538, i32 0, i32 3
  %540 = load i32**, i32*** %539, align 8
  %541 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %542 = bitcast %"class.std::deque"* %541 to %"class.std::_Deque_base"*
  %543 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %542, i32 0, i32 0
  %544 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %543, i32 0, i32 3
  %545 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %544, i32 0, i32 3
  %546 = load i32**, i32*** %545, align 8
  %547 = getelementptr inbounds i32*, i32** %546, i64 1
  %548 = load i32**, i32*** %19, align 8
  %549 = load i64, i64* %17, align 8
  %550 = getelementptr inbounds i32*, i32** %548, i64 %549
  %551 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %540, i32** %547, i32** %550)
  store i32 -1487400350, i32* %59
  br label %593

; <label>:552:                                    ; preds = %62
  %553 = load volatile i32**, i32*** %6
  %554 = load volatile i64, i64* %4
  %555 = getelementptr inbounds i32*, i32** %553, i64 %554
  store i32** %555, i32*** %19, align 8
  %556 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %557 = bitcast %"class.std::deque"* %556 to %"class.std::_Deque_base"*
  %558 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %557, i32 0, i32 0
  %559 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %558, i32 0, i32 2
  %560 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %559, i32 0, i32 3
  %561 = load i32**, i32*** %560, align 8
  %562 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %563 = bitcast %"class.std::deque"* %562 to %"class.std::_Deque_base"*
  %564 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %563, i32 0, i32 0
  %565 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %564, i32 0, i32 3
  %566 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %565, i32 0, i32 3
  %567 = load i32**, i32*** %566, align 8
  %568 = getelementptr inbounds i32*, i32** %567, i64 1
  %569 = load i32**, i32*** %19, align 8
  %570 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %561, i32** %568, i32** %569)
  %571 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %572 = bitcast %"class.std::deque"* %571 to %"class.std::_Deque_base"*
  %573 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %574 = bitcast %"class.std::deque"* %573 to %"class.std::_Deque_base"*
  %575 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %574, i32 0, i32 0
  %576 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %575, i32 0, i32 0
  %577 = load i32**, i32*** %576, align 8
  %578 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %579 = bitcast %"class.std::deque"* %578 to %"class.std::_Deque_base"*
  %580 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %579, i32 0, i32 0
  %581 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %580, i32 0, i32 1
  %582 = load i64, i64* %581, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %572, i32** %577, i64 %582) #3
  %583 = load i32**, i32*** %21, align 8
  %584 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %585 = bitcast %"class.std::deque"* %584 to %"class.std::_Deque_base"*
  %586 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %585, i32 0, i32 0
  %587 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %586, i32 0, i32 0
  store i32** %583, i32*** %587, align 8
  %588 = load i64, i64* %20, align 8
  %589 = load volatile %"class.std::deque"*, %"class.std::deque"** %13
  %590 = bitcast %"class.std::deque"* %589 to %"class.std::_Deque_base"*
  %591 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %590, i32 0, i32 0
  %592 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %591, i32 0, i32 1
  store i64 %588, i64* %592, align 8
  store i32 -1051238464, i32* %59
  br label %593

; <label>:593:                                    ; preds = %552, %534, %522, %520, %469, %454, %386, %357, %356, %354, %317, %316, %315, %282, %254, %238, %235, %209, %192, %191, %189, %161, %133, %130, %85, %70, %65, %64
  br label %62
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.572
  %8 = load i32, i32* @y.573
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1672197671, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %66
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1672197671, label %20
    i32 -1100822371, label %28
    i32 2037285963, label %53
    i32 -256621088, label %55
  ]

; <label>:19:                                     ; preds = %17
  br label %66

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1100822371, i32 -256621088
  store i32 %27, i32* %16
  br label %66

; <label>:28:                                     ; preds = %17
  %29 = alloca i32**, align 8
  %30 = alloca i32**, align 8
  %31 = alloca i32**, align 8
  store i32** %0, i32*** %29, align 8
  store i32** %1, i32*** %30, align 8
  store i32** %2, i32*** %31, align 8
  %32 = load i32**, i32*** %29, align 8
  %33 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %32)
  %34 = load i32**, i32*** %30, align 8
  %35 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %34)
  %36 = load i32**, i32*** %31, align 8
  %37 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %36)
  %38 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %33, i32** %35, i32** %37)
  store i32** %38, i32*** %4
  %39 = load i32, i32* @x.572
  %40 = load i32, i32* @y.573
  %41 = sub i32 0, 1
  %42 = add i32 %39, %41
  %43 = sub i32 %39, 1
  %44 = mul i32 %39, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %40, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 2037285963, i32 -256621088
  store i32 %52, i32* %16
  br label %66

; <label>:53:                                     ; preds = %17
  %54 = load volatile i32**, i32*** %4
  ret i32** %54

; <label>:55:                                     ; preds = %17
  %56 = alloca i32**, align 8
  %57 = alloca i32**, align 8
  %58 = alloca i32**, align 8
  store i32** %0, i32*** %56, align 8
  store i32** %1, i32*** %57, align 8
  store i32** %2, i32*** %58, align 8
  %59 = load i32**, i32*** %56, align 8
  %60 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %59)
  %61 = load i32**, i32*** %57, align 8
  %62 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %61)
  %63 = load i32**, i32*** %58, align 8
  %64 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %63)
  %65 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %60, i32** %62, i32** %64)
  store i32 -1100822371, i32* %16
  br label %66

; <label>:66:                                     ; preds = %55, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 %11, 3053048653983493172
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 3053048653983493172
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 2014934284, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 2014934284, label %23
    i32 -882113275, label %27
    i32 596299941, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -882113275, i32 596299941
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %5, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 596299941, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32**, i32*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %36
  ret i32** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.586
  %8 = load i32, i32* @y.587
  %9 = sub i32 %7, 1065702899
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1065702899
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 327056473, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 327056473, label %21
    i32 1986896574, label %41
    i32 955783069, label %65
    i32 813589603, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1986896574, i32 813589603
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.586
  %51 = load i32, i32* @y.587
  %52 = sub i32 %50, 1545189633
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1545189633
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 955783069, i32 813589603
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 1986896574, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 %11, 1682839329612158129
  %14 = sub i64 %13, %12
  %15 = add i64 %14, 1682839329612158129
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1448028169, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %46
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1448028169, label %23
    i32 -373867645, label %27
    i32 1136852158, label %39
  ]

; <label>:22:                                     ; preds = %20
  br label %46

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -373867645, i32 1136852158
  store i32 %26, i32* %19
  br label %46

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = sub i64 0, %29
  %31 = add i64 0, %30
  %32 = sub i64 0, %29
  %33 = getelementptr inbounds i32*, i32** %28, i64 %31
  %34 = bitcast i32** %33 to i8*
  %35 = load i32**, i32*** %5, align 8
  %36 = bitcast i32** %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 1136852158, i32* %19
  br label %46

; <label>:39:                                     ; preds = %20
  %40 = load i32**, i32*** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = sub i64 0, %41
  %43 = add i64 0, %42
  %44 = sub i64 0, %41
  %45 = getelementptr inbounds i32*, i32** %40, i64 %43
  ret i32** %45

; <label>:46:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %86

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.0"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %118

; <label>:25:                                     ; preds = %16
  %26 = load i32, i32* @x.598
  %27 = load i32, i32* @y.599
  %28 = add i32 %26, -608066380
  %29 = sub i32 %28, 1
  %30 = sub i32 %29, -608066380
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %150

; <label>:52:                                     ; preds = %25, %150
  %53 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 2
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = getelementptr inbounds i32, i32* %57, i32 1
  store i32* %58, i32** %56, align 8
  %59 = load i32, i32* @x.598
  %60 = load i32, i32* @y.599
  %61 = add i32 %59, 836295757
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 836295757
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  br i1 %83, label %85, label %150

; <label>:85:                                     ; preds = %52
  br label %117

; <label>:86:                                     ; preds = %1
  %87 = load i32, i32* @x.598
  %88 = load i32, i32* @y.599
  %89 = sub i32 %87, -1521229997
  %90 = sub i32 %89, 1
  %91 = add i32 %90, -1521229997
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %157

; <label>:101:                                    ; preds = %86, %157
  %102 = load i32, i32* @x.598
  %103 = load i32, i32* @y.599
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %157

; <label>:115:                                    ; preds = %101
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %116 unwind label %118

; <label>:116:                                    ; preds = %115
  br label %117

; <label>:117:                                    ; preds = %116, %85
  ret void

; <label>:118:                                    ; preds = %115, %16
  %119 = load i32, i32* @x.598
  %120 = load i32, i32* @y.599
  %121 = sub i32 %119, 90129112
  %122 = sub i32 %121, 1
  %123 = add i32 %122, 90129112
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  br i1 %131, label %133, label %158

; <label>:133:                                    ; preds = %118, %158
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  call void @__clang_call_terminate(i8* %135) #11
  %136 = load i32, i32* @x.598
  %137 = load i32, i32* @y.599
  %138 = sub i32 0, 1
  %139 = add i32 %136, %138
  %140 = sub i32 %136, 1
  %141 = mul i32 %136, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %137, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %158

; <label>:149:                                    ; preds = %133
  unreachable

; <label>:150:                                    ; preds = %52, %25
  %151 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %152 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %152, i32 0, i32 2
  %154 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %153, i32 0, i32 0
  %155 = load i32*, i32** %154, align 8
  %156 = getelementptr inbounds i32, i32* %155, i32 1
  store i32* %156, i32** %154, align 8
  br label %52

; <label>:157:                                    ; preds = %101, %86
  br label %101

; <label>:158:                                    ; preds = %133, %118
  %159 = landingpad { i8*, i32 }
          catch i8* null
  %160 = extractvalue { i8*, i32 } %159, 0
  call void @__clang_call_terminate(i8* %160) #11
  br label %133
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.0"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.0"* %0, %"class.std::allocator.0"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %3, align 8
  %6 = bitcast %"class.std::allocator.0"* %5 to %"class.__gnu_cxx::new_allocator.1"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.1"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  %6 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.0"* dereferenceable(1) %5, i32* %10)
  %11 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %12 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %11, i32* %16) #3
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18, i32 0, i32 2
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %19, i32** %25) #3
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  store i32* %30, i32** %34, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.1"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.1"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.1"* %0, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.1"*, %"class.__gnu_cxx::new_allocator.1"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector"*
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32*, align 8
  %11 = alloca %"class.std::vector", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i32* %2, i32** %10, align 8
  %14 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  store %"class.std::vector"* %14, %"class.std::vector"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 2045907709, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %274
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 2045907709, label %22
    i32 -1974409395, label %27
    i32 2132540669, label %38
    i32 921561154, label %54
    i32 1133695859, label %85
    i32 754996872, label %88
    i32 -673969284, label %104
    i32 -839472931, label %152
    i32 605431608, label %153
    i32 1172962458, label %163
    i32 -626582935, label %179
    i32 -913777576, label %195
    i32 -1189580579, label %196
    i32 -1614387540, label %212
    i32 -227467779, label %228
    i32 -323252275, label %229
    i32 -145201956, label %234
    i32 102928909, label %272
    i32 1226153821, label %273
  ]

; <label>:21:                                     ; preds = %19
  br label %274

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 -1974409395, i32 2132540669
  store i32 %26, i32* %18
  br label %274

; <label>:27:                                     ; preds = %19
  %28 = load i64, i64* %9, align 8
  %29 = load i32*, i32** %10, align 8
  %30 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %31) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"* %11, i64 %28, i32* dereferenceable(4) %29, %"class.std::allocator.0"* dereferenceable(1) %32)
  %33 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %36 = bitcast %"class.std::vector"* %35 to %"struct.std::_Vector_base"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %36, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %37) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %11) #3
  store i32 -1189580579, i32* %18
  br label %274

; <label>:38:                                     ; preds = %19
  %39 = load i32, i32* @x.606
  %40 = load i32, i32* @y.607
  %41 = add i32 %39, 1058913804
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1058913804
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 921561154, i32 -323252275
  store i32 %53, i32* %18
  br label %274

; <label>:54:                                     ; preds = %19
  %55 = load i64, i64* %9, align 8
  %56 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %57 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %56) #3
  %58 = icmp ugt i64 %55, %57
  store i1 %58, i1* %4
  %59 = load i32, i32* @x.606
  %60 = load i32, i32* @y.607
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 1133695859, i32 -323252275
  store i32 %84, i32* %18
  br label %274

; <label>:85:                                     ; preds = %19
  %86 = load volatile i1, i1* %4
  %87 = select i1 %86, i32 754996872, i32 605431608
  store i32 %87, i32* %18
  br label %274

; <label>:88:                                     ; preds = %19
  %89 = load i32, i32* @x.606
  %90 = load i32, i32* @y.607
  %91 = add i32 %89, -837248041
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, -837248041
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  %103 = select i1 %101, i32 -673969284, i32 -145201956
  store i32 %103, i32* %18
  br label %274

; <label>:104:                                    ; preds = %19
  %105 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %106 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"* %105) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  store i32* %106, i32** %107, align 8
  %108 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %109 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"* %108) #3
  %110 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %13, i32 0, i32 0
  store i32* %109, i32** %110, align 8
  %111 = load i32*, i32** %10, align 8
  %112 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  %113 = load i32*, i32** %112, align 8
  %114 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %13, i32 0, i32 0
  %115 = load i32*, i32** %114, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %113, i32* %115, i32* dereferenceable(4) %111)
  %116 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %117 = bitcast %"class.std::vector"* %116 to %"struct.std::_Vector_base"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %118, i32 0, i32 1
  %120 = load i32*, i32** %119, align 8
  %121 = load i64, i64* %9, align 8
  %122 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %123 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %122) #3
  %124 = sub i64 %121, -8169746435146072554
  %125 = sub i64 %124, %123
  %126 = add i64 %125, -8169746435146072554
  %127 = sub i64 %121, %123
  %128 = load i32*, i32** %10, align 8
  %129 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %130 = bitcast %"class.std::vector"* %129 to %"struct.std::_Vector_base"*
  %131 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %130) #3
  %132 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %120, i64 %126, i32* dereferenceable(4) %128, %"class.std::allocator.0"* dereferenceable(1) %131)
  %133 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %134 = bitcast %"class.std::vector"* %133 to %"struct.std::_Vector_base"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %135, i32 0, i32 1
  store i32* %132, i32** %136, align 8
  %137 = load i32, i32* @x.606
  %138 = load i32, i32* @y.607
  %139 = add i32 %137, -927897197
  %140 = sub i32 %139, 1
  %141 = sub i32 %140, -927897197
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = and i1 %145, %146
  %148 = xor i1 %145, %146
  %149 = or i1 %147, %148
  %150 = or i1 %145, %146
  %151 = select i1 %149, i32 -839472931, i32 -145201956
  store i32 %151, i32* %18
  br label %274

; <label>:152:                                    ; preds = %19
  store i32 1172962458, i32* %18
  br label %274

; <label>:153:                                    ; preds = %19
  %154 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %155 = bitcast %"class.std::vector"* %154 to %"struct.std::_Vector_base"*
  %156 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %155, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %156, i32 0, i32 0
  %158 = load i32*, i32** %157, align 8
  %159 = load i64, i64* %9, align 8
  %160 = load i32*, i32** %10, align 8
  %161 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %158, i64 %159, i32* dereferenceable(4) %160)
  %162 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector"* %162, i32* %161) #3
  store i32 1172962458, i32* %18
  br label %274

; <label>:163:                                    ; preds = %19
  %164 = load i32, i32* @x.606
  %165 = load i32, i32* @y.607
  %166 = add i32 %164, -1332218016
  %167 = sub i32 %166, 1
  %168 = sub i32 %167, -1332218016
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  %178 = select i1 %176, i32 -626582935, i32 102928909
  store i32 %178, i32* %18
  br label %274

; <label>:179:                                    ; preds = %19
  %180 = load i32, i32* @x.606
  %181 = load i32, i32* @y.607
  %182 = sub i32 %180, 1163005398
  %183 = sub i32 %182, 1
  %184 = add i32 %183, 1163005398
  %185 = sub i32 %180, 1
  %186 = mul i32 %180, %184
  %187 = urem i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = icmp slt i32 %181, 10
  %190 = and i1 %188, %189
  %191 = xor i1 %188, %189
  %192 = or i1 %190, %191
  %193 = or i1 %188, %189
  %194 = select i1 %192, i32 -913777576, i32 102928909
  store i32 %194, i32* %18
  br label %274

; <label>:195:                                    ; preds = %19
  store i32 -1189580579, i32* %18
  br label %274

; <label>:196:                                    ; preds = %19
  %197 = load i32, i32* @x.606
  %198 = load i32, i32* @y.607
  %199 = sub i32 %197, 1515862776
  %200 = sub i32 %199, 1
  %201 = add i32 %200, 1515862776
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  %211 = select i1 %209, i32 -1614387540, i32 1226153821
  store i32 %211, i32* %18
  br label %274

; <label>:212:                                    ; preds = %19
  %213 = load i32, i32* @x.606
  %214 = load i32, i32* @y.607
  %215 = sub i32 %213, 1611579788
  %216 = sub i32 %215, 1
  %217 = add i32 %216, 1611579788
  %218 = sub i32 %213, 1
  %219 = mul i32 %213, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %214, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  %227 = select i1 %225, i32 -227467779, i32 1226153821
  store i32 %227, i32* %18
  br label %274

; <label>:228:                                    ; preds = %19
  ret void

; <label>:229:                                    ; preds = %19
  %230 = load i64, i64* %9, align 8
  %231 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %232 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %231) #3
  %233 = icmp ugt i64 %230, %232
  store i32 921561154, i32* %18
  br label %274

; <label>:234:                                    ; preds = %19
  %235 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %236 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"* %235) #3
  %237 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  store i32* %236, i32** %237, align 8
  %238 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %239 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"* %238) #3
  %240 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %13, i32 0, i32 0
  store i32* %239, i32** %240, align 8
  %241 = load i32*, i32** %10, align 8
  %242 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  %243 = load i32*, i32** %242, align 8
  %244 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %13, i32 0, i32 0
  %245 = load i32*, i32** %244, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %243, i32* %245, i32* dereferenceable(4) %241)
  %246 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %247 = bitcast %"class.std::vector"* %246 to %"struct.std::_Vector_base"*
  %248 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %247, i32 0, i32 0
  %249 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %248, i32 0, i32 1
  %250 = load i32*, i32** %249, align 8
  %251 = load i64, i64* %9, align 8
  %252 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %253 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %252) #3
  %254 = add i64 %251, -5711820714167243356
  %255 = sub i64 %254, %253
  %256 = sub i64 %255, -5711820714167243356
  %257 = sub i64 %251, %253
  %258 = mul i64 %256, %253
  %259 = add i64 %251, 6356270921239750980
  %260 = sub i64 %259, %253
  %261 = sub i64 %260, 6356270921239750980
  %262 = sub i64 %251, %253
  %263 = load i32*, i32** %10, align 8
  %264 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %265 = bitcast %"class.std::vector"* %264 to %"struct.std::_Vector_base"*
  %266 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %265) #3
  %267 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %250, i64 %261, i32* dereferenceable(4) %263, %"class.std::allocator.0"* dereferenceable(1) %266)
  %268 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %269 = bitcast %"class.std::vector"* %268 to %"struct.std::_Vector_base"*
  %270 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %269, i32 0, i32 0
  %271 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %270, i32 0, i32 1
  store i32* %267, i32** %271, align 8
  store i32 -673969284, i32* %18
  br label %274

; <label>:272:                                    ; preds = %19
  store i32 -626582935, i32* %18
  br label %274

; <label>:273:                                    ; preds = %19
  store i32 -1614387540, i32* %18
  br label %274

; <label>:274:                                    ; preds = %273, %272, %234, %229, %212, %196, %195, %179, %163, %153, %152, %104, %88, %85, %54, %38, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.608
  %6 = load i32, i32* @y.609
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -575010243, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %96
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -575010243, label %18
    i32 -721132960, label %26
    i32 780134590, label %58
    i32 1591943526, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %96

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -721132960, i32 1591943526
  store i32 %25, i32* %14
  br label %96

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %27, align 8
  %28 = load %"class.std::vector"*, %"class.std::vector"** %27, align 8
  %29 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 2
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.std::vector"* %28 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = ptrtoint i32* %32 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = add i64 %37, -9079265791748409926
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, -9079265791748409926
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 4
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.608
  %45 = load i32, i32* @y.609
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 780134590, i32 1591943526
  store i32 %57, i32* %14
  br label %96

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %61, align 8
  %62 = load %"class.std::vector"*, %"class.std::vector"** %61, align 8
  %63 = bitcast %"class.std::vector"* %62 to %"struct.std::_Vector_base"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %64, i32 0, i32 2
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::vector"* %62 to %"struct.std::_Vector_base"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = ptrtoint i32* %66 to i64
  %72 = ptrtoint i32* %70 to i64
  %73 = sub i64 0, 1475329802713391589
  %74 = sub i64 %73, %71
  %75 = add i64 %74, 1475329802713391589
  %76 = sub i64 0, %71
  %77 = sub i64 0, %75
  %78 = sub i64 0, %72
  %79 = add i64 %77, %78
  %80 = sub i64 0, %79
  %81 = add i64 %75, %72
  %82 = shl i64 %71, %72
  %83 = sub i64 0, %72
  %84 = add i64 %71, %83
  %85 = sub i64 %71, %72
  %86 = sub i64 0, %84
  %87 = add i64 0, %86
  %88 = sub i64 0, %84
  %89 = sub i64 0, %87
  %90 = sub i64 0, 4
  %91 = add i64 %89, %90
  %92 = sub i64 0, %91
  %93 = add i64 %87, 4
  %94 = shl i64 %84, 4
  %95 = sdiv exact i64 %84, 4
  store i32 -721132960, i32* %14
  br label %96

; <label>:96:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"*, i64, i32* dereferenceable(4), %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.0"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator.0"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %58

; <label>:17:                                     ; preds = %4
  %18 = load i32, i32* @x.610
  %19 = load i32, i32* @y.611
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %68

; <label>:31:                                     ; preds = %17, %68
  %32 = load i32, i32* @x.610
  %33 = load i32, i32* @y.611
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %68

; <label>:57:                                     ; preds = %31
  ret void

; <label>:58:                                     ; preds = %4
  %59 = landingpad { i8*, i32 }
          cleanup
  %60 = extractvalue { i8*, i32 } %59, 0
  store i8* %60, i8** %9, align 8
  %61 = extractvalue { i8*, i32 } %59, 1
  store i32 %61, i32* %10, align 4
  %62 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %62) #3
  br label %63

; <label>:63:                                     ; preds = %58
  %64 = load i8*, i8** %9, align 8
  %65 = load i32, i32* %10, align 4
  %66 = insertvalue { i8*, i32 } undef, i8* %64, 0
  %67 = insertvalue { i8*, i32 } %66, i32 %65, 1
  resume { i8*, i32 } %67

; <label>:68:                                     ; preds = %31, %17
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.612
  %6 = load i32, i32* @y.613
  %7 = add i32 %5, -874241866
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -874241866
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1987845340, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1987845340, label %19
    i32 -1143183468, label %27
    i32 975298276, label %67
    i32 -458978606, label %68
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1143183468, i32 -458978606
  store i32 %26, i32* %15
  br label %81

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %29 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %28, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %29, align 8
  %30 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %31, i32** dereferenceable(8) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %35 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %29, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %34, i32** dereferenceable(8) %36) #3
  %37 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 2
  %38 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %29, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %37, i32** dereferenceable(8) %39) #3
  %40 = load i32, i32* @x.612
  %41 = load i32, i32* @y.613
  %42 = sub i32 %40, -2002589403
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -2002589403
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 975298276, i32 -458978606
  store i32 %66, i32* %15
  br label %81

; <label>:67:                                     ; preds = %16
  ret void

; <label>:68:                                     ; preds = %16
  %69 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %70 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %71 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %74 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %72, i32** dereferenceable(8) %74) #3
  %75 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 1
  %76 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %75, i32** dereferenceable(8) %77) #3
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 2
  %79 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %70, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %78, i32** dereferenceable(8) %80) #3
  store i32 -1143183468, i32* %15
  br label %81

; <label>:81:                                     ; preds = %68, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.614
  %6 = load i32, i32* @y.615
  %7 = add i32 %5, -1642672700
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1642672700
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1674759269, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %180
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1674759269, label %19
    i32 704060845, label %27
    i32 702997919, label %71
    i32 2003059479, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %180

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 704060845, i32 2003059479
  store i32 %26, i32* %15
  br label %180

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %28, align 8
  %29 = load %"class.std::vector"*, %"class.std::vector"** %28, align 8
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = ptrtoint i32* %33 to i64
  %39 = ptrtoint i32* %37 to i64
  %40 = sub i64 0, %39
  %41 = add i64 %38, %40
  %42 = sub i64 %38, %39
  %43 = sdiv exact i64 %41, 4
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.614
  %45 = load i32, i32* @y.615
  %46 = add i32 %44, 1195820662
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1195820662
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 702997919, i32 2003059479
  store i32 %70, i32* %15
  br label %180

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %74, align 8
  %75 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %76 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = ptrtoint i32* %79 to i64
  %85 = ptrtoint i32* %83 to i64
  %86 = shl i64 %84, %85
  %87 = add i64 0, 2143483616350929631
  %88 = sub i64 %87, %84
  %89 = sub i64 %88, 2143483616350929631
  %90 = sub i64 0, %84
  %91 = sub i64 %89, 6060749119759465795
  %92 = add i64 %91, %85
  %93 = add i64 %92, 6060749119759465795
  %94 = add i64 %89, %85
  %95 = sub i64 0, %85
  %96 = add i64 %84, %95
  %97 = sub i64 %84, %85
  %98 = mul i64 %96, %85
  %99 = sub i64 0, %85
  %100 = add i64 %84, %99
  %101 = sub i64 %84, %85
  %102 = mul i64 %100, %85
  %103 = shl i64 %84, %85
  %104 = add i64 0, 6791435785849410495
  %105 = sub i64 %104, %84
  %106 = sub i64 %105, 6791435785849410495
  %107 = sub i64 0, %84
  %108 = sub i64 %106, 6762939984073958301
  %109 = add i64 %108, %85
  %110 = add i64 %109, 6762939984073958301
  %111 = add i64 %106, %85
  %112 = sub i64 0, %85
  %113 = add i64 %84, %112
  %114 = sub i64 %84, %85
  %115 = mul i64 %113, %85
  %116 = sub i64 0, %85
  %117 = add i64 %84, %116
  %118 = sub i64 %84, %85
  %119 = mul i64 %117, %85
  %120 = add i64 %84, 1984149400122555341
  %121 = sub i64 %120, %85
  %122 = sub i64 %121, 1984149400122555341
  %123 = sub i64 %84, %85
  %124 = add i64 0, -2292195828631220626
  %125 = sub i64 %124, %122
  %126 = sub i64 %125, -2292195828631220626
  %127 = sub i64 0, %122
  %128 = sub i64 0, 4
  %129 = sub i64 %126, %128
  %130 = add i64 %126, 4
  %131 = sub i64 0, %122
  %132 = add i64 0, %131
  %133 = sub i64 0, %122
  %134 = sub i64 0, 4
  %135 = sub i64 %132, %134
  %136 = add i64 %132, 4
  %137 = sub i64 0, %122
  %138 = add i64 0, %137
  %139 = sub i64 0, %122
  %140 = sub i64 0, %138
  %141 = sub i64 0, 4
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add i64 %138, 4
  %145 = add i64 0, -234912539354509894
  %146 = sub i64 %145, %122
  %147 = sub i64 %146, -234912539354509894
  %148 = sub i64 0, %122
  %149 = sub i64 %147, -3229314247989115520
  %150 = add i64 %149, 4
  %151 = add i64 %150, -3229314247989115520
  %152 = add i64 %147, 4
  %153 = add i64 0, -6500345774341104982
  %154 = sub i64 %153, %122
  %155 = sub i64 %154, -6500345774341104982
  %156 = sub i64 0, %122
  %157 = sub i64 %155, 3096762648627497483
  %158 = add i64 %157, 4
  %159 = add i64 %158, 3096762648627497483
  %160 = add i64 %155, 4
  %161 = add i64 %122, -3324968011484410131
  %162 = sub i64 %161, 4
  %163 = sub i64 %162, -3324968011484410131
  %164 = sub i64 %122, 4
  %165 = mul i64 %163, 4
  %166 = sub i64 0, 4
  %167 = add i64 %122, %166
  %168 = sub i64 %122, 4
  %169 = mul i64 %167, 4
  %170 = shl i64 %122, 4
  %171 = sub i64 0, 4
  %172 = add i64 %122, %171
  %173 = sub i64 %122, 4
  %174 = mul i64 %172, 4
  %175 = sub i64 0, 4
  %176 = add i64 %122, %175
  %177 = sub i64 %122, 4
  %178 = mul i64 %176, 4
  %179 = sdiv exact i64 %122, 4
  store i32 704060845, i32* %15
  br label %180

; <label>:180:                                    ; preds = %73, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.618
  %6 = load i32, i32* @y.619
  %7 = add i32 %5, 162423939
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 162423939
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1105499297, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %85
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1105499297, label %19
    i32 1239861481, label %39
    i32 1910617732, label %74
    i32 1775964759, label %76
  ]

; <label>:18:                                     ; preds = %16
  br label %85

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1239861481, i32 1775964759
  store i32 %38, i32* %15
  br label %85

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %40, i32** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %40, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.618
  %49 = load i32, i32* @y.619
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1910617732, i32 1775964759
  store i32 %73, i32* %15
  br label %85

; <label>:74:                                     ; preds = %16
  %75 = load volatile i32*, i32** %2
  ret i32* %75

; <label>:76:                                     ; preds = %16
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %78 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %78, align 8
  %79 = load %"class.std::vector"*, %"class.std::vector"** %78, align 8
  %80 = bitcast %"class.std::vector"* %79 to %"struct.std::_Vector_base"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %77, i32** dereferenceable(8) %82) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %77, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  store i32 1239861481, i32* %15
  br label %85

; <label>:85:                                     ; preds = %76, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.620
  %6 = load i32, i32* @y.621
  %7 = sub i32 %5, -468862196
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -468862196
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -508121921, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -508121921, label %19
    i32 1467051235, label %39
    i32 -390076164, label %75
    i32 -1292656034, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1467051235, i32 -1292656034
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %41 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  %42 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %43 = bitcast %"class.std::vector"* %42 to %"struct.std::_Vector_base"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %40, i32** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %40, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  store i32* %47, i32** %2
  %48 = load i32, i32* @x.620
  %49 = load i32, i32* @y.621
  %50 = sub i32 %48, 1056528998
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1056528998
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -390076164, i32 -1292656034
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile i32*, i32** %2
  ret i32* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %79 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %79, align 8
  %80 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %81 = bitcast %"class.std::vector"* %80 to %"struct.std::_Vector_base"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %82, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %78, i32** dereferenceable(8) %83) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %78, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  store i32 1467051235, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.0"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.622
  %9 = load i32, i32* @y.623
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 429408773, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 429408773, label %21
    i32 -456584070, label %41
    i32 -517260611, label %76
    i32 1990844186, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -456584070, i32 1990844186
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  %45 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %45, align 8
  %46 = load i32*, i32** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load i32*, i32** %44, align 8
  %49 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %46, i64 %47, i32* dereferenceable(4) %48)
  store i32* %49, i32** %5
  %50 = load i32, i32* @x.622
  %51 = load i32, i32* @y.623
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -517260611, i32 1990844186
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32*, i32** %5
  ret i32* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i32*, align 8
  %82 = alloca %"class.std::allocator.0"*, align 8
  store i32* %0, i32** %79, align 8
  store i64 %1, i64* %80, align 8
  store i32* %2, i32** %81, align 8
  store %"class.std::allocator.0"* %3, %"class.std::allocator.0"** %82, align 8
  %83 = load i32*, i32** %79, align 8
  %84 = load i64, i64* %80, align 8
  %85 = load i32*, i32** %81, align 8
  %86 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %83, i64 %84, i32* dereferenceable(4) %85)
  store i32 -456584070, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.624
  %4 = load i32, i32* @y.625
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %62

; <label>:28:                                     ; preds = %2, %62
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i32* %1, i32** %30, align 8
  %31 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %32 = load i32*, i32** %30, align 8
  %33 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 1
  %36 = load i32*, i32** %35, align 8
  %37 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %38 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %37) #3
  %39 = load i32, i32* @x.624
  %40 = load i32, i32* @y.625
  %41 = sub i32 %39, 1128894536
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1128894536
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %62

; <label>:53:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %32, i32* %36, %"class.std::allocator.0"* dereferenceable(1) %38)
          to label %54 unwind label %59

; <label>:54:                                     ; preds = %53
  %55 = load i32*, i32** %30, align 8
  %56 = bitcast %"class.std::vector"* %31 to %"struct.std::_Vector_base"*
  %57 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %57, i32 0, i32 1
  store i32* %55, i32** %58, align 8
  ret void

; <label>:59:                                     ; preds = %53
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  call void @__clang_call_terminate(i8* %61) #11
  unreachable

; <label>:62:                                     ; preds = %28, %2
  %63 = alloca %"class.std::vector"*, align 8
  %64 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %63, align 8
  store i32* %1, i32** %64, align 8
  %65 = load %"class.std::vector"*, %"class.std::vector"** %63, align 8
  %66 = load i32*, i32** %64, align 8
  %67 = bitcast %"class.std::vector"* %65 to %"struct.std::_Vector_base"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %68, i32 0, i32 1
  %70 = load i32*, i32** %69, align 8
  %71 = bitcast %"class.std::vector"* %65 to %"struct.std::_Vector_base"*
  %72 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %71) #3
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.628
  %5 = load i32, i32* @y.629
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %103

; <label>:17:                                     ; preds = %3, %103
  %18 = alloca %"struct.std::_Vector_base"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::allocator.0"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %20, align 8
  %23 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %18, align 8
  %24 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %23, i32 0, i32 0
  %25 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %20, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %24, %"class.std::allocator.0"* dereferenceable(1) %25) #3
  %26 = load i64, i64* %19, align 8
  %27 = load i32, i32* @x.628
  %28 = load i32, i32* @y.629
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 false, true
  %39 = and i1 %36, false
  %40 = and i1 %34, %38
  %41 = and i1 %37, false
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 false, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  br i1 %50, label %52, label %103

; <label>:52:                                     ; preds = %17
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"* %23, i64 %26)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %52
  ret void

; <label>:54:                                     ; preds = %52
  %55 = load i32, i32* @x.628
  %56 = load i32, i32* @y.629
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %113

; <label>:68:                                     ; preds = %54, %113
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %21, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %24) #3
  %72 = load i32, i32* @x.628
  %73 = load i32, i32* @y.629
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  br i1 %95, label %97, label %113

; <label>:97:                                     ; preds = %68
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i8*, i8** %21, align 8
  %100 = load i32, i32* %22, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  resume { i8*, i32 } %102

; <label>:103:                                    ; preds = %17, %3
  %104 = alloca %"struct.std::_Vector_base"*, align 8
  %105 = alloca i64, align 8
  %106 = alloca %"class.std::allocator.0"*, align 8
  %107 = alloca i8*
  %108 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %104, align 8
  store i64 %1, i64* %105, align 8
  store %"class.std::allocator.0"* %2, %"class.std::allocator.0"** %106, align 8
  %109 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %104, align 8
  %110 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %109, i32 0, i32 0
  %111 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %106, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %110, %"class.std::allocator.0"* dereferenceable(1) %111) #3
  %112 = load i64, i64* %105, align 8
  br label %17

; <label>:113:                                    ; preds = %68, %54
  %114 = landingpad { i8*, i32 }
          cleanup
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %21, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %22, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %24) #3
  br label %68
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load i32*, i32** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator.0"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %11, i64 %12, i32* dereferenceable(4) %13, %"class.std::allocator.0"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %18, i32 0, i32 1
  store i32* %16, i32** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.0"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.632
  %6 = load i32, i32* @y.633
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2028516288, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2028516288, label %18
    i32 -167558587, label %26
    i32 1484742285, label %50
    i32 287109162, label %51
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -167558587, i32 287109162
  store i32 %25, i32* %14
  br label %60

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %28 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %28, align 8
  %29 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %27, align 8
  %30 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29 to %"class.std::allocator.0"*
  %31 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %28, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %30, %"class.std::allocator.0"* dereferenceable(1) %31) #3
  %32 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 0
  store i32* null, i32** %32, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 1
  store i32* null, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %29, i32 0, i32 2
  store i32* null, i32** %34, align 8
  %35 = load i32, i32* @x.632
  %36 = load i32, i32* @y.633
  %37 = sub i32 %35, -24043568
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -24043568
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1484742285, i32 287109162
  store i32 %49, i32* %14
  br label %60

; <label>:50:                                     ; preds = %15
  ret void

; <label>:51:                                     ; preds = %15
  %52 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %53 = alloca %"class.std::allocator.0"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %52, align 8
  store %"class.std::allocator.0"* %1, %"class.std::allocator.0"** %53, align 8
  %54 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %52, align 8
  %55 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54 to %"class.std::allocator.0"*
  %56 = load %"class.std::allocator.0"*, %"class.std::allocator.0"** %53, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.0"* %55, %"class.std::allocator.0"* dereferenceable(1) %56) #3
  %57 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 0
  store i32* null, i32** %57, align 8
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 1
  store i32* null, i32** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %54, i32 0, i32 2
  store i32* null, i32** %59, align 8
  store i32 -167558587, i32* %14
  br label %60

; <label>:60:                                     ; preds = %51, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1029816047, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1029816047, label %14
    i32 -636806877, label %18
    i32 74464475, label %24
    i32 -169775262, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 -636806877, i32 74464475
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator.0"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.0"* dereferenceable(1) %21, i64 %22)
  store i32 -169775262, i32* %9
  store i32* %23, i32** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 -169775262, i32* %9
  store i32* null, i32** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i32*, i32** %10
  ret i32* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.640
  %6 = load i32, i32* @y.641
  %7 = sub i32 %5, -870969385
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -870969385
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1801661616, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1801661616, label %19
    i32 -955301503, label %39
    i32 -1617343081, label %57
    i32 1116976416, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -955301503, i32 1116976416
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  store i32** %41, i32*** %2
  %42 = load i32, i32* @x.640
  %43 = load i32, i32* @y.641
  %44 = add i32 %42, 808088059
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 808088059
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1617343081, i32 1116976416
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca i32**, align 8
  store i32** %0, i32*** %60, align 8
  %61 = load i32**, i32*** %60, align 8
  store i32 -955301503, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 -1433460603, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %26
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1433460603, label %14
    i32 -618697952, label %19
    i32 -1904978694, label %22
    i32 -83366323, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %26

; <label>:14:                                     ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = icmp ne i32* %15, %16
  %18 = select i1 %17, i32 -618697952, i32 -83366323
  store i32 %18, i32* %10
  br label %26

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = load i32*, i32** %4, align 8
  store i32 %20, i32* %21, align 4
  store i32 -1904978694, i32* %10
  br label %26

; <label>:22:                                     ; preds = %11
  %23 = load i32*, i32** %4, align 8
  %24 = getelementptr inbounds i32, i32* %23, i32 1
  store i32* %24, i32** %4, align 8
  store i32 -1433460603, i32* %10
  br label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %22, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.646
  %6 = load i32, i32* @y.647
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1769855577, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1769855577, label %18
    i32 1986807714, label %38
    i32 1027723056, label %70
    i32 1224840701, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1986807714, i32 1224840701
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %39, i32 0, i32 0
  store i32* %0, i32** %40, align 8
  %41 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %39) #3
  %42 = load i32*, i32** %41, align 8
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.646
  %44 = load i32, i32* @y.647
  %45 = add i32 %43, 942570380
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 942570380
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1027723056, i32 1224840701
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %73, i32 0, i32 0
  store i32* %0, i32** %74, align 8
  %75 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %73) #3
  %76 = load i32*, i32** %75, align 8
  store i32 1986807714, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.654
  %8 = load i32, i32* @y.655
  %9 = sub i32 %7, -1854747515
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1854747515
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 186387146, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 186387146, label %21
    i32 669510206, label %41
    i32 -1124255749, label %76
    i32 -1334672656, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 669510206, i32 -1334672656
  store i32 %40, i32* %17
  br label %86

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i32*, i32** %44, align 8
  %48 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.654
  %50 = load i32, i32* @y.655
  %51 = add i32 %49, -1346509588
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1346509588
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1124255749, i32 -1334672656
  store i32 %75, i32* %17
  br label %86

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32*, i32** %4
  ret i32* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32*, align 8
  %80 = alloca i64, align 8
  %81 = alloca i32*, align 8
  store i32* %0, i32** %79, align 8
  store i64 %1, i64* %80, align 8
  store i32* %2, i32** %81, align 8
  %82 = load i32*, i32** %79, align 8
  %83 = load i64, i64* %80, align 8
  %84 = load i32*, i32** %81, align 8
  %85 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %82, i64 %83, i32* dereferenceable(4) %84)
  store i32 669510206, i32* %17
  br label %86

; <label>:86:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.656
  %11 = load i32, i32* @y.657
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 -1492394545, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %151
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1492394545, label %23
    i32 331187801, label %31
    i32 -831452154, label %69
    i32 -1867060563, label %70
    i32 1387849098, label %97
    i32 -1177252813, label %116
    i32 -208335453, label %119
    i32 1727215419, label %124
    i32 -78487724, label %135
    i32 1479349601, label %138
    i32 -1742820232, label %147
  ]

; <label>:22:                                     ; preds = %20
  br label %151

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 331187801, i32 1479349601
  store i32 %30, i32* %19
  br label %151

; <label>:31:                                     ; preds = %20
  %32 = alloca i32*, align 8
  store i32** %32, i32*** %7
  %33 = alloca i64, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i32, align 4
  store i32* %35, i32** %6
  %36 = alloca i64, align 8
  store i64* %36, i64** %5
  %37 = load volatile i32**, i32*** %7
  store i32* %0, i32** %37, align 8
  store i64 %1, i64* %33, align 8
  store i32* %2, i32** %34, align 8
  %38 = load i32*, i32** %34, align 8
  %39 = load i32, i32* %38, align 4
  %40 = load volatile i32*, i32** %6
  store i32 %39, i32* %40, align 4
  %41 = load i64, i64* %33, align 8
  %42 = load volatile i64*, i64** %5
  store i64 %41, i64* %42, align 8
  %43 = load i32, i32* @x.656
  %44 = load i32, i32* @y.657
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -831452154, i32 1479349601
  store i32 %68, i32* %19
  br label %151

; <label>:69:                                     ; preds = %20
  store i32 -1867060563, i32* %19
  br label %151

; <label>:70:                                     ; preds = %20
  %71 = load i32, i32* @x.656
  %72 = load i32, i32* @y.657
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1387849098, i32 -1742820232
  store i32 %96, i32* %19
  br label %151

; <label>:97:                                     ; preds = %20
  %98 = load volatile i64*, i64** %5
  %99 = load i64, i64* %98, align 8
  %100 = icmp ugt i64 %99, 0
  store i1 %100, i1* %4
  %101 = load i32, i32* @x.656
  %102 = load i32, i32* @y.657
  %103 = add i32 %101, 207929437
  %104 = sub i32 %103, 1
  %105 = sub i32 %104, 207929437
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  %115 = select i1 %113, i32 -1177252813, i32 -1742820232
  store i32 %115, i32* %19
  br label %151

; <label>:116:                                    ; preds = %20
  %117 = load volatile i1, i1* %4
  %118 = select i1 %117, i32 -208335453, i32 -78487724
  store i32 %118, i32* %19
  br label %151

; <label>:119:                                    ; preds = %20
  %120 = load volatile i32*, i32** %6
  %121 = load i32, i32* %120, align 4
  %122 = load volatile i32**, i32*** %7
  %123 = load i32*, i32** %122, align 8
  store i32 %121, i32* %123, align 4
  store i32 1727215419, i32* %19
  br label %151

; <label>:124:                                    ; preds = %20
  %125 = load volatile i64*, i64** %5
  %126 = load i64, i64* %125, align 8
  %127 = sub i64 0, -1
  %128 = sub i64 %126, %127
  %129 = add i64 %126, -1
  %130 = load volatile i64*, i64** %5
  store i64 %128, i64* %130, align 8
  %131 = load volatile i32**, i32*** %7
  %132 = load i32*, i32** %131, align 8
  %133 = getelementptr inbounds i32, i32* %132, i32 1
  %134 = load volatile i32**, i32*** %7
  store i32* %133, i32** %134, align 8
  store i32 -1867060563, i32* %19
  br label %151

; <label>:135:                                    ; preds = %20
  %136 = load volatile i32**, i32*** %7
  %137 = load i32*, i32** %136, align 8
  ret i32* %137

; <label>:138:                                    ; preds = %20
  %139 = alloca i32*, align 8
  %140 = alloca i64, align 8
  %141 = alloca i32*, align 8
  %142 = alloca i32, align 4
  %143 = alloca i64, align 8
  store i32* %0, i32** %139, align 8
  store i64 %1, i64* %140, align 8
  store i32* %2, i32** %141, align 8
  %144 = load i32*, i32** %141, align 8
  %145 = load i32, i32* %144, align 4
  store i32 %145, i32* %142, align 4
  %146 = load i64, i64* %140, align 8
  store i64 %146, i64* %143, align 8
  store i32 331187801, i32* %19
  br label %151

; <label>:147:                                    ; preds = %20
  %148 = load volatile i64*, i64** %5
  %149 = load i64, i64* %148, align 8
  %150 = icmp ugt i64 %149, 0
  store i32 1387849098, i32* %19
  br label %151

; <label>:151:                                    ; preds = %147, %138, %124, %119, %116, %97, %70, %69, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.658
  %6 = load i32, i32* @y.659
  %7 = add i32 %5, -475821576
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -475821576
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -96877993, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -96877993, label %19
    i32 -2069821804, label %39
    i32 732273963, label %58
    i32 798696925, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2069821804, i32 798696925
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  %42 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %41)
  store i32* %42, i32** %2
  %43 = load i32, i32* @x.658
  %44 = load i32, i32* @y.659
  %45 = sub i32 %43, 1639180109
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1639180109
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 732273963, i32 798696925
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i32*, align 8
  store i32* %0, i32** %61, align 8
  %62 = load i32*, i32** %61, align 8
  %63 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %62)
  store i32 -2069821804, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"*, i64) #5 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.662
  %7 = load i32, i32* @y.663
  %8 = add i32 %6, -567698495
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -567698495
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 613387552, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 613387552, label %20
    i32 1676375668, label %28
    i32 922056650, label %65
    i32 850908179, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1676375668, i32 850908179
  store i32 %27, i32* %16
  br label %77

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %32 = bitcast %"class.std::vector.8"* %31 to %"struct.std::_Vector_base.9"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %35, i64 %36
  store %"struct.Graph::edge"* %37, %"struct.Graph::edge"** %3
  %38 = load i32, i32* @x.662
  %39 = load i32, i32* @y.663
  %40 = sub i32 %38, 36361151
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 36361151
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 922056650, i32 850908179
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %3
  ret %"struct.Graph::edge"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.8"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  %71 = bitcast %"class.std::vector.8"* %70 to %"struct.std::_Vector_base.9"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %74, i64 %75
  store i32 1676375668, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 396079378, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 396079378, label %16
    i32 -2088010756, label %21
    i32 322187462, label %23
    i32 -2057615490, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -2088010756, i32 322187462
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -2057615490, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -2057615490, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%struct.Graph*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.666
  %5 = load i32, i32* @y.667
  %6 = sub i32 %4, -851773729
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -851773729
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1647828769, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1647828769, label %18
    i32 -1193372141, label %26
    i32 -1602882236, label %57
    i32 887973210, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1193372141, i32 887973210
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %struct.Graph*, align 8
  store %struct.Graph* %0, %struct.Graph** %27, align 8
  %28 = load %struct.Graph*, %struct.Graph** %27, align 8
  %29 = getelementptr inbounds %struct.Graph, %struct.Graph* %28, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %29) #3
  %30 = load i32, i32* @x.666
  %31 = load i32, i32* @y.667
  %32 = add i32 %30, 944005198
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 944005198
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1602882236, i32 887973210
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %struct.Graph*, align 8
  store %struct.Graph* %0, %struct.Graph** %59, align 8
  %60 = load %struct.Graph*, %struct.Graph** %59, align 8
  %61 = getelementptr inbounds %struct.Graph, %struct.Graph* %60, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %61) #3
  store i32 -1193372141, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s992285256.cpp() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.668
  %4 = load i32, i32* @y.669
  %5 = sub i32 %3, -1409210212
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1409210212
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 1315908078, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %43
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1315908078, label %17
    i32 166239099, label %25
    i32 1852255192, label %41
    i32 71522799, label %42
  ]

; <label>:16:                                     ; preds = %14
  br label %43

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 166239099, i32 71522799
  store i32 %24, i32* %13
  br label %43

; <label>:25:                                     ; preds = %14
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  %26 = load i32, i32* @x.668
  %27 = load i32, i32* @y.669
  %28 = sub i32 %26, 1151596493
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 1151596493
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 1852255192, i32 71522799
  store i32 %40, i32* %13
  br label %43

; <label>:41:                                     ; preds = %14
  ret void

; <label>:42:                                     ; preds = %14
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  store i32 166239099, i32* %13
  br label %43

; <label>:43:                                     ; preds = %42, %25, %17, %16
  br label %14
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
