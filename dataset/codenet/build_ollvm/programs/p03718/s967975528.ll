; ModuleID = 'Project_CodeNet_C++1400/p03718/s967975528.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s967975528.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::allocator" = type { i8 }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%struct.Dinic = type { i32, %"class.std::vector", %"class.std::vector", %struct.Graph }
%struct.Graph = type { i32, %"class.std::vector.3" }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl" = type { %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* }
%"class.std::vector.8" = type { %"struct.std::_Vector_base.9" }
%"struct.std::_Vector_base.9" = type { %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl" = type { %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"* }
%"struct.Graph::edge" = type { i32, i64, i64 }
%"class.__gnu_cxx::__normal_iterator.13" = type { %"class.std::vector.8"* }
%"class.__gnu_cxx::__normal_iterator" = type { %"class.std::vector.8"* }
%"class.std::allocator.10" = type { i8 }
%"class.std::allocator.5" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.14" = type { %"struct.Graph::edge"* }
%"class.std::move_iterator" = type { %"class.std::vector.8"* }
%"class.__gnu_cxx::new_allocator.11" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.15" = type { %"struct.Graph::edge"* }
%"class.std::move_iterator.16" = type { %"struct.Graph::edge"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.17" = type { i8 }
%"class.__gnu_cxx::new_allocator.18" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.20" = type { i32* }
%"class.std::move_iterator.21" = type { i32* }

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIiSaIiEE9push_backERKi = comdat any

$_ZN5DinicC2Ei = comdat any

$_ZN5Dinic8add_edgeEiiii = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZN5Dinic8max_flowEii = comdat any

$_ZN5DinicD2Ev = comdat any

$_ZN5GraphC2Ei = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_ = comdat any

$_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_ = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_ = comdat any

$_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_ = comdat any

$_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv = comdat any

$_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_ = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaIN5Graph4edgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaIN5Graph4edgeEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_ = comdat any

$_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv = comdat any

$_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_ = comdat any

$_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_ = comdat any

$_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_ = comdat any

$_ZSt4swapIPN5Graph4edgeEEvRT_S4_ = comdat any

$_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_ = comdat any

$_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_ = comdat any

$_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_ = comdat any

$_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_ = comdat any

$_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv = comdat any

$_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5Graph4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev = comdat any

$_ZN5GraphixEi = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_ = comdat any

$_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_ = comdat any

$_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_ = comdat any

$_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_ = comdat any

$_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_ = comdat any

$_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_ = comdat any

$_ZN5Dinic7g_levelEii = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZN5Dinic3dfsEiix = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm = comdat any

$_ZSt3minIxERKT_S2_S2_ = comdat any

$_ZN5GraphD2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@h = global i32 0, align 4
@w = global i32 0, align 4
@sx = global i32 0, align 4
@sy = global i32 0, align 4
@tx = global i32 0, align 4
@ty = global i32 0, align 4
@H = global [100 x %"class.std::vector"] zeroinitializer, align 16
@W = global [100 x %"class.std::vector"] zeroinitializer, align 16
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s967975528.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0
@x.619 = common global i32 0
@y.620 = common global i32 0
@x.621 = common global i32 0
@y.622 = common global i32 0
@x.623 = common global i32 0
@y.624 = common global i32 0
@x.625 = common global i32 0
@y.626 = common global i32 0
@x.627 = common global i32 0
@y.628 = common global i32 0
@x.629 = common global i32 0
@y.630 = common global i32 0
@x.631 = common global i32 0
@y.632 = common global i32 0
@x.633 = common global i32 0
@y.634 = common global i32 0
@x.635 = common global i32 0
@y.636 = common global i32 0
@x.637 = common global i32 0
@y.638 = common global i32 0
@x.639 = common global i32 0
@y.640 = common global i32 0
@x.641 = common global i32 0
@y.642 = common global i32 0
@x.643 = common global i32 0
@y.644 = common global i32 0
@x.645 = common global i32 0
@y.646 = common global i32 0
@x.647 = common global i32 0
@y.648 = common global i32 0
@x.649 = common global i32 0
@y.650 = common global i32 0
@x.651 = common global i32 0
@y.652 = common global i32 0
@x.653 = common global i32 0
@y.654 = common global i32 0
@x.655 = common global i32 0
@y.656 = common global i32 0
@x.657 = common global i32 0
@y.658 = common global i32 0
@x.659 = common global i32 0
@y.660 = common global i32 0
@x.661 = common global i32 0
@y.662 = common global i32 0
@x.663 = common global i32 0
@y.664 = common global i32 0
@x.665 = common global i32 0
@y.666 = common global i32 0
@x.667 = common global i32 0
@y.668 = common global i32 0
@x.669 = common global i32 0
@y.670 = common global i32 0
@x.671 = common global i32 0
@y.672 = common global i32 0
@x.673 = common global i32 0
@y.674 = common global i32 0
@x.675 = common global i32 0
@y.676 = common global i32 0
@x.677 = common global i32 0
@y.678 = common global i32 0
@x.679 = common global i32 0
@y.680 = common global i32 0
@x.681 = common global i32 0
@y.682 = common global i32 0
@x.683 = common global i32 0
@y.684 = common global i32 0
@x.685 = common global i32 0
@y.686 = common global i32 0
@x.687 = common global i32 0
@y.688 = common global i32 0
@x.689 = common global i32 0
@y.690 = common global i32 0
@x.691 = common global i32 0
@y.692 = common global i32 0
@x.693 = common global i32 0
@y.694 = common global i32 0
@x.695 = common global i32 0
@y.696 = common global i32 0
@x.697 = common global i32 0
@y.698 = common global i32 0
@x.699 = common global i32 0
@y.700 = common global i32 0
@x.701 = common global i32 0
@y.702 = common global i32 0
@x.703 = common global i32 0
@y.704 = common global i32 0
@x.705 = common global i32 0
@y.706 = common global i32 0
@x.707 = common global i32 0
@y.708 = common global i32 0
@x.709 = common global i32 0
@y.710 = common global i32 0
@x.711 = common global i32 0
@y.712 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x
  %4 = load i32, i32* @y
  %5 = add i32 %3, 48248488
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 48248488
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 -1099815643, i32* %13
  br label %14

; <label>:14:                                     ; preds = %0, %57
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1099815643, label %17
    i32 -30243797, label %25
    i32 110595269, label %54
    i32 -845359125, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %57

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %2
  %19 = load volatile i1, i1* %1
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -30243797, i32 -845359125
  store i32 %24, i32* %13
  br label %57

; <label>:25:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %26 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  %27 = load i32, i32* @x
  %28 = load i32, i32* @y
  %29 = add i32 %27, 1367116598
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 1367116598
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 110595269, i32 -845359125
  store i32 %53, i32* %13
  br label %57

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %56 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  store i32 -30243797, i32* %13
  br label %57

; <label>:57:                                     ; preds = %55, %25, %17, %16
  br label %14
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.1() #0 section ".text.startup" {
  %1 = alloca %"class.std::vector"*
  %2 = alloca i1
  %3 = alloca %"class.std::vector"*
  %4 = alloca i32
  store i32 -745571123, i32* %4
  %5 = alloca %"class.std::vector"*
  store %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0), %"class.std::vector"** %5
  br label %6

; <label>:6:                                      ; preds = %0, %115
  %7 = load i32, i32* %4
  switch i32 %7, label %8 [
    i32 -745571123, label %9
    i32 -1888002441, label %38
    i32 41806597, label %70
    i32 174654704, label %74
    i32 -935353470, label %90
    i32 -2465045, label %107
    i32 561049316, label %108
    i32 1566514908, label %113
  ]

; <label>:8:                                      ; preds = %6
  br label %115

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector"*, %"class.std::vector"** %5
  store %"class.std::vector"* %10, %"class.std::vector"** %1
  %11 = load i32, i32* @x.5
  %12 = load i32, i32* @y.6
  %13 = add i32 %11, -1460757341
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1460757341
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1888002441, i32 561049316
  store i32 %37, i32* %4
  br label %115

; <label>:38:                                     ; preds = %6
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %1
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %39) #3
  %40 = load volatile %"class.std::vector"*, %"class.std::vector"** %1
  %41 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %40, i64 1
  store %"class.std::vector"* %41, %"class.std::vector"** %3
  %42 = load volatile %"class.std::vector"*, %"class.std::vector"** %3
  %43 = icmp eq %"class.std::vector"* %42, getelementptr inbounds (%"class.std::vector", %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0), i64 100)
  store i1 %43, i1* %2
  %44 = load i32, i32* @x.5
  %45 = load i32, i32* @y.6
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 41806597, i32 561049316
  store i32 %69, i32* %4
  br label %115

; <label>:70:                                     ; preds = %6
  %71 = load volatile i1, i1* %2
  %72 = select i1 %71, i32 174654704, i32 -745571123
  store i32 %72, i32* %4
  %73 = load volatile %"class.std::vector"*, %"class.std::vector"** %3
  store %"class.std::vector"* %73, %"class.std::vector"** %5
  br label %115

; <label>:74:                                     ; preds = %6
  %75 = load i32, i32* @x.5
  %76 = load i32, i32* @y.6
  %77 = sub i32 %75, -2035656017
  %78 = sub i32 %77, 1
  %79 = add i32 %78, -2035656017
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 -935353470, i32 1566514908
  store i32 %89, i32* %4
  br label %115

; <label>:90:                                     ; preds = %6
  %91 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor, i8* null, i8* @__dso_handle) #3
  %92 = load i32, i32* @x.5
  %93 = load i32, i32* @y.6
  %94 = add i32 %92, 768957852
  %95 = sub i32 %94, 1
  %96 = sub i32 %95, 768957852
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -2465045, i32 1566514908
  store i32 %106, i32* %4
  br label %115

; <label>:107:                                    ; preds = %6
  ret void

; <label>:108:                                    ; preds = %6
  %109 = load volatile %"class.std::vector"*, %"class.std::vector"** %1
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %109) #3
  %110 = load volatile %"class.std::vector"*, %"class.std::vector"** %1
  %111 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %110, i64 1
  %112 = icmp eq %"class.std::vector"* %111, getelementptr inbounds (%"class.std::vector", %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0), i64 100)
  store i32 -1888002441, i32* %4
  br label %115

; <label>:113:                                    ; preds = %6
  %114 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor, i8* null, i8* @__dso_handle) #3
  store i32 -935353470, i32* %4
  br label %115

; <label>:115:                                    ; preds = %113, %108, %90, %74, %70, %38, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.7
  %3 = load i32, i32* @y.8
  %4 = sub i32 %2, 1744000410
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1744000410
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %104

; <label>:28:                                     ; preds = %1, %104
  %29 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %30 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %31 = bitcast %"class.std::vector"* %30 to %"struct.std::_Vector_base"*
  %32 = load i32, i32* @x.7
  %33 = load i32, i32* @y.8
  %34 = sub i32 %32, 1035998834
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 1035998834
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %104

; <label>:46:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"* %31)
          to label %47 unwind label %48

; <label>:47:                                     ; preds = %46
  ret void

; <label>:48:                                     ; preds = %46
  %49 = load i32, i32* @x.7
  %50 = load i32, i32* @y.8
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %108

; <label>:74:                                     ; preds = %48, %108
  %75 = landingpad { i8*, i32 }
          catch i8* null
  %76 = extractvalue { i8*, i32 } %75, 0
  call void @__clang_call_terminate(i8* %76) #11
  %77 = load i32, i32* @x.7
  %78 = load i32, i32* @y.8
  %79 = sub i32 %77, -384218743
  %80 = sub i32 %79, 1
  %81 = add i32 %80, -384218743
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  br i1 %101, label %103, label %108

; <label>:103:                                    ; preds = %74
  unreachable

; <label>:104:                                    ; preds = %28, %1
  %105 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %105, align 8
  %106 = load %"class.std::vector"*, %"class.std::vector"** %105, align 8
  %107 = bitcast %"class.std::vector"* %106 to %"struct.std::_Vector_base"*
  br label %28

; <label>:108:                                    ; preds = %74, %48
  %109 = landingpad { i8*, i32 }
          catch i8* null
  %110 = extractvalue { i8*, i32 } %109, 0
  call void @__clang_call_terminate(i8* %110) #11
  br label %74
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_array_dtor(i8*) #0 section ".text.startup" {
  %2 = alloca %"class.std::vector"*
  %3 = alloca i1
  %4 = alloca %"class.std::vector"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.9
  %8 = load i32, i32* @y.10
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1817450839, i32* %16
  %17 = alloca %"class.std::vector"*
  br label %18

; <label>:18:                                     ; preds = %1, %165
  %19 = load i32, i32* %16
  switch i32 %19, label %20 [
    i32 -1817450839, label %21
    i32 920483851, label %41
    i32 -1168441701, label %58
    i32 -1832381861, label %59
    i32 -1838213270, label %88
    i32 -217184833, label %109
    i32 -641980630, label %113
    i32 -487314127, label %129
    i32 -1801217447, label %157
    i32 -1301799686, label %158
    i32 -605447883, label %160
    i32 15768922, label %164
  ]

; <label>:20:                                     ; preds = %18
  br label %165

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 920483851, i32 -1301799686
  store i32 %40, i32* %16
  br label %165

; <label>:41:                                     ; preds = %18
  %42 = alloca i8*, align 8
  store i8* %0, i8** %42, align 8
  %43 = load i32, i32* @x.9
  %44 = load i32, i32* @y.10
  %45 = add i32 %43, -395500179
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -395500179
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1168441701, i32 -1301799686
  store i32 %57, i32* %16
  br label %165

; <label>:58:                                     ; preds = %18
  store i32 -1832381861, i32* %16
  store %"class.std::vector"* getelementptr inbounds (%"class.std::vector", %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0), i64 100), %"class.std::vector"** %17
  br label %165

; <label>:59:                                     ; preds = %18
  %60 = load %"class.std::vector"*, %"class.std::vector"** %17
  store %"class.std::vector"* %60, %"class.std::vector"** %2
  %61 = load i32, i32* @x.9
  %62 = load i32, i32* @y.10
  %63 = sub i32 %61, -636191874
  %64 = sub i32 %63, 1
  %65 = add i32 %64, -636191874
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  %87 = select i1 %85, i32 -1838213270, i32 -605447883
  store i32 %87, i32* %16
  br label %165

; <label>:88:                                     ; preds = %18
  %89 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  %90 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %89, i64 -1
  store %"class.std::vector"* %90, %"class.std::vector"** %4
  %91 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %91) #3
  %92 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  %93 = icmp eq %"class.std::vector"* %92, getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0)
  store i1 %93, i1* %3
  %94 = load i32, i32* @x.9
  %95 = load i32, i32* @y.10
  %96 = sub i32 %94, 79132948
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 79132948
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 -217184833, i32 -605447883
  store i32 %108, i32* %16
  br label %165

; <label>:109:                                    ; preds = %18
  %110 = load volatile i1, i1* %3
  %111 = select i1 %110, i32 -641980630, i32 -1832381861
  store i32 %111, i32* %16
  %112 = load volatile %"class.std::vector"*, %"class.std::vector"** %4
  store %"class.std::vector"* %112, %"class.std::vector"** %17
  br label %165

; <label>:113:                                    ; preds = %18
  %114 = load i32, i32* @x.9
  %115 = load i32, i32* @y.10
  %116 = sub i32 %114, 427823397
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 427823397
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 -487314127, i32 15768922
  store i32 %128, i32* %16
  br label %165

; <label>:129:                                    ; preds = %18
  %130 = load i32, i32* @x.9
  %131 = load i32, i32* @y.10
  %132 = add i32 %130, -2001770069
  %133 = sub i32 %132, 1
  %134 = sub i32 %133, -2001770069
  %135 = sub i32 %130, 1
  %136 = mul i32 %130, %134
  %137 = urem i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = icmp slt i32 %131, 10
  %140 = xor i1 %138, true
  %141 = xor i1 %139, true
  %142 = xor i1 false, true
  %143 = and i1 %140, false
  %144 = and i1 %138, %142
  %145 = and i1 %141, false
  %146 = and i1 %139, %142
  %147 = or i1 %143, %144
  %148 = or i1 %145, %146
  %149 = xor i1 %147, %148
  %150 = or i1 %140, %141
  %151 = xor i1 %150, true
  %152 = or i1 false, %142
  %153 = and i1 %151, %152
  %154 = or i1 %149, %153
  %155 = or i1 %138, %139
  %156 = select i1 %154, i32 -1801217447, i32 15768922
  store i32 %156, i32* %16
  br label %165

; <label>:157:                                    ; preds = %18
  ret void

; <label>:158:                                    ; preds = %18
  %159 = alloca i8*, align 8
  store i8* %0, i8** %159, align 8
  store i32 920483851, i32* %16
  br label %165

; <label>:160:                                    ; preds = %18
  %161 = load volatile %"class.std::vector"*, %"class.std::vector"** %2
  %162 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %161, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %162) #3
  %163 = icmp eq %"class.std::vector"* %162, getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i32 0, i32 0)
  store i32 -1838213270, i32* %16
  br label %165

; <label>:164:                                    ; preds = %18
  store i32 -487314127, i32* %16
  br label %165

; <label>:165:                                    ; preds = %164, %160, %158, %129, %113, %109, %88, %59, %58, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %9, i32* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %3, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %4, align 4
  %22 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %24) #11
  unreachable
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init.2() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.13
  %4 = load i32, i32* @y.14
  %5 = sub i32 %3, -761868758
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -761868758
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %2
  %12 = icmp slt i32 %4, 10
  store i1 %12, i1* %1
  %13 = alloca i32
  store i32 907815656, i32* %13
  %14 = alloca %"class.std::vector"*
  br label %15

; <label>:15:                                     ; preds = %0, %109
  %16 = load i32, i32* %13
  switch i32 %16, label %17 [
    i32 907815656, label %18
    i32 -263709413, label %26
    i32 -498013978, label %42
    i32 -572397345, label %43
    i32 -1551662880, label %48
    i32 1568456982, label %76
    i32 908746423, label %105
    i32 505909274, label %106
    i32 1277507406, label %107
  ]

; <label>:17:                                     ; preds = %15
  br label %109

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %2
  %20 = load volatile i1, i1* %1
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -263709413, i32 505909274
  store i32 %25, i32* %13
  br label %109

; <label>:26:                                     ; preds = %15
  %27 = load i32, i32* @x.13
  %28 = load i32, i32* @y.14
  %29 = sub i32 %27, 341282603
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 341282603
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -498013978, i32 505909274
  store i32 %41, i32* %13
  br label %109

; <label>:42:                                     ; preds = %15
  store i32 -572397345, i32* %13
  store %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i32 0, i32 0), %"class.std::vector"** %14
  br label %109

; <label>:43:                                     ; preds = %15
  %44 = load %"class.std::vector"*, %"class.std::vector"** %14
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %44) #3
  %45 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %44, i64 1
  %46 = icmp eq %"class.std::vector"* %45, getelementptr inbounds (%"class.std::vector", %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i32 0, i32 0), i64 100)
  %47 = select i1 %46, i32 -1551662880, i32 -572397345
  store i32 %47, i32* %13
  store %"class.std::vector"* %45, %"class.std::vector"** %14
  br label %109

; <label>:48:                                     ; preds = %15
  %49 = load i32, i32* @x.13
  %50 = load i32, i32* @y.14
  %51 = add i32 %49, -1660523858
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1660523858
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1568456982, i32 1277507406
  store i32 %75, i32* %13
  br label %109

; <label>:76:                                     ; preds = %15
  %77 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor.3, i8* null, i8* @__dso_handle) #3
  %78 = load i32, i32* @x.13
  %79 = load i32, i32* @y.14
  %80 = add i32 %78, 280333773
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 280333773
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 908746423, i32 1277507406
  store i32 %104, i32* %13
  br label %109

; <label>:105:                                    ; preds = %15
  ret void

; <label>:106:                                    ; preds = %15
  store i32 -263709413, i32* %13
  br label %109

; <label>:107:                                    ; preds = %15
  %108 = call i32 @__cxa_atexit(void (i8*)* @__cxx_global_array_dtor.3, i8* null, i8* @__dso_handle) #3
  store i32 1568456982, i32* %13
  br label %109

; <label>:109:                                    ; preds = %107, %106, %76, %48, %43, %42, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define internal void @__cxx_global_array_dtor.3(i8*) #0 section ".text.startup" {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.15
  %5 = load i32, i32* @y.16
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1513169417, i32* %13
  %14 = alloca %"class.std::vector"*
  br label %15

; <label>:15:                                     ; preds = %1, %64
  %16 = load i32, i32* %13
  switch i32 %16, label %17 [
    i32 -1513169417, label %18
    i32 -1576496675, label %38
    i32 1484905685, label %55
    i32 537813952, label %56
    i32 -1162257487, label %61
    i32 1468915758, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1576496675, i32 1468915758
  store i32 %37, i32* %13
  br label %64

; <label>:38:                                     ; preds = %15
  %39 = alloca i8*, align 8
  store i8* %0, i8** %39, align 8
  %40 = load i32, i32* @x.15
  %41 = load i32, i32* @y.16
  %42 = sub i32 %40, 308151034
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 308151034
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 1484905685, i32 1468915758
  store i32 %54, i32* %13
  br label %64

; <label>:55:                                     ; preds = %15
  store i32 537813952, i32* %13
  store %"class.std::vector"* getelementptr inbounds (%"class.std::vector", %"class.std::vector"* getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i32 0, i32 0), i64 100), %"class.std::vector"** %14
  br label %64

; <label>:56:                                     ; preds = %15
  %57 = load %"class.std::vector"*, %"class.std::vector"** %14
  %58 = getelementptr inbounds %"class.std::vector", %"class.std::vector"* %57, i64 -1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %58) #3
  %59 = icmp eq %"class.std::vector"* %58, getelementptr inbounds ([100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i32 0, i32 0)
  %60 = select i1 %59, i32 -1162257487, i32 537813952
  store i32 %60, i32* %13
  store %"class.std::vector"* %58, %"class.std::vector"** %14
  br label %64

; <label>:61:                                     ; preds = %15
  ret void

; <label>:62:                                     ; preds = %15
  %63 = alloca i8*, align 8
  store i8* %0, i8** %63, align 8
  store i32 -1576496675, i32* %13
  br label %64

; <label>:64:                                     ; preds = %62, %56, %55, %38, %18, %17
  br label %15
}

; Function Attrs: noinline norecurse uwtable
define i32 @main() #5 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca %"class.std::__cxx11::basic_string", align 8
  %4 = alloca i8*
  %5 = alloca i32
  %6 = alloca i32, align 4
  %7 = alloca %struct.Dinic, align 8
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %22 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) @h)
  %23 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %22, i32* dereferenceable(4) @w)
  store i32 0, i32* %2, align 4
  br label %24

; <label>:24:                                     ; preds = %619, %0
  %25 = load i32, i32* %2, align 4
  %26 = load i32, i32* @h, align 4
  %27 = sub i32 0, 1
  %28 = add i32 %26, %27
  %29 = sub nsw i32 %26, 1
  %30 = icmp sle i32 %25, %28
  br i1 %30, label %31, label %620

; <label>:31:                                     ; preds = %24
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  %32 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %3)
          to label %33 unwind label %292

; <label>:33:                                     ; preds = %31
  %34 = load i32, i32* @x.17
  %35 = load i32, i32* @y.18
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %1506

; <label>:59:                                     ; preds = %33, %1506
  store i32 0, i32* %6, align 4
  %60 = load i32, i32* @x.17
  %61 = load i32, i32* @y.18
  %62 = sub i32 %60, 892841593
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 892841593
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %1506

; <label>:86:                                     ; preds = %59
  br label %87

; <label>:87:                                     ; preds = %558, %86
  %88 = load i32, i32* @x.17
  %89 = load i32, i32* @y.18
  %90 = add i32 %88, 1034221352
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 1034221352
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %1507

; <label>:102:                                    ; preds = %87, %1507
  %103 = load i32, i32* %6, align 4
  %104 = load i32, i32* @w, align 4
  %105 = add i32 %104, 758516936
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, 758516936
  %108 = sub nsw i32 %104, 1
  %109 = icmp sle i32 %103, %107
  %110 = load i32, i32* @x.17
  %111 = load i32, i32* @y.18
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %1507

; <label>:123:                                    ; preds = %102
  br i1 %109, label %124, label %559

; <label>:124:                                    ; preds = %123
  %125 = load i32, i32* @x.17
  %126 = load i32, i32* @y.18
  %127 = add i32 %125, 1908140160
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, 1908140160
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %1548

; <label>:151:                                    ; preds = %124, %1548
  %152 = load i32, i32* %6, align 4
  %153 = sext i32 %152 to i64
  %154 = load i32, i32* @x.17
  %155 = load i32, i32* @y.18
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  br i1 %177, label %179, label %1548

; <label>:179:                                    ; preds = %151
  %180 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %3, i64 %153)
          to label %181 unwind label %292

; <label>:181:                                    ; preds = %179
  %182 = load i32, i32* @x.17
  %183 = load i32, i32* @y.18
  %184 = add i32 %182, -1767910346
  %185 = sub i32 %184, 1
  %186 = sub i32 %185, -1767910346
  %187 = sub i32 %182, 1
  %188 = mul i32 %182, %186
  %189 = urem i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = icmp slt i32 %183, 10
  %192 = xor i1 %190, true
  %193 = xor i1 %191, true
  %194 = xor i1 false, true
  %195 = and i1 %192, false
  %196 = and i1 %190, %194
  %197 = and i1 %193, false
  %198 = and i1 %191, %194
  %199 = or i1 %195, %196
  %200 = or i1 %197, %198
  %201 = xor i1 %199, %200
  %202 = or i1 %192, %193
  %203 = xor i1 %202, true
  %204 = or i1 false, %194
  %205 = and i1 %203, %204
  %206 = or i1 %201, %205
  %207 = or i1 %190, %191
  br i1 %206, label %208, label %1551

; <label>:208:                                    ; preds = %181, %1551
  %209 = load i8, i8* %180, align 1
  %210 = sext i8 %209 to i32
  %211 = icmp eq i32 %210, 83
  %212 = load i32, i32* @x.17
  %213 = load i32, i32* @y.18
  %214 = sub i32 %212, -2115908457
  %215 = sub i32 %214, 1
  %216 = add i32 %215, -2115908457
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 true, true
  %225 = and i1 %222, true
  %226 = and i1 %220, %224
  %227 = and i1 %223, true
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 true, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %1551

; <label>:238:                                    ; preds = %208
  br i1 %211, label %239, label %296

; <label>:239:                                    ; preds = %238
  %240 = load i32, i32* %2, align 4
  store i32 %240, i32* @sx, align 4
  %241 = load i32, i32* %6, align 4
  store i32 %241, i32* @sy, align 4
  %242 = load i32, i32* %2, align 4
  %243 = sext i32 %242 to i64
  %244 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %243
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %244, i32* dereferenceable(4) %6)
          to label %245 unwind label %292

; <label>:245:                                    ; preds = %239
  %246 = load i32, i32* @x.17
  %247 = load i32, i32* @y.18
  %248 = add i32 %246, 187616255
  %249 = sub i32 %248, 1
  %250 = sub i32 %249, 187616255
  %251 = sub i32 %246, 1
  %252 = mul i32 %246, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %247, 10
  %256 = xor i1 %254, true
  %257 = xor i1 %255, true
  %258 = xor i1 true, true
  %259 = and i1 %256, true
  %260 = and i1 %254, %258
  %261 = and i1 %257, true
  %262 = and i1 %255, %258
  %263 = or i1 %259, %260
  %264 = or i1 %261, %262
  %265 = xor i1 %263, %264
  %266 = or i1 %256, %257
  %267 = xor i1 %266, true
  %268 = or i1 true, %258
  %269 = and i1 %267, %268
  %270 = or i1 %265, %269
  %271 = or i1 %254, %255
  br i1 %270, label %272, label %1555

; <label>:272:                                    ; preds = %245, %1555
  %273 = load i32, i32* %6, align 4
  %274 = sext i32 %273 to i64
  %275 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %274
  %276 = load i32, i32* @x.17
  %277 = load i32, i32* @y.18
  %278 = sub i32 %276, 1968011881
  %279 = sub i32 %278, 1
  %280 = add i32 %279, 1968011881
  %281 = sub i32 %276, 1
  %282 = mul i32 %276, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %277, 10
  %286 = and i1 %284, %285
  %287 = xor i1 %284, %285
  %288 = or i1 %286, %287
  %289 = or i1 %284, %285
  br i1 %288, label %290, label %1555

; <label>:290:                                    ; preds = %272
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %275, i32* dereferenceable(4) %2)
          to label %291 unwind label %292

; <label>:291:                                    ; preds = %290
  br label %296

; <label>:292:                                    ; preds = %493, %492, %398, %351, %345, %296, %290, %239, %179, %31
  %293 = landingpad { i8*, i32 }
          cleanup
  %294 = extractvalue { i8*, i32 } %293, 0
  store i8* %294, i8** %4, align 8
  %295 = extractvalue { i8*, i32 } %293, 1
  store i32 %295, i32* %5, align 4
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  br label %1501

; <label>:296:                                    ; preds = %291, %238
  %297 = load i32, i32* %6, align 4
  %298 = sext i32 %297 to i64
  %299 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %3, i64 %298)
          to label %300 unwind label %292

; <label>:300:                                    ; preds = %296
  %301 = load i32, i32* @x.17
  %302 = load i32, i32* @y.18
  %303 = sub i32 %301, 221355437
  %304 = sub i32 %303, 1
  %305 = add i32 %304, 221355437
  %306 = sub i32 %301, 1
  %307 = mul i32 %301, %305
  %308 = urem i32 %307, 2
  %309 = icmp eq i32 %308, 0
  %310 = icmp slt i32 %302, 10
  %311 = xor i1 %309, true
  %312 = xor i1 %310, true
  %313 = xor i1 false, true
  %314 = and i1 %311, false
  %315 = and i1 %309, %313
  %316 = and i1 %312, false
  %317 = and i1 %310, %313
  %318 = or i1 %314, %315
  %319 = or i1 %316, %317
  %320 = xor i1 %318, %319
  %321 = or i1 %311, %312
  %322 = xor i1 %321, true
  %323 = or i1 false, %313
  %324 = and i1 %322, %323
  %325 = or i1 %320, %324
  %326 = or i1 %309, %310
  br i1 %325, label %327, label %1559

; <label>:327:                                    ; preds = %300, %1559
  %328 = load i8, i8* %299, align 1
  %329 = sext i8 %328 to i32
  %330 = icmp eq i32 %329, 84
  %331 = load i32, i32* @x.17
  %332 = load i32, i32* @y.18
  %333 = sub i32 0, 1
  %334 = add i32 %331, %333
  %335 = sub i32 %331, 1
  %336 = mul i32 %331, %334
  %337 = urem i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = icmp slt i32 %332, 10
  %340 = and i1 %338, %339
  %341 = xor i1 %338, %339
  %342 = or i1 %340, %341
  %343 = or i1 %338, %339
  br i1 %342, label %344, label %1559

; <label>:344:                                    ; preds = %327
  br i1 %330, label %345, label %398

; <label>:345:                                    ; preds = %344
  %346 = load i32, i32* %2, align 4
  store i32 %346, i32* @tx, align 4
  %347 = load i32, i32* %6, align 4
  store i32 %347, i32* @ty, align 4
  %348 = load i32, i32* %2, align 4
  %349 = sext i32 %348 to i64
  %350 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %349
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %350, i32* dereferenceable(4) %6)
          to label %351 unwind label %292

; <label>:351:                                    ; preds = %345
  %352 = load i32, i32* %6, align 4
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %353
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %354, i32* dereferenceable(4) %2)
          to label %355 unwind label %292

; <label>:355:                                    ; preds = %351
  %356 = load i32, i32* @x.17
  %357 = load i32, i32* @y.18
  %358 = add i32 %356, 1499150832
  %359 = sub i32 %358, 1
  %360 = sub i32 %359, 1499150832
  %361 = sub i32 %356, 1
  %362 = mul i32 %356, %360
  %363 = urem i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = icmp slt i32 %357, 10
  %366 = and i1 %364, %365
  %367 = xor i1 %364, %365
  %368 = or i1 %366, %367
  %369 = or i1 %364, %365
  br i1 %368, label %370, label %1563

; <label>:370:                                    ; preds = %355, %1563
  %371 = load i32, i32* @x.17
  %372 = load i32, i32* @y.18
  %373 = add i32 %371, 1664835061
  %374 = sub i32 %373, 1
  %375 = sub i32 %374, 1664835061
  %376 = sub i32 %371, 1
  %377 = mul i32 %371, %375
  %378 = urem i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = icmp slt i32 %372, 10
  %381 = xor i1 %379, true
  %382 = xor i1 %380, true
  %383 = xor i1 true, true
  %384 = and i1 %381, true
  %385 = and i1 %379, %383
  %386 = and i1 %382, true
  %387 = and i1 %380, %383
  %388 = or i1 %384, %385
  %389 = or i1 %386, %387
  %390 = xor i1 %388, %389
  %391 = or i1 %381, %382
  %392 = xor i1 %391, true
  %393 = or i1 true, %383
  %394 = and i1 %392, %393
  %395 = or i1 %390, %394
  %396 = or i1 %379, %380
  br i1 %395, label %397, label %1563

; <label>:397:                                    ; preds = %370
  br label %398

; <label>:398:                                    ; preds = %397, %344
  %399 = load i32, i32* %6, align 4
  %400 = sext i32 %399 to i64
  %401 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %3, i64 %400)
          to label %402 unwind label %292

; <label>:402:                                    ; preds = %398
  %403 = load i32, i32* @x.17
  %404 = load i32, i32* @y.18
  %405 = sub i32 %403, -1764205848
  %406 = sub i32 %405, 1
  %407 = add i32 %406, -1764205848
  %408 = sub i32 %403, 1
  %409 = mul i32 %403, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %404, 10
  %413 = xor i1 %411, true
  %414 = xor i1 %412, true
  %415 = xor i1 false, true
  %416 = and i1 %413, false
  %417 = and i1 %411, %415
  %418 = and i1 %414, false
  %419 = and i1 %412, %415
  %420 = or i1 %416, %417
  %421 = or i1 %418, %419
  %422 = xor i1 %420, %421
  %423 = or i1 %413, %414
  %424 = xor i1 %423, true
  %425 = or i1 false, %415
  %426 = and i1 %424, %425
  %427 = or i1 %422, %426
  %428 = or i1 %411, %412
  br i1 %427, label %429, label %1564

; <label>:429:                                    ; preds = %402, %1564
  %430 = load i8, i8* %401, align 1
  %431 = sext i8 %430 to i32
  %432 = icmp eq i32 %431, 111
  %433 = load i32, i32* @x.17
  %434 = load i32, i32* @y.18
  %435 = sub i32 0, 1
  %436 = add i32 %433, %435
  %437 = sub i32 %433, 1
  %438 = mul i32 %433, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %434, 10
  %442 = and i1 %440, %441
  %443 = xor i1 %440, %441
  %444 = or i1 %442, %443
  %445 = or i1 %440, %441
  br i1 %444, label %446, label %1564

; <label>:446:                                    ; preds = %429
  br i1 %432, label %447, label %498

; <label>:447:                                    ; preds = %446
  %448 = load i32, i32* @x.17
  %449 = load i32, i32* @y.18
  %450 = sub i32 %448, 2036597201
  %451 = sub i32 %450, 1
  %452 = add i32 %451, 2036597201
  %453 = sub i32 %448, 1
  %454 = mul i32 %448, %452
  %455 = urem i32 %454, 2
  %456 = icmp eq i32 %455, 0
  %457 = icmp slt i32 %449, 10
  %458 = and i1 %456, %457
  %459 = xor i1 %456, %457
  %460 = or i1 %458, %459
  %461 = or i1 %456, %457
  br i1 %460, label %462, label %1568

; <label>:462:                                    ; preds = %447, %1568
  %463 = load i32, i32* %2, align 4
  %464 = sext i32 %463 to i64
  %465 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %464
  %466 = load i32, i32* @x.17
  %467 = load i32, i32* @y.18
  %468 = add i32 %466, 749195698
  %469 = sub i32 %468, 1
  %470 = sub i32 %469, 749195698
  %471 = sub i32 %466, 1
  %472 = mul i32 %466, %470
  %473 = urem i32 %472, 2
  %474 = icmp eq i32 %473, 0
  %475 = icmp slt i32 %467, 10
  %476 = xor i1 %474, true
  %477 = xor i1 %475, true
  %478 = xor i1 true, true
  %479 = and i1 %476, true
  %480 = and i1 %474, %478
  %481 = and i1 %477, true
  %482 = and i1 %475, %478
  %483 = or i1 %479, %480
  %484 = or i1 %481, %482
  %485 = xor i1 %483, %484
  %486 = or i1 %476, %477
  %487 = xor i1 %486, true
  %488 = or i1 true, %478
  %489 = and i1 %487, %488
  %490 = or i1 %485, %489
  %491 = or i1 %474, %475
  br i1 %490, label %492, label %1568

; <label>:492:                                    ; preds = %462
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %465, i32* dereferenceable(4) %6)
          to label %493 unwind label %292

; <label>:493:                                    ; preds = %492
  %494 = load i32, i32* %6, align 4
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %495
  invoke void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"* %496, i32* dereferenceable(4) %2)
          to label %497 unwind label %292

; <label>:497:                                    ; preds = %493
  br label %498

; <label>:498:                                    ; preds = %497, %446
  br label %499

; <label>:499:                                    ; preds = %498
  %500 = load i32, i32* @x.17
  %501 = load i32, i32* @y.18
  %502 = sub i32 0, 1
  %503 = add i32 %500, %502
  %504 = sub i32 %500, 1
  %505 = mul i32 %500, %503
  %506 = urem i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = icmp slt i32 %501, 10
  %509 = xor i1 %507, true
  %510 = xor i1 %508, true
  %511 = xor i1 false, true
  %512 = and i1 %509, false
  %513 = and i1 %507, %511
  %514 = and i1 %510, false
  %515 = and i1 %508, %511
  %516 = or i1 %512, %513
  %517 = or i1 %514, %515
  %518 = xor i1 %516, %517
  %519 = or i1 %509, %510
  %520 = xor i1 %519, true
  %521 = or i1 false, %511
  %522 = and i1 %520, %521
  %523 = or i1 %518, %522
  %524 = or i1 %507, %508
  br i1 %523, label %525, label %1572

; <label>:525:                                    ; preds = %499, %1572
  %526 = load i32, i32* %6, align 4
  %527 = sub i32 0, %526
  %528 = sub i32 0, 1
  %529 = add i32 %527, %528
  %530 = sub i32 0, %529
  %531 = add nsw i32 %526, 1
  store i32 %530, i32* %6, align 4
  %532 = load i32, i32* @x.17
  %533 = load i32, i32* @y.18
  %534 = sub i32 %532, -1857809709
  %535 = sub i32 %534, 1
  %536 = add i32 %535, -1857809709
  %537 = sub i32 %532, 1
  %538 = mul i32 %532, %536
  %539 = urem i32 %538, 2
  %540 = icmp eq i32 %539, 0
  %541 = icmp slt i32 %533, 10
  %542 = xor i1 %540, true
  %543 = xor i1 %541, true
  %544 = xor i1 false, true
  %545 = and i1 %542, false
  %546 = and i1 %540, %544
  %547 = and i1 %543, false
  %548 = and i1 %541, %544
  %549 = or i1 %545, %546
  %550 = or i1 %547, %548
  %551 = xor i1 %549, %550
  %552 = or i1 %542, %543
  %553 = xor i1 %552, true
  %554 = or i1 false, %544
  %555 = and i1 %553, %554
  %556 = or i1 %551, %555
  %557 = or i1 %540, %541
  br i1 %556, label %558, label %1572

; <label>:558:                                    ; preds = %525
  br label %87

; <label>:559:                                    ; preds = %123
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  br label %560

; <label>:560:                                    ; preds = %559
  %561 = load i32, i32* @x.17
  %562 = load i32, i32* @y.18
  %563 = add i32 %561, 481003194
  %564 = sub i32 %563, 1
  %565 = sub i32 %564, 481003194
  %566 = sub i32 %561, 1
  %567 = mul i32 %561, %565
  %568 = urem i32 %567, 2
  %569 = icmp eq i32 %568, 0
  %570 = icmp slt i32 %562, 10
  %571 = xor i1 %569, true
  %572 = xor i1 %570, true
  %573 = xor i1 false, true
  %574 = and i1 %571, false
  %575 = and i1 %569, %573
  %576 = and i1 %572, false
  %577 = and i1 %570, %573
  %578 = or i1 %574, %575
  %579 = or i1 %576, %577
  %580 = xor i1 %578, %579
  %581 = or i1 %571, %572
  %582 = xor i1 %581, true
  %583 = or i1 false, %573
  %584 = and i1 %582, %583
  %585 = or i1 %580, %584
  %586 = or i1 %569, %570
  br i1 %585, label %587, label %1589

; <label>:587:                                    ; preds = %560, %1589
  %588 = load i32, i32* %2, align 4
  %589 = add i32 %588, 109755985
  %590 = add i32 %589, 1
  %591 = sub i32 %590, 109755985
  %592 = add nsw i32 %588, 1
  store i32 %591, i32* %2, align 4
  %593 = load i32, i32* @x.17
  %594 = load i32, i32* @y.18
  %595 = add i32 %593, 1945105853
  %596 = sub i32 %595, 1
  %597 = sub i32 %596, 1945105853
  %598 = sub i32 %593, 1
  %599 = mul i32 %593, %597
  %600 = urem i32 %599, 2
  %601 = icmp eq i32 %600, 0
  %602 = icmp slt i32 %594, 10
  %603 = xor i1 %601, true
  %604 = xor i1 %602, true
  %605 = xor i1 false, true
  %606 = and i1 %603, false
  %607 = and i1 %601, %605
  %608 = and i1 %604, false
  %609 = and i1 %602, %605
  %610 = or i1 %606, %607
  %611 = or i1 %608, %609
  %612 = xor i1 %610, %611
  %613 = or i1 %603, %604
  %614 = xor i1 %613, true
  %615 = or i1 false, %605
  %616 = and i1 %614, %615
  %617 = or i1 %612, %616
  %618 = or i1 %601, %602
  br i1 %617, label %619, label %1589

; <label>:619:                                    ; preds = %587
  br label %24

; <label>:620:                                    ; preds = %24
  %621 = load i32, i32* @sx, align 4
  %622 = load i32, i32* @tx, align 4
  %623 = icmp eq i32 %621, %622
  br i1 %623, label %670, label %624

; <label>:624:                                    ; preds = %620
  %625 = load i32, i32* @x.17
  %626 = load i32, i32* @y.18
  %627 = add i32 %625, -2118967288
  %628 = sub i32 %627, 1
  %629 = sub i32 %628, -2118967288
  %630 = sub i32 %625, 1
  %631 = mul i32 %625, %629
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %626, 10
  %635 = xor i1 %633, true
  %636 = xor i1 %634, true
  %637 = xor i1 true, true
  %638 = and i1 %635, true
  %639 = and i1 %633, %637
  %640 = and i1 %636, true
  %641 = and i1 %634, %637
  %642 = or i1 %638, %639
  %643 = or i1 %640, %641
  %644 = xor i1 %642, %643
  %645 = or i1 %635, %636
  %646 = xor i1 %645, true
  %647 = or i1 true, %637
  %648 = and i1 %646, %647
  %649 = or i1 %644, %648
  %650 = or i1 %633, %634
  br i1 %649, label %651, label %1617

; <label>:651:                                    ; preds = %624, %1617
  %652 = load i32, i32* @sy, align 4
  %653 = load i32, i32* @ty, align 4
  %654 = icmp eq i32 %652, %653
  %655 = load i32, i32* @x.17
  %656 = load i32, i32* @y.18
  %657 = add i32 %655, -2007429906
  %658 = sub i32 %657, 1
  %659 = sub i32 %658, -2007429906
  %660 = sub i32 %655, 1
  %661 = mul i32 %655, %659
  %662 = urem i32 %661, 2
  %663 = icmp eq i32 %662, 0
  %664 = icmp slt i32 %656, 10
  %665 = and i1 %663, %664
  %666 = xor i1 %663, %664
  %667 = or i1 %665, %666
  %668 = or i1 %663, %664
  br i1 %667, label %669, label %1617

; <label>:669:                                    ; preds = %651
  br i1 %654, label %670, label %673

; <label>:670:                                    ; preds = %669, %620
  %671 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 -1)
  %672 = call dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %671, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
  store i32 0, i32* %1, align 4
  br label %1499

; <label>:673:                                    ; preds = %669
  %674 = load i32, i32* @h, align 4
  %675 = load i32, i32* @w, align 4
  %676 = mul nsw i32 %674, %675
  %677 = mul nsw i32 %676, 2
  %678 = add i32 %677, 1695016982
  %679 = add i32 %678, 10
  %680 = sub i32 %679, 1695016982
  %681 = add nsw i32 %677, 10
  call void @_ZN5DinicC2Ei(%struct.Dinic* %7, i32 %680)
  %682 = load i32, i32* @h, align 4
  %683 = load i32, i32* @w, align 4
  %684 = mul nsw i32 %682, %683
  store i32 %684, i32* %8, align 4
  store i32 0, i32* %9, align 4
  br label %685

; <label>:685:                                    ; preds = %699, %673
  %686 = load i32, i32* %9, align 4
  %687 = load i32, i32* %8, align 4
  %688 = icmp slt i32 %686, %687
  br i1 %688, label %689, label %739

; <label>:689:                                    ; preds = %685
  %690 = load i32, i32* %9, align 4
  %691 = load i32, i32* %9, align 4
  %692 = load i32, i32* %8, align 4
  %693 = sub i32 0, %691
  %694 = sub i32 0, %692
  %695 = add i32 %693, %694
  %696 = sub i32 0, %695
  %697 = add nsw i32 %691, %692
  invoke void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic* %7, i32 %690, i32 %696, i32 1, i32 0)
          to label %698 unwind label %705

; <label>:698:                                    ; preds = %689
  br label %699

; <label>:699:                                    ; preds = %698
  %700 = load i32, i32* %9, align 4
  %701 = add i32 %700, -1344044029
  %702 = add i32 %701, 1
  %703 = sub i32 %702, -1344044029
  %704 = add nsw i32 %700, 1
  store i32 %703, i32* %9, align 4
  br label %685

; <label>:705:                                    ; preds = %1442, %1398, %1342, %1239, %1156, %895, %859, %689
  %706 = load i32, i32* @x.17
  %707 = load i32, i32* @y.18
  %708 = sub i32 %706, 713365978
  %709 = sub i32 %708, 1
  %710 = add i32 %709, 713365978
  %711 = sub i32 %706, 1
  %712 = mul i32 %706, %710
  %713 = urem i32 %712, 2
  %714 = icmp eq i32 %713, 0
  %715 = icmp slt i32 %707, 10
  %716 = and i1 %714, %715
  %717 = xor i1 %714, %715
  %718 = or i1 %716, %717
  %719 = or i1 %714, %715
  br i1 %718, label %720, label %1621

; <label>:720:                                    ; preds = %705, %1621
  %721 = landingpad { i8*, i32 }
          cleanup
  %722 = extractvalue { i8*, i32 } %721, 0
  store i8* %722, i8** %4, align 8
  %723 = extractvalue { i8*, i32 } %721, 1
  store i32 %723, i32* %5, align 4
  call void @_ZN5DinicD2Ev(%struct.Dinic* %7) #3
  %724 = load i32, i32* @x.17
  %725 = load i32, i32* @y.18
  %726 = add i32 %724, -83526453
  %727 = sub i32 %726, 1
  %728 = sub i32 %727, -83526453
  %729 = sub i32 %724, 1
  %730 = mul i32 %724, %728
  %731 = urem i32 %730, 2
  %732 = icmp eq i32 %731, 0
  %733 = icmp slt i32 %725, 10
  %734 = and i1 %732, %733
  %735 = xor i1 %732, %733
  %736 = or i1 %734, %735
  %737 = or i1 %732, %733
  br i1 %736, label %738, label %1621

; <label>:738:                                    ; preds = %720
  br label %1501

; <label>:739:                                    ; preds = %685
  %740 = load i32, i32* @x.17
  %741 = load i32, i32* @y.18
  %742 = add i32 %740, 1965350401
  %743 = sub i32 %742, 1
  %744 = sub i32 %743, 1965350401
  %745 = sub i32 %740, 1
  %746 = mul i32 %740, %744
  %747 = urem i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = icmp slt i32 %741, 10
  %750 = xor i1 %748, true
  %751 = xor i1 %749, true
  %752 = xor i1 false, true
  %753 = and i1 %750, false
  %754 = and i1 %748, %752
  %755 = and i1 %751, false
  %756 = and i1 %749, %752
  %757 = or i1 %753, %754
  %758 = or i1 %755, %756
  %759 = xor i1 %757, %758
  %760 = or i1 %750, %751
  %761 = xor i1 %760, true
  %762 = or i1 false, %752
  %763 = and i1 %761, %762
  %764 = or i1 %759, %763
  %765 = or i1 %748, %749
  br i1 %764, label %766, label %1625

; <label>:766:                                    ; preds = %739, %1625
  store i32 0, i32* %10, align 4
  %767 = load i32, i32* @x.17
  %768 = load i32, i32* @y.18
  %769 = sub i32 0, 1
  %770 = add i32 %767, %769
  %771 = sub i32 %767, 1
  %772 = mul i32 %767, %770
  %773 = urem i32 %772, 2
  %774 = icmp eq i32 %773, 0
  %775 = icmp slt i32 %768, 10
  %776 = xor i1 %774, true
  %777 = xor i1 %775, true
  %778 = xor i1 false, true
  %779 = and i1 %776, false
  %780 = and i1 %774, %778
  %781 = and i1 %777, false
  %782 = and i1 %775, %778
  %783 = or i1 %779, %780
  %784 = or i1 %781, %782
  %785 = xor i1 %783, %784
  %786 = or i1 %776, %777
  %787 = xor i1 %786, true
  %788 = or i1 false, %778
  %789 = and i1 %787, %788
  %790 = or i1 %785, %789
  %791 = or i1 %774, %775
  br i1 %790, label %792, label %1625

; <label>:792:                                    ; preds = %766
  br label %793

; <label>:793:                                    ; preds = %1051, %792
  %794 = load i32, i32* %10, align 4
  %795 = load i32, i32* @h, align 4
  %796 = icmp slt i32 %794, %795
  br i1 %796, label %797, label %1057

; <label>:797:                                    ; preds = %793
  store i32 0, i32* %11, align 4
  br label %798

; <label>:798:                                    ; preds = %1008, %797
  %799 = load i32, i32* @x.17
  %800 = load i32, i32* @y.18
  %801 = sub i32 0, 1
  %802 = add i32 %799, %801
  %803 = sub i32 %799, 1
  %804 = mul i32 %799, %802
  %805 = urem i32 %804, 2
  %806 = icmp eq i32 %805, 0
  %807 = icmp slt i32 %800, 10
  %808 = and i1 %806, %807
  %809 = xor i1 %806, %807
  %810 = or i1 %808, %809
  %811 = or i1 %806, %807
  br i1 %810, label %812, label %1626

; <label>:812:                                    ; preds = %798, %1626
  %813 = load i32, i32* %11, align 4
  %814 = sext i32 %813 to i64
  %815 = load i32, i32* %10, align 4
  %816 = sext i32 %815 to i64
  %817 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %816
  %818 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %817) #3
  %819 = icmp ult i64 %814, %818
  %820 = load i32, i32* @x.17
  %821 = load i32, i32* @y.18
  %822 = sub i32 0, 1
  %823 = add i32 %820, %822
  %824 = sub i32 %820, 1
  %825 = mul i32 %820, %823
  %826 = urem i32 %825, 2
  %827 = icmp eq i32 %826, 0
  %828 = icmp slt i32 %821, 10
  %829 = xor i1 %827, true
  %830 = xor i1 %828, true
  %831 = xor i1 false, true
  %832 = and i1 %829, false
  %833 = and i1 %827, %831
  %834 = and i1 %830, false
  %835 = and i1 %828, %831
  %836 = or i1 %832, %833
  %837 = or i1 %834, %835
  %838 = xor i1 %836, %837
  %839 = or i1 %829, %830
  %840 = xor i1 %839, true
  %841 = or i1 false, %831
  %842 = and i1 %840, %841
  %843 = or i1 %838, %842
  %844 = or i1 %827, %828
  br i1 %843, label %845, label %1626

; <label>:845:                                    ; preds = %812
  br i1 %819, label %846, label %1009

; <label>:846:                                    ; preds = %845
  %847 = load i32, i32* %11, align 4
  %848 = sub i32 0, 1
  %849 = sub i32 %847, %848
  %850 = add nsw i32 %847, 1
  store i32 %849, i32* %12, align 4
  br label %851

; <label>:851:                                    ; preds = %944, %846
  %852 = load i32, i32* %12, align 4
  %853 = sext i32 %852 to i64
  %854 = load i32, i32* %10, align 4
  %855 = sext i32 %854 to i64
  %856 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %855
  %857 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %856) #3
  %858 = icmp ult i64 %853, %857
  br i1 %858, label %859, label %950

; <label>:859:                                    ; preds = %851
  %860 = load i32, i32* %10, align 4
  %861 = load i32, i32* @w, align 4
  %862 = mul nsw i32 %860, %861
  %863 = load i32, i32* %10, align 4
  %864 = sext i32 %863 to i64
  %865 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %864
  %866 = load i32, i32* %11, align 4
  %867 = sext i32 %866 to i64
  %868 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %865, i64 %867) #3
  %869 = load i32, i32* %868, align 4
  %870 = sub i32 0, %862
  %871 = sub i32 0, %869
  %872 = add i32 %870, %871
  %873 = sub i32 0, %872
  %874 = add nsw i32 %862, %869
  store i32 %873, i32* %13, align 4
  %875 = load i32, i32* %10, align 4
  %876 = load i32, i32* @w, align 4
  %877 = mul nsw i32 %875, %876
  %878 = load i32, i32* %10, align 4
  %879 = sext i32 %878 to i64
  %880 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %879
  %881 = load i32, i32* %12, align 4
  %882 = sext i32 %881 to i64
  %883 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %880, i64 %882) #3
  %884 = load i32, i32* %883, align 4
  %885 = sub i32 %877, 1924372543
  %886 = add i32 %885, %884
  %887 = add i32 %886, 1924372543
  %888 = add nsw i32 %877, %884
  store i32 %887, i32* %14, align 4
  %889 = load i32, i32* %13, align 4
  %890 = load i32, i32* %8, align 4
  %891 = sub i32 0, %890
  %892 = sub i32 %889, %891
  %893 = add nsw i32 %889, %890
  %894 = load i32, i32* %14, align 4
  invoke void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic* %7, i32 %892, i32 %894, i32 1000, i32 0)
          to label %895 unwind label %705

; <label>:895:                                    ; preds = %859
  %896 = load i32, i32* %14, align 4
  %897 = load i32, i32* %8, align 4
  %898 = sub i32 0, %897
  %899 = sub i32 %896, %898
  %900 = add nsw i32 %896, %897
  %901 = load i32, i32* %13, align 4
  invoke void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic* %7, i32 %899, i32 %901, i32 1000, i32 0)
          to label %902 unwind label %705

; <label>:902:                                    ; preds = %895
  %903 = load i32, i32* @x.17
  %904 = load i32, i32* @y.18
  %905 = sub i32 0, 1
  %906 = add i32 %903, %905
  %907 = sub i32 %903, 1
  %908 = mul i32 %903, %906
  %909 = urem i32 %908, 2
  %910 = icmp eq i32 %909, 0
  %911 = icmp slt i32 %904, 10
  %912 = and i1 %910, %911
  %913 = xor i1 %910, %911
  %914 = or i1 %912, %913
  %915 = or i1 %910, %911
  br i1 %914, label %916, label %1634

; <label>:916:                                    ; preds = %902, %1634
  %917 = load i32, i32* @x.17
  %918 = load i32, i32* @y.18
  %919 = sub i32 %917, 2006893270
  %920 = sub i32 %919, 1
  %921 = add i32 %920, 2006893270
  %922 = sub i32 %917, 1
  %923 = mul i32 %917, %921
  %924 = urem i32 %923, 2
  %925 = icmp eq i32 %924, 0
  %926 = icmp slt i32 %918, 10
  %927 = xor i1 %925, true
  %928 = xor i1 %926, true
  %929 = xor i1 false, true
  %930 = and i1 %927, false
  %931 = and i1 %925, %929
  %932 = and i1 %928, false
  %933 = and i1 %926, %929
  %934 = or i1 %930, %931
  %935 = or i1 %932, %933
  %936 = xor i1 %934, %935
  %937 = or i1 %927, %928
  %938 = xor i1 %937, true
  %939 = or i1 false, %929
  %940 = and i1 %938, %939
  %941 = or i1 %936, %940
  %942 = or i1 %925, %926
  br i1 %941, label %943, label %1634

; <label>:943:                                    ; preds = %916
  br label %944

; <label>:944:                                    ; preds = %943
  %945 = load i32, i32* %12, align 4
  %946 = sub i32 %945, 1937263792
  %947 = add i32 %946, 1
  %948 = add i32 %947, 1937263792
  %949 = add nsw i32 %945, 1
  store i32 %948, i32* %12, align 4
  br label %851

; <label>:950:                                    ; preds = %851
  br label %951

; <label>:951:                                    ; preds = %950
  %952 = load i32, i32* @x.17
  %953 = load i32, i32* @y.18
  %954 = sub i32 0, 1
  %955 = add i32 %952, %954
  %956 = sub i32 %952, 1
  %957 = mul i32 %952, %955
  %958 = urem i32 %957, 2
  %959 = icmp eq i32 %958, 0
  %960 = icmp slt i32 %953, 10
  %961 = xor i1 %959, true
  %962 = xor i1 %960, true
  %963 = xor i1 false, true
  %964 = and i1 %961, false
  %965 = and i1 %959, %963
  %966 = and i1 %962, false
  %967 = and i1 %960, %963
  %968 = or i1 %964, %965
  %969 = or i1 %966, %967
  %970 = xor i1 %968, %969
  %971 = or i1 %961, %962
  %972 = xor i1 %971, true
  %973 = or i1 false, %963
  %974 = and i1 %972, %973
  %975 = or i1 %970, %974
  %976 = or i1 %959, %960
  br i1 %975, label %977, label %1635

; <label>:977:                                    ; preds = %951, %1635
  %978 = load i32, i32* %11, align 4
  %979 = sub i32 0, 1
  %980 = sub i32 %978, %979
  %981 = add nsw i32 %978, 1
  store i32 %980, i32* %11, align 4
  %982 = load i32, i32* @x.17
  %983 = load i32, i32* @y.18
  %984 = sub i32 %982, 2045787919
  %985 = sub i32 %984, 1
  %986 = add i32 %985, 2045787919
  %987 = sub i32 %982, 1
  %988 = mul i32 %982, %986
  %989 = urem i32 %988, 2
  %990 = icmp eq i32 %989, 0
  %991 = icmp slt i32 %983, 10
  %992 = xor i1 %990, true
  %993 = xor i1 %991, true
  %994 = xor i1 true, true
  %995 = and i1 %992, true
  %996 = and i1 %990, %994
  %997 = and i1 %993, true
  %998 = and i1 %991, %994
  %999 = or i1 %995, %996
  %1000 = or i1 %997, %998
  %1001 = xor i1 %999, %1000
  %1002 = or i1 %992, %993
  %1003 = xor i1 %1002, true
  %1004 = or i1 true, %994
  %1005 = and i1 %1003, %1004
  %1006 = or i1 %1001, %1005
  %1007 = or i1 %990, %991
  br i1 %1006, label %1008, label %1635

; <label>:1008:                                   ; preds = %977
  br label %798

; <label>:1009:                                   ; preds = %845
  %1010 = load i32, i32* @x.17
  %1011 = load i32, i32* @y.18
  %1012 = sub i32 0, 1
  %1013 = add i32 %1010, %1012
  %1014 = sub i32 %1010, 1
  %1015 = mul i32 %1010, %1013
  %1016 = urem i32 %1015, 2
  %1017 = icmp eq i32 %1016, 0
  %1018 = icmp slt i32 %1011, 10
  %1019 = xor i1 %1017, true
  %1020 = xor i1 %1018, true
  %1021 = xor i1 true, true
  %1022 = and i1 %1019, true
  %1023 = and i1 %1017, %1021
  %1024 = and i1 %1020, true
  %1025 = and i1 %1018, %1021
  %1026 = or i1 %1022, %1023
  %1027 = or i1 %1024, %1025
  %1028 = xor i1 %1026, %1027
  %1029 = or i1 %1019, %1020
  %1030 = xor i1 %1029, true
  %1031 = or i1 true, %1021
  %1032 = and i1 %1030, %1031
  %1033 = or i1 %1028, %1032
  %1034 = or i1 %1017, %1018
  br i1 %1033, label %1035, label %1640

; <label>:1035:                                   ; preds = %1009, %1640
  %1036 = load i32, i32* @x.17
  %1037 = load i32, i32* @y.18
  %1038 = add i32 %1036, 1354121052
  %1039 = sub i32 %1038, 1
  %1040 = sub i32 %1039, 1354121052
  %1041 = sub i32 %1036, 1
  %1042 = mul i32 %1036, %1040
  %1043 = urem i32 %1042, 2
  %1044 = icmp eq i32 %1043, 0
  %1045 = icmp slt i32 %1037, 10
  %1046 = and i1 %1044, %1045
  %1047 = xor i1 %1044, %1045
  %1048 = or i1 %1046, %1047
  %1049 = or i1 %1044, %1045
  br i1 %1048, label %1050, label %1640

; <label>:1050:                                   ; preds = %1035
  br label %1051

; <label>:1051:                                   ; preds = %1050
  %1052 = load i32, i32* %10, align 4
  %1053 = sub i32 %1052, 415232795
  %1054 = add i32 %1053, 1
  %1055 = add i32 %1054, 415232795
  %1056 = add nsw i32 %1052, 1
  store i32 %1055, i32* %10, align 4
  br label %793

; <label>:1057:                                   ; preds = %793
  %1058 = load i32, i32* @x.17
  %1059 = load i32, i32* @y.18
  %1060 = sub i32 %1058, 2049710182
  %1061 = sub i32 %1060, 1
  %1062 = add i32 %1061, 2049710182
  %1063 = sub i32 %1058, 1
  %1064 = mul i32 %1058, %1062
  %1065 = urem i32 %1064, 2
  %1066 = icmp eq i32 %1065, 0
  %1067 = icmp slt i32 %1059, 10
  %1068 = and i1 %1066, %1067
  %1069 = xor i1 %1066, %1067
  %1070 = or i1 %1068, %1069
  %1071 = or i1 %1066, %1067
  br i1 %1070, label %1072, label %1641

; <label>:1072:                                   ; preds = %1057, %1641
  store i32 0, i32* %15, align 4
  %1073 = load i32, i32* @x.17
  %1074 = load i32, i32* @y.18
  %1075 = add i32 %1073, -27433288
  %1076 = sub i32 %1075, 1
  %1077 = sub i32 %1076, -27433288
  %1078 = sub i32 %1073, 1
  %1079 = mul i32 %1073, %1077
  %1080 = urem i32 %1079, 2
  %1081 = icmp eq i32 %1080, 0
  %1082 = icmp slt i32 %1074, 10
  %1083 = and i1 %1081, %1082
  %1084 = xor i1 %1081, %1082
  %1085 = or i1 %1083, %1084
  %1086 = or i1 %1081, %1082
  br i1 %1085, label %1087, label %1641

; <label>:1087:                                   ; preds = %1072
  br label %1088

; <label>:1088:                                   ; preds = %1285, %1087
  %1089 = load i32, i32* @x.17
  %1090 = load i32, i32* @y.18
  %1091 = sub i32 0, 1
  %1092 = add i32 %1089, %1091
  %1093 = sub i32 %1089, 1
  %1094 = mul i32 %1089, %1092
  %1095 = urem i32 %1094, 2
  %1096 = icmp eq i32 %1095, 0
  %1097 = icmp slt i32 %1090, 10
  %1098 = xor i1 %1096, true
  %1099 = xor i1 %1097, true
  %1100 = xor i1 false, true
  %1101 = and i1 %1098, false
  %1102 = and i1 %1096, %1100
  %1103 = and i1 %1099, false
  %1104 = and i1 %1097, %1100
  %1105 = or i1 %1101, %1102
  %1106 = or i1 %1103, %1104
  %1107 = xor i1 %1105, %1106
  %1108 = or i1 %1098, %1099
  %1109 = xor i1 %1108, true
  %1110 = or i1 false, %1100
  %1111 = and i1 %1109, %1110
  %1112 = or i1 %1107, %1111
  %1113 = or i1 %1096, %1097
  br i1 %1112, label %1114, label %1642

; <label>:1114:                                   ; preds = %1088, %1642
  %1115 = load i32, i32* %15, align 4
  %1116 = load i32, i32* @w, align 4
  %1117 = icmp slt i32 %1115, %1116
  %1118 = load i32, i32* @x.17
  %1119 = load i32, i32* @y.18
  %1120 = sub i32 0, 1
  %1121 = add i32 %1118, %1120
  %1122 = sub i32 %1118, 1
  %1123 = mul i32 %1118, %1121
  %1124 = urem i32 %1123, 2
  %1125 = icmp eq i32 %1124, 0
  %1126 = icmp slt i32 %1119, 10
  %1127 = and i1 %1125, %1126
  %1128 = xor i1 %1125, %1126
  %1129 = or i1 %1127, %1128
  %1130 = or i1 %1125, %1126
  br i1 %1129, label %1131, label %1642

; <label>:1131:                                   ; preds = %1114
  br i1 %1117, label %1132, label %1291

; <label>:1132:                                   ; preds = %1131
  store i32 0, i32* %16, align 4
  br label %1133

; <label>:1133:                                   ; preds = %1249, %1132
  %1134 = load i32, i32* %16, align 4
  %1135 = sext i32 %1134 to i64
  %1136 = load i32, i32* %15, align 4
  %1137 = sext i32 %1136 to i64
  %1138 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %1137
  %1139 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %1138) #3
  %1140 = icmp ult i64 %1135, %1139
  br i1 %1140, label %1141, label %1255

; <label>:1141:                                   ; preds = %1133
  %1142 = load i32, i32* %16, align 4
  %1143 = sub i32 0, %1142
  %1144 = sub i32 0, 1
  %1145 = add i32 %1143, %1144
  %1146 = sub i32 0, %1145
  %1147 = add nsw i32 %1142, 1
  store i32 %1146, i32* %17, align 4
  br label %1148

; <label>:1148:                                   ; preds = %1241, %1141
  %1149 = load i32, i32* %17, align 4
  %1150 = sext i32 %1149 to i64
  %1151 = load i32, i32* %15, align 4
  %1152 = sext i32 %1151 to i64
  %1153 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %1152
  %1154 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %1153) #3
  %1155 = icmp ult i64 %1150, %1154
  br i1 %1155, label %1156, label %1248

; <label>:1156:                                   ; preds = %1148
  %1157 = load i32, i32* %15, align 4
  %1158 = load i32, i32* @w, align 4
  %1159 = load i32, i32* %15, align 4
  %1160 = sext i32 %1159 to i64
  %1161 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %1160
  %1162 = load i32, i32* %16, align 4
  %1163 = sext i32 %1162 to i64
  %1164 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1161, i64 %1163) #3
  %1165 = load i32, i32* %1164, align 4
  %1166 = mul nsw i32 %1158, %1165
  %1167 = add i32 %1157, 1889225845
  %1168 = add i32 %1167, %1166
  %1169 = sub i32 %1168, 1889225845
  %1170 = add nsw i32 %1157, %1166
  store i32 %1169, i32* %18, align 4
  %1171 = load i32, i32* %15, align 4
  %1172 = load i32, i32* @w, align 4
  %1173 = load i32, i32* %15, align 4
  %1174 = sext i32 %1173 to i64
  %1175 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %1174
  %1176 = load i32, i32* %17, align 4
  %1177 = sext i32 %1176 to i64
  %1178 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %1175, i64 %1177) #3
  %1179 = load i32, i32* %1178, align 4
  %1180 = mul nsw i32 %1172, %1179
  %1181 = add i32 %1171, 1316504897
  %1182 = add i32 %1181, %1180
  %1183 = sub i32 %1182, 1316504897
  %1184 = add nsw i32 %1171, %1180
  store i32 %1183, i32* %19, align 4
  %1185 = load i32, i32* %18, align 4
  %1186 = load i32, i32* %8, align 4
  %1187 = sub i32 0, %1186
  %1188 = sub i32 %1185, %1187
  %1189 = add nsw i32 %1185, %1186
  %1190 = load i32, i32* %19, align 4
  invoke void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic* %7, i32 %1188, i32 %1190, i32 1000, i32 0)
          to label %1191 unwind label %705

; <label>:1191:                                   ; preds = %1156
  %1192 = load i32, i32* @x.17
  %1193 = load i32, i32* @y.18
  %1194 = sub i32 %1192, -1639537293
  %1195 = sub i32 %1194, 1
  %1196 = add i32 %1195, -1639537293
  %1197 = sub i32 %1192, 1
  %1198 = mul i32 %1192, %1196
  %1199 = urem i32 %1198, 2
  %1200 = icmp eq i32 %1199, 0
  %1201 = icmp slt i32 %1193, 10
  %1202 = and i1 %1200, %1201
  %1203 = xor i1 %1200, %1201
  %1204 = or i1 %1202, %1203
  %1205 = or i1 %1200, %1201
  br i1 %1204, label %1206, label %1646

; <label>:1206:                                   ; preds = %1191, %1646
  %1207 = load i32, i32* %19, align 4
  %1208 = load i32, i32* %8, align 4
  %1209 = sub i32 0, %1208
  %1210 = sub i32 %1207, %1209
  %1211 = add nsw i32 %1207, %1208
  %1212 = load i32, i32* %18, align 4
  %1213 = load i32, i32* @x.17
  %1214 = load i32, i32* @y.18
  %1215 = add i32 %1213, -2058964847
  %1216 = sub i32 %1215, 1
  %1217 = sub i32 %1216, -2058964847
  %1218 = sub i32 %1213, 1
  %1219 = mul i32 %1213, %1217
  %1220 = urem i32 %1219, 2
  %1221 = icmp eq i32 %1220, 0
  %1222 = icmp slt i32 %1214, 10
  %1223 = xor i1 %1221, true
  %1224 = xor i1 %1222, true
  %1225 = xor i1 false, true
  %1226 = and i1 %1223, false
  %1227 = and i1 %1221, %1225
  %1228 = and i1 %1224, false
  %1229 = and i1 %1222, %1225
  %1230 = or i1 %1226, %1227
  %1231 = or i1 %1228, %1229
  %1232 = xor i1 %1230, %1231
  %1233 = or i1 %1223, %1224
  %1234 = xor i1 %1233, true
  %1235 = or i1 false, %1225
  %1236 = and i1 %1234, %1235
  %1237 = or i1 %1232, %1236
  %1238 = or i1 %1221, %1222
  br i1 %1237, label %1239, label %1646

; <label>:1239:                                   ; preds = %1206
  invoke void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic* %7, i32 %1210, i32 %1212, i32 1000, i32 0)
          to label %1240 unwind label %705

; <label>:1240:                                   ; preds = %1239
  br label %1241

; <label>:1241:                                   ; preds = %1240
  %1242 = load i32, i32* %17, align 4
  %1243 = sub i32 0, %1242
  %1244 = sub i32 0, 1
  %1245 = add i32 %1243, %1244
  %1246 = sub i32 0, %1245
  %1247 = add nsw i32 %1242, 1
  store i32 %1246, i32* %17, align 4
  br label %1148

; <label>:1248:                                   ; preds = %1148
  br label %1249

; <label>:1249:                                   ; preds = %1248
  %1250 = load i32, i32* %16, align 4
  %1251 = add i32 %1250, -45264720
  %1252 = add i32 %1251, 1
  %1253 = sub i32 %1252, -45264720
  %1254 = add nsw i32 %1250, 1
  store i32 %1253, i32* %16, align 4
  br label %1133

; <label>:1255:                                   ; preds = %1133
  %1256 = load i32, i32* @x.17
  %1257 = load i32, i32* @y.18
  %1258 = sub i32 0, 1
  %1259 = add i32 %1256, %1258
  %1260 = sub i32 %1256, 1
  %1261 = mul i32 %1256, %1259
  %1262 = urem i32 %1261, 2
  %1263 = icmp eq i32 %1262, 0
  %1264 = icmp slt i32 %1257, 10
  %1265 = and i1 %1263, %1264
  %1266 = xor i1 %1263, %1264
  %1267 = or i1 %1265, %1266
  %1268 = or i1 %1263, %1264
  br i1 %1267, label %1269, label %1671

; <label>:1269:                                   ; preds = %1255, %1671
  %1270 = load i32, i32* @x.17
  %1271 = load i32, i32* @y.18
  %1272 = sub i32 %1270, -370377005
  %1273 = sub i32 %1272, 1
  %1274 = add i32 %1273, -370377005
  %1275 = sub i32 %1270, 1
  %1276 = mul i32 %1270, %1274
  %1277 = urem i32 %1276, 2
  %1278 = icmp eq i32 %1277, 0
  %1279 = icmp slt i32 %1271, 10
  %1280 = and i1 %1278, %1279
  %1281 = xor i1 %1278, %1279
  %1282 = or i1 %1280, %1281
  %1283 = or i1 %1278, %1279
  br i1 %1282, label %1284, label %1671

; <label>:1284:                                   ; preds = %1269
  br label %1285

; <label>:1285:                                   ; preds = %1284
  %1286 = load i32, i32* %15, align 4
  %1287 = add i32 %1286, 2129418460
  %1288 = add i32 %1287, 1
  %1289 = sub i32 %1288, 2129418460
  %1290 = add nsw i32 %1286, 1
  store i32 %1289, i32* %15, align 4
  br label %1088

; <label>:1291:                                   ; preds = %1131
  %1292 = load i32, i32* @x.17
  %1293 = load i32, i32* @y.18
  %1294 = add i32 %1292, 1530554205
  %1295 = sub i32 %1294, 1
  %1296 = sub i32 %1295, 1530554205
  %1297 = sub i32 %1292, 1
  %1298 = mul i32 %1292, %1296
  %1299 = urem i32 %1298, 2
  %1300 = icmp eq i32 %1299, 0
  %1301 = icmp slt i32 %1293, 10
  %1302 = and i1 %1300, %1301
  %1303 = xor i1 %1300, %1301
  %1304 = or i1 %1302, %1303
  %1305 = or i1 %1300, %1301
  br i1 %1304, label %1306, label %1672

; <label>:1306:                                   ; preds = %1291, %1672
  %1307 = load i32, i32* @sx, align 4
  %1308 = load i32, i32* @w, align 4
  %1309 = mul nsw i32 %1307, %1308
  %1310 = load i32, i32* @sy, align 4
  %1311 = sub i32 0, %1310
  %1312 = sub i32 %1309, %1311
  %1313 = add nsw i32 %1309, %1310
  %1314 = load i32, i32* %8, align 4
  %1315 = add i32 %1312, -1844273684
  %1316 = add i32 %1315, %1314
  %1317 = sub i32 %1316, -1844273684
  %1318 = add nsw i32 %1312, %1314
  store i32 %1317, i32* %20, align 4
  %1319 = load i32, i32* @tx, align 4
  %1320 = load i32, i32* @w, align 4
  %1321 = mul nsw i32 %1319, %1320
  %1322 = load i32, i32* @ty, align 4
  %1323 = add i32 %1321, 954332200
  %1324 = add i32 %1323, %1322
  %1325 = sub i32 %1324, 954332200
  %1326 = add nsw i32 %1321, %1322
  store i32 %1325, i32* %21, align 4
  %1327 = load i32, i32* %20, align 4
  %1328 = load i32, i32* %21, align 4
  %1329 = load i32, i32* @x.17
  %1330 = load i32, i32* @y.18
  %1331 = sub i32 0, 1
  %1332 = add i32 %1329, %1331
  %1333 = sub i32 %1329, 1
  %1334 = mul i32 %1329, %1332
  %1335 = urem i32 %1334, 2
  %1336 = icmp eq i32 %1335, 0
  %1337 = icmp slt i32 %1330, 10
  %1338 = and i1 %1336, %1337
  %1339 = xor i1 %1336, %1337
  %1340 = or i1 %1338, %1339
  %1341 = or i1 %1336, %1337
  br i1 %1340, label %1342, label %1672

; <label>:1342:                                   ; preds = %1306
  %1343 = invoke i64 @_ZN5Dinic8max_flowEii(%struct.Dinic* %7, i32 %1327, i32 %1328)
          to label %1344 unwind label %705

; <label>:1344:                                   ; preds = %1342
  %1345 = load i32, i32* @x.17
  %1346 = load i32, i32* @y.18
  %1347 = add i32 %1345, 1428108359
  %1348 = sub i32 %1347, 1
  %1349 = sub i32 %1348, 1428108359
  %1350 = sub i32 %1345, 1
  %1351 = mul i32 %1345, %1349
  %1352 = urem i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  %1354 = icmp slt i32 %1346, 10
  %1355 = xor i1 %1353, true
  %1356 = xor i1 %1354, true
  %1357 = xor i1 false, true
  %1358 = and i1 %1355, false
  %1359 = and i1 %1353, %1357
  %1360 = and i1 %1356, false
  %1361 = and i1 %1354, %1357
  %1362 = or i1 %1358, %1359
  %1363 = or i1 %1360, %1361
  %1364 = xor i1 %1362, %1363
  %1365 = or i1 %1355, %1356
  %1366 = xor i1 %1365, true
  %1367 = or i1 false, %1357
  %1368 = and i1 %1366, %1367
  %1369 = or i1 %1364, %1368
  %1370 = or i1 %1353, %1354
  br i1 %1369, label %1371, label %1808

; <label>:1371:                                   ; preds = %1344, %1808
  %1372 = load i32, i32* @x.17
  %1373 = load i32, i32* @y.18
  %1374 = add i32 %1372, -2073950313
  %1375 = sub i32 %1374, 1
  %1376 = sub i32 %1375, -2073950313
  %1377 = sub i32 %1372, 1
  %1378 = mul i32 %1372, %1376
  %1379 = urem i32 %1378, 2
  %1380 = icmp eq i32 %1379, 0
  %1381 = icmp slt i32 %1373, 10
  %1382 = xor i1 %1380, true
  %1383 = xor i1 %1381, true
  %1384 = xor i1 true, true
  %1385 = and i1 %1382, true
  %1386 = and i1 %1380, %1384
  %1387 = and i1 %1383, true
  %1388 = and i1 %1381, %1384
  %1389 = or i1 %1385, %1386
  %1390 = or i1 %1387, %1388
  %1391 = xor i1 %1389, %1390
  %1392 = or i1 %1382, %1383
  %1393 = xor i1 %1392, true
  %1394 = or i1 true, %1384
  %1395 = and i1 %1393, %1394
  %1396 = or i1 %1391, %1395
  %1397 = or i1 %1380, %1381
  br i1 %1396, label %1398, label %1808

; <label>:1398:                                   ; preds = %1371
  %1399 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"* @_ZSt4cout, i64 %1343)
          to label %1400 unwind label %705

; <label>:1400:                                   ; preds = %1398
  %1401 = load i32, i32* @x.17
  %1402 = load i32, i32* @y.18
  %1403 = sub i32 %1401, 1548569060
  %1404 = sub i32 %1403, 1
  %1405 = add i32 %1404, 1548569060
  %1406 = sub i32 %1401, 1
  %1407 = mul i32 %1401, %1405
  %1408 = urem i32 %1407, 2
  %1409 = icmp eq i32 %1408, 0
  %1410 = icmp slt i32 %1402, 10
  %1411 = and i1 %1409, %1410
  %1412 = xor i1 %1409, %1410
  %1413 = or i1 %1411, %1412
  %1414 = or i1 %1409, %1410
  br i1 %1413, label %1415, label %1809

; <label>:1415:                                   ; preds = %1400, %1809
  %1416 = load i32, i32* @x.17
  %1417 = load i32, i32* @y.18
  %1418 = add i32 %1416, 1134458991
  %1419 = sub i32 %1418, 1
  %1420 = sub i32 %1419, 1134458991
  %1421 = sub i32 %1416, 1
  %1422 = mul i32 %1416, %1420
  %1423 = urem i32 %1422, 2
  %1424 = icmp eq i32 %1423, 0
  %1425 = icmp slt i32 %1417, 10
  %1426 = xor i1 %1424, true
  %1427 = xor i1 %1425, true
  %1428 = xor i1 true, true
  %1429 = and i1 %1426, true
  %1430 = and i1 %1424, %1428
  %1431 = and i1 %1427, true
  %1432 = and i1 %1425, %1428
  %1433 = or i1 %1429, %1430
  %1434 = or i1 %1431, %1432
  %1435 = xor i1 %1433, %1434
  %1436 = or i1 %1426, %1427
  %1437 = xor i1 %1436, true
  %1438 = or i1 true, %1428
  %1439 = and i1 %1437, %1438
  %1440 = or i1 %1435, %1439
  %1441 = or i1 %1424, %1425
  br i1 %1440, label %1442, label %1809

; <label>:1442:                                   ; preds = %1415
  %1443 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %1399, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %1444 unwind label %705

; <label>:1444:                                   ; preds = %1442
  %1445 = load i32, i32* @x.17
  %1446 = load i32, i32* @y.18
  %1447 = add i32 %1445, 952083774
  %1448 = sub i32 %1447, 1
  %1449 = sub i32 %1448, 952083774
  %1450 = sub i32 %1445, 1
  %1451 = mul i32 %1445, %1449
  %1452 = urem i32 %1451, 2
  %1453 = icmp eq i32 %1452, 0
  %1454 = icmp slt i32 %1446, 10
  %1455 = xor i1 %1453, true
  %1456 = xor i1 %1454, true
  %1457 = xor i1 true, true
  %1458 = and i1 %1455, true
  %1459 = and i1 %1453, %1457
  %1460 = and i1 %1456, true
  %1461 = and i1 %1454, %1457
  %1462 = or i1 %1458, %1459
  %1463 = or i1 %1460, %1461
  %1464 = xor i1 %1462, %1463
  %1465 = or i1 %1455, %1456
  %1466 = xor i1 %1465, true
  %1467 = or i1 true, %1457
  %1468 = and i1 %1466, %1467
  %1469 = or i1 %1464, %1468
  %1470 = or i1 %1453, %1454
  br i1 %1469, label %1471, label %1810

; <label>:1471:                                   ; preds = %1444, %1810
  call void @_ZN5DinicD2Ev(%struct.Dinic* %7) #3
  %1472 = load i32, i32* @x.17
  %1473 = load i32, i32* @y.18
  %1474 = add i32 %1472, 223095481
  %1475 = sub i32 %1474, 1
  %1476 = sub i32 %1475, 223095481
  %1477 = sub i32 %1472, 1
  %1478 = mul i32 %1472, %1476
  %1479 = urem i32 %1478, 2
  %1480 = icmp eq i32 %1479, 0
  %1481 = icmp slt i32 %1473, 10
  %1482 = xor i1 %1480, true
  %1483 = xor i1 %1481, true
  %1484 = xor i1 true, true
  %1485 = and i1 %1482, true
  %1486 = and i1 %1480, %1484
  %1487 = and i1 %1483, true
  %1488 = and i1 %1481, %1484
  %1489 = or i1 %1485, %1486
  %1490 = or i1 %1487, %1488
  %1491 = xor i1 %1489, %1490
  %1492 = or i1 %1482, %1483
  %1493 = xor i1 %1492, true
  %1494 = or i1 true, %1484
  %1495 = and i1 %1493, %1494
  %1496 = or i1 %1491, %1495
  %1497 = or i1 %1480, %1481
  br i1 %1496, label %1498, label %1810

; <label>:1498:                                   ; preds = %1471
  br label %1499

; <label>:1499:                                   ; preds = %1498, %670
  %1500 = load i32, i32* %1, align 4
  ret i32 %1500

; <label>:1501:                                   ; preds = %738, %292
  %1502 = load i8*, i8** %4, align 8
  %1503 = load i32, i32* %5, align 4
  %1504 = insertvalue { i8*, i32 } undef, i8* %1502, 0
  %1505 = insertvalue { i8*, i32 } %1504, i32 %1503, 1
  resume { i8*, i32 } %1505

; <label>:1506:                                   ; preds = %59, %33
  store i32 0, i32* %6, align 4
  br label %59

; <label>:1507:                                   ; preds = %102, %87
  %1508 = load i32, i32* %6, align 4
  %1509 = load i32, i32* @w, align 4
  %1510 = sub i32 0, 1
  %1511 = add i32 %1509, %1510
  %1512 = sub i32 %1509, 1
  %1513 = mul i32 %1511, 1
  %1514 = shl i32 %1509, 1
  %1515 = sub i32 0, %1509
  %1516 = add i32 0, %1515
  %1517 = sub i32 0, %1509
  %1518 = sub i32 0, 1
  %1519 = sub i32 %1516, %1518
  %1520 = add i32 %1516, 1
  %1521 = shl i32 %1509, 1
  %1522 = sub i32 %1509, -382925019
  %1523 = sub i32 %1522, 1
  %1524 = add i32 %1523, -382925019
  %1525 = sub i32 %1509, 1
  %1526 = mul i32 %1524, 1
  %1527 = add i32 0, -1419761053
  %1528 = sub i32 %1527, %1509
  %1529 = sub i32 %1528, -1419761053
  %1530 = sub i32 0, %1509
  %1531 = sub i32 %1529, -932568973
  %1532 = add i32 %1531, 1
  %1533 = add i32 %1532, -932568973
  %1534 = add i32 %1529, 1
  %1535 = add i32 0, 1915996276
  %1536 = sub i32 %1535, %1509
  %1537 = sub i32 %1536, 1915996276
  %1538 = sub i32 0, %1509
  %1539 = add i32 %1537, 2066753280
  %1540 = add i32 %1539, 1
  %1541 = sub i32 %1540, 2066753280
  %1542 = add i32 %1537, 1
  %1543 = add i32 %1509, -867127436
  %1544 = sub i32 %1543, 1
  %1545 = sub i32 %1544, -867127436
  %1546 = sub nsw i32 %1509, 1
  %1547 = icmp sle i32 %1508, %1545
  br label %102

; <label>:1548:                                   ; preds = %151, %124
  %1549 = load i32, i32* %6, align 4
  %1550 = sext i32 %1549 to i64
  br label %151

; <label>:1551:                                   ; preds = %208, %181
  %1552 = load i8, i8* %180, align 1
  %1553 = sext i8 %1552 to i32
  %1554 = icmp eq i32 %1553, 83
  br label %208

; <label>:1555:                                   ; preds = %272, %245
  %1556 = load i32, i32* %6, align 4
  %1557 = sext i32 %1556 to i64
  %1558 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @W, i64 0, i64 %1557
  br label %272

; <label>:1559:                                   ; preds = %327, %300
  %1560 = load i8, i8* %299, align 1
  %1561 = sext i8 %1560 to i32
  %1562 = icmp eq i32 %1561, 84
  br label %327

; <label>:1563:                                   ; preds = %370, %355
  br label %370

; <label>:1564:                                   ; preds = %429, %402
  %1565 = load i8, i8* %401, align 1
  %1566 = sext i8 %1565 to i32
  %1567 = icmp eq i32 %1566, 111
  br label %429

; <label>:1568:                                   ; preds = %462, %447
  %1569 = load i32, i32* %2, align 4
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %1570
  br label %462

; <label>:1572:                                   ; preds = %525, %499
  %1573 = load i32, i32* %6, align 4
  %1574 = add i32 0, 693782707
  %1575 = sub i32 %1574, %1573
  %1576 = sub i32 %1575, 693782707
  %1577 = sub i32 0, %1573
  %1578 = sub i32 0, 1
  %1579 = sub i32 %1576, %1578
  %1580 = add i32 %1576, 1
  %1581 = sub i32 0, 1
  %1582 = add i32 %1573, %1581
  %1583 = sub i32 %1573, 1
  %1584 = mul i32 %1582, 1
  %1585 = add i32 %1573, 743427153
  %1586 = add i32 %1585, 1
  %1587 = sub i32 %1586, 743427153
  %1588 = add nsw i32 %1573, 1
  store i32 %1587, i32* %6, align 4
  br label %525

; <label>:1589:                                   ; preds = %587, %560
  %1590 = load i32, i32* %2, align 4
  %1591 = shl i32 %1590, 1
  %1592 = sub i32 0, 698823768
  %1593 = sub i32 %1592, %1590
  %1594 = add i32 %1593, 698823768
  %1595 = sub i32 0, %1590
  %1596 = sub i32 0, 1
  %1597 = sub i32 %1594, %1596
  %1598 = add i32 %1594, 1
  %1599 = shl i32 %1590, 1
  %1600 = sub i32 0, %1590
  %1601 = add i32 0, %1600
  %1602 = sub i32 0, %1590
  %1603 = add i32 %1601, -363949906
  %1604 = add i32 %1603, 1
  %1605 = sub i32 %1604, -363949906
  %1606 = add i32 %1601, 1
  %1607 = add i32 %1590, 1333259057
  %1608 = sub i32 %1607, 1
  %1609 = sub i32 %1608, 1333259057
  %1610 = sub i32 %1590, 1
  %1611 = mul i32 %1609, 1
  %1612 = shl i32 %1590, 1
  %1613 = sub i32 %1590, 472803654
  %1614 = add i32 %1613, 1
  %1615 = add i32 %1614, 472803654
  %1616 = add nsw i32 %1590, 1
  store i32 %1615, i32* %2, align 4
  br label %587

; <label>:1617:                                   ; preds = %651, %624
  %1618 = load i32, i32* @sy, align 4
  %1619 = load i32, i32* @ty, align 4
  %1620 = icmp eq i32 %1618, %1619
  br label %651

; <label>:1621:                                   ; preds = %720, %705
  %1622 = landingpad { i8*, i32 }
          cleanup
  %1623 = extractvalue { i8*, i32 } %1622, 0
  store i8* %1623, i8** %4, align 8
  %1624 = extractvalue { i8*, i32 } %1622, 1
  store i32 %1624, i32* %5, align 4
  call void @_ZN5DinicD2Ev(%struct.Dinic* %7) #3
  br label %720

; <label>:1625:                                   ; preds = %766, %739
  store i32 0, i32* %10, align 4
  br label %766

; <label>:1626:                                   ; preds = %812, %798
  %1627 = load i32, i32* %11, align 4
  %1628 = sext i32 %1627 to i64
  %1629 = load i32, i32* %10, align 4
  %1630 = sext i32 %1629 to i64
  %1631 = getelementptr inbounds [100 x %"class.std::vector"], [100 x %"class.std::vector"]* @H, i64 0, i64 %1630
  %1632 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %1631) #3
  %1633 = icmp ult i64 %1628, %1632
  br label %812

; <label>:1634:                                   ; preds = %916, %902
  br label %916

; <label>:1635:                                   ; preds = %977, %951
  %1636 = load i32, i32* %11, align 4
  %1637 = sub i32 0, 1
  %1638 = sub i32 %1636, %1637
  %1639 = add nsw i32 %1636, 1
  store i32 %1638, i32* %11, align 4
  br label %977

; <label>:1640:                                   ; preds = %1035, %1009
  br label %1035

; <label>:1641:                                   ; preds = %1072, %1057
  store i32 0, i32* %15, align 4
  br label %1072

; <label>:1642:                                   ; preds = %1114, %1088
  %1643 = load i32, i32* %15, align 4
  %1644 = load i32, i32* @w, align 4
  %1645 = icmp slt i32 %1643, %1644
  br label %1114

; <label>:1646:                                   ; preds = %1206, %1191
  %1647 = load i32, i32* %19, align 4
  %1648 = load i32, i32* %8, align 4
  %1649 = sub i32 0, %1647
  %1650 = add i32 0, %1649
  %1651 = sub i32 0, %1647
  %1652 = sub i32 0, %1650
  %1653 = sub i32 0, %1648
  %1654 = add i32 %1652, %1653
  %1655 = sub i32 0, %1654
  %1656 = add i32 %1650, %1648
  %1657 = sub i32 0, %1647
  %1658 = add i32 0, %1657
  %1659 = sub i32 0, %1647
  %1660 = sub i32 0, %1648
  %1661 = sub i32 %1658, %1660
  %1662 = add i32 %1658, %1648
  %1663 = shl i32 %1647, %1648
  %1664 = shl i32 %1647, %1648
  %1665 = shl i32 %1647, %1648
  %1666 = add i32 %1647, -1024806141
  %1667 = add i32 %1666, %1648
  %1668 = sub i32 %1667, -1024806141
  %1669 = add nsw i32 %1647, %1648
  %1670 = load i32, i32* %18, align 4
  br label %1206

; <label>:1671:                                   ; preds = %1269, %1255
  br label %1269

; <label>:1672:                                   ; preds = %1306, %1291
  %1673 = load i32, i32* @sx, align 4
  %1674 = load i32, i32* @w, align 4
  %1675 = sub i32 %1673, 748464665
  %1676 = sub i32 %1675, %1674
  %1677 = add i32 %1676, 748464665
  %1678 = sub i32 %1673, %1674
  %1679 = mul i32 %1677, %1674
  %1680 = add i32 0, -1985037655
  %1681 = sub i32 %1680, %1673
  %1682 = sub i32 %1681, -1985037655
  %1683 = sub i32 0, %1673
  %1684 = sub i32 0, %1674
  %1685 = sub i32 %1682, %1684
  %1686 = add i32 %1682, %1674
  %1687 = mul nsw i32 %1673, %1674
  %1688 = load i32, i32* @sy, align 4
  %1689 = shl i32 %1687, %1688
  %1690 = shl i32 %1687, %1688
  %1691 = sub i32 0, %1688
  %1692 = add i32 %1687, %1691
  %1693 = sub i32 %1687, %1688
  %1694 = mul i32 %1692, %1688
  %1695 = sub i32 %1687, -850709526
  %1696 = sub i32 %1695, %1688
  %1697 = add i32 %1696, -850709526
  %1698 = sub i32 %1687, %1688
  %1699 = mul i32 %1697, %1688
  %1700 = shl i32 %1687, %1688
  %1701 = sub i32 0, %1687
  %1702 = sub i32 0, %1688
  %1703 = add i32 %1701, %1702
  %1704 = sub i32 0, %1703
  %1705 = add nsw i32 %1687, %1688
  %1706 = load i32, i32* %8, align 4
  %1707 = sub i32 0, %1704
  %1708 = add i32 0, %1707
  %1709 = sub i32 0, %1704
  %1710 = sub i32 %1708, 245391790
  %1711 = add i32 %1710, %1706
  %1712 = add i32 %1711, 245391790
  %1713 = add i32 %1708, %1706
  %1714 = sub i32 0, %1706
  %1715 = add i32 %1704, %1714
  %1716 = sub i32 %1704, %1706
  %1717 = mul i32 %1715, %1706
  %1718 = sub i32 0, 1115961107
  %1719 = sub i32 %1718, %1704
  %1720 = add i32 %1719, 1115961107
  %1721 = sub i32 0, %1704
  %1722 = sub i32 0, %1720
  %1723 = sub i32 0, %1706
  %1724 = add i32 %1722, %1723
  %1725 = sub i32 0, %1724
  %1726 = add i32 %1720, %1706
  %1727 = add i32 0, -1259635474
  %1728 = sub i32 %1727, %1704
  %1729 = sub i32 %1728, -1259635474
  %1730 = sub i32 0, %1704
  %1731 = add i32 %1729, -613673794
  %1732 = add i32 %1731, %1706
  %1733 = sub i32 %1732, -613673794
  %1734 = add i32 %1729, %1706
  %1735 = add i32 0, 2138970172
  %1736 = sub i32 %1735, %1704
  %1737 = sub i32 %1736, 2138970172
  %1738 = sub i32 0, %1704
  %1739 = add i32 %1737, 1558789714
  %1740 = add i32 %1739, %1706
  %1741 = sub i32 %1740, 1558789714
  %1742 = add i32 %1737, %1706
  %1743 = add i32 0, 1032789097
  %1744 = sub i32 %1743, %1704
  %1745 = sub i32 %1744, 1032789097
  %1746 = sub i32 0, %1704
  %1747 = sub i32 0, %1706
  %1748 = sub i32 %1745, %1747
  %1749 = add i32 %1745, %1706
  %1750 = add i32 %1704, -1227309091
  %1751 = sub i32 %1750, %1706
  %1752 = sub i32 %1751, -1227309091
  %1753 = sub i32 %1704, %1706
  %1754 = mul i32 %1752, %1706
  %1755 = sub i32 0, %1704
  %1756 = sub i32 0, %1706
  %1757 = add i32 %1755, %1756
  %1758 = sub i32 0, %1757
  %1759 = add nsw i32 %1704, %1706
  store i32 %1758, i32* %20, align 4
  %1760 = load i32, i32* @tx, align 4
  %1761 = load i32, i32* @w, align 4
  %1762 = add i32 0, -1607157513
  %1763 = sub i32 %1762, %1760
  %1764 = sub i32 %1763, -1607157513
  %1765 = sub i32 0, %1760
  %1766 = sub i32 0, %1764
  %1767 = sub i32 0, %1761
  %1768 = add i32 %1766, %1767
  %1769 = sub i32 0, %1768
  %1770 = add i32 %1764, %1761
  %1771 = sub i32 0, 239254364
  %1772 = sub i32 %1771, %1760
  %1773 = add i32 %1772, 239254364
  %1774 = sub i32 0, %1760
  %1775 = sub i32 %1773, -579311996
  %1776 = add i32 %1775, %1761
  %1777 = add i32 %1776, -579311996
  %1778 = add i32 %1773, %1761
  %1779 = shl i32 %1760, %1761
  %1780 = shl i32 %1760, %1761
  %1781 = mul nsw i32 %1760, %1761
  %1782 = load i32, i32* @ty, align 4
  %1783 = shl i32 %1781, %1782
  %1784 = add i32 %1781, -1043964632
  %1785 = sub i32 %1784, %1782
  %1786 = sub i32 %1785, -1043964632
  %1787 = sub i32 %1781, %1782
  %1788 = mul i32 %1786, %1782
  %1789 = sub i32 %1781, 525353979
  %1790 = sub i32 %1789, %1782
  %1791 = add i32 %1790, 525353979
  %1792 = sub i32 %1781, %1782
  %1793 = mul i32 %1791, %1782
  %1794 = sub i32 %1781, 671951343
  %1795 = sub i32 %1794, %1782
  %1796 = add i32 %1795, 671951343
  %1797 = sub i32 %1781, %1782
  %1798 = mul i32 %1796, %1782
  %1799 = shl i32 %1781, %1782
  %1800 = shl i32 %1781, %1782
  %1801 = sub i32 0, %1781
  %1802 = sub i32 0, %1782
  %1803 = add i32 %1801, %1802
  %1804 = sub i32 0, %1803
  %1805 = add nsw i32 %1781, %1782
  store i32 %1804, i32* %21, align 4
  %1806 = load i32, i32* %20, align 4
  %1807 = load i32, i32* %21, align 4
  br label %1306

; <label>:1808:                                   ; preds = %1371, %1344
  br label %1371

; <label>:1809:                                   ; preds = %1415, %1400
  br label %1415

; <label>:1810:                                   ; preds = %1471, %1444
  call void @_ZN5DinicD2Ev(%struct.Dinic* %7) #3
  br label %1471
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

declare i32 @__gxx_personality_v0(...)

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE9push_backERKi(%"class.std::vector"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %10 = bitcast %"class.std::vector"* %9 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %4
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %15 = bitcast %"class.std::vector"* %14 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load i32*, i32** %17, align 8
  store i32* %18, i32** %3
  %19 = alloca i32
  store i32 -597644161, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %108
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -597644161, label %23
    i32 456830557, label %28
    i32 -486862646, label %45
    i32 638536569, label %73
    i32 -1948613269, label %103
    i32 497001058, label %104
    i32 -819155605, label %105
  ]

; <label>:22:                                     ; preds = %20
  br label %108

; <label>:23:                                     ; preds = %20
  %24 = load volatile i32*, i32** %4
  %25 = load volatile i32*, i32** %3
  %26 = icmp ne i32* %24, %25
  %27 = select i1 %26, i32 456830557, i32 -486862646
  store i32 %27, i32* %19
  br label %108

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %31 to %"class.std::allocator"*
  %33 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %34 = bitcast %"class.std::vector"* %33 to %"struct.std::_Vector_base"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load i32*, i32** %36, align 8
  %38 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %32, i32* %37, i32* dereferenceable(4) %38)
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %40 = bitcast %"class.std::vector"* %39 to %"struct.std::_Vector_base"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds i32, i32* %43, i32 1
  store i32* %44, i32** %42, align 8
  store i32 497001058, i32* %19
  br label %108

; <label>:45:                                     ; preds = %20
  %46 = load i32, i32* @x.19
  %47 = load i32, i32* @y.20
  %48 = add i32 %46, 598085333
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 598085333
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 638536569, i32 -819155605
  store i32 %72, i32* %19
  br label %108

; <label>:73:                                     ; preds = %20
  %74 = load i32*, i32** %7, align 8
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"* %75, i32* dereferenceable(4) %74)
  %76 = load i32, i32* @x.19
  %77 = load i32, i32* @y.20
  %78 = sub i32 %76, -519236854
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -519236854
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 true, true
  %89 = and i1 %86, true
  %90 = and i1 %84, %88
  %91 = and i1 %87, true
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 true, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  %102 = select i1 %100, i32 -1948613269, i32 -819155605
  store i32 %102, i32* %19
  br label %108

; <label>:103:                                    ; preds = %20
  store i32 497001058, i32* %19
  br label %108

; <label>:104:                                    ; preds = %20
  ret void

; <label>:105:                                    ; preds = %20
  %106 = load i32*, i32** %7, align 8
  %107 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"* %107, i32* dereferenceable(4) %106)
  store i32 638536569, i32* %19
  br label %108

; <label>:108:                                    ; preds = %105, %103, %73, %45, %28, %23, %22
  br label %20
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicC2Ei(%struct.Dinic*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.Dinic*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*
  %6 = alloca i32
  store %struct.Dinic* %0, %struct.Dinic** %3, align 8
  store i32 %1, i32* %4, align 4
  %7 = load %struct.Dinic*, %struct.Dinic** %3, align 8
  %8 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %8) #3
  %9 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector"* %9) #3
  %10 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 3
  %11 = load i32, i32* %4, align 4
  invoke void @_ZN5GraphC2Ei(%struct.Graph* %10, i32 %11)
          to label %12 unwind label %44

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.21
  %14 = load i32, i32* @y.22
  %15 = add i32 %13, 2032256021
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, 2032256021
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %95

; <label>:27:                                     ; preds = %12, %95
  %28 = load i32, i32* %4, align 4
  %29 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 0
  store i32 %28, i32* %29, align 8
  %30 = load i32, i32* @x.21
  %31 = load i32, i32* @y.22
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %95

; <label>:43:                                     ; preds = %27
  ret void

; <label>:44:                                     ; preds = %2
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %5, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %6, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %9) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %8) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i32, i32* @x.21
  %50 = load i32, i32* @y.22
  %51 = add i32 %49, 395311150
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 395311150
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %98

; <label>:75:                                     ; preds = %48, %98
  %76 = load i8*, i8** %5, align 8
  %77 = load i32, i32* %6, align 4
  %78 = insertvalue { i8*, i32 } undef, i8* %76, 0
  %79 = insertvalue { i8*, i32 } %78, i32 %77, 1
  %80 = load i32, i32* @x.21
  %81 = load i32, i32* @y.22
  %82 = sub i32 %80, -1655071468
  %83 = sub i32 %82, 1
  %84 = add i32 %83, -1655071468
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  br i1 %92, label %94, label %98

; <label>:94:                                     ; preds = %75
  resume { i8*, i32 } %79

; <label>:95:                                     ; preds = %27, %12
  %96 = load i32, i32* %4, align 4
  %97 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %7, i32 0, i32 0
  store i32 %96, i32* %97, align 8
  br label %27

; <label>:98:                                     ; preds = %75, %48
  %99 = load i8*, i8** %5, align 8
  %100 = load i32, i32* %6, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5Dinic8add_edgeEiiii(%struct.Dinic*, i32, i32, i32, i32) #0 comdat align 2 {
  %6 = alloca %struct.Dinic*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"struct.Graph::edge", align 8
  %12 = alloca %"struct.Graph::edge", align 8
  store %struct.Dinic* %0, %struct.Dinic** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32 %3, i32* %9, align 4
  store i32 %4, i32* %10, align 4
  %13 = load %struct.Dinic*, %struct.Dinic** %6, align 8
  %14 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %15 = load i32, i32* %7, align 4
  %16 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %14, i32 %15)
  %17 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 0
  %18 = load i32, i32* %8, align 4
  store i32 %18, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 1
  %20 = load i32, i32* %9, align 4
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %11, i32 0, i32 2
  %23 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %24 = load i32, i32* %8, align 4
  %25 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %23, i32 %24)
  %26 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %25) #3
  %27 = trunc i64 %26 to i32
  %28 = sext i32 %27 to i64
  store i64 %28, i64* %22, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %16, %"struct.Graph::edge"* dereferenceable(24) %11)
  %29 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %30 = load i32, i32* %8, align 4
  %31 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %29, i32 %30)
  %32 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 0
  %33 = load i32, i32* %7, align 4
  store i32 %33, i32* %32, align 8
  %34 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 1
  %35 = load i32, i32* %10, align 4
  %36 = sext i32 %35 to i64
  store i64 %36, i64* %34, align 8
  %37 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %12, i32 0, i32 2
  %38 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %13, i32 0, i32 3
  %39 = load i32, i32* %7, align 4
  %40 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %38, i32 %39)
  %41 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %40) #3
  %42 = trunc i64 %41 to i32
  %43 = sub i32 0, 1
  %44 = add i32 %42, %43
  %45 = sub nsw i32 %42, 1
  %46 = sext i32 %44 to i64
  store i64 %46, i64* %37, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"* %31, %"struct.Graph::edge"* dereferenceable(24) %12)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.25
  %6 = load i32, i32* @y.26
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1971535880, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %116
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1971535880, label %18
    i32 654429547, label %38
    i32 188810190, label %71
    i32 145920087, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %116

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 654429547, i32 145920087
  store i32 %37, i32* %14
  br label %116

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %39, align 8
  %40 = load %"class.std::vector"*, %"class.std::vector"** %39, align 8
  %41 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load i32*, i32** %43, align 8
  %45 = bitcast %"class.std::vector"* %40 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = ptrtoint i32* %44 to i64
  %50 = ptrtoint i32* %48 to i64
  %51 = sub i64 %49, -4997867414309128432
  %52 = sub i64 %51, %50
  %53 = add i64 %52, -4997867414309128432
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 4
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.25
  %57 = load i32, i32* @y.26
  %58 = add i32 %56, 1638173003
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1638173003
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 188810190, i32 145920087
  store i32 %70, i32* %14
  br label %116

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %74, align 8
  %75 = load %"class.std::vector"*, %"class.std::vector"** %74, align 8
  %76 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %"class.std::vector"* %75 to %"struct.std::_Vector_base"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = ptrtoint i32* %79 to i64
  %85 = ptrtoint i32* %83 to i64
  %86 = shl i64 %84, %85
  %87 = shl i64 %84, %85
  %88 = sub i64 %84, 6229567987033259234
  %89 = sub i64 %88, %85
  %90 = add i64 %89, 6229567987033259234
  %91 = sub i64 %84, %85
  %92 = mul i64 %90, %85
  %93 = sub i64 0, 6686483886070254718
  %94 = sub i64 %93, %84
  %95 = add i64 %94, 6686483886070254718
  %96 = sub i64 0, %84
  %97 = add i64 %95, -6095388592289113571
  %98 = add i64 %97, %85
  %99 = sub i64 %98, -6095388592289113571
  %100 = add i64 %95, %85
  %101 = shl i64 %84, %85
  %102 = sub i64 %84, 216057855183366002
  %103 = sub i64 %102, %85
  %104 = add i64 %103, 216057855183366002
  %105 = sub i64 %84, %85
  %106 = shl i64 %104, 4
  %107 = sub i64 0, 7406589452816440640
  %108 = sub i64 %107, %104
  %109 = add i64 %108, 7406589452816440640
  %110 = sub i64 0, %104
  %111 = sub i64 %109, 7432135099929965501
  %112 = add i64 %111, 4
  %113 = add i64 %112, 7432135099929965501
  %114 = add i64 %109, 4
  %115 = sdiv exact i64 %104, 4
  store i32 654429547, i32* %14
  br label %116

; <label>:116:                                    ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds i32, i32* %9, i64 %10
  ret i32* %11
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEx(%"class.std::basic_ostream"*, i64) #1

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Dinic8max_flowEii(%struct.Dinic*, i32, i32) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %struct.Dinic*
  %6 = alloca %struct.Dinic*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i64, align 8
  %10 = alloca i64, align 8
  %11 = alloca i32, align 4
  store %struct.Dinic* %0, %struct.Dinic** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  %12 = load %struct.Dinic*, %struct.Dinic** %6, align 8
  store %struct.Dinic* %12, %struct.Dinic** %5
  store i64 0, i64* %9, align 8
  %13 = alloca i32
  store i32 -2115754334, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %298
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2115754334, label %17
    i32 -253302008, label %23
    i32 -716296199, label %51
    i32 -571894302, label %84
    i32 -177997441, label %85
    i32 1892781386, label %92
    i32 442847137, label %119
    i32 -1136941589, label %154
    i32 856790248, label %155
    i32 -1340171366, label %171
    i32 404582448, label %198
    i32 128044448, label %199
    i32 -579355226, label %227
    i32 1996487928, label %244
    i32 1569616046, label %246
    i32 -836335800, label %253
    i32 877803600, label %295
    i32 1244330268, label %296
  ]

; <label>:16:                                     ; preds = %14
  br label %298

; <label>:17:                                     ; preds = %14
  %18 = load i32, i32* %7, align 4
  %19 = load i32, i32* %8, align 4
  %20 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %21 = call zeroext i1 @_ZN5Dinic7g_levelEii(%struct.Dinic* %20, i32 %18, i32 %19)
  %22 = select i1 %21, i32 -253302008, i32 128044448
  store i32 %22, i32* %13
  br label %298

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.29
  %25 = load i32, i32* @y.30
  %26 = add i32 %24, -1566929567
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -1566929567
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 true, true
  %37 = and i1 %34, true
  %38 = and i1 %32, %36
  %39 = and i1 %35, true
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 true, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 -716296199, i32 1569616046
  store i32 %50, i32* %13
  br label %298

; <label>:51:                                     ; preds = %14
  %52 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %53 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %52, i32 0, i32 2
  %54 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %55 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %54, i32 0, i32 0
  %56 = load i32, i32* %55, align 8
  %57 = sext i32 %56 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %53, i64 %57, i32* dereferenceable(4) %11)
  %58 = load i32, i32* @x.29
  %59 = load i32, i32* @y.30
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -571894302, i32 1569616046
  store i32 %83, i32* %13
  br label %298

; <label>:84:                                     ; preds = %14
  store i32 -177997441, i32* %13
  br label %298

; <label>:85:                                     ; preds = %14
  %86 = load i32, i32* %7, align 4
  %87 = load i32, i32* %8, align 4
  %88 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %89 = call i64 @_ZN5Dinic3dfsEiix(%struct.Dinic* %88, i32 %86, i32 %87, i64 1000000000)
  store i64 %89, i64* %10, align 8
  %90 = icmp sgt i64 %89, 0
  %91 = select i1 %90, i32 1892781386, i32 856790248
  store i32 %91, i32* %13
  br label %298

; <label>:92:                                     ; preds = %14
  %93 = load i32, i32* @x.29
  %94 = load i32, i32* @y.30
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 false, true
  %105 = and i1 %102, false
  %106 = and i1 %100, %104
  %107 = and i1 %103, false
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 false, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  %118 = select i1 %116, i32 442847137, i32 -836335800
  store i32 %118, i32* %13
  br label %298

; <label>:119:                                    ; preds = %14
  %120 = load i64, i64* %10, align 8
  %121 = load i64, i64* %9, align 8
  %122 = sub i64 0, %121
  %123 = sub i64 0, %120
  %124 = add i64 %122, %123
  %125 = sub i64 0, %124
  %126 = add nsw i64 %121, %120
  store i64 %125, i64* %9, align 8
  %127 = load i32, i32* @x.29
  %128 = load i32, i32* @y.30
  %129 = sub i32 %127, 473775944
  %130 = sub i32 %129, 1
  %131 = add i32 %130, 473775944
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = xor i1 %135, true
  %138 = xor i1 %136, true
  %139 = xor i1 true, true
  %140 = and i1 %137, true
  %141 = and i1 %135, %139
  %142 = and i1 %138, true
  %143 = and i1 %136, %139
  %144 = or i1 %140, %141
  %145 = or i1 %142, %143
  %146 = xor i1 %144, %145
  %147 = or i1 %137, %138
  %148 = xor i1 %147, true
  %149 = or i1 true, %139
  %150 = and i1 %148, %149
  %151 = or i1 %146, %150
  %152 = or i1 %135, %136
  %153 = select i1 %151, i32 -1136941589, i32 -836335800
  store i32 %153, i32* %13
  br label %298

; <label>:154:                                    ; preds = %14
  store i32 -177997441, i32* %13
  br label %298

; <label>:155:                                    ; preds = %14
  %156 = load i32, i32* @x.29
  %157 = load i32, i32* @y.30
  %158 = sub i32 %156, -852469563
  %159 = sub i32 %158, 1
  %160 = add i32 %159, -852469563
  %161 = sub i32 %156, 1
  %162 = mul i32 %156, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %157, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  %170 = select i1 %168, i32 -1340171366, i32 877803600
  store i32 %170, i32* %13
  br label %298

; <label>:171:                                    ; preds = %14
  %172 = load i32, i32* @x.29
  %173 = load i32, i32* @y.30
  %174 = sub i32 0, 1
  %175 = add i32 %172, %174
  %176 = sub i32 %172, 1
  %177 = mul i32 %172, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %173, 10
  %181 = xor i1 %179, true
  %182 = xor i1 %180, true
  %183 = xor i1 false, true
  %184 = and i1 %181, false
  %185 = and i1 %179, %183
  %186 = and i1 %182, false
  %187 = and i1 %180, %183
  %188 = or i1 %184, %185
  %189 = or i1 %186, %187
  %190 = xor i1 %188, %189
  %191 = or i1 %181, %182
  %192 = xor i1 %191, true
  %193 = or i1 false, %183
  %194 = and i1 %192, %193
  %195 = or i1 %190, %194
  %196 = or i1 %179, %180
  %197 = select i1 %195, i32 404582448, i32 877803600
  store i32 %197, i32* %13
  br label %298

; <label>:198:                                    ; preds = %14
  store i32 -2115754334, i32* %13
  br label %298

; <label>:199:                                    ; preds = %14
  %200 = load i32, i32* @x.29
  %201 = load i32, i32* @y.30
  %202 = sub i32 %200, 1620741816
  %203 = sub i32 %202, 1
  %204 = add i32 %203, 1620741816
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 true, true
  %213 = and i1 %210, true
  %214 = and i1 %208, %212
  %215 = and i1 %211, true
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 true, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  %226 = select i1 %224, i32 -579355226, i32 1244330268
  store i32 %226, i32* %13
  br label %298

; <label>:227:                                    ; preds = %14
  %228 = load i64, i64* %9, align 8
  store i64 %228, i64* %4
  %229 = load i32, i32* @x.29
  %230 = load i32, i32* @y.30
  %231 = add i32 %229, 1634906098
  %232 = sub i32 %231, 1
  %233 = sub i32 %232, 1634906098
  %234 = sub i32 %229, 1
  %235 = mul i32 %229, %233
  %236 = urem i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = icmp slt i32 %230, 10
  %239 = and i1 %237, %238
  %240 = xor i1 %237, %238
  %241 = or i1 %239, %240
  %242 = or i1 %237, %238
  %243 = select i1 %241, i32 1996487928, i32 1244330268
  store i32 %243, i32* %13
  br label %298

; <label>:244:                                    ; preds = %14
  %245 = load volatile i64, i64* %4
  ret i64 %245

; <label>:246:                                    ; preds = %14
  %247 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %248 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %247, i32 0, i32 2
  %249 = load volatile %struct.Dinic*, %struct.Dinic** %5
  %250 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %249, i32 0, i32 0
  %251 = load i32, i32* %250, align 8
  %252 = sext i32 %251 to i64
  store i32 0, i32* %11, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %248, i64 %252, i32* dereferenceable(4) %11)
  store i32 -716296199, i32* %13
  br label %298

; <label>:253:                                    ; preds = %14
  %254 = load i64, i64* %10, align 8
  %255 = load i64, i64* %9, align 8
  %256 = sub i64 0, -5591042859742930073
  %257 = sub i64 %256, %255
  %258 = add i64 %257, -5591042859742930073
  %259 = sub i64 0, %255
  %260 = add i64 %258, -6286526463073662171
  %261 = add i64 %260, %254
  %262 = sub i64 %261, -6286526463073662171
  %263 = add i64 %258, %254
  %264 = sub i64 %255, 2858346259924916141
  %265 = sub i64 %264, %254
  %266 = add i64 %265, 2858346259924916141
  %267 = sub i64 %255, %254
  %268 = mul i64 %266, %254
  %269 = shl i64 %255, %254
  %270 = add i64 0, 8967415774323689224
  %271 = sub i64 %270, %255
  %272 = sub i64 %271, 8967415774323689224
  %273 = sub i64 0, %255
  %274 = add i64 %272, 3727989143726046931
  %275 = add i64 %274, %254
  %276 = sub i64 %275, 3727989143726046931
  %277 = add i64 %272, %254
  %278 = add i64 0, 4165180492372715615
  %279 = sub i64 %278, %255
  %280 = sub i64 %279, 4165180492372715615
  %281 = sub i64 0, %255
  %282 = add i64 %280, -3873454224698045264
  %283 = add i64 %282, %254
  %284 = sub i64 %283, -3873454224698045264
  %285 = add i64 %280, %254
  %286 = shl i64 %255, %254
  %287 = sub i64 0, %254
  %288 = add i64 %255, %287
  %289 = sub i64 %255, %254
  %290 = mul i64 %288, %254
  %291 = shl i64 %255, %254
  %292 = sub i64 0, %254
  %293 = sub i64 %255, %292
  %294 = add nsw i64 %255, %254
  store i64 %293, i64* %9, align 8
  store i32 442847137, i32* %13
  br label %298

; <label>:295:                                    ; preds = %14
  store i32 -1340171366, i32* %13
  br label %298

; <label>:296:                                    ; preds = %14
  %297 = load i64, i64* %9, align 8
  store i32 -579355226, i32* %13
  br label %298

; <label>:298:                                    ; preds = %296, %295, %253, %246, %227, %199, %198, %171, %155, %154, %119, %92, %85, %84, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5DinicD2Ev(%struct.Dinic*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Dinic*, align 8
  store %struct.Dinic* %0, %struct.Dinic** %2, align 8
  %3 = load %struct.Dinic*, %struct.Dinic** %2, align 8
  %4 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 3
  call void @_ZN5GraphD2Ev(%struct.Graph* %4) #3
  %5 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 2
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %5) #3
  %6 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 1
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %6) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5GraphC2Ei(%struct.Graph*, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca i32, align 4
  %5 = alloca %"class.std::vector.8", align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store i32 %1, i32* %4, align 4
  %8 = load %struct.Graph*, %struct.Graph** %3, align 8
  %9 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.3"* %9) #3
  %10 = load i32, i32* %4, align 4
  %11 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 0
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 1
  %13 = getelementptr inbounds %struct.Graph, %struct.Graph* %8, i32 0, i32 0
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev(%"class.std::vector.8"* %5) #3
  invoke void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_(%"class.std::vector.3"* %12, i64 %15, %"class.std::vector.8"* dereferenceable(24) %5)
          to label %16 unwind label %17

; <label>:16:                                     ; preds = %2
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  ret void

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.33
  %19 = load i32, i32* @y.34
  %20 = sub i32 %18, 701699622
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 701699622
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %133

; <label>:44:                                     ; preds = %17, %133
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %6, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %7, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %9) #3
  %48 = load i32, i32* @x.33
  %49 = load i32, i32* @y.34
  %50 = sub i32 %48, 1526585424
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 1526585424
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %133

; <label>:74:                                     ; preds = %44
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.33
  %77 = load i32, i32* @y.34
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %137

; <label>:101:                                    ; preds = %75, %137
  %102 = load i8*, i8** %6, align 8
  %103 = load i32, i32* %7, align 4
  %104 = insertvalue { i8*, i32 } undef, i8* %102, 0
  %105 = insertvalue { i8*, i32 } %104, i32 %103, 1
  %106 = load i32, i32* @x.33
  %107 = load i32, i32* @y.34
  %108 = add i32 %106, 1391990794
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 1391990794
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  br i1 %130, label %132, label %137

; <label>:132:                                    ; preds = %101
  resume { i8*, i32 } %105

; <label>:133:                                    ; preds = %44, %17
  %134 = landingpad { i8*, i32 }
          cleanup
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %6, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %7, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %5) #3
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %9) #3
  br label %44

; <label>:137:                                    ; preds = %101, %75
  %138 = load i8*, i8** %6, align 8
  %139 = load i32, i32* %7, align 4
  %140 = insertvalue { i8*, i32 } undef, i8* %138, 0
  %141 = insertvalue { i8*, i32 } %140, i32 %139, 1
  br label %101
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEC2Ev(%"class.std::vector.3"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %48

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.35
  %7 = load i32, i32* @y.36
  %8 = add i32 %6, 138994314
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 138994314
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = and i1 %14, %15
  %17 = xor i1 %14, %15
  %18 = or i1 %16, %17
  %19 = or i1 %14, %15
  br i1 %18, label %20, label %105

; <label>:20:                                     ; preds = %5, %105
  %21 = load i32, i32* @x.35
  %22 = load i32, i32* @y.36
  %23 = add i32 %21, -171277993
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -171277993
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %105

; <label>:47:                                     ; preds = %20
  ret void

; <label>:48:                                     ; preds = %1
  %49 = load i32, i32* @x.35
  %50 = load i32, i32* @y.36
  %51 = sub i32 %49, -2058525049
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -2058525049
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %106

; <label>:75:                                     ; preds = %48, %106
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #11
  %78 = load i32, i32* @x.35
  %79 = load i32, i32* @y.36
  %80 = add i32 %78, -1101447551
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1101447551
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %106

; <label>:104:                                    ; preds = %75
  unreachable

; <label>:105:                                    ; preds = %20, %5
  br label %20

; <label>:106:                                    ; preds = %75, %48
  %107 = landingpad { i8*, i32 }
          catch i8* null
  %108 = extractvalue { i8*, i32 } %107, 0
  call void @__clang_call_terminate(i8* %108) #11
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6resizeEmRKS3_(%"class.std::vector.3"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector.3"*
  %8 = alloca %"class.std::vector.3"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca %"class.std::vector.8"*, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %8, align 8
  store i64 %1, i64* %9, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %10, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %8, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %7
  %15 = load i64, i64* %9, align 8
  store i64 %15, i64* %6
  %16 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %17 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %16) #3
  store i64 %17, i64* %5
  %18 = alloca i32
  store i32 -2075708999, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %249
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2075708999, label %22
    i32 1158024149, label %27
    i32 -2089921514, label %55
    i32 1310615597, label %98
    i32 1435801497, label %99
    i32 1778272914, label %114
    i32 -165939087, label %146
    i32 732601789, label %149
    i32 743399613, label %158
    i32 -1750368476, label %159
    i32 -2084008836, label %187
    i32 -518327040, label %214
    i32 -508235645, label %215
    i32 1884497059, label %243
    i32 -447127550, label %248
  ]

; <label>:21:                                     ; preds = %19
  br label %249

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %6
  %24 = load volatile i64, i64* %5
  %25 = icmp ugt i64 %23, %24
  %26 = select i1 %25, i32 1158024149, i32 1435801497
  store i32 %26, i32* %18
  br label %249

; <label>:27:                                     ; preds = %19
  %28 = load i32, i32* @x.37
  %29 = load i32, i32* @y.38
  %30 = sub i32 %28, -1244759563
  %31 = sub i32 %30, 1
  %32 = add i32 %31, -1244759563
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 -2089921514, i32 -508235645
  store i32 %54, i32* %18
  br label %249

; <label>:55:                                     ; preds = %19
  %56 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %57 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %56) #3
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %57, %"class.std::vector.8"** %58, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"* %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #3
  %59 = load i64, i64* %9, align 8
  %60 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %61 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %60) #3
  %62 = sub i64 0, %61
  %63 = add i64 %59, %62
  %64 = sub i64 %59, %61
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %66, align 8
  %68 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %69 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_(%"class.std::vector.3"* %68, %"class.std::vector.8"* %67, i64 %63, %"class.std::vector.8"* dereferenceable(24) %65)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %69, %"class.std::vector.8"** %70, align 8
  %71 = load i32, i32* @x.37
  %72 = load i32, i32* @y.38
  %73 = sub i32 %71, -667656734
  %74 = sub i32 %73, 1
  %75 = add i32 %74, -667656734
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 1310615597, i32 -508235645
  store i32 %97, i32* %18
  br label %249

; <label>:98:                                     ; preds = %19
  store i32 -1750368476, i32* %18
  br label %249

; <label>:99:                                     ; preds = %19
  %100 = load i32, i32* @x.37
  %101 = load i32, i32* @y.38
  %102 = sub i32 0, 1
  %103 = add i32 %100, %102
  %104 = sub i32 %100, 1
  %105 = mul i32 %100, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %101, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 1778272914, i32 1884497059
  store i32 %113, i32* %18
  br label %249

; <label>:114:                                    ; preds = %19
  %115 = load i64, i64* %9, align 8
  %116 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %117 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %116) #3
  %118 = icmp ult i64 %115, %117
  store i1 %118, i1* %4
  %119 = load i32, i32* @x.37
  %120 = load i32, i32* @y.38
  %121 = add i32 %119, -1253074729
  %122 = sub i32 %121, 1
  %123 = sub i32 %122, -1253074729
  %124 = sub i32 %119, 1
  %125 = mul i32 %119, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %120, 10
  %129 = xor i1 %127, true
  %130 = xor i1 %128, true
  %131 = xor i1 false, true
  %132 = and i1 %129, false
  %133 = and i1 %127, %131
  %134 = and i1 %130, false
  %135 = and i1 %128, %131
  %136 = or i1 %132, %133
  %137 = or i1 %134, %135
  %138 = xor i1 %136, %137
  %139 = or i1 %129, %130
  %140 = xor i1 %139, true
  %141 = or i1 false, %131
  %142 = and i1 %140, %141
  %143 = or i1 %138, %142
  %144 = or i1 %127, %128
  %145 = select i1 %143, i32 -165939087, i32 1884497059
  store i32 %145, i32* %18
  br label %249

; <label>:146:                                    ; preds = %19
  %147 = load volatile i1, i1* %4
  %148 = select i1 %147, i32 732601789, i32 743399613
  store i32 %148, i32* %18
  br label %249

; <label>:149:                                    ; preds = %19
  %150 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %151 = bitcast %"class.std::vector.3"* %150 to %"struct.std::_Vector_base.4"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %152, i32 0, i32 0
  %154 = load %"class.std::vector.8"*, %"class.std::vector.8"** %153, align 8
  %155 = load i64, i64* %9, align 8
  %156 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %154, i64 %155
  %157 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.3"* %157, %"class.std::vector.8"* %156) #3
  store i32 743399613, i32* %18
  br label %249

; <label>:158:                                    ; preds = %19
  store i32 -1750368476, i32* %18
  br label %249

; <label>:159:                                    ; preds = %19
  %160 = load i32, i32* @x.37
  %161 = load i32, i32* @y.38
  %162 = sub i32 %160, -1933264763
  %163 = sub i32 %162, 1
  %164 = add i32 %163, -1933264763
  %165 = sub i32 %160, 1
  %166 = mul i32 %160, %164
  %167 = urem i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = icmp slt i32 %161, 10
  %170 = xor i1 %168, true
  %171 = xor i1 %169, true
  %172 = xor i1 true, true
  %173 = and i1 %170, true
  %174 = and i1 %168, %172
  %175 = and i1 %171, true
  %176 = and i1 %169, %172
  %177 = or i1 %173, %174
  %178 = or i1 %175, %176
  %179 = xor i1 %177, %178
  %180 = or i1 %170, %171
  %181 = xor i1 %180, true
  %182 = or i1 true, %172
  %183 = and i1 %181, %182
  %184 = or i1 %179, %183
  %185 = or i1 %168, %169
  %186 = select i1 %184, i32 -2084008836, i32 -447127550
  store i32 %186, i32* %18
  br label %249

; <label>:187:                                    ; preds = %19
  %188 = load i32, i32* @x.37
  %189 = load i32, i32* @y.38
  %190 = sub i32 0, 1
  %191 = add i32 %188, %190
  %192 = sub i32 %188, 1
  %193 = mul i32 %188, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %189, 10
  %197 = xor i1 %195, true
  %198 = xor i1 %196, true
  %199 = xor i1 true, true
  %200 = and i1 %197, true
  %201 = and i1 %195, %199
  %202 = and i1 %198, true
  %203 = and i1 %196, %199
  %204 = or i1 %200, %201
  %205 = or i1 %202, %203
  %206 = xor i1 %204, %205
  %207 = or i1 %197, %198
  %208 = xor i1 %207, true
  %209 = or i1 true, %199
  %210 = and i1 %208, %209
  %211 = or i1 %206, %210
  %212 = or i1 %195, %196
  %213 = select i1 %211, i32 -518327040, i32 -447127550
  store i32 %213, i32* %18
  br label %249

; <label>:214:                                    ; preds = %19
  ret void

; <label>:215:                                    ; preds = %19
  %216 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %217 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %216) #3
  %218 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %217, %"class.std::vector.8"** %218, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"* %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12) #3
  %219 = load i64, i64* %9, align 8
  %220 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %221 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %220) #3
  %222 = sub i64 0, %221
  %223 = add i64 %219, %222
  %224 = sub i64 %219, %221
  %225 = mul i64 %223, %221
  %226 = sub i64 0, 8498617299453917527
  %227 = sub i64 %226, %219
  %228 = add i64 %227, 8498617299453917527
  %229 = sub i64 0, %219
  %230 = sub i64 %228, 1933232305403175030
  %231 = add i64 %230, %221
  %232 = add i64 %231, 1933232305403175030
  %233 = add i64 %228, %221
  %234 = sub i64 0, %221
  %235 = add i64 %219, %234
  %236 = sub i64 %219, %221
  %237 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %238 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  %239 = load %"class.std::vector.8"*, %"class.std::vector.8"** %238, align 8
  %240 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %241 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_(%"class.std::vector.3"* %240, %"class.std::vector.8"* %239, i64 %235, %"class.std::vector.8"* dereferenceable(24) %237)
  %242 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %241, %"class.std::vector.8"** %242, align 8
  store i32 -2089921514, i32* %18
  br label %249

; <label>:243:                                    ; preds = %19
  %244 = load i64, i64* %9, align 8
  %245 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %7
  %246 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %245) #3
  %247 = icmp ult i64 %244, %246
  store i32 1778272914, i32* %18
  br label %249

; <label>:248:                                    ; preds = %19
  store i32 -2084008836, i32* %18
  br label %249

; <label>:249:                                    ; preds = %248, %243, %215, %187, %159, %158, %149, %146, %114, %99, %98, %55, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2Ev(%"class.std::vector.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.41
  %3 = load i32, i32* @y.42
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %54

; <label>:15:                                     ; preds = %1, %54
  %16 = alloca %"class.std::vector.8"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %16, align 8
  %19 = load %"class.std::vector.8"*, %"class.std::vector.8"** %16, align 8
  %20 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %24 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %26, align 8
  %28 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  %29 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %28) #3
  %30 = load i32, i32* @x.41
  %31 = load i32, i32* @y.42
  %32 = add i32 %30, -308284685
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -308284685
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %54

; <label>:44:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %23, %"struct.Graph::edge"* %27, %"class.std::allocator.10"* dereferenceable(1) %29)
          to label %45 unwind label %47

; <label>:45:                                     ; preds = %44
  %46 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %46) #3
  ret void

; <label>:47:                                     ; preds = %44
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  store i8* %49, i8** %17, align 8
  %50 = extractvalue { i8*, i32 } %48, 1
  store i32 %50, i32* %18, align 4
  %51 = bitcast %"class.std::vector.8"* %19 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %51) #3
  br label %52

; <label>:52:                                     ; preds = %47
  %53 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %53) #11
  unreachable

; <label>:54:                                     ; preds = %15, %1
  %55 = alloca %"class.std::vector.8"*, align 8
  %56 = alloca i8*
  %57 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %55, align 8
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %55, align 8
  %59 = bitcast %"class.std::vector.8"* %58 to %"struct.std::_Vector_base.9"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %60, i32 0, i32 0
  %62 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %61, align 8
  %63 = bitcast %"class.std::vector.8"* %58 to %"struct.std::_Vector_base.9"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %65, align 8
  %67 = bitcast %"class.std::vector.8"* %58 to %"struct.std::_Vector_base.9"*
  %68 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %67) #3
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %6 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %14 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %15 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %9, %"class.std::vector.8"* %13, %"class.std::allocator.5"* dereferenceable(1) %15)
          to label %16 unwind label %18

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %17) #3
  ret void

; <label>:18:                                     ; preds = %1
  %19 = load i32, i32* @x.43
  %20 = load i32, i32* @y.44
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 false, true
  %31 = and i1 %28, false
  %32 = and i1 %26, %30
  %33 = and i1 %29, false
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 false, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %77

; <label>:44:                                     ; preds = %18, %77
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %3, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %4, align 4
  %48 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %48) #3
  %49 = load i32, i32* @x.43
  %50 = load i32, i32* @y.44
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %77

; <label>:74:                                     ; preds = %44
  br label %75

; <label>:75:                                     ; preds = %74
  %76 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %76) #11
  unreachable

; <label>:77:                                     ; preds = %44, %18
  %78 = landingpad { i8*, i32 }
          catch i8* null
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %3, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %4, align 4
  %81 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"* %81) #3
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #11
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEEC2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.55
  %6 = load i32, i32* @y.56
  %7 = sub i32 %5, 1822758841
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1822758841
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 834829801, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %147
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 834829801, label %19
    i32 1543994687, label %39
    i32 -1656609254, label %82
    i32 -1443468741, label %84
  ]

; <label>:18:                                     ; preds = %16
  br label %147

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1543994687, i32 -1443468741
  store i32 %38, i32* %15
  br label %147

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %46 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  %50 = ptrtoint %"class.std::vector.8"* %45 to i64
  %51 = ptrtoint %"class.std::vector.8"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.55
  %57 = load i32, i32* @y.56
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1656609254, i32 -1443468741
  store i32 %81, i32* %15
  br label %147

; <label>:82:                                     ; preds = %16
  %83 = load volatile i64, i64* %2
  ret i64 %83

; <label>:84:                                     ; preds = %16
  %85 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %85, align 8
  %86 = load %"class.std::vector.3"*, %"class.std::vector.3"** %85, align 8
  %87 = bitcast %"class.std::vector.3"* %86 to %"struct.std::_Vector_base.4"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %88, i32 0, i32 1
  %90 = load %"class.std::vector.8"*, %"class.std::vector.8"** %89, align 8
  %91 = bitcast %"class.std::vector.3"* %86 to %"struct.std::_Vector_base.4"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %92, i32 0, i32 0
  %94 = load %"class.std::vector.8"*, %"class.std::vector.8"** %93, align 8
  %95 = ptrtoint %"class.std::vector.8"* %90 to i64
  %96 = ptrtoint %"class.std::vector.8"* %94 to i64
  %97 = shl i64 %95, %96
  %98 = add i64 0, 1598813486973724107
  %99 = sub i64 %98, %95
  %100 = sub i64 %99, 1598813486973724107
  %101 = sub i64 0, %95
  %102 = sub i64 0, %100
  %103 = sub i64 0, %96
  %104 = add i64 %102, %103
  %105 = sub i64 0, %104
  %106 = add i64 %100, %96
  %107 = shl i64 %95, %96
  %108 = shl i64 %95, %96
  %109 = sub i64 0, %95
  %110 = add i64 0, %109
  %111 = sub i64 0, %95
  %112 = sub i64 %110, -6110416905224256575
  %113 = add i64 %112, %96
  %114 = add i64 %113, -6110416905224256575
  %115 = add i64 %110, %96
  %116 = sub i64 %95, -386088753348413113
  %117 = sub i64 %116, %96
  %118 = add i64 %117, -386088753348413113
  %119 = sub i64 %95, %96
  %120 = add i64 %118, -1778358882963327656
  %121 = sub i64 %120, 24
  %122 = sub i64 %121, -1778358882963327656
  %123 = sub i64 %118, 24
  %124 = mul i64 %122, 24
  %125 = sub i64 %118, 2364295924080584235
  %126 = sub i64 %125, 24
  %127 = add i64 %126, 2364295924080584235
  %128 = sub i64 %118, 24
  %129 = mul i64 %127, 24
  %130 = sub i64 0, -8593762374202651935
  %131 = sub i64 %130, %118
  %132 = add i64 %131, -8593762374202651935
  %133 = sub i64 0, %118
  %134 = add i64 %132, 5085455568934523923
  %135 = add i64 %134, 24
  %136 = sub i64 %135, 5085455568934523923
  %137 = add i64 %132, 24
  %138 = sub i64 0, 5514071643982613732
  %139 = sub i64 %138, %118
  %140 = add i64 %139, 5514071643982613732
  %141 = sub i64 0, %118
  %142 = sub i64 %140, -4670304334705563169
  %143 = add i64 %142, 24
  %144 = add i64 %143, -4670304334705563169
  %145 = add i64 %140, 24
  %146 = sdiv exact i64 %118, 24
  store i32 1543994687, i32* %15
  br label %147

; <label>:147:                                    ; preds = %84, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS3_S5_EEmRS8_(%"class.std::vector.3"*, %"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.8"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %6, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %15, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %2, i64* %8, align 8
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %9, align 8
  %16 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  %17 = call %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv(%"class.std::vector.3"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %17, %"class.std::vector.8"** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8) %11) #3
  store i64 %19, i64* %10, align 8
  %20 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %16) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"class.std::vector.8"* %20, %"class.std::vector.8"** %21, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %13, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"class.std::vector.8"* %23, %"class.std::vector.8"** %24, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(%"class.std::vector.3"* %16, %"class.std::vector.8"* %28, i64 %25, %"class.std::vector.8"* dereferenceable(24) %26)
  %29 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %16) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %14, i32 0, i32 0
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %30, align 8
  %31 = load i64, i64* %10, align 8
  %32 = call %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"* %14, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %32, %"class.std::vector.8"** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %34, align 8
  ret %"class.std::vector.8"* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %2, %"class.std::vector.8"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2IPS5_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISD_SC_EE7__valueES9_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %7) #3
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  store %"class.std::vector.8"* %9, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE15_M_erase_at_endEPS3_(%"class.std::vector.3"*, %"class.std::vector.8"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %7 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %9, align 8
  %11 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %6, %"class.std::vector.8"* %10, %"class.std::allocator.5"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %15 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.8"* %14, %"class.std::vector.8"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.63
  %20 = load i32, i32* @y.64
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %50

; <label>:32:                                     ; preds = %18, %50
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.63
  %36 = load i32, i32* @y.64
  %37 = add i32 %35, 2013707460
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 2013707460
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %50

; <label>:49:                                     ; preds = %32
  unreachable

; <label>:50:                                     ; preds = %32, %18
  %51 = landingpad { i8*, i32 }
          catch i8* null
  %52 = extractvalue { i8*, i32 } %51, 0
  call void @__clang_call_terminate(i8* %52) #11
  br label %32
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.13"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.65
  %7 = load i32, i32* @y.66
  %8 = sub i32 %6, -629050407
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -629050407
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2084600771, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %130
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2084600771, label %20
    i32 291587489, label %40
    i32 -919010712, label %83
    i32 -1026556364, label %85
  ]

; <label>:19:                                     ; preds = %17
  br label %130

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 291587489, i32 -1026556364
  store i32 %39, i32* %16
  br label %130

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %41, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %42, align 8
  %43 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %41, align 8
  %44 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %43) #3
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %46 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %42, align 8
  %47 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %46) #3
  %48 = load %"class.std::vector.8"*, %"class.std::vector.8"** %47, align 8
  %49 = ptrtoint %"class.std::vector.8"* %45 to i64
  %50 = ptrtoint %"class.std::vector.8"* %48 to i64
  %51 = sub i64 %49, 2841126203719777879
  %52 = sub i64 %51, %50
  %53 = add i64 %52, 2841126203719777879
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %3
  %56 = load i32, i32* @x.65
  %57 = load i32, i32* @y.66
  %58 = add i32 %56, 673903311
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 673903311
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 -919010712, i32 -1026556364
  store i32 %82, i32* %16
  br label %130

; <label>:83:                                     ; preds = %17
  %84 = load volatile i64, i64* %3
  ret i64 %84

; <label>:85:                                     ; preds = %17
  %86 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %86, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %1, %"class.__gnu_cxx::__normal_iterator.13"** %87, align 8
  %88 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %86, align 8
  %89 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %88) #3
  %90 = load %"class.std::vector.8"*, %"class.std::vector.8"** %89, align 8
  %91 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %87, align 8
  %92 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"* %91) #3
  %93 = load %"class.std::vector.8"*, %"class.std::vector.8"** %92, align 8
  %94 = ptrtoint %"class.std::vector.8"* %90 to i64
  %95 = ptrtoint %"class.std::vector.8"* %93 to i64
  %96 = sub i64 %94, 3320728336785564125
  %97 = sub i64 %96, %95
  %98 = add i64 %97, 3320728336785564125
  %99 = sub i64 %94, %95
  %100 = mul i64 %98, %95
  %101 = shl i64 %94, %95
  %102 = sub i64 0, 1457547204769940409
  %103 = sub i64 %102, %94
  %104 = add i64 %103, 1457547204769940409
  %105 = sub i64 0, %94
  %106 = sub i64 %104, 2829595416713522069
  %107 = add i64 %106, %95
  %108 = add i64 %107, 2829595416713522069
  %109 = add i64 %104, %95
  %110 = sub i64 0, 6802003050466974845
  %111 = sub i64 %110, %94
  %112 = add i64 %111, 6802003050466974845
  %113 = sub i64 0, %94
  %114 = sub i64 0, %95
  %115 = sub i64 %112, %114
  %116 = add i64 %112, %95
  %117 = sub i64 0, %95
  %118 = add i64 %94, %117
  %119 = sub i64 %94, %95
  %120 = sub i64 0, %118
  %121 = add i64 0, %120
  %122 = sub i64 0, %118
  %123 = sub i64 0, %121
  %124 = sub i64 0, 24
  %125 = add i64 %123, %124
  %126 = sub i64 0, %125
  %127 = add i64 %121, 24
  %128 = shl i64 %118, 24
  %129 = sdiv exact i64 %118, 24
  store i32 291587489, i32* %16
  br label %130

; <label>:130:                                    ; preds = %85, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE6cbeginEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.67
  %6 = load i32, i32* @y.68
  %7 = add i32 %5, 502453396
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 502453396
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 219469871, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 219469871, label %19
    i32 -413434480, label %39
    i32 1704789592, label %77
    i32 -1261590706, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -413434480, i32 -1261590706
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %46, align 8
  store %"class.std::vector.8"* %47, %"class.std::vector.8"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"* %40, %"class.std::vector.8"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %40, i32 0, i32 0
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  store %"class.std::vector.8"* %49, %"class.std::vector.8"** %2
  %50 = load i32, i32* @x.67
  %51 = load i32, i32* @y.68
  %52 = add i32 %50, -958135505
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -958135505
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1704789592, i32 -1261590706
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.13", align 8
  %81 = alloca %"class.std::vector.3"*, align 8
  %82 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %81, align 8
  %83 = load %"class.std::vector.3"*, %"class.std::vector.3"** %81, align 8
  %84 = bitcast %"class.std::vector.3"* %83 to %"struct.std::_Vector_base.4"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"class.std::vector.8"*, %"class.std::vector.8"** %86, align 8
  store %"class.std::vector.8"* %87, %"class.std::vector.8"** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"* %80, %"class.std::vector.8"** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %80, i32 0, i32 0
  %89 = load %"class.std::vector.8"*, %"class.std::vector.8"** %88, align 8
  store i32 -413434480, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS3_S5_EEmRKS3_(%"class.std::vector.3"*, %"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.std::vector.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::vector.8"*, align 8
  %9 = alloca %"class.std::vector.8", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %12 = alloca %"class.std::vector.8"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca %"class.std::vector.8"*, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %20, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"class.std::vector.8"* %3, %"class.std::vector.8"** %8, align 8
  %21 = load %"class.std::vector.3"*, %"class.std::vector.3"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %627

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %26, i32 0, i32 2
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %33 = ptrtoint %"class.std::vector.8"* %28 to i64
  %34 = ptrtoint %"class.std::vector.8"* %32 to i64
  %35 = sub i64 0, %34
  %36 = add i64 %33, %35
  %37 = sub i64 %33, %34
  %38 = sdiv exact i64 %36, 24
  %39 = load i64, i64* %7, align 8
  %40 = icmp uge i64 %38, %39
  br i1 %40, label %41, label %228

; <label>:41:                                     ; preds = %24
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %9, %"class.std::vector.8"* dereferenceable(24) %42)
  %43 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE3endEv(%"class.std::vector.3"* %21) #3
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %11, i32 0, i32 0
  store %"class.std::vector.8"* %43, %"class.std::vector.8"** %44, align 8
  %45 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  store i64 %45, i64* %10, align 8
  %46 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %47, i32 0, i32 1
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  store %"class.std::vector.8"* %49, %"class.std::vector.8"** %12, align 8
  %50 = load i64, i64* %10, align 8
  %51 = load i64, i64* %7, align 8
  %52 = icmp ugt i64 %50, %51
  br i1 %52, label %53, label %188

; <label>:53:                                     ; preds = %41
  %54 = load i32, i32* @x.69
  %55 = load i32, i32* @y.70
  %56 = sub i32 %54, -727544486
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -727544486
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 false, true
  %67 = and i1 %64, false
  %68 = and i1 %62, %66
  %69 = and i1 %65, false
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 false, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %667

; <label>:80:                                     ; preds = %53, %667
  %81 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %82, i32 0, i32 1
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %83, align 8
  %85 = load i64, i64* %7, align 8
  %86 = sub i64 0, 7870477374577491828
  %87 = sub i64 %86, %85
  %88 = add i64 %87, 7870477374577491828
  %89 = sub i64 0, %85
  %90 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %84, i64 %88
  %91 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %92 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %92, i32 0, i32 1
  %94 = load %"class.std::vector.8"*, %"class.std::vector.8"** %93, align 8
  %95 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %96 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %96, i32 0, i32 1
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %97, align 8
  %99 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %100 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %99) #3
  %101 = load i32, i32* @x.69
  %102 = load i32, i32* @y.70
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 false, true
  %113 = and i1 %110, false
  %114 = and i1 %108, %112
  %115 = and i1 %111, false
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 false, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %667

; <label>:126:                                    ; preds = %80
  %127 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %90, %"class.std::vector.8"* %94, %"class.std::vector.8"* %98, %"class.std::allocator.5"* dereferenceable(1) %100)
          to label %128 unwind label %184

; <label>:128:                                    ; preds = %126
  %129 = load i64, i64* %7, align 8
  %130 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %131, i32 0, i32 1
  %133 = load %"class.std::vector.8"*, %"class.std::vector.8"** %132, align 8
  %134 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %133, i64 %129
  store %"class.std::vector.8"* %134, %"class.std::vector.8"** %132, align 8
  %135 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %136 = load %"class.std::vector.8"*, %"class.std::vector.8"** %135, align 8
  %137 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %138 = load i64, i64* %7, align 8
  %139 = add i64 0, 3723770779034596917
  %140 = sub i64 %139, %138
  %141 = sub i64 %140, 3723770779034596917
  %142 = sub i64 0, %138
  %143 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %137, i64 %141
  %144 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %145 = invoke %"class.std::vector.8"* @_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"* %136, %"class.std::vector.8"* %143, %"class.std::vector.8"* %144)
          to label %146 unwind label %184

; <label>:146:                                    ; preds = %128
  %147 = load i32, i32* @x.69
  %148 = load i32, i32* @y.70
  %149 = add i32 %147, 1094637315
  %150 = sub i32 %149, 1
  %151 = sub i32 %150, 1094637315
  %152 = sub i32 %147, 1
  %153 = mul i32 %147, %151
  %154 = urem i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = icmp slt i32 %148, 10
  %157 = and i1 %155, %156
  %158 = xor i1 %155, %156
  %159 = or i1 %157, %158
  %160 = or i1 %155, %156
  br i1 %159, label %161, label %689

; <label>:161:                                    ; preds = %146, %689
  %162 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %163 = load %"class.std::vector.8"*, %"class.std::vector.8"** %162, align 8
  %164 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %165 = load %"class.std::vector.8"*, %"class.std::vector.8"** %164, align 8
  %166 = load i64, i64* %7, align 8
  %167 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %165, i64 %166
  %168 = load i32, i32* @x.69
  %169 = load i32, i32* @y.70
  %170 = add i32 %168, 313327132
  %171 = sub i32 %170, 1
  %172 = sub i32 %171, 313327132
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %689

; <label>:182:                                    ; preds = %161
  invoke void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"* %163, %"class.std::vector.8"* %167, %"class.std::vector.8"* dereferenceable(24) %9)
          to label %183 unwind label %184

; <label>:183:                                    ; preds = %182
  br label %227

; <label>:184:                                    ; preds = %216, %202, %188, %182, %128, %126
  %185 = landingpad { i8*, i32 }
          cleanup
  %186 = extractvalue { i8*, i32 } %185, 0
  store i8* %186, i8** %13, align 8
  %187 = extractvalue { i8*, i32 } %185, 1
  store i32 %187, i32* %14, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %9) #3
  br label %628

; <label>:188:                                    ; preds = %41
  %189 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %190 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %189, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %190, i32 0, i32 1
  %192 = load %"class.std::vector.8"*, %"class.std::vector.8"** %191, align 8
  %193 = load i64, i64* %7, align 8
  %194 = load i64, i64* %10, align 8
  %195 = add i64 %193, 4753605139965098848
  %196 = sub i64 %195, %194
  %197 = sub i64 %196, 4753605139965098848
  %198 = sub i64 %193, %194
  %199 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %200 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %199) #3
  %201 = invoke %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"* %192, i64 %197, %"class.std::vector.8"* dereferenceable(24) %9, %"class.std::allocator.5"* dereferenceable(1) %200)
          to label %202 unwind label %184

; <label>:202:                                    ; preds = %188
  %203 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %203, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %204, i32 0, i32 1
  store %"class.std::vector.8"* %201, %"class.std::vector.8"** %205, align 8
  %206 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %207 = load %"class.std::vector.8"*, %"class.std::vector.8"** %206, align 8
  %208 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  %209 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %210 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %210, i32 0, i32 1
  %212 = load %"class.std::vector.8"*, %"class.std::vector.8"** %211, align 8
  %213 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %214 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %213) #3
  %215 = invoke %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %207, %"class.std::vector.8"* %208, %"class.std::vector.8"* %212, %"class.std::allocator.5"* dereferenceable(1) %214)
          to label %216 unwind label %184

; <label>:216:                                    ; preds = %202
  %217 = load i64, i64* %10, align 8
  %218 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %219, i32 0, i32 1
  %221 = load %"class.std::vector.8"*, %"class.std::vector.8"** %220, align 8
  %222 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %221, i64 %217
  store %"class.std::vector.8"* %222, %"class.std::vector.8"** %220, align 8
  %223 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %224 = load %"class.std::vector.8"*, %"class.std::vector.8"** %223, align 8
  %225 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  invoke void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"* %224, %"class.std::vector.8"* %225, %"class.std::vector.8"* dereferenceable(24) %9)
          to label %226 unwind label %184

; <label>:226:                                    ; preds = %216
  br label %227

; <label>:227:                                    ; preds = %226, %183
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %9) #3
  br label %584

; <label>:228:                                    ; preds = %24
  %229 = load i64, i64* %7, align 8
  %230 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.3"* %21, i64 %229, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i32 0, i32 0))
  store i64 %230, i64* %15, align 8
  %231 = call %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"* %21) #3
  %232 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %17, i32 0, i32 0
  store %"class.std::vector.8"* %231, %"class.std::vector.8"** %232, align 8
  %233 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %17) #3
  store i64 %233, i64* %16, align 8
  %234 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %235 = load i64, i64* %15, align 8
  %236 = call %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"* %234, i64 %235)
  store %"class.std::vector.8"* %236, %"class.std::vector.8"** %18, align 8
  %237 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  store %"class.std::vector.8"* %237, %"class.std::vector.8"** %19, align 8
  %238 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %239 = load i64, i64* %16, align 8
  %240 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %238, i64 %239
  %241 = load i64, i64* %7, align 8
  %242 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %243 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %244 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %243) #3
  %245 = invoke %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"* %240, i64 %241, %"class.std::vector.8"* dereferenceable(24) %242, %"class.std::allocator.5"* dereferenceable(1) %244)
          to label %246 unwind label %366

; <label>:246:                                    ; preds = %228
  %247 = load i32, i32* @x.69
  %248 = load i32, i32* @y.70
  %249 = sub i32 %247, 39860470
  %250 = sub i32 %249, 1
  %251 = add i32 %250, 39860470
  %252 = sub i32 %247, 1
  %253 = mul i32 %247, %251
  %254 = urem i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = icmp slt i32 %248, 10
  %257 = xor i1 %255, true
  %258 = xor i1 %256, true
  %259 = xor i1 true, true
  %260 = and i1 %257, true
  %261 = and i1 %255, %259
  %262 = and i1 %258, true
  %263 = and i1 %256, %259
  %264 = or i1 %260, %261
  %265 = or i1 %262, %263
  %266 = xor i1 %264, %265
  %267 = or i1 %257, %258
  %268 = xor i1 %267, true
  %269 = or i1 true, %259
  %270 = and i1 %268, %269
  %271 = or i1 %266, %270
  %272 = or i1 %255, %256
  br i1 %271, label %273, label %696

; <label>:273:                                    ; preds = %246, %696
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %19, align 8
  %274 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %275, i32 0, i32 0
  %277 = load %"class.std::vector.8"*, %"class.std::vector.8"** %276, align 8
  %278 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %279 = load %"class.std::vector.8"*, %"class.std::vector.8"** %278, align 8
  %280 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %281 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %282 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %281) #3
  %283 = load i32, i32* @x.69
  %284 = load i32, i32* @y.70
  %285 = add i32 %283, -1802806679
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, -1802806679
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = xor i1 %291, true
  %294 = xor i1 %292, true
  %295 = xor i1 false, true
  %296 = and i1 %293, false
  %297 = and i1 %291, %295
  %298 = and i1 %294, false
  %299 = and i1 %292, %295
  %300 = or i1 %296, %297
  %301 = or i1 %298, %299
  %302 = xor i1 %300, %301
  %303 = or i1 %293, %294
  %304 = xor i1 %303, true
  %305 = or i1 false, %295
  %306 = and i1 %304, %305
  %307 = or i1 %302, %306
  %308 = or i1 %291, %292
  br i1 %307, label %309, label %696

; <label>:309:                                    ; preds = %273
  %310 = invoke %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %277, %"class.std::vector.8"* %279, %"class.std::vector.8"* %280, %"class.std::allocator.5"* dereferenceable(1) %282)
          to label %311 unwind label %366

; <label>:311:                                    ; preds = %309
  store %"class.std::vector.8"* %310, %"class.std::vector.8"** %19, align 8
  %312 = load i64, i64* %7, align 8
  %313 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %314 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %313, i64 %312
  store %"class.std::vector.8"* %314, %"class.std::vector.8"** %19, align 8
  %315 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %316 = load %"class.std::vector.8"*, %"class.std::vector.8"** %315, align 8
  %317 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %318, i32 0, i32 1
  %320 = load %"class.std::vector.8"*, %"class.std::vector.8"** %319, align 8
  %321 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %322 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %323 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %322) #3
  %324 = invoke %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"* %316, %"class.std::vector.8"* %320, %"class.std::vector.8"* %321, %"class.std::allocator.5"* dereferenceable(1) %323)
          to label %325 unwind label %366

; <label>:325:                                    ; preds = %311
  %326 = load i32, i32* @x.69
  %327 = load i32, i32* @y.70
  %328 = sub i32 0, 1
  %329 = add i32 %326, %328
  %330 = sub i32 %326, 1
  %331 = mul i32 %326, %329
  %332 = urem i32 %331, 2
  %333 = icmp eq i32 %332, 0
  %334 = icmp slt i32 %327, 10
  %335 = xor i1 %333, true
  %336 = xor i1 %334, true
  %337 = xor i1 true, true
  %338 = and i1 %335, true
  %339 = and i1 %333, %337
  %340 = and i1 %336, true
  %341 = and i1 %334, %337
  %342 = or i1 %338, %339
  %343 = or i1 %340, %341
  %344 = xor i1 %342, %343
  %345 = or i1 %335, %336
  %346 = xor i1 %345, true
  %347 = or i1 true, %337
  %348 = and i1 %346, %347
  %349 = or i1 %344, %348
  %350 = or i1 %333, %334
  br i1 %349, label %351, label %706

; <label>:351:                                    ; preds = %325, %706
  store %"class.std::vector.8"* %324, %"class.std::vector.8"** %19, align 8
  %352 = load i32, i32* @x.69
  %353 = load i32, i32* @y.70
  %354 = sub i32 0, 1
  %355 = add i32 %352, %354
  %356 = sub i32 %352, 1
  %357 = mul i32 %352, %355
  %358 = urem i32 %357, 2
  %359 = icmp eq i32 %358, 0
  %360 = icmp slt i32 %353, 10
  %361 = and i1 %359, %360
  %362 = xor i1 %359, %360
  %363 = or i1 %361, %362
  %364 = or i1 %359, %360
  br i1 %363, label %365, label %706

; <label>:365:                                    ; preds = %351
  br label %539

; <label>:366:                                    ; preds = %311, %309, %228
  %367 = landingpad { i8*, i32 }
          catch i8* null
  %368 = extractvalue { i8*, i32 } %367, 0
  store i8* %368, i8** %13, align 8
  %369 = extractvalue { i8*, i32 } %367, 1
  store i32 %369, i32* %14, align 4
  br label %370

; <label>:370:                                    ; preds = %366
  %371 = load i8*, i8** %13, align 8
  %372 = call i8* @__cxa_begin_catch(i8* %371) #3
  %373 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %374 = icmp ne %"class.std::vector.8"* %373, null
  br i1 %374, label %445, label %375

; <label>:375:                                    ; preds = %370
  %376 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %377 = load i64, i64* %16, align 8
  %378 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %376, i64 %377
  %379 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %380 = load i64, i64* %16, align 8
  %381 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %379, i64 %380
  %382 = load i64, i64* %7, align 8
  %383 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %381, i64 %382
  %384 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %385 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %384) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %378, %"class.std::vector.8"* %383, %"class.std::allocator.5"* dereferenceable(1) %385)
          to label %386 unwind label %387

; <label>:386:                                    ; preds = %375
  br label %491

; <label>:387:                                    ; preds = %537, %491, %489, %375
  %388 = load i32, i32* @x.69
  %389 = load i32, i32* @y.70
  %390 = add i32 %388, 1880134425
  %391 = sub i32 %390, 1
  %392 = sub i32 %391, 1880134425
  %393 = sub i32 %388, 1
  %394 = mul i32 %388, %392
  %395 = urem i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = icmp slt i32 %389, 10
  %398 = xor i1 %396, true
  %399 = xor i1 %397, true
  %400 = xor i1 false, true
  %401 = and i1 %398, false
  %402 = and i1 %396, %400
  %403 = and i1 %399, false
  %404 = and i1 %397, %400
  %405 = or i1 %401, %402
  %406 = or i1 %403, %404
  %407 = xor i1 %405, %406
  %408 = or i1 %398, %399
  %409 = xor i1 %408, true
  %410 = or i1 false, %400
  %411 = and i1 %409, %410
  %412 = or i1 %407, %411
  %413 = or i1 %396, %397
  br i1 %412, label %414, label %707

; <label>:414:                                    ; preds = %387, %707
  %415 = landingpad { i8*, i32 }
          cleanup
  %416 = extractvalue { i8*, i32 } %415, 0
  store i8* %416, i8** %13, align 8
  %417 = extractvalue { i8*, i32 } %415, 1
  store i32 %417, i32* %14, align 4
  %418 = load i32, i32* @x.69
  %419 = load i32, i32* @y.70
  %420 = add i32 %418, 1947021375
  %421 = sub i32 %420, 1
  %422 = sub i32 %421, 1947021375
  %423 = sub i32 %418, 1
  %424 = mul i32 %418, %422
  %425 = urem i32 %424, 2
  %426 = icmp eq i32 %425, 0
  %427 = icmp slt i32 %419, 10
  %428 = xor i1 %426, true
  %429 = xor i1 %427, true
  %430 = xor i1 true, true
  %431 = and i1 %428, true
  %432 = and i1 %426, %430
  %433 = and i1 %429, true
  %434 = and i1 %427, %430
  %435 = or i1 %431, %432
  %436 = or i1 %433, %434
  %437 = xor i1 %435, %436
  %438 = or i1 %428, %429
  %439 = xor i1 %438, true
  %440 = or i1 true, %430
  %441 = and i1 %439, %440
  %442 = or i1 %437, %441
  %443 = or i1 %426, %427
  br i1 %442, label %444, label %707

; <label>:444:                                    ; preds = %414
  invoke void @__cxa_end_catch()
          to label %538 unwind label %633

; <label>:445:                                    ; preds = %370
  %446 = load i32, i32* @x.69
  %447 = load i32, i32* @y.70
  %448 = sub i32 0, 1
  %449 = add i32 %446, %448
  %450 = sub i32 %446, 1
  %451 = mul i32 %446, %449
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %447, 10
  %455 = and i1 %453, %454
  %456 = xor i1 %453, %454
  %457 = or i1 %455, %456
  %458 = or i1 %453, %454
  br i1 %457, label %459, label %711

; <label>:459:                                    ; preds = %445, %711
  %460 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %461 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %462 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %463 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %462) #3
  %464 = load i32, i32* @x.69
  %465 = load i32, i32* @y.70
  %466 = sub i32 0, 1
  %467 = add i32 %464, %466
  %468 = sub i32 %464, 1
  %469 = mul i32 %464, %467
  %470 = urem i32 %469, 2
  %471 = icmp eq i32 %470, 0
  %472 = icmp slt i32 %465, 10
  %473 = xor i1 %471, true
  %474 = xor i1 %472, true
  %475 = xor i1 false, true
  %476 = and i1 %473, false
  %477 = and i1 %471, %475
  %478 = and i1 %474, false
  %479 = and i1 %472, %475
  %480 = or i1 %476, %477
  %481 = or i1 %478, %479
  %482 = xor i1 %480, %481
  %483 = or i1 %473, %474
  %484 = xor i1 %483, true
  %485 = or i1 false, %475
  %486 = and i1 %484, %485
  %487 = or i1 %482, %486
  %488 = or i1 %471, %472
  br i1 %487, label %489, label %711

; <label>:489:                                    ; preds = %459
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %460, %"class.std::vector.8"* %461, %"class.std::allocator.5"* dereferenceable(1) %463)
          to label %490 unwind label %387

; <label>:490:                                    ; preds = %489
  br label %491

; <label>:491:                                    ; preds = %490, %386
  %492 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %493 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %494 = load i64, i64* %15, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %492, %"class.std::vector.8"* %493, i64 %494)
          to label %495 unwind label %387

; <label>:495:                                    ; preds = %491
  %496 = load i32, i32* @x.69
  %497 = load i32, i32* @y.70
  %498 = add i32 %496, -957188690
  %499 = sub i32 %498, 1
  %500 = sub i32 %499, -957188690
  %501 = sub i32 %496, 1
  %502 = mul i32 %496, %500
  %503 = urem i32 %502, 2
  %504 = icmp eq i32 %503, 0
  %505 = icmp slt i32 %497, 10
  %506 = and i1 %504, %505
  %507 = xor i1 %504, %505
  %508 = or i1 %506, %507
  %509 = or i1 %504, %505
  br i1 %508, label %510, label %716

; <label>:510:                                    ; preds = %495, %716
  %511 = load i32, i32* @x.69
  %512 = load i32, i32* @y.70
  %513 = sub i32 %511, 2057189040
  %514 = sub i32 %513, 1
  %515 = add i32 %514, 2057189040
  %516 = sub i32 %511, 1
  %517 = mul i32 %511, %515
  %518 = urem i32 %517, 2
  %519 = icmp eq i32 %518, 0
  %520 = icmp slt i32 %512, 10
  %521 = xor i1 %519, true
  %522 = xor i1 %520, true
  %523 = xor i1 true, true
  %524 = and i1 %521, true
  %525 = and i1 %519, %523
  %526 = and i1 %522, true
  %527 = and i1 %520, %523
  %528 = or i1 %524, %525
  %529 = or i1 %526, %527
  %530 = xor i1 %528, %529
  %531 = or i1 %521, %522
  %532 = xor i1 %531, true
  %533 = or i1 true, %523
  %534 = and i1 %532, %533
  %535 = or i1 %530, %534
  %536 = or i1 %519, %520
  br i1 %535, label %537, label %716

; <label>:537:                                    ; preds = %510
  invoke void @__cxa_rethrow() #12
          to label %636 unwind label %387

; <label>:538:                                    ; preds = %444
  br label %628

; <label>:539:                                    ; preds = %365
  %540 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %541 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %540, i32 0, i32 0
  %542 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %541, i32 0, i32 0
  %543 = load %"class.std::vector.8"*, %"class.std::vector.8"** %542, align 8
  %544 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %545 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %544, i32 0, i32 0
  %546 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %545, i32 0, i32 1
  %547 = load %"class.std::vector.8"*, %"class.std::vector.8"** %546, align 8
  %548 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %549 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %548) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"* %543, %"class.std::vector.8"* %547, %"class.std::allocator.5"* dereferenceable(1) %549)
  %550 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %551 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %552 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %551, i32 0, i32 0
  %553 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %552, i32 0, i32 0
  %554 = load %"class.std::vector.8"*, %"class.std::vector.8"** %553, align 8
  %555 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %556 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %555, i32 0, i32 0
  %557 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %556, i32 0, i32 2
  %558 = load %"class.std::vector.8"*, %"class.std::vector.8"** %557, align 8
  %559 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %560 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %559, i32 0, i32 0
  %561 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %560, i32 0, i32 0
  %562 = load %"class.std::vector.8"*, %"class.std::vector.8"** %561, align 8
  %563 = ptrtoint %"class.std::vector.8"* %558 to i64
  %564 = ptrtoint %"class.std::vector.8"* %562 to i64
  %565 = sub i64 %563, -1098109441115995008
  %566 = sub i64 %565, %564
  %567 = add i64 %566, -1098109441115995008
  %568 = sub i64 %563, %564
  %569 = sdiv exact i64 %567, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %550, %"class.std::vector.8"* %554, i64 %569)
  %570 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %571 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %572 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %571, i32 0, i32 0
  %573 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %572, i32 0, i32 0
  store %"class.std::vector.8"* %570, %"class.std::vector.8"** %573, align 8
  %574 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %575 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %576 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %575, i32 0, i32 0
  %577 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %576, i32 0, i32 1
  store %"class.std::vector.8"* %574, %"class.std::vector.8"** %577, align 8
  %578 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %579 = load i64, i64* %15, align 8
  %580 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %578, i64 %579
  %581 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %582 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %581, i32 0, i32 0
  %583 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %582, i32 0, i32 2
  store %"class.std::vector.8"* %580, %"class.std::vector.8"** %583, align 8
  br label %584

; <label>:584:                                    ; preds = %539, %227
  %585 = load i32, i32* @x.69
  %586 = load i32, i32* @y.70
  %587 = add i32 %585, -354496972
  %588 = sub i32 %587, 1
  %589 = sub i32 %588, -354496972
  %590 = sub i32 %585, 1
  %591 = mul i32 %585, %589
  %592 = urem i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = icmp slt i32 %586, 10
  %595 = xor i1 %593, true
  %596 = xor i1 %594, true
  %597 = xor i1 true, true
  %598 = and i1 %595, true
  %599 = and i1 %593, %597
  %600 = and i1 %596, true
  %601 = and i1 %594, %597
  %602 = or i1 %598, %599
  %603 = or i1 %600, %601
  %604 = xor i1 %602, %603
  %605 = or i1 %595, %596
  %606 = xor i1 %605, true
  %607 = or i1 true, %597
  %608 = and i1 %606, %607
  %609 = or i1 %604, %608
  %610 = or i1 %593, %594
  br i1 %609, label %611, label %717

; <label>:611:                                    ; preds = %584, %717
  %612 = load i32, i32* @x.69
  %613 = load i32, i32* @y.70
  %614 = add i32 %612, 1186974502
  %615 = sub i32 %614, 1
  %616 = sub i32 %615, 1186974502
  %617 = sub i32 %612, 1
  %618 = mul i32 %612, %616
  %619 = urem i32 %618, 2
  %620 = icmp eq i32 %619, 0
  %621 = icmp slt i32 %613, 10
  %622 = and i1 %620, %621
  %623 = xor i1 %620, %621
  %624 = or i1 %622, %623
  %625 = or i1 %620, %621
  br i1 %624, label %626, label %717

; <label>:626:                                    ; preds = %611
  br label %627

; <label>:627:                                    ; preds = %626, %4
  ret void

; <label>:628:                                    ; preds = %538, %184
  %629 = load i8*, i8** %13, align 8
  %630 = load i32, i32* %14, align 4
  %631 = insertvalue { i8*, i32 } undef, i8* %629, 0
  %632 = insertvalue { i8*, i32 } %631, i32 %630, 1
  resume { i8*, i32 } %632

; <label>:633:                                    ; preds = %444
  %634 = landingpad { i8*, i32 }
          catch i8* null
  %635 = extractvalue { i8*, i32 } %634, 0
  call void @__clang_call_terminate(i8* %635) #11
  unreachable

; <label>:636:                                    ; preds = %537
  %637 = load i32, i32* @x.69
  %638 = load i32, i32* @y.70
  %639 = sub i32 %637, 764590618
  %640 = sub i32 %639, 1
  %641 = add i32 %640, 764590618
  %642 = sub i32 %637, 1
  %643 = mul i32 %637, %641
  %644 = urem i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = icmp slt i32 %638, 10
  %647 = and i1 %645, %646
  %648 = xor i1 %645, %646
  %649 = or i1 %647, %648
  %650 = or i1 %645, %646
  br i1 %649, label %651, label %718

; <label>:651:                                    ; preds = %636, %718
  %652 = load i32, i32* @x.69
  %653 = load i32, i32* @y.70
  %654 = sub i32 %652, 823435740
  %655 = sub i32 %654, 1
  %656 = add i32 %655, 823435740
  %657 = sub i32 %652, 1
  %658 = mul i32 %652, %656
  %659 = urem i32 %658, 2
  %660 = icmp eq i32 %659, 0
  %661 = icmp slt i32 %653, 10
  %662 = and i1 %660, %661
  %663 = xor i1 %660, %661
  %664 = or i1 %662, %663
  %665 = or i1 %660, %661
  br i1 %664, label %666, label %718

; <label>:666:                                    ; preds = %651
  unreachable

; <label>:667:                                    ; preds = %80, %53
  %668 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %669 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %668, i32 0, i32 0
  %670 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %669, i32 0, i32 1
  %671 = load %"class.std::vector.8"*, %"class.std::vector.8"** %670, align 8
  %672 = load i64, i64* %7, align 8
  %673 = shl i64 0, %672
  %674 = shl i64 0, %672
  %675 = sub i64 0, %672
  %676 = add i64 0, %675
  %677 = sub i64 0, %672
  %678 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %671, i64 %676
  %679 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %680 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %679, i32 0, i32 0
  %681 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %680, i32 0, i32 1
  %682 = load %"class.std::vector.8"*, %"class.std::vector.8"** %681, align 8
  %683 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %684 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %683, i32 0, i32 0
  %685 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %684, i32 0, i32 1
  %686 = load %"class.std::vector.8"*, %"class.std::vector.8"** %685, align 8
  %687 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %688 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %687) #3
  br label %80

; <label>:689:                                    ; preds = %161, %146
  %690 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %691 = load %"class.std::vector.8"*, %"class.std::vector.8"** %690, align 8
  %692 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %693 = load %"class.std::vector.8"*, %"class.std::vector.8"** %692, align 8
  %694 = load i64, i64* %7, align 8
  %695 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %693, i64 %694
  br label %161

; <label>:696:                                    ; preds = %273, %246
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %19, align 8
  %697 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %698 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %697, i32 0, i32 0
  %699 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %698, i32 0, i32 0
  %700 = load %"class.std::vector.8"*, %"class.std::vector.8"** %699, align 8
  %701 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %702 = load %"class.std::vector.8"*, %"class.std::vector.8"** %701, align 8
  %703 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %704 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %705 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %704) #3
  br label %273

; <label>:706:                                    ; preds = %351, %325
  store %"class.std::vector.8"* %324, %"class.std::vector.8"** %19, align 8
  br label %351

; <label>:707:                                    ; preds = %414, %387
  %708 = landingpad { i8*, i32 }
          cleanup
  %709 = extractvalue { i8*, i32 } %708, 0
  store i8* %709, i8** %13, align 8
  %710 = extractvalue { i8*, i32 } %708, 1
  store i32 %710, i32* %14, align 4
  br label %414

; <label>:711:                                    ; preds = %459, %445
  %712 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %713 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %714 = bitcast %"class.std::vector.3"* %21 to %"struct.std::_Vector_base.4"*
  %715 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %714) #3
  br label %459

; <label>:716:                                    ; preds = %510, %495
  br label %510

; <label>:717:                                    ; preds = %611, %584
  br label %611

; <label>:718:                                    ; preds = %651, %636
  br label %651
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE5beginEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.71
  %6 = load i32, i32* @y.72
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 2029666635, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 2029666635, label %18
    i32 302036909, label %38
    i32 1900560964, label %73
    i32 926852511, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 302036909, i32 926852511
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %40, align 8
  %41 = load %"class.std::vector.3"*, %"class.std::vector.3"** %40, align 8
  %42 = bitcast %"class.std::vector.3"* %41 to %"struct.std::_Vector_base.4"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %43, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %39, %"class.std::vector.8"** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %46 = load %"class.std::vector.8"*, %"class.std::vector.8"** %45, align 8
  store %"class.std::vector.8"* %46, %"class.std::vector.8"** %2
  %47 = load i32, i32* @x.71
  %48 = load i32, i32* @y.72
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1900560964, i32 926852511
  store i32 %72, i32* %14
  br label %84

; <label>:73:                                     ; preds = %15
  %74 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %74

; <label>:75:                                     ; preds = %15
  %76 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %77 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %77, align 8
  %78 = load %"class.std::vector.3"*, %"class.std::vector.3"** %77, align 8
  %79 = bitcast %"class.std::vector.3"* %78 to %"struct.std::_Vector_base.4"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %80, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %76, %"class.std::vector.8"** dereferenceable(8) %81) #3
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %76, i32 0, i32 0
  %83 = load %"class.std::vector.8"*, %"class.std::vector.8"** %82, align 8
  store i32 302036909, i32* %14
  br label %84

; <label>:84:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEplEl(%"class.__gnu_cxx::__normal_iterator"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %9, i64 %10
  store %"class.std::vector.8"* %11, %"class.std::vector.8"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"* %3, %"class.std::vector.8"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %12, align 8
  ret %"class.std::vector.8"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.13"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %3, i32 0, i32 0
  ret %"class.std::vector.8"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.13"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.77
  %6 = load i32, i32* @y.78
  %7 = add i32 %5, -1007218046
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1007218046
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 194689128, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 194689128, label %19
    i32 1871550036, label %27
    i32 -1086291013, label %60
    i32 -240598047, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1871550036, i32 -240598047
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %29 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %28, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %29, align 8
  %30 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %28, align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %29, align 8
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  store %"class.std::vector.8"* %33, %"class.std::vector.8"** %31, align 8
  %34 = load i32, i32* @x.77
  %35 = load i32, i32* @y.78
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1086291013, i32 -240598047
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.__gnu_cxx::__normal_iterator.13"*, align 8
  %63 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.13"* %0, %"class.__gnu_cxx::__normal_iterator.13"** %62, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator.13"*, %"class.__gnu_cxx::__normal_iterator.13"** %62, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.13", %"class.__gnu_cxx::__normal_iterator.13"* %64, i32 0, i32 0
  %66 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %63, align 8
  %67 = load %"class.std::vector.8"*, %"class.std::vector.8"** %66, align 8
  store %"class.std::vector.8"* %67, %"class.std::vector.8"** %65, align 8
  store i32 1871550036, i32* %15
  br label %68

; <label>:68:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::allocator.10", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %12) #3
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* sret %5, %"class.std::allocator.10"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"* %11, i64 %13, %"class.std::allocator.10"* dereferenceable(1) %5)
          to label %17 unwind label %80

; <label>:17:                                     ; preds = %2
  %18 = load i32, i32* @x.79
  %19 = load i32, i32* @y.80
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %19, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %94

; <label>:31:                                     ; preds = %17, %94
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %33 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %32) #3
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %33, %"struct.Graph::edge"** %34, align 8
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %36 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %35) #3
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %36, %"struct.Graph::edge"** %37, align 8
  %38 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %39 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %38, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %40, align 8
  %42 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %43 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %42) #3
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %45 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %46, align 8
  %48 = load i32, i32* @x.79
  %49 = load i32, i32* @y.80
  %50 = add i32 %48, 1732417103
  %51 = sub i32 %50, 1
  %52 = sub i32 %51, 1732417103
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %94

; <label>:74:                                     ; preds = %31
  %75 = invoke %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"* %45, %"struct.Graph::edge"* %47, %"struct.Graph::edge"* %41, %"class.std::allocator.10"* dereferenceable(1) %43)
          to label %76 unwind label %84

; <label>:76:                                     ; preds = %74
  %77 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %78, i32 0, i32 1
  store %"struct.Graph::edge"* %75, %"struct.Graph::edge"** %79, align 8
  ret void

; <label>:80:                                     ; preds = %2
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %6, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %7, align 4
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  br label %89

; <label>:84:                                     ; preds = %74
  %85 = landingpad { i8*, i32 }
          cleanup
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %6, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %7, align 4
  %88 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"* %88) #3
  br label %89

; <label>:89:                                     ; preds = %84, %80
  %90 = load i8*, i8** %6, align 8
  %91 = load i32, i32* %7, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %31, %17
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %5) #3
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %96 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %95) #3
  %97 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %96, %"struct.Graph::edge"** %97, align 8
  %98 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %99 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %98) #3
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %99, %"struct.Graph::edge"** %100, align 8
  %101 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %102, i32 0, i32 0
  %104 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %103, align 8
  %105 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %106 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %105) #3
  %107 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %108 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %107, align 8
  %109 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %110 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %109, align 8
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSC_SF_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.81
  %7 = load i32, i32* @y.82
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1473113551, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %110
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1473113551, label %19
    i32 935937037, label %39
    i32 -399460518, label %69
    i32 -816705190, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %110

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 935937037, i32 -816705190
  store i32 %38, i32* %15
  br label %110

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %40, align 8
  %43 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %42) #3
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %43, align 8
  %45 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %41, align 8
  %46 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %45) #3
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %46, align 8
  %48 = ptrtoint %"class.std::vector.8"* %44 to i64
  %49 = ptrtoint %"class.std::vector.8"* %47 to i64
  %50 = sub i64 0, %49
  %51 = add i64 %48, %50
  %52 = sub i64 %48, %49
  %53 = sdiv exact i64 %51, 24
  store i64 %53, i64* %3
  %54 = load i32, i32* @x.81
  %55 = load i32, i32* @y.82
  %56 = sub i32 %54, -1553830987
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -1553830987
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  %68 = select i1 %66, i32 -399460518, i32 -816705190
  store i32 %68, i32* %15
  br label %110

; <label>:69:                                     ; preds = %16
  %70 = load volatile i64, i64* %3
  ret i64 %70

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %73 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %72, align 8
  %75 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %74) #3
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %75, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %73, align 8
  %78 = call dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %77) #3
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %78, align 8
  %80 = ptrtoint %"class.std::vector.8"* %76 to i64
  %81 = ptrtoint %"class.std::vector.8"* %79 to i64
  %82 = sub i64 0, %81
  %83 = add i64 %80, %82
  %84 = sub i64 %80, %81
  %85 = shl i64 %83, 24
  %86 = sub i64 0, 182169501562580915
  %87 = sub i64 %86, %83
  %88 = add i64 %87, 182169501562580915
  %89 = sub i64 0, %83
  %90 = sub i64 0, %88
  %91 = sub i64 0, 24
  %92 = add i64 %90, %91
  %93 = sub i64 0, %92
  %94 = add i64 %88, 24
  %95 = add i64 %83, -9114105837383657929
  %96 = sub i64 %95, 24
  %97 = sub i64 %96, -9114105837383657929
  %98 = sub i64 %83, 24
  %99 = mul i64 %97, 24
  %100 = shl i64 %83, 24
  %101 = add i64 0, -6460178219932433410
  %102 = sub i64 %101, %83
  %103 = sub i64 %102, -6460178219932433410
  %104 = sub i64 0, %83
  %105 = add i64 %103, 3144905355166815977
  %106 = add i64 %105, 24
  %107 = sub i64 %106, 3144905355166815977
  %108 = add i64 %103, 24
  %109 = sdiv exact i64 %83, 24
  store i32 935937037, i32* %15
  br label %110

; <label>:110:                                    ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %13, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %15 = call %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %15, %"class.std::vector.8"** %16, align 8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %23 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"* %20, %"class.std::vector.8"* %22, %"class.std::vector.8"* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret %"class.std::vector.8"* %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt13move_backwardIPSt6vectorIN5Graph4edgeESaIS2_EES5_ET0_T_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %7)
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = call %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %9)
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %12 = call %"class.std::vector.8"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %8, %"class.std::vector.8"* %10, %"class.std::vector.8"* %11)
  ret %"class.std::vector.8"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.8"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"class.std::vector.8"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RKT0_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.91
  %7 = load i32, i32* @y.92
  %8 = add i32 %6, 355381646
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 355381646
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1505609499, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1505609499, label %20
    i32 1579410914, label %28
    i32 -1105351741, label %64
    i32 601482608, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1579410914, i32 601482608
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %31, align 8
  %32 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %33 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %32)
  %34 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %35 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %34)
  %36 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  call void @_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.8"* %33, %"class.std::vector.8"* %35, %"class.std::vector.8"* dereferenceable(24) %36)
  %37 = load i32, i32* @x.91
  %38 = load i32, i32* @y.92
  %39 = add i32 %37, -1243120172
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1243120172
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1105351741, i32 601482608
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::vector.8"*, align 8
  %67 = alloca %"class.std::vector.8"*, align 8
  %68 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %66, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %67, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %68, align 8
  %69 = load %"class.std::vector.8"*, %"class.std::vector.8"** %66, align 8
  %70 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %69)
  %71 = load %"class.std::vector.8"*, %"class.std::vector.8"** %67, align 8
  %72 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %71)
  %73 = load %"class.std::vector.8"*, %"class.std::vector.8"** %68, align 8
  call void @_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.8"* %70, %"class.std::vector.8"* %72, %"class.std::vector.8"* dereferenceable(24) %73)
  store i32 1579410914, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24), %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %12 = call %"class.std::vector.8"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.8"* %9, i64 %10, %"class.std::vector.8"* dereferenceable(24) %11)
  ret %"class.std::vector.8"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.3"*
  %9 = alloca %"class.std::vector.3"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.3"*, %"class.std::vector.3"** %9, align 8
  store %"class.std::vector.3"* %14, %"class.std::vector.3"** %8
  %15 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %16 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %15) #3
  %17 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %18 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %17) #3
  %19 = sub i64 0, %18
  %20 = add i64 %16, %19
  %21 = sub i64 %16, %18
  store i64 %20, i64* %7
  %22 = load i64, i64* %10, align 8
  store i64 %22, i64* %6
  %23 = alloca i32
  store i32 -1690394772, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %156
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 -1690394772, label %28
    i32 -1778791695, label %33
    i32 380226393, label %35
    i32 1012490015, label %51
    i32 156237788, label %57
    i32 -1406489471, label %85
    i32 -448869137, label %114
    i32 863746886, label %116
    i32 548739666, label %118
    i32 -622184403, label %134
    i32 -916116152, label %150
    i32 -1320079890, label %152
    i32 1840420649, label %155
  ]

; <label>:27:                                     ; preds = %25
  br label %156

; <label>:28:                                     ; preds = %25
  %29 = load volatile i64, i64* %7
  %30 = load volatile i64, i64* %6
  %31 = icmp ult i64 %29, %30
  %32 = select i1 %31, i32 -1778791695, i32 380226393
  store i32 %32, i32* %23
  br label %156

; <label>:33:                                     ; preds = %25
  %34 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %34) #12
  unreachable

; <label>:35:                                     ; preds = %25
  %36 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %37 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %36) #3
  %38 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %39 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %38) #3
  store i64 %39, i64* %13, align 8
  %40 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %37, 3200341363265248990
  %43 = add i64 %42, %41
  %44 = sub i64 %43, 3200341363265248990
  %45 = add i64 %37, %41
  store i64 %44, i64* %12, align 8
  %46 = load i64, i64* %12, align 8
  %47 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %48 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector.3"* %47) #3
  %49 = icmp ult i64 %46, %48
  %50 = select i1 %49, i32 156237788, i32 1012490015
  store i32 %50, i32* %23
  br label %156

; <label>:51:                                     ; preds = %25
  %52 = load i64, i64* %12, align 8
  %53 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %54 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %53) #3
  %55 = icmp ugt i64 %52, %54
  %56 = select i1 %55, i32 156237788, i32 863746886
  store i32 %56, i32* %23
  br label %156

; <label>:57:                                     ; preds = %25
  %58 = load i32, i32* @x.95
  %59 = load i32, i32* @y.96
  %60 = sub i32 %58, 2101684425
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 2101684425
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 true, true
  %71 = and i1 %68, true
  %72 = and i1 %66, %70
  %73 = and i1 %69, true
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 true, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1406489471, i32 -1320079890
  store i32 %84, i32* %23
  br label %156

; <label>:85:                                     ; preds = %25
  %86 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %87 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %86) #3
  store i64 %87, i64* %5
  %88 = load i32, i32* @x.95
  %89 = load i32, i32* @y.96
  %90 = sub i32 0, 1
  %91 = add i32 %88, %90
  %92 = sub i32 %88, 1
  %93 = mul i32 %88, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %89, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 false, true
  %100 = and i1 %97, false
  %101 = and i1 %95, %99
  %102 = and i1 %98, false
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 false, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  %113 = select i1 %111, i32 -448869137, i32 -1320079890
  store i32 %113, i32* %23
  br label %156

; <label>:114:                                    ; preds = %25
  store i32 548739666, i32* %23
  %115 = load volatile i64, i64* %5
  store i64 %115, i64* %24
  br label %156

; <label>:116:                                    ; preds = %25
  %117 = load i64, i64* %12, align 8
  store i32 548739666, i32* %23
  store i64 %117, i64* %24
  br label %156

; <label>:118:                                    ; preds = %25
  %119 = load i64, i64* %24
  store i64 %119, i64* %4
  %120 = load i32, i32* @x.95
  %121 = load i32, i32* @y.96
  %122 = sub i32 0, 1
  %123 = add i32 %120, %122
  %124 = sub i32 %120, 1
  %125 = mul i32 %120, %123
  %126 = urem i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = icmp slt i32 %121, 10
  %129 = and i1 %127, %128
  %130 = xor i1 %127, %128
  %131 = or i1 %129, %130
  %132 = or i1 %127, %128
  %133 = select i1 %131, i32 -622184403, i32 1840420649
  store i32 %133, i32* %23
  br label %156

; <label>:134:                                    ; preds = %25
  %135 = load i32, i32* @x.95
  %136 = load i32, i32* @y.96
  %137 = add i32 %135, 1787284476
  %138 = sub i32 %137, 1
  %139 = sub i32 %138, 1787284476
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -916116152, i32 1840420649
  store i32 %149, i32* %23
  br label %156

; <label>:150:                                    ; preds = %25
  %151 = load volatile i64, i64* %4
  ret i64 %151

; <label>:152:                                    ; preds = %25
  %153 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %8
  %154 = call i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"* %153) #3
  store i32 -1406489471, i32* %23
  br label %156

; <label>:155:                                    ; preds = %25
  store i32 -622184403, i32* %23
  br label %156

; <label>:156:                                    ; preds = %155, %152, %134, %118, %116, %114, %85, %57, %51, %35, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %8, %"struct.std::_Vector_base.4"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -2072481500, i32* %10
  %11 = alloca %"class.std::vector.8"*
  br label %12

; <label>:12:                                     ; preds = %2, %77
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -2072481500, label %15
    i32 1095534156, label %19
    i32 -274182573, label %46
    i32 1671871182, label %66
    i32 -1271287821, label %68
    i32 1696659326, label %69
    i32 1947222739, label %71
  ]

; <label>:14:                                     ; preds = %12
  br label %77

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1095534156, i32 -1271287821
  store i32 %18, i32* %10
  br label %77

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.97
  %21 = load i32, i32* @y.98
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -274182573, i32 1947222739
  store i32 %45, i32* %10
  br label %77

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %48 to %"class.std::allocator.5"*
  %50 = load i64, i64* %7, align 8
  %51 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1) %49, i64 %50)
  store %"class.std::vector.8"* %51, %"class.std::vector.8"** %3
  %52 = load i32, i32* @x.97
  %53 = load i32, i32* @y.98
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1671871182, i32 1947222739
  store i32 %65, i32* %10
  br label %77

; <label>:66:                                     ; preds = %12
  store i32 1696659326, i32* %10
  %67 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  store %"class.std::vector.8"* %67, %"class.std::vector.8"** %11
  br label %77

; <label>:68:                                     ; preds = %12
  store i32 1696659326, i32* %10
  store %"class.std::vector.8"* null, %"class.std::vector.8"** %11
  br label %77

; <label>:69:                                     ; preds = %12
  %70 = load %"class.std::vector.8"*, %"class.std::vector.8"** %11
  ret %"class.std::vector.8"* %70

; <label>:71:                                     ; preds = %12
  %72 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %73 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %72, i32 0, i32 0
  %74 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %73 to %"class.std::allocator.5"*
  %75 = load i64, i64* %7, align 8
  %76 = call %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1) %74, i64 %75)
  store i32 -274182573, i32* %10
  br label %77

; <label>:77:                                     ; preds = %71, %68, %66, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5Graph4edgeESaIS2_EES5_SaIS4_EET0_T_S8_S7_RT1_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %12 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %13, align 8
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %15 = call %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.8"* %15, %"class.std::vector.8"** %16, align 8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %23 = call %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"* %20, %"class.std::vector.8"* %22, %"class.std::vector.8"* %17, %"class.std::allocator.5"* dereferenceable(1) %18)
  ret %"class.std::vector.8"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %7, %"class.std::vector.8"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"*, %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca %"struct.std::_Vector_base.4"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %6, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %6, align 8
  store %"struct.std::_Vector_base.4"* %9, %"struct.std::_Vector_base.4"** %5
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %10, %"class.std::vector.8"** %4
  %11 = alloca i32
  store i32 -1891725703, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %86
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1891725703, label %15
    i32 -1899922276, label %19
    i32 285166618, label %46
    i32 1875634989, label %78
    i32 -1348894915, label %79
    i32 -1989392562, label %80
  ]

; <label>:14:                                     ; preds = %12
  br label %86

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %17 = icmp ne %"class.std::vector.8"* %16, null
  %18 = select i1 %17, i32 -1899922276, i32 -1348894915
  store i32 %18, i32* %11
  br label %86

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.103
  %21 = load i32, i32* @y.104
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 285166618, i32 -1989392562
  store i32 %45, i32* %11
  br label %86

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %48 to %"class.std::allocator.5"*
  %50 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %51 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1) %49, %"class.std::vector.8"* %50, i64 %51)
  %52 = load i32, i32* @x.103
  %53 = load i32, i32* @y.104
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1875634989, i32 -1989392562
  store i32 %77, i32* %11
  br label %86

; <label>:78:                                     ; preds = %12
  store i32 -1348894915, i32* %11
  br label %86

; <label>:79:                                     ; preds = %12
  ret void

; <label>:80:                                     ; preds = %12
  %81 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %82 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %81, i32 0, i32 0
  %83 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %82 to %"class.std::allocator.5"*
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %85 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1) %83, %"class.std::vector.8"* %84, i64 %85)
  store i32 285166618, i32* %11
  br label %86

; <label>:86:                                     ; preds = %80, %78, %46, %19, %15, %14
  br label %12
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.105
  %6 = load i32, i32* @y.106
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1498814321, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %99
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1498814321, label %18
    i32 -1488321370, label %38
    i32 1214493473, label %71
    i32 -50927244, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %99

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1488321370, i32 -50927244
  store i32 %37, i32* %14
  br label %99

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %39, align 8
  %40 = load %"class.std::vector.8"*, %"class.std::vector.8"** %39, align 8
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %47, align 8
  %49 = ptrtoint %"struct.Graph::edge"* %44 to i64
  %50 = ptrtoint %"struct.Graph::edge"* %48 to i64
  %51 = sub i64 %49, 7741970346608721918
  %52 = sub i64 %51, %50
  %53 = add i64 %52, 7741970346608721918
  %54 = sub i64 %49, %50
  %55 = sdiv exact i64 %53, 24
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.105
  %57 = load i32, i32* @y.106
  %58 = add i32 %56, 1018733691
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1018733691
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 1214493473, i32 -50927244
  store i32 %70, i32* %14
  br label %99

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %74, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %74, align 8
  %76 = bitcast %"class.std::vector.8"* %75 to %"struct.std::_Vector_base.9"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %77, i32 0, i32 1
  %79 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %78, align 8
  %80 = bitcast %"class.std::vector.8"* %75 to %"struct.std::_Vector_base.9"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %82, align 8
  %84 = ptrtoint %"struct.Graph::edge"* %79 to i64
  %85 = ptrtoint %"struct.Graph::edge"* %83 to i64
  %86 = shl i64 %84, %85
  %87 = sub i64 0, %84
  %88 = add i64 0, %87
  %89 = sub i64 0, %84
  %90 = sub i64 0, %85
  %91 = sub i64 %88, %90
  %92 = add i64 %88, %85
  %93 = shl i64 %84, %85
  %94 = sub i64 0, %85
  %95 = add i64 %84, %94
  %96 = sub i64 %84, %85
  %97 = shl i64 %95, 24
  %98 = sdiv exact i64 %95, 24
  store i32 -1488321370, i32* %14
  br label %99

; <label>:99:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5Graph4edgeEEE17_S_select_on_copyERKS3_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = sub i32 %5, -2109699726
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -2109699726
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -903059209, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -903059209, label %19
    i32 -607507328, label %39
    i32 1102938208, label %57
    i32 -243114656, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -607507328, i32 -243114656
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %40, align 8
  %41 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %40, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %41)
  %42 = load i32, i32* @x.107
  %43 = load i32, i32* @y.108
  %44 = add i32 %42, 653215716
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 653215716
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1102938208, i32 -243114656
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %59, align 8
  %60 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %59, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* sret %0, %"class.std::allocator.10"* dereferenceable(1) %60)
  store i32 -607507328, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.109
  %6 = load i32, i32* @y.110
  %7 = sub i32 %5, 635916673
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 635916673
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1598274539, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1598274539, label %19
    i32 -891476437, label %39
    i32 1789922492, label %59
    i32 1229956864, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -891476437, i32 1229956864
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %40, align 8
  %41 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %42 to %"class.std::allocator.10"*
  store %"class.std::allocator.10"* %43, %"class.std::allocator.10"** %2
  %44 = load i32, i32* @x.109
  %45 = load i32, i32* @y.110
  %46 = add i32 %44, -102593918
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, -102593918
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1789922492, i32 1229956864
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.10"*, %"class.std::allocator.10"** %2
  ret %"class.std::allocator.10"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %62, align 8
  %63 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %64 to %"class.std::allocator.10"*
  store i32 -891476437, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.9"*, i64, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.9"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, %"class.std::allocator.10"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"* %9, i64 %12)
          to label %13 unwind label %43

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.111
  %15 = load i32, i32* @y.112
  %16 = sub i32 %14, 1423634056
  %17 = sub i32 %16, 1
  %18 = add i32 %17, 1423634056
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %94

; <label>:28:                                     ; preds = %13, %94
  %29 = load i32, i32* @x.111
  %30 = load i32, i32* @y.112
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %94

; <label>:42:                                     ; preds = %28
  ret void

; <label>:43:                                     ; preds = %3
  %44 = load i32, i32* @x.111
  %45 = load i32, i32* @y.112
  %46 = sub i32 %44, 1622540211
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1622540211
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  br i1 %68, label %70, label %95

; <label>:70:                                     ; preds = %43, %95
  %71 = landingpad { i8*, i32 }
          cleanup
  %72 = extractvalue { i8*, i32 } %71, 0
  store i8* %72, i8** %7, align 8
  %73 = extractvalue { i8*, i32 } %71, 1
  store i32 %73, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10) #3
  %74 = load i32, i32* @x.111
  %75 = load i32, i32* @y.112
  %76 = add i32 %74, -862669132
  %77 = sub i32 %76, 1
  %78 = sub i32 %77, -862669132
  %79 = sub i32 %74, 1
  %80 = mul i32 %74, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %75, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %95

; <label>:88:                                     ; preds = %70
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i8*, i8** %7, align 8
  %91 = load i32, i32* %8, align 4
  %92 = insertvalue { i8*, i32 } undef, i8* %90, 0
  %93 = insertvalue { i8*, i32 } %92, i32 %91, 1
  resume { i8*, i32 } %93

; <label>:94:                                     ; preds = %28, %13
  br label %28

; <label>:95:                                     ; preds = %70, %43
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %7, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10) #3
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.115
  %9 = load i32, i32* @y.116
  %10 = sub i32 %8, 779254917
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 779254917
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 288799591, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 288799591, label %22
    i32 884156016, label %30
    i32 1929538448, label %76
    i32 -305100983, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 884156016, i32 -305100983
  store i32 %29, i32* %18
  br label %97

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %33 = alloca %"struct.Graph::edge"*, align 8
  %34 = alloca %"class.std::allocator.10"*, align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %36 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %31, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %32, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %38, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %33, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %34, align 8
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %35 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %36 to i8*
  %42 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %33, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %35, i32 0, i32 0
  %45 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %44, align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %36, i32 0, i32 0
  %47 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %46, align 8
  %48 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %45, %"struct.Graph::edge"* %47, %"struct.Graph::edge"* %43)
  store %"struct.Graph::edge"* %48, %"struct.Graph::edge"** %5
  %49 = load i32, i32* @x.115
  %50 = load i32, i32* @y.116
  %51 = sub i32 %49, 559130457
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 559130457
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1929538448, i32 -305100983
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %5
  ret %"struct.Graph::edge"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %81 = alloca %"struct.Graph::edge"*, align 8
  %82 = alloca %"class.std::allocator.10"*, align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %84 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %79, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %85, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %80, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %86, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %81, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %82, align 8
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %83 to i8*
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %84 to i8*
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %81, align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %83, i32 0, i32 0
  %93 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %92, align 8
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %84, i32 0, i32 0
  %95 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %94, align 8
  %96 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %93, %"struct.Graph::edge"* %95, %"struct.Graph::edge"* %91)
  store i32 884156016, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %30, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.117
  %6 = load i32, i32* @y.118
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1713607430, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %89
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1713607430, label %18
    i32 -925311300, label %38
    i32 -473445327, label %76
    i32 906625133, label %78
  ]

; <label>:17:                                     ; preds = %15
  br label %89

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -925311300, i32 906625133
  store i32 %37, i32* %14
  br label %89

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %40 = alloca %"class.std::vector.8"*, align 8
  %41 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %43 = bitcast %"class.std::vector.8"* %42 to %"struct.std::_Vector_base.9"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %45, align 8
  store %"struct.Graph::edge"* %46, %"struct.Graph::edge"** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %39, %"struct.Graph::edge"** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %39, i32 0, i32 0
  %48 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %47, align 8
  store %"struct.Graph::edge"* %48, %"struct.Graph::edge"** %2
  %49 = load i32, i32* @x.117
  %50 = load i32, i32* @y.118
  %51 = sub i32 %49, 1374846856
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1374846856
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -473445327, i32 906625133
  store i32 %75, i32* %14
  br label %89

; <label>:76:                                     ; preds = %15
  %77 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %77

; <label>:78:                                     ; preds = %15
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %80 = alloca %"class.std::vector.8"*, align 8
  %81 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %80, align 8
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %80, align 8
  %83 = bitcast %"class.std::vector.8"* %82 to %"struct.std::_Vector_base.9"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %85, align 8
  store %"struct.Graph::edge"* %86, %"struct.Graph::edge"** %81, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %79, %"struct.Graph::edge"** dereferenceable(8) %81) #3
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %79, i32 0, i32 0
  %88 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %87, align 8
  store i32 -925311300, i32* %14
  br label %89

; <label>:89:                                     ; preds = %78, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  store %"struct.Graph::edge"* %9, %"struct.Graph::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"* %2, %"struct.Graph::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %3 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %4 to %"class.std::allocator.10"*
  ret %"class.std::allocator.10"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EED2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.9"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %2, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = ptrtoint %"struct.Graph::edge"* %11 to i64
  %16 = ptrtoint %"struct.Graph::edge"* %14 to i64
  %17 = sub i64 %15, -8566815435169561865
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -8566815435169561865
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %5, %"struct.Graph::edge"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.123
  %26 = load i32, i32* @y.124
  %27 = sub i32 %25, 317533579
  %28 = sub i32 %27, 1
  %29 = add i32 %28, 317533579
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %72

; <label>:39:                                     ; preds = %24, %72
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %3, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %4, align 4
  %43 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %43) #3
  %44 = load i32, i32* @x.123
  %45 = load i32, i32* @y.124
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %72

; <label>:69:                                     ; preds = %39
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #11
  unreachable

; <label>:72:                                     ; preds = %39, %24
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %76) #3
  br label %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.10"* noalias sret, %"class.std::allocator.10"* dereferenceable(1)) #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %3, align 8
  %4 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"* %6, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.129
  %6 = load i32, i32* @y.130
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 639168398, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 639168398, label %18
    i32 -1668925961, label %26
    i32 -1153136008, label %56
    i32 -1822325116, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1668925961, i32 -1822325116
  store i32 %25, i32* %14
  br label %61

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %28 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %28, align 8
  %29 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %27, align 8
  %30 = load i32, i32* @x.129
  %31 = load i32, i32* @y.130
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1153136008, i32 -1822325116
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %59 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %58, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %1, %"class.__gnu_cxx::new_allocator.11"** %59, align 8
  %60 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %58, align 8
  store i32 -1668925961, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.131
  %6 = load i32, i32* @y.132
  %7 = sub i32 %5, -1820045257
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1820045257
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -268792967, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -268792967, label %19
    i32 -301542341, label %27
    i32 786455511, label %62
    i32 344129296, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -301542341, i32 344129296
  store i32 %26, i32* %15
  br label %72

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %29, align 8
  %30 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %30 to %"class.std::allocator.10"*
  %32 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %29, align 8
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %31, %"class.std::allocator.10"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %30, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %30, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %30, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %35, align 8
  %36 = load i32, i32* @x.131
  %37 = load i32, i32* @y.132
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 786455511, i32 344129296
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %65 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %64, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %65, align 8
  %66 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %64, align 8
  %67 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %66 to %"class.std::allocator.10"*
  %68 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %65, align 8
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %67, %"class.std::allocator.10"* dereferenceable(1) %68) #3
  %69 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %66, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %66, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %70, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %66, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %71, align 8
  store i32 -301542341, i32* %15
  br label %72

; <label>:72:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %7, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Graph::edge"* %12, %"struct.Graph::edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Graph::edge"* %19, %"struct.Graph::edge"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.137
  %10 = load i32, i32* @y.138
  %11 = sub i32 %9, -731904178
  %12 = sub i32 %11, 1
  %13 = add i32 %12, -731904178
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 2063553201, i32* %19
  %20 = alloca %"struct.Graph::edge"*
  br label %21

; <label>:21:                                     ; preds = %2, %138
  %22 = load i32, i32* %19
  switch i32 %22, label %23 [
    i32 2063553201, label %24
    i32 1847025109, label %32
    i32 -559301102, label %67
    i32 -563593481, label %70
    i32 -522700535, label %86
    i32 -2074875197, label %120
    i32 727605621, label %122
    i32 628955204, label %123
    i32 475212856, label %125
    i32 1531176457, label %131
  ]

; <label>:23:                                     ; preds = %21
  br label %138

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %8
  %26 = load volatile i1, i1* %7
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 1847025109, i32 475212856
  store i32 %31, i32* %19
  br label %138

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base.9"*, align 8
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %33, align 8
  %35 = load volatile i64*, i64** %6
  store i64 %1, i64* %35, align 8
  %36 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %33, align 8
  store %"struct.std::_Vector_base.9"* %36, %"struct.std::_Vector_base.9"** %5
  %37 = load volatile i64*, i64** %6
  %38 = load i64, i64* %37, align 8
  %39 = icmp ne i64 %38, 0
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.137
  %41 = load i32, i32* @y.138
  %42 = add i32 %40, -929352872
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -929352872
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -559301102, i32 475212856
  store i32 %66, i32* %19
  br label %138

; <label>:67:                                     ; preds = %21
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 -563593481, i32 727605621
  store i32 %69, i32* %19
  br label %138

; <label>:70:                                     ; preds = %21
  %71 = load i32, i32* @x.137
  %72 = load i32, i32* @y.138
  %73 = add i32 %71, 1191067991
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 1191067991
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -522700535, i32 1531176457
  store i32 %85, i32* %19
  br label %138

; <label>:86:                                     ; preds = %21
  %87 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %88 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %88 to %"class.std::allocator.10"*
  %90 = load volatile i64*, i64** %6
  %91 = load i64, i64* %90, align 8
  %92 = call %"struct.Graph::edge"* @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1) %89, i64 %91)
  store %"struct.Graph::edge"* %92, %"struct.Graph::edge"** %3
  %93 = load i32, i32* @x.137
  %94 = load i32, i32* @y.138
  %95 = add i32 %93, -613448366
  %96 = sub i32 %95, 1
  %97 = sub i32 %96, -613448366
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 -2074875197, i32 1531176457
  store i32 %119, i32* %19
  br label %138

; <label>:120:                                    ; preds = %21
  store i32 628955204, i32* %19
  %121 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %3
  store %"struct.Graph::edge"* %121, %"struct.Graph::edge"** %20
  br label %138

; <label>:122:                                    ; preds = %21
  store i32 628955204, i32* %19
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %20
  br label %138

; <label>:123:                                    ; preds = %21
  %124 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %20
  ret %"struct.Graph::edge"* %124

; <label>:125:                                    ; preds = %21
  %126 = alloca %"struct.std::_Vector_base.9"*, align 8
  %127 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %126, align 8
  store i64 %1, i64* %127, align 8
  %128 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %126, align 8
  %129 = load i64, i64* %127, align 8
  %130 = icmp ne i64 %129, 0
  store i32 1847025109, i32* %19
  br label %138

; <label>:131:                                    ; preds = %21
  %132 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %133 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %132, i32 0, i32 0
  %134 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %133 to %"class.std::allocator.10"*
  %135 = load volatile i64*, i64** %6
  %136 = load i64, i64* %135, align 8
  %137 = call %"struct.Graph::edge"* @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1) %134, i64 %136)
  store i32 -522700535, i32* %19
  br label %138

; <label>:138:                                    ; preds = %131, %125, %122, %120, %86, %70, %67, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8allocateERS2_m(%"class.std::allocator.10"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"* %6, i64 %7, i8* null)
  ret %"struct.Graph::edge"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.11"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.141
  %9 = load i32, i32* @y.142
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1846264433, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %153
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1846264433, label %21
    i32 752836044, label %41
    i32 798303966, label %78
    i32 54798321, label %81
    i32 1978199919, label %109
    i32 34213946, label %137
    i32 1288866200, label %138
    i32 70744676, label %144
    i32 1600524878, label %152
  ]

; <label>:20:                                     ; preds = %18
  br label %153

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 752836044, i32 70744676
  store i32 %40, i32* %17
  br label %153

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %43 = alloca i64, align 8
  store i64* %43, i64** %5
  %44 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %42, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  store i8* %2, i8** %44, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %42, align 8
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %46) #3
  %50 = icmp ugt i64 %48, %49
  store i1 %50, i1* %4
  %51 = load i32, i32* @x.141
  %52 = load i32, i32* @y.142
  %53 = add i32 %51, -2101606204
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -2101606204
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 798303966, i32 70744676
  store i32 %77, i32* %17
  br label %153

; <label>:78:                                     ; preds = %18
  %79 = load volatile i1, i1* %4
  %80 = select i1 %79, i32 54798321, i32 1288866200
  store i32 %80, i32* %17
  br label %153

; <label>:81:                                     ; preds = %18
  %82 = load i32, i32* @x.141
  %83 = load i32, i32* @y.142
  %84 = add i32 %82, -371959182
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -371959182
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  %108 = select i1 %106, i32 1978199919, i32 1600524878
  store i32 %108, i32* %17
  br label %153

; <label>:109:                                    ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  %110 = load i32, i32* @x.141
  %111 = load i32, i32* @y.142
  %112 = add i32 %110, -1742208229
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1742208229
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  %136 = select i1 %134, i32 34213946, i32 1600524878
  store i32 %136, i32* %17
  br label %153

; <label>:137:                                    ; preds = %18
  unreachable

; <label>:138:                                    ; preds = %18
  %139 = load volatile i64*, i64** %5
  %140 = load i64, i64* %139, align 8
  %141 = mul i64 %140, 24
  %142 = call i8* @_Znwm(i64 %141)
  %143 = bitcast i8* %142 to %"struct.Graph::edge"*
  ret %"struct.Graph::edge"* %143

; <label>:144:                                    ; preds = %18
  %145 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %146 = alloca i64, align 8
  %147 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %145, align 8
  store i64 %1, i64* %146, align 8
  store i8* %2, i8** %147, align 8
  %148 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %145, align 8
  %149 = load i64, i64* %146, align 8
  %150 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %148) #3
  %151 = icmp ugt i64 %149, %150
  store i32 752836044, i32* %17
  br label %153

; <label>:152:                                    ; preds = %18
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1978199919, i32* %17
  br label %153

; <label>:153:                                    ; preds = %152, %144, %109, %81, %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #7

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %11, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %19, align 8
  %21 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::edge"* %18, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %16)
  ret %"struct.Graph::edge"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"* %17, %"struct.Graph::edge"* %19, %"struct.Graph::edge"* %15)
  ret %"struct.Graph::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  %17 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %16)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %17, %"struct.Graph::edge"** %18, align 8
  %19 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %19, i8* %20, i64 8, i32 8, i1 false)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %23 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %22)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %23, %"struct.Graph::edge"** %24, align 8
  %25 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %26 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %27 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %26, align 8
  %28 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %28, align 8
  %30 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Graph::edge"* %27, %"struct.Graph::edge"* %29, %"struct.Graph::edge"* %25)
  ret %"struct.Graph::edge"* %30
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_ET1_T0_SC_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %7, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %19)
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %21)
  %23 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"* %15, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %22)
  ret %"struct.Graph::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.155
  %6 = load i32, i32* @y.156
  %7 = sub i32 %5, -847451897
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -847451897
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -812441402, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -812441402, label %19
    i32 -989593786, label %27
    i32 -438446912, label %55
    i32 -2024468187, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -989593786, i32 -2024468187
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %29, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %31, align 8
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %30 to i8*
  %33 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %32, i8* %33, i64 8, i32 8, i1 false)
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %30, i32 0, i32 0
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %34, align 8
  %36 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  store %"struct.Graph::edge"* %36, %"struct.Graph::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %28, i32 0, i32 0
  %39 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %38, align 8
  store %"struct.Graph::edge"* %39, %"struct.Graph::edge"** %2
  %40 = load i32, i32* @x.155
  %41 = load i32, i32* @y.156
  %42 = sub i32 %40, 117323037
  %43 = sub i32 %42, 1
  %44 = add i32 %43, 117323037
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 -438446912, i32 -2024468187
  store i32 %54, i32* %15
  br label %70

; <label>:55:                                     ; preds = %16
  %56 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %56

; <label>:57:                                     ; preds = %16
  %58 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %59 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %59, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %61, align 8
  %62 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %60 to i8*
  %63 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %62, i8* %63, i64 8, i32 8, i1 false)
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %60, i32 0, i32 0
  %65 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %64, align 8
  %66 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"* %65)
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %58, i32 0, i32 0
  store %"struct.Graph::edge"* %66, %"struct.Graph::edge"** %67, align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %58, i32 0, i32 0
  %69 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %68, align 8
  store i32 -989593786, i32* %15
  br label %70

; <label>:70:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Graph::edge"* %8)
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.161
  %6 = load i32, i32* @y.162
  %7 = add i32 %5, -2132113260
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2132113260
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -579989843, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -579989843, label %19
    i32 768856250, label %39
    i32 -196759193, label %70
    i32 518128413, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 768856250, i32 518128413
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %40, align 8
  %41 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %40, align 8
  %42 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %41)
  store %"struct.Graph::edge"* %42, %"struct.Graph::edge"** %2
  %43 = load i32, i32* @x.161
  %44 = load i32, i32* @y.162
  %45 = sub i32 %43, 1042825485
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1042825485
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -196759193, i32 518128413
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %73, align 8
  %74 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %73, align 8
  %75 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %74)
  store i32 768856250, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #4 comdat align 2 {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca i64
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"struct.Graph::edge"*, align 8
  %9 = alloca i64, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %8, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = ptrtoint %"struct.Graph::edge"* %10 to i64
  %13 = ptrtoint %"struct.Graph::edge"* %11 to i64
  %14 = sub i64 %12, -7695853988305632572
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -7695853988305632572
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -663568397, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -663568397, label %24
    i32 1656922430, label %28
    i32 -349297812, label %35
    i32 2036015692, label %63
    i32 569614313, label %94
    i32 -1663201081, label %96
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1656922430, i32 -349297812
  store i32 %27, i32* %20
  br label %100

; <label>:28:                                     ; preds = %21
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  %30 = bitcast %"struct.Graph::edge"* %29 to i8*
  %31 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %32 = bitcast %"struct.Graph::edge"* %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 24, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 -349297812, i32* %20
  br label %100

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.163
  %37 = load i32, i32* @y.164
  %38 = add i32 %36, 417810113
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 417810113
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 2036015692, i32 -1663201081
  store i32 %62, i32* %20
  br label %100

; <label>:63:                                     ; preds = %21
  %64 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %64, i64 %65
  store %"struct.Graph::edge"* %66, %"struct.Graph::edge"** %4
  %67 = load i32, i32* @x.163
  %68 = load i32, i32* @y.164
  %69 = add i32 %67, 626757220
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 626757220
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 569614313, i32 -1663201081
  store i32 %93, i32* %20
  br label %100

; <label>:94:                                     ; preds = %21
  %95 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  ret %"struct.Graph::edge"* %95

; <label>:96:                                     ; preds = %21
  %97 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %97, i64 %98
  store i32 2036015692, i32* %20
  br label %100

; <label>:100:                                    ; preds = %96, %63, %35, %28, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES9_(%"struct.Graph::edge"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"* %2) #3
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.14"*) #4 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.167
  %6 = load i32, i32* @y.168
  %7 = sub i32 %5, -1351956026
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1351956026
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2104447597, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2104447597, label %19
    i32 -1913026046, label %27
    i32 -1197222246, label %58
    i32 -2072928814, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1913026046, i32 -2072928814
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %28, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %29, i32 0, i32 0
  store %"struct.Graph::edge"** %30, %"struct.Graph::edge"*** %2
  %31 = load i32, i32* @x.167
  %32 = load i32, i32* @y.168
  %33 = add i32 %31, 1178177171
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1178177171
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1197222246, i32 -2072928814
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %2
  ret %"struct.Graph::edge"** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %62, i32 0, i32 0
  store i32 -1913026046, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"*) #4 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %2, align 8
  %3 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %2, align 8
  ret %"struct.Graph::edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb0EE7_S_baseES9_(%"struct.Graph::edge"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %2 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %2, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  ret %"struct.Graph::edge"* %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.14"*, %"struct.Graph::edge"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.14"*, align 8
  %4 = alloca %"struct.Graph::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %0, %"class.__gnu_cxx::__normal_iterator.14"** %3, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %8, %"struct.Graph::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"*, %"struct.Graph::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca %"struct.std::_Vector_base.9"*
  %6 = alloca %"struct.std::_Vector_base.9"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %6, align 8
  store %"struct.std::_Vector_base.9"* %9, %"struct.std::_Vector_base.9"** %5
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %10, %"struct.Graph::edge"** %4
  %11 = alloca i32
  store i32 1616598891, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %69
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1616598891, label %15
    i32 805764348, label %19
    i32 1814479256, label %25
    i32 -2047778981, label %52
    i32 -510721709, label %67
    i32 1533698642, label %68
  ]

; <label>:14:                                     ; preds = %12
  br label %69

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  %17 = icmp ne %"struct.Graph::edge"* %16, null
  %18 = select i1 %17, i32 805764348, i32 1814479256
  store i32 %18, i32* %11
  br label %69

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %21 to %"class.std::allocator.10"*
  %23 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1) %22, %"struct.Graph::edge"* %23, i64 %24)
  store i32 1814479256, i32* %11
  br label %69

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.175
  %27 = load i32, i32* @y.176
  %28 = sub i32 0, 1
  %29 = add i32 %26, %28
  %30 = sub i32 %26, 1
  %31 = mul i32 %26, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %27, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -2047778981, i32 1533698642
  store i32 %51, i32* %11
  br label %69

; <label>:52:                                     ; preds = %12
  %53 = load i32, i32* @x.175
  %54 = load i32, i32* @y.176
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -510721709, i32 1533698642
  store i32 %66, i32* %11
  br label %69

; <label>:67:                                     ; preds = %12
  ret void

; <label>:68:                                     ; preds = %12
  store i32 -2047778981, i32* %11
  br label %69

; <label>:69:                                     ; preds = %68, %52, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE10deallocateERS2_PS1_m(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Graph::edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*, i64) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.179
  %7 = load i32, i32* @y.180
  %8 = sub i32 %6, 629591036
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 629591036
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1253914090, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1253914090, label %20
    i32 885218949, label %40
    i32 -850841829, label %62
    i32 1428731258, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 885218949, i32 1428731258
  store i32 %39, i32* %16
  br label %70

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %42 = alloca %"struct.Graph::edge"*, align 8
  %43 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %41, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %41, align 8
  %45 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %42, align 8
  %46 = bitcast %"struct.Graph::edge"* %45 to i8*
  call void @_ZdlPv(i8* %46) #3
  %47 = load i32, i32* @x.179
  %48 = load i32, i32* @y.180
  %49 = sub i32 %47, 1900134967
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1900134967
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -850841829, i32 1428731258
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %65 = alloca %"struct.Graph::edge"*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %64, align 8
  %68 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %65, align 8
  %69 = bitcast %"struct.Graph::edge"* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 885218949, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %40, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #10

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_S5_ET0_T_S9_S8_RSaIT1_E(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.181
  %9 = load i32, i32* @y.182
  %10 = sub i32 %8, -28770804
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -28770804
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 987172058, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %97
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 987172058, label %22
    i32 -1759862585, label %30
    i32 220882709, label %76
    i32 947561445, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %97

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -1759862585, i32 947561445
  store i32 %29, i32* %18
  br label %97

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::move_iterator", align 8
  %32 = alloca %"class.std::move_iterator", align 8
  %33 = alloca %"class.std::vector.8"*, align 8
  %34 = alloca %"class.std::allocator.5"*, align 8
  %35 = alloca %"class.std::move_iterator", align 8
  %36 = alloca %"class.std::move_iterator", align 8
  %37 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %31, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %32, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %38, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %33, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %34, align 8
  %39 = bitcast %"class.std::move_iterator"* %35 to i8*
  %40 = bitcast %"class.std::move_iterator"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = bitcast %"class.std::move_iterator"* %36 to i8*
  %42 = bitcast %"class.std::move_iterator"* %32 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %41, i8* %42, i64 8, i32 8, i1 false)
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %35, i32 0, i32 0
  %45 = load %"class.std::vector.8"*, %"class.std::vector.8"** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %36, i32 0, i32 0
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %46, align 8
  %48 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.8"* %45, %"class.std::vector.8"* %47, %"class.std::vector.8"* %43)
  store %"class.std::vector.8"* %48, %"class.std::vector.8"** %5
  %49 = load i32, i32* @x.181
  %50 = load i32, i32* @y.182
  %51 = add i32 %49, -442331200
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -442331200
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 220882709, i32 947561445
  store i32 %75, i32* %18
  br label %97

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  ret %"class.std::vector.8"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"class.std::move_iterator", align 8
  %80 = alloca %"class.std::move_iterator", align 8
  %81 = alloca %"class.std::vector.8"*, align 8
  %82 = alloca %"class.std::allocator.5"*, align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = alloca %"class.std::move_iterator", align 8
  %85 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %79, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %85, align 8
  %86 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %80, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %86, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %81, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %82, align 8
  %87 = bitcast %"class.std::move_iterator"* %83 to i8*
  %88 = bitcast %"class.std::move_iterator"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = bitcast %"class.std::move_iterator"* %84 to i8*
  %90 = bitcast %"class.std::move_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = load %"class.std::vector.8"*, %"class.std::vector.8"** %81, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %93 = load %"class.std::vector.8"*, %"class.std::vector.8"** %92, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %94, align 8
  %96 = call %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.8"* %93, %"class.std::vector.8"* %95, %"class.std::vector.8"* %91)
  store i32 -1759862585, i32* %18
  br label %97

; <label>:97:                                     ; preds = %78, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18make_move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEESt13move_iteratorIT_ES7_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"* %2, %"class.std::vector.8"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  ret %"class.std::vector.8"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EEES6_ET0_T_S9_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.8"*, %"class.std::vector.8"** %19, align 8
  %21 = call %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.8"* %18, %"class.std::vector.8"* %20, %"class.std::vector.8"* %16)
  ret %"class.std::vector.8"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS5_EEES8_EET0_T_SB_SA_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %11, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %12, %"class.std::vector.8"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %65, %3
  %14 = invoke zeroext i1 @_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %15 unwind label %68

; <label>:15:                                     ; preds = %13
  br i1 %14, label %16, label %78

; <label>:16:                                     ; preds = %15
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %18 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %17) #3
  %19 = invoke dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv(%"class.std::move_iterator"* %4)
          to label %20 unwind label %68

; <label>:20:                                     ; preds = %16
  %21 = load i32, i32* @x.187
  %22 = load i32, i32* @y.188
  %23 = add i32 %21, -996959478
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, -996959478
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 false, true
  %34 = and i1 %31, false
  %35 = and i1 %29, %33
  %36 = and i1 %32, false
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 false, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  br i1 %45, label %47, label %167

; <label>:47:                                     ; preds = %20, %167
  %48 = load i32, i32* @x.187
  %49 = load i32, i32* @y.188
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  br i1 %59, label %61, label %167

; <label>:61:                                     ; preds = %47
  invoke void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.8"* %18, %"class.std::vector.8"* dereferenceable(24) %19)
          to label %62 unwind label %68

; <label>:62:                                     ; preds = %61
  br label %63

; <label>:63:                                     ; preds = %62
  %64 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv(%"class.std::move_iterator"* %4)
          to label %65 unwind label %68

; <label>:65:                                     ; preds = %63
  %66 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %67 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %66, i32 1
  store %"class.std::vector.8"* %67, %"class.std::vector.8"** %7, align 8
  br label %13

; <label>:68:                                     ; preds = %63, %61, %16, %13
  %69 = landingpad { i8*, i32 }
          catch i8* null
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %8, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %9, align 4
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i8*, i8** %8, align 8
  %74 = call i8* @__cxa_begin_catch(i8* %73) #3
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %76 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %75, %"class.std::vector.8"* %76)
          to label %77 unwind label %80

; <label>:77:                                     ; preds = %72
  invoke void @__cxa_rethrow() #12
          to label %166 unwind label %80

; <label>:78:                                     ; preds = %15
  %79 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  ret %"class.std::vector.8"* %79

; <label>:80:                                     ; preds = %77, %72
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %8, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %84 unwind label %163

; <label>:84:                                     ; preds = %80
  br label %116
                                                  ; No predecessors!
  %86 = load i32, i32* @x.187
  %87 = load i32, i32* @y.188
  %88 = sub i32 %86, 1299517520
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1299517520
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %168

; <label>:100:                                    ; preds = %85, %168
  call void @llvm.trap()
  %101 = load i32, i32* @x.187
  %102 = load i32, i32* @y.188
  %103 = sub i32 %101, -620512534
  %104 = sub i32 %103, 1
  %105 = add i32 %104, -620512534
  %106 = sub i32 %101, 1
  %107 = mul i32 %101, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %102, 10
  %111 = and i1 %109, %110
  %112 = xor i1 %109, %110
  %113 = or i1 %111, %112
  %114 = or i1 %109, %110
  br i1 %113, label %115, label %168

; <label>:115:                                    ; preds = %100
  unreachable

; <label>:116:                                    ; preds = %84
  %117 = load i32, i32* @x.187
  %118 = load i32, i32* @y.188
  %119 = add i32 %117, -683734179
  %120 = sub i32 %119, 1
  %121 = sub i32 %120, -683734179
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  br i1 %129, label %131, label %169

; <label>:131:                                    ; preds = %116, %169
  %132 = load i8*, i8** %8, align 8
  %133 = load i32, i32* %9, align 4
  %134 = insertvalue { i8*, i32 } undef, i8* %132, 0
  %135 = insertvalue { i8*, i32 } %134, i32 %133, 1
  %136 = load i32, i32* @x.187
  %137 = load i32, i32* @y.188
  %138 = sub i32 %136, -970165773
  %139 = sub i32 %138, 1
  %140 = add i32 %139, -970165773
  %141 = sub i32 %136, 1
  %142 = mul i32 %136, %140
  %143 = urem i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = icmp slt i32 %137, 10
  %146 = xor i1 %144, true
  %147 = xor i1 %145, true
  %148 = xor i1 false, true
  %149 = and i1 %146, false
  %150 = and i1 %144, %148
  %151 = and i1 %147, false
  %152 = and i1 %145, %148
  %153 = or i1 %149, %150
  %154 = or i1 %151, %152
  %155 = xor i1 %153, %154
  %156 = or i1 %146, %147
  %157 = xor i1 %156, true
  %158 = or i1 false, %148
  %159 = and i1 %157, %158
  %160 = or i1 %155, %159
  %161 = or i1 %144, %145
  br i1 %160, label %162, label %169

; <label>:162:                                    ; preds = %131
  resume { i8*, i32 } %135

; <label>:163:                                    ; preds = %80
  %164 = landingpad { i8*, i32 }
          catch i8* null
  %165 = extractvalue { i8*, i32 } %164, 0
  call void @__clang_call_terminate(i8* %165) #11
  unreachable

; <label>:166:                                    ; preds = %77
  unreachable

; <label>:167:                                    ; preds = %47, %20
  br label %47

; <label>:168:                                    ; preds = %100, %85
  call void @llvm.trap()
  br label %100

; <label>:169:                                    ; preds = %131, %116
  %170 = load i8*, i8** %8, align 8
  %171 = load i32, i32* %9, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  br label %131
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.189
  %7 = load i32, i32* @y.190
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -751827992, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %117
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -751827992, label %19
    i32 1380675491, label %39
    i32 -1738920920, label %82
    i32 -221501675, label %84
  ]

; <label>:18:                                     ; preds = %16
  br label %117

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1380675491, i32 -221501675
  store i32 %38, i32* %15
  br label %117

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  %41 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %41, align 8
  %42 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %43 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %41, align 8
  %44 = call zeroext i1 @_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8) %42, %"class.std::move_iterator"* dereferenceable(8) %43)
  %45 = xor i1 %44, true
  %46 = and i1 false, %45
  %47 = xor i1 false, true
  %48 = and i1 %44, %47
  %49 = xor i1 true, true
  %50 = and i1 %49, false
  %51 = and i1 true, %47
  %52 = or i1 %46, %48
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = xor i1 %44, true
  store i1 %54, i1* %3
  %56 = load i32, i32* @x.189
  %57 = load i32, i32* @y.190
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  %81 = select i1 %79, i32 -1738920920, i32 -221501675
  store i32 %81, i32* %15
  br label %117

; <label>:82:                                     ; preds = %16
  %83 = load volatile i1, i1* %3
  ret i1 %83

; <label>:84:                                     ; preds = %16
  %85 = alloca %"class.std::move_iterator"*, align 8
  %86 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %85, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %86, align 8
  %87 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %85, align 8
  %88 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %86, align 8
  %89 = call zeroext i1 @_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8) %87, %"class.std::move_iterator"* dereferenceable(8) %88)
  %90 = add i1 false, true
  %91 = sub i1 %90, %89
  %92 = sub i1 %91, true
  %93 = sub i1 false, %89
  %94 = sub i1 false, true
  %95 = sub i1 %92, %94
  %96 = add i1 %92, true
  %97 = sub i1 false, true
  %98 = sub i1 %97, %89
  %99 = add i1 %98, true
  %100 = sub i1 false, %89
  %101 = sub i1 false, %99
  %102 = sub i1 false, true
  %103 = add i1 %101, %102
  %104 = sub i1 false, %103
  %105 = add i1 %99, true
  %106 = sub i1 %89, false
  %107 = sub i1 %106, true
  %108 = add i1 %107, false
  %109 = sub i1 %89, true
  %110 = mul i1 %108, true
  %111 = xor i1 %89, true
  %112 = and i1 true, %111
  %113 = xor i1 true, true
  %114 = and i1 %89, %113
  %115 = or i1 %112, %114
  %116 = xor i1 %89, true
  store i32 1380675491, i32* %15
  br label %117

; <label>:117:                                    ; preds = %84, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEdeEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.195
  %6 = load i32, i32* @y.196
  %7 = add i32 %5, 1113767144
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1113767144
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1527218336, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1527218336, label %19
    i32 -1282803451, label %27
    i32 -1012408813, label %46
    i32 1509132135, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1282803451, i32 1509132135
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %31, %"class.std::vector.8"** %2
  %32 = load i32, i32* @x.195
  %33 = load i32, i32* @y.196
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1012408813, i32 1509132135
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %49, align 8
  %50 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %50, i32 0, i32 0
  %52 = load %"class.std::vector.8"*, %"class.std::vector.8"** %51, align 8
  store i32 -1282803451, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEppEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %5, i32 1
  store %"class.std::vector.8"* %6, %"class.std::vector.8"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.199
  %6 = load i32, i32* @y.200
  %7 = sub i32 %5, 41593660
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 41593660
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 364224219, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 364224219, label %19
    i32 1069056486, label %39
    i32 -126335435, label %70
    i32 1871822782, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1069056486, i32 1871822782
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %41, align 8
  %42 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %41, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"* %42, %"class.std::vector.8"* %43)
  %44 = load i32, i32* @x.199
  %45 = load i32, i32* @y.200
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -126335435, i32 1871822782
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::vector.8"*, align 8
  %73 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %72, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %73, align 8
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %72, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %73, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"* %74, %"class.std::vector.8"* %75)
  store i32 1069056486, i32* %15
  br label %76

; <label>:76:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #11

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN5Graph4edgeESaIS2_EEEbRKSt13move_iteratorIT_ESA_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::vector.8"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNKSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEE4baseEv(%"class.std::move_iterator"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.203
  %6 = load i32, i32* @y.204
  %7 = sub i32 %5, -1409735938
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1409735938
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1421447524, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1421447524, label %19
    i32 -1972574426, label %39
    i32 1749233990, label %59
    i32 2075821498, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1972574426, i32 2075821498
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %40, align 8
  %41 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %41, i32 0, i32 0
  %43 = load %"class.std::vector.8"*, %"class.std::vector.8"** %42, align 8
  store %"class.std::vector.8"* %43, %"class.std::vector.8"** %2
  %44 = load i32, i32* @x.203
  %45 = load i32, i32* @y.204
  %46 = add i32 %44, 1563958926
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1563958926
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1749233990, i32 2075821498
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %62, align 8
  %63 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %64 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %63, i32 0, i32 0
  %65 = load %"class.std::vector.8"*, %"class.std::vector.8"** %64, align 8
  store i32 -1972574426, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardISt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS5_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.205
  %6 = load i32, i32* @y.206
  %7 = add i32 %5, -787558509
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -787558509
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -273246274, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -273246274, label %19
    i32 -1868414896, label %39
    i32 -609708490, label %56
    i32 -89926978, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1868414896, i32 -89926978
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %41, %"class.std::vector.8"** %2
  %42 = load i32, i32* @x.205
  %43 = load i32, i32* @y.206
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -609708490, i32 -89926978
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %59, align 8
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %59, align 8
  store i32 -1868414896, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2EOS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.8"* %8 to %"struct.std::_Vector_base.9"*
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.9"* %6, %"struct.std::_Vector_base.9"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.209
  %6 = load i32, i32* @y.210
  %7 = add i32 %5, 655292442
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 655292442
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1383741720, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1383741720, label %19
    i32 1554606927, label %39
    i32 1706020584, label %57
    i32 211692960, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1554606927, i32 211692960
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %41, %"class.std::vector.8"** %2
  %42 = load i32, i32* @x.209
  %43 = load i32, i32* @y.210
  %44 = sub i32 %42, 1028701636
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1028701636
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1706020584, i32 211692960
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %60, align 8
  %61 = load %"class.std::vector.8"*, %"class.std::vector.8"** %60, align 8
  store i32 1554606927, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2EOS3_(%"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"* dereferenceable(24)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = add i32 %5, -587036946
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -587036946
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1824921176, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1824921176, label %19
    i32 103015971, label %39
    i32 -286417960, label %65
    i32 -975831298, label %66
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 103015971, i32 -975831298
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.9"*, align 8
  %41 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %40, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %41, align 8
  %42 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %44) #3
  %46 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %45) #3
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %43, %"class.std::allocator.10"* dereferenceable(1) %46) #3
  %47 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %42, i32 0, i32 0
  %48 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %41, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %47, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %49) #3
  %50 = load i32, i32* @x.211
  %51 = load i32, i32* @y.212
  %52 = sub i32 %50, 888364112
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 888364112
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -286417960, i32 -975831298
  store i32 %64, i32* %15
  br label %77

; <label>:65:                                     ; preds = %16
  ret void

; <label>:66:                                     ; preds = %16
  %67 = alloca %"struct.std::_Vector_base.9"*, align 8
  %68 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %67, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %68, align 8
  %69 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %67, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %69, i32 0, i32 0
  %71 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %68, align 8
  %72 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %71) #3
  %73 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %72) #3
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %70, %"class.std::allocator.10"* dereferenceable(1) %73) #3
  %74 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %69, i32 0, i32 0
  %75 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %68, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %75, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %74, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %76) #3
  store i32 103015971, i32* %15
  br label %77

; <label>:77:                                     ; preds = %66, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  ret %"class.std::allocator.10"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2EOS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5 to %"class.std::allocator.10"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %6, %"class.std::allocator.10"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %6, %"struct.Graph::edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %9, %"struct.Graph::edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8) %12, %"struct.Graph::edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5Graph4edgeEEvRT_S4_(%"struct.Graph::edge"** dereferenceable(8), %"struct.Graph::edge"** dereferenceable(8)) #4 comdat {
  %3 = alloca %"struct.Graph::edge"**, align 8
  %4 = alloca %"struct.Graph::edge"**, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %0, %"struct.Graph::edge"*** %3, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %4, align 8
  %6 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %8, %"struct.Graph::edge"** %5, align 8
  %9 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  %12 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %3, align 8
  store %"struct.Graph::edge"* %11, %"struct.Graph::edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  store %"struct.Graph::edge"* %14, %"struct.Graph::edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZSt4moveIRPN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.Graph::edge"** dereferenceable(8)) #4 comdat {
  %2 = alloca %"struct.Graph::edge"**, align 8
  store %"struct.Graph::edge"** %0, %"struct.Graph::edge"*** %2, align 8
  %3 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %2, align 8
  ret %"struct.Graph::edge"** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5Graph4edgeESaIS4_EEEEvT_S8_(%"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = alloca i32
  store i32 -107069315, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %66
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -107069315, label %9
    i32 430458528, label %14
    i32 951577331, label %17
    i32 -1728746181, label %20
    i32 1888113707, label %36
    i32 -108726302, label %64
    i32 60059790, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %66

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %12 = icmp ne %"class.std::vector.8"* %10, %11
  %13 = select i1 %12, i32 430458528, i32 -1728746181
  store i32 %13, i32* %5
  br label %66

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %16 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_(%"class.std::vector.8"* %16)
  store i32 951577331, i32* %5
  br label %66

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %18, i32 1
  store %"class.std::vector.8"* %19, %"class.std::vector.8"** %3, align 8
  store i32 -107069315, i32* %5
  br label %66

; <label>:20:                                     ; preds = %6
  %21 = load i32, i32* @x.223
  %22 = load i32, i32* @y.224
  %23 = add i32 %21, 1421264605
  %24 = sub i32 %23, 1
  %25 = sub i32 %24, 1421264605
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 1888113707, i32 60059790
  store i32 %35, i32* %5
  br label %66

; <label>:36:                                     ; preds = %6
  %37 = load i32, i32* @x.223
  %38 = load i32, i32* @y.224
  %39 = sub i32 %37, -2000827009
  %40 = sub i32 %39, 1
  %41 = add i32 %40, -2000827009
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -108726302, i32 60059790
  store i32 %63, i32* %5
  br label %66

; <label>:64:                                     ; preds = %6
  ret void

; <label>:65:                                     ; preds = %6
  store i32 1888113707, i32* %5
  br label %66

; <label>:66:                                     ; preds = %65, %36, %20, %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN5Graph4edgeESaIS2_EEEvPT_(%"class.std::vector.8"*) #4 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"*, %"class.std::vector.8"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %7, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.229
  %8 = load i32, i32* @y.230
  %9 = sub i32 %7, -436905903
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -436905903
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1102185053, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %80
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1102185053, label %21
    i32 -834845908, label %29
    i32 -938995999, label %67
    i32 -762976785, label %69
  ]

; <label>:20:                                     ; preds = %18
  br label %80

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -834845908, i32 -762976785
  store i32 %28, i32* %17
  br label %80

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %31, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %32, align 8
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %34 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %33)
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %36 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %35)
  %37 = load %"class.std::vector.8"*, %"class.std::vector.8"** %32, align 8
  %38 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %37)
  %39 = call %"class.std::vector.8"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %34, %"class.std::vector.8"* %36, %"class.std::vector.8"* %38)
  store %"class.std::vector.8"* %39, %"class.std::vector.8"** %4
  %40 = load i32, i32* @x.229
  %41 = load i32, i32* @y.230
  %42 = add i32 %40, 321663424
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 321663424
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -938995999, i32 -762976785
  store i32 %66, i32* %17
  br label %80

; <label>:67:                                     ; preds = %18
  %68 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %68

; <label>:69:                                     ; preds = %18
  %70 = alloca %"class.std::vector.8"*, align 8
  %71 = alloca %"class.std::vector.8"*, align 8
  %72 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %70, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %71, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %72, align 8
  %73 = load %"class.std::vector.8"*, %"class.std::vector.8"** %70, align 8
  %74 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %73)
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %71, align 8
  %76 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %75)
  %77 = load %"class.std::vector.8"*, %"class.std::vector.8"** %72, align 8
  %78 = call %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"* %77)
  %79 = call %"class.std::vector.8"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"* %74, %"class.std::vector.8"* %76, %"class.std::vector.8"* %78)
  store i32 -834845908, i32* %17
  br label %80

; <label>:80:                                     ; preds = %69, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__miter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Miter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #4 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %3)
  ret %"class.std::vector.8"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5Graph4edgeESaIS2_EES5_ET1_T0_S7_S6_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #0 comdat {
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.233
  %8 = load i32, i32* @y.234
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 987356161, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %62
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 987356161, label %20
    i32 -989907371, label %28
    i32 -897402623, label %51
    i32 2000589794, label %53
  ]

; <label>:19:                                     ; preds = %17
  br label %62

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -989907371, i32 2000589794
  store i32 %27, i32* %16
  br label %62

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.8"*, align 8
  %30 = alloca %"class.std::vector.8"*, align 8
  %31 = alloca %"class.std::vector.8"*, align 8
  %32 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %29, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %30, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %31, align 8
  store i8 0, i8* %32, align 1
  %33 = load %"class.std::vector.8"*, %"class.std::vector.8"** %29, align 8
  %34 = load %"class.std::vector.8"*, %"class.std::vector.8"** %30, align 8
  %35 = load %"class.std::vector.8"*, %"class.std::vector.8"** %31, align 8
  %36 = call %"class.std::vector.8"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"* %33, %"class.std::vector.8"* %34, %"class.std::vector.8"* %35)
  store %"class.std::vector.8"* %36, %"class.std::vector.8"** %4
  %37 = load i32, i32* @x.233
  %38 = load i32, i32* @y.234
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -897402623, i32 2000589794
  store i32 %50, i32* %16
  br label %62

; <label>:51:                                     ; preds = %17
  %52 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %52

; <label>:53:                                     ; preds = %17
  %54 = alloca %"class.std::vector.8"*, align 8
  %55 = alloca %"class.std::vector.8"*, align 8
  %56 = alloca %"class.std::vector.8"*, align 8
  %57 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %54, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %55, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %56, align 8
  store i8 0, i8* %57, align 1
  %58 = load %"class.std::vector.8"*, %"class.std::vector.8"** %54, align 8
  %59 = load %"class.std::vector.8"*, %"class.std::vector.8"** %55, align 8
  %60 = load %"class.std::vector.8"*, %"class.std::vector.8"** %56, align 8
  %61 = call %"class.std::vector.8"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"* %58, %"class.std::vector.8"* %59, %"class.std::vector.8"* %60)
  store i32 -989907371, i32* %16
  br label %62

; <label>:62:                                     ; preds = %53, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt12__niter_baseIPSt6vectorIN5Graph4edgeESaIS2_EEENSt11_Niter_baseIT_E13iterator_typeES7_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = call %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"* %3)
  ret %"class.std::vector.8"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5Graph4edgeESaIS5_EES8_EET0_T_SA_S9_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"*) #4 comdat align 2 {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %10 = ptrtoint %"class.std::vector.8"* %8 to i64
  %11 = ptrtoint %"class.std::vector.8"* %9 to i64
  %12 = sub i64 0, %11
  %13 = add i64 %10, %12
  %14 = sub i64 %10, %11
  %15 = sdiv exact i64 %13, 24
  store i64 %15, i64* %7, align 8
  %16 = alloca i32
  store i32 -299586965, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %117
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -299586965, label %20
    i32 -1231350450, label %24
    i32 1970924756, label %31
    i32 2095489003, label %46
    i32 1282778349, label %80
    i32 -735557451, label %81
    i32 1049079801, label %83
  ]

; <label>:19:                                     ; preds = %17
  br label %117

; <label>:20:                                     ; preds = %17
  %21 = load i64, i64* %7, align 8
  %22 = icmp sgt i64 %21, 0
  %23 = select i1 %22, i32 -1231350450, i32 -735557451
  store i32 %23, i32* %16
  br label %117

; <label>:24:                                     ; preds = %17
  %25 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %26 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %25, i32 -1
  store %"class.std::vector.8"* %26, %"class.std::vector.8"** %5, align 8
  %27 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %26) #3
  %28 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %29 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %28, i32 -1
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %6, align 8
  %30 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_(%"class.std::vector.8"* %29, %"class.std::vector.8"* dereferenceable(24) %27) #3
  store i32 1970924756, i32* %16
  br label %117

; <label>:31:                                     ; preds = %17
  %32 = load i32, i32* @x.237
  %33 = load i32, i32* @y.238
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 2095489003, i32 1049079801
  store i32 %45, i32* %16
  br label %117

; <label>:46:                                     ; preds = %17
  %47 = load i64, i64* %7, align 8
  %48 = sub i64 0, %47
  %49 = sub i64 0, -1
  %50 = add i64 %48, %49
  %51 = sub i64 0, %50
  %52 = add nsw i64 %47, -1
  store i64 %51, i64* %7, align 8
  %53 = load i32, i32* @x.237
  %54 = load i32, i32* @y.238
  %55 = sub i32 %53, -979118398
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -979118398
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 1282778349, i32 1049079801
  store i32 %79, i32* %16
  br label %117

; <label>:80:                                     ; preds = %17
  store i32 -299586965, i32* %16
  br label %117

; <label>:81:                                     ; preds = %17
  %82 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  ret %"class.std::vector.8"* %82

; <label>:83:                                     ; preds = %17
  %84 = load i64, i64* %7, align 8
  %85 = sub i64 0, 2495414653378803622
  %86 = sub i64 %85, %84
  %87 = add i64 %86, 2495414653378803622
  %88 = sub i64 0, %84
  %89 = sub i64 0, %87
  %90 = sub i64 0, -1
  %91 = add i64 %89, %90
  %92 = sub i64 0, %91
  %93 = add i64 %87, -1
  %94 = shl i64 %84, -1
  %95 = sub i64 0, %84
  %96 = add i64 0, %95
  %97 = sub i64 0, %84
  %98 = sub i64 0, -1
  %99 = sub i64 %96, %98
  %100 = add i64 %96, -1
  %101 = shl i64 %84, -1
  %102 = shl i64 %84, -1
  %103 = sub i64 0, -1
  %104 = add i64 %84, %103
  %105 = sub i64 %84, -1
  %106 = mul i64 %104, -1
  %107 = sub i64 %84, -7779190459616085030
  %108 = sub i64 %107, -1
  %109 = add i64 %108, -7779190459616085030
  %110 = sub i64 %84, -1
  %111 = mul i64 %109, -1
  %112 = sub i64 0, %84
  %113 = sub i64 0, -1
  %114 = add i64 %112, %113
  %115 = sub i64 0, %114
  %116 = add nsw i64 %84, -1
  store i64 %115, i64* %7, align 8
  store i32 2095489003, i32* %16
  br label %117

; <label>:117:                                    ; preds = %83, %80, %46, %31, %24, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSEOS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i8, align 1
  %6 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %7 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  store i8 1, i8* %5, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt4moveIRSt6vectorIN5Graph4edgeESaIS2_EEEONSt16remove_referenceIT_E4typeEOS7_(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9) #3
  ret %"class.std::vector.8"* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8", align 8
  %7 = alloca %"class.std::allocator.10", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %11 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  call void @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv(%"class.std::allocator.10"* sret %7, %"struct.std::_Vector_base.9"* %11) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_(%"class.std::vector.8"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5Graph4edgeEED2Ev(%"class.std::allocator.10"* %7) #3
  %12 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %12, i32 0, i32 0
  %14 = bitcast %"class.std::vector.8"* %6 to %"struct.std::_Vector_base.9"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %13, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %15) #3
  %16 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %19 = bitcast %"class.std::vector.8"* %18 to %"struct.std::_Vector_base.9"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_impl12_M_swap_dataERS4_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %17, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* dereferenceable(24) %20) #3
  %21 = bitcast %"class.std::vector.8"* %10 to %"struct.std::_Vector_base.9"*
  %22 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %21) #3
  %23 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %24 = bitcast %"class.std::vector.8"* %23 to %"struct.std::_Vector_base.9"*
  %25 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %24) #3
  invoke void @_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_(%"class.std::allocator.10"* dereferenceable(1) %22, %"class.std::allocator.10"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %2
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %6) #3
  ret void

; <label>:27:                                     ; preds = %2
  %28 = load i32, i32* @x.241
  %29 = load i32, i32* @y.242
  %30 = sub i32 %28, 434769787
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 434769787
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %75

; <label>:54:                                     ; preds = %27, %75
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %8, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %9, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %6) #3
  %58 = load i32, i32* @x.241
  %59 = load i32, i32* @y.242
  %60 = sub i32 %58, -2137683079
  %61 = sub i32 %60, 1
  %62 = add i32 %61, -2137683079
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %75

; <label>:72:                                     ; preds = %54
  br label %73

; <label>:73:                                     ; preds = %72
  %74 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %74) #11
  unreachable

; <label>:75:                                     ; preds = %54, %27
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %8, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %9, align 4
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EED2Ev(%"class.std::vector.8"* %6) #3
  br label %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE13get_allocatorEv(%"class.std::allocator.10"* noalias sret, %"struct.std::_Vector_base.9"*) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %1, %"struct.std::_Vector_base.9"** %3, align 8
  %4 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %4) #3
  call void @_ZNSaIN5Graph4edgeEEC2ERKS1_(%"class.std::allocator.10"* %0, %"class.std::allocator.10"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS2_(%"class.std::vector.8"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_(%"struct.std::_Vector_base.9"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %6 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1) %6, %"class.std::allocator.10"* dereferenceable(1) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2ERKS2_(%"struct.std::_Vector_base.9"*, %"class.std::allocator.10"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.9"*, align 8
  %4 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %3, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %4, align 8
  %5 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, %"class.std::allocator.10"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIN5Graph4edgeEEEvRT_S4_St17integral_constantIbLb1EE(%"class.std::allocator.10"* dereferenceable(1), %"class.std::allocator.10"* dereferenceable(1)) #4 comdat {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"class.std::allocator.10"* %1, %"class.std::allocator.10"** %5, align 8
  %6 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %5, align 8
  %7 = call dereferenceable(1) %"class.std::allocator.10"* @_ZSt4moveIRSaIN5Graph4edgeEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::allocator.10"* dereferenceable(1) %6) #3
  %8 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt10_Iter_baseIPSt6vectorIN5Graph4edgeESaIS2_EELb0EE7_S_baseES5_(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.253
  %6 = load i32, i32* @y.254
  %7 = sub i32 %5, -144182197
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -144182197
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 646571565, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 646571565, label %19
    i32 105678630, label %27
    i32 -1002202665, label %45
    i32 -1538223857, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 105678630, i32 -1538223857
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  %29 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  store %"class.std::vector.8"* %29, %"class.std::vector.8"** %2
  %30 = load i32, i32* @x.253
  %31 = load i32, i32* @y.254
  %32 = sub i32 %30, 613959102
  %33 = sub i32 %32, 1
  %34 = add i32 %33, 613959102
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1002202665, i32 -1538223857
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %2
  ret %"class.std::vector.8"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %48, align 8
  %49 = load %"class.std::vector.8"*, %"class.std::vector.8"** %48, align 8
  store i32 105678630, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIN5Graph4edgeESaIS2_EES4_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SB_RKS8_(%"class.std::vector.8"*, %"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  %7 = alloca i32
  store i32 -2119198209, i32* %7
  br label %8

; <label>:8:                                      ; preds = %3, %24
  %9 = load i32, i32* %7
  switch i32 %9, label %10 [
    i32 -2119198209, label %11
    i32 2123279407, label %16
    i32 -7252109, label %20
    i32 1928306557, label %23
  ]

; <label>:10:                                     ; preds = %8
  br label %24

; <label>:11:                                     ; preds = %8
  %12 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %13 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %14 = icmp ne %"class.std::vector.8"* %12, %13
  %15 = select i1 %14, i32 2123279407, i32 1928306557
  store i32 %15, i32* %7
  br label %24

; <label>:16:                                     ; preds = %8
  %17 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %18 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %19 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"* %18, %"class.std::vector.8"* dereferenceable(24) %17)
  store i32 -7252109, i32* %7
  br label %24

; <label>:20:                                     ; preds = %8
  %21 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %22 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %21, i32 1
  store %"class.std::vector.8"* %22, %"class.std::vector.8"** %4, align 8
  store i32 -2119198209, i32* %7
  br label %24

; <label>:23:                                     ; preds = %8
  ret void

; <label>:24:                                     ; preds = %20, %16, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEaSERKS3_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.8"*
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14"*
  %12 = alloca %"struct.Graph::edge"**
  %13 = alloca i64*
  %14 = alloca %"class.std::vector.8"**
  %15 = alloca i1
  %16 = alloca i1
  %17 = load i32, i32* @x.257
  %18 = load i32, i32* @y.258
  %19 = sub i32 %17, 1656845780
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 1656845780
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %16
  %26 = icmp slt i32 %18, 10
  store i1 %26, i1* %15
  %27 = alloca i32
  store i32 51860668, i32* %27
  br label %28

; <label>:28:                                     ; preds = %2, %425
  %29 = load i32, i32* %27
  switch i32 %29, label %30 [
    i32 51860668, label %31
    i32 -635376865, label %39
    i32 -263063830, label %72
    i32 1325861044, label %75
    i32 -171563712, label %86
    i32 1081075445, label %163
    i32 -355561619, label %170
    i32 2128326640, label %185
    i32 419147963, label %240
    i32 -1439019434, label %241
    i32 -720017392, label %287
    i32 1402250489, label %288
    i32 -160583576, label %315
    i32 -1078529773, label %354
    i32 766225385, label %355
    i32 -1564840752, label %357
    i32 1392856408, label %372
    i32 -2056668262, label %412
  ]

; <label>:30:                                     ; preds = %28
  br label %425

; <label>:31:                                     ; preds = %28
  %32 = load volatile i1, i1* %16
  %33 = load volatile i1, i1* %15
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -635376865, i32 -1564840752
  store i32 %38, i32* %27
  br label %425

; <label>:39:                                     ; preds = %28
  %40 = alloca %"class.std::vector.8"*, align 8
  %41 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"** %41, %"class.std::vector.8"*** %14
  %42 = alloca i64, align 8
  store i64* %42, i64** %13
  %43 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %43, %"struct.Graph::edge"*** %12
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %44, %"class.__gnu_cxx::__normal_iterator.14"** %11
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %45, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %46, %"class.__gnu_cxx::__normal_iterator.15"** %9
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %47, %"class.__gnu_cxx::__normal_iterator.14"** %8
  %48 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  store %"class.__gnu_cxx::__normal_iterator.14"* %48, %"class.__gnu_cxx::__normal_iterator.14"** %7
  %49 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %49, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %50, %"class.__gnu_cxx::__normal_iterator.15"** %5
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %51 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %51, align 8
  %52 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  store %"class.std::vector.8"* %52, %"class.std::vector.8"** %4
  %53 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %54 = load %"class.std::vector.8"*, %"class.std::vector.8"** %53, align 8
  %55 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %56 = icmp ne %"class.std::vector.8"* %54, %55
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.257
  %58 = load i32, i32* @y.258
  %59 = sub i32 %57, -239630475
  %60 = sub i32 %59, 1
  %61 = add i32 %60, -239630475
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -263063830, i32 -1564840752
  store i32 %71, i32* %27
  br label %425

; <label>:72:                                     ; preds = %28
  %73 = load volatile i1, i1* %3
  %74 = select i1 %73, i32 1325861044, i32 766225385
  store i32 %74, i32* %27
  br label %425

; <label>:75:                                     ; preds = %28
  %76 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %77 = load %"class.std::vector.8"*, %"class.std::vector.8"** %76, align 8
  %78 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %77) #3
  %79 = load volatile i64*, i64** %13
  store i64 %78, i64* %79, align 8
  %80 = load volatile i64*, i64** %13
  %81 = load i64, i64* %80, align 8
  %82 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %83 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"* %82) #3
  %84 = icmp ugt i64 %81, %83
  %85 = select i1 %84, i32 -171563712, i32 1081075445
  store i32 %85, i32* %27
  br label %425

; <label>:86:                                     ; preds = %28
  %87 = load volatile i64*, i64** %13
  %88 = load i64, i64* %87, align 8
  %89 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %90 = load %"class.std::vector.8"*, %"class.std::vector.8"** %89, align 8
  %91 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %90) #3
  %92 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %11
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %92, i32 0, i32 0
  store %"struct.Graph::edge"* %91, %"struct.Graph::edge"** %93, align 8
  %94 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %95 = load %"class.std::vector.8"*, %"class.std::vector.8"** %94, align 8
  %96 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %95) #3
  %97 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %97, i32 0, i32 0
  store %"struct.Graph::edge"* %96, %"struct.Graph::edge"** %98, align 8
  %99 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %11
  %100 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %99, i32 0, i32 0
  %101 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %100, align 8
  %102 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %10
  %103 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %102, i32 0, i32 0
  %104 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %103, align 8
  %105 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %106 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"* %105, i64 %88, %"struct.Graph::edge"* %101, %"struct.Graph::edge"* %104)
  %107 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %12
  store %"struct.Graph::edge"* %106, %"struct.Graph::edge"** %107, align 8
  %108 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %109 = bitcast %"class.std::vector.8"* %108 to %"struct.std::_Vector_base.9"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %110, i32 0, i32 0
  %112 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %111, align 8
  %113 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %114 = bitcast %"class.std::vector.8"* %113 to %"struct.std::_Vector_base.9"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %115, i32 0, i32 1
  %117 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %116, align 8
  %118 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %119 = bitcast %"class.std::vector.8"* %118 to %"struct.std::_Vector_base.9"*
  %120 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %119) #3
  call void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %112, %"struct.Graph::edge"* %117, %"class.std::allocator.10"* dereferenceable(1) %120)
  %121 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %122 = bitcast %"class.std::vector.8"* %121 to %"struct.std::_Vector_base.9"*
  %123 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %124 = bitcast %"class.std::vector.8"* %123 to %"struct.std::_Vector_base.9"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %125, i32 0, i32 0
  %127 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %126, align 8
  %128 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %129 = bitcast %"class.std::vector.8"* %128 to %"struct.std::_Vector_base.9"*
  %130 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %129, i32 0, i32 0
  %131 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %130, i32 0, i32 2
  %132 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %131, align 8
  %133 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %134 = bitcast %"class.std::vector.8"* %133 to %"struct.std::_Vector_base.9"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %136, align 8
  %138 = ptrtoint %"struct.Graph::edge"* %132 to i64
  %139 = ptrtoint %"struct.Graph::edge"* %137 to i64
  %140 = sub i64 %138, 8953893726646168620
  %141 = sub i64 %140, %139
  %142 = add i64 %141, 8953893726646168620
  %143 = sub i64 %138, %139
  %144 = sdiv exact i64 %142, 24
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %122, %"struct.Graph::edge"* %127, i64 %144)
  %145 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %12
  %146 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %145, align 8
  %147 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %148 = bitcast %"class.std::vector.8"* %147 to %"struct.std::_Vector_base.9"*
  %149 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %148, i32 0, i32 0
  %150 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %149, i32 0, i32 0
  store %"struct.Graph::edge"* %146, %"struct.Graph::edge"** %150, align 8
  %151 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %152 = bitcast %"class.std::vector.8"* %151 to %"struct.std::_Vector_base.9"*
  %153 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %152, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %153, i32 0, i32 0
  %155 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %154, align 8
  %156 = load volatile i64*, i64** %13
  %157 = load i64, i64* %156, align 8
  %158 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %155, i64 %157
  %159 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %160 = bitcast %"class.std::vector.8"* %159 to %"struct.std::_Vector_base.9"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %161, i32 0, i32 2
  store %"struct.Graph::edge"* %158, %"struct.Graph::edge"** %162, align 8
  store i32 1402250489, i32* %27
  br label %425

; <label>:163:                                    ; preds = %28
  %164 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %165 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %164) #3
  %166 = load volatile i64*, i64** %13
  %167 = load i64, i64* %166, align 8
  %168 = icmp uge i64 %165, %167
  %169 = select i1 %168, i32 -355561619, i32 -1439019434
  store i32 %169, i32* %27
  br label %425

; <label>:170:                                    ; preds = %28
  %171 = load i32, i32* @x.257
  %172 = load i32, i32* @y.258
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = and i1 %178, %179
  %181 = xor i1 %178, %179
  %182 = or i1 %180, %181
  %183 = or i1 %178, %179
  %184 = select i1 %182, i32 2128326640, i32 1392856408
  store i32 %184, i32* %27
  br label %425

; <label>:185:                                    ; preds = %28
  %186 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %187 = load %"class.std::vector.8"*, %"class.std::vector.8"** %186, align 8
  %188 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %187) #3
  %189 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %8
  %190 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %189, i32 0, i32 0
  store %"struct.Graph::edge"* %188, %"struct.Graph::edge"** %190, align 8
  %191 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %192 = load %"class.std::vector.8"*, %"class.std::vector.8"** %191, align 8
  %193 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %192) #3
  %194 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %7
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %194, i32 0, i32 0
  store %"struct.Graph::edge"* %193, %"struct.Graph::edge"** %195, align 8
  %196 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %197 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %196) #3
  %198 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %199 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %198, i32 0, i32 0
  store %"struct.Graph::edge"* %197, %"struct.Graph::edge"** %199, align 8
  %200 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %8
  %201 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %200, i32 0, i32 0
  %202 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %201, align 8
  %203 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %7
  %204 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %203, i32 0, i32 0
  %205 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %204, align 8
  %206 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %207 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %206, i32 0, i32 0
  %208 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %207, align 8
  %209 = call %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Graph::edge"* %202, %"struct.Graph::edge"* %205, %"struct.Graph::edge"* %208)
  %210 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %9
  %211 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %210, i32 0, i32 0
  store %"struct.Graph::edge"* %209, %"struct.Graph::edge"** %211, align 8
  %212 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %213 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %212) #3
  %214 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %5
  %215 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %214, i32 0, i32 0
  store %"struct.Graph::edge"* %213, %"struct.Graph::edge"** %215, align 8
  %216 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %217 = bitcast %"class.std::vector.8"* %216 to %"struct.std::_Vector_base.9"*
  %218 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %217) #3
  %219 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %9
  %220 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %219, i32 0, i32 0
  %221 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %220, align 8
  %222 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %5
  %223 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %222, i32 0, i32 0
  %224 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %223, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Graph::edge"* %221, %"struct.Graph::edge"* %224, %"class.std::allocator.10"* dereferenceable(1) %218)
  %225 = load i32, i32* @x.257
  %226 = load i32, i32* @y.258
  %227 = add i32 %225, -402590620
  %228 = sub i32 %227, 1
  %229 = sub i32 %228, -402590620
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  %239 = select i1 %237, i32 419147963, i32 1392856408
  store i32 %239, i32* %27
  br label %425

; <label>:240:                                    ; preds = %28
  store i32 -720017392, i32* %27
  br label %425

; <label>:241:                                    ; preds = %28
  %242 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %243 = load %"class.std::vector.8"*, %"class.std::vector.8"** %242, align 8
  %244 = bitcast %"class.std::vector.8"* %243 to %"struct.std::_Vector_base.9"*
  %245 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %244, i32 0, i32 0
  %246 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %245, i32 0, i32 0
  %247 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %246, align 8
  %248 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %249 = load %"class.std::vector.8"*, %"class.std::vector.8"** %248, align 8
  %250 = bitcast %"class.std::vector.8"* %249 to %"struct.std::_Vector_base.9"*
  %251 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %250, i32 0, i32 0
  %252 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %251, i32 0, i32 0
  %253 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %252, align 8
  %254 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %255 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %254) #3
  %256 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %253, i64 %255
  %257 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %258 = bitcast %"class.std::vector.8"* %257 to %"struct.std::_Vector_base.9"*
  %259 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %258, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %259, i32 0, i32 0
  %261 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %260, align 8
  %262 = call %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %247, %"struct.Graph::edge"* %256, %"struct.Graph::edge"* %261)
  %263 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %264 = load %"class.std::vector.8"*, %"class.std::vector.8"** %263, align 8
  %265 = bitcast %"class.std::vector.8"* %264 to %"struct.std::_Vector_base.9"*
  %266 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %266, i32 0, i32 0
  %268 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %267, align 8
  %269 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %270 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %269) #3
  %271 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %268, i64 %270
  %272 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %273 = load %"class.std::vector.8"*, %"class.std::vector.8"** %272, align 8
  %274 = bitcast %"class.std::vector.8"* %273 to %"struct.std::_Vector_base.9"*
  %275 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %274, i32 0, i32 0
  %276 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %275, i32 0, i32 1
  %277 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %276, align 8
  %278 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %279 = bitcast %"class.std::vector.8"* %278 to %"struct.std::_Vector_base.9"*
  %280 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %280, i32 0, i32 1
  %282 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %281, align 8
  %283 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %284 = bitcast %"class.std::vector.8"* %283 to %"struct.std::_Vector_base.9"*
  %285 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %284) #3
  %286 = call %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Graph::edge"* %271, %"struct.Graph::edge"* %277, %"struct.Graph::edge"* %282, %"class.std::allocator.10"* dereferenceable(1) %285)
  store i32 -720017392, i32* %27
  br label %425

; <label>:287:                                    ; preds = %28
  store i32 1402250489, i32* %27
  br label %425

; <label>:288:                                    ; preds = %28
  %289 = load i32, i32* @x.257
  %290 = load i32, i32* @y.258
  %291 = sub i32 0, 1
  %292 = add i32 %289, %291
  %293 = sub i32 %289, 1
  %294 = mul i32 %289, %292
  %295 = urem i32 %294, 2
  %296 = icmp eq i32 %295, 0
  %297 = icmp slt i32 %290, 10
  %298 = xor i1 %296, true
  %299 = xor i1 %297, true
  %300 = xor i1 false, true
  %301 = and i1 %298, false
  %302 = and i1 %296, %300
  %303 = and i1 %299, false
  %304 = and i1 %297, %300
  %305 = or i1 %301, %302
  %306 = or i1 %303, %304
  %307 = xor i1 %305, %306
  %308 = or i1 %298, %299
  %309 = xor i1 %308, true
  %310 = or i1 false, %300
  %311 = and i1 %309, %310
  %312 = or i1 %307, %311
  %313 = or i1 %296, %297
  %314 = select i1 %312, i32 -160583576, i32 -2056668262
  store i32 %314, i32* %27
  br label %425

; <label>:315:                                    ; preds = %28
  %316 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %317 = bitcast %"class.std::vector.8"* %316 to %"struct.std::_Vector_base.9"*
  %318 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %317, i32 0, i32 0
  %319 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %318, i32 0, i32 0
  %320 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %319, align 8
  %321 = load volatile i64*, i64** %13
  %322 = load i64, i64* %321, align 8
  %323 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %320, i64 %322
  %324 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %325 = bitcast %"class.std::vector.8"* %324 to %"struct.std::_Vector_base.9"*
  %326 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %325, i32 0, i32 0
  %327 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %326, i32 0, i32 1
  store %"struct.Graph::edge"* %323, %"struct.Graph::edge"** %327, align 8
  %328 = load i32, i32* @x.257
  %329 = load i32, i32* @y.258
  %330 = sub i32 0, 1
  %331 = add i32 %328, %330
  %332 = sub i32 %328, 1
  %333 = mul i32 %328, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %329, 10
  %337 = xor i1 %335, true
  %338 = xor i1 %336, true
  %339 = xor i1 false, true
  %340 = and i1 %337, false
  %341 = and i1 %335, %339
  %342 = and i1 %338, false
  %343 = and i1 %336, %339
  %344 = or i1 %340, %341
  %345 = or i1 %342, %343
  %346 = xor i1 %344, %345
  %347 = or i1 %337, %338
  %348 = xor i1 %347, true
  %349 = or i1 false, %339
  %350 = and i1 %348, %349
  %351 = or i1 %346, %350
  %352 = or i1 %335, %336
  %353 = select i1 %351, i32 -1078529773, i32 -2056668262
  store i32 %353, i32* %27
  br label %425

; <label>:354:                                    ; preds = %28
  store i32 766225385, i32* %27
  br label %425

; <label>:355:                                    ; preds = %28
  %356 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  ret %"class.std::vector.8"* %356

; <label>:357:                                    ; preds = %28
  %358 = alloca %"class.std::vector.8"*, align 8
  %359 = alloca %"class.std::vector.8"*, align 8
  %360 = alloca i64, align 8
  %361 = alloca %"struct.Graph::edge"*, align 8
  %362 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %363 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %364 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %365 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %366 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %367 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %368 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %358, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %359, align 8
  %369 = load %"class.std::vector.8"*, %"class.std::vector.8"** %358, align 8
  %370 = load %"class.std::vector.8"*, %"class.std::vector.8"** %359, align 8
  %371 = icmp ne %"class.std::vector.8"* %370, %369
  store i32 -635376865, i32* %27
  br label %425

; <label>:372:                                    ; preds = %28
  %373 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %374 = load %"class.std::vector.8"*, %"class.std::vector.8"** %373, align 8
  %375 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %374) #3
  %376 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %8
  %377 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %376, i32 0, i32 0
  store %"struct.Graph::edge"* %375, %"struct.Graph::edge"** %377, align 8
  %378 = load volatile %"class.std::vector.8"**, %"class.std::vector.8"*** %14
  %379 = load %"class.std::vector.8"*, %"class.std::vector.8"** %378, align 8
  %380 = call %"struct.Graph::edge"* @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %379) #3
  %381 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %7
  %382 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %381, i32 0, i32 0
  store %"struct.Graph::edge"* %380, %"struct.Graph::edge"** %382, align 8
  %383 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %384 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %383) #3
  %385 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %386 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %385, i32 0, i32 0
  store %"struct.Graph::edge"* %384, %"struct.Graph::edge"** %386, align 8
  %387 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %8
  %388 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %387, i32 0, i32 0
  %389 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %388, align 8
  %390 = load volatile %"class.__gnu_cxx::__normal_iterator.14"*, %"class.__gnu_cxx::__normal_iterator.14"** %7
  %391 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %390, i32 0, i32 0
  %392 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %391, align 8
  %393 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %6
  %394 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %393, i32 0, i32 0
  %395 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %394, align 8
  %396 = call %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Graph::edge"* %389, %"struct.Graph::edge"* %392, %"struct.Graph::edge"* %395)
  %397 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %9
  %398 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %397, i32 0, i32 0
  store %"struct.Graph::edge"* %396, %"struct.Graph::edge"** %398, align 8
  %399 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %400 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %399) #3
  %401 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %5
  %402 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %401, i32 0, i32 0
  store %"struct.Graph::edge"* %400, %"struct.Graph::edge"** %402, align 8
  %403 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %404 = bitcast %"class.std::vector.8"* %403 to %"struct.std::_Vector_base.9"*
  %405 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %404) #3
  %406 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %9
  %407 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %406, i32 0, i32 0
  %408 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %407, align 8
  %409 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %5
  %410 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %409, i32 0, i32 0
  %411 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %410, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Graph::edge"* %408, %"struct.Graph::edge"* %411, %"class.std::allocator.10"* dereferenceable(1) %405)
  store i32 2128326640, i32* %27
  br label %425

; <label>:412:                                    ; preds = %28
  %413 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %414 = bitcast %"class.std::vector.8"* %413 to %"struct.std::_Vector_base.9"*
  %415 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %414, i32 0, i32 0
  %416 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %415, i32 0, i32 0
  %417 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %416, align 8
  %418 = load volatile i64*, i64** %13
  %419 = load i64, i64* %418, align 8
  %420 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %417, i64 %419
  %421 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %4
  %422 = bitcast %"class.std::vector.8"* %421 to %"struct.std::_Vector_base.9"*
  %423 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %422, i32 0, i32 0
  %424 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %423, i32 0, i32 1
  store %"struct.Graph::edge"* %420, %"struct.Graph::edge"** %424, align 8
  store i32 -160583576, i32* %27
  br label %425

; <label>:425:                                    ; preds = %412, %372, %357, %354, %315, %288, %287, %241, %240, %185, %170, %163, %86, %75, %72, %39, %31, %30
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8capacityEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  %4 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.8"* %3 to %"struct.std::_Vector_base.9"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %10, align 8
  %12 = ptrtoint %"struct.Graph::edge"* %7 to i64
  %13 = ptrtoint %"struct.Graph::edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEEEPS1_mT_SB_(%"class.std::vector.8"*, i64, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.std::vector.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.Graph::edge"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %3, %"struct.Graph::edge"** %15, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %17 = bitcast %"class.std::vector.8"* %16 to %"struct.std::_Vector_base.9"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %17, i64 %18)
  store %"struct.Graph::edge"* %19, %"struct.Graph::edge"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  %25 = bitcast %"class.std::vector.8"* %16 to %"struct.std::_Vector_base.9"*
  %26 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %11, i32 0, i32 0
  %30 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %29, align 8
  %31 = invoke %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.Graph::edge"* %28, %"struct.Graph::edge"* %30, %"struct.Graph::edge"* %24, %"class.std::allocator.10"* dereferenceable(1) %26)
          to label %32 unwind label %88

; <label>:32:                                     ; preds = %4
  %33 = load i32, i32* @x.261
  %34 = load i32, i32* @y.262
  %35 = add i32 %33, -76923062
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -76923062
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %225

; <label>:59:                                     ; preds = %32, %225
  %60 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  %61 = load i32, i32* @x.261
  %62 = load i32, i32* @y.262
  %63 = add i32 %61, 1258654067
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 1258654067
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %225

; <label>:87:                                     ; preds = %59
  ret %"struct.Graph::edge"* %60

; <label>:88:                                     ; preds = %4
  %89 = load i32, i32* @x.261
  %90 = load i32, i32* @y.262
  %91 = sub i32 0, 1
  %92 = add i32 %89, %91
  %93 = sub i32 %89, 1
  %94 = mul i32 %89, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %90, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %227

; <label>:114:                                    ; preds = %88, %227
  %115 = landingpad { i8*, i32 }
          catch i8* null
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %12, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %13, align 4
  %118 = load i32, i32* @x.261
  %119 = load i32, i32* @y.262
  %120 = add i32 %118, 35137452
  %121 = sub i32 %120, 1
  %122 = sub i32 %121, 35137452
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = and i1 %126, %127
  %129 = xor i1 %126, %127
  %130 = or i1 %128, %129
  %131 = or i1 %126, %127
  br i1 %130, label %132, label %227

; <label>:132:                                    ; preds = %114
  br label %133

; <label>:133:                                    ; preds = %132
  %134 = load i8*, i8** %12, align 8
  %135 = call i8* @__cxa_begin_catch(i8* %134) #3
  %136 = bitcast %"class.std::vector.8"* %16 to %"struct.std::_Vector_base.9"*
  %137 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  %138 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %136, %"struct.Graph::edge"* %137, i64 %138)
          to label %139 unwind label %182

; <label>:139:                                    ; preds = %133
  %140 = load i32, i32* @x.261
  %141 = load i32, i32* @y.262
  %142 = sub i32 %140, 53879585
  %143 = sub i32 %142, 1
  %144 = add i32 %143, 53879585
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %231

; <label>:154:                                    ; preds = %139, %231
  %155 = load i32, i32* @x.261
  %156 = load i32, i32* @y.262
  %157 = add i32 %155, 1989221223
  %158 = sub i32 %157, 1
  %159 = sub i32 %158, 1989221223
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = xor i1 %163, true
  %166 = xor i1 %164, true
  %167 = xor i1 false, true
  %168 = and i1 %165, false
  %169 = and i1 %163, %167
  %170 = and i1 %166, false
  %171 = and i1 %164, %167
  %172 = or i1 %168, %169
  %173 = or i1 %170, %171
  %174 = xor i1 %172, %173
  %175 = or i1 %165, %166
  %176 = xor i1 %175, true
  %177 = or i1 false, %167
  %178 = and i1 %176, %177
  %179 = or i1 %174, %178
  %180 = or i1 %163, %164
  br i1 %179, label %181, label %231

; <label>:181:                                    ; preds = %154
  invoke void @__cxa_rethrow() #12
          to label %224 unwind label %182

; <label>:182:                                    ; preds = %181, %133
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %12, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %13, align 4
  invoke void @__cxa_end_catch()
          to label %186 unwind label %221

; <label>:186:                                    ; preds = %182
  %187 = load i32, i32* @x.261
  %188 = load i32, i32* @y.262
  %189 = sub i32 0, 1
  %190 = add i32 %187, %189
  %191 = sub i32 %187, 1
  %192 = mul i32 %187, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %188, 10
  %196 = and i1 %194, %195
  %197 = xor i1 %194, %195
  %198 = or i1 %196, %197
  %199 = or i1 %194, %195
  br i1 %198, label %200, label %232

; <label>:200:                                    ; preds = %186, %232
  %201 = load i32, i32* @x.261
  %202 = load i32, i32* @y.262
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %232

; <label>:214:                                    ; preds = %200
  br label %216
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:216:                                    ; preds = %214
  %217 = load i8*, i8** %12, align 8
  %218 = load i32, i32* %13, align 4
  %219 = insertvalue { i8*, i32 } undef, i8* %217, 0
  %220 = insertvalue { i8*, i32 } %219, i32 %218, 1
  resume { i8*, i32 } %220

; <label>:221:                                    ; preds = %182
  %222 = landingpad { i8*, i32 }
          catch i8* null
  %223 = extractvalue { i8*, i32 } %222, 0
  call void @__clang_call_terminate(i8* %223) #11
  unreachable

; <label>:224:                                    ; preds = %181
  unreachable

; <label>:225:                                    ; preds = %59, %32
  %226 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  br label %59

; <label>:227:                                    ; preds = %114, %88
  %228 = landingpad { i8*, i32 }
          catch i8* null
  %229 = extractvalue { i8*, i32 } %228, 0
  store i8* %229, i8** %12, align 8
  %230 = extractvalue { i8*, i32 } %228, 1
  store i32 %230, i32* %13, align 4
  br label %114

; <label>:231:                                    ; preds = %154, %139
  br label %154

; <label>:232:                                    ; preds = %200, %186
  br label %200
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  call void @_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_(%"struct.Graph::edge"* %7, %"struct.Graph::edge"* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEES3_EvT_S9_RSaIT0_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.265
  %7 = load i32, i32* @y.266
  %8 = sub i32 %6, 1482990697
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1482990697
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1174199600, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1174199600, label %20
    i32 -1834736265, label %40
    i32 594861109, label %71
    i32 944194539, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1834736265, i32 944194539
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %43 = alloca %"class.std::allocator.10"*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %41, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %47, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %45 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %44, i32 0, i32 0
  %53 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %52, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %45, i32 0, i32 0
  %55 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %54, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Graph::edge"* %53, %"struct.Graph::edge"* %55)
  %56 = load i32, i32* @x.265
  %57 = load i32, i32* @y.266
  %58 = add i32 %56, 1096572418
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 1096572418
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 594861109, i32 944194539
  store i32 %70, i32* %16
  br label %88

; <label>:71:                                     ; preds = %17
  ret void

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %75 = alloca %"class.std::allocator.10"*, align 8
  %76 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %73, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %78, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %74, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %79, align 8
  store %"class.std::allocator.10"* %2, %"class.std::allocator.10"** %75, align 8
  %80 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %76 to i8*
  %81 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %80, i8* %81, i64 8, i32 8, i1 false)
  %82 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %77 to i8*
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 8, i32 8, i1 false)
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %76, i32 0, i32 0
  %85 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %84, align 8
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %77, i32 0, i32 0
  %87 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %86, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Graph::edge"* %85, %"struct.Graph::edge"* %87)
  store i32 -1834736265, i32* %16
  br label %88

; <label>:88:                                     ; preds = %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET0_T_SD_SC_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  store %"struct.Graph::edge"* %20, %"struct.Graph::edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %11, i32 0, i32 0
  %25 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %24, align 8
  %26 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Miter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  store %"struct.Graph::edge"* %26, %"struct.Graph::edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %8, i32 0, i32 0
  %31 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %33 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %12, i32 0, i32 0
  %35 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %34, align 8
  %36 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Graph::edge"* %31, %"struct.Graph::edge"* %33, %"struct.Graph::edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %36, %"struct.Graph::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %39 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %38, align 8
  ret %"struct.Graph::edge"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %2, %"struct.Graph::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %5 = bitcast %"class.std::vector.8"* %4 to %"struct.std::_Vector_base.9"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %2, %"struct.Graph::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %7)
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %9)
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %11)
  ret %"struct.Graph::edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aIPN5Graph4edgeES2_S1_ET0_T_S4_S3_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %11)
  ret %"struct.Graph::edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5Graph4edgeEEvT_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %3 = alloca %"struct.Graph::edge"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %3, align 8
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_(%"struct.Graph::edge"* %5, %"struct.Graph::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5Graph4edgeEEEvT_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #4 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEEvT_S9_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %6, i32 0, i32 0
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Graph::edge"* %14, %"struct.Graph::edge"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS5_SaIS5_EEEEEEvT_SB_(%"struct.Graph::edge"*, %"struct.Graph::edge"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEENS1_IPS3_S8_EEET1_T0_SD_SC_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %8 = alloca %"struct.Graph::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.14", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %7, i32 0, i32 0
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %9, i32 0, i32 0
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  %19 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.14"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.14", %"class.__gnu_cxx::__normal_iterator.14"* %10, i32 0, i32 0
  %23 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %24 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Graph::edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %11, i32 0, i32 0
  %28 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %27, align 8
  %29 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::edge"* %28)
  %30 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPKN5Graph4edgeEPS1_ET1_T0_S6_S5_(%"struct.Graph::edge"* %19, %"struct.Graph::edge"* %24, %"struct.Graph::edge"* %29)
  store %"struct.Graph::edge"* %30, %"struct.Graph::edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"* %4, %"struct.Graph::edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %4, i32 0, i32 0
  %32 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %31, align 8
  ret %"struct.Graph::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEEENSt11_Niter_baseIT_E13iterator_typeESA_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.15"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::edge"* %8)
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEC2ERKS3_(%"class.__gnu_cxx::__normal_iterator.15"*, %"struct.Graph::edge"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"struct.Graph::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"struct.Graph::edge"** %1, %"struct.Graph::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %5, i32 0, i32 0
  %7 = load %"struct.Graph::edge"**, %"struct.Graph::edge"*** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  store %"struct.Graph::edge"* %8, %"struct.Graph::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS3_SaIS3_EEEELb1EE7_S_baseES8_(%"struct.Graph::edge"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %2) #3
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %3, i32 0, i32 0
  ret %"struct.Graph::edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %7)
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %9)
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %11)
  %13 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %12)
  ret %"struct.Graph::edge"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseIPN5Graph4edgeEENSt11_Miter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"*) #4 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.297
  %6 = load i32, i32* @y.298
  %7 = add i32 %5, 1401331536
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1401331536
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -120404984, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -120404984, label %19
    i32 1000842579, label %27
    i32 1975187133, label %46
    i32 -2124336594, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1000842579, i32 -2124336594
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %28, align 8
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %28, align 8
  %30 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %29)
  store %"struct.Graph::edge"* %30, %"struct.Graph::edge"** %2
  %31 = load i32, i32* @x.297
  %32 = load i32, i32* @y.298
  %33 = sub i32 %31, 1116014663
  %34 = sub i32 %33, 1
  %35 = add i32 %34, 1116014663
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1975187133, i32 -2124336594
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %49, align 8
  %50 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %49, align 8
  %51 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseIPN5Graph4edgeELb0EE7_S_baseES2_(%"struct.Graph::edge"* %50)
  store i32 1000842579, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb0EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #4 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5Graph4edgeES4_EET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt4copyIPN5Graph4edgeES2_ET0_T_S4_S3_(%"struct.Graph::edge"* %7, %"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9)
  ret %"struct.Graph::edge"* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5Graph4edgeESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.8"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  %11 = call %"class.std::vector.8"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.8"* %8, i64 %9, %"class.std::vector.8"* dereferenceable(24) %10)
  ret %"class.std::vector.8"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5Graph4edgeESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.8"*, i64, %"class.std::vector.8"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.307
  %5 = load i32, i32* @y.308
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %5, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %236

; <label>:17:                                     ; preds = %3, %236
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::vector.8"*, align 8
  %21 = alloca %"class.std::vector.8"*, align 8
  %22 = alloca i8*
  %23 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %18, align 8
  store i64 %1, i64* %19, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %20, align 8
  %24 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  store %"class.std::vector.8"* %24, %"class.std::vector.8"** %21, align 8
  %25 = load i32, i32* @x.307
  %26 = load i32, i32* @y.308
  %27 = sub i32 %25, -2013856122
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -2013856122
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  br i1 %37, label %39, label %236

; <label>:39:                                     ; preds = %17
  br label %40

; <label>:40:                                     ; preds = %139, %39
  %41 = load i64, i64* %19, align 8
  %42 = icmp ugt i64 %41, 0
  br i1 %42, label %43, label %178

; <label>:43:                                     ; preds = %40
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %45 = call %"class.std::vector.8"* @_ZSt11__addressofISt6vectorIN5Graph4edgeESaIS2_EEEPT_RS5_(%"class.std::vector.8"* dereferenceable(24) %44) #3
  %46 = load %"class.std::vector.8"*, %"class.std::vector.8"** %20, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"* %45, %"class.std::vector.8"* dereferenceable(24) %46)
          to label %47 unwind label %140

; <label>:47:                                     ; preds = %43
  %48 = load i32, i32* @x.307
  %49 = load i32, i32* @y.308
  %50 = sub i32 %48, -2091073172
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -2091073172
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  br i1 %72, label %74, label %244

; <label>:74:                                     ; preds = %47, %244
  %75 = load i32, i32* @x.307
  %76 = load i32, i32* @y.308
  %77 = add i32 %75, 1717818296
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, 1717818296
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %244

; <label>:89:                                     ; preds = %74
  br label %90

; <label>:90:                                     ; preds = %89
  %91 = load i32, i32* @x.307
  %92 = load i32, i32* @y.308
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %245

; <label>:116:                                    ; preds = %90, %245
  %117 = load i64, i64* %19, align 8
  %118 = sub i64 0, %117
  %119 = sub i64 0, -1
  %120 = add i64 %118, %119
  %121 = sub i64 0, %120
  %122 = add i64 %117, -1
  store i64 %121, i64* %19, align 8
  %123 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %124 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %123, i32 1
  store %"class.std::vector.8"* %124, %"class.std::vector.8"** %21, align 8
  %125 = load i32, i32* @x.307
  %126 = load i32, i32* @y.308
  %127 = sub i32 %125, -713121391
  %128 = sub i32 %127, 1
  %129 = add i32 %128, -713121391
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %245

; <label>:139:                                    ; preds = %116
  br label %40

; <label>:140:                                    ; preds = %43
  %141 = landingpad { i8*, i32 }
          catch i8* null
  %142 = extractvalue { i8*, i32 } %141, 0
  store i8* %142, i8** %22, align 8
  %143 = extractvalue { i8*, i32 } %141, 1
  store i32 %143, i32* %23, align 4
  br label %144

; <label>:144:                                    ; preds = %140
  %145 = load i8*, i8** %22, align 8
  %146 = call i8* @__cxa_begin_catch(i8* %145) #3
  %147 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %148 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5Graph4edgeESaIS2_EEEvT_S6_(%"class.std::vector.8"* %147, %"class.std::vector.8"* %148)
          to label %149 unwind label %180

; <label>:149:                                    ; preds = %144
  %150 = load i32, i32* @x.307
  %151 = load i32, i32* @y.308
  %152 = sub i32 0, 1
  %153 = add i32 %150, %152
  %154 = sub i32 %150, 1
  %155 = mul i32 %150, %153
  %156 = urem i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = icmp slt i32 %151, 10
  %159 = and i1 %157, %158
  %160 = xor i1 %157, %158
  %161 = or i1 %159, %160
  %162 = or i1 %157, %158
  br i1 %161, label %163, label %265

; <label>:163:                                    ; preds = %149, %265
  %164 = load i32, i32* @x.307
  %165 = load i32, i32* @y.308
  %166 = sub i32 0, 1
  %167 = add i32 %164, %166
  %168 = sub i32 %164, 1
  %169 = mul i32 %164, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %165, 10
  %173 = and i1 %171, %172
  %174 = xor i1 %171, %172
  %175 = or i1 %173, %174
  %176 = or i1 %171, %172
  br i1 %175, label %177, label %265

; <label>:177:                                    ; preds = %163
  invoke void @__cxa_rethrow() #12
          to label %235 unwind label %180

; <label>:178:                                    ; preds = %40
  %179 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  ret %"class.std::vector.8"* %179

; <label>:180:                                    ; preds = %177, %144
  %181 = landingpad { i8*, i32 }
          cleanup
  %182 = extractvalue { i8*, i32 } %181, 0
  store i8* %182, i8** %22, align 8
  %183 = extractvalue { i8*, i32 } %181, 1
  store i32 %183, i32* %23, align 4
  invoke void @__cxa_end_catch()
          to label %184 unwind label %232

; <label>:184:                                    ; preds = %180
  br label %227
                                                  ; No predecessors!
  %186 = load i32, i32* @x.307
  %187 = load i32, i32* @y.308
  %188 = sub i32 0, 1
  %189 = add i32 %186, %188
  %190 = sub i32 %186, 1
  %191 = mul i32 %186, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %187, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %266

; <label>:199:                                    ; preds = %185, %266
  call void @llvm.trap()
  %200 = load i32, i32* @x.307
  %201 = load i32, i32* @y.308
  %202 = sub i32 %200, 1667157283
  %203 = sub i32 %202, 1
  %204 = add i32 %203, 1667157283
  %205 = sub i32 %200, 1
  %206 = mul i32 %200, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %201, 10
  %210 = xor i1 %208, true
  %211 = xor i1 %209, true
  %212 = xor i1 false, true
  %213 = and i1 %210, false
  %214 = and i1 %208, %212
  %215 = and i1 %211, false
  %216 = and i1 %209, %212
  %217 = or i1 %213, %214
  %218 = or i1 %215, %216
  %219 = xor i1 %217, %218
  %220 = or i1 %210, %211
  %221 = xor i1 %220, true
  %222 = or i1 false, %212
  %223 = and i1 %221, %222
  %224 = or i1 %219, %223
  %225 = or i1 %208, %209
  br i1 %224, label %226, label %266

; <label>:226:                                    ; preds = %199
  unreachable

; <label>:227:                                    ; preds = %184
  %228 = load i8*, i8** %22, align 8
  %229 = load i32, i32* %23, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  resume { i8*, i32 } %231

; <label>:232:                                    ; preds = %180
  %233 = landingpad { i8*, i32 }
          catch i8* null
  %234 = extractvalue { i8*, i32 } %233, 0
  call void @__clang_call_terminate(i8* %234) #11
  unreachable

; <label>:235:                                    ; preds = %177
  unreachable

; <label>:236:                                    ; preds = %17, %3
  %237 = alloca %"class.std::vector.8"*, align 8
  %238 = alloca i64, align 8
  %239 = alloca %"class.std::vector.8"*, align 8
  %240 = alloca %"class.std::vector.8"*, align 8
  %241 = alloca i8*
  %242 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %237, align 8
  store i64 %1, i64* %238, align 8
  store %"class.std::vector.8"* %2, %"class.std::vector.8"** %239, align 8
  %243 = load %"class.std::vector.8"*, %"class.std::vector.8"** %237, align 8
  store %"class.std::vector.8"* %243, %"class.std::vector.8"** %240, align 8
  br label %17

; <label>:244:                                    ; preds = %74, %47
  br label %74

; <label>:245:                                    ; preds = %116, %90
  %246 = load i64, i64* %19, align 8
  %247 = sub i64 0, -1
  %248 = add i64 %246, %247
  %249 = sub i64 %246, -1
  %250 = mul i64 %248, -1
  %251 = sub i64 0, %246
  %252 = add i64 0, %251
  %253 = sub i64 0, %246
  %254 = sub i64 %252, -1112428317542837940
  %255 = add i64 %254, -1
  %256 = add i64 %255, -1112428317542837940
  %257 = add i64 %252, -1
  %258 = shl i64 %246, -1
  %259 = shl i64 %246, -1
  %260 = sub i64 0, -1
  %261 = sub i64 %246, %260
  %262 = add i64 %246, -1
  store i64 %261, i64* %19, align 8
  %263 = load %"class.std::vector.8"*, %"class.std::vector.8"** %21, align 8
  %264 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %263, i32 1
  store %"class.std::vector.8"* %264, %"class.std::vector.8"** %21, align 8
  br label %116

; <label>:265:                                    ; preds = %163, %149
  br label %163

; <label>:266:                                    ; preds = %199, %185
  call void @llvm.trap()
  br label %199
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5Graph4edgeESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.8"*, %"class.std::vector.8"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.8"*
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EEC2ERKS3_(%"class.std::vector.8"* %7, %"class.std::vector.8"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZSt7forwardIRKSt6vectorIN5Graph4edgeESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.8"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %2, align 8
  %3 = load %"class.std::vector.8"*, %"class.std::vector.8"** %2, align 8
  ret %"class.std::vector.8"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EE8max_sizeEv(%"class.std::vector.3"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.313
  %6 = load i32, i32* @y.314
  %7 = add i32 %5, 350387611
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 350387611
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1962146952, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1962146952, label %19
    i32 268177951, label %27
    i32 -1712520285, label %47
    i32 -749104198, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 268177951, i32 -749104198
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %28, align 8
  %29 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %30) #3
  %32 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.5"* dereferenceable(1) %31) #3
  store i64 %32, i64* %2
  %33 = load i32, i32* @x.313
  %34 = load i32, i32* @y.314
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1712520285, i32 -749104198
  store i32 %46, i32* %15
  br label %55

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %50, align 8
  %51 = load %"class.std::vector.3"*, %"class.std::vector.3"** %50, align 8
  %52 = bitcast %"class.std::vector.3"* %51 to %"struct.std::_Vector_base.4"*
  %53 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %52) #3
  %54 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.5"* dereferenceable(1) %53) #3
  store i32 268177951, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i64**
  %5 = alloca i64**
  %6 = alloca i64**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.315
  %10 = load i32, i32* @y.316
  %11 = add i32 %9, -275757828
  %12 = sub i32 %11, 1
  %13 = sub i32 %12, -275757828
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 -1045801494, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %82
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1045801494, label %23
    i32 -1298930716, label %31
    i32 1751707505, label %59
    i32 1868723815, label %62
    i32 -1429247567, label %66
    i32 -469631861, label %70
    i32 -1189680323, label %73
  ]

; <label>:22:                                     ; preds = %20
  br label %82

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -1298930716, i32 -1189680323
  store i32 %30, i32* %19
  br label %82

; <label>:31:                                     ; preds = %20
  %32 = alloca i64*, align 8
  store i64** %32, i64*** %6
  %33 = alloca i64*, align 8
  store i64** %33, i64*** %5
  %34 = alloca i64*, align 8
  store i64** %34, i64*** %4
  %35 = load volatile i64**, i64*** %5
  store i64* %0, i64** %35, align 8
  %36 = load volatile i64**, i64*** %4
  store i64* %1, i64** %36, align 8
  %37 = load volatile i64**, i64*** %5
  %38 = load i64*, i64** %37, align 8
  %39 = load i64, i64* %38, align 8
  %40 = load volatile i64**, i64*** %4
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = icmp ult i64 %39, %42
  store i1 %43, i1* %3
  %44 = load i32, i32* @x.315
  %45 = load i32, i32* @y.316
  %46 = sub i32 %44, -1002872953
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1002872953
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 1751707505, i32 -1189680323
  store i32 %58, i32* %19
  br label %82

; <label>:59:                                     ; preds = %20
  %60 = load volatile i1, i1* %3
  %61 = select i1 %60, i32 1868723815, i32 -1429247567
  store i32 %61, i32* %19
  br label %82

; <label>:62:                                     ; preds = %20
  %63 = load volatile i64**, i64*** %4
  %64 = load i64*, i64** %63, align 8
  %65 = load volatile i64**, i64*** %6
  store i64* %64, i64** %65, align 8
  store i32 -469631861, i32* %19
  br label %82

; <label>:66:                                     ; preds = %20
  %67 = load volatile i64**, i64*** %5
  %68 = load i64*, i64** %67, align 8
  %69 = load volatile i64**, i64*** %6
  store i64* %68, i64** %69, align 8
  store i32 -469631861, i32* %19
  br label %82

; <label>:70:                                     ; preds = %20
  %71 = load volatile i64**, i64*** %6
  %72 = load i64*, i64** %71, align 8
  ret i64* %72

; <label>:73:                                     ; preds = %20
  %74 = alloca i64*, align 8
  %75 = alloca i64*, align 8
  %76 = alloca i64*, align 8
  store i64* %0, i64** %75, align 8
  store i64* %1, i64** %76, align 8
  %77 = load i64*, i64** %75, align 8
  %78 = load i64, i64* %77, align 8
  %79 = load i64*, i64** %76, align 8
  %80 = load i64, i64* %79, align 8
  %81 = icmp ult i64 %78, %80
  store i32 -1298930716, i32* %19
  br label %82

; <label>:82:                                     ; preds = %73, %66, %62, %59, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8max_sizeERKS5_(%"class.std::allocator.5"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.321
  %5 = load i32, i32* @y.322
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -720586342, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -720586342, label %17
    i32 -1788786985, label %25
    i32 -1878979516, label %43
    i32 18054561, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -1788786985, i32 18054561
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %26, align 8
  %28 = load i32, i32* @x.321
  %29 = load i32, i32* @y.322
  %30 = add i32 %28, 180454581
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 180454581
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1878979516, i32 18054561
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %45, align 8
  store i32 -1788786985, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE8allocateERS5_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret %"class.std::vector.8"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -1918887865, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1918887865, label %16
    i32 -2024617686, label %21
    i32 -1431555490, label %36
    i32 -2027208110, label %64
    i32 -1888367806, label %65
    i32 -1970174347, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -2024617686, i32 -1888367806
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.325
  %23 = load i32, i32* @y.326
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1431555490, i32 -1970174347
  store i32 %35, i32* %12
  br label %71

; <label>:36:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %37 = load i32, i32* @x.325
  %38 = load i32, i32* @y.326
  %39 = sub i32 %37, 972027909
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 972027909
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -2027208110, i32 -1970174347
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 24
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to %"class.std::vector.8"*
  ret %"class.std::vector.8"* %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -1431555490, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %36, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.8"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EESt13move_iteratorIS5_EET0_T_(%"class.std::vector.8"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  %4 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5Graph4edgeESaIS2_EEEC2ES5_(%"class.std::move_iterator"* %2, %"class.std::vector.8"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  ret %"class.std::vector.8"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5Graph4edgeESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator.5"* dereferenceable(1), %"class.std::vector.8"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"* %8, %"class.std::vector.8"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator.6"*, %"class.std::vector.8"*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca %"class.std::vector.8"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store %"class.std::vector.8"* %1, %"class.std::vector.8"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %5, align 8
  %9 = bitcast %"class.std::vector.8"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5Graph4edgeESaIS3_EES1_IS5_SaIS5_EEEC2ERKS6_(%"class.__gnu_cxx::__normal_iterator"*, %"class.std::vector.8"** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.std::vector.8"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.std::vector.8"** %1, %"class.std::vector.8"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.8"**, %"class.std::vector.8"*** %4, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EEC2Ev(%"struct.std::_Vector_base.9"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.335
  %5 = load i32, i32* @y.336
  %6 = sub i32 %4, 86938529
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 86938529
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 627923713, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %50
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 627923713, label %18
    i32 -914700931, label %26
    i32 1983609723, label %45
    i32 1940420093, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %50

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -914700931, i32 1940420093
  store i32 %25, i32* %14
  br label %50

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %27, align 8
  %28 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.335
  %31 = load i32, i32* @y.336
  %32 = add i32 %30, 1812980471
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1812980471
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 1983609723, i32 1940420093
  store i32 %44, i32* %14
  br label %50

; <label>:45:                                     ; preds = %15
  ret void

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Vector_base.9"*, align 8
  store %"struct.std::_Vector_base.9"* %0, %"struct.std::_Vector_base.9"** %47, align 8
  %48 = load %"struct.std::_Vector_base.9"*, %"struct.std::_Vector_base.9"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %48, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %49)
  store i32 -914700931, i32* %14
  br label %50

; <label>:50:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3 to %"class.std::allocator.10"*
  call void @_ZNSaIN5Graph4edgeEEC2Ev(%"class.std::allocator.10"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5Graph4edgeEEC2Ev(%"class.std::allocator.10"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.11"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.8"*, %"class.std::vector.8"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %15 = ptrtoint %"class.std::vector.8"* %11 to i64
  %16 = ptrtoint %"class.std::vector.8"* %14 to i64
  %17 = sub i64 %15, -4952140896755767613
  %18 = sub i64 %17, %16
  %19 = add i64 %18, -4952140896755767613
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base.4"* %5, %"class.std::vector.8"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.343
  %26 = load i32, i32* @y.344
  %27 = sub i32 %25, -230638401
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -230638401
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %73

; <label>:51:                                     ; preds = %24, %73
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %55) #3
  %56 = load i32, i32* @x.343
  %57 = load i32, i32* @y.344
  %58 = sub i32 %56, -1293434022
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1293434022
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %73

; <label>:70:                                     ; preds = %51
  br label %71

; <label>:71:                                     ; preds = %70
  %72 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %72) #11
  unreachable

; <label>:73:                                     ; preds = %51, %24
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %3, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %4, align 4
  %77 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %77) #3
  br label %51
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5Graph4edgeESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5Graph4edgeESaIS1_EEED2Ev(%"class.std::allocator.5"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5Graph4edgeESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.349
  %5 = load i32, i32* @y.350
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1777934703, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1777934703, label %17
    i32 -722099661, label %37
    i32 -1558180289, label %54
    i32 98464083, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -722099661, i32 98464083
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %38, align 8
  %40 = load i32, i32* @x.349
  %41 = load i32, i32* @y.350
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1558180289, i32 98464083
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %56, align 8
  store i32 -722099661, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph*, i32) #4 comdat align 2 {
  %3 = alloca %struct.Graph*, align 8
  %4 = alloca i32, align 4
  store %struct.Graph* %0, %struct.Graph** %3, align 8
  store i32 %1, i32* %4, align 4
  %5 = load %struct.Graph*, %struct.Graph** %3, align 8
  %6 = getelementptr inbounds %struct.Graph, %struct.Graph* %5, i32 0, i32 1
  %7 = load i32, i32* %4, align 4
  %8 = sext i32 %7 to i64
  %9 = call dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"* %6, i64 %8) #3
  ret %"class.std::vector.8"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE9push_backEOS1_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.353
  %6 = load i32, i32* @y.354
  %7 = add i32 %5, -463706798
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -463706798
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1062449038, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1062449038, label %19
    i32 -1126617264, label %27
    i32 578014244, label %48
    i32 698717329, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1126617264, i32 698717329
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.8"*, align 8
  %29 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %28, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %29, align 8
  %30 = load %"class.std::vector.8"*, %"class.std::vector.8"** %28, align 8
  %31 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %29, align 8
  %32 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::edge"* dereferenceable(24) %31) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"* %30, %"struct.Graph::edge"* dereferenceable(24) %32)
  %33 = load i32, i32* @x.353
  %34 = load i32, i32* @y.354
  %35 = add i32 %33, -919663559
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -919663559
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 578014244, i32 698717329
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::vector.8"*, align 8
  %51 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %50, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %51, align 8
  %52 = load %"class.std::vector.8"*, %"class.std::vector.8"** %50, align 8
  %53 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %51, align 8
  %54 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::edge"* dereferenceable(24) %53) #3
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"* %52, %"struct.Graph::edge"* dereferenceable(24) %54)
  store i32 -1126617264, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.8"* @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EEixEm(%"class.std::vector.3"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.355
  %7 = load i32, i32* @y.356
  %8 = add i32 %6, -1050829771
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1050829771
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1145732491, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %77
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1145732491, label %20
    i32 -642352296, label %40
    i32 -530163884, label %65
    i32 2084679482, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %77

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -642352296, i32 2084679482
  store i32 %39, i32* %16
  br label %77

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.3"*, align 8
  %42 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %41, align 8
  store i64 %1, i64* %42, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %41, align 8
  %44 = bitcast %"class.std::vector.3"* %43 to %"struct.std::_Vector_base.4"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"class.std::vector.8"*, %"class.std::vector.8"** %46, align 8
  %48 = load i64, i64* %42, align 8
  %49 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %47, i64 %48
  store %"class.std::vector.8"* %49, %"class.std::vector.8"** %3
  %50 = load i32, i32* @x.355
  %51 = load i32, i32* @y.356
  %52 = sub i32 %50, -1743345895
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1743345895
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -530163884, i32 2084679482
  store i32 %64, i32* %16
  br label %77

; <label>:65:                                     ; preds = %17
  %66 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %3
  ret %"class.std::vector.8"* %66

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.std::vector.3"*, align 8
  %69 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %68, align 8
  store i64 %1, i64* %69, align 8
  %70 = load %"class.std::vector.3"*, %"class.std::vector.3"** %68, align 8
  %71 = bitcast %"class.std::vector.3"* %70 to %"struct.std::_Vector_base.4"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Graph::edge, std::allocator<Graph::edge> >, std::allocator<std::vector<Graph::edge, std::allocator<Graph::edge> > > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"class.std::vector.8"*, %"class.std::vector.8"** %73, align 8
  %75 = load i64, i64* %69, align 8
  %76 = getelementptr inbounds %"class.std::vector.8", %"class.std::vector.8"* %74, i64 %75
  store i32 -642352296, i32* %16
  br label %77

; <label>:77:                                     ; preds = %67, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE12emplace_backIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"struct.Graph::edge"*
  %4 = alloca %"struct.Graph::edge"*
  %5 = alloca %"class.std::vector.8"*
  %6 = alloca %"class.std::vector.8"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %6, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %7, align 8
  %8 = load %"class.std::vector.8"*, %"class.std::vector.8"** %6, align 8
  store %"class.std::vector.8"* %8, %"class.std::vector.8"** %5
  %9 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %10 = bitcast %"class.std::vector.8"* %9 to %"struct.std::_Vector_base.9"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %13, %"struct.Graph::edge"** %4
  %14 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %15 = bitcast %"class.std::vector.8"* %14 to %"struct.std::_Vector_base.9"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %16, i32 0, i32 2
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  store %"struct.Graph::edge"* %18, %"struct.Graph::edge"** %3
  %19 = alloca i32
  store i32 -7358634, i32* %19
  br label %20

; <label>:20:                                     ; preds = %2, %144
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -7358634, label %23
    i32 1210945907, label %28
    i32 -1528129777, label %46
    i32 -2097097240, label %62
    i32 2056905087, label %93
    i32 1954023027, label %94
    i32 1191898365, label %122
    i32 882644645, label %138
    i32 415429489, label %139
    i32 -942798841, label %143
  ]

; <label>:22:                                     ; preds = %20
  br label %144

; <label>:23:                                     ; preds = %20
  %24 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %4
  %25 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %3
  %26 = icmp ne %"struct.Graph::edge"* %24, %25
  %27 = select i1 %26, i32 1210945907, i32 -1528129777
  store i32 %27, i32* %19
  br label %144

; <label>:28:                                     ; preds = %20
  %29 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %30 = bitcast %"class.std::vector.8"* %29 to %"struct.std::_Vector_base.9"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %30, i32 0, i32 0
  %32 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %31 to %"class.std::allocator.10"*
  %33 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %34 = bitcast %"class.std::vector.8"* %33 to %"struct.std::_Vector_base.9"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %35, i32 0, i32 1
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %36, align 8
  %38 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %39 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %38) #3
  call void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %32, %"struct.Graph::edge"* %37, %"struct.Graph::edge"* dereferenceable(24) %39)
  %40 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  %41 = bitcast %"class.std::vector.8"* %40 to %"struct.std::_Vector_base.9"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %44, i32 1
  store %"struct.Graph::edge"* %45, %"struct.Graph::edge"** %43, align 8
  store i32 1954023027, i32* %19
  br label %144

; <label>:46:                                     ; preds = %20
  %47 = load i32, i32* @x.357
  %48 = load i32, i32* @y.358
  %49 = sub i32 %47, -199388359
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -199388359
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -2097097240, i32 415429489
  store i32 %61, i32* %19
  br label %144

; <label>:62:                                     ; preds = %20
  %63 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %64 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %63) #3
  %65 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"* %65, %"struct.Graph::edge"* dereferenceable(24) %64)
  %66 = load i32, i32* @x.357
  %67 = load i32, i32* @y.358
  %68 = sub i32 %66, 1028605786
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1028605786
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = xor i1 %74, true
  %77 = xor i1 %75, true
  %78 = xor i1 true, true
  %79 = and i1 %76, true
  %80 = and i1 %74, %78
  %81 = and i1 %77, true
  %82 = and i1 %75, %78
  %83 = or i1 %79, %80
  %84 = or i1 %81, %82
  %85 = xor i1 %83, %84
  %86 = or i1 %76, %77
  %87 = xor i1 %86, true
  %88 = or i1 true, %78
  %89 = and i1 %87, %88
  %90 = or i1 %85, %89
  %91 = or i1 %74, %75
  %92 = select i1 %90, i32 2056905087, i32 415429489
  store i32 %92, i32* %19
  br label %144

; <label>:93:                                     ; preds = %20
  store i32 1954023027, i32* %19
  br label %144

; <label>:94:                                     ; preds = %20
  %95 = load i32, i32* @x.357
  %96 = load i32, i32* @y.358
  %97 = sub i32 %95, -1383071443
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -1383071443
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = xor i1 %103, true
  %106 = xor i1 %104, true
  %107 = xor i1 true, true
  %108 = and i1 %105, true
  %109 = and i1 %103, %107
  %110 = and i1 %106, true
  %111 = and i1 %104, %107
  %112 = or i1 %108, %109
  %113 = or i1 %110, %111
  %114 = xor i1 %112, %113
  %115 = or i1 %105, %106
  %116 = xor i1 %115, true
  %117 = or i1 true, %107
  %118 = and i1 %116, %117
  %119 = or i1 %114, %118
  %120 = or i1 %103, %104
  %121 = select i1 %119, i32 1191898365, i32 -942798841
  store i32 %121, i32* %19
  br label %144

; <label>:122:                                    ; preds = %20
  %123 = load i32, i32* @x.357
  %124 = load i32, i32* @y.358
  %125 = sub i32 %123, -1217281868
  %126 = sub i32 %125, 1
  %127 = add i32 %126, -1217281868
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = and i1 %131, %132
  %134 = xor i1 %131, %132
  %135 = or i1 %133, %134
  %136 = or i1 %131, %132
  %137 = select i1 %135, i32 882644645, i32 -942798841
  store i32 %137, i32* %19
  br label %144

; <label>:138:                                    ; preds = %20
  ret void

; <label>:139:                                    ; preds = %20
  %140 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %141 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %140) #3
  %142 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %5
  call void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"* %142, %"struct.Graph::edge"* dereferenceable(24) %141)
  store i32 -2097097240, i32* %19
  br label %144

; <label>:143:                                    ; preds = %20
  store i32 1191898365, i32* %19
  br label %144

; <label>:144:                                    ; preds = %143, %139, %122, %94, %93, %62, %46, %28, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZSt4moveIRN5Graph4edgeEEONSt16remove_referenceIT_E4typeEOS4_(%"struct.Graph::edge"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %2, align 8
  %3 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %2, align 8
  ret %"struct.Graph::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.10"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %4, align 8
  %8 = bitcast %"class.std::allocator.10"* %7 to %"class.__gnu_cxx::new_allocator.11"*
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24)) #4 comdat {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.363
  %6 = load i32, i32* @y.364
  %7 = sub i32 %5, 106694633
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 106694633
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 350985405, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 350985405, label %19
    i32 1172997609, label %27
    i32 -1080986023, label %45
    i32 280234020, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1172997609, i32 280234020
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %28, align 8
  %29 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %28, align 8
  store %"struct.Graph::edge"* %29, %"struct.Graph::edge"** %2
  %30 = load i32, i32* @x.363
  %31 = load i32, i32* @y.364
  %32 = add i32 %30, 1049597048
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1049597048
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1080986023, i32 280234020
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %48, align 8
  %49 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %48, align 8
  store i32 1172997609, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5Graph4edgeESaIS1_EE19_M_emplace_back_auxIJS1_EEEvDpOT_(%"class.std::vector.8"*, %"struct.Graph::edge"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.365
  %4 = load i32, i32* @y.366
  %5 = add i32 %3, 1269356090
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, 1269356090
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %239

; <label>:17:                                     ; preds = %2, %239
  %18 = alloca %"class.std::vector.8"*, align 8
  %19 = alloca %"struct.Graph::edge"*, align 8
  %20 = alloca i64, align 8
  %21 = alloca %"struct.Graph::edge"*, align 8
  %22 = alloca %"struct.Graph::edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %18, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %19, align 8
  %25 = load %"class.std::vector.8"*, %"class.std::vector.8"** %18, align 8
  %26 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %25, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %26, i64* %20, align 8
  %27 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %28 = load i64, i64* %20, align 8
  %29 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %27, i64 %28)
  store %"struct.Graph::edge"* %29, %"struct.Graph::edge"** %21, align 8
  %30 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  store %"struct.Graph::edge"* %30, %"struct.Graph::edge"** %22, align 8
  %31 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %31, i32 0, i32 0
  %33 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %32 to %"class.std::allocator.10"*
  %34 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %35 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %25) #3
  %36 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %34, i64 %35
  %37 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %19, align 8
  %38 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %37) #3
  %39 = load i32, i32* @x.365
  %40 = load i32, i32* @y.366
  %41 = add i32 %39, 2030456161
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 2030456161
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %239

; <label>:53:                                     ; preds = %17
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE9constructIS1_JS1_EEEvRS2_PT_DpOT0_(%"class.std::allocator.10"* dereferenceable(1) %33, %"struct.Graph::edge"* %36, %"struct.Graph::edge"* dereferenceable(24) %38)
          to label %54 unwind label %70

; <label>:54:                                     ; preds = %53
  store %"struct.Graph::edge"* null, %"struct.Graph::edge"** %22, align 8
  %55 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %56 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %55, i32 0, i32 0
  %57 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %56, i32 0, i32 0
  %58 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %57, align 8
  %59 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %60 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %59, i32 0, i32 0
  %61 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %60, i32 0, i32 1
  %62 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %61, align 8
  %63 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %64 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %65 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %64) #3
  %66 = invoke %"struct.Graph::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::edge"* %58, %"struct.Graph::edge"* %62, %"struct.Graph::edge"* %63, %"class.std::allocator.10"* dereferenceable(1) %65)
          to label %67 unwind label %70

; <label>:67:                                     ; preds = %54
  store %"struct.Graph::edge"* %66, %"struct.Graph::edge"** %22, align 8
  %68 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %69 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %68, i32 1
  store %"struct.Graph::edge"* %69, %"struct.Graph::edge"** %22, align 8
  br label %185

; <label>:70:                                     ; preds = %54, %53
  %71 = load i32, i32* @x.365
  %72 = load i32, i32* @y.366
  %73 = sub i32 %71, 723548164
  %74 = sub i32 %73, 1
  %75 = add i32 %74, 723548164
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  br i1 %83, label %85, label %261

; <label>:85:                                     ; preds = %70, %261
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %23, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %24, align 4
  %89 = load i32, i32* @x.365
  %90 = load i32, i32* @y.366
  %91 = sub i32 %89, -1858264758
  %92 = sub i32 %91, 1
  %93 = add i32 %92, -1858264758
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = xor i1 %97, true
  %100 = xor i1 %98, true
  %101 = xor i1 true, true
  %102 = and i1 %99, true
  %103 = and i1 %97, %101
  %104 = and i1 %100, true
  %105 = and i1 %98, %101
  %106 = or i1 %102, %103
  %107 = or i1 %104, %105
  %108 = xor i1 %106, %107
  %109 = or i1 %99, %100
  %110 = xor i1 %109, true
  %111 = or i1 true, %101
  %112 = and i1 %110, %111
  %113 = or i1 %108, %112
  %114 = or i1 %97, %98
  br i1 %113, label %115, label %261

; <label>:115:                                    ; preds = %85
  br label %116

; <label>:116:                                    ; preds = %115
  %117 = load i8*, i8** %23, align 8
  %118 = call i8* @__cxa_begin_catch(i8* %117) #3
  %119 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %120 = icmp ne %"struct.Graph::edge"* %119, null
  br i1 %120, label %133, label %121

; <label>:121:                                    ; preds = %116
  %122 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %122, i32 0, i32 0
  %124 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %123 to %"class.std::allocator.10"*
  %125 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %126 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %25) #3
  %127 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %125, i64 %126
  invoke void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1) %124, %"struct.Graph::edge"* %127)
          to label %128 unwind label %129

; <label>:128:                                    ; preds = %121
  br label %179

; <label>:129:                                    ; preds = %183, %179, %133, %121
  %130 = landingpad { i8*, i32 }
          cleanup
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %23, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %184 unwind label %235

; <label>:133:                                    ; preds = %116
  %134 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %135 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %136 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %137 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %136) #3
  invoke void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %134, %"struct.Graph::edge"* %135, %"class.std::allocator.10"* dereferenceable(1) %137)
          to label %138 unwind label %129

; <label>:138:                                    ; preds = %133
  %139 = load i32, i32* @x.365
  %140 = load i32, i32* @y.366
  %141 = sub i32 0, 1
  %142 = add i32 %139, %141
  %143 = sub i32 %139, 1
  %144 = mul i32 %139, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %140, 10
  %148 = and i1 %146, %147
  %149 = xor i1 %146, %147
  %150 = or i1 %148, %149
  %151 = or i1 %146, %147
  br i1 %150, label %152, label %265

; <label>:152:                                    ; preds = %138, %265
  %153 = load i32, i32* @x.365
  %154 = load i32, i32* @y.366
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 false, true
  %165 = and i1 %162, false
  %166 = and i1 %160, %164
  %167 = and i1 %163, false
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 false, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  br i1 %176, label %178, label %265

; <label>:178:                                    ; preds = %152
  br label %179

; <label>:179:                                    ; preds = %178, %128
  %180 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %181 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %182 = load i64, i64* %20, align 8
  invoke void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %180, %"struct.Graph::edge"* %181, i64 %182)
          to label %183 unwind label %129

; <label>:183:                                    ; preds = %179
  invoke void @__cxa_rethrow() #12
          to label %238 unwind label %129

; <label>:184:                                    ; preds = %129
  br label %230

; <label>:185:                                    ; preds = %67
  %186 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %187 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %187, i32 0, i32 0
  %189 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %188, align 8
  %190 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %191 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %190, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %191, i32 0, i32 1
  %193 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %192, align 8
  %194 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %195 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %194) #3
  call void @_ZSt8_DestroyIPN5Graph4edgeES1_EvT_S3_RSaIT0_E(%"struct.Graph::edge"* %189, %"struct.Graph::edge"* %193, %"class.std::allocator.10"* dereferenceable(1) %195)
  %196 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %197 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %198, i32 0, i32 0
  %200 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %199, align 8
  %201 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %202, i32 0, i32 2
  %204 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %203, align 8
  %205 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %206 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %205, i32 0, i32 0
  %207 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %206, i32 0, i32 0
  %208 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %207, align 8
  %209 = ptrtoint %"struct.Graph::edge"* %204 to i64
  %210 = ptrtoint %"struct.Graph::edge"* %208 to i64
  %211 = sub i64 %209, -6310616199527699834
  %212 = sub i64 %211, %210
  %213 = add i64 %212, -6310616199527699834
  %214 = sub i64 %209, %210
  %215 = sdiv exact i64 %213, 24
  call void @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.9"* %196, %"struct.Graph::edge"* %200, i64 %215)
  %216 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %217 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %218, i32 0, i32 0
  store %"struct.Graph::edge"* %216, %"struct.Graph::edge"** %219, align 8
  %220 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %22, align 8
  %221 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %222 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %221, i32 0, i32 0
  %223 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %222, i32 0, i32 1
  store %"struct.Graph::edge"* %220, %"struct.Graph::edge"** %223, align 8
  %224 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %225 = load i64, i64* %20, align 8
  %226 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %224, i64 %225
  %227 = bitcast %"class.std::vector.8"* %25 to %"struct.std::_Vector_base.9"*
  %228 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %227, i32 0, i32 0
  %229 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %228, i32 0, i32 2
  store %"struct.Graph::edge"* %226, %"struct.Graph::edge"** %229, align 8
  ret void

; <label>:230:                                    ; preds = %184
  %231 = load i8*, i8** %23, align 8
  %232 = load i32, i32* %24, align 4
  %233 = insertvalue { i8*, i32 } undef, i8* %231, 0
  %234 = insertvalue { i8*, i32 } %233, i32 %232, 1
  resume { i8*, i32 } %234

; <label>:235:                                    ; preds = %129
  %236 = landingpad { i8*, i32 }
          catch i8* null
  %237 = extractvalue { i8*, i32 } %236, 0
  call void @__clang_call_terminate(i8* %237) #11
  unreachable

; <label>:238:                                    ; preds = %183
  unreachable

; <label>:239:                                    ; preds = %17, %2
  %240 = alloca %"class.std::vector.8"*, align 8
  %241 = alloca %"struct.Graph::edge"*, align 8
  %242 = alloca i64, align 8
  %243 = alloca %"struct.Graph::edge"*, align 8
  %244 = alloca %"struct.Graph::edge"*, align 8
  %245 = alloca i8*
  %246 = alloca i32
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %240, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %241, align 8
  %247 = load %"class.std::vector.8"*, %"class.std::vector.8"** %240, align 8
  %248 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"* %247, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %248, i64* %242, align 8
  %249 = bitcast %"class.std::vector.8"* %247 to %"struct.std::_Vector_base.9"*
  %250 = load i64, i64* %242, align 8
  %251 = call %"struct.Graph::edge"* @_ZNSt12_Vector_baseIN5Graph4edgeESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.9"* %249, i64 %250)
  store %"struct.Graph::edge"* %251, %"struct.Graph::edge"** %243, align 8
  %252 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %243, align 8
  store %"struct.Graph::edge"* %252, %"struct.Graph::edge"** %244, align 8
  %253 = bitcast %"class.std::vector.8"* %247 to %"struct.std::_Vector_base.9"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %253, i32 0, i32 0
  %255 = bitcast %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %254 to %"class.std::allocator.10"*
  %256 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %243, align 8
  %257 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %247) #3
  %258 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %256, i64 %257
  %259 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %241, align 8
  %260 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %259) #3
  br label %17

; <label>:261:                                    ; preds = %85, %70
  %262 = landingpad { i8*, i32 }
          catch i8* null
  %263 = extractvalue { i8*, i32 } %262, 0
  store i8* %263, i8** %23, align 8
  %264 = extractvalue { i8*, i32 } %262, 1
  store i32 %264, i32* %24, align 4
  br label %85

; <label>:265:                                    ; preds = %152, %138
  br label %152
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE9constructIS2_JS2_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*, %"struct.Graph::edge"* dereferenceable(24)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %4, align 8
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %9 = bitcast %"struct.Graph::edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Graph::edge"*
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call dereferenceable(24) %"struct.Graph::edge"* @_ZSt7forwardIN5Graph4edgeEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.Graph::edge"* dereferenceable(24) %11) #3
  %13 = bitcast %"struct.Graph::edge"* %10 to i8*
  %14 = bitcast %"struct.Graph::edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 24, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca %"class.std::vector.8"*
  %8 = alloca i64*
  %9 = alloca i64*
  %10 = alloca i8**
  %11 = alloca i64*
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.369
  %15 = load i32, i32* @y.370
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  store i1 %21, i1* %13
  %22 = icmp slt i32 %15, 10
  store i1 %22, i1* %12
  %23 = alloca i32
  store i32 1727642216, i32* %23
  %24 = alloca i64
  br label %25

; <label>:25:                                     ; preds = %3, %287
  %26 = load i32, i32* %23
  switch i32 %26, label %27 [
    i32 1727642216, label %28
    i32 -1391391522, label %36
    i32 201489867, label %70
    i32 402380468, label %73
    i32 -1706282945, label %76
    i32 189507765, label %104
    i32 -924682312, label %151
    i32 825933699, label %154
    i32 -100832046, label %170
    i32 654397325, label %191
    i32 2140232967, label %194
    i32 -1714605658, label %197
    i32 -1890403217, label %200
    i32 -1855917608, label %202
    i32 924593116, label %237
    i32 -1418713716, label %281
  ]

; <label>:27:                                     ; preds = %25
  br label %287

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1391391522, i32 -1855917608
  store i32 %35, i32* %23
  br label %287

; <label>:36:                                     ; preds = %25
  %37 = alloca %"class.std::vector.8"*, align 8
  %38 = alloca i64, align 8
  store i64* %38, i64** %11
  %39 = alloca i8*, align 8
  store i8** %39, i8*** %10
  %40 = alloca i64, align 8
  store i64* %40, i64** %9
  %41 = alloca i64, align 8
  store i64* %41, i64** %8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %37, align 8
  %42 = load volatile i64*, i64** %11
  store i64 %1, i64* %42, align 8
  %43 = load volatile i8**, i8*** %10
  store i8* %2, i8** %43, align 8
  %44 = load %"class.std::vector.8"*, %"class.std::vector.8"** %37, align 8
  store %"class.std::vector.8"* %44, %"class.std::vector.8"** %7
  %45 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %46 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %45) #3
  %47 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %48 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %47) #3
  %49 = add i64 %46, 2103697772694453081
  %50 = sub i64 %49, %48
  %51 = sub i64 %50, 2103697772694453081
  %52 = sub i64 %46, %48
  %53 = load volatile i64*, i64** %11
  %54 = load i64, i64* %53, align 8
  %55 = icmp ult i64 %51, %54
  store i1 %55, i1* %6
  %56 = load i32, i32* @x.369
  %57 = load i32, i32* @y.370
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 201489867, i32 -1855917608
  store i32 %69, i32* %23
  br label %287

; <label>:70:                                     ; preds = %25
  %71 = load volatile i1, i1* %6
  %72 = select i1 %71, i32 402380468, i32 -1706282945
  store i32 %72, i32* %23
  br label %287

; <label>:73:                                     ; preds = %25
  %74 = load volatile i8**, i8*** %10
  %75 = load i8*, i8** %74, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %75) #12
  unreachable

; <label>:76:                                     ; preds = %25
  %77 = load i32, i32* @x.369
  %78 = load i32, i32* @y.370
  %79 = add i32 %77, -213144565
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -213144565
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 false, true
  %90 = and i1 %87, false
  %91 = and i1 %85, %89
  %92 = and i1 %88, false
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 false, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 189507765, i32 924593116
  store i32 %103, i32* %23
  br label %287

; <label>:104:                                    ; preds = %25
  %105 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %106 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %105) #3
  %107 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %108 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %107) #3
  %109 = load volatile i64*, i64** %8
  store i64 %108, i64* %109, align 8
  %110 = load volatile i64*, i64** %11
  %111 = load volatile i64*, i64** %8
  %112 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %111, i64* dereferenceable(8) %110)
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %106, 5929773463072960716
  %115 = add i64 %114, %113
  %116 = add i64 %115, 5929773463072960716
  %117 = add i64 %106, %113
  %118 = load volatile i64*, i64** %9
  store i64 %116, i64* %118, align 8
  %119 = load volatile i64*, i64** %9
  %120 = load i64, i64* %119, align 8
  %121 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %122 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %121) #3
  %123 = icmp ult i64 %120, %122
  store i1 %123, i1* %5
  %124 = load i32, i32* @x.369
  %125 = load i32, i32* @y.370
  %126 = sub i32 %124, -1936258872
  %127 = sub i32 %126, 1
  %128 = add i32 %127, -1936258872
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 -924682312, i32 924593116
  store i32 %150, i32* %23
  br label %287

; <label>:151:                                    ; preds = %25
  %152 = load volatile i1, i1* %5
  %153 = select i1 %152, i32 2140232967, i32 825933699
  store i32 %153, i32* %23
  br label %287

; <label>:154:                                    ; preds = %25
  %155 = load i32, i32* @x.369
  %156 = load i32, i32* @y.370
  %157 = sub i32 %155, 414473179
  %158 = sub i32 %157, 1
  %159 = add i32 %158, 414473179
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 -100832046, i32 -1418713716
  store i32 %169, i32* %23
  br label %287

; <label>:170:                                    ; preds = %25
  %171 = load volatile i64*, i64** %9
  %172 = load i64, i64* %171, align 8
  %173 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %174 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %173) #3
  %175 = icmp ugt i64 %172, %174
  store i1 %175, i1* %4
  %176 = load i32, i32* @x.369
  %177 = load i32, i32* @y.370
  %178 = add i32 %176, 1911517901
  %179 = sub i32 %178, 1
  %180 = sub i32 %179, 1911517901
  %181 = sub i32 %176, 1
  %182 = mul i32 %176, %180
  %183 = urem i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = icmp slt i32 %177, 10
  %186 = and i1 %184, %185
  %187 = xor i1 %184, %185
  %188 = or i1 %186, %187
  %189 = or i1 %184, %185
  %190 = select i1 %188, i32 654397325, i32 -1418713716
  store i32 %190, i32* %23
  br label %287

; <label>:191:                                    ; preds = %25
  %192 = load volatile i1, i1* %4
  %193 = select i1 %192, i32 2140232967, i32 -1714605658
  store i32 %193, i32* %23
  br label %287

; <label>:194:                                    ; preds = %25
  %195 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %196 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %195) #3
  store i32 -1890403217, i32* %23
  store i64 %196, i64* %24
  br label %287

; <label>:197:                                    ; preds = %25
  %198 = load volatile i64*, i64** %9
  %199 = load i64, i64* %198, align 8
  store i32 -1890403217, i32* %23
  store i64 %199, i64* %24
  br label %287

; <label>:200:                                    ; preds = %25
  %201 = load i64, i64* %24
  ret i64 %201

; <label>:202:                                    ; preds = %25
  %203 = alloca %"class.std::vector.8"*, align 8
  %204 = alloca i64, align 8
  %205 = alloca i8*, align 8
  %206 = alloca i64, align 8
  %207 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %203, align 8
  store i64 %1, i64* %204, align 8
  store i8* %2, i8** %205, align 8
  %208 = load %"class.std::vector.8"*, %"class.std::vector.8"** %203, align 8
  %209 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %208) #3
  %210 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %208) #3
  %211 = add i64 %209, -584344536681823959
  %212 = sub i64 %211, %210
  %213 = sub i64 %212, -584344536681823959
  %214 = sub i64 %209, %210
  %215 = mul i64 %213, %210
  %216 = shl i64 %209, %210
  %217 = shl i64 %209, %210
  %218 = sub i64 %209, 1961382278166302748
  %219 = sub i64 %218, %210
  %220 = add i64 %219, 1961382278166302748
  %221 = sub i64 %209, %210
  %222 = mul i64 %220, %210
  %223 = sub i64 0, -3274831700449155709
  %224 = sub i64 %223, %209
  %225 = add i64 %224, -3274831700449155709
  %226 = sub i64 0, %209
  %227 = sub i64 %225, 2396299895316632257
  %228 = add i64 %227, %210
  %229 = add i64 %228, 2396299895316632257
  %230 = add i64 %225, %210
  %231 = add i64 %209, 5969291789998297628
  %232 = sub i64 %231, %210
  %233 = sub i64 %232, 5969291789998297628
  %234 = sub i64 %209, %210
  %235 = load i64, i64* %204, align 8
  %236 = icmp ult i64 %233, %235
  store i32 -1391391522, i32* %23
  br label %287

; <label>:237:                                    ; preds = %25
  %238 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %239 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %238) #3
  %240 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %241 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %240) #3
  %242 = load volatile i64*, i64** %8
  store i64 %241, i64* %242, align 8
  %243 = load volatile i64*, i64** %11
  %244 = load volatile i64*, i64** %8
  %245 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %244, i64* dereferenceable(8) %243)
  %246 = load i64, i64* %245, align 8
  %247 = add i64 %239, 6530973800948734000
  %248 = sub i64 %247, %246
  %249 = sub i64 %248, 6530973800948734000
  %250 = sub i64 %239, %246
  %251 = mul i64 %249, %246
  %252 = add i64 %239, -574035889524292317
  %253 = sub i64 %252, %246
  %254 = sub i64 %253, -574035889524292317
  %255 = sub i64 %239, %246
  %256 = mul i64 %254, %246
  %257 = shl i64 %239, %246
  %258 = sub i64 0, %246
  %259 = add i64 %239, %258
  %260 = sub i64 %239, %246
  %261 = mul i64 %259, %246
  %262 = add i64 0, 3809951520051158834
  %263 = sub i64 %262, %239
  %264 = sub i64 %263, 3809951520051158834
  %265 = sub i64 0, %239
  %266 = sub i64 0, %264
  %267 = sub i64 0, %246
  %268 = add i64 %266, %267
  %269 = sub i64 0, %268
  %270 = add i64 %264, %246
  %271 = add i64 %239, -6182976726920078522
  %272 = add i64 %271, %246
  %273 = sub i64 %272, -6182976726920078522
  %274 = add i64 %239, %246
  %275 = load volatile i64*, i64** %9
  store i64 %273, i64* %275, align 8
  %276 = load volatile i64*, i64** %9
  %277 = load i64, i64* %276, align 8
  %278 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %279 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %278) #3
  %280 = icmp ult i64 %277, %279
  store i32 189507765, i32* %23
  br label %287

; <label>:281:                                    ; preds = %25
  %282 = load volatile i64*, i64** %9
  %283 = load i64, i64* %282, align 8
  %284 = load volatile %"class.std::vector.8"*, %"class.std::vector.8"** %7
  %285 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"* %284) #3
  %286 = icmp ugt i64 %283, %285
  store i32 -100832046, i32* %23
  br label %287

; <label>:287:                                    ; preds = %281, %237, %202, %197, %194, %191, %170, %154, %151, %104, %76, %70, %36, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5Graph4edgeES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.16", align 8
  %10 = alloca %"class.std::move_iterator.16", align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %6, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %9, i32 0, i32 0
  store %"struct.Graph::edge"* %12, %"struct.Graph::edge"** %13, align 8
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %15 = call %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %10, i32 0, i32 0
  store %"struct.Graph::edge"* %15, %"struct.Graph::edge"** %16, align 8
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %18 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %10, i32 0, i32 0
  %22 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %21, align 8
  %23 = call %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::edge"* %20, %"struct.Graph::edge"* %22, %"struct.Graph::edge"* %17, %"class.std::allocator.10"* dereferenceable(1) %18)
  ret %"struct.Graph::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.10"* dereferenceable(1), %"struct.Graph::edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.10"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %3, align 8
  %6 = bitcast %"class.std::allocator.10"* %5 to %"class.__gnu_cxx::new_allocator.11"*
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"* %6, %"struct.Graph::edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE8max_sizeEv(%"class.std::vector.8"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.375
  %6 = load i32, i32* @y.376
  %7 = add i32 %5, 1157593772
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1157593772
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 424659936, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 424659936, label %19
    i32 2111870524, label %39
    i32 1320180672, label %71
    i32 -548019774, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2111870524, i32 -548019774
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %40, align 8
  %41 = load %"class.std::vector.8"*, %"class.std::vector.8"** %40, align 8
  %42 = bitcast %"class.std::vector.8"* %41 to %"struct.std::_Vector_base.9"*
  %43 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %42) #3
  %44 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1) %43) #3
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.375
  %46 = load i32, i32* @y.376
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1320180672, i32 -548019774
  store i32 %70, i32* %15
  br label %79

; <label>:71:                                     ; preds = %16
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::vector.8"*, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %74, align 8
  %75 = load %"class.std::vector.8"*, %"class.std::vector.8"** %74, align 8
  %76 = bitcast %"class.std::vector.8"* %75 to %"struct.std::_Vector_base.9"*
  %77 = call dereferenceable(1) %"class.std::allocator.10"* @_ZNKSt12_Vector_baseIN5Graph4edgeESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.9"* %76) #3
  %78 = call i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1) %77) #3
  store i32 2111870524, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5Graph4edgeEEE8max_sizeERKS2_(%"class.std::allocator.10"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator.10"*, align 8
  store %"class.std::allocator.10"* %0, %"class.std::allocator.10"** %2, align 8
  %3 = load %"class.std::allocator.10"*, %"class.std::allocator.10"** %2, align 8
  %4 = bitcast %"class.std::allocator.10"* %3 to %"class.__gnu_cxx::new_allocator.11"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5Graph4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.11"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5Graph4edgeEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*, %"class.std::allocator.10"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"class.std::move_iterator.16", align 8
  %7 = alloca %"struct.Graph::edge"*, align 8
  %8 = alloca %"class.std::allocator.10"*, align 8
  %9 = alloca %"class.std::move_iterator.16", align 8
  %10 = alloca %"class.std::move_iterator.16", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %6, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %12, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %7, align 8
  store %"class.std::allocator.10"* %3, %"class.std::allocator.10"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.16"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.16"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.16"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %9, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %10, i32 0, i32 0
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %20, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"* %19, %"struct.Graph::edge"* %21, %"struct.Graph::edge"* %17)
  ret %"struct.Graph::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5Graph4edgeESt13move_iteratorIS2_EET0_T_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.16", align 8
  %3 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_(%"class.std::move_iterator.16"* %2, %"struct.Graph::edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %2, i32 0, i32 0
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  ret %"struct.Graph::edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.16", align 8
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.16", align 8
  %9 = alloca %"class.std::move_iterator.16", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %11, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.16"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.16"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %8, i32 0, i32 0
  %18 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %9, i32 0, i32 0
  %20 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %19, align 8
  %21 = call %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_(%"struct.Graph::edge"* %18, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %16)
  ret %"struct.Graph::edge"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5Graph4edgeEES5_EET0_T_S8_S7_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.16", align 8
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.16", align 8
  %8 = alloca %"class.std::move_iterator.16", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.16"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.16"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %7, i32 0, i32 0
  %17 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"* %17, %"struct.Graph::edge"* %19, %"struct.Graph::edge"* %15)
  ret %"struct.Graph::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt4copyISt13move_iteratorIPN5Graph4edgeEES3_ET0_T_S6_S5_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.16", align 8
  %5 = alloca %"class.std::move_iterator.16", align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.16", align 8
  %8 = alloca %"class.std::move_iterator.16", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %4, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %5, i32 0, i32 0
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %10, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.16"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.16"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %7, i32 0, i32 0
  %14 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %13, align 8
  %15 = call %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"* %14)
  %16 = bitcast %"class.std::move_iterator.16"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.16"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %8, i32 0, i32 0
  %19 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %18, align 8
  %20 = call %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"* %19)
  %21 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %22 = call %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %15, %"struct.Graph::edge"* %20, %"struct.Graph::edge"* %21)
  ret %"struct.Graph::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt14__copy_move_a2ILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %8 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %7)
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %9)
  %11 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %12 = call %"struct.Graph::edge"* @_ZSt12__niter_baseIPN5Graph4edgeEENSt11_Niter_baseIT_E13iterator_typeES4_(%"struct.Graph::edge"* %11)
  %13 = call %"struct.Graph::edge"* @_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %10, %"struct.Graph::edge"* %12)
  ret %"struct.Graph::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5Graph4edgeEEENSt11_Miter_baseIT_E13iterator_typeES6_(%"struct.Graph::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.16", align 8
  %3 = alloca %"class.std::move_iterator.16", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator.16"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.16"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %3, i32 0, i32 0
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %7, align 8
  %9 = call %"struct.Graph::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_(%"struct.Graph::edge"* %8)
  ret %"struct.Graph::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZSt13__copy_move_aILb1EPN5Graph4edgeES2_ET1_T0_S4_S3_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #0 comdat {
  %4 = alloca %"struct.Graph::edge"*, align 8
  %5 = alloca %"struct.Graph::edge"*, align 8
  %6 = alloca %"struct.Graph::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %4, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %5, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %5, align 8
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %11 = call %"struct.Graph::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"* %8, %"struct.Graph::edge"* %9, %"struct.Graph::edge"* %10)
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5Graph4edgeEEEPT_PKS5_S8_S6_(%"struct.Graph::edge"*, %"struct.Graph::edge"*, %"struct.Graph::edge"*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca %"struct.Graph::edge"**
  %7 = alloca %"struct.Graph::edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.395
  %11 = load i32, i32* @y.396
  %12 = add i32 %10, 937395892
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, 937395892
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1248628259, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %178
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1248628259, label %24
    i32 1620103154, label %44
    i32 630923818, label %91
    i32 2110956, label %94
    i32 269698057, label %104
    i32 888735867, label %110
  ]

; <label>:23:                                     ; preds = %21
  br label %178

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 1620103154, i32 888735867
  store i32 %43, i32* %20
  br label %178

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %45, %"struct.Graph::edge"*** %7
  %46 = alloca %"struct.Graph::edge"*, align 8
  %47 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %47, %"struct.Graph::edge"*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %49, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %46, align 8
  %50 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %6
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %50, align 8
  %51 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %46, align 8
  %52 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  %53 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %52, align 8
  %54 = ptrtoint %"struct.Graph::edge"* %51 to i64
  %55 = ptrtoint %"struct.Graph::edge"* %53 to i64
  %56 = sub i64 0, %55
  %57 = add i64 %54, %56
  %58 = sub i64 %54, %55
  %59 = sdiv exact i64 %57, 24
  %60 = load volatile i64*, i64** %5
  store i64 %59, i64* %60, align 8
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = icmp ne i64 %62, 0
  store i1 %63, i1* %4
  %64 = load i32, i32* @x.395
  %65 = load i32, i32* @y.396
  %66 = sub i32 %64, -630964986
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -630964986
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 630923818, i32 888735867
  store i32 %90, i32* %20
  br label %178

; <label>:91:                                     ; preds = %21
  %92 = load volatile i1, i1* %4
  %93 = select i1 %92, i32 2110956, i32 269698057
  store i32 %93, i32* %20
  br label %178

; <label>:94:                                     ; preds = %21
  %95 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %6
  %96 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %95, align 8
  %97 = bitcast %"struct.Graph::edge"* %96 to i8*
  %98 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %7
  %99 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %98, align 8
  %100 = bitcast %"struct.Graph::edge"* %99 to i8*
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = mul i64 24, %102
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %97, i8* %100, i64 %103, i32 8, i1 false)
  store i32 269698057, i32* %20
  br label %178

; <label>:104:                                    ; preds = %21
  %105 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %6
  %106 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %105, align 8
  %107 = load volatile i64*, i64** %5
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %106, i64 %108
  ret %"struct.Graph::edge"* %109

; <label>:110:                                    ; preds = %21
  %111 = alloca %"struct.Graph::edge"*, align 8
  %112 = alloca %"struct.Graph::edge"*, align 8
  %113 = alloca %"struct.Graph::edge"*, align 8
  %114 = alloca i64, align 8
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %111, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %112, align 8
  store %"struct.Graph::edge"* %2, %"struct.Graph::edge"** %113, align 8
  %115 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %112, align 8
  %116 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %111, align 8
  %117 = ptrtoint %"struct.Graph::edge"* %115 to i64
  %118 = ptrtoint %"struct.Graph::edge"* %116 to i64
  %119 = shl i64 %117, %118
  %120 = shl i64 %117, %118
  %121 = sub i64 0, 8141287178274208695
  %122 = sub i64 %121, %117
  %123 = add i64 %122, 8141287178274208695
  %124 = sub i64 0, %117
  %125 = add i64 %123, 7159888598550925959
  %126 = add i64 %125, %118
  %127 = sub i64 %126, 7159888598550925959
  %128 = add i64 %123, %118
  %129 = sub i64 0, %118
  %130 = add i64 %117, %129
  %131 = sub i64 %117, %118
  %132 = mul i64 %130, %118
  %133 = sub i64 %117, -7546094739037175618
  %134 = sub i64 %133, %118
  %135 = add i64 %134, -7546094739037175618
  %136 = sub i64 %117, %118
  %137 = mul i64 %135, %118
  %138 = shl i64 %117, %118
  %139 = sub i64 0, %117
  %140 = add i64 0, %139
  %141 = sub i64 0, %117
  %142 = sub i64 0, %140
  %143 = sub i64 0, %118
  %144 = add i64 %142, %143
  %145 = sub i64 0, %144
  %146 = add i64 %140, %118
  %147 = add i64 %117, 4858432580128278533
  %148 = sub i64 %147, %118
  %149 = sub i64 %148, 4858432580128278533
  %150 = sub i64 %117, %118
  %151 = sub i64 0, 24
  %152 = add i64 %149, %151
  %153 = sub i64 %149, 24
  %154 = mul i64 %152, 24
  %155 = sub i64 0, %149
  %156 = add i64 0, %155
  %157 = sub i64 0, %149
  %158 = sub i64 0, %156
  %159 = sub i64 0, 24
  %160 = add i64 %158, %159
  %161 = sub i64 0, %160
  %162 = add i64 %156, 24
  %163 = shl i64 %149, 24
  %164 = add i64 %149, -5214769104760023574
  %165 = sub i64 %164, 24
  %166 = sub i64 %165, -5214769104760023574
  %167 = sub i64 %149, 24
  %168 = mul i64 %166, 24
  %169 = shl i64 %149, 24
  %170 = sub i64 %149, 1545291655387124701
  %171 = sub i64 %170, 24
  %172 = add i64 %171, 1545291655387124701
  %173 = sub i64 %149, 24
  %174 = mul i64 %172, 24
  %175 = sdiv exact i64 %149, 24
  store i64 %175, i64* %114, align 8
  %176 = load i64, i64* %114, align 8
  %177 = icmp ne i64 %176, 0
  store i32 1620103154, i32* %20
  br label %178

; <label>:178:                                    ; preds = %110, %94, %91, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5Graph4edgeEELb1EE7_S_baseES4_(%"struct.Graph::edge"*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.16", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %2, i32 0, i32 0
  store %"struct.Graph::edge"* %0, %"struct.Graph::edge"** %3, align 8
  %4 = call %"struct.Graph::edge"* @_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv(%"class.std::move_iterator.16"* %2)
  ret %"struct.Graph::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Graph::edge"* @_ZNKSt13move_iteratorIPN5Graph4edgeEE4baseEv(%"class.std::move_iterator.16"*) #4 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.16"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %2, align 8
  %3 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %3, i32 0, i32 0
  %5 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret %"struct.Graph::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5Graph4edgeEEC2ES2_(%"class.std::move_iterator.16"*, %"struct.Graph::edge"*) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.401
  %6 = load i32, i32* @y.402
  %7 = sub i32 %5, 124947262
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 124947262
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1815846930, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1815846930, label %19
    i32 1860640812, label %27
    i32 1901454443, label %48
    i32 373606738, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1860640812, i32 373606738
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.16"*, align 8
  %29 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %28, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %29, align 8
  %30 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %28, align 8
  %31 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %30, i32 0, i32 0
  %32 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %29, align 8
  store %"struct.Graph::edge"* %32, %"struct.Graph::edge"** %31, align 8
  %33 = load i32, i32* @x.401
  %34 = load i32, i32* @y.402
  %35 = sub i32 %33, -1190546376
  %36 = sub i32 %35, 1
  %37 = add i32 %36, -1190546376
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1901454443, i32 373606738
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator.16"*, align 8
  %51 = alloca %"struct.Graph::edge"*, align 8
  store %"class.std::move_iterator.16"* %0, %"class.std::move_iterator.16"** %50, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %51, align 8
  %52 = load %"class.std::move_iterator.16"*, %"class.std::move_iterator.16"** %50, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator.16", %"class.std::move_iterator.16"* %52, i32 0, i32 0
  %54 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %51, align 8
  store %"struct.Graph::edge"* %54, %"struct.Graph::edge"** %53, align 8
  store i32 1860640812, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5Graph4edgeEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.11"*, %"struct.Graph::edge"*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.11"*, align 8
  %4 = alloca %"struct.Graph::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.11"* %0, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  store %"struct.Graph::edge"* %1, %"struct.Graph::edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.11"*, %"class.__gnu_cxx::new_allocator.11"** %3, align 8
  %6 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN5Dinic7g_levelEii(%struct.Dinic*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.Dinic*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::queue", align 8
  %9 = alloca %"class.std::deque", align 8
  %10 = alloca i8*
  %11 = alloca i32
  %12 = alloca i32, align 4
  %13 = alloca %"class.std::vector.8"*, align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.15", align 8
  %16 = alloca %"struct.Graph::edge"*, align 8
  store %struct.Dinic* %0, %struct.Dinic** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %17 = load %struct.Dinic*, %struct.Dinic** %4, align 8
  %18 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %19 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  store i32 -1, i32* %7, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"* %18, i64 %21, i32* dereferenceable(4) %7)
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %9)
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %8, %"class.std::deque"* dereferenceable(80) %9)
          to label %22 unwind label %246

; <label>:22:                                     ; preds = %3
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %9) #3
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %8, i32* dereferenceable(4) %5)
          to label %23 unwind label %250

; <label>:23:                                     ; preds = %22
  %24 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %25 = load i32, i32* %5, align 4
  %26 = sext i32 %25 to i64
  %27 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %24, i64 %26) #3
  store i32 0, i32* %27, align 4
  br label %28

; <label>:28:                                     ; preds = %352, %23
  %29 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %8)
          to label %30 unwind label %250

; <label>:30:                                     ; preds = %28
  %31 = xor i1 %29, true
  %32 = and i1 true, %31
  %33 = xor i1 true, true
  %34 = and i1 %29, %33
  %35 = xor i1 true, true
  %36 = and i1 %35, true
  %37 = and i1 true, %33
  %38 = or i1 %32, %34
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = xor i1 %29, true
  br i1 %40, label %42, label %353

; <label>:42:                                     ; preds = %30
  %43 = load i32, i32* @x.405
  %44 = load i32, i32* @y.406
  %45 = add i32 %43, 2069048076
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 2069048076
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %365

; <label>:57:                                     ; preds = %42, %365
  %58 = load i32, i32* @x.405
  %59 = load i32, i32* @y.406
  %60 = sub i32 %58, 978557800
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 978557800
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  br i1 %70, label %72, label %365

; <label>:72:                                     ; preds = %57
  %73 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %8)
          to label %74 unwind label %250

; <label>:74:                                     ; preds = %72
  %75 = load i32, i32* %73, align 4
  store i32 %75, i32* %12, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %8)
          to label %76 unwind label %250

; <label>:76:                                     ; preds = %74
  %77 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 3
  %78 = load i32, i32* %12, align 4
  %79 = invoke dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %77, i32 %78)
          to label %80 unwind label %250

; <label>:80:                                     ; preds = %76
  store %"class.std::vector.8"* %79, %"class.std::vector.8"** %13, align 8
  %81 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %82 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE5beginEv(%"class.std::vector.8"* %81) #3
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %14, i32 0, i32 0
  store %"struct.Graph::edge"* %82, %"struct.Graph::edge"** %83, align 8
  %84 = load %"class.std::vector.8"*, %"class.std::vector.8"** %13, align 8
  %85 = call %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EE3endEv(%"class.std::vector.8"* %84) #3
  %86 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %15, i32 0, i32 0
  store %"struct.Graph::edge"* %85, %"struct.Graph::edge"** %86, align 8
  br label %87

; <label>:87:                                     ; preds = %308, %80
  %88 = call zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %14, %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8) %15) #3
  br i1 %88, label %89, label %310

; <label>:89:                                     ; preds = %87
  %90 = load i32, i32* @x.405
  %91 = load i32, i32* @y.406
  %92 = add i32 %90, -640995459
  %93 = sub i32 %92, 1
  %94 = sub i32 %93, -640995459
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %366

; <label>:116:                                    ; preds = %89, %366
  %117 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  store %"struct.Graph::edge"* %117, %"struct.Graph::edge"** %16, align 8
  %118 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %119 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %118, i32 0, i32 1
  %120 = load i64, i64* %119, align 8
  %121 = icmp sgt i64 %120, 0
  %122 = load i32, i32* @x.405
  %123 = load i32, i32* @y.406
  %124 = add i32 %122, 1712936414
  %125 = sub i32 %124, 1
  %126 = sub i32 %125, 1712936414
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = and i1 %130, %131
  %133 = xor i1 %130, %131
  %134 = or i1 %132, %133
  %135 = or i1 %130, %131
  br i1 %134, label %136, label %366

; <label>:136:                                    ; preds = %116
  br i1 %121, label %137, label %307

; <label>:137:                                    ; preds = %136
  %138 = load i32, i32* @x.405
  %139 = load i32, i32* @y.406
  %140 = add i32 %138, 1411793891
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 1411793891
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %372

; <label>:164:                                    ; preds = %137, %372
  %165 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %166 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %167 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %166, i32 0, i32 0
  %168 = load i32, i32* %167, align 8
  %169 = sext i32 %168 to i64
  %170 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %165, i64 %169) #3
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, -1
  %173 = load i32, i32* @x.405
  %174 = load i32, i32* @y.406
  %175 = add i32 %173, -2086241622
  %176 = sub i32 %175, 1
  %177 = sub i32 %176, -2086241622
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %372

; <label>:187:                                    ; preds = %164
  br i1 %172, label %188, label %307

; <label>:188:                                    ; preds = %187
  %189 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %190 = load i32, i32* %12, align 4
  %191 = sext i32 %190 to i64
  %192 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %189, i64 %191) #3
  %193 = load i32, i32* %192, align 4
  %194 = sub i32 0, 1
  %195 = sub i32 %193, %194
  %196 = add nsw i32 %193, 1
  %197 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %198 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %199 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %198, i32 0, i32 0
  %200 = load i32, i32* %199, align 8
  %201 = sext i32 %200 to i64
  %202 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %197, i64 %201) #3
  store i32 %195, i32* %202, align 4
  %203 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %204 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %203, i32 0, i32 0
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %8, i32* dereferenceable(4) %204)
          to label %205 unwind label %250

; <label>:205:                                    ; preds = %188
  %206 = load i32, i32* @x.405
  %207 = load i32, i32* @y.406
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = and i1 %213, %214
  %216 = xor i1 %213, %214
  %217 = or i1 %215, %216
  %218 = or i1 %213, %214
  br i1 %217, label %219, label %381

; <label>:219:                                    ; preds = %205, %381
  %220 = load i32, i32* @x.405
  %221 = load i32, i32* @y.406
  %222 = sub i32 0, 1
  %223 = add i32 %220, %222
  %224 = sub i32 %220, 1
  %225 = mul i32 %220, %223
  %226 = urem i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = icmp slt i32 %221, 10
  %229 = xor i1 %227, true
  %230 = xor i1 %228, true
  %231 = xor i1 false, true
  %232 = and i1 %229, false
  %233 = and i1 %227, %231
  %234 = and i1 %230, false
  %235 = and i1 %228, %231
  %236 = or i1 %232, %233
  %237 = or i1 %234, %235
  %238 = xor i1 %236, %237
  %239 = or i1 %229, %230
  %240 = xor i1 %239, true
  %241 = or i1 false, %231
  %242 = and i1 %240, %241
  %243 = or i1 %238, %242
  %244 = or i1 %227, %228
  br i1 %243, label %245, label %381

; <label>:245:                                    ; preds = %219
  br label %307

; <label>:246:                                    ; preds = %3
  %247 = landingpad { i8*, i32 }
          cleanup
  %248 = extractvalue { i8*, i32 } %247, 0
  store i8* %248, i8** %10, align 8
  %249 = extractvalue { i8*, i32 } %247, 1
  store i32 %249, i32* %11, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %9) #3
  br label %360

; <label>:250:                                    ; preds = %188, %76, %74, %72, %28, %22
  %251 = load i32, i32* @x.405
  %252 = load i32, i32* @y.406
  %253 = add i32 %251, -11266622
  %254 = sub i32 %253, 1
  %255 = sub i32 %254, -11266622
  %256 = sub i32 %251, 1
  %257 = mul i32 %251, %255
  %258 = urem i32 %257, 2
  %259 = icmp eq i32 %258, 0
  %260 = icmp slt i32 %252, 10
  %261 = xor i1 %259, true
  %262 = xor i1 %260, true
  %263 = xor i1 true, true
  %264 = and i1 %261, true
  %265 = and i1 %259, %263
  %266 = and i1 %262, true
  %267 = and i1 %260, %263
  %268 = or i1 %264, %265
  %269 = or i1 %266, %267
  %270 = xor i1 %268, %269
  %271 = or i1 %261, %262
  %272 = xor i1 %271, true
  %273 = or i1 true, %263
  %274 = and i1 %272, %273
  %275 = or i1 %270, %274
  %276 = or i1 %259, %260
  br i1 %275, label %277, label %382

; <label>:277:                                    ; preds = %250, %382
  %278 = landingpad { i8*, i32 }
          cleanup
  %279 = extractvalue { i8*, i32 } %278, 0
  store i8* %279, i8** %10, align 8
  %280 = extractvalue { i8*, i32 } %278, 1
  store i32 %280, i32* %11, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %8) #3
  %281 = load i32, i32* @x.405
  %282 = load i32, i32* @y.406
  %283 = sub i32 0, 1
  %284 = add i32 %281, %283
  %285 = sub i32 %281, 1
  %286 = mul i32 %281, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %282, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 false, true
  %293 = and i1 %290, false
  %294 = and i1 %288, %292
  %295 = and i1 %291, false
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 false, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %382

; <label>:306:                                    ; preds = %277
  br label %360

; <label>:307:                                    ; preds = %245, %187, %136
  br label %308

; <label>:308:                                    ; preds = %307
  %309 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  br label %87

; <label>:310:                                    ; preds = %87
  %311 = load i32, i32* @x.405
  %312 = load i32, i32* @y.406
  %313 = add i32 %311, 339680457
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, 339680457
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 true, true
  %324 = and i1 %321, true
  %325 = and i1 %319, %323
  %326 = and i1 %322, true
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 true, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  br i1 %335, label %337, label %386

; <label>:337:                                    ; preds = %310, %386
  %338 = load i32, i32* @x.405
  %339 = load i32, i32* @y.406
  %340 = sub i32 %338, -1007773985
  %341 = sub i32 %340, 1
  %342 = add i32 %341, -1007773985
  %343 = sub i32 %338, 1
  %344 = mul i32 %338, %342
  %345 = urem i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = icmp slt i32 %339, 10
  %348 = and i1 %346, %347
  %349 = xor i1 %346, %347
  %350 = or i1 %348, %349
  %351 = or i1 %346, %347
  br i1 %350, label %352, label %386

; <label>:352:                                    ; preds = %337
  br label %28

; <label>:353:                                    ; preds = %30
  %354 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %355 = load i32, i32* %6, align 4
  %356 = sext i32 %355 to i64
  %357 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %354, i64 %356) #3
  %358 = load i32, i32* %357, align 4
  %359 = icmp sge i32 %358, 0
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %8) #3
  ret i1 %359

; <label>:360:                                    ; preds = %306, %246
  %361 = load i8*, i8** %10, align 8
  %362 = load i32, i32* %11, align 4
  %363 = insertvalue { i8*, i32 } undef, i8* %361, 0
  %364 = insertvalue { i8*, i32 } %363, i32 %362, 1
  resume { i8*, i32 } %364

; <label>:365:                                    ; preds = %57, %42
  br label %57

; <label>:366:                                    ; preds = %116, %89
  %367 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"* %14) #3
  store %"struct.Graph::edge"* %367, %"struct.Graph::edge"** %16, align 8
  %368 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %369 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %368, i32 0, i32 1
  %370 = load i64, i64* %369, align 8
  %371 = icmp sgt i64 %370, 0
  br label %116

; <label>:372:                                    ; preds = %164, %137
  %373 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %17, i32 0, i32 1
  %374 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %16, align 8
  %375 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %374, i32 0, i32 0
  %376 = load i32, i32* %375, align 8
  %377 = sext i32 %376 to i64
  %378 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %373, i64 %377) #3
  %379 = load i32, i32* %378, align 4
  %380 = icmp eq i32 %379, -1
  br label %164

; <label>:381:                                    ; preds = %219, %205
  br label %219

; <label>:382:                                    ; preds = %277, %250
  %383 = landingpad { i8*, i32 }
          cleanup
  %384 = extractvalue { i8*, i32 } %383, 0
  store i8* %384, i8** %10, align 8
  %385 = extractvalue { i8*, i32 } %383, 1
  store i32 %385, i32* %11, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %8) #3
  br label %277

; <label>:386:                                    ; preds = %337, %310
  br label %337
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector"* %7, i64 %8, i32* dereferenceable(4) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZN5Dinic3dfsEiix(%struct.Dinic*, i32, i32, i64) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca i1
  %9 = alloca %struct.Dinic*
  %10 = alloca i64*
  %11 = alloca %"struct.Graph::edge"**
  %12 = alloca i32**
  %13 = alloca i64*
  %14 = alloca i32*
  %15 = alloca i32*
  %16 = alloca i64*
  %17 = alloca i1
  %18 = alloca i1
  %19 = load i32, i32* @x.409
  %20 = load i32, i32* @y.410
  %21 = add i32 %19, -1984606654
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, -1984606654
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  store i1 %27, i1* %18
  %28 = icmp slt i32 %20, 10
  store i1 %28, i1* %17
  %29 = alloca i32
  store i32 -1064550328, i32* %29
  br label %30

; <label>:30:                                     ; preds = %4, %540
  %31 = load i32, i32* %29
  switch i32 %31, label %32 [
    i32 -1064550328, label %33
    i32 -1443045312, label %41
    i32 -1107434941, label %86
    i32 1030278512, label %89
    i32 871035603, label %93
    i32 -493416179, label %108
    i32 290044442, label %131
    i32 1206155569, label %132
    i32 526596352, label %145
    i32 482992695, label %173
    i32 -52827916, label %217
    i32 669929551, label %220
    i32 -2061070278, label %247
    i32 1442961375, label %292
    i32 -1401363333, label %295
    i32 -87435889, label %310
    i32 26037741, label %356
    i32 -680999152, label %359
    i32 -151569277, label %392
    i32 438384284, label %393
    i32 -1973806610, label %394
    i32 1745662193, label %402
    i32 1719581339, label %430
    i32 -643492391, label %459
    i32 -886522914, label %460
    i32 899396532, label %463
    i32 372383240, label %476
    i32 1786487961, label %484
    i32 30302626, label %501
    i32 -94079595, label %519
    i32 984696896, label %538
  ]

; <label>:32:                                     ; preds = %30
  br label %540

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %18
  %35 = load volatile i1, i1* %17
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -1443045312, i32 899396532
  store i32 %40, i32* %29
  br label %540

; <label>:41:                                     ; preds = %30
  %42 = alloca i64, align 8
  store i64* %42, i64** %16
  %43 = alloca %struct.Dinic*, align 8
  %44 = alloca i32, align 4
  store i32* %44, i32** %15
  %45 = alloca i32, align 4
  store i32* %45, i32** %14
  %46 = alloca i64, align 8
  store i64* %46, i64** %13
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %12
  %48 = alloca %"struct.Graph::edge"*, align 8
  store %"struct.Graph::edge"** %48, %"struct.Graph::edge"*** %11
  %49 = alloca i64, align 8
  store i64* %49, i64** %10
  store %struct.Dinic* %0, %struct.Dinic** %43, align 8
  %50 = load volatile i32*, i32** %15
  store i32 %1, i32* %50, align 4
  %51 = load volatile i32*, i32** %14
  store i32 %2, i32* %51, align 4
  %52 = load volatile i64*, i64** %13
  store i64 %3, i64* %52, align 8
  %53 = load %struct.Dinic*, %struct.Dinic** %43, align 8
  store %struct.Dinic* %53, %struct.Dinic** %9
  %54 = load volatile i32*, i32** %15
  %55 = load i32, i32* %54, align 4
  %56 = load volatile i32*, i32** %14
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %55, %57
  store i1 %58, i1* %8
  %59 = load i32, i32* @x.409
  %60 = load i32, i32* @y.410
  %61 = add i32 %59, 2041187798
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 2041187798
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -1107434941, i32 899396532
  store i32 %85, i32* %29
  br label %540

; <label>:86:                                     ; preds = %30
  %87 = load volatile i1, i1* %8
  %88 = select i1 %87, i32 1030278512, i32 871035603
  store i32 %88, i32* %29
  br label %540

; <label>:89:                                     ; preds = %30
  %90 = load volatile i64*, i64** %13
  %91 = load i64, i64* %90, align 8
  %92 = load volatile i64*, i64** %16
  store i64 %91, i64* %92, align 8
  store i32 -886522914, i32* %29
  br label %540

; <label>:93:                                     ; preds = %30
  %94 = load i32, i32* @x.409
  %95 = load i32, i32* @y.410
  %96 = sub i32 0, 1
  %97 = add i32 %94, %96
  %98 = sub i32 %94, 1
  %99 = mul i32 %94, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %95, 10
  %103 = and i1 %101, %102
  %104 = xor i1 %101, %102
  %105 = or i1 %103, %104
  %106 = or i1 %101, %102
  %107 = select i1 %105, i32 -493416179, i32 372383240
  store i32 %107, i32* %29
  br label %540

; <label>:108:                                    ; preds = %30
  %109 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %110 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %109, i32 0, i32 2
  %111 = load volatile i32*, i32** %15
  %112 = load i32, i32* %111, align 4
  %113 = sext i32 %112 to i64
  %114 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %110, i64 %113) #3
  %115 = load volatile i32**, i32*** %12
  store i32* %114, i32** %115, align 8
  %116 = load i32, i32* @x.409
  %117 = load i32, i32* @y.410
  %118 = sub i32 %116, 357432026
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 357432026
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  %130 = select i1 %128, i32 290044442, i32 372383240
  store i32 %130, i32* %29
  br label %540

; <label>:131:                                    ; preds = %30
  store i32 1206155569, i32* %29
  br label %540

; <label>:132:                                    ; preds = %30
  %133 = load volatile i32**, i32*** %12
  %134 = load i32*, i32** %133, align 8
  %135 = load i32, i32* %134, align 4
  %136 = sext i32 %135 to i64
  %137 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %138 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %137, i32 0, i32 3
  %139 = load volatile i32*, i32** %15
  %140 = load i32, i32* %139, align 4
  %141 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %138, i32 %140)
  %142 = call i64 @_ZNKSt6vectorIN5Graph4edgeESaIS1_EE4sizeEv(%"class.std::vector.8"* %141) #3
  %143 = icmp ult i64 %136, %142
  %144 = select i1 %143, i32 526596352, i32 1745662193
  store i32 %144, i32* %29
  br label %540

; <label>:145:                                    ; preds = %30
  %146 = load i32, i32* @x.409
  %147 = load i32, i32* @y.410
  %148 = add i32 %146, 566511335
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, 566511335
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 false, true
  %159 = and i1 %156, false
  %160 = and i1 %154, %158
  %161 = and i1 %157, false
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 false, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  %172 = select i1 %170, i32 482992695, i32 1786487961
  store i32 %172, i32* %29
  br label %540

; <label>:173:                                    ; preds = %30
  %174 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %175 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %174, i32 0, i32 3
  %176 = load volatile i32*, i32** %15
  %177 = load i32, i32* %176, align 4
  %178 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %175, i32 %177)
  %179 = load volatile i32**, i32*** %12
  %180 = load i32*, i32** %179, align 8
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %178, i64 %182) #3
  %184 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  store %"struct.Graph::edge"* %183, %"struct.Graph::edge"** %184, align 8
  %185 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %186 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %185, align 8
  %187 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %186, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = icmp sgt i64 %188, 0
  store i1 %189, i1* %7
  %190 = load i32, i32* @x.409
  %191 = load i32, i32* @y.410
  %192 = sub i32 %190, 358486844
  %193 = sub i32 %192, 1
  %194 = add i32 %193, 358486844
  %195 = sub i32 %190, 1
  %196 = mul i32 %190, %194
  %197 = urem i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = icmp slt i32 %191, 10
  %200 = xor i1 %198, true
  %201 = xor i1 %199, true
  %202 = xor i1 true, true
  %203 = and i1 %200, true
  %204 = and i1 %198, %202
  %205 = and i1 %201, true
  %206 = and i1 %199, %202
  %207 = or i1 %203, %204
  %208 = or i1 %205, %206
  %209 = xor i1 %207, %208
  %210 = or i1 %200, %201
  %211 = xor i1 %210, true
  %212 = or i1 true, %202
  %213 = and i1 %211, %212
  %214 = or i1 %209, %213
  %215 = or i1 %198, %199
  %216 = select i1 %214, i32 -52827916, i32 1786487961
  store i32 %216, i32* %29
  br label %540

; <label>:217:                                    ; preds = %30
  %218 = load volatile i1, i1* %7
  %219 = select i1 %218, i32 669929551, i32 438384284
  store i32 %219, i32* %29
  br label %540

; <label>:220:                                    ; preds = %30
  %221 = load i32, i32* @x.409
  %222 = load i32, i32* @y.410
  %223 = sub i32 0, 1
  %224 = add i32 %221, %223
  %225 = sub i32 %221, 1
  %226 = mul i32 %221, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %222, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 true, true
  %233 = and i1 %230, true
  %234 = and i1 %228, %232
  %235 = and i1 %231, true
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 true, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  %246 = select i1 %244, i32 -2061070278, i32 30302626
  store i32 %246, i32* %29
  br label %540

; <label>:247:                                    ; preds = %30
  %248 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %249 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %248, i32 0, i32 1
  %250 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %251 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %250, align 8
  %252 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %251, i32 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = sext i32 %253 to i64
  %255 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %249, i64 %254) #3
  %256 = load i32, i32* %255, align 4
  %257 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %258 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %257, i32 0, i32 1
  %259 = load volatile i32*, i32** %15
  %260 = load i32, i32* %259, align 4
  %261 = sext i32 %260 to i64
  %262 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %258, i64 %261) #3
  %263 = load i32, i32* %262, align 4
  %264 = icmp sgt i32 %256, %263
  store i1 %264, i1* %6
  %265 = load i32, i32* @x.409
  %266 = load i32, i32* @y.410
  %267 = sub i32 %265, -1216314418
  %268 = sub i32 %267, 1
  %269 = add i32 %268, -1216314418
  %270 = sub i32 %265, 1
  %271 = mul i32 %265, %269
  %272 = urem i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = icmp slt i32 %266, 10
  %275 = xor i1 %273, true
  %276 = xor i1 %274, true
  %277 = xor i1 true, true
  %278 = and i1 %275, true
  %279 = and i1 %273, %277
  %280 = and i1 %276, true
  %281 = and i1 %274, %277
  %282 = or i1 %278, %279
  %283 = or i1 %280, %281
  %284 = xor i1 %282, %283
  %285 = or i1 %275, %276
  %286 = xor i1 %285, true
  %287 = or i1 true, %277
  %288 = and i1 %286, %287
  %289 = or i1 %284, %288
  %290 = or i1 %273, %274
  %291 = select i1 %289, i32 1442961375, i32 30302626
  store i32 %291, i32* %29
  br label %540

; <label>:292:                                    ; preds = %30
  %293 = load volatile i1, i1* %6
  %294 = select i1 %293, i32 -1401363333, i32 438384284
  store i32 %294, i32* %29
  br label %540

; <label>:295:                                    ; preds = %30
  %296 = load i32, i32* @x.409
  %297 = load i32, i32* @y.410
  %298 = sub i32 0, 1
  %299 = add i32 %296, %298
  %300 = sub i32 %296, 1
  %301 = mul i32 %296, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %297, 10
  %305 = and i1 %303, %304
  %306 = xor i1 %303, %304
  %307 = or i1 %305, %306
  %308 = or i1 %303, %304
  %309 = select i1 %307, i32 -87435889, i32 -94079595
  store i32 %309, i32* %29
  br label %540

; <label>:310:                                    ; preds = %30
  %311 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %312 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %311, align 8
  %313 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %312, i32 0, i32 0
  %314 = load i32, i32* %313, align 8
  %315 = load volatile i32*, i32** %14
  %316 = load i32, i32* %315, align 4
  %317 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %318 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %317, align 8
  %319 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %318, i32 0, i32 1
  %320 = load volatile i64*, i64** %13
  %321 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %320, i64* dereferenceable(8) %319)
  %322 = load i64, i64* %321, align 8
  %323 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %324 = call i64 @_ZN5Dinic3dfsEiix(%struct.Dinic* %323, i32 %314, i32 %316, i64 %322)
  %325 = load volatile i64*, i64** %10
  store i64 %324, i64* %325, align 8
  %326 = load volatile i64*, i64** %10
  %327 = load i64, i64* %326, align 8
  %328 = icmp sgt i64 %327, 0
  store i1 %328, i1* %5
  %329 = load i32, i32* @x.409
  %330 = load i32, i32* @y.410
  %331 = sub i32 %329, 1231434342
  %332 = sub i32 %331, 1
  %333 = add i32 %332, 1231434342
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 false, true
  %342 = and i1 %339, false
  %343 = and i1 %337, %341
  %344 = and i1 %340, false
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 false, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  %355 = select i1 %353, i32 26037741, i32 -94079595
  store i32 %355, i32* %29
  br label %540

; <label>:356:                                    ; preds = %30
  %357 = load volatile i1, i1* %5
  %358 = select i1 %357, i32 -680999152, i32 -151569277
  store i32 %358, i32* %29
  br label %540

; <label>:359:                                    ; preds = %30
  %360 = load volatile i64*, i64** %10
  %361 = load i64, i64* %360, align 8
  %362 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %363 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %362, align 8
  %364 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %363, i32 0, i32 1
  %365 = load i64, i64* %364, align 8
  %366 = sub i64 %365, -5149346551619835607
  %367 = sub i64 %366, %361
  %368 = add i64 %367, -5149346551619835607
  %369 = sub nsw i64 %365, %361
  store i64 %368, i64* %364, align 8
  %370 = load volatile i64*, i64** %10
  %371 = load i64, i64* %370, align 8
  %372 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %373 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %372, i32 0, i32 3
  %374 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %375 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %374, align 8
  %376 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %375, i32 0, i32 0
  %377 = load i32, i32* %376, align 8
  %378 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %373, i32 %377)
  %379 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %380 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %379, align 8
  %381 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %380, i32 0, i32 2
  %382 = load i64, i64* %381, align 8
  %383 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %378, i64 %382) #3
  %384 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %383, i32 0, i32 1
  %385 = load i64, i64* %384, align 8
  %386 = sub i64 0, %371
  %387 = sub i64 %385, %386
  %388 = add nsw i64 %385, %371
  store i64 %387, i64* %384, align 8
  %389 = load volatile i64*, i64** %10
  %390 = load i64, i64* %389, align 8
  %391 = load volatile i64*, i64** %16
  store i64 %390, i64* %391, align 8
  store i32 -886522914, i32* %29
  br label %540

; <label>:392:                                    ; preds = %30
  store i32 438384284, i32* %29
  br label %540

; <label>:393:                                    ; preds = %30
  store i32 -1973806610, i32* %29
  br label %540

; <label>:394:                                    ; preds = %30
  %395 = load volatile i32**, i32*** %12
  %396 = load i32*, i32** %395, align 8
  %397 = load i32, i32* %396, align 4
  %398 = sub i32 %397, -1559394044
  %399 = add i32 %398, 1
  %400 = add i32 %399, -1559394044
  %401 = add nsw i32 %397, 1
  store i32 %400, i32* %396, align 4
  store i32 1206155569, i32* %29
  br label %540

; <label>:402:                                    ; preds = %30
  %403 = load i32, i32* @x.409
  %404 = load i32, i32* @y.410
  %405 = sub i32 %403, -1695368379
  %406 = sub i32 %405, 1
  %407 = add i32 %406, -1695368379
  %408 = sub i32 %403, 1
  %409 = mul i32 %403, %407
  %410 = urem i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = icmp slt i32 %404, 10
  %413 = xor i1 %411, true
  %414 = xor i1 %412, true
  %415 = xor i1 false, true
  %416 = and i1 %413, false
  %417 = and i1 %411, %415
  %418 = and i1 %414, false
  %419 = and i1 %412, %415
  %420 = or i1 %416, %417
  %421 = or i1 %418, %419
  %422 = xor i1 %420, %421
  %423 = or i1 %413, %414
  %424 = xor i1 %423, true
  %425 = or i1 false, %415
  %426 = and i1 %424, %425
  %427 = or i1 %422, %426
  %428 = or i1 %411, %412
  %429 = select i1 %427, i32 1719581339, i32 984696896
  store i32 %429, i32* %29
  br label %540

; <label>:430:                                    ; preds = %30
  %431 = load volatile i64*, i64** %16
  store i64 0, i64* %431, align 8
  %432 = load i32, i32* @x.409
  %433 = load i32, i32* @y.410
  %434 = sub i32 %432, 1430777744
  %435 = sub i32 %434, 1
  %436 = add i32 %435, 1430777744
  %437 = sub i32 %432, 1
  %438 = mul i32 %432, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %433, 10
  %442 = xor i1 %440, true
  %443 = xor i1 %441, true
  %444 = xor i1 true, true
  %445 = and i1 %442, true
  %446 = and i1 %440, %444
  %447 = and i1 %443, true
  %448 = and i1 %441, %444
  %449 = or i1 %445, %446
  %450 = or i1 %447, %448
  %451 = xor i1 %449, %450
  %452 = or i1 %442, %443
  %453 = xor i1 %452, true
  %454 = or i1 true, %444
  %455 = and i1 %453, %454
  %456 = or i1 %451, %455
  %457 = or i1 %440, %441
  %458 = select i1 %456, i32 -643492391, i32 984696896
  store i32 %458, i32* %29
  br label %540

; <label>:459:                                    ; preds = %30
  store i32 -886522914, i32* %29
  br label %540

; <label>:460:                                    ; preds = %30
  %461 = load volatile i64*, i64** %16
  %462 = load i64, i64* %461, align 8
  ret i64 %462

; <label>:463:                                    ; preds = %30
  %464 = alloca i64, align 8
  %465 = alloca %struct.Dinic*, align 8
  %466 = alloca i32, align 4
  %467 = alloca i32, align 4
  %468 = alloca i64, align 8
  %469 = alloca i32*, align 8
  %470 = alloca %"struct.Graph::edge"*, align 8
  %471 = alloca i64, align 8
  store %struct.Dinic* %0, %struct.Dinic** %465, align 8
  store i32 %1, i32* %466, align 4
  store i32 %2, i32* %467, align 4
  store i64 %3, i64* %468, align 8
  %472 = load %struct.Dinic*, %struct.Dinic** %465, align 8
  %473 = load i32, i32* %466, align 4
  %474 = load i32, i32* %467, align 4
  %475 = icmp eq i32 %473, %474
  store i32 -1443045312, i32* %29
  br label %540

; <label>:476:                                    ; preds = %30
  %477 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %478 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %477, i32 0, i32 2
  %479 = load volatile i32*, i32** %15
  %480 = load i32, i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %478, i64 %481) #3
  %483 = load volatile i32**, i32*** %12
  store i32* %482, i32** %483, align 8
  store i32 -493416179, i32* %29
  br label %540

; <label>:484:                                    ; preds = %30
  %485 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %486 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %485, i32 0, i32 3
  %487 = load volatile i32*, i32** %15
  %488 = load i32, i32* %487, align 4
  %489 = call dereferenceable(24) %"class.std::vector.8"* @_ZN5GraphixEi(%struct.Graph* %486, i32 %488)
  %490 = load volatile i32**, i32*** %12
  %491 = load i32*, i32** %490, align 8
  %492 = load i32, i32* %491, align 4
  %493 = sext i32 %492 to i64
  %494 = call dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"* %489, i64 %493) #3
  %495 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  store %"struct.Graph::edge"* %494, %"struct.Graph::edge"** %495, align 8
  %496 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %497 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %496, align 8
  %498 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %497, i32 0, i32 1
  %499 = load i64, i64* %498, align 8
  %500 = icmp sgt i64 %499, 0
  store i32 482992695, i32* %29
  br label %540

; <label>:501:                                    ; preds = %30
  %502 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %503 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %502, i32 0, i32 1
  %504 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %505 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %504, align 8
  %506 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %505, i32 0, i32 0
  %507 = load i32, i32* %506, align 8
  %508 = sext i32 %507 to i64
  %509 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %503, i64 %508) #3
  %510 = load i32, i32* %509, align 4
  %511 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %512 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %511, i32 0, i32 1
  %513 = load volatile i32*, i32** %15
  %514 = load i32, i32* %513, align 4
  %515 = sext i32 %514 to i64
  %516 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector"* %512, i64 %515) #3
  %517 = load i32, i32* %516, align 4
  %518 = icmp sgt i32 %510, %517
  store i32 -2061070278, i32* %29
  br label %540

; <label>:519:                                    ; preds = %30
  %520 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %521 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %520, align 8
  %522 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %521, i32 0, i32 0
  %523 = load i32, i32* %522, align 8
  %524 = load volatile i32*, i32** %14
  %525 = load i32, i32* %524, align 4
  %526 = load volatile %"struct.Graph::edge"**, %"struct.Graph::edge"*** %11
  %527 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %526, align 8
  %528 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %527, i32 0, i32 1
  %529 = load volatile i64*, i64** %13
  %530 = call dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8) %529, i64* dereferenceable(8) %528)
  %531 = load i64, i64* %530, align 8
  %532 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %533 = call i64 @_ZN5Dinic3dfsEiix(%struct.Dinic* %532, i32 %523, i32 %525, i64 %531)
  %534 = load volatile i64*, i64** %10
  store i64 %533, i64* %534, align 8
  %535 = load volatile i64*, i64** %10
  %536 = load i64, i64* %535, align 8
  %537 = icmp sgt i64 %536, 0
  store i32 -87435889, i32* %29
  br label %540

; <label>:538:                                    ; preds = %30
  %539 = load volatile i64*, i64** %16
  store i64 0, i64* %539, align 8
  store i32 1719581339, i32* %29
  br label %540

; <label>:540:                                    ; preds = %538, %519, %501, %484, %476, %463, %459, %430, %402, %394, %393, %392, %359, %356, %310, %295, %292, %247, %220, %217, %173, %145, %132, %131, %108, %93, %89, %86, %41, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %4)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.413
  %6 = load i32, i32* @y.414
  %7 = add i32 %5, 1263954110
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1263954110
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1058933086, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1058933086, label %19
    i32 -1351833322, label %39
    i32 1231061012, label %72
    i32 1335049614, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1351833322, i32 1335049614
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  %41 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %41, align 8
  %42 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %43 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %42, i32 0, i32 0
  %44 = load %"class.std::deque"*, %"class.std::deque"** %41, align 8
  %45 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %44) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %43, %"class.std::deque"* dereferenceable(80) %45)
  %46 = load i32, i32* @x.413
  %47 = load i32, i32* @y.414
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1231061012, i32 1335049614
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::queue"*, align 8
  %75 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %75, align 8
  %76 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %77 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %76, i32 0, i32 0
  %78 = load %"class.std::deque"*, %"class.std::deque"** %75, align 8
  %79 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %78) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %77, %"class.std::deque"* dereferenceable(80) %79)
  store i32 -1351833322, i32* %15
  br label %80

; <label>:80:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator"* dereferenceable(1) %9)
          to label %10 unwind label %41

; <label>:10:                                     ; preds = %1
  %11 = load i32, i32* @x.415
  %12 = load i32, i32* @y.416
  %13 = add i32 %11, -1305886372
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, -1305886372
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %119

; <label>:25:                                     ; preds = %10, %119
  %26 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %26) #3
  %27 = load i32, i32* @x.415
  %28 = load i32, i32* @y.416
  %29 = sub i32 0, 1
  %30 = add i32 %27, %29
  %31 = sub i32 %27, 1
  %32 = mul i32 %27, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %28, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  br i1 %38, label %40, label %119

; <label>:40:                                     ; preds = %25
  ret void

; <label>:41:                                     ; preds = %1
  %42 = load i32, i32* @x.415
  %43 = load i32, i32* @y.416
  %44 = sub i32 %42, 1315194077
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1315194077
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %121

; <label>:56:                                     ; preds = %41, %121
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  store i8* %58, i8** %5, align 8
  %59 = extractvalue { i8*, i32 } %57, 1
  store i32 %59, i32* %6, align 4
  %60 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %60) #3
  %61 = load i32, i32* @x.415
  %62 = load i32, i32* @y.416
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %121

; <label>:86:                                     ; preds = %56
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i32, i32* @x.415
  %89 = load i32, i32* @y.416
  %90 = add i32 %88, -1241794354
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -1241794354
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  br i1 %100, label %102, label %126

; <label>:102:                                    ; preds = %87, %126
  %103 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %103) #11
  %104 = load i32, i32* @x.415
  %105 = load i32, i32* @y.416
  %106 = sub i32 %104, 1378984888
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 1378984888
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %126

; <label>:118:                                    ; preds = %102
  unreachable

; <label>:119:                                    ; preds = %25, %10
  %120 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %120) #3
  br label %25

; <label>:121:                                    ; preds = %56, %41
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %5, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %6, align 4
  %125 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %125) #3
  br label %56

; <label>:126:                                    ; preds = %102, %87
  %127 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %127) #11
  br label %102
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.417
  %6 = load i32, i32* @y.418
  %7 = sub i32 %5, 1056673352
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1056673352
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 925078298, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %79
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 925078298, label %19
    i32 -614234538, label %39
    i32 -136680286, label %72
    i32 1372882372, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %79

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -614234538, i32 1372882372
  store i32 %38, i32* %15
  br label %79

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  %41 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %43 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %42, i32 0, i32 0
  %44 = load i32*, i32** %41, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %43, i32* dereferenceable(4) %44)
  %45 = load i32, i32* @x.417
  %46 = load i32, i32* @y.418
  %47 = add i32 %45, -2015534552
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2015534552
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -136680286, i32 1372882372
  store i32 %71, i32* %15
  br label %79

; <label>:72:                                     ; preds = %16
  ret void

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::queue"*, align 8
  %75 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  store i32* %1, i32** %75, align 8
  %76 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %77 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %76, i32 0, i32 0
  %78 = load i32*, i32** %75, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %77, i32* dereferenceable(4) %78)
  store i32 -614234538, i32* %15
  br label %79

; <label>:79:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %4) #3
  ret i1 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  %5 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %4) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.423
  %5 = load i32, i32* @y.424
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2012800826, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %72
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2012800826, label %17
    i32 638424317, label %37
    i32 -1115821395, label %67
    i32 -1624262871, label %68
  ]

; <label>:16:                                     ; preds = %14
  br label %72

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 638424317, i32 -1624262871
  store i32 %36, i32* %13
  br label %72

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %38, align 8
  %39 = load %"class.std::queue"*, %"class.std::queue"** %38, align 8
  %40 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %39, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %40) #3
  %41 = load i32, i32* @x.423
  %42 = load i32, i32* @y.424
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1115821395, i32 -1624262871
  store i32 %66, i32* %13
  br label %72

; <label>:67:                                     ; preds = %14
  ret void

; <label>:68:                                     ; preds = %14
  %69 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %69, align 8
  %70 = load %"class.std::queue"*, %"class.std::queue"** %69, align 8
  %71 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %70, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %71) #3
  store i32 638424317, i32* %13
  br label %72

; <label>:72:                                     ; preds = %68, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESC_(%"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.15"* dereferenceable(8)) #4 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %1, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %3, align 8
  %6 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %5) #3
  %7 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %4, align 8
  %9 = call dereferenceable(8) %"struct.Graph::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.15"* %8) #3
  %10 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %9, align 8
  %11 = icmp ne %"struct.Graph::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"struct.Graph::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.427
  %6 = load i32, i32* @y.428
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1490484595, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1490484595, label %18
    i32 1324917409, label %26
    i32 33128800, label %58
    i32 -927936792, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1324917409, i32 -927936792
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %28, i32 0, i32 0
  %30 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %29, align 8
  store %"struct.Graph::edge"* %30, %"struct.Graph::edge"** %2
  %31 = load i32, i32* @x.427
  %32 = load i32, i32* @y.428
  %33 = add i32 %31, 1978608509
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1978608509
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 33128800, i32 -927936792
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile %"struct.Graph::edge"*, %"struct.Graph::edge"** %2
  ret %"struct.Graph::edge"* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %61, align 8
  %62 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %61, align 8
  %63 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %62, i32 0, i32 0
  %64 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %63, align 8
  store i32 1324917409, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator.15"* @_ZN9__gnu_cxx17__normal_iteratorIPN5Graph4edgeESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator.15"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.15"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.429
  %6 = load i32, i32* @y.430
  %7 = add i32 %5, -2035959219
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2035959219
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -801474872, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -801474872, label %19
    i32 -338871454, label %39
    i32 650288267, label %72
    i32 -1387957903, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -338871454, i32 -1387957903
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %40, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %41, %"class.__gnu_cxx::__normal_iterator.15"** %2
  %42 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %42, i32 0, i32 0
  %44 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %43, align 8
  %45 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %44, i32 1
  store %"struct.Graph::edge"* %45, %"struct.Graph::edge"** %43, align 8
  %46 = load i32, i32* @x.429
  %47 = load i32, i32* @y.430
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 650288267, i32 -1387957903
  store i32 %71, i32* %15
  br label %80

; <label>:72:                                     ; preds = %16
  %73 = load volatile %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %2
  ret %"class.__gnu_cxx::__normal_iterator.15"* %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.15"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.15"* %0, %"class.__gnu_cxx::__normal_iterator.15"** %75, align 8
  %76 = load %"class.__gnu_cxx::__normal_iterator.15"*, %"class.__gnu_cxx::__normal_iterator.15"** %75, align 8
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.15", %"class.__gnu_cxx::__normal_iterator.15"* %76, i32 0, i32 0
  %78 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %77, align 8
  %79 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %78, i32 1
  store %"struct.Graph::edge"* %79, %"struct.Graph::edge"** %77, align 8
  store i32 -338871454, i32* %15
  br label %80

; <label>:80:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.433
  %3 = load i32, i32* @y.434
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %46

; <label>:15:                                     ; preds = %1, %46
  %16 = alloca %"class.std::_Deque_base"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %16, align 8
  %19 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %16, align 8
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20)
  %21 = load i32, i32* @x.433
  %22 = load i32, i32* @y.434
  %23 = sub i32 %21, 1138685970
  %24 = sub i32 %23, 1
  %25 = add i32 %24, 1138685970
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %46

; <label>:35:                                     ; preds = %15
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %19, i64 0)
          to label %36 unwind label %37

; <label>:36:                                     ; preds = %35
  ret void

; <label>:37:                                     ; preds = %35
  %38 = landingpad { i8*, i32 }
          cleanup
  %39 = extractvalue { i8*, i32 } %38, 0
  store i8* %39, i8** %17, align 8
  %40 = extractvalue { i8*, i32 } %38, 1
  store i32 %40, i32* %18, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20) #3
  br label %41

; <label>:41:                                     ; preds = %37
  %42 = load i8*, i8** %17, align 8
  %43 = load i32, i32* %18, align 4
  %44 = insertvalue { i8*, i32 } undef, i8* %42, 0
  %45 = insertvalue { i8*, i32 } %44, i32 %43, 1
  resume { i8*, i32 } %45

; <label>:46:                                     ; preds = %15, %1
  %47 = alloca %"class.std::_Deque_base"*, align 8
  %48 = alloca i8*
  %49 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %47, align 8
  %50 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %47, align 8
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %51)
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 0
  store i32** null, i32*** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %7) #3
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %8) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 %15, -2581320369214207609
  %17 = add i64 %16, 1
  %18 = add i64 %17, -2581320369214207609
  %19 = add i64 %15, 1
  store i64 %18, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %20 = load i64, i64* %5, align 8
  %21 = sub i64 0, %20
  %22 = sub i64 0, 2
  %23 = add i64 %21, %22
  %24 = sub i64 0, %23
  %25 = add i64 %20, 2
  store i64 %24, i64* %7, align 8
  %26 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 1
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %32)
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34, i32 0, i32 0
  store i32** %33, i32*** %35, align 8
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 0
  %38 = load i32**, i32*** %37, align 8
  %39 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %39, i32 0, i32 1
  %41 = load i64, i64* %40, align 8
  %42 = load i64, i64* %5, align 8
  %43 = add i64 %41, -9104003258293596190
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -9104003258293596190
  %46 = sub i64 %41, %42
  %47 = udiv i64 %45, 2
  %48 = getelementptr inbounds i32*, i32** %38, i64 %47
  store i32** %48, i32*** %8, align 8
  %49 = load i32**, i32*** %8, align 8
  %50 = load i64, i64* %5, align 8
  %51 = getelementptr inbounds i32*, i32** %49, i64 %50
  store i32** %51, i32*** %9, align 8
  %52 = load i32**, i32*** %8, align 8
  %53 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %52, i32** %53)
          to label %54 unwind label %55

; <label>:54:                                     ; preds = %2
  br label %173

; <label>:55:                                     ; preds = %2
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %10, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %11, align 4
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i32, i32* @x.437
  %61 = load i32, i32* @y.438
  %62 = sub i32 %60, 1073138541
  %63 = sub i32 %62, 1
  %64 = add i32 %63, 1073138541
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %250

; <label>:86:                                     ; preds = %59, %250
  %87 = load i8*, i8** %10, align 8
  %88 = call i8* @__cxa_begin_catch(i8* %87) #3
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %89, i32 0, i32 0
  %91 = load i32**, i32*** %90, align 8
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %92, i32 0, i32 1
  %94 = load i64, i64* %93, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %91, i64 %94) #3
  %95 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %95, i32 0, i32 0
  store i32** null, i32*** %96, align 8
  %97 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %98 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %97, i32 0, i32 1
  store i64 0, i64* %98, align 8
  %99 = load i32, i32* @x.437
  %100 = load i32, i32* @y.438
  %101 = add i32 %99, 89900860
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 89900860
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %250

; <label>:125:                                    ; preds = %86
  invoke void @__cxa_rethrow() #12
          to label %207 unwind label %126

; <label>:126:                                    ; preds = %125
  %127 = landingpad { i8*, i32 }
          cleanup
  %128 = extractvalue { i8*, i32 } %127, 0
  store i8* %128, i8** %10, align 8
  %129 = extractvalue { i8*, i32 } %127, 1
  store i32 %129, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %130 unwind label %204

; <label>:130:                                    ; preds = %126
  %131 = load i32, i32* @x.437
  %132 = load i32, i32* @y.438
  %133 = sub i32 %131, 859448985
  %134 = sub i32 %133, 1
  %135 = add i32 %134, 859448985
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = xor i1 %139, true
  %142 = xor i1 %140, true
  %143 = xor i1 true, true
  %144 = and i1 %141, true
  %145 = and i1 %139, %143
  %146 = and i1 %142, true
  %147 = and i1 %140, %143
  %148 = or i1 %144, %145
  %149 = or i1 %146, %147
  %150 = xor i1 %148, %149
  %151 = or i1 %141, %142
  %152 = xor i1 %151, true
  %153 = or i1 true, %143
  %154 = and i1 %152, %153
  %155 = or i1 %150, %154
  %156 = or i1 %139, %140
  br i1 %155, label %157, label %263

; <label>:157:                                    ; preds = %130, %263
  %158 = load i32, i32* @x.437
  %159 = load i32, i32* @y.438
  %160 = add i32 %158, 1867847523
  %161 = sub i32 %160, 1
  %162 = sub i32 %161, 1867847523
  %163 = sub i32 %158, 1
  %164 = mul i32 %158, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %159, 10
  %168 = and i1 %166, %167
  %169 = xor i1 %166, %167
  %170 = or i1 %168, %169
  %171 = or i1 %166, %167
  br i1 %170, label %172, label %263

; <label>:172:                                    ; preds = %157
  br label %199

; <label>:173:                                    ; preds = %54
  %174 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %175 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %174, i32 0, i32 2
  %176 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %175, i32** %176) #3
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %177, i32 0, i32 3
  %179 = load i32**, i32*** %9, align 8
  %180 = getelementptr inbounds i32*, i32** %179, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %178, i32** %180) #3
  %181 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %182 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %181, i32 0, i32 2
  %183 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %182, i32 0, i32 1
  %184 = load i32*, i32** %183, align 8
  %185 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %186 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %185, i32 0, i32 2
  %187 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %186, i32 0, i32 0
  store i32* %184, i32** %187, align 8
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 3
  %190 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %189, i32 0, i32 1
  %191 = load i32*, i32** %190, align 8
  %192 = load i64, i64* %4, align 8
  %193 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %194 = urem i64 %192, %193
  %195 = getelementptr inbounds i32, i32* %191, i64 %194
  %196 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %197 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %196, i32 0, i32 3
  %198 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %197, i32 0, i32 0
  store i32* %195, i32** %198, align 8
  ret void

; <label>:199:                                    ; preds = %172
  %200 = load i8*, i8** %10, align 8
  %201 = load i32, i32* %11, align 4
  %202 = insertvalue { i8*, i32 } undef, i8* %200, 0
  %203 = insertvalue { i8*, i32 } %202, i32 %201, 1
  resume { i8*, i32 } %203

; <label>:204:                                    ; preds = %126
  %205 = landingpad { i8*, i32 }
          catch i8* null
  %206 = extractvalue { i8*, i32 } %205, 0
  call void @__clang_call_terminate(i8* %206) #11
  unreachable

; <label>:207:                                    ; preds = %125
  %208 = load i32, i32* @x.437
  %209 = load i32, i32* @y.438
  %210 = sub i32 %208, -2054566958
  %211 = sub i32 %210, 1
  %212 = add i32 %211, -2054566958
  %213 = sub i32 %208, 1
  %214 = mul i32 %208, %212
  %215 = urem i32 %214, 2
  %216 = icmp eq i32 %215, 0
  %217 = icmp slt i32 %209, 10
  %218 = xor i1 %216, true
  %219 = xor i1 %217, true
  %220 = xor i1 true, true
  %221 = and i1 %218, true
  %222 = and i1 %216, %220
  %223 = and i1 %219, true
  %224 = and i1 %217, %220
  %225 = or i1 %221, %222
  %226 = or i1 %223, %224
  %227 = xor i1 %225, %226
  %228 = or i1 %218, %219
  %229 = xor i1 %228, true
  %230 = or i1 true, %220
  %231 = and i1 %229, %230
  %232 = or i1 %227, %231
  %233 = or i1 %216, %217
  br i1 %232, label %234, label %264

; <label>:234:                                    ; preds = %207, %264
  %235 = load i32, i32* @x.437
  %236 = load i32, i32* @y.438
  %237 = add i32 %235, -152875394
  %238 = sub i32 %237, 1
  %239 = sub i32 %238, -152875394
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %264

; <label>:249:                                    ; preds = %234
  unreachable

; <label>:250:                                    ; preds = %86, %59
  %251 = load i8*, i8** %10, align 8
  %252 = call i8* @__cxa_begin_catch(i8* %251) #3
  %253 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %253, i32 0, i32 0
  %255 = load i32**, i32*** %254, align 8
  %256 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %256, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %255, i64 %258) #3
  %259 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %260 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %259, i32 0, i32 0
  store i32** null, i32*** %260, align 8
  %261 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %262 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %261, i32 0, i32 1
  store i64 0, i64* %262, align 8
  br label %86

; <label>:263:                                    ; preds = %157, %130
  br label %157

; <label>:264:                                    ; preds = %234, %207
  br label %234
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  store i32* null, i32** %4, align 8
  %5 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 1
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 2
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 3
  store i32** null, i32*** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #4 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 623722614, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %67
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 623722614, label %11
    i32 1364517572, label %15
    i32 -512820673, label %18
    i32 1639312845, label %19
    i32 147156711, label %48
    i32 426450272, label %64
    i32 1781214712, label %66
  ]

; <label>:10:                                     ; preds = %8
  br label %67

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 1364517572, i32 -512820673
  store i32 %14, i32* %6
  br label %67

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 1639312845, i32* %6
  store i64 %17, i64* %7
  br label %67

; <label>:18:                                     ; preds = %8
  store i32 1639312845, i32* %6
  store i64 1, i64* %7
  br label %67

; <label>:19:                                     ; preds = %8
  %20 = load i64, i64* %7
  store i64 %20, i64* %2
  %21 = load i32, i32* @x.447
  %22 = load i32, i32* @y.448
  %23 = sub i32 %21, -406341997
  %24 = sub i32 %23, 1
  %25 = add i32 %24, -406341997
  %26 = sub i32 %21, 1
  %27 = mul i32 %21, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %22, 10
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 147156711, i32 1781214712
  store i32 %47, i32* %6
  br label %67

; <label>:48:                                     ; preds = %8
  %49 = load i32, i32* @x.447
  %50 = load i32, i32* @y.448
  %51 = add i32 %49, 628338631
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 628338631
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 426450272, i32 1781214712
  store i32 %63, i32* %6
  br label %67

; <label>:64:                                     ; preds = %8
  %65 = load volatile i64, i64* %2
  ret i64 %65

; <label>:66:                                     ; preds = %8
  store i32 147156711, i32* %6
  br label %67

; <label>:67:                                     ; preds = %66, %48, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.449
  %4 = load i32, i32* @y.450
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %104

; <label>:16:                                     ; preds = %2, %104
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.17", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %19, %"class.std::_Deque_base"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.449
  %25 = load i32, i32* @y.450
  %26 = sub i32 %24, 1095740024
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1095740024
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %104

; <label>:38:                                     ; preds = %16
  %39 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1) %19, i64 %23)
          to label %40 unwind label %95

; <label>:40:                                     ; preds = %38
  %41 = load i32, i32* @x.449
  %42 = load i32, i32* @y.450
  %43 = sub i32 %41, 1326864983
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 1326864983
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  br i1 %65, label %67, label %112

; <label>:67:                                     ; preds = %40, %112
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  %68 = load i32, i32* @x.449
  %69 = load i32, i32* @y.450
  %70 = sub i32 %68, 1740970912
  %71 = sub i32 %70, 1
  %72 = add i32 %71, 1740970912
  %73 = sub i32 %68, 1
  %74 = mul i32 %68, %72
  %75 = urem i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = icmp slt i32 %69, 10
  %78 = xor i1 %76, true
  %79 = xor i1 %77, true
  %80 = xor i1 false, true
  %81 = and i1 %78, false
  %82 = and i1 %76, %80
  %83 = and i1 %79, false
  %84 = and i1 %77, %80
  %85 = or i1 %81, %82
  %86 = or i1 %83, %84
  %87 = xor i1 %85, %86
  %88 = or i1 %78, %79
  %89 = xor i1 %88, true
  %90 = or i1 false, %80
  %91 = and i1 %89, %90
  %92 = or i1 %87, %91
  %93 = or i1 %76, %77
  br i1 %92, label %94, label %112

; <label>:94:                                     ; preds = %67
  ret i32** %39

; <label>:95:                                     ; preds = %38
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %20, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  br label %99

; <label>:99:                                     ; preds = %95
  %100 = load i8*, i8** %20, align 8
  %101 = load i32, i32* %21, align 4
  %102 = insertvalue { i8*, i32 } undef, i8* %100, 0
  %103 = insertvalue { i8*, i32 } %102, i32 %101, 1
  resume { i8*, i32 } %103

; <label>:104:                                    ; preds = %16, %2
  %105 = alloca %"class.std::_Deque_base"*, align 8
  %106 = alloca i64, align 8
  %107 = alloca %"class.std::allocator.17", align 1
  %108 = alloca i8*
  %109 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %105, align 8
  store i64 %1, i64* %106, align 8
  %110 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %105, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %107, %"class.std::_Deque_base"* %110) #3
  %111 = load i64, i64* %106, align 8
  br label %16

; <label>:112:                                    ; preds = %67, %40
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %19) #3
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %134, %3
  %13 = load i32, i32* @x.451
  %14 = load i32, i32* @y.452
  %15 = sub i32 %13, -1015279977
  %16 = sub i32 %15, 1
  %17 = add i32 %16, -1015279977
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %273

; <label>:27:                                     ; preds = %12, %273
  %28 = load i32**, i32*** %7, align 8
  %29 = load i32**, i32*** %6, align 8
  %30 = icmp ult i32** %28, %29
  %31 = load i32, i32* @x.451
  %32 = load i32, i32* @y.452
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %273

; <label>:44:                                     ; preds = %27
  br i1 %30, label %45, label %185

; <label>:45:                                     ; preds = %44
  %46 = load i32, i32* @x.451
  %47 = load i32, i32* @y.452
  %48 = add i32 %46, 1737517455
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1737517455
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  br i1 %70, label %72, label %277

; <label>:72:                                     ; preds = %45, %277
  %73 = load i32, i32* @x.451
  %74 = load i32, i32* @y.452
  %75 = sub i32 %73, 87415517
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 87415517
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 true, true
  %86 = and i1 %83, true
  %87 = and i1 %81, %85
  %88 = and i1 %84, true
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 true, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %277

; <label>:99:                                     ; preds = %72
  %100 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %101 unwind label %135

; <label>:101:                                    ; preds = %99
  %102 = load i32**, i32*** %7, align 8
  store i32* %100, i32** %102, align 8
  br label %103

; <label>:103:                                    ; preds = %101
  %104 = load i32, i32* @x.451
  %105 = load i32, i32* @y.452
  %106 = sub i32 0, 1
  %107 = add i32 %104, %106
  %108 = sub i32 %104, 1
  %109 = mul i32 %104, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %105, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %278

; <label>:117:                                    ; preds = %103, %278
  %118 = load i32**, i32*** %7, align 8
  %119 = getelementptr inbounds i32*, i32** %118, i32 1
  store i32** %119, i32*** %7, align 8
  %120 = load i32, i32* @x.451
  %121 = load i32, i32* @y.452
  %122 = sub i32 %120, -200203655
  %123 = sub i32 %122, 1
  %124 = add i32 %123, -200203655
  %125 = sub i32 %120, 1
  %126 = mul i32 %120, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %121, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  br i1 %132, label %134, label %278

; <label>:134:                                    ; preds = %117
  br label %12

; <label>:135:                                    ; preds = %99
  %136 = landingpad { i8*, i32 }
          catch i8* null
  %137 = extractvalue { i8*, i32 } %136, 0
  store i8* %137, i8** %8, align 8
  %138 = extractvalue { i8*, i32 } %136, 1
  store i32 %138, i32* %9, align 4
  br label %139

; <label>:139:                                    ; preds = %135
  %140 = load i32, i32* @x.451
  %141 = load i32, i32* @y.452
  %142 = add i32 %140, 1684655942
  %143 = sub i32 %142, 1
  %144 = sub i32 %143, 1684655942
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %281

; <label>:154:                                    ; preds = %139, %281
  %155 = load i8*, i8** %8, align 8
  %156 = call i8* @__cxa_begin_catch(i8* %155) #3
  %157 = load i32**, i32*** %5, align 8
  %158 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %157, i32** %158) #3
  %159 = load i32, i32* @x.451
  %160 = load i32, i32* @y.452
  %161 = sub i32 0, 1
  %162 = add i32 %159, %161
  %163 = sub i32 %159, 1
  %164 = mul i32 %159, %162
  %165 = urem i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = icmp slt i32 %160, 10
  %168 = xor i1 %166, true
  %169 = xor i1 %167, true
  %170 = xor i1 true, true
  %171 = and i1 %168, true
  %172 = and i1 %166, %170
  %173 = and i1 %169, true
  %174 = and i1 %167, %170
  %175 = or i1 %171, %172
  %176 = or i1 %173, %174
  %177 = xor i1 %175, %176
  %178 = or i1 %168, %169
  %179 = xor i1 %178, true
  %180 = or i1 true, %170
  %181 = and i1 %179, %180
  %182 = or i1 %177, %181
  %183 = or i1 %166, %167
  br i1 %182, label %184, label %281

; <label>:184:                                    ; preds = %154
  invoke void @__cxa_rethrow() #12
          to label %230 unwind label %186

; <label>:185:                                    ; preds = %44
  br label %191

; <label>:186:                                    ; preds = %184
  %187 = landingpad { i8*, i32 }
          cleanup
  %188 = extractvalue { i8*, i32 } %187, 0
  store i8* %188, i8** %8, align 8
  %189 = extractvalue { i8*, i32 } %187, 1
  store i32 %189, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %190 unwind label %197

; <label>:190:                                    ; preds = %186
  br label %192

; <label>:191:                                    ; preds = %185
  ret void

; <label>:192:                                    ; preds = %190
  %193 = load i8*, i8** %8, align 8
  %194 = load i32, i32* %9, align 4
  %195 = insertvalue { i8*, i32 } undef, i8* %193, 0
  %196 = insertvalue { i8*, i32 } %195, i32 %194, 1
  resume { i8*, i32 } %196

; <label>:197:                                    ; preds = %186
  %198 = load i32, i32* @x.451
  %199 = load i32, i32* @y.452
  %200 = sub i32 %198, -1482501839
  %201 = sub i32 %200, 1
  %202 = add i32 %201, -1482501839
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %286

; <label>:212:                                    ; preds = %197, %286
  %213 = landingpad { i8*, i32 }
          catch i8* null
  %214 = extractvalue { i8*, i32 } %213, 0
  call void @__clang_call_terminate(i8* %214) #11
  %215 = load i32, i32* @x.451
  %216 = load i32, i32* @y.452
  %217 = add i32 %215, 1951881913
  %218 = sub i32 %217, 1
  %219 = sub i32 %218, 1951881913
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = and i1 %223, %224
  %226 = xor i1 %223, %224
  %227 = or i1 %225, %226
  %228 = or i1 %223, %224
  br i1 %227, label %229, label %286

; <label>:229:                                    ; preds = %212
  unreachable

; <label>:230:                                    ; preds = %184
  %231 = load i32, i32* @x.451
  %232 = load i32, i32* @y.452
  %233 = add i32 %231, 1236861848
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 1236861848
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = xor i1 %239, true
  %242 = xor i1 %240, true
  %243 = xor i1 false, true
  %244 = and i1 %241, false
  %245 = and i1 %239, %243
  %246 = and i1 %242, false
  %247 = and i1 %240, %243
  %248 = or i1 %244, %245
  %249 = or i1 %246, %247
  %250 = xor i1 %248, %249
  %251 = or i1 %241, %242
  %252 = xor i1 %251, true
  %253 = or i1 false, %243
  %254 = and i1 %252, %253
  %255 = or i1 %250, %254
  %256 = or i1 %239, %240
  br i1 %255, label %257, label %289

; <label>:257:                                    ; preds = %230, %289
  %258 = load i32, i32* @x.451
  %259 = load i32, i32* @y.452
  %260 = sub i32 %258, -389146049
  %261 = sub i32 %260, 1
  %262 = add i32 %261, -389146049
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %289

; <label>:272:                                    ; preds = %257
  unreachable

; <label>:273:                                    ; preds = %27, %12
  %274 = load i32**, i32*** %7, align 8
  %275 = load i32**, i32*** %6, align 8
  %276 = icmp ult i32** %274, %275
  br label %27

; <label>:277:                                    ; preds = %72, %45
  br label %72

; <label>:278:                                    ; preds = %117, %103
  %279 = load i32**, i32*** %7, align 8
  %280 = getelementptr inbounds i32*, i32** %279, i32 1
  store i32** %280, i32*** %7, align 8
  br label %117

; <label>:281:                                    ; preds = %154, %139
  %282 = load i8*, i8** %8, align 8
  %283 = call i8* @__cxa_begin_catch(i8* %282) #3
  %284 = load i32**, i32*** %5, align 8
  %285 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %284, i32** %285) #3
  br label %154

; <label>:286:                                    ; preds = %212, %197
  %287 = landingpad { i8*, i32 }
          catch i8* null
  %288 = extractvalue { i8*, i32 } %287, 0
  call void @__clang_call_terminate(i8* %288) #11
  br label %212

; <label>:289:                                    ; preds = %257, %230
  br label %257
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.17", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %55

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.453
  %15 = load i32, i32* @y.454
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %143

; <label>:39:                                     ; preds = %13, %143
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  %40 = load i32, i32* @x.453
  %41 = load i32, i32* @y.454
  %42 = sub i32 %40, -2124892140
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -2124892140
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %143

; <label>:54:                                     ; preds = %39
  ret void

; <label>:55:                                     ; preds = %3
  %56 = load i32, i32* @x.453
  %57 = load i32, i32* @y.454
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %144

; <label>:69:                                     ; preds = %55, %144
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  store i8* %71, i8** %8, align 8
  %72 = extractvalue { i8*, i32 } %70, 1
  store i32 %72, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  %73 = load i32, i32* @x.453
  %74 = load i32, i32* @y.454
  %75 = sub i32 %73, 939098916
  %76 = sub i32 %75, 1
  %77 = add i32 %76, 939098916
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  br i1 %97, label %99, label %144

; <label>:99:                                     ; preds = %69
  br label %100

; <label>:100:                                    ; preds = %99
  %101 = load i32, i32* @x.453
  %102 = load i32, i32* @y.454
  %103 = sub i32 0, 1
  %104 = add i32 %101, %103
  %105 = sub i32 %101, 1
  %106 = mul i32 %101, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %102, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %148

; <label>:114:                                    ; preds = %100, %148
  %115 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %115) #11
  %116 = load i32, i32* @x.453
  %117 = load i32, i32* @y.454
  %118 = add i32 %116, 1660995197
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 1660995197
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 true, true
  %129 = and i1 %126, true
  %130 = and i1 %124, %128
  %131 = and i1 %127, true
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 true, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %148

; <label>:142:                                    ; preds = %114
  unreachable

; <label>:143:                                    ; preds = %39, %13
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  br label %39

; <label>:144:                                    ; preds = %69, %55
  %145 = landingpad { i8*, i32 }
          catch i8* null
  %146 = extractvalue { i8*, i32 } %145, 0
  store i8* %146, i8** %8, align 8
  %147 = extractvalue { i8*, i32 } %145, 1
  store i32 %147, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.17"* %7) #3
  br label %69

; <label>:148:                                    ; preds = %114, %100
  %149 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %149) #11
  br label %114
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.17"* noalias sret, %"class.std::_Deque_base"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.457
  %6 = load i32, i32* @y.458
  %7 = sub i32 %5, 1416253254
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1416253254
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -465046104, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -465046104, label %19
    i32 -2098771972, label %39
    i32 1986349243, label %70
    i32 1196489868, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2098771972, i32 1196489868
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %41) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator"* dereferenceable(1) %42) #3
  %43 = load i32, i32* @x.457
  %44 = load i32, i32* @y.458
  %45 = sub i32 %43, 1472572042
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1472572042
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 1986349243, i32 1196489868
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %72, align 8
  %73 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %72, align 8
  %74 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %73) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"* %0, %"class.std::allocator"* dereferenceable(1) %74) #3
  store i32 -2098771972, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.17"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.17"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.461
  %5 = load i32, i32* @y.462
  %6 = sub i32 %4, -1543303298
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1543303298
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2079597290, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %61
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2079597290, label %18
    i32 -1398622937, label %38
    i32 -272363329, label %56
    i32 -284126005, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %61

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1398622937, i32 -284126005
  store i32 %37, i32* %14
  br label %61

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %39, align 8
  %40 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %39, align 8
  %41 = bitcast %"class.std::allocator.17"* %40 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %41) #3
  %42 = load i32, i32* @x.461
  %43 = load i32, i32* @y.462
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -272363329, i32 -284126005
  store i32 %55, i32* %14
  br label %61

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.std::allocator.17"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %58, align 8
  %59 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %58, align 8
  %60 = bitcast %"class.std::allocator.17"* %59 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"* %60) #3
  store i32 -1398622937, i32* %14
  br label %61

; <label>:61:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.463
  %6 = load i32, i32* @y.464
  %7 = add i32 %5, -507043372
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -507043372
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 935841009, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 935841009, label %19
    i32 679062018, label %39
    i32 -1158513592, label %71
    i32 278060001, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 679062018, i32 278060001
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.463
  %45 = load i32, i32* @y.464
  %46 = sub i32 %44, 209968843
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 209968843
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1158513592, i32 278060001
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %74, align 8
  %75 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76 to %"class.std::allocator"*
  store i32 679062018, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.17"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::allocator.17"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %3, align 8
  %6 = bitcast %"class.std::allocator.17"* %5 to %"class.__gnu_cxx::new_allocator.18"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1275368723, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1275368723, label %16
    i32 -1408710097, label %21
    i32 -1574239520, label %36
    i32 -1640534243, label %64
    i32 -1729951807, label %65
    i32 -1701105659, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1408710097, i32 -1729951807
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.469
  %23 = load i32, i32* @y.470
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  %35 = select i1 %33, i32 -1574239520, i32 -1701105659
  store i32 %35, i32* %12
  br label %71

; <label>:36:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %37 = load i32, i32* @x.469
  %38 = load i32, i32* @y.470
  %39 = sub i32 %37, 1547740249
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1547740249
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -1640534243, i32 -1701105659
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 8
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to i32**
  ret i32** %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -1574239520, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %36, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.18"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.18"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.473
  %5 = load i32, i32* @y.474
  %6 = add i32 %4, -411611828
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -411611828
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 231441608, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 231441608, label %18
    i32 -1768604518, label %38
    i32 -1649764927, label %56
    i32 -2057351804, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1768604518, i32 -2057351804
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %39, align 8
  %41 = load i32, i32* @x.473
  %42 = load i32, i32* @y.474
  %43 = add i32 %41, -676940714
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -676940714
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1649764927, i32 -2057351804
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %58, align 8
  store i32 -1768604518, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #4 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 -365434149, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %87
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -365434149, label %15
    i32 1915206022, label %20
    i32 1425721829, label %47
    i32 1735301575, label %78
    i32 58415306, label %79
    i32 1979203031, label %82
    i32 -521805981, label %83
  ]

; <label>:14:                                     ; preds = %12
  br label %87

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 1915206022, i32 1979203031
  store i32 %19, i32* %11
  br label %87

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.477
  %22 = load i32, i32* @y.478
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 1425721829, i32 -521805981
  store i32 %46, i32* %11
  br label %87

; <label>:47:                                     ; preds = %12
  %48 = load i32**, i32*** %8, align 8
  %49 = load i32*, i32** %48, align 8
  %50 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %50, i32* %49) #3
  %51 = load i32, i32* @x.477
  %52 = load i32, i32* @y.478
  %53 = sub i32 %51, -1444049105
  %54 = sub i32 %53, 1
  %55 = add i32 %54, -1444049105
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1735301575, i32 -521805981
  store i32 %77, i32* %11
  br label %87

; <label>:78:                                     ; preds = %12
  store i32 58415306, i32* %11
  br label %87

; <label>:79:                                     ; preds = %12
  %80 = load i32**, i32*** %8, align 8
  %81 = getelementptr inbounds i32*, i32** %80, i32 1
  store i32** %81, i32*** %8, align 8
  store i32 -365434149, i32* %11
  br label %87

; <label>:82:                                     ; preds = %12
  ret void

; <label>:83:                                     ; preds = %12
  %84 = load i32**, i32*** %8, align 8
  %85 = load i32*, i32** %84, align 8
  %86 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %86, i32* %85) #3
  store i32 1425721829, i32* %11
  br label %87

; <label>:87:                                     ; preds = %83, %79, %78, %47, %20, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.481
  %9 = load i32, i32* @y.482
  %10 = sub i32 %8, 1664888478
  %11 = sub i32 %10, 1
  %12 = add i32 %11, 1664888478
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 891308087, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %84
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 891308087, label %22
    i32 314910157, label %42
    i32 -857686925, label %66
    i32 -209781569, label %69
    i32 -160344646, label %70
    i32 -1333023419, label %76
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 314910157, i32 -1333023419
  store i32 %41, i32* %18
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  %45 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %43, align 8
  %46 = load volatile i64*, i64** %5
  store i64 %1, i64* %46, align 8
  store i8* %2, i8** %45, align 8
  %47 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %43, align 8
  %48 = load volatile i64*, i64** %5
  %49 = load i64, i64* %48, align 8
  %50 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %47) #3
  %51 = icmp ugt i64 %49, %50
  store i1 %51, i1* %4
  %52 = load i32, i32* @x.481
  %53 = load i32, i32* @y.482
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -857686925, i32 -1333023419
  store i32 %65, i32* %18
  br label %84

; <label>:66:                                     ; preds = %19
  %67 = load volatile i1, i1* %4
  %68 = select i1 %67, i32 -209781569, i32 -160344646
  store i32 %68, i32* %18
  br label %84

; <label>:69:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %5
  %72 = load i64, i64* %71, align 8
  %73 = mul i64 %72, 4
  %74 = call i8* @_Znwm(i64 %73)
  %75 = bitcast i8* %74 to i32*
  ret i32* %75

; <label>:76:                                     ; preds = %19
  %77 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %78 = alloca i64, align 8
  %79 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %77, align 8
  store i64 %1, i64* %78, align 8
  store i8* %2, i8** %79, align 8
  %80 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %77, align 8
  %81 = load i64, i64* %78, align 8
  %82 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %80) #3
  %83 = icmp ugt i64 %81, %82
  store i32 314910157, i32* %18
  br label %84

; <label>:84:                                     ; preds = %76, %66, %42, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.485
  %4 = load i32, i32* @y.486
  %5 = sub i32 %3, 975178788
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 975178788
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %56

; <label>:29:                                     ; preds = %2, %56
  %30 = alloca %"class.std::_Deque_base"*, align 8
  %31 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %30, align 8
  store i32* %1, i32** %31, align 8
  %32 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %30, align 8
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33 to %"class.std::allocator"*
  %35 = load i32*, i32** %31, align 8
  %36 = load i32, i32* @x.485
  %37 = load i32, i32* @y.486
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %56

; <label>:49:                                     ; preds = %29
  %50 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %51 unwind label %53

; <label>:51:                                     ; preds = %49
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %34, i32* %35, i64 %50)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51, %49
  %54 = landingpad { i8*, i32 }
          catch i8* null
  %55 = extractvalue { i8*, i32 } %54, 0
  call void @__clang_call_terminate(i8* %55) #11
  unreachable

; <label>:56:                                     ; preds = %29, %2
  %57 = alloca %"class.std::_Deque_base"*, align 8
  %58 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %57, align 8
  store i32* %1, i32** %58, align 8
  %59 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %57, align 8
  %60 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %60 to %"class.std::allocator"*
  %62 = load i32*, i32** %58, align 8
  br label %29
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator"*, i32*, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.17"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.491
  %7 = load i32, i32* @y.492
  %8 = sub i32 %6, -1728892600
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1728892600
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 154952198, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %72
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 154952198, label %20
    i32 622663277, label %28
    i32 1854371715, label %63
    i32 55934371, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %72

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 622663277, i32 55934371
  store i32 %27, i32* %16
  br label %72

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.17"*, align 8
  %30 = alloca i32**, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %29, align 8
  store i32** %1, i32*** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %29, align 8
  %33 = bitcast %"class.std::allocator.17"* %32 to %"class.__gnu_cxx::new_allocator.18"*
  %34 = load i32**, i32*** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %33, i32** %34, i64 %35)
  %36 = load i32, i32* @x.491
  %37 = load i32, i32* @y.492
  %38 = sub i32 %36, -2080789975
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -2080789975
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 1854371715, i32 55934371
  store i32 %62, i32* %16
  br label %72

; <label>:63:                                     ; preds = %17
  ret void

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.17"*, align 8
  %66 = alloca i32**, align 8
  %67 = alloca i64, align 8
  store %"class.std::allocator.17"* %0, %"class.std::allocator.17"** %65, align 8
  store i32** %1, i32*** %66, align 8
  store i64 %2, i64* %67, align 8
  %68 = load %"class.std::allocator.17"*, %"class.std::allocator.17"** %65, align 8
  %69 = bitcast %"class.std::allocator.17"* %68 to %"class.__gnu_cxx::new_allocator.18"*
  %70 = load i32**, i32*** %66, align 8
  %71 = load i64, i64* %67, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"* %69, i32** %70, i64 %71)
  store i32 622663277, i32* %16
  br label %72

; <label>:72:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.18"*, i32**, i64) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.18"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.18"* %0, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.18"*, %"class.__gnu_cxx::new_allocator.18"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %3

; <label>:2:                                      ; preds = %0
  ret i64 %1

; <label>:3:                                      ; preds = %0
  %4 = landingpad { i8*, i32 }
          catch i8* null
  %5 = extractvalue { i8*, i32 } %4, 0
  call void @__clang_call_terminate(i8* %5) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.497
  %5 = load i32, i32* @y.498
  %6 = sub i32 %4, 477030694
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 477030694
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -722218826, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -722218826, label %18
    i32 -426787471, label %38
    i32 -1170468596, label %57
    i32 -1680427877, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -426787471, i32 -1680427877
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %39, align 8
  %40 = load %"class.std::allocator"*, %"class.std::allocator"** %39, align 8
  %41 = bitcast %"class.std::allocator"* %40 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"* %41) #3
  %42 = load i32, i32* @x.497
  %43 = load i32, i32* @y.498
  %44 = sub i32 %42, 412170362
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 412170362
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1170468596, i32 -1680427877
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %59, align 8
  %60 = load %"class.std::allocator"*, %"class.std::allocator"** %59, align 8
  %61 = bitcast %"class.std::allocator"* %60 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"* %61) #3
  store i32 -426787471, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::deque"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.501
  %6 = load i32, i32* @y.502
  %7 = add i32 %5, -1440999530
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1440999530
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1398929022, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1398929022, label %19
    i32 -334185764, label %39
    i32 -1878210265, label %57
    i32 -803123655, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -334185764, i32 -803123655
  store i32 %38, i32* %15
  br label %62

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  store %"class.std::deque"* %41, %"class.std::deque"** %2
  %42 = load i32, i32* @x.501
  %43 = load i32, i32* @y.502
  %44 = add i32 %42, -1054499925
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1054499925
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1878210265, i32 -803123655
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::deque"*, %"class.std::deque"** %2
  ret %"class.std::deque"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %60, align 8
  %61 = load %"class.std::deque"*, %"class.std::deque"** %60, align 8
  store i32 -334185764, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #4 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %21 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %22) #3
  br label %27

; <label>:23:                                     ; preds = %2
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %82

; <label>:27:                                     ; preds = %19, %13
  %28 = load i32, i32* @x.509
  %29 = load i32, i32* @y.510
  %30 = sub i32 %28, 1786098444
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1786098444
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %87

; <label>:54:                                     ; preds = %27, %87
  %55 = load i32, i32* @x.509
  %56 = load i32, i32* @y.510
  %57 = add i32 %55, -287197452
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, -287197452
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %87

; <label>:81:                                     ; preds = %54
  ret void

; <label>:82:                                     ; preds = %23
  %83 = load i8*, i8** %6, align 8
  %84 = load i32, i32* %7, align 4
  %85 = insertvalue { i8*, i32 } undef, i8* %83, 0
  %86 = insertvalue { i8*, i32 } %85, i32 %84, 1
  resume { i8*, i32 } %86

; <label>:87:                                     ; preds = %54, %27
  br label %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1)) #4 comdat {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  ret %"class.std::allocator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.513
  %6 = load i32, i32* @y.514
  %7 = add i32 %5, 983023323
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 983023323
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1244138776, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1244138776, label %19
    i32 -230661516, label %39
    i32 -1308224468, label %71
    i32 -193831499, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -230661516, i32 -193831499
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42 to %"class.std::allocator"*
  store %"class.std::allocator"* %43, %"class.std::allocator"** %2
  %44 = load i32, i32* @x.513
  %45 = load i32, i32* @y.514
  %46 = sub i32 %44, -1330922343
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1330922343
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -1308224468, i32 -193831499
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %74, align 8
  %75 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76 to %"class.std::allocator"*
  store i32 -230661516, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.515
  %6 = load i32, i32* @y.516
  %7 = sub i32 %5, 1134888702
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1134888702
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 539368800, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 539368800, label %19
    i32 1323675613, label %27
    i32 1211051312, label %52
    i32 2119982180, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1323675613, i32 2119982180
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30 to %"class.std::allocator"*
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %32) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %31, %"class.std::allocator"* dereferenceable(1) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 0
  store i32** null, i32*** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %36) #3
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %37) #3
  %38 = load i32, i32* @x.515
  %39 = load i32, i32* @y.516
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 1211051312, i32 2119982180
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  ret void

; <label>:53:                                     ; preds = %16
  %54 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %55 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %54, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %55, align 8
  %56 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %54, align 8
  %57 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56 to %"class.std::allocator"*
  %58 = load %"class.std::allocator"*, %"class.std::allocator"** %55, align 8
  %59 = call dereferenceable(1) %"class.std::allocator"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator"* dereferenceable(1) %58) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %57, %"class.std::allocator"* dereferenceable(1) %59) #3
  %60 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 0
  store i32** null, i32*** %60, align 8
  %61 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 1
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %62) #3
  %63 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %56, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %63) #3
  store i32 1323675613, i32* %15
  br label %64

; <label>:64:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.519
  %6 = load i32, i32* @y.520
  %7 = sub i32 %5, 663362651
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 663362651
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1031927707, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %56
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1031927707, label %19
    i32 540829914, label %27
    i32 1463905968, label %48
    i32 359907788, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %56

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 540829914, i32 359907788
  store i32 %26, i32* %15
  br label %56

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load %"class.std::allocator"*, %"class.std::allocator"** %29, align 8
  %33 = bitcast %"class.std::allocator"* %32 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %31, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.519
  %35 = load i32, i32* @y.520
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1463905968, i32 359907788
  store i32 %47, i32* %15
  br label %56

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator"*, align 8
  %51 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %50, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %51, align 8
  %52 = load %"class.std::allocator"*, %"class.std::allocator"** %50, align 8
  %53 = bitcast %"class.std::allocator"* %52 to %"class.__gnu_cxx::new_allocator"*
  %54 = load %"class.std::allocator"*, %"class.std::allocator"** %51, align 8
  %55 = bitcast %"class.std::allocator"* %54 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"* %53, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %55) #3
  store i32 540829914, i32* %15
  br label %56

; <label>:56:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.521
  %6 = load i32, i32* @y.522
  %7 = add i32 %5, -1924452456
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1924452456
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 117256937, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 117256937, label %19
    i32 1297201485, label %39
    i32 -1900771386, label %70
    i32 -510488022, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1297201485, i32 -510488022
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %40, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %40, align 8
  %43 = load i32, i32* @x.521
  %44 = load i32, i32* @y.522
  %45 = sub i32 %43, 646835371
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 646835371
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -1900771386, i32 -510488022
  store i32 %69, i32* %15
  br label %75

; <label>:70:                                     ; preds = %16
  ret void

; <label>:71:                                     ; preds = %16
  %72 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %73 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %72, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %73, align 8
  %74 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %72, align 8
  store i32 1297201485, i32* %15
  br label %75

; <label>:75:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.523
  %6 = load i32, i32* @y.524
  %7 = sub i32 %5, -60733493
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -60733493
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 224016027, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %84
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 224016027, label %19
    i32 -1511532385, label %27
    i32 -818378208, label %68
    i32 -1907251378, label %69
  ]

; <label>:18:                                     ; preds = %16
  br label %84

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1511532385, i32 -1907251378
  store i32 %26, i32* %15
  br label %84

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  %31 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %32 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %31) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %34 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %33) #3
  %35 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %36 = bitcast %"struct.std::_Deque_iterator"* %35 to i8*
  %37 = bitcast %"struct.std::_Deque_iterator"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %36, i8* %37, i64 32, i32 8, i1 false)
  %38 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %30) #3
  %39 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %40 = bitcast %"struct.std::_Deque_iterator"* %39 to i8*
  %41 = bitcast %"struct.std::_Deque_iterator"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %40, i8* %41, i64 32, i32 8, i1 false)
  %42 = load i32, i32* @x.523
  %43 = load i32, i32* @y.524
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -818378208, i32 -1907251378
  store i32 %67, i32* %15
  br label %84

; <label>:68:                                     ; preds = %16
  ret void

; <label>:69:                                     ; preds = %16
  %70 = alloca %"struct.std::_Deque_iterator"*, align 8
  %71 = alloca %"struct.std::_Deque_iterator"*, align 8
  %72 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %70, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %71, align 8
  %73 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %74 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %73) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %72, %"struct.std::_Deque_iterator"* dereferenceable(32) %74) #3
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %76 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %75) #3
  %77 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %78 = bitcast %"struct.std::_Deque_iterator"* %77 to i8*
  %79 = bitcast %"struct.std::_Deque_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 32, i32 8, i1 false)
  %80 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %72) #3
  %81 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %82 = bitcast %"struct.std::_Deque_iterator"* %81 to i8*
  %83 = bitcast %"struct.std::_Deque_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 32, i32 8, i1 false)
  store i32 -1511532385, i32* %15
  br label %84

; <label>:84:                                     ; preds = %69, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.525
  %6 = load i32, i32* @y.526
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 191762256, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %82
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 191762256, label %18
    i32 -1516085695, label %26
    i32 72898990, label %67
    i32 -2101424113, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %82

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1516085695, i32 -2101424113
  store i32 %25, i32* %14
  br label %82

; <label>:26:                                     ; preds = %15
  %27 = alloca i32***, align 8
  %28 = alloca i32***, align 8
  %29 = alloca i32**, align 8
  store i32*** %0, i32**** %27, align 8
  store i32*** %1, i32**** %28, align 8
  %30 = load i32***, i32**** %27, align 8
  %31 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %32 = load i32**, i32*** %31, align 8
  store i32** %32, i32*** %29, align 8
  %33 = load i32***, i32**** %28, align 8
  %34 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %33) #3
  %35 = load i32**, i32*** %34, align 8
  %36 = load i32***, i32**** %27, align 8
  store i32** %35, i32*** %36, align 8
  %37 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %29) #3
  %38 = load i32**, i32*** %37, align 8
  %39 = load i32***, i32**** %28, align 8
  store i32** %38, i32*** %39, align 8
  %40 = load i32, i32* @x.525
  %41 = load i32, i32* @y.526
  %42 = sub i32 %40, -696239294
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -696239294
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 72898990, i32 -2101424113
  store i32 %66, i32* %14
  br label %82

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca i32***, align 8
  %70 = alloca i32***, align 8
  %71 = alloca i32**, align 8
  store i32*** %0, i32**** %69, align 8
  store i32*** %1, i32**** %70, align 8
  %72 = load i32***, i32**** %69, align 8
  %73 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %72) #3
  %74 = load i32**, i32*** %73, align 8
  store i32** %74, i32*** %71, align 8
  %75 = load i32***, i32**** %70, align 8
  %76 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %75) #3
  %77 = load i32**, i32*** %76, align 8
  %78 = load i32***, i32**** %69, align 8
  store i32** %77, i32*** %78, align 8
  %79 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %71) #3
  %80 = load i32**, i32*** %79, align 8
  %81 = load i32***, i32**** %70, align 8
  store i32** %80, i32*** %81, align 8
  store i32 -1516085695, i32* %14
  br label %82

; <label>:82:                                     ; preds = %68, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 739553111, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %81
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 739553111, label %18
    i32 -1635830108, label %26
    i32 323730764, label %66
    i32 693677982, label %67
  ]

; <label>:17:                                     ; preds = %15
  br label %81

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1635830108, i32 693677982
  store i32 %25, i32* %14
  br label %81

; <label>:26:                                     ; preds = %15
  %27 = alloca i64*, align 8
  %28 = alloca i64*, align 8
  %29 = alloca i64, align 8
  store i64* %0, i64** %27, align 8
  store i64* %1, i64** %28, align 8
  %30 = load i64*, i64** %27, align 8
  %31 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %30) #3
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %29, align 8
  %33 = load i64*, i64** %28, align 8
  %34 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %33) #3
  %35 = load i64, i64* %34, align 8
  %36 = load i64*, i64** %27, align 8
  store i64 %35, i64* %36, align 8
  %37 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %29) #3
  %38 = load i64, i64* %37, align 8
  %39 = load i64*, i64** %28, align 8
  store i64 %38, i64* %39, align 8
  %40 = load i32, i32* @x.527
  %41 = load i32, i32* @y.528
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 323730764, i32 693677982
  store i32 %65, i32* %14
  br label %81

; <label>:66:                                     ; preds = %15
  ret void

; <label>:67:                                     ; preds = %15
  %68 = alloca i64*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i64, align 8
  store i64* %0, i64** %68, align 8
  store i64* %1, i64** %69, align 8
  %71 = load i64*, i64** %68, align 8
  %72 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %71) #3
  %73 = load i64, i64* %72, align 8
  store i64 %73, i64* %70, align 8
  %74 = load i64*, i64** %69, align 8
  %75 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %74) #3
  %76 = load i64, i64* %75, align 8
  %77 = load i64*, i64** %68, align 8
  store i64 %76, i64* %77, align 8
  %78 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %70) #3
  %79 = load i64, i64* %78, align 8
  %80 = load i64*, i64** %69, align 8
  store i64 %79, i64* %80, align 8
  store i32 -1635830108, i32* %14
  br label %81

; <label>:81:                                     ; preds = %67, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.529
  %6 = load i32, i32* @y.530
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1307795481, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1307795481, label %18
    i32 -720014747, label %26
    i32 1370192650, label %44
    i32 -1340249660, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -720014747, i32 -1340249660
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %27, align 8
  %28 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %27, align 8
  store %"struct.std::_Deque_iterator"* %28, %"struct.std::_Deque_iterator"** %2
  %29 = load i32, i32* @x.529
  %30 = load i32, i32* @y.530
  %31 = add i32 %29, -132750281
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -132750281
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1370192650, i32 -1340249660
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2
  ret %"struct.std::_Deque_iterator"* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %47, align 8
  %48 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %47, align 8
  store i32 -720014747, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #4 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #4 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.539
  %6 = load i32, i32* @y.540
  %7 = add i32 %5, 292230385
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 292230385
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1051209776, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1051209776, label %19
    i32 -1672948028, label %39
    i32 -436564774, label %60
    i32 982566294, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1672948028, i32 982566294
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %44) #3
  %45 = load i32, i32* @x.539
  %46 = load i32, i32* @y.540
  %47 = add i32 %45, 1951657957
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 1951657957
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -436564774, i32 982566294
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %62, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %62, align 8
  %64 = bitcast %"class.std::deque"* %63 to %"class.std::_Deque_base"*
  %65 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %65, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %66) #3
  store i32 -1672948028, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #4 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 447337233, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %97
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 447337233, label %14
    i32 550478633, label %18
    i32 -2918796, label %34
    i32 632469246, label %71
    i32 1858336346, label %72
    i32 -1528894204, label %75
  ]

; <label>:13:                                     ; preds = %11
  br label %97

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 550478633, i32 1858336346
  store i32 %17, i32* %10
  br label %97

; <label>:18:                                     ; preds = %11
  %19 = load i32, i32* @x.543
  %20 = load i32, i32* @y.544
  %21 = add i32 %19, 1548291217
  %22 = sub i32 %21, 1
  %23 = sub i32 %22, 1548291217
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = and i1 %27, %28
  %30 = xor i1 %27, %28
  %31 = or i1 %29, %30
  %32 = or i1 %27, %28
  %33 = select i1 %31, i32 -2918796, i32 -1528894204
  store i32 %33, i32* %10
  br label %97

; <label>:34:                                     ; preds = %11
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 3
  %39 = load i32**, i32*** %38, align 8
  %40 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 3
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %42, i32 0, i32 3
  %44 = load i32**, i32*** %43, align 8
  %45 = getelementptr inbounds i32*, i32** %44, i64 1
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %46, i32** %39, i32** %45) #3
  %47 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %48, i32 0, i32 0
  %50 = load i32**, i32*** %49, align 8
  %51 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %55, i32** %50, i64 %54) #3
  %56 = load i32, i32* @x.543
  %57 = load i32, i32* @y.544
  %58 = sub i32 %56, -1557584130
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -1557584130
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 632469246, i32 -1528894204
  store i32 %70, i32* %10
  br label %97

; <label>:71:                                     ; preds = %11
  store i32 1858336346, i32* %10
  br label %97

; <label>:72:                                     ; preds = %11
  %73 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74) #3
  ret void

; <label>:75:                                     ; preds = %11
  %76 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %77 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %77, i32 0, i32 2
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %78, i32 0, i32 3
  %80 = load i32**, i32*** %79, align 8
  %81 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %82 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %82, i32 0, i32 3
  %84 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %83, i32 0, i32 3
  %85 = load i32**, i32*** %84, align 8
  %86 = getelementptr inbounds i32*, i32** %85, i64 1
  %87 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %87, i32** %80, i32** %86) #3
  %88 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %89, i32 0, i32 0
  %91 = load i32**, i32*** %90, align 8
  %92 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %93 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %93, i32 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %96, i32** %91, i64 %95) #3
  store i32 -2918796, i32* %10
  br label %97

; <label>:97:                                     ; preds = %75, %71, %34, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 1505674066, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %54
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1505674066, label %26
    i32 556565135, label %31
    i32 -1486057068, label %50
    i32 -2099367218, label %53
  ]

; <label>:25:                                     ; preds = %23
  br label %54

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 556565135, i32 -1486057068
  store i32 %30, i32* %22
  br label %54

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %42)
  %43 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %44 = bitcast %"class.std::deque"* %43 to %"class.std::_Deque_base"*
  %45 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %45, i32 0, i32 3
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = getelementptr inbounds i32, i32* %48, i32 1
  store i32* %49, i32** %47, align 8
  store i32 -2099367218, i32* %22
  br label %54

; <label>:50:                                     ; preds = %23
  %51 = load i32*, i32** %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %52, i32* dereferenceable(4) %51)
  store i32 -2099367218, i32* %22
  br label %54

; <label>:53:                                     ; preds = %23
  ret void

; <label>:54:                                     ; preds = %50, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.547
  %7 = load i32, i32* @y.548
  %8 = sub i32 %6, 1426882568
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1426882568
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 690138701, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 690138701, label %20
    i32 2007249876, label %40
    i32 1662505441, label %76
    i32 -1810098065, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 2007249876, i32 -1810098065
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator"*, align 8
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %41, align 8
  store i32* %1, i32** %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"class.std::allocator"*, %"class.std::allocator"** %41, align 8
  %45 = bitcast %"class.std::allocator"* %44 to %"class.__gnu_cxx::new_allocator"*
  %46 = load i32*, i32** %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %45, i32* %46, i32* dereferenceable(4) %48)
  %49 = load i32, i32* @x.547
  %50 = load i32, i32* @y.548
  %51 = add i32 %49, -1344944550
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1344944550
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 1662505441, i32 -1810098065
  store i32 %75, i32* %16
  br label %86

; <label>:76:                                     ; preds = %17
  ret void

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.std::allocator"*, align 8
  %79 = alloca i32*, align 8
  %80 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %78, align 8
  store i32* %1, i32** %79, align 8
  store i32* %2, i32** %80, align 8
  %81 = load %"class.std::allocator"*, %"class.std::allocator"** %78, align 8
  %82 = bitcast %"class.std::allocator"* %81 to %"class.__gnu_cxx::new_allocator"*
  %83 = load i32*, i32** %79, align 8
  %84 = load i32*, i32** %80, align 8
  %85 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %84) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"* %82, i32* %83, i32* dereferenceable(4) %85)
  store i32 2007249876, i32* %16
  br label %86

; <label>:86:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %106

; <label>:45:                                     ; preds = %2
  %46 = load i32, i32* @x.549
  %47 = load i32, i32* @y.550
  %48 = add i32 %46, -1664322084
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -1664322084
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %116

; <label>:60:                                     ; preds = %45, %116
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  %64 = load i32, i32* @x.549
  %65 = load i32, i32* @y.550
  %66 = sub i32 0, 1
  %67 = add i32 %64, %66
  %68 = sub i32 %64, 1
  %69 = mul i32 %64, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %65, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %116

; <label>:89:                                     ; preds = %60
  br label %90

; <label>:90:                                     ; preds = %89
  %91 = load i8*, i8** %5, align 8
  %92 = call i8* @__cxa_begin_catch(i8* %91) #3
  %93 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %94 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %95 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %95, i32 0, i32 3
  %97 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %96, i32 0, i32 3
  %98 = load i32**, i32*** %97, align 8
  %99 = getelementptr inbounds i32*, i32** %98, i64 1
  %100 = load i32*, i32** %99, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %93, i32* %100) #3
  invoke void @__cxa_rethrow() #12
          to label %115 unwind label %101

; <label>:101:                                    ; preds = %90
  %102 = landingpad { i8*, i32 }
          cleanup
  %103 = extractvalue { i8*, i32 } %102, 0
  store i8* %103, i8** %5, align 8
  %104 = extractvalue { i8*, i32 } %102, 1
  store i32 %104, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %105 unwind label %112

; <label>:105:                                    ; preds = %101
  br label %107

; <label>:106:                                    ; preds = %26
  ret void

; <label>:107:                                    ; preds = %105
  %108 = load i8*, i8** %5, align 8
  %109 = load i32, i32* %6, align 4
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  resume { i8*, i32 } %111

; <label>:112:                                    ; preds = %101
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  call void @__clang_call_terminate(i8* %114) #11
  unreachable

; <label>:115:                                    ; preds = %90
  unreachable

; <label>:116:                                    ; preds = %60, %45
  %117 = landingpad { i8*, i32 }
          catch i8* null
  %118 = extractvalue { i8*, i32 } %117, 0
  store i8* %118, i8** %5, align 8
  %119 = extractvalue { i8*, i32 } %117, 1
  store i32 %119, i32* %6, align 4
  br label %60
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator"*, i32*, i32* dereferenceable(4)) #4 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #4 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 0, %9
  %11 = sub i64 0, 1
  %12 = add i64 %10, %11
  %13 = sub i64 0, %12
  %14 = add i64 %9, 1
  store i64 %13, i64* %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %21 = bitcast %"class.std::deque"* %20 to %"class.std::_Deque_base"*
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %22, i32 0, i32 3
  %24 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %23, i32 0, i32 3
  %25 = load i32**, i32*** %24, align 8
  %26 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %27 = bitcast %"class.std::deque"* %26 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %25 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = add i64 %31, 4458986402556737710
  %34 = sub i64 %33, %32
  %35 = sub i64 %34, 4458986402556737710
  %36 = sub i64 %31, %32
  %37 = sdiv exact i64 %35, 8
  %38 = sub i64 0, %37
  %39 = add i64 %19, %38
  %40 = sub i64 %19, %37
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 1521830779, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %54
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 1521830779, label %45
    i32 1472604485, label %50
    i32 1943237311, label %53
  ]

; <label>:44:                                     ; preds = %42
  br label %54

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 1472604485, i32 1943237311
  store i32 %49, i32* %41
  br label %54

; <label>:50:                                     ; preds = %42
  %51 = load i64, i64* %7, align 8
  %52 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %52, i64 %51, i1 zeroext false)
  store i32 1943237311, i32* %41
  br label %54

; <label>:53:                                     ; preds = %42
  ret void

; <label>:54:                                     ; preds = %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i32**
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::deque"*
  %9 = alloca %"class.std::deque"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8, align 1
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32**, align 8
  %15 = alloca i64, align 8
  %16 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %9, align 8
  store i64 %1, i64* %10, align 8
  %17 = zext i1 %2 to i8
  store i8 %17, i8* %11, align 1
  %18 = load %"class.std::deque"*, %"class.std::deque"** %9, align 8
  store %"class.std::deque"* %18, %"class.std::deque"** %8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 3
  %30 = load i32**, i32*** %29, align 8
  %31 = ptrtoint i32** %24 to i64
  %32 = ptrtoint i32** %30 to i64
  %33 = sub i64 0, %32
  %34 = add i64 %31, %33
  %35 = sub i64 %31, %32
  %36 = sdiv exact i64 %34, 8
  %37 = sub i64 0, 1
  %38 = sub i64 %36, %37
  %39 = add nsw i64 %36, 1
  store i64 %38, i64* %12, align 8
  %40 = load i64, i64* %12, align 8
  %41 = load i64, i64* %10, align 8
  %42 = sub i64 0, %40
  %43 = sub i64 0, %41
  %44 = add i64 %42, %43
  %45 = sub i64 0, %44
  %46 = add i64 %40, %41
  store i64 %45, i64* %13, align 8
  %47 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %48 = bitcast %"class.std::deque"* %47 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  store i64 %51, i64* %7
  %52 = load i64, i64* %13, align 8
  %53 = mul i64 2, %52
  store i64 %53, i64* %6
  %54 = alloca i32
  store i32 -1253464969, i32* %54
  %55 = alloca i64
  %56 = alloca i64
  br label %57

; <label>:57:                                     ; preds = %3, %231
  %58 = load i32, i32* %54
  switch i32 %58, label %59 [
    i32 -1253464969, label %60
    i32 -1497939845, label %65
    i32 -1930521584, label %86
    i32 1657406937, label %88
    i32 1234584620, label %89
    i32 1903109725, label %102
    i32 -1051690267, label %118
    i32 1962513966, label %136
    i32 -805961029, label %137
    i32 1712938138, label %173
    i32 1461972290, label %175
    i32 -615260603, label %176
    i32 -656714766, label %217
  ]

; <label>:59:                                     ; preds = %57
  br label %231

; <label>:60:                                     ; preds = %57
  %61 = load volatile i64, i64* %7
  %62 = load volatile i64, i64* %6
  %63 = icmp ugt i64 %61, %62
  %64 = select i1 %63, i32 -1497939845, i32 -805961029
  store i32 %64, i32* %54
  br label %231

; <label>:65:                                     ; preds = %57
  %66 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %67 = bitcast %"class.std::deque"* %66 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 0
  %70 = load i32**, i32*** %69, align 8
  %71 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %72 = bitcast %"class.std::deque"* %71 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = load i64, i64* %13, align 8
  %77 = sub i64 %75, -4605056706766174595
  %78 = sub i64 %77, %76
  %79 = add i64 %78, -4605056706766174595
  %80 = sub i64 %75, %76
  %81 = udiv i64 %79, 2
  %82 = getelementptr inbounds i32*, i32** %70, i64 %81
  store i32** %82, i32*** %5
  %83 = load i8, i8* %11, align 1
  %84 = trunc i8 %83 to i1
  %85 = select i1 %84, i32 -1930521584, i32 1657406937
  store i32 %85, i32* %54
  br label %231

; <label>:86:                                     ; preds = %57
  %87 = load i64, i64* %10, align 8
  store i32 1234584620, i32* %54
  store i64 %87, i64* %55
  br label %231

; <label>:88:                                     ; preds = %57
  store i32 1234584620, i32* %54
  store i64 0, i64* %55
  br label %231

; <label>:89:                                     ; preds = %57
  %90 = load i64, i64* %55
  %91 = load volatile i32**, i32*** %5
  %92 = getelementptr inbounds i32*, i32** %91, i64 %90
  store i32** %92, i32*** %14, align 8
  %93 = load i32**, i32*** %14, align 8
  %94 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %95 = bitcast %"class.std::deque"* %94 to %"class.std::_Deque_base"*
  %96 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %95, i32 0, i32 0
  %97 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %96, i32 0, i32 2
  %98 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %97, i32 0, i32 3
  %99 = load i32**, i32*** %98, align 8
  %100 = icmp ult i32** %93, %99
  %101 = select i1 %100, i32 1903109725, i32 -1051690267
  store i32 %101, i32* %54
  br label %231

; <label>:102:                                    ; preds = %57
  %103 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %104 = bitcast %"class.std::deque"* %103 to %"class.std::_Deque_base"*
  %105 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %104, i32 0, i32 0
  %106 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %105, i32 0, i32 2
  %107 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %106, i32 0, i32 3
  %108 = load i32**, i32*** %107, align 8
  %109 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %110 = bitcast %"class.std::deque"* %109 to %"class.std::_Deque_base"*
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %111, i32 0, i32 3
  %113 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %112, i32 0, i32 3
  %114 = load i32**, i32*** %113, align 8
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  %116 = load i32**, i32*** %14, align 8
  %117 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %108, i32** %115, i32** %116)
  store i32 1962513966, i32* %54
  br label %231

; <label>:118:                                    ; preds = %57
  %119 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %120 = bitcast %"class.std::deque"* %119 to %"class.std::_Deque_base"*
  %121 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %121, i32 0, i32 2
  %123 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %122, i32 0, i32 3
  %124 = load i32**, i32*** %123, align 8
  %125 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %126 = bitcast %"class.std::deque"* %125 to %"class.std::_Deque_base"*
  %127 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %127, i32 0, i32 3
  %129 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %128, i32 0, i32 3
  %130 = load i32**, i32*** %129, align 8
  %131 = getelementptr inbounds i32*, i32** %130, i64 1
  %132 = load i32**, i32*** %14, align 8
  %133 = load i64, i64* %12, align 8
  %134 = getelementptr inbounds i32*, i32** %132, i64 %133
  %135 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %124, i32** %131, i32** %134)
  store i32 1962513966, i32* %54
  br label %231

; <label>:136:                                    ; preds = %57
  store i32 -656714766, i32* %54
  br label %231

; <label>:137:                                    ; preds = %57
  %138 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %139 = bitcast %"class.std::deque"* %138 to %"class.std::_Deque_base"*
  %140 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %139, i32 0, i32 0
  %141 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %140, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %144 = bitcast %"class.std::deque"* %143 to %"class.std::_Deque_base"*
  %145 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %144, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %145, i32 0, i32 1
  %147 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %146, i64* dereferenceable(8) %10)
  %148 = load i64, i64* %147, align 8
  %149 = sub i64 0, %148
  %150 = sub i64 %142, %149
  %151 = add i64 %142, %148
  %152 = sub i64 0, %150
  %153 = sub i64 0, 2
  %154 = add i64 %152, %153
  %155 = sub i64 0, %154
  %156 = add i64 %150, 2
  store i64 %155, i64* %15, align 8
  %157 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %158 = bitcast %"class.std::deque"* %157 to %"class.std::_Deque_base"*
  %159 = load i64, i64* %15, align 8
  %160 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %158, i64 %159)
  store i32** %160, i32*** %16, align 8
  %161 = load i32**, i32*** %16, align 8
  %162 = load i64, i64* %15, align 8
  %163 = load i64, i64* %13, align 8
  %164 = add i64 %162, 5053831124912416508
  %165 = sub i64 %164, %163
  %166 = sub i64 %165, 5053831124912416508
  %167 = sub i64 %162, %163
  %168 = udiv i64 %166, 2
  %169 = getelementptr inbounds i32*, i32** %161, i64 %168
  store i32** %169, i32*** %4
  %170 = load i8, i8* %11, align 1
  %171 = trunc i8 %170 to i1
  %172 = select i1 %171, i32 1712938138, i32 1461972290
  store i32 %172, i32* %54
  br label %231

; <label>:173:                                    ; preds = %57
  %174 = load i64, i64* %10, align 8
  store i32 -615260603, i32* %54
  store i64 %174, i64* %56
  br label %231

; <label>:175:                                    ; preds = %57
  store i32 -615260603, i32* %54
  store i64 0, i64* %56
  br label %231

; <label>:176:                                    ; preds = %57
  %177 = load i64, i64* %56
  %178 = load volatile i32**, i32*** %4
  %179 = getelementptr inbounds i32*, i32** %178, i64 %177
  store i32** %179, i32*** %14, align 8
  %180 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %181 = bitcast %"class.std::deque"* %180 to %"class.std::_Deque_base"*
  %182 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %182, i32 0, i32 2
  %184 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %183, i32 0, i32 3
  %185 = load i32**, i32*** %184, align 8
  %186 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %187 = bitcast %"class.std::deque"* %186 to %"class.std::_Deque_base"*
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %187, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 3
  %190 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %189, i32 0, i32 3
  %191 = load i32**, i32*** %190, align 8
  %192 = getelementptr inbounds i32*, i32** %191, i64 1
  %193 = load i32**, i32*** %14, align 8
  %194 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %185, i32** %192, i32** %193)
  %195 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %196 = bitcast %"class.std::deque"* %195 to %"class.std::_Deque_base"*
  %197 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %198 = bitcast %"class.std::deque"* %197 to %"class.std::_Deque_base"*
  %199 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %198, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %199, i32 0, i32 0
  %201 = load i32**, i32*** %200, align 8
  %202 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %203 = bitcast %"class.std::deque"* %202 to %"class.std::_Deque_base"*
  %204 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %203, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %204, i32 0, i32 1
  %206 = load i64, i64* %205, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %196, i32** %201, i64 %206) #3
  %207 = load i32**, i32*** %16, align 8
  %208 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %209 = bitcast %"class.std::deque"* %208 to %"class.std::_Deque_base"*
  %210 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %209, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %210, i32 0, i32 0
  store i32** %207, i32*** %211, align 8
  %212 = load i64, i64* %15, align 8
  %213 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %214 = bitcast %"class.std::deque"* %213 to %"class.std::_Deque_base"*
  %215 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %215, i32 0, i32 1
  store i64 %212, i64* %216, align 8
  store i32 -656714766, i32* %54
  br label %231

; <label>:217:                                    ; preds = %57
  %218 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %219 = bitcast %"class.std::deque"* %218 to %"class.std::_Deque_base"*
  %220 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %219, i32 0, i32 0
  %221 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %220, i32 0, i32 2
  %222 = load i32**, i32*** %14, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %221, i32** %222) #3
  %223 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %224 = bitcast %"class.std::deque"* %223 to %"class.std::_Deque_base"*
  %225 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %224, i32 0, i32 0
  %226 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %225, i32 0, i32 3
  %227 = load i32**, i32*** %14, align 8
  %228 = load i64, i64* %12, align 8
  %229 = getelementptr inbounds i32*, i32** %227, i64 %228
  %230 = getelementptr inbounds i32*, i32** %229, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %226, i32** %230) #3
  ret void

; <label>:231:                                    ; preds = %176, %175, %173, %137, %136, %118, %102, %89, %88, %86, %65, %60, %59
  br label %57
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #4 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.565
  %6 = load i32, i32* @y.566
  %7 = sub i32 %5, -1064429199
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1064429199
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1310721576, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1310721576, label %19
    i32 -2115102772, label %39
    i32 1679805336, label %58
    i32 -2093502239, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -2115102772, i32 -2093502239
  store i32 %38, i32* %15
  br label %64

; <label>:39:                                     ; preds = %16
  %40 = alloca i32**, align 8
  store i32** %0, i32*** %40, align 8
  %41 = load i32**, i32*** %40, align 8
  %42 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %41)
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.565
  %44 = load i32, i32* @y.566
  %45 = add i32 %43, -563990192
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -563990192
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1679805336, i32 -2093502239
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32**, i32*** %2
  ret i32** %59

; <label>:60:                                     ; preds = %16
  %61 = alloca i32**, align 8
  store i32** %0, i32*** %61, align 8
  %62 = load i32**, i32*** %61, align 8
  %63 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %62)
  store i32 -2115102772, i32* %15
  br label %64

; <label>:64:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.567
  %8 = load i32, i32* @y.568
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -2088112687, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -2088112687, label %20
    i32 -138157607, label %40
    i32 -1554089715, label %64
    i32 -1962684002, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -138157607, i32 -1962684002
  store i32 %39, i32* %16
  br label %75

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i8, align 1
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load i32**, i32*** %41, align 8
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %45, i32** %46, i32** %47)
  store i32** %48, i32*** %4
  %49 = load i32, i32* @x.567
  %50 = load i32, i32* @y.568
  %51 = add i32 %49, 384030796
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 384030796
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1554089715, i32 -1962684002
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32**, i32*** %4
  ret i32** %65

; <label>:66:                                     ; preds = %17
  %67 = alloca i32**, align 8
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i8, align 1
  store i32** %0, i32*** %67, align 8
  store i32** %1, i32*** %68, align 8
  store i32** %2, i32*** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load i32**, i32*** %67, align 8
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %71, i32** %72, i32** %73)
  store i32 -138157607, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, -7185267484410452200
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -7185267484410452200
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1853354318, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1853354318, label %23
    i32 2001950251, label %27
    i32 685215063, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 2001950251, i32 685215063
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %5, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 685215063, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32**, i32*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %36
  ret i32** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #4 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #4 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, -5357147035957628451
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -5357147035957628451
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -1646750229, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %48
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -1646750229, label %23
    i32 2055604005, label %27
    i32 -1072086009, label %40
  ]

; <label>:22:                                     ; preds = %20
  br label %48

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 2055604005, i32 -1072086009
  store i32 %26, i32* %19
  br label %48

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = add i64 0, 6671605242027254179
  %31 = sub i64 %30, %29
  %32 = sub i64 %31, 6671605242027254179
  %33 = sub i64 0, %29
  %34 = getelementptr inbounds i32*, i32** %28, i64 %32
  %35 = bitcast i32** %34 to i8*
  %36 = load i32**, i32*** %5, align 8
  %37 = bitcast i32** %36 to i8*
  %38 = load i64, i64* %8, align 8
  %39 = mul i64 8, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %35, i8* %37, i64 %39, i32 8, i1 false)
  store i32 -1072086009, i32* %19
  br label %48

; <label>:40:                                     ; preds = %20
  %41 = load i32**, i32*** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = add i64 0, 1544349987733917783
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, 1544349987733917783
  %46 = sub i64 0, %42
  %47 = getelementptr inbounds i32*, i32** %41, i64 %45
  ret i32** %47

; <label>:48:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #4 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.583
  %7 = load i32, i32* @y.584
  %8 = sub i32 %6, -1573861380
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1573861380
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 2112558713, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %88
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2112558713, label %20
    i32 742159057, label %40
    i32 -1002409511, label %76
    i32 422176580, label %78
  ]

; <label>:19:                                     ; preds = %17
  br label %88

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 742159057, i32 422176580
  store i32 %39, i32* %16
  br label %88

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::_Deque_iterator"*, align 8
  %42 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %41, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %42, align 8
  %43 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %41, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %42, align 8
  %47 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %45, %48
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.583
  %51 = load i32, i32* @y.584
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1002409511, i32 422176580
  store i32 %75, i32* %16
  br label %88

; <label>:76:                                     ; preds = %17
  %77 = load volatile i1, i1* %3
  ret i1 %77

; <label>:78:                                     ; preds = %17
  %79 = alloca %"struct.std::_Deque_iterator"*, align 8
  %80 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %79, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %80, align 8
  %81 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %79, align 8
  %82 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %80, align 8
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = icmp eq i32* %83, %86
  store i32 742159057, i32* %16
  br label %88

; <label>:88:                                     ; preds = %78, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #4 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.589
  %3 = load i32, i32* @y.590
  %4 = add i32 %2, -1495963821
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1495963821
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %175

; <label>:16:                                     ; preds = %1, %175
  %17 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %17, align 8
  %18 = load %"class.std::deque"*, %"class.std::deque"** %17, align 8
  %19 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %25 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %25, i32 0, i32 2
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %26, i32 0, i32 2
  %28 = load i32*, i32** %27, align 8
  %29 = getelementptr inbounds i32, i32* %28, i64 -1
  %30 = icmp ne i32* %23, %29
  %31 = load i32, i32* @x.589
  %32 = load i32, i32* @y.590
  %33 = add i32 %31, 1760943268
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1760943268
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %175

; <label>:45:                                     ; preds = %16
  br i1 %30, label %46, label %115

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %48 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %48 to %"class.std::allocator"*
  %50 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %51 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %51, i32 0, i32 2
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %52, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %49, i32* %54)
          to label %55 unwind label %172

; <label>:55:                                     ; preds = %46
  %56 = load i32, i32* @x.589
  %57 = load i32, i32* @y.590
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %190

; <label>:81:                                     ; preds = %55, %190
  %82 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 2
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 0
  %86 = load i32*, i32** %85, align 8
  %87 = getelementptr inbounds i32, i32* %86, i32 1
  store i32* %87, i32** %85, align 8
  %88 = load i32, i32* @x.589
  %89 = load i32, i32* @y.590
  %90 = add i32 %88, -421968496
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, -421968496
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %190

; <label>:114:                                    ; preds = %81
  br label %171

; <label>:115:                                    ; preds = %45
  %116 = load i32, i32* @x.589
  %117 = load i32, i32* @y.590
  %118 = add i32 %116, 653957626
  %119 = sub i32 %118, 1
  %120 = sub i32 %119, 653957626
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = xor i1 %124, true
  %127 = xor i1 %125, true
  %128 = xor i1 false, true
  %129 = and i1 %126, false
  %130 = and i1 %124, %128
  %131 = and i1 %127, false
  %132 = and i1 %125, %128
  %133 = or i1 %129, %130
  %134 = or i1 %131, %132
  %135 = xor i1 %133, %134
  %136 = or i1 %126, %127
  %137 = xor i1 %136, true
  %138 = or i1 false, %128
  %139 = and i1 %137, %138
  %140 = or i1 %135, %139
  %141 = or i1 %124, %125
  br i1 %140, label %142, label %197

; <label>:142:                                    ; preds = %115, %197
  %143 = load i32, i32* @x.589
  %144 = load i32, i32* @y.590
  %145 = sub i32 %143, -1472356659
  %146 = sub i32 %145, 1
  %147 = add i32 %146, -1472356659
  %148 = sub i32 %143, 1
  %149 = mul i32 %143, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %144, 10
  %153 = xor i1 %151, true
  %154 = xor i1 %152, true
  %155 = xor i1 true, true
  %156 = and i1 %153, true
  %157 = and i1 %151, %155
  %158 = and i1 %154, true
  %159 = and i1 %152, %155
  %160 = or i1 %156, %157
  %161 = or i1 %158, %159
  %162 = xor i1 %160, %161
  %163 = or i1 %153, %154
  %164 = xor i1 %163, true
  %165 = or i1 true, %155
  %166 = and i1 %164, %165
  %167 = or i1 %162, %166
  %168 = or i1 %151, %152
  br i1 %167, label %169, label %197

; <label>:169:                                    ; preds = %142
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %18)
          to label %170 unwind label %172

; <label>:170:                                    ; preds = %169
  br label %171

; <label>:171:                                    ; preds = %170, %114
  ret void

; <label>:172:                                    ; preds = %169, %46
  %173 = landingpad { i8*, i32 }
          catch i8* null
  %174 = extractvalue { i8*, i32 } %173, 0
  call void @__clang_call_terminate(i8* %174) #11
  unreachable

; <label>:175:                                    ; preds = %16, %1
  %176 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %176, align 8
  %177 = load %"class.std::deque"*, %"class.std::deque"** %176, align 8
  %178 = bitcast %"class.std::deque"* %177 to %"class.std::_Deque_base"*
  %179 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %178, i32 0, i32 0
  %180 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %179, i32 0, i32 2
  %181 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %180, i32 0, i32 0
  %182 = load i32*, i32** %181, align 8
  %183 = bitcast %"class.std::deque"* %177 to %"class.std::_Deque_base"*
  %184 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %183, i32 0, i32 0
  %185 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %184, i32 0, i32 2
  %186 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %185, i32 0, i32 2
  %187 = load i32*, i32** %186, align 8
  %188 = getelementptr inbounds i32, i32* %187, i64 -1
  %189 = icmp ne i32* %182, %188
  br label %16

; <label>:190:                                    ; preds = %81, %55
  %191 = bitcast %"class.std::deque"* %18 to %"class.std::_Deque_base"*
  %192 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %191, i32 0, i32 0
  %193 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %192, i32 0, i32 2
  %194 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %193, i32 0, i32 0
  %195 = load i32*, i32** %194, align 8
  %196 = getelementptr inbounds i32, i32* %195, i32 1
  store i32* %196, i32** %194, align 8
  br label %81

; <label>:197:                                    ; preds = %142, %115
  br label %142
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.593
  %5 = load i32, i32* @y.594
  %6 = add i32 %4, 2048375820
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 2048375820
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1099828951, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %109
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1099828951, label %18
    i32 1369313206, label %26
    i32 -1074053795, label %74
    i32 -1252809484, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %109

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1369313206, i32 -1252809484
  store i32 %25, i32* %14
  br label %109

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %29) #3
  %31 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %30, i32* %35)
  %36 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %37 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 2
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 1
  %41 = load i32*, i32** %40, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %36, i32* %41) #3
  %42 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 3
  %49 = load i32**, i32*** %48, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %44, i32** %50) #3
  %51 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 2
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %53, i32 0, i32 1
  %55 = load i32*, i32** %54, align 8
  %56 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 0
  store i32* %55, i32** %59, align 8
  %60 = load i32, i32* @x.593
  %61 = load i32, i32* @y.594
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1074053795, i32 -1252809484
  store i32 %73, i32* %14
  br label %109

; <label>:74:                                     ; preds = %15
  ret void

; <label>:75:                                     ; preds = %15
  %76 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %76, align 8
  %77 = load %"class.std::deque"*, %"class.std::deque"** %76, align 8
  %78 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %79 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %78) #3
  %80 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 2
  %83 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %82, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %79, i32* %84)
  %85 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %86 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %87 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %87, i32 0, i32 2
  %89 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %88, i32 0, i32 1
  %90 = load i32*, i32** %89, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %85, i32* %90) #3
  %91 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %92, i32 0, i32 2
  %94 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %95 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %94, i32 0, i32 0
  %96 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %95, i32 0, i32 2
  %97 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %96, i32 0, i32 3
  %98 = load i32**, i32*** %97, align 8
  %99 = getelementptr inbounds i32*, i32** %98, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %93, i32** %99) #3
  %100 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %101, i32 0, i32 2
  %103 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %102, i32 0, i32 1
  %104 = load i32*, i32** %103, align 8
  %105 = bitcast %"class.std::deque"* %77 to %"class.std::_Deque_base"*
  %106 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %106, i32 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 0
  store i32* %104, i32** %108, align 8
  store i32 1369313206, i32* %14
  br label %109

; <label>:109:                                    ; preds = %75, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator"*, i32*) #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector"*
  %7 = alloca %"class.std::vector"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.std::vector", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %7, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 483186650, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %259
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 483186650, label %21
    i32 1487625914, label %26
    i32 1607687254, label %37
    i32 1668117469, label %43
    i32 -2043308260, label %71
    i32 -68444617, label %131
    i32 1939717132, label %132
    i32 1406812015, label %142
    i32 1669594816, label %143
    i32 605898154, label %158
    i32 -515473075, label %186
    i32 -1300612887, label %187
    i32 918878242, label %258
  ]

; <label>:20:                                     ; preds = %18
  br label %259

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 1487625914, i32 1607687254
  store i32 %25, i32* %17
  br label %259

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load i32*, i32** %9, align 8
  %29 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %30 = bitcast %"class.std::vector"* %29 to %"struct.std::_Vector_base"*
  %31 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %30) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"* %10, i64 %27, i32* dereferenceable(4) %28, %"class.std::allocator"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %35 = bitcast %"class.std::vector"* %34 to %"struct.std::_Vector_base"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector"* %10) #3
  store i32 1669594816, i32* %17
  br label %259

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 1668117469, i32 1939717132
  store i32 %42, i32* %17
  br label %259

; <label>:43:                                     ; preds = %18
  %44 = load i32, i32* @x.597
  %45 = load i32, i32* @y.598
  %46 = sub i32 %44, -1288589798
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1288589798
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -2043308260, i32 -1300612887
  store i32 %70, i32* %17
  br label %259

; <label>:71:                                     ; preds = %18
  %72 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %73 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"* %72) #3
  %74 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %11, i32 0, i32 0
  store i32* %73, i32** %74, align 8
  %75 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %76 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"* %75) #3
  %77 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  store i32* %76, i32** %77, align 8
  %78 = load i32*, i32** %9, align 8
  %79 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %11, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %80, i32* %82, i32* dereferenceable(4) %78)
  %83 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %84 = bitcast %"class.std::vector"* %83 to %"struct.std::_Vector_base"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %85, i32 0, i32 1
  %87 = load i32*, i32** %86, align 8
  %88 = load i64, i64* %8, align 8
  %89 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %90 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %89) #3
  %91 = add i64 %88, -4699903492956310630
  %92 = sub i64 %91, %90
  %93 = sub i64 %92, -4699903492956310630
  %94 = sub i64 %88, %90
  %95 = load i32*, i32** %9, align 8
  %96 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %97 = bitcast %"class.std::vector"* %96 to %"struct.std::_Vector_base"*
  %98 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %97) #3
  %99 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %87, i64 %93, i32* dereferenceable(4) %95, %"class.std::allocator"* dereferenceable(1) %98)
  %100 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %101 = bitcast %"class.std::vector"* %100 to %"struct.std::_Vector_base"*
  %102 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %101, i32 0, i32 0
  %103 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %102, i32 0, i32 1
  store i32* %99, i32** %103, align 8
  %104 = load i32, i32* @x.597
  %105 = load i32, i32* @y.598
  %106 = sub i32 %104, 323465694
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 323465694
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = xor i1 %112, true
  %115 = xor i1 %113, true
  %116 = xor i1 true, true
  %117 = and i1 %114, true
  %118 = and i1 %112, %116
  %119 = and i1 %115, true
  %120 = and i1 %113, %116
  %121 = or i1 %117, %118
  %122 = or i1 %119, %120
  %123 = xor i1 %121, %122
  %124 = or i1 %114, %115
  %125 = xor i1 %124, true
  %126 = or i1 true, %116
  %127 = and i1 %125, %126
  %128 = or i1 %123, %127
  %129 = or i1 %112, %113
  %130 = select i1 %128, i32 -68444617, i32 -1300612887
  store i32 %130, i32* %17
  br label %259

; <label>:131:                                    ; preds = %18
  store i32 1406812015, i32* %17
  br label %259

; <label>:132:                                    ; preds = %18
  %133 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %134 = bitcast %"class.std::vector"* %133 to %"struct.std::_Vector_base"*
  %135 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %134, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = load i64, i64* %8, align 8
  %139 = load i32*, i32** %9, align 8
  %140 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %137, i64 %138, i32* dereferenceable(4) %139)
  %141 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector"* %141, i32* %140) #3
  store i32 1406812015, i32* %17
  br label %259

; <label>:142:                                    ; preds = %18
  store i32 1669594816, i32* %17
  br label %259

; <label>:143:                                    ; preds = %18
  %144 = load i32, i32* @x.597
  %145 = load i32, i32* @y.598
  %146 = sub i32 0, 1
  %147 = add i32 %144, %146
  %148 = sub i32 %144, 1
  %149 = mul i32 %144, %147
  %150 = urem i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = icmp slt i32 %145, 10
  %153 = and i1 %151, %152
  %154 = xor i1 %151, %152
  %155 = or i1 %153, %154
  %156 = or i1 %151, %152
  %157 = select i1 %155, i32 605898154, i32 918878242
  store i32 %157, i32* %17
  br label %259

; <label>:158:                                    ; preds = %18
  %159 = load i32, i32* @x.597
  %160 = load i32, i32* @y.598
  %161 = add i32 %159, 53364766
  %162 = sub i32 %161, 1
  %163 = sub i32 %162, 53364766
  %164 = sub i32 %159, 1
  %165 = mul i32 %159, %163
  %166 = urem i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = icmp slt i32 %160, 10
  %169 = xor i1 %167, true
  %170 = xor i1 %168, true
  %171 = xor i1 true, true
  %172 = and i1 %169, true
  %173 = and i1 %167, %171
  %174 = and i1 %170, true
  %175 = and i1 %168, %171
  %176 = or i1 %172, %173
  %177 = or i1 %174, %175
  %178 = xor i1 %176, %177
  %179 = or i1 %169, %170
  %180 = xor i1 %179, true
  %181 = or i1 true, %171
  %182 = and i1 %180, %181
  %183 = or i1 %178, %182
  %184 = or i1 %167, %168
  %185 = select i1 %183, i32 -515473075, i32 918878242
  store i32 %185, i32* %17
  br label %259

; <label>:186:                                    ; preds = %18
  ret void

; <label>:187:                                    ; preds = %18
  %188 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %189 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"* %188) #3
  %190 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %11, i32 0, i32 0
  store i32* %189, i32** %190, align 8
  %191 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %192 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"* %191) #3
  %193 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  store i32* %192, i32** %193, align 8
  %194 = load i32*, i32** %9, align 8
  %195 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %11, i32 0, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %12, i32 0, i32 0
  %198 = load i32*, i32** %197, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %196, i32* %198, i32* dereferenceable(4) %194)
  %199 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %200 = bitcast %"class.std::vector"* %199 to %"struct.std::_Vector_base"*
  %201 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %200, i32 0, i32 0
  %202 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %201, i32 0, i32 1
  %203 = load i32*, i32** %202, align 8
  %204 = load i64, i64* %8, align 8
  %205 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %206 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %205) #3
  %207 = add i64 0, -317006163282375202
  %208 = sub i64 %207, %204
  %209 = sub i64 %208, -317006163282375202
  %210 = sub i64 0, %204
  %211 = sub i64 0, %209
  %212 = sub i64 0, %206
  %213 = add i64 %211, %212
  %214 = sub i64 0, %213
  %215 = add i64 %209, %206
  %216 = sub i64 %204, 5850002019226083815
  %217 = sub i64 %216, %206
  %218 = add i64 %217, 5850002019226083815
  %219 = sub i64 %204, %206
  %220 = mul i64 %218, %206
  %221 = shl i64 %204, %206
  %222 = sub i64 0, %204
  %223 = add i64 0, %222
  %224 = sub i64 0, %204
  %225 = sub i64 %223, 7424128157715295343
  %226 = add i64 %225, %206
  %227 = add i64 %226, 7424128157715295343
  %228 = add i64 %223, %206
  %229 = sub i64 0, %204
  %230 = add i64 0, %229
  %231 = sub i64 0, %204
  %232 = add i64 %230, -7981865560717874240
  %233 = add i64 %232, %206
  %234 = sub i64 %233, -7981865560717874240
  %235 = add i64 %230, %206
  %236 = sub i64 0, -7956982438760758982
  %237 = sub i64 %236, %204
  %238 = add i64 %237, -7956982438760758982
  %239 = sub i64 0, %204
  %240 = sub i64 0, %238
  %241 = sub i64 0, %206
  %242 = add i64 %240, %241
  %243 = sub i64 0, %242
  %244 = add i64 %238, %206
  %245 = sub i64 %204, 1848319014646737478
  %246 = sub i64 %245, %206
  %247 = add i64 %246, 1848319014646737478
  %248 = sub i64 %204, %206
  %249 = load i32*, i32** %9, align 8
  %250 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %251 = bitcast %"class.std::vector"* %250 to %"struct.std::_Vector_base"*
  %252 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %251) #3
  %253 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %203, i64 %247, i32* dereferenceable(4) %249, %"class.std::allocator"* dereferenceable(1) %252)
  %254 = load volatile %"class.std::vector"*, %"class.std::vector"** %6
  %255 = bitcast %"class.std::vector"* %254 to %"struct.std::_Vector_base"*
  %256 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %255, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %256, i32 0, i32 1
  store i32* %253, i32** %257, align 8
  store i32 -2043308260, i32* %17
  br label %259

; <label>:258:                                    ; preds = %18
  store i32 605898154, i32* %17
  br label %259

; <label>:259:                                    ; preds = %258, %187, %158, %143, %142, %132, %131, %71, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.599
  %6 = load i32, i32* @y.600
  %7 = add i32 %5, -1404269490
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1404269490
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -506035580, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %121
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -506035580, label %19
    i32 1926535040, label %39
    i32 582795581, label %70
    i32 -55140526, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %121

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1926535040, i32 -55140526
  store i32 %38, i32* %15
  br label %121

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 2
  %45 = load i32*, i32** %44, align 8
  %46 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = ptrtoint i32* %45 to i64
  %51 = ptrtoint i32* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 4
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.599
  %57 = load i32, i32* @y.600
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  %69 = select i1 %67, i32 582795581, i32 -55140526
  store i32 %69, i32* %15
  br label %121

; <label>:70:                                     ; preds = %16
  %71 = load volatile i64, i64* %2
  ret i64 %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  %74 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %75 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %76 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %76, i32 0, i32 2
  %78 = load i32*, i32** %77, align 8
  %79 = bitcast %"class.std::vector"* %74 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = ptrtoint i32* %78 to i64
  %84 = ptrtoint i32* %82 to i64
  %85 = shl i64 %83, %84
  %86 = sub i64 0, %84
  %87 = add i64 %83, %86
  %88 = sub i64 %83, %84
  %89 = mul i64 %87, %84
  %90 = add i64 0, -4138872278192733823
  %91 = sub i64 %90, %83
  %92 = sub i64 %91, -4138872278192733823
  %93 = sub i64 0, %83
  %94 = sub i64 0, %84
  %95 = sub i64 %92, %94
  %96 = add i64 %92, %84
  %97 = add i64 0, -6005352198055904554
  %98 = sub i64 %97, %83
  %99 = sub i64 %98, -6005352198055904554
  %100 = sub i64 0, %83
  %101 = add i64 %99, -4326138774258400094
  %102 = add i64 %101, %84
  %103 = sub i64 %102, -4326138774258400094
  %104 = add i64 %99, %84
  %105 = shl i64 %83, %84
  %106 = add i64 %83, 1634166012981675556
  %107 = sub i64 %106, %84
  %108 = sub i64 %107, 1634166012981675556
  %109 = sub i64 %83, %84
  %110 = sub i64 0, 4
  %111 = add i64 %108, %110
  %112 = sub i64 %108, 4
  %113 = mul i64 %111, 4
  %114 = add i64 %108, -8542907744055402678
  %115 = sub i64 %114, 4
  %116 = sub i64 %115, -8542907744055402678
  %117 = sub i64 %108, 4
  %118 = mul i64 %116, 4
  %119 = shl i64 %108, 4
  %120 = sdiv exact i64 %108, 4
  store i32 1926535040, i32* %15
  br label %121

; <label>:121:                                    ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector"*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %6, i32** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %9, i32** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %12, i32** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.607
  %7 = load i32, i32* @y.608
  %8 = add i32 %6, 1717974033
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1717974033
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -333720759, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %105
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -333720759, label %20
    i32 1059558106, label %40
    i32 -1702397923, label %85
    i32 1399412146, label %86
  ]

; <label>:19:                                     ; preds = %17
  br label %105

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1059558106, i32 1399412146
  store i32 %39, i32* %16
  br label %105

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %44, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %56)
  %58 = load i32*, i32** %43, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %52, i32* %57, i32* dereferenceable(4) %58)
  %59 = load i32, i32* @x.607
  %60 = load i32, i32* @y.608
  %61 = sub i32 0, 1
  %62 = add i32 %59, %61
  %63 = sub i32 %59, 1
  %64 = mul i32 %59, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %60, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -1702397923, i32 1399412146
  store i32 %84, i32* %16
  br label %105

; <label>:85:                                     ; preds = %17
  ret void

; <label>:86:                                     ; preds = %17
  %87 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %88 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %89 = alloca i32*, align 8
  %90 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %91 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %87, i32 0, i32 0
  store i32* %0, i32** %92, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %88, i32 0, i32 0
  store i32* %1, i32** %93, align 8
  store i32* %2, i32** %89, align 8
  %94 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %90 to i8*
  %95 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %94, i8* %95, i64 8, i32 8, i1 false)
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %90, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %97)
  %99 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %91 to i8*
  %100 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %88 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %91, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %102)
  %104 = load i32*, i32** %89, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %98, i32* %103, i32* dereferenceable(4) %104)
  store i32 1059558106, i32* %16
  br label %105

; <label>:105:                                    ; preds = %86, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  %4 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %5 = bitcast %"class.std::vector"* %4 to %"struct.std::_Vector_base"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.611
  %6 = load i32, i32* @y.612
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -134149097, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -134149097, label %18
    i32 900501731, label %38
    i32 470561305, label %73
    i32 -798548713, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 900501731, i32 -798548713
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %39, i32** dereferenceable(8) %44) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %39, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  store i32* %46, i32** %2
  %47 = load i32, i32* @x.611
  %48 = load i32, i32* @y.612
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 470561305, i32 -798548713
  store i32 %72, i32* %14
  br label %84

; <label>:73:                                     ; preds = %15
  %74 = load volatile i32*, i32** %2
  ret i32* %74

; <label>:75:                                     ; preds = %15
  %76 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %77 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %77, align 8
  %78 = load %"class.std::vector"*, %"class.std::vector"** %77, align 8
  %79 = bitcast %"class.std::vector"* %78 to %"struct.std::_Vector_base"*
  %80 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %80, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"* %76, i32** dereferenceable(8) %81) #3
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %76, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  store i32 900501731, i32* %14
  br label %84

; <label>:84:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector"*, i32*) #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i32*, i32** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = load i32, i32* @x.615
  %20 = load i32, i32* @y.616
  %21 = sub i32 0, 1
  %22 = add i32 %19, %21
  %23 = sub i32 %19, 1
  %24 = mul i32 %19, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %20, 10
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  br i1 %30, label %32, label %61

; <label>:32:                                     ; preds = %18, %61
  %33 = landingpad { i8*, i32 }
          catch i8* null
  %34 = extractvalue { i8*, i32 } %33, 0
  call void @__clang_call_terminate(i8* %34) #11
  %35 = load i32, i32* @x.615
  %36 = load i32, i32* @y.616
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  br i1 %58, label %60, label %61

; <label>:60:                                     ; preds = %32
  unreachable

; <label>:61:                                     ; preds = %32, %18
  %62 = landingpad { i8*, i32 }
          catch i8* null
  %63 = extractvalue { i8*, i32 } %62, 0
  call void @__clang_call_terminate(i8* %63) #11
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.621
  %7 = load i32, i32* @y.622
  %8 = add i32 %6, -1182358824
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1182358824
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -794029002, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %89
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -794029002, label %20
    i32 -871872101, label %40
    i32 -51984581, label %71
    i32 -1099670182, label %72
  ]

; <label>:19:                                     ; preds = %17
  br label %89

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -871872101, i32 -1099670182
  store i32 %39, i32* %16
  br label %89

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %41, align 8
  store i64 %1, i64* %42, align 8
  store i32* %2, i32** %43, align 8
  %44 = load %"class.std::vector"*, %"class.std::vector"** %41, align 8
  %45 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %46, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = load i64, i64* %42, align 8
  %50 = load i32*, i32** %43, align 8
  %51 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %52 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %51) #3
  %53 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %48, i64 %49, i32* dereferenceable(4) %50, %"class.std::allocator"* dereferenceable(1) %52)
  %54 = bitcast %"class.std::vector"* %44 to %"struct.std::_Vector_base"*
  %55 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %54, i32 0, i32 0
  %56 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 1
  store i32* %53, i32** %56, align 8
  %57 = load i32, i32* @x.621
  %58 = load i32, i32* @y.622
  %59 = sub i32 0, 1
  %60 = add i32 %57, %59
  %61 = sub i32 %57, 1
  %62 = mul i32 %57, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %58, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -51984581, i32 -1099670182
  store i32 %70, i32* %16
  br label %89

; <label>:71:                                     ; preds = %17
  ret void

; <label>:72:                                     ; preds = %17
  %73 = alloca %"class.std::vector"*, align 8
  %74 = alloca i64, align 8
  %75 = alloca i32*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %73, align 8
  store i64 %1, i64* %74, align 8
  store i32* %2, i32** %75, align 8
  %76 = load %"class.std::vector"*, %"class.std::vector"** %73, align 8
  %77 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  %80 = load i32*, i32** %79, align 8
  %81 = load i64, i64* %74, align 8
  %82 = load i32*, i32** %75, align 8
  %83 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %84 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %83) #3
  %85 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %80, i64 %81, i32* dereferenceable(4) %82, %"class.std::allocator"* dereferenceable(1) %84)
  %86 = bitcast %"class.std::vector"* %76 to %"struct.std::_Vector_base"*
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %87, i32 0, i32 1
  store i32* %85, i32** %88, align 8
  store i32 -871872101, i32* %16
  br label %89

; <label>:89:                                     ; preds = %72, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #4 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %5, i32* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #11
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 0
  store i32* null, i32** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  store i32* null, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 2
  store i32* null, i32** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base"*
  %5 = alloca %"struct.std::_Vector_base"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5, align 8
  store %"struct.std::_Vector_base"* %7, %"struct.std::_Vector_base"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 1595263180, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %84
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 1595263180, label %14
    i32 504371424, label %18
    i32 452109355, label %24
    i32 -270239939, label %52
    i32 510175056, label %80
    i32 974682948, label %81
    i32 229365212, label %83
  ]

; <label>:13:                                     ; preds = %11
  br label %84

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 504371424, i32 452109355
  store i32 %17, i32* %9
  br label %84

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator"* dereferenceable(1) %21, i64 %22)
  store i32 974682948, i32* %9
  store i32* %23, i32** %10
  br label %84

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.631
  %26 = load i32, i32* @y.632
  %27 = add i32 %25, 1702562872
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 1702562872
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  %51 = select i1 %49, i32 -270239939, i32 229365212
  store i32 %51, i32* %9
  br label %84

; <label>:52:                                     ; preds = %11
  %53 = load i32, i32* @x.631
  %54 = load i32, i32* @y.632
  %55 = add i32 %53, -1497149903
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -1497149903
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 510175056, i32 229365212
  store i32 %79, i32* %9
  br label %84

; <label>:80:                                     ; preds = %11
  store i32 974682948, i32* %9
  store i32* null, i32** %10
  br label %84

; <label>:81:                                     ; preds = %11
  %82 = load i32*, i32** %10
  ret i32* %82

; <label>:83:                                     ; preds = %11
  store i32 -270239939, i32* %9
  br label %84

; <label>:84:                                     ; preds = %83, %80, %52, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca %"struct.std::_Vector_base"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6, align 8
  store %"struct.std::_Vector_base"* %9, %"struct.std::_Vector_base"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1333835080, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1333835080, label %15
    i32 1273915882, label %19
    i32 -1675446082, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 1273915882, i32 -1675446082
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -1675446082, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #4 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #4 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 -892554866, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %26
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -892554866, label %14
    i32 2110328307, label %19
    i32 1579513036, label %22
    i32 2106585487, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %26

; <label>:14:                                     ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = icmp ne i32* %15, %16
  %18 = select i1 %17, i32 2110328307, i32 2106585487
  store i32 %18, i32* %10
  br label %26

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* %7, align 4
  %21 = load i32*, i32** %4, align 8
  store i32 %20, i32* %21, align 4
  store i32 1579513036, i32* %10
  br label %26

; <label>:22:                                     ; preds = %11
  %23 = load i32*, i32** %4, align 8
  %24 = getelementptr inbounds i32, i32* %23, i32 1
  store i32* %24, i32** %4, align 8
  store i32 -892554866, i32* %10
  br label %26

; <label>:25:                                     ; preds = %11
  ret void

; <label>:26:                                     ; preds = %22, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.20"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.20"*) #4 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %3, i32 0, i32 0
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.20"*, i32** dereferenceable(8)) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.20"*, align 8
  %4 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.20"* %0, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.20"*, %"class.__gnu_cxx::__normal_iterator.20"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.20", %"class.__gnu_cxx::__normal_iterator.20"* %5, i32 0, i32 0
  %7 = load i32**, i32*** %4, align 8
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.651
  %8 = load i32, i32* @y.652
  %9 = add i32 %7, 1263422448
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 1263422448
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1042990955, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %85
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1042990955, label %21
    i32 1986532548, label %41
    i32 -1394065335, label %75
    i32 458219339, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %85

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1986532548, i32 458219339
  store i32 %40, i32* %17
  br label %85

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i64, align 8
  %44 = alloca i32*, align 8
  store i32* %0, i32** %42, align 8
  store i64 %1, i64* %43, align 8
  store i32* %2, i32** %44, align 8
  %45 = load i32*, i32** %42, align 8
  %46 = load i64, i64* %43, align 8
  %47 = load i32*, i32** %44, align 8
  %48 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %45, i64 %46, i32* dereferenceable(4) %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.651
  %50 = load i32, i32* @y.652
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -1394065335, i32 458219339
  store i32 %74, i32* %17
  br label %85

; <label>:75:                                     ; preds = %18
  %76 = load volatile i32*, i32** %4
  ret i32* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca i32*, align 8
  %79 = alloca i64, align 8
  %80 = alloca i32*, align 8
  store i32* %0, i32** %78, align 8
  store i64 %1, i64* %79, align 8
  store i32* %2, i32** %80, align 8
  %81 = load i32*, i32** %78, align 8
  %82 = load i64, i64* %79, align 8
  %83 = load i32*, i32** %80, align 8
  %84 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %81, i64 %82, i32* dereferenceable(4) %83)
  store i32 1986532548, i32* %17
  br label %85

; <label>:85:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #4 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #4 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = load i32, i32* %9, align 4
  store i32 %10, i32* %7, align 4
  %11 = load i64, i64* %5, align 8
  store i64 %11, i64* %8, align 8
  %12 = alloca i32
  store i32 1766524089, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %33
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1766524089, label %16
    i32 -1423721636, label %20
    i32 2116394438, label %23
    i32 573384441, label %31
  ]

; <label>:15:                                     ; preds = %13
  br label %33

; <label>:16:                                     ; preds = %13
  %17 = load i64, i64* %8, align 8
  %18 = icmp ugt i64 %17, 0
  %19 = select i1 %18, i32 -1423721636, i32 573384441
  store i32 %19, i32* %12
  br label %33

; <label>:20:                                     ; preds = %13
  %21 = load i32, i32* %7, align 4
  %22 = load i32*, i32** %4, align 8
  store i32 %21, i32* %22, align 4
  store i32 2116394438, i32* %12
  br label %33

; <label>:23:                                     ; preds = %13
  %24 = load i64, i64* %8, align 8
  %25 = add i64 %24, 4908495999639286655
  %26 = add i64 %25, -1
  %27 = sub i64 %26, 4908495999639286655
  %28 = add i64 %24, -1
  store i64 %27, i64* %8, align 8
  %29 = load i32*, i32** %4, align 8
  %30 = getelementptr inbounds i32, i32* %29, i32 1
  store i32* %30, i32** %4, align 8
  store i32 1766524089, i32* %12
  br label %33

; <label>:31:                                     ; preds = %13
  %32 = load i32*, i32** %4, align 8
  ret i32* %32

; <label>:33:                                     ; preds = %23, %20, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.661
  %6 = load i32, i32* @y.662
  %7 = add i32 %5, -236734574
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -236734574
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1526047552, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1526047552, label %19
    i32 83801166, label %27
    i32 834682232, label %46
    i32 -1759706317, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 83801166, i32 -1759706317
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  store i32* %0, i32** %28, align 8
  %29 = load i32*, i32** %28, align 8
  %30 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %29)
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.661
  %32 = load i32, i32* @y.662
  %33 = add i32 %31, 1542197248
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1542197248
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 834682232, i32 -1759706317
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca i32*, align 8
  store i32* %0, i32** %49, align 8
  %50 = load i32*, i32** %49, align 8
  %51 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %50)
  store i32 83801166, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #4 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"struct.Graph::edge"* @_ZNSt6vectorIN5Graph4edgeESaIS1_EEixEm(%"class.std::vector.8"*, i64) #4 comdat align 2 {
  %3 = alloca %"class.std::vector.8"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.8"* %0, %"class.std::vector.8"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.8"*, %"class.std::vector.8"** %3, align 8
  %6 = bitcast %"class.std::vector.8"* %5 to %"struct.std::_Vector_base.9"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.9", %"struct.std::_Vector_base.9"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl", %"struct.std::_Vector_base<Graph::edge, std::allocator<Graph::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Graph::edge"*, %"struct.Graph::edge"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Graph::edge", %"struct.Graph::edge"* %9, i64 %10
  ret %"struct.Graph::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3minIxERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #4 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %7, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %6, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -1973223320, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %61
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1973223320, label %16
    i32 -499762389, label %21
    i32 -1117056556, label %23
    i32 -511921873, label %39
    i32 -401722918, label %56
    i32 1943017383, label %57
    i32 -2045163324, label %59
  ]

; <label>:15:                                     ; preds = %13
  br label %61

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp slt i64 %17, %18
  %20 = select i1 %19, i32 -499762389, i32 -1117056556
  store i32 %20, i32* %12
  br label %61

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 1943017383, i32* %12
  br label %61

; <label>:23:                                     ; preds = %13
  %24 = load i32, i32* @x.667
  %25 = load i32, i32* @y.668
  %26 = add i32 %24, -902312679
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -902312679
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -511921873, i32 -2045163324
  store i32 %38, i32* %12
  br label %61

; <label>:39:                                     ; preds = %13
  %40 = load i64*, i64** %6, align 8
  store i64* %40, i64** %5, align 8
  %41 = load i32, i32* @x.667
  %42 = load i32, i32* @y.668
  %43 = sub i32 %41, -585832310
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -585832310
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -401722918, i32 -2045163324
  store i32 %55, i32* %12
  br label %61

; <label>:56:                                     ; preds = %13
  store i32 1943017383, i32* %12
  br label %61

; <label>:57:                                     ; preds = %13
  %58 = load i64*, i64** %5, align 8
  ret i64* %58

; <label>:59:                                     ; preds = %13
  %60 = load i64*, i64** %6, align 8
  store i64* %60, i64** %5, align 8
  store i32 -511921873, i32* %12
  br label %61

; <label>:61:                                     ; preds = %59, %56, %39, %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5GraphD2Ev(%struct.Graph*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %struct.Graph*, align 8
  store %struct.Graph* %0, %struct.Graph** %2, align 8
  %3 = load %struct.Graph*, %struct.Graph** %2, align 8
  %4 = getelementptr inbounds %struct.Graph, %struct.Graph* %3, i32 0, i32 1
  call void @_ZNSt6vectorIS_IN5Graph4edgeESaIS1_EESaIS3_EED2Ev(%"class.std::vector.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE19_M_emplace_back_auxIJRKiEEEvDpOT_(%"class.std::vector"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i32* %1, i32** %4, align 8
  %10 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %11 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector"* %10, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %11, i64* %5, align 8
  %12 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %5, align 8
  %14 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base"* %12, i64 %13)
  store i32* %14, i32** %6, align 8
  %15 = load i32*, i32** %6, align 8
  store i32* %15, i32** %7, align 8
  %16 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %17 to %"class.std::allocator"*
  %19 = load i32*, i32** %6, align 8
  %20 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %10) #3
  %21 = getelementptr inbounds i32, i32* %19, i64 %20
  %22 = load i32*, i32** %4, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %22) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator"* dereferenceable(1) %18, i32* %21, i32* dereferenceable(4) %23)
          to label %24 unwind label %94

; <label>:24:                                     ; preds = %2
  store i32* null, i32** %7, align 8
  %25 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %26, i32 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load i32*, i32** %31, align 8
  %33 = load i32*, i32** %6, align 8
  %34 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %35 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %34) #3
  %36 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %28, i32* %32, i32* %33, %"class.std::allocator"* dereferenceable(1) %35)
          to label %37 unwind label %94

; <label>:37:                                     ; preds = %24
  %38 = load i32, i32* @x.675
  %39 = load i32, i32* @y.676
  %40 = add i32 %38, -2009964755
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -2009964755
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  br i1 %62, label %64, label %251

; <label>:64:                                     ; preds = %37, %251
  store i32* %36, i32** %7, align 8
  %65 = load i32*, i32** %7, align 8
  %66 = getelementptr inbounds i32, i32* %65, i32 1
  store i32* %66, i32** %7, align 8
  %67 = load i32, i32* @x.675
  %68 = load i32, i32* @y.676
  %69 = sub i32 %67, 1128635240
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1128635240
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %251

; <label>:93:                                     ; preds = %64
  br label %198

; <label>:94:                                     ; preds = %24, %2
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  store i8* %96, i8** %8, align 8
  %97 = extractvalue { i8*, i32 } %95, 1
  store i32 %97, i32* %9, align 4
  br label %98

; <label>:98:                                     ; preds = %94
  %99 = load i32, i32* @x.675
  %100 = load i32, i32* @y.676
  %101 = sub i32 %99, -1025548427
  %102 = sub i32 %101, 1
  %103 = add i32 %102, -1025548427
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = xor i1 %107, true
  %110 = xor i1 %108, true
  %111 = xor i1 true, true
  %112 = and i1 %109, true
  %113 = and i1 %107, %111
  %114 = and i1 %110, true
  %115 = and i1 %108, %111
  %116 = or i1 %112, %113
  %117 = or i1 %114, %115
  %118 = xor i1 %116, %117
  %119 = or i1 %109, %110
  %120 = xor i1 %119, true
  %121 = or i1 true, %111
  %122 = and i1 %120, %121
  %123 = or i1 %118, %122
  %124 = or i1 %107, %108
  br i1 %123, label %125, label %254

; <label>:125:                                    ; preds = %98, %254
  %126 = load i8*, i8** %8, align 8
  %127 = call i8* @__cxa_begin_catch(i8* %126) #3
  %128 = load i32*, i32** %7, align 8
  %129 = icmp ne i32* %128, null
  %130 = load i32, i32* @x.675
  %131 = load i32, i32* @y.676
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %254

; <label>:143:                                    ; preds = %125
  br i1 %129, label %186, label %144

; <label>:144:                                    ; preds = %143
  %145 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %145, i32 0, i32 0
  %147 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %146 to %"class.std::allocator"*
  %148 = load i32*, i32** %6, align 8
  %149 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %10) #3
  %150 = getelementptr inbounds i32, i32* %148, i64 %149
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator"* dereferenceable(1) %147, i32* %150)
          to label %151 unwind label %152

; <label>:151:                                    ; preds = %144
  br label %192

; <label>:152:                                    ; preds = %196, %192, %186, %144
  %153 = load i32, i32* @x.675
  %154 = load i32, i32* @y.676
  %155 = add i32 %153, 1661721555
  %156 = sub i32 %155, 1
  %157 = sub i32 %156, 1661721555
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %259

; <label>:167:                                    ; preds = %152, %259
  %168 = landingpad { i8*, i32 }
          cleanup
  %169 = extractvalue { i8*, i32 } %168, 0
  store i8* %169, i8** %8, align 8
  %170 = extractvalue { i8*, i32 } %168, 1
  store i32 %170, i32* %9, align 4
  %171 = load i32, i32* @x.675
  %172 = load i32, i32* @y.676
  %173 = add i32 %171, -640019030
  %174 = sub i32 %173, 1
  %175 = sub i32 %174, -640019030
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %259

; <label>:185:                                    ; preds = %167
  invoke void @__cxa_end_catch()
          to label %197 unwind label %247

; <label>:186:                                    ; preds = %143
  %187 = load i32*, i32** %6, align 8
  %188 = load i32*, i32** %7, align 8
  %189 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %190 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %189) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %187, i32* %188, %"class.std::allocator"* dereferenceable(1) %190)
          to label %191 unwind label %152

; <label>:191:                                    ; preds = %186
  br label %192

; <label>:192:                                    ; preds = %191, %151
  %193 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %194 = load i32*, i32** %6, align 8
  %195 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %193, i32* %194, i64 %195)
          to label %196 unwind label %152

; <label>:196:                                    ; preds = %192
  invoke void @__cxa_rethrow() #12
          to label %250 unwind label %152

; <label>:197:                                    ; preds = %185
  br label %242

; <label>:198:                                    ; preds = %93
  %199 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %200 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %199, i32 0, i32 0
  %201 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %200, i32 0, i32 0
  %202 = load i32*, i32** %201, align 8
  %203 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %204 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %203, i32 0, i32 0
  %205 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %204, i32 0, i32 1
  %206 = load i32*, i32** %205, align 8
  %207 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %208 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %207) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %202, i32* %206, %"class.std::allocator"* dereferenceable(1) %208)
  %209 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %210 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %211 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %210, i32 0, i32 0
  %212 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %211, i32 0, i32 0
  %213 = load i32*, i32** %212, align 8
  %214 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %215 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %214, i32 0, i32 0
  %216 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %215, i32 0, i32 2
  %217 = load i32*, i32** %216, align 8
  %218 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %219, i32 0, i32 0
  %221 = load i32*, i32** %220, align 8
  %222 = ptrtoint i32* %217 to i64
  %223 = ptrtoint i32* %221 to i64
  %224 = sub i64 0, %223
  %225 = add i64 %222, %224
  %226 = sub i64 %222, %223
  %227 = sdiv exact i64 %225, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base"* %209, i32* %213, i64 %227)
  %228 = load i32*, i32** %6, align 8
  %229 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %230, i32 0, i32 0
  store i32* %228, i32** %231, align 8
  %232 = load i32*, i32** %7, align 8
  %233 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %234, i32 0, i32 1
  store i32* %232, i32** %235, align 8
  %236 = load i32*, i32** %6, align 8
  %237 = load i64, i64* %5, align 8
  %238 = getelementptr inbounds i32, i32* %236, i64 %237
  %239 = bitcast %"class.std::vector"* %10 to %"struct.std::_Vector_base"*
  %240 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %239, i32 0, i32 0
  %241 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %240, i32 0, i32 2
  store i32* %238, i32** %241, align 8
  ret void

; <label>:242:                                    ; preds = %197
  %243 = load i8*, i8** %8, align 8
  %244 = load i32, i32* %9, align 4
  %245 = insertvalue { i8*, i32 } undef, i8* %243, 0
  %246 = insertvalue { i8*, i32 } %245, i32 %244, 1
  resume { i8*, i32 } %246

; <label>:247:                                    ; preds = %185
  %248 = landingpad { i8*, i32 }
          catch i8* null
  %249 = extractvalue { i8*, i32 } %248, 0
  call void @__clang_call_terminate(i8* %249) #11
  unreachable

; <label>:250:                                    ; preds = %196
  unreachable

; <label>:251:                                    ; preds = %64, %37
  store i32* %36, i32** %7, align 8
  %252 = load i32*, i32** %7, align 8
  %253 = getelementptr inbounds i32, i32* %252, i32 1
  store i32* %253, i32** %7, align 8
  br label %64

; <label>:254:                                    ; preds = %125, %98
  %255 = load i8*, i8** %8, align 8
  %256 = call i8* @__cxa_begin_catch(i8* %255) #3
  %257 = load i32*, i32** %7, align 8
  %258 = icmp ne i32* %257, null
  br label %125

; <label>:259:                                    ; preds = %167, %152
  %260 = landingpad { i8*, i32 }
          cleanup
  %261 = extractvalue { i8*, i32 } %260, 0
  store i8* %261, i8** %8, align 8
  %262 = extractvalue { i8*, i32 } %260, 1
  store i32 %262, i32* %9, align 4
  br label %167
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.std::vector"*
  %8 = alloca %"class.std::vector"*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i8*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %8, align 8
  store i64 %1, i64* %9, align 8
  store i8* %2, i8** %10, align 8
  %13 = load %"class.std::vector"*, %"class.std::vector"** %8, align 8
  store %"class.std::vector"* %13, %"class.std::vector"** %7
  %14 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %15 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %14) #3
  %16 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %17 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %16) #3
  %18 = sub i64 0, %17
  %19 = add i64 %15, %18
  %20 = sub i64 %15, %17
  store i64 %19, i64* %6
  %21 = load i64, i64* %9, align 8
  store i64 %21, i64* %5
  %22 = alloca i32
  store i32 1376788190, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %144
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 1376788190, label %27
    i32 -753855961, label %32
    i32 1395788128, label %34
    i32 -637572317, label %61
    i32 775783865, label %90
    i32 910733393, label %93
    i32 131544730, label %99
    i32 2115847580, label %102
    i32 -621186061, label %104
    i32 628110970, label %106
  ]

; <label>:26:                                     ; preds = %24
  br label %144

; <label>:27:                                     ; preds = %24
  %28 = load volatile i64, i64* %6
  %29 = load volatile i64, i64* %5
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i32 -753855961, i32 1395788128
  store i32 %31, i32* %22
  br label %144

; <label>:32:                                     ; preds = %24
  %33 = load i8*, i8** %10, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %33) #12
  unreachable

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* @x.677
  %36 = load i32, i32* @y.678
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -637572317, i32 628110970
  store i32 %60, i32* %22
  br label %144

; <label>:61:                                     ; preds = %24
  %62 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %63 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %62) #3
  %64 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %65 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %64) #3
  store i64 %65, i64* %12, align 8
  %66 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %67 = load i64, i64* %66, align 8
  %68 = sub i64 %63, 607849390081482074
  %69 = add i64 %68, %67
  %70 = add i64 %69, 607849390081482074
  %71 = add i64 %63, %67
  store i64 %70, i64* %11, align 8
  %72 = load i64, i64* %11, align 8
  %73 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %74 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %73) #3
  %75 = icmp ult i64 %72, %74
  store i1 %75, i1* %4
  %76 = load i32, i32* @x.677
  %77 = load i32, i32* @y.678
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  %89 = select i1 %87, i32 775783865, i32 628110970
  store i32 %89, i32* %22
  br label %144

; <label>:90:                                     ; preds = %24
  %91 = load volatile i1, i1* %4
  %92 = select i1 %91, i32 131544730, i32 910733393
  store i32 %92, i32* %22
  br label %144

; <label>:93:                                     ; preds = %24
  %94 = load i64, i64* %11, align 8
  %95 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %96 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %95) #3
  %97 = icmp ugt i64 %94, %96
  %98 = select i1 %97, i32 131544730, i32 2115847580
  store i32 %98, i32* %22
  br label %144

; <label>:99:                                     ; preds = %24
  %100 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %101 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"* %100) #3
  store i32 -621186061, i32* %22
  store i64 %101, i64* %23
  br label %144

; <label>:102:                                    ; preds = %24
  %103 = load i64, i64* %11, align 8
  store i32 -621186061, i32* %22
  store i64 %103, i64* %23
  br label %144

; <label>:104:                                    ; preds = %24
  %105 = load i64, i64* %23
  ret i64 %105

; <label>:106:                                    ; preds = %24
  %107 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %108 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %107) #3
  %109 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %110 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %109) #3
  store i64 %110, i64* %12, align 8
  %111 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %12, i64* dereferenceable(8) %9)
  %112 = load i64, i64* %111, align 8
  %113 = sub i64 %108, -5837166772025432629
  %114 = sub i64 %113, %112
  %115 = add i64 %114, -5837166772025432629
  %116 = sub i64 %108, %112
  %117 = mul i64 %115, %112
  %118 = shl i64 %108, %112
  %119 = sub i64 0, %108
  %120 = add i64 0, %119
  %121 = sub i64 0, %108
  %122 = sub i64 0, %120
  %123 = sub i64 0, %112
  %124 = add i64 %122, %123
  %125 = sub i64 0, %124
  %126 = add i64 %120, %112
  %127 = sub i64 0, 7447819498621831762
  %128 = sub i64 %127, %108
  %129 = add i64 %128, 7447819498621831762
  %130 = sub i64 0, %108
  %131 = sub i64 0, %129
  %132 = sub i64 0, %112
  %133 = add i64 %131, %132
  %134 = sub i64 0, %133
  %135 = add i64 %129, %112
  %136 = sub i64 %108, -5538546426230130341
  %137 = add i64 %136, %112
  %138 = add i64 %137, -5538546426230130341
  %139 = add i64 %108, %112
  store i64 %138, i64* %11, align 8
  %140 = load i64, i64* %11, align 8
  %141 = load volatile %"class.std::vector"*, %"class.std::vector"** %7
  %142 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector"* %141) #3
  %143 = icmp ult i64 %140, %142
  store i32 -637572317, i32* %22
  br label %144

; <label>:144:                                    ; preds = %106, %102, %99, %93, %90, %61, %34, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.679
  %9 = load i32, i32* @y.680
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1023882543, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1023882543, label %21
    i32 864522543, label %29
    i32 -682052617, label %64
    i32 -202346528, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 864522543, i32 -202346528
  store i32 %28, i32* %17
  br label %86

; <label>:29:                                     ; preds = %18
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::allocator"*, align 8
  %34 = alloca %"class.std::move_iterator.21", align 8
  %35 = alloca %"class.std::move_iterator.21", align 8
  store i32* %0, i32** %30, align 8
  store i32* %1, i32** %31, align 8
  store i32* %2, i32** %32, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %33, align 8
  %36 = load i32*, i32** %30, align 8
  %37 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %36)
  %38 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %34, i32 0, i32 0
  store i32* %37, i32** %38, align 8
  %39 = load i32*, i32** %31, align 8
  %40 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %39)
  %41 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %35, i32 0, i32 0
  store i32* %40, i32** %41, align 8
  %42 = load i32*, i32** %32, align 8
  %43 = load %"class.std::allocator"*, %"class.std::allocator"** %33, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %34, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %35, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %45, i32* %47, i32* %42, %"class.std::allocator"* dereferenceable(1) %43)
  store i32* %48, i32** %5
  %49 = load i32, i32* @x.679
  %50 = load i32, i32* @y.680
  %51 = add i32 %49, -970836538
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -970836538
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -682052617, i32 -202346528
  store i32 %63, i32* %17
  br label %86

; <label>:64:                                     ; preds = %18
  %65 = load volatile i32*, i32** %5
  ret i32* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca %"class.std::allocator"*, align 8
  %71 = alloca %"class.std::move_iterator.21", align 8
  %72 = alloca %"class.std::move_iterator.21", align 8
  store i32* %0, i32** %67, align 8
  store i32* %1, i32** %68, align 8
  store i32* %2, i32** %69, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %70, align 8
  %73 = load i32*, i32** %67, align 8
  %74 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %73)
  %75 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %71, i32 0, i32 0
  store i32* %74, i32** %75, align 8
  %76 = load i32*, i32** %68, align 8
  %77 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %76)
  %78 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %72, i32 0, i32 0
  store i32* %77, i32** %78, align 8
  %79 = load i32*, i32** %69, align 8
  %80 = load %"class.std::allocator"*, %"class.std::allocator"** %70, align 8
  %81 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %71, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %72, i32 0, i32 0
  %84 = load i32*, i32** %83, align 8
  %85 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %82, i32* %84, i32* %79, %"class.std::allocator"* dereferenceable(1) %80)
  store i32 864522543, i32* %17
  br label %86

; <label>:86:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector"*) #4 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator"* dereferenceable(1)) #4 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #4 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.21", align 8
  %6 = alloca %"class.std::move_iterator.21", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator.21", align 8
  %10 = alloca %"class.std::move_iterator.21", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.21"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.21"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.21"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.21", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.21"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.21", align 8
  %5 = alloca %"class.std::move_iterator.21", align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.21", align 8
  %9 = alloca %"class.std::move_iterator.21", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %4, i32 0, i32 0
  store i32* %0, i32** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %5, i32 0, i32 0
  store i32* %1, i32** %11, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.21"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.21"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load i32*, i32** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %8, i32 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %9, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %18, i32* %20, i32* %16)
  ret i32* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.693
  %8 = load i32, i32* @y.694
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -467340424, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %93
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -467340424, label %20
    i32 -1473410702, label %40
    i32 1254928152, label %73
    i32 -2106836775, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %93

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1473410702, i32 -2106836775
  store i32 %39, i32* %16
  br label %93

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.21", align 8
  %42 = alloca %"class.std::move_iterator.21", align 8
  %43 = alloca i32*, align 8
  %44 = alloca %"class.std::move_iterator.21", align 8
  %45 = alloca %"class.std::move_iterator.21", align 8
  %46 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %41, i32 0, i32 0
  store i32* %0, i32** %46, align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %42, i32 0, i32 0
  store i32* %1, i32** %47, align 8
  store i32* %2, i32** %43, align 8
  %48 = bitcast %"class.std::move_iterator.21"* %44 to i8*
  %49 = bitcast %"class.std::move_iterator.21"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = bitcast %"class.std::move_iterator.21"* %45 to i8*
  %51 = bitcast %"class.std::move_iterator.21"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = load i32*, i32** %43, align 8
  %53 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %44, i32 0, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %45, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %54, i32* %56, i32* %52)
  store i32* %57, i32** %4
  %58 = load i32, i32* @x.693
  %59 = load i32, i32* @y.694
  %60 = add i32 %58, -1113747325
  %61 = sub i32 %60, 1
  %62 = sub i32 %61, -1113747325
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = and i1 %66, %67
  %69 = xor i1 %66, %67
  %70 = or i1 %68, %69
  %71 = or i1 %66, %67
  %72 = select i1 %70, i32 1254928152, i32 -2106836775
  store i32 %72, i32* %16
  br label %93

; <label>:73:                                     ; preds = %17
  %74 = load volatile i32*, i32** %4
  ret i32* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::move_iterator.21", align 8
  %77 = alloca %"class.std::move_iterator.21", align 8
  %78 = alloca i32*, align 8
  %79 = alloca %"class.std::move_iterator.21", align 8
  %80 = alloca %"class.std::move_iterator.21", align 8
  %81 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %76, i32 0, i32 0
  store i32* %0, i32** %81, align 8
  %82 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %77, i32 0, i32 0
  store i32* %1, i32** %82, align 8
  store i32* %2, i32** %78, align 8
  %83 = bitcast %"class.std::move_iterator.21"* %79 to i8*
  %84 = bitcast %"class.std::move_iterator.21"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = bitcast %"class.std::move_iterator.21"* %80 to i8*
  %86 = bitcast %"class.std::move_iterator.21"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = load i32*, i32** %78, align 8
  %88 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %79, i32 0, i32 0
  %89 = load i32*, i32** %88, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %80, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %89, i32* %91, i32* %87)
  store i32 -1473410702, i32* %16
  br label %93

; <label>:93:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.21", align 8
  %5 = alloca %"class.std::move_iterator.21", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.21", align 8
  %8 = alloca %"class.std::move_iterator.21", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.21"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.21"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %14)
  %16 = bitcast %"class.std::move_iterator.21"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.21"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  %22 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %15, i32* %20, i32* %21)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i32*, i32** %5, align 8
  %10 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %9)
  %11 = load i32*, i32** %6, align 8
  %12 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %11)
  %13 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %8, i32* %10, i32* %12)
  ret i32* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.21", align 8
  %3 = alloca %"class.std::move_iterator.21", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.21"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.21"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.701
  %8 = load i32, i32* @y.702
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1347974756, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1347974756, label %20
    i32 486277158, label %28
    i32 -765761709, label %63
    i32 -1142985945, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 486277158, i32 -1142985945
  store i32 %27, i32* %16
  br label %74

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %33 = load i32*, i32** %29, align 8
  %34 = load i32*, i32** %30, align 8
  %35 = load i32*, i32** %31, align 8
  %36 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %33, i32* %34, i32* %35)
  store i32* %36, i32** %4
  %37 = load i32, i32* @x.701
  %38 = load i32, i32* @y.702
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 true, true
  %49 = and i1 %46, true
  %50 = and i1 %44, %48
  %51 = and i1 %47, true
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 true, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -765761709, i32 -1142985945
  store i32 %62, i32* %16
  br label %74

; <label>:63:                                     ; preds = %17
  %64 = load volatile i32*, i32** %4
  ret i32* %64

; <label>:65:                                     ; preds = %17
  %66 = alloca i32*, align 8
  %67 = alloca i32*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i8, align 1
  store i32* %0, i32** %66, align 8
  store i32* %1, i32** %67, align 8
  store i32* %2, i32** %68, align 8
  store i8 1, i8* %69, align 1
  %70 = load i32*, i32** %66, align 8
  %71 = load i32*, i32** %67, align 8
  %72 = load i32*, i32** %68, align 8
  %73 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %70, i32* %71, i32* %72)
  store i32 486277158, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #4 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.703
  %11 = load i32, i32* @y.704
  %12 = sub i32 %10, 620229375
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 620229375
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1718562446, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %160
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1718562446, label %24
    i32 -1385579903, label %44
    i32 1926870252, label %91
    i32 427642907, label %94
    i32 2078840328, label %104
    i32 1880146734, label %110
  ]

; <label>:23:                                     ; preds = %21
  br label %160

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1385579903, i32 1880146734
  store i32 %43, i32* %20
  br label %160

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i32* %1, i32** %46, align 8
  %50 = load volatile i32**, i32*** %6
  store i32* %2, i32** %50, align 8
  %51 = load i32*, i32** %46, align 8
  %52 = load volatile i32**, i32*** %7
  %53 = load i32*, i32** %52, align 8
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 0, %55
  %57 = add i64 %54, %56
  %58 = sub i64 %54, %55
  %59 = sdiv exact i64 %57, 4
  %60 = load volatile i64*, i64** %5
  store i64 %59, i64* %60, align 8
  %61 = load volatile i64*, i64** %5
  %62 = load i64, i64* %61, align 8
  %63 = icmp ne i64 %62, 0
  store i1 %63, i1* %4
  %64 = load i32, i32* @x.703
  %65 = load i32, i32* @y.704
  %66 = add i32 %64, 1146027639
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 1146027639
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 1926870252, i32 1880146734
  store i32 %90, i32* %20
  br label %160

; <label>:91:                                     ; preds = %21
  %92 = load volatile i1, i1* %4
  %93 = select i1 %92, i32 427642907, i32 2078840328
  store i32 %93, i32* %20
  br label %160

; <label>:94:                                     ; preds = %21
  %95 = load volatile i32**, i32*** %6
  %96 = load i32*, i32** %95, align 8
  %97 = bitcast i32* %96 to i8*
  %98 = load volatile i32**, i32*** %7
  %99 = load i32*, i32** %98, align 8
  %100 = bitcast i32* %99 to i8*
  %101 = load volatile i64*, i64** %5
  %102 = load i64, i64* %101, align 8
  %103 = mul i64 4, %102
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %97, i8* %100, i64 %103, i32 4, i1 false)
  store i32 2078840328, i32* %20
  br label %160

; <label>:104:                                    ; preds = %21
  %105 = load volatile i32**, i32*** %6
  %106 = load i32*, i32** %105, align 8
  %107 = load volatile i64*, i64** %5
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds i32, i32* %106, i64 %108
  ret i32* %109

; <label>:110:                                    ; preds = %21
  %111 = alloca i32*, align 8
  %112 = alloca i32*, align 8
  %113 = alloca i32*, align 8
  %114 = alloca i64, align 8
  store i32* %0, i32** %111, align 8
  store i32* %1, i32** %112, align 8
  store i32* %2, i32** %113, align 8
  %115 = load i32*, i32** %112, align 8
  %116 = load i32*, i32** %111, align 8
  %117 = ptrtoint i32* %115 to i64
  %118 = ptrtoint i32* %116 to i64
  %119 = shl i64 %117, %118
  %120 = shl i64 %117, %118
  %121 = sub i64 %117, 2357103349501054921
  %122 = sub i64 %121, %118
  %123 = add i64 %122, 2357103349501054921
  %124 = sub i64 %117, %118
  %125 = add i64 0, -693340144635521210
  %126 = sub i64 %125, %123
  %127 = sub i64 %126, -693340144635521210
  %128 = sub i64 0, %123
  %129 = sub i64 0, 4
  %130 = sub i64 %127, %129
  %131 = add i64 %127, 4
  %132 = add i64 0, -5680567999632709333
  %133 = sub i64 %132, %123
  %134 = sub i64 %133, -5680567999632709333
  %135 = sub i64 0, %123
  %136 = sub i64 %134, -25858142758892768
  %137 = add i64 %136, 4
  %138 = add i64 %137, -25858142758892768
  %139 = add i64 %134, 4
  %140 = sub i64 %123, 6501298888904752017
  %141 = sub i64 %140, 4
  %142 = add i64 %141, 6501298888904752017
  %143 = sub i64 %123, 4
  %144 = mul i64 %142, 4
  %145 = sub i64 %123, -2946872433059742343
  %146 = sub i64 %145, 4
  %147 = add i64 %146, -2946872433059742343
  %148 = sub i64 %123, 4
  %149 = mul i64 %147, 4
  %150 = sub i64 0, -6938838720366718292
  %151 = sub i64 %150, %123
  %152 = add i64 %151, -6938838720366718292
  %153 = sub i64 0, %123
  %154 = sub i64 0, 4
  %155 = sub i64 %152, %154
  %156 = add i64 %152, 4
  %157 = sdiv exact i64 %123, 4
  store i64 %157, i64* %114, align 8
  %158 = load i64, i64* %114, align 8
  %159 = icmp ne i64 %158, 0
  store i32 -1385579903, i32* %20
  br label %160

; <label>:160:                                    ; preds = %110, %94, %91, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.21", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.21"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.21"*) #4 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.707
  %6 = load i32, i32* @y.708
  %7 = sub i32 %5, -196590490
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -196590490
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -97974682, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -97974682, label %19
    i32 1395154105, label %27
    i32 -483563833, label %46
    i32 235555647, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1395154105, i32 235555647
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator.21"*, align 8
  store %"class.std::move_iterator.21"* %0, %"class.std::move_iterator.21"** %28, align 8
  %29 = load %"class.std::move_iterator.21"*, %"class.std::move_iterator.21"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.707
  %33 = load i32, i32* @y.708
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -483563833, i32 235555647
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::move_iterator.21"*, align 8
  store %"class.std::move_iterator.21"* %0, %"class.std::move_iterator.21"** %49, align 8
  %50 = load %"class.std::move_iterator.21"*, %"class.std::move_iterator.21"** %49, align 8
  %51 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %50, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  store i32 1395154105, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.21"*, i32*) unnamed_addr #4 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.21"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::move_iterator.21"* %0, %"class.std::move_iterator.21"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::move_iterator.21"*, %"class.std::move_iterator.21"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.21", %"class.std::move_iterator.21"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s967975528.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  call void @__cxx_global_var_init.1()
  call void @__cxx_global_var_init.2()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
