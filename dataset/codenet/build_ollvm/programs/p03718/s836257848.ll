; ModuleID = 'Project_CodeNet_C++1400/p03718/s836257848.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s836257848.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::basic_istream" = type { i32 (...)**, i64, %"class.std::basic_ios" }
%"class.std::basic_ios" = type { %"class.std::ios_base", %"class.std::basic_ostream"*, i8, i8, %"class.std::basic_streambuf"*, %"class.std::ctype"*, %"class.std::num_put"*, %"class.std::num_get"* }
%"class.std::ios_base" = type { i32 (...)**, i64, i64, i32, i32, i32, %"struct.std::ios_base::_Callback_list"*, %"struct.std::ios_base::_Words", [8 x %"struct.std::ios_base::_Words"], i32, %"struct.std::ios_base::_Words"*, %"class.std::locale" }
%"struct.std::ios_base::_Callback_list" = type { %"struct.std::ios_base::_Callback_list"*, void (i32, %"class.std::ios_base"*, i32)*, i32, i32 }
%"struct.std::ios_base::_Words" = type { i8*, i64 }
%"class.std::locale" = type { %"class.std::locale::_Impl"* }
%"class.std::locale::_Impl" = type { i32, %"class.std::locale::facet"**, i64, %"class.std::locale::facet"**, i8** }
%"class.std::locale::facet" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::basic_ostream" = type { i32 (...)**, %"class.std::basic_ios" }
%"class.std::basic_streambuf" = type { i32 (...)**, i8*, i8*, i8*, i8*, i8*, i8*, %"class.std::locale" }
%"class.std::ctype" = type <{ %"class.std::locale::facet.base", [4 x i8], %struct.__locale_struct*, i8, [7 x i8], i32*, i32*, i16*, i8, [256 x i8], [256 x i8], i8, [6 x i8] }>
%"class.std::locale::facet.base" = type <{ i32 (...)**, i32 }>
%struct.__locale_struct = type { [13 x %struct.__locale_data*], i16*, i32*, i32*, [13 x i8*] }
%struct.__locale_data = type opaque
%"class.std::num_put" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::num_get" = type { %"class.std::locale::facet.base", [4 x i8] }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl" = type { %"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::vector.0"* }
%"class.std::vector.0" = type { %"struct.std::_Vector_base.1" }
%"struct.std::_Vector_base.1" = type { %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl" = type { %"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"* }
%"struct.std::pair" = type { i32, i32 }
%"class.std::allocator" = type { i8 }
%"class.std::vector.5" = type { %"struct.std::_Vector_base.6" }
%"struct.std::_Vector_base.6" = type { %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" }
%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl" = type { %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"* }
%"class.std::__cxx11::basic_string" = type { %"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider", i64, %union.anon }
%"struct.std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider" = type { i8* }
%union.anon = type { i64, [8 x i8] }
%"class.std::allocator.7" = type { i8 }
%struct.Dinic = type <{ %"class.std::vector.13", i32, [4 x i8] }>
%"class.std::vector.13" = type { %"struct.std::_Vector_base.14" }
%"struct.std::_Vector_base.14" = type { %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl" = type { %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* }
%"class.std::vector.18" = type { %"struct.std::_Vector_base.19" }
%"struct.std::_Vector_base.19" = type { %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl" = type { %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"* }
%"struct.Dinic<int>::edge" = type { i32, i32, i32 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::allocator.2" = type { i8 }
%"class.__gnu_cxx::new_allocator.8" = type { i8 }
%"class.std::vector.29" = type { %"struct.std::_Vector_base.30" }
%"struct.std::_Vector_base.30" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.31" = type { i8 }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.std::allocator.15" = type { i8 }
%"class.std::allocator.20" = type { i8 }
%"class.__gnu_cxx::new_allocator.21" = type { i8 }
%"class.__gnu_cxx::new_allocator.16" = type { i8 }
%"class.__gnu_cxx::new_allocator.3" = type { i8 }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.std::pair"* }
%"class.std::move_iterator" = type { %"struct.std::pair"* }
%"class.__gnu_cxx::__normal_iterator.24" = type { %"class.std::vector.18"* }
%"class.__gnu_cxx::__normal_iterator.23" = type { %"class.std::vector.18"* }
%"class.__gnu_cxx::__normal_iterator.25" = type { %"struct.Dinic<int>::edge"* }
%"class.std::move_iterator.26" = type { %"class.std::vector.18"* }
%"struct.std::integral_constant" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.27" = type { %"struct.Dinic<int>::edge"* }
%"class.std::move_iterator.28" = type { %"struct.Dinic<int>::edge"* }
%"class.__gnu_cxx::new_allocator.32" = type { i8 }
%"class.std::allocator.34" = type { i8 }
%"class.__gnu_cxx::new_allocator.35" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }

$_ZNSt6vectorISt4pairIiiESaIS1_EEC2Ev = comdat any

$_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2Ev = comdat any

$_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEC2EmRKS3_RKS4_ = comdat any

$_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_ = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm = comdat any

$_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_ = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJRiiEEEvDpOT_ = comdat any

$_ZN5DinicIiEC2ERSt6vectorIS1_ISt4pairIiiESaIS3_EESaIS5_EEi = comdat any

$_ZN5DinicIiE12maximum_flowEii = comdat any

$_ZN5DinicIiED2Ev = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5DinicIiE4edgeESaIS5_EEEEvT_S9_ = comdat any

$_ZSt8_DestroyISt6vectorIN5DinicIiE4edgeESaIS3_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIN5DinicIiE4edgeESaIS3_EEEPT_RS6_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN5DinicIiE4edgeEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN5DinicIiE4edgeEEEvT_S6_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE10deallocateEPS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE10deallocateEPS6_m = comdat any

$_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt4pairIiiEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EED2Ev = comdat any

$_ZSt8_DestroyIPSt4pairIiiEEvT_S3_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIiiEEEvT_S5_ = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EEC2EmRKS5_ = comdat any

$_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implD2Ev = comdat any

$_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2ERKS4_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE8allocateERS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8max_sizeEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorISt4pairIiiESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorISt4pairIiiESaIS2_EEmS4_ET_S6_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt4pairIiiESaIS4_EEmS6_EET_S8_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorISt4pairIiiESaIS2_EEJRKS4_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt6vectorISt4pairIiiESaIS2_EEEPT_RS5_ = comdat any

$_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EEEvT_S6_ = comdat any

$_ZSt7forwardIRKSt6vectorISt4pairIiiESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EEC2ERKS3_ = comdat any

$_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiiEEE17_S_select_on_copyERKS3_ = comdat any

$_ZNKSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2EmRKS2_ = comdat any

$_ZNSaISt4pairIiiEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E = comdat any

$_ZNKSt6vectorISt4pairIiiESaIS1_EE5beginEv = comdat any

$_ZNKSt6vectorISt4pairIiiESaIS1_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE37select_on_container_copy_constructionERKS2_ = comdat any

$_ZNSaISt4pairIiiEEC2ERKS1_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2ERKS2_ = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_ = comdat any

$_ZN9__gnu_cxxneIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZSt10_ConstructISt4pairIiiEJRKS1_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofISt4pairIiiEEPT_RS2_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEdeEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEppEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEE4baseEv = comdat any

$_ZSt7forwardIRKSt4pairIiiEEOT_RNSt16remove_referenceIS4_E4typeE = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEC2ERKS4_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairIiiESaIS4_EEEEvT_S8_ = comdat any

$_ZSt8_DestroyISt6vectorISt4pairIiiESaIS2_EEEvPT_ = comdat any

$_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE13_M_deallocateEPS4_m = comdat any

$_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE10deallocateERS5_PS4_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE10deallocateEPS5_m = comdat any

$_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EES4_EvT_S6_RSaIT0_E = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_ = comdat any

$_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS5_ = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv = comdat any

$_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_ = comdat any

$_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_ = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_ = comdat any

$_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_ = comdat any

$_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m = comdat any

$_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JiiEEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJiiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JiiEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIiiEC2IiivEEOT_OT0_ = comdat any

$_ZNKSt6vectorISt4pairIiiESaIS1_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiiES2_SaIS1_EET0_T_S5_S4_RT1_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_ = comdat any

$_ZNKSt6vectorISt4pairIiiESaIS1_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE8max_sizeERKS2_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIiiEES3_S2_ET0_T_S6_S5_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIiiEES3_ET0_T_S6_S5_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIiiEES5_EET0_T_S8_S7_ = comdat any

$_ZStneIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZSt10_ConstructISt4pairIiiEJS1_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIiiEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt4pairIiiEEppEv = comdat any

$_ZSteqIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_ = comdat any

$_ZNKSt13move_iteratorIPSt4pairIiiEE4baseEv = comdat any

$_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt13move_iteratorIPSt4pairIiiEEC2ES2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JRiiEEEvRS2_PT_DpOT0_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJRiiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JRiiEEEvPT_DpOT0_ = comdat any

$_ZNSt4pairIiiEC2IRiivEEOT_OT0_ = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6resizeEmRKS4_ = comdat any

$_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt6vectorISt4pairIiiESaIS1_EEixEm = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE9push_backERKS2_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEmRS9_ = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2IPS6_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISE_SD_EE7__valueESA_E6__typeEEE = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_ = comdat any

$_ZN9__gnu_cxxmiIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_ = comdat any

$_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6cbeginEv = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_ = comdat any

$_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE5beginEv = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEplEl = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS4_ = comdat any

$_ZN9__gnu_cxxmiIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_ = comdat any

$_ZSt22__uninitialized_move_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt13move_backwardIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET0_T_S8_S7_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv = comdat any

$_ZSt4fillIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RKT0_ = comdat any

$_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E = comdat any

$_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZN9__gnu_cxx14__alloc_traitsISaIN5DinicIiE4edgeEEE17_S_select_on_copyERKS4_ = comdat any

$_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EmRKS3_ = comdat any

$_ZNSaIN5DinicIiE4edgeEED2Ev = comdat any

$_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE37select_on_container_copy_constructionERKS3_ = comdat any

$_ZNSaIN5DinicIiE4edgeEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2ERKS4_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2ERKS3_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8max_sizeEv = comdat any

$_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_ = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET1_T0_SD_SC_ = comdat any

$_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt13__copy_move_aILb0EPKN5DinicIiE4edgeEPS2_ET1_T0_S7_S6_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_ = comdat any

$_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt10_Iter_baseIPN5DinicIiE4edgeELb0EE7_S_baseES3_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS5_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt18make_move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEESt13move_iteratorIT_ES8_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEppEv = comdat any

$_ZSteqIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2EOS3_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZSt4swapIPN5DinicIiE4edgeEEvRT_S5_ = comdat any

$_ZSt4moveIRPN5DinicIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEC2ES6_ = comdat any

$_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__miter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_ = comdat any

$_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_ = comdat any

$_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5DinicIiE4edgeESaIS6_EES9_EET0_T_SB_SA_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSEOS4_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE = comdat any

$_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13get_allocatorEv = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS3_ = comdat any

$_ZSt15__alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2ERKS3_ = comdat any

$_ZSt18__do_alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_St17integral_constantIbLb1EE = comdat any

$_ZNSt10_Iter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EELb0EE7_S_baseES6_ = comdat any

$_ZSt8__fill_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SC_RKS9_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSERKS4_ = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8capacityEv = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_ = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E = comdat any

$_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv = comdat any

$_ZSt4copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_ = comdat any

$_ZSt22__uninitialized_copy_aIPN5DinicIiE4edgeES3_S2_ET0_T_S5_S4_RSaIT1_E = comdat any

$_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEEvT_SA_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_ = comdat any

$_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZSt14__copy_move_a2ILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_ = comdat any

$_ZSt13__copy_move_aILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt18uninitialized_copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5DinicIiE4edgeES5_EET0_T_S7_S6_ = comdat any

$_ZSt20uninitialized_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_ET_S7_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS5_EEmS7_EET_S9_T0_RKT1_ = comdat any

$_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJRKS5_EEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKSt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE = comdat any

$_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8allocateEmPKv = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_ = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN5DinicIiE4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2Ev = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE9constructIS3_JRKS3_EEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN5DinicIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8max_sizeERKS3_ = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5DinicIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN5DinicIiE4edgeESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5DinicIiE4edgeEES6_EET0_T_S9_S8_ = comdat any

$_ZSt4copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_ = comdat any

$_ZSt14__copy_move_a2ILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPN5DinicIiE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_ = comdat any

$_ZSt13__copy_move_aILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPN5DinicIiE4edgeEELb1EE7_S_baseES5_ = comdat any

$_ZNKSt13move_iteratorIPN5DinicIiE4edgeEE4baseEv = comdat any

$_ZNSt13move_iteratorIPN5DinicIiE4edgeEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE7destroyIS3_EEvPT_ = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE4sizeEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZN5DinicIiE3dfsEiiiRSt6vectorIiSaIiEES4_ = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE9push_backERKi = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE4sizeEv = comdat any

$_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@_ZSt3cin = external global %"class.std::basic_istream", align 8
@_ZSt4cout = external global %"class.std::basic_ostream", align 8
@.str = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"vector::_M_fill_insert\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s836257848.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.2 = common global i32 0
@y.3 = common global i32 0
@x.4 = common global i32 0
@y.5 = common global i32 0
@x.6 = common global i32 0
@y.7 = common global i32 0
@x.8 = common global i32 0
@y.9 = common global i32 0
@x.10 = common global i32 0
@y.11 = common global i32 0
@x.12 = common global i32 0
@y.13 = common global i32 0
@x.14 = common global i32 0
@y.15 = common global i32 0
@x.16 = common global i32 0
@y.17 = common global i32 0
@x.18 = common global i32 0
@y.19 = common global i32 0
@x.20 = common global i32 0
@y.21 = common global i32 0
@x.22 = common global i32 0
@y.23 = common global i32 0
@x.24 = common global i32 0
@y.25 = common global i32 0
@x.26 = common global i32 0
@y.27 = common global i32 0
@x.28 = common global i32 0
@y.29 = common global i32 0
@x.30 = common global i32 0
@y.31 = common global i32 0
@x.32 = common global i32 0
@y.33 = common global i32 0
@x.34 = common global i32 0
@y.35 = common global i32 0
@x.36 = common global i32 0
@y.37 = common global i32 0
@x.38 = common global i32 0
@y.39 = common global i32 0
@x.40 = common global i32 0
@y.41 = common global i32 0
@x.42 = common global i32 0
@y.43 = common global i32 0
@x.44 = common global i32 0
@y.45 = common global i32 0
@x.46 = common global i32 0
@y.47 = common global i32 0
@x.48 = common global i32 0
@y.49 = common global i32 0
@x.50 = common global i32 0
@y.51 = common global i32 0
@x.52 = common global i32 0
@y.53 = common global i32 0
@x.54 = common global i32 0
@y.55 = common global i32 0
@x.56 = common global i32 0
@y.57 = common global i32 0
@x.58 = common global i32 0
@y.59 = common global i32 0
@x.60 = common global i32 0
@y.61 = common global i32 0
@x.62 = common global i32 0
@y.63 = common global i32 0
@x.64 = common global i32 0
@y.65 = common global i32 0
@x.66 = common global i32 0
@y.67 = common global i32 0
@x.68 = common global i32 0
@y.69 = common global i32 0
@x.70 = common global i32 0
@y.71 = common global i32 0
@x.72 = common global i32 0
@y.73 = common global i32 0
@x.74 = common global i32 0
@y.75 = common global i32 0
@x.76 = common global i32 0
@y.77 = common global i32 0
@x.78 = common global i32 0
@y.79 = common global i32 0
@x.80 = common global i32 0
@y.81 = common global i32 0
@x.82 = common global i32 0
@y.83 = common global i32 0
@x.84 = common global i32 0
@y.85 = common global i32 0
@x.86 = common global i32 0
@y.87 = common global i32 0
@x.88 = common global i32 0
@y.89 = common global i32 0
@x.90 = common global i32 0
@y.91 = common global i32 0
@x.92 = common global i32 0
@y.93 = common global i32 0
@x.94 = common global i32 0
@y.95 = common global i32 0
@x.96 = common global i32 0
@y.97 = common global i32 0
@x.98 = common global i32 0
@y.99 = common global i32 0
@x.100 = common global i32 0
@y.101 = common global i32 0
@x.102 = common global i32 0
@y.103 = common global i32 0
@x.104 = common global i32 0
@y.105 = common global i32 0
@x.106 = common global i32 0
@y.107 = common global i32 0
@x.108 = common global i32 0
@y.109 = common global i32 0
@x.110 = common global i32 0
@y.111 = common global i32 0
@x.112 = common global i32 0
@y.113 = common global i32 0
@x.114 = common global i32 0
@y.115 = common global i32 0
@x.116 = common global i32 0
@y.117 = common global i32 0
@x.118 = common global i32 0
@y.119 = common global i32 0
@x.120 = common global i32 0
@y.121 = common global i32 0
@x.122 = common global i32 0
@y.123 = common global i32 0
@x.124 = common global i32 0
@y.125 = common global i32 0
@x.126 = common global i32 0
@y.127 = common global i32 0
@x.128 = common global i32 0
@y.129 = common global i32 0
@x.130 = common global i32 0
@y.131 = common global i32 0
@x.132 = common global i32 0
@y.133 = common global i32 0
@x.134 = common global i32 0
@y.135 = common global i32 0
@x.136 = common global i32 0
@y.137 = common global i32 0
@x.138 = common global i32 0
@y.139 = common global i32 0
@x.140 = common global i32 0
@y.141 = common global i32 0
@x.142 = common global i32 0
@y.143 = common global i32 0
@x.144 = common global i32 0
@y.145 = common global i32 0
@x.146 = common global i32 0
@y.147 = common global i32 0
@x.148 = common global i32 0
@y.149 = common global i32 0
@x.150 = common global i32 0
@y.151 = common global i32 0
@x.152 = common global i32 0
@y.153 = common global i32 0
@x.154 = common global i32 0
@y.155 = common global i32 0
@x.156 = common global i32 0
@y.157 = common global i32 0
@x.158 = common global i32 0
@y.159 = common global i32 0
@x.160 = common global i32 0
@y.161 = common global i32 0
@x.162 = common global i32 0
@y.163 = common global i32 0
@x.164 = common global i32 0
@y.165 = common global i32 0
@x.166 = common global i32 0
@y.167 = common global i32 0
@x.168 = common global i32 0
@y.169 = common global i32 0
@x.170 = common global i32 0
@y.171 = common global i32 0
@x.172 = common global i32 0
@y.173 = common global i32 0
@x.174 = common global i32 0
@y.175 = common global i32 0
@x.176 = common global i32 0
@y.177 = common global i32 0
@x.178 = common global i32 0
@y.179 = common global i32 0
@x.180 = common global i32 0
@y.181 = common global i32 0
@x.182 = common global i32 0
@y.183 = common global i32 0
@x.184 = common global i32 0
@y.185 = common global i32 0
@x.186 = common global i32 0
@y.187 = common global i32 0
@x.188 = common global i32 0
@y.189 = common global i32 0
@x.190 = common global i32 0
@y.191 = common global i32 0
@x.192 = common global i32 0
@y.193 = common global i32 0
@x.194 = common global i32 0
@y.195 = common global i32 0
@x.196 = common global i32 0
@y.197 = common global i32 0
@x.198 = common global i32 0
@y.199 = common global i32 0
@x.200 = common global i32 0
@y.201 = common global i32 0
@x.202 = common global i32 0
@y.203 = common global i32 0
@x.204 = common global i32 0
@y.205 = common global i32 0
@x.206 = common global i32 0
@y.207 = common global i32 0
@x.208 = common global i32 0
@y.209 = common global i32 0
@x.210 = common global i32 0
@y.211 = common global i32 0
@x.212 = common global i32 0
@y.213 = common global i32 0
@x.214 = common global i32 0
@y.215 = common global i32 0
@x.216 = common global i32 0
@y.217 = common global i32 0
@x.218 = common global i32 0
@y.219 = common global i32 0
@x.220 = common global i32 0
@y.221 = common global i32 0
@x.222 = common global i32 0
@y.223 = common global i32 0
@x.224 = common global i32 0
@y.225 = common global i32 0
@x.226 = common global i32 0
@y.227 = common global i32 0
@x.228 = common global i32 0
@y.229 = common global i32 0
@x.230 = common global i32 0
@y.231 = common global i32 0
@x.232 = common global i32 0
@y.233 = common global i32 0
@x.234 = common global i32 0
@y.235 = common global i32 0
@x.236 = common global i32 0
@y.237 = common global i32 0
@x.238 = common global i32 0
@y.239 = common global i32 0
@x.240 = common global i32 0
@y.241 = common global i32 0
@x.242 = common global i32 0
@y.243 = common global i32 0
@x.244 = common global i32 0
@y.245 = common global i32 0
@x.246 = common global i32 0
@y.247 = common global i32 0
@x.248 = common global i32 0
@y.249 = common global i32 0
@x.250 = common global i32 0
@y.251 = common global i32 0
@x.252 = common global i32 0
@y.253 = common global i32 0
@x.254 = common global i32 0
@y.255 = common global i32 0
@x.256 = common global i32 0
@y.257 = common global i32 0
@x.258 = common global i32 0
@y.259 = common global i32 0
@x.260 = common global i32 0
@y.261 = common global i32 0
@x.262 = common global i32 0
@y.263 = common global i32 0
@x.264 = common global i32 0
@y.265 = common global i32 0
@x.266 = common global i32 0
@y.267 = common global i32 0
@x.268 = common global i32 0
@y.269 = common global i32 0
@x.270 = common global i32 0
@y.271 = common global i32 0
@x.272 = common global i32 0
@y.273 = common global i32 0
@x.274 = common global i32 0
@y.275 = common global i32 0
@x.276 = common global i32 0
@y.277 = common global i32 0
@x.278 = common global i32 0
@y.279 = common global i32 0
@x.280 = common global i32 0
@y.281 = common global i32 0
@x.282 = common global i32 0
@y.283 = common global i32 0
@x.284 = common global i32 0
@y.285 = common global i32 0
@x.286 = common global i32 0
@y.287 = common global i32 0
@x.288 = common global i32 0
@y.289 = common global i32 0
@x.290 = common global i32 0
@y.291 = common global i32 0
@x.292 = common global i32 0
@y.293 = common global i32 0
@x.294 = common global i32 0
@y.295 = common global i32 0
@x.296 = common global i32 0
@y.297 = common global i32 0
@x.298 = common global i32 0
@y.299 = common global i32 0
@x.300 = common global i32 0
@y.301 = common global i32 0
@x.302 = common global i32 0
@y.303 = common global i32 0
@x.304 = common global i32 0
@y.305 = common global i32 0
@x.306 = common global i32 0
@y.307 = common global i32 0
@x.308 = common global i32 0
@y.309 = common global i32 0
@x.310 = common global i32 0
@y.311 = common global i32 0
@x.312 = common global i32 0
@y.313 = common global i32 0
@x.314 = common global i32 0
@y.315 = common global i32 0
@x.316 = common global i32 0
@y.317 = common global i32 0
@x.318 = common global i32 0
@y.319 = common global i32 0
@x.320 = common global i32 0
@y.321 = common global i32 0
@x.322 = common global i32 0
@y.323 = common global i32 0
@x.324 = common global i32 0
@y.325 = common global i32 0
@x.326 = common global i32 0
@y.327 = common global i32 0
@x.328 = common global i32 0
@y.329 = common global i32 0
@x.330 = common global i32 0
@y.331 = common global i32 0
@x.332 = common global i32 0
@y.333 = common global i32 0
@x.334 = common global i32 0
@y.335 = common global i32 0
@x.336 = common global i32 0
@y.337 = common global i32 0
@x.338 = common global i32 0
@y.339 = common global i32 0
@x.340 = common global i32 0
@y.341 = common global i32 0
@x.342 = common global i32 0
@y.343 = common global i32 0
@x.344 = common global i32 0
@y.345 = common global i32 0
@x.346 = common global i32 0
@y.347 = common global i32 0
@x.348 = common global i32 0
@y.349 = common global i32 0
@x.350 = common global i32 0
@y.351 = common global i32 0
@x.352 = common global i32 0
@y.353 = common global i32 0
@x.354 = common global i32 0
@y.355 = common global i32 0
@x.356 = common global i32 0
@y.357 = common global i32 0
@x.358 = common global i32 0
@y.359 = common global i32 0
@x.360 = common global i32 0
@y.361 = common global i32 0
@x.362 = common global i32 0
@y.363 = common global i32 0
@x.364 = common global i32 0
@y.365 = common global i32 0
@x.366 = common global i32 0
@y.367 = common global i32 0
@x.368 = common global i32 0
@y.369 = common global i32 0
@x.370 = common global i32 0
@y.371 = common global i32 0
@x.372 = common global i32 0
@y.373 = common global i32 0
@x.374 = common global i32 0
@y.375 = common global i32 0
@x.376 = common global i32 0
@y.377 = common global i32 0
@x.378 = common global i32 0
@y.379 = common global i32 0
@x.380 = common global i32 0
@y.381 = common global i32 0
@x.382 = common global i32 0
@y.383 = common global i32 0
@x.384 = common global i32 0
@y.385 = common global i32 0
@x.386 = common global i32 0
@y.387 = common global i32 0
@x.388 = common global i32 0
@y.389 = common global i32 0
@x.390 = common global i32 0
@y.391 = common global i32 0
@x.392 = common global i32 0
@y.393 = common global i32 0
@x.394 = common global i32 0
@y.395 = common global i32 0
@x.396 = common global i32 0
@y.397 = common global i32 0
@x.398 = common global i32 0
@y.399 = common global i32 0
@x.400 = common global i32 0
@y.401 = common global i32 0
@x.402 = common global i32 0
@y.403 = common global i32 0
@x.404 = common global i32 0
@y.405 = common global i32 0
@x.406 = common global i32 0
@y.407 = common global i32 0
@x.408 = common global i32 0
@y.409 = common global i32 0
@x.410 = common global i32 0
@y.411 = common global i32 0
@x.412 = common global i32 0
@y.413 = common global i32 0
@x.414 = common global i32 0
@y.415 = common global i32 0
@x.416 = common global i32 0
@y.417 = common global i32 0
@x.418 = common global i32 0
@y.419 = common global i32 0
@x.420 = common global i32 0
@y.421 = common global i32 0
@x.422 = common global i32 0
@y.423 = common global i32 0
@x.424 = common global i32 0
@y.425 = common global i32 0
@x.426 = common global i32 0
@y.427 = common global i32 0
@x.428 = common global i32 0
@y.429 = common global i32 0
@x.430 = common global i32 0
@y.431 = common global i32 0
@x.432 = common global i32 0
@y.433 = common global i32 0
@x.434 = common global i32 0
@y.435 = common global i32 0
@x.436 = common global i32 0
@y.437 = common global i32 0
@x.438 = common global i32 0
@y.439 = common global i32 0
@x.440 = common global i32 0
@y.441 = common global i32 0
@x.442 = common global i32 0
@y.443 = common global i32 0
@x.444 = common global i32 0
@y.445 = common global i32 0
@x.446 = common global i32 0
@y.447 = common global i32 0
@x.448 = common global i32 0
@y.449 = common global i32 0
@x.450 = common global i32 0
@y.451 = common global i32 0
@x.452 = common global i32 0
@y.453 = common global i32 0
@x.454 = common global i32 0
@y.455 = common global i32 0
@x.456 = common global i32 0
@y.457 = common global i32 0
@x.458 = common global i32 0
@y.459 = common global i32 0
@x.460 = common global i32 0
@y.461 = common global i32 0
@x.462 = common global i32 0
@y.463 = common global i32 0
@x.464 = common global i32 0
@y.465 = common global i32 0
@x.466 = common global i32 0
@y.467 = common global i32 0
@x.468 = common global i32 0
@y.469 = common global i32 0
@x.470 = common global i32 0
@y.471 = common global i32 0
@x.472 = common global i32 0
@y.473 = common global i32 0
@x.474 = common global i32 0
@y.475 = common global i32 0
@x.476 = common global i32 0
@y.477 = common global i32 0
@x.478 = common global i32 0
@y.479 = common global i32 0
@x.480 = common global i32 0
@y.481 = common global i32 0
@x.482 = common global i32 0
@y.483 = common global i32 0
@x.484 = common global i32 0
@y.485 = common global i32 0
@x.486 = common global i32 0
@y.487 = common global i32 0
@x.488 = common global i32 0
@y.489 = common global i32 0
@x.490 = common global i32 0
@y.491 = common global i32 0
@x.492 = common global i32 0
@y.493 = common global i32 0
@x.494 = common global i32 0
@y.495 = common global i32 0
@x.496 = common global i32 0
@y.497 = common global i32 0
@x.498 = common global i32 0
@y.499 = common global i32 0
@x.500 = common global i32 0
@y.501 = common global i32 0
@x.502 = common global i32 0
@y.503 = common global i32 0
@x.504 = common global i32 0
@y.505 = common global i32 0
@x.506 = common global i32 0
@y.507 = common global i32 0
@x.508 = common global i32 0
@y.509 = common global i32 0
@x.510 = common global i32 0
@y.511 = common global i32 0
@x.512 = common global i32 0
@y.513 = common global i32 0
@x.514 = common global i32 0
@y.515 = common global i32 0
@x.516 = common global i32 0
@y.517 = common global i32 0
@x.518 = common global i32 0
@y.519 = common global i32 0
@x.520 = common global i32 0
@y.521 = common global i32 0
@x.522 = common global i32 0
@y.523 = common global i32 0
@x.524 = common global i32 0
@y.525 = common global i32 0
@x.526 = common global i32 0
@y.527 = common global i32 0
@x.528 = common global i32 0
@y.529 = common global i32 0
@x.530 = common global i32 0
@y.531 = common global i32 0
@x.532 = common global i32 0
@y.533 = common global i32 0
@x.534 = common global i32 0
@y.535 = common global i32 0
@x.536 = common global i32 0
@y.537 = common global i32 0
@x.538 = common global i32 0
@y.539 = common global i32 0
@x.540 = common global i32 0
@y.541 = common global i32 0
@x.542 = common global i32 0
@y.543 = common global i32 0
@x.544 = common global i32 0
@y.545 = common global i32 0
@x.546 = common global i32 0
@y.547 = common global i32 0
@x.548 = common global i32 0
@y.549 = common global i32 0
@x.550 = common global i32 0
@y.551 = common global i32 0
@x.552 = common global i32 0
@y.553 = common global i32 0
@x.554 = common global i32 0
@y.555 = common global i32 0
@x.556 = common global i32 0
@y.557 = common global i32 0
@x.558 = common global i32 0
@y.559 = common global i32 0
@x.560 = common global i32 0
@y.561 = common global i32 0
@x.562 = common global i32 0
@y.563 = common global i32 0
@x.564 = common global i32 0
@y.565 = common global i32 0
@x.566 = common global i32 0
@y.567 = common global i32 0
@x.568 = common global i32 0
@y.569 = common global i32 0
@x.570 = common global i32 0
@y.571 = common global i32 0
@x.572 = common global i32 0
@y.573 = common global i32 0
@x.574 = common global i32 0
@y.575 = common global i32 0
@x.576 = common global i32 0
@y.577 = common global i32 0
@x.578 = common global i32 0
@y.579 = common global i32 0
@x.580 = common global i32 0
@y.581 = common global i32 0
@x.582 = common global i32 0
@y.583 = common global i32 0
@x.584 = common global i32 0
@y.585 = common global i32 0
@x.586 = common global i32 0
@y.587 = common global i32 0
@x.588 = common global i32 0
@y.589 = common global i32 0
@x.590 = common global i32 0
@y.591 = common global i32 0
@x.592 = common global i32 0
@y.593 = common global i32 0
@x.594 = common global i32 0
@y.595 = common global i32 0
@x.596 = common global i32 0
@y.597 = common global i32 0
@x.598 = common global i32 0
@y.599 = common global i32 0
@x.600 = common global i32 0
@y.601 = common global i32 0
@x.602 = common global i32 0
@y.603 = common global i32 0
@x.604 = common global i32 0
@y.605 = common global i32 0
@x.606 = common global i32 0
@y.607 = common global i32 0
@x.608 = common global i32 0
@y.609 = common global i32 0
@x.610 = common global i32 0
@y.611 = common global i32 0
@x.612 = common global i32 0
@y.613 = common global i32 0
@x.614 = common global i32 0
@y.615 = common global i32 0
@x.616 = common global i32 0
@y.617 = common global i32 0
@x.618 = common global i32 0
@y.619 = common global i32 0
@x.620 = common global i32 0
@y.621 = common global i32 0
@x.622 = common global i32 0
@y.623 = common global i32 0
@x.624 = common global i32 0
@y.625 = common global i32 0
@x.626 = common global i32 0
@y.627 = common global i32 0
@x.628 = common global i32 0
@y.629 = common global i32 0
@x.630 = common global i32 0
@y.631 = common global i32 0
@x.632 = common global i32 0
@y.633 = common global i32 0
@x.634 = common global i32 0
@y.635 = common global i32 0
@x.636 = common global i32 0
@y.637 = common global i32 0
@x.638 = common global i32 0
@y.639 = common global i32 0
@x.640 = common global i32 0
@y.641 = common global i32 0
@x.642 = common global i32 0
@y.643 = common global i32 0
@x.644 = common global i32 0
@y.645 = common global i32 0
@x.646 = common global i32 0
@y.647 = common global i32 0
@x.648 = common global i32 0
@y.649 = common global i32 0
@x.650 = common global i32 0
@y.651 = common global i32 0
@x.652 = common global i32 0
@y.653 = common global i32 0
@x.654 = common global i32 0
@y.655 = common global i32 0
@x.656 = common global i32 0
@y.657 = common global i32 0
@x.658 = common global i32 0
@y.659 = common global i32 0
@x.660 = common global i32 0
@y.661 = common global i32 0
@x.662 = common global i32 0
@y.663 = common global i32 0
@x.664 = common global i32 0
@y.665 = common global i32 0
@x.666 = common global i32 0
@y.667 = common global i32 0
@x.668 = common global i32 0
@y.669 = common global i32 0
@x.670 = common global i32 0
@y.671 = common global i32 0
@x.672 = common global i32 0
@y.673 = common global i32 0
@x.674 = common global i32 0
@y.675 = common global i32 0
@x.676 = common global i32 0
@y.677 = common global i32 0
@x.678 = common global i32 0
@y.679 = common global i32 0
@x.680 = common global i32 0
@y.681 = common global i32 0
@x.682 = common global i32 0
@y.683 = common global i32 0
@x.684 = common global i32 0
@y.685 = common global i32 0
@x.686 = common global i32 0
@y.687 = common global i32 0
@x.688 = common global i32 0
@y.689 = common global i32 0
@x.690 = common global i32 0
@y.691 = common global i32 0
@x.692 = common global i32 0
@y.693 = common global i32 0
@x.694 = common global i32 0
@y.695 = common global i32 0
@x.696 = common global i32 0
@y.697 = common global i32 0
@x.698 = common global i32 0
@y.699 = common global i32 0
@x.700 = common global i32 0
@y.701 = common global i32 0
@x.702 = common global i32 0
@y.703 = common global i32 0
@x.704 = common global i32 0
@y.705 = common global i32 0
@x.706 = common global i32 0
@y.707 = common global i32 0
@x.708 = common global i32 0
@y.709 = common global i32 0
@x.710 = common global i32 0
@y.711 = common global i32 0
@x.712 = common global i32 0
@y.713 = common global i32 0
@x.714 = common global i32 0
@y.715 = common global i32 0
@x.716 = common global i32 0
@y.717 = common global i32 0
@x.718 = common global i32 0
@y.719 = common global i32 0
@x.720 = common global i32 0
@y.721 = common global i32 0
@x.722 = common global i32 0
@y.723 = common global i32 0
@x.724 = common global i32 0
@y.725 = common global i32 0
@x.726 = common global i32 0
@y.727 = common global i32 0
@x.728 = common global i32 0
@y.729 = common global i32 0
@x.730 = common global i32 0
@y.731 = common global i32 0
@x.732 = common global i32 0
@y.733 = common global i32 0
@x.734 = common global i32 0
@y.735 = common global i32 0
@x.736 = common global i32 0
@y.737 = common global i32 0
@x.738 = common global i32 0
@y.739 = common global i32 0
@x.740 = common global i32 0
@y.741 = common global i32 0
@x.742 = common global i32 0
@y.743 = common global i32 0
@x.744 = common global i32 0
@y.745 = common global i32 0
@x.746 = common global i32 0
@y.747 = common global i32 0
@x.748 = common global i32 0
@y.749 = common global i32 0
@x.750 = common global i32 0
@y.751 = common global i32 0
@x.752 = common global i32 0
@y.753 = common global i32 0
@x.754 = common global i32 0
@y.755 = common global i32 0
@x.756 = common global i32 0
@y.757 = common global i32 0
@x.758 = common global i32 0
@y.759 = common global i32 0
@x.760 = common global i32 0
@y.761 = common global i32 0
@x.762 = common global i32 0
@y.763 = common global i32 0
@x.764 = common global i32 0
@y.765 = common global i32 0
@x.766 = common global i32 0
@y.767 = common global i32 0
@x.768 = common global i32 0
@y.769 = common global i32 0
@x.770 = common global i32 0
@y.771 = common global i32 0
@x.772 = common global i32 0
@y.773 = common global i32 0
@x.774 = common global i32 0
@y.775 = common global i32 0
@x.776 = common global i32 0
@y.777 = common global i32 0
@x.778 = common global i32 0
@y.779 = common global i32 0
@x.780 = common global i32 0
@y.781 = common global i32 0
@x.782 = common global i32 0
@y.783 = common global i32 0
@x.784 = common global i32 0
@y.785 = common global i32 0
@x.786 = common global i32 0
@y.787 = common global i32 0
@x.788 = common global i32 0
@y.789 = common global i32 0
@x.790 = common global i32 0
@y.791 = common global i32 0
@x.792 = common global i32 0
@y.793 = common global i32 0
@x.794 = common global i32 0
@y.795 = common global i32 0
@x.796 = common global i32 0
@y.797 = common global i32 0
@x.798 = common global i32 0
@y.799 = common global i32 0
@x.800 = common global i32 0
@y.801 = common global i32 0
@x.802 = common global i32 0
@y.803 = common global i32 0
@x.804 = common global i32 0
@y.805 = common global i32 0
@x.806 = common global i32 0
@y.807 = common global i32 0
@x.808 = common global i32 0
@y.809 = common global i32 0
@x.810 = common global i32 0
@y.811 = common global i32 0
@x.812 = common global i32 0
@y.813 = common global i32 0
@x.814 = common global i32 0
@y.815 = common global i32 0
@x.816 = common global i32 0
@y.817 = common global i32 0
@x.818 = common global i32 0
@y.819 = common global i32 0
@x.820 = common global i32 0
@y.821 = common global i32 0
@x.822 = common global i32 0
@y.823 = common global i32 0
@x.824 = common global i32 0
@y.825 = common global i32 0
@x.826 = common global i32 0
@y.827 = common global i32 0
@x.828 = common global i32 0
@y.829 = common global i32 0
@x.830 = common global i32 0
@y.831 = common global i32 0
@x.832 = common global i32 0
@y.833 = common global i32 0
@x.834 = common global i32 0
@y.835 = common global i32 0
@x.836 = common global i32 0
@y.837 = common global i32 0
@x.838 = common global i32 0
@y.839 = common global i32 0
@x.840 = common global i32 0
@y.841 = common global i32 0
@x.842 = common global i32 0
@y.843 = common global i32 0
@x.844 = common global i32 0
@y.845 = common global i32 0
@x.846 = common global i32 0
@y.847 = common global i32 0
@x.848 = common global i32 0
@y.849 = common global i32 0
@x.850 = common global i32 0
@y.851 = common global i32 0
@x.852 = common global i32 0
@y.853 = common global i32 0
@x.854 = common global i32 0
@y.855 = common global i32 0
@x.856 = common global i32 0
@y.857 = common global i32 0
@x.858 = common global i32 0
@y.859 = common global i32 0
@x.860 = common global i32 0
@y.861 = common global i32 0
@x.862 = common global i32 0
@y.863 = common global i32 0
@x.864 = common global i32 0
@y.865 = common global i32 0
@x.866 = common global i32 0
@y.867 = common global i32 0
@x.868 = common global i32 0
@y.869 = common global i32 0
@x.870 = common global i32 0
@y.871 = common global i32 0
@x.872 = common global i32 0
@y.873 = common global i32 0
@x.874 = common global i32 0
@y.875 = common global i32 0
@x.876 = common global i32 0
@y.877 = common global i32 0
@x.878 = common global i32 0
@y.879 = common global i32 0
@x.880 = common global i32 0
@y.881 = common global i32 0
@x.882 = common global i32 0
@y.883 = common global i32 0
@x.884 = common global i32 0
@y.885 = common global i32 0
@x.886 = common global i32 0
@y.887 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::vector", align 8
  %9 = alloca %"class.std::vector.0", align 8
  %10 = alloca %"class.std::allocator", align 1
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"class.std::vector.5", align 8
  %14 = alloca %"class.std::allocator.7", align 1
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca %struct.Dinic, align 8
  %29 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %30 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* @_ZSt3cin, i32* dereferenceable(4) %2)
  %31 = call dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"* %30, i32* dereferenceable(4) %3)
  %32 = load i32, i32* %2, align 4
  %33 = load i32, i32* %3, align 4
  %34 = sub i32 0, %32
  %35 = sub i32 0, %33
  %36 = add i32 %34, %35
  %37 = sub i32 0, %36
  %38 = add nsw i32 %32, %33
  %39 = sub i32 0, %37
  %40 = sub i32 0, 2
  %41 = add i32 %39, %40
  %42 = sub i32 0, %41
  %43 = add nsw i32 %37, 2
  %44 = sext i32 %42 to i64
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EEC2Ev(%"class.std::vector.0"* %9) #3
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2Ev(%"class.std::allocator"* %10) #3
  invoke void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"* %8, i64 %44, %"class.std::vector.0"* dereferenceable(24) %9, %"class.std::allocator"* dereferenceable(1) %10)
          to label %45 unwind label %147

; <label>:45:                                     ; preds = %0
  %46 = load i32, i32* @x.2
  %47 = load i32, i32* @y.3
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %792

; <label>:59:                                     ; preds = %45, %792
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev(%"class.std::allocator"* %10) #3
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"* %9) #3
  %60 = load i32, i32* %2, align 4
  %61 = sext i32 %60 to i64
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator.7"* %14) #3
  %62 = load i32, i32* @x.2
  %63 = load i32, i32* @y.3
  %64 = sub i32 %62, -182109825
  %65 = sub i32 %64, 1
  %66 = add i32 %65, -182109825
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  br i1 %86, label %88, label %792

; <label>:88:                                     ; preds = %59
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_(%"class.std::vector.5"* %13, i64 %61, %"class.std::allocator.7"* dereferenceable(1) %14)
          to label %89 unwind label %151

; <label>:89:                                     ; preds = %88
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.7"* %14) #3
  store i32 0, i32* %15, align 4
  br label %90

; <label>:90:                                     ; preds = %141, %89
  %91 = load i32, i32* %15, align 4
  %92 = load i32, i32* %2, align 4
  %93 = icmp slt i32 %91, %92
  br i1 %93, label %94, label %159

; <label>:94:                                     ; preds = %90
  %95 = load i32, i32* %15, align 4
  %96 = sext i32 %95 to i64
  %97 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %96) #3
  %98 = invoke dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280) @_ZSt3cin, %"class.std::__cxx11::basic_string"* dereferenceable(32) %97)
          to label %99 unwind label %155

; <label>:99:                                     ; preds = %94
  %100 = load i32, i32* @x.2
  %101 = load i32, i32* @y.3
  %102 = add i32 %100, 1758758339
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 1758758339
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = and i1 %108, %109
  %111 = xor i1 %108, %109
  %112 = or i1 %110, %111
  %113 = or i1 %108, %109
  br i1 %112, label %114, label %795

; <label>:114:                                    ; preds = %99, %795
  %115 = load i32, i32* @x.2
  %116 = load i32, i32* @y.3
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %795

; <label>:140:                                    ; preds = %114
  br label %141

; <label>:141:                                    ; preds = %140
  %142 = load i32, i32* %15, align 4
  %143 = add i32 %142, 456546859
  %144 = add i32 %143, 1
  %145 = sub i32 %144, 456546859
  %146 = add nsw i32 %142, 1
  store i32 %145, i32* %15, align 4
  br label %90

; <label>:147:                                    ; preds = %0
  %148 = landingpad { i8*, i32 }
          cleanup
  %149 = extractvalue { i8*, i32 } %148, 0
  store i8* %149, i8** %11, align 8
  %150 = extractvalue { i8*, i32 } %148, 1
  store i32 %150, i32* %12, align 4
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev(%"class.std::allocator"* %10) #3
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"* %9) #3
  br label %787

; <label>:151:                                    ; preds = %88
  %152 = landingpad { i8*, i32 }
          cleanup
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %11, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %12, align 4
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.7"* %14) #3
  br label %786

; <label>:155:                                    ; preds = %666, %649, %633, %632, %569, %464, %454, %448, %312, %198, %94
  %156 = landingpad { i8*, i32 }
          cleanup
  %157 = extractvalue { i8*, i32 } %156, 0
  store i8* %157, i8** %11, align 8
  %158 = extractvalue { i8*, i32 } %156, 1
  store i32 %158, i32* %12, align 4
  br label %785

; <label>:159:                                    ; preds = %90
  store i32 0, i32* %16, align 4
  br label %160

; <label>:160:                                    ; preds = %562, %159
  %161 = load i32, i32* %16, align 4
  %162 = load i32, i32* %2, align 4
  %163 = icmp slt i32 %161, %162
  br i1 %163, label %164, label %569

; <label>:164:                                    ; preds = %160
  %165 = load i32, i32* @x.2
  %166 = load i32, i32* @y.3
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = and i1 %172, %173
  %175 = xor i1 %172, %173
  %176 = or i1 %174, %175
  %177 = or i1 %172, %173
  br i1 %176, label %178, label %796

; <label>:178:                                    ; preds = %164, %796
  store i32 0, i32* %17, align 4
  %179 = load i32, i32* @x.2
  %180 = load i32, i32* @y.3
  %181 = sub i32 %179, -1837387588
  %182 = sub i32 %181, 1
  %183 = add i32 %182, -1837387588
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  br i1 %191, label %193, label %796

; <label>:193:                                    ; preds = %178
  br label %194

; <label>:194:                                    ; preds = %515, %193
  %195 = load i32, i32* %17, align 4
  %196 = load i32, i32* %3, align 4
  %197 = icmp slt i32 %195, %196
  br i1 %197, label %198, label %520

; <label>:198:                                    ; preds = %194
  %199 = load i32, i32* %16, align 4
  %200 = sext i32 %199 to i64
  %201 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %200) #3
  %202 = load i32, i32* %17, align 4
  %203 = sext i32 %202 to i64
  %204 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %201, i64 %203)
          to label %205 unwind label %155

; <label>:205:                                    ; preds = %198
  %206 = load i32, i32* @x.2
  %207 = load i32, i32* @y.3
  %208 = sub i32 0, 1
  %209 = add i32 %206, %208
  %210 = sub i32 %206, 1
  %211 = mul i32 %206, %209
  %212 = urem i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = icmp slt i32 %207, 10
  %215 = xor i1 %213, true
  %216 = xor i1 %214, true
  %217 = xor i1 false, true
  %218 = and i1 %215, false
  %219 = and i1 %213, %217
  %220 = and i1 %216, false
  %221 = and i1 %214, %217
  %222 = or i1 %218, %219
  %223 = or i1 %220, %221
  %224 = xor i1 %222, %223
  %225 = or i1 %215, %216
  %226 = xor i1 %225, true
  %227 = or i1 false, %217
  %228 = and i1 %226, %227
  %229 = or i1 %224, %228
  %230 = or i1 %213, %214
  br i1 %229, label %231, label %797

; <label>:231:                                    ; preds = %205, %797
  %232 = load i8, i8* %204, align 1
  %233 = sext i8 %232 to i32
  %234 = icmp eq i32 %233, 83
  %235 = load i32, i32* @x.2
  %236 = load i32, i32* @y.3
  %237 = sub i32 %235, -153258390
  %238 = sub i32 %237, 1
  %239 = add i32 %238, -153258390
  %240 = sub i32 %235, 1
  %241 = mul i32 %235, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %236, 10
  %245 = xor i1 %243, true
  %246 = xor i1 %244, true
  %247 = xor i1 true, true
  %248 = and i1 %245, true
  %249 = and i1 %243, %247
  %250 = and i1 %246, true
  %251 = and i1 %244, %247
  %252 = or i1 %248, %249
  %253 = or i1 %250, %251
  %254 = xor i1 %252, %253
  %255 = or i1 %245, %246
  %256 = xor i1 %255, true
  %257 = or i1 true, %247
  %258 = and i1 %256, %257
  %259 = or i1 %254, %258
  %260 = or i1 %243, %244
  br i1 %259, label %261, label %797

; <label>:261:                                    ; preds = %231
  br i1 %234, label %262, label %265

; <label>:262:                                    ; preds = %261
  %263 = load i32, i32* %16, align 4
  store i32 %263, i32* %4, align 4
  %264 = load i32, i32* %17, align 4
  store i32 %264, i32* %5, align 4
  br label %265

; <label>:265:                                    ; preds = %262, %261
  %266 = load i32, i32* @x.2
  %267 = load i32, i32* @y.3
  %268 = sub i32 %266, -1318017187
  %269 = sub i32 %268, 1
  %270 = add i32 %269, -1318017187
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = xor i1 %274, true
  %277 = xor i1 %275, true
  %278 = xor i1 false, true
  %279 = and i1 %276, false
  %280 = and i1 %274, %278
  %281 = and i1 %277, false
  %282 = and i1 %275, %278
  %283 = or i1 %279, %280
  %284 = or i1 %281, %282
  %285 = xor i1 %283, %284
  %286 = or i1 %276, %277
  %287 = xor i1 %286, true
  %288 = or i1 false, %278
  %289 = and i1 %287, %288
  %290 = or i1 %285, %289
  %291 = or i1 %274, %275
  br i1 %290, label %292, label %801

; <label>:292:                                    ; preds = %265, %801
  %293 = load i32, i32* %16, align 4
  %294 = sext i32 %293 to i64
  %295 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %294) #3
  %296 = load i32, i32* %17, align 4
  %297 = sext i32 %296 to i64
  %298 = load i32, i32* @x.2
  %299 = load i32, i32* @y.3
  %300 = add i32 %298, -502696495
  %301 = sub i32 %300, 1
  %302 = sub i32 %301, -502696495
  %303 = sub i32 %298, 1
  %304 = mul i32 %298, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %299, 10
  %308 = and i1 %306, %307
  %309 = xor i1 %306, %307
  %310 = or i1 %308, %309
  %311 = or i1 %306, %307
  br i1 %310, label %312, label %801

; <label>:312:                                    ; preds = %292
  %313 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %295, i64 %297)
          to label %314 unwind label %155

; <label>:314:                                    ; preds = %312
  %315 = load i32, i32* @x.2
  %316 = load i32, i32* @y.3
  %317 = sub i32 %315, 924721553
  %318 = sub i32 %317, 1
  %319 = add i32 %318, 924721553
  %320 = sub i32 %315, 1
  %321 = mul i32 %315, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %316, 10
  %325 = xor i1 %323, true
  %326 = xor i1 %324, true
  %327 = xor i1 false, true
  %328 = and i1 %325, false
  %329 = and i1 %323, %327
  %330 = and i1 %326, false
  %331 = and i1 %324, %327
  %332 = or i1 %328, %329
  %333 = or i1 %330, %331
  %334 = xor i1 %332, %333
  %335 = or i1 %325, %326
  %336 = xor i1 %335, true
  %337 = or i1 false, %327
  %338 = and i1 %336, %337
  %339 = or i1 %334, %338
  %340 = or i1 %323, %324
  br i1 %339, label %341, label %807

; <label>:341:                                    ; preds = %314, %807
  %342 = load i8, i8* %313, align 1
  %343 = sext i8 %342 to i32
  %344 = icmp eq i32 %343, 84
  %345 = load i32, i32* @x.2
  %346 = load i32, i32* @y.3
  %347 = sub i32 0, 1
  %348 = add i32 %345, %347
  %349 = sub i32 %345, 1
  %350 = mul i32 %345, %348
  %351 = urem i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = icmp slt i32 %346, 10
  %354 = and i1 %352, %353
  %355 = xor i1 %352, %353
  %356 = or i1 %354, %355
  %357 = or i1 %352, %353
  br i1 %356, label %358, label %807

; <label>:358:                                    ; preds = %341
  br i1 %344, label %359, label %391

; <label>:359:                                    ; preds = %358
  %360 = load i32, i32* @x.2
  %361 = load i32, i32* @y.3
  %362 = sub i32 0, 1
  %363 = add i32 %360, %362
  %364 = sub i32 %360, 1
  %365 = mul i32 %360, %363
  %366 = urem i32 %365, 2
  %367 = icmp eq i32 %366, 0
  %368 = icmp slt i32 %361, 10
  %369 = and i1 %367, %368
  %370 = xor i1 %367, %368
  %371 = or i1 %369, %370
  %372 = or i1 %367, %368
  br i1 %371, label %373, label %811

; <label>:373:                                    ; preds = %359, %811
  %374 = load i32, i32* %16, align 4
  store i32 %374, i32* %6, align 4
  %375 = load i32, i32* %17, align 4
  store i32 %375, i32* %7, align 4
  %376 = load i32, i32* @x.2
  %377 = load i32, i32* @y.3
  %378 = add i32 %376, 855223704
  %379 = sub i32 %378, 1
  %380 = sub i32 %379, 855223704
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  br i1 %388, label %390, label %811

; <label>:390:                                    ; preds = %373
  br label %391

; <label>:391:                                    ; preds = %390, %358
  %392 = load i32, i32* @x.2
  %393 = load i32, i32* @y.3
  %394 = sub i32 0, 1
  %395 = add i32 %392, %394
  %396 = sub i32 %392, 1
  %397 = mul i32 %392, %395
  %398 = urem i32 %397, 2
  %399 = icmp eq i32 %398, 0
  %400 = icmp slt i32 %393, 10
  %401 = xor i1 %399, true
  %402 = xor i1 %400, true
  %403 = xor i1 false, true
  %404 = and i1 %401, false
  %405 = and i1 %399, %403
  %406 = and i1 %402, false
  %407 = and i1 %400, %403
  %408 = or i1 %404, %405
  %409 = or i1 %406, %407
  %410 = xor i1 %408, %409
  %411 = or i1 %401, %402
  %412 = xor i1 %411, true
  %413 = or i1 false, %403
  %414 = and i1 %412, %413
  %415 = or i1 %410, %414
  %416 = or i1 %399, %400
  br i1 %415, label %417, label %814

; <label>:417:                                    ; preds = %391, %814
  %418 = load i32, i32* %16, align 4
  %419 = sext i32 %418 to i64
  %420 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %419) #3
  %421 = load i32, i32* %17, align 4
  %422 = sext i32 %421 to i64
  %423 = load i32, i32* @x.2
  %424 = load i32, i32* @y.3
  %425 = sub i32 0, 1
  %426 = add i32 %423, %425
  %427 = sub i32 %423, 1
  %428 = mul i32 %423, %426
  %429 = urem i32 %428, 2
  %430 = icmp eq i32 %429, 0
  %431 = icmp slt i32 %424, 10
  %432 = xor i1 %430, true
  %433 = xor i1 %431, true
  %434 = xor i1 false, true
  %435 = and i1 %432, false
  %436 = and i1 %430, %434
  %437 = and i1 %433, false
  %438 = and i1 %431, %434
  %439 = or i1 %435, %436
  %440 = or i1 %437, %438
  %441 = xor i1 %439, %440
  %442 = or i1 %432, %433
  %443 = xor i1 %442, true
  %444 = or i1 false, %434
  %445 = and i1 %443, %444
  %446 = or i1 %441, %445
  %447 = or i1 %430, %431
  br i1 %446, label %448, label %814

; <label>:448:                                    ; preds = %417
  %449 = invoke dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"* %420, i64 %422)
          to label %450 unwind label %155

; <label>:450:                                    ; preds = %448
  %451 = load i8, i8* %449, align 1
  %452 = sext i8 %451 to i32
  %453 = icmp eq i32 %452, 111
  br i1 %453, label %454, label %474

; <label>:454:                                    ; preds = %450
  %455 = load i32, i32* %16, align 4
  %456 = sext i32 %455 to i64
  %457 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %456) #3
  %458 = load i32, i32* %2, align 4
  %459 = load i32, i32* %17, align 4
  %460 = sub i32 %458, 1445530432
  %461 = add i32 %460, %459
  %462 = add i32 %461, 1445530432
  %463 = add nsw i32 %458, %459
  store i32 %462, i32* %18, align 4
  store i32 1, i32* %19, align 4
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_(%"class.std::vector.0"* %457, i32* dereferenceable(4) %18, i32* dereferenceable(4) %19)
          to label %464 unwind label %155

; <label>:464:                                    ; preds = %454
  %465 = load i32, i32* %2, align 4
  %466 = load i32, i32* %17, align 4
  %467 = sub i32 %465, -1112802027
  %468 = add i32 %467, %466
  %469 = add i32 %468, -1112802027
  %470 = add nsw i32 %465, %466
  %471 = sext i32 %469 to i64
  %472 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %471) #3
  store i32 1, i32* %20, align 4
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJRiiEEEvDpOT_(%"class.std::vector.0"* %472, i32* dereferenceable(4) %16, i32* dereferenceable(4) %20)
          to label %473 unwind label %155

; <label>:473:                                    ; preds = %464
  br label %474

; <label>:474:                                    ; preds = %473, %450
  %475 = load i32, i32* @x.2
  %476 = load i32, i32* @y.3
  %477 = sub i32 0, 1
  %478 = add i32 %475, %477
  %479 = sub i32 %475, 1
  %480 = mul i32 %475, %478
  %481 = urem i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = icmp slt i32 %476, 10
  %484 = and i1 %482, %483
  %485 = xor i1 %482, %483
  %486 = or i1 %484, %485
  %487 = or i1 %482, %483
  br i1 %486, label %488, label %820

; <label>:488:                                    ; preds = %474, %820
  %489 = load i32, i32* @x.2
  %490 = load i32, i32* @y.3
  %491 = sub i32 0, 1
  %492 = add i32 %489, %491
  %493 = sub i32 %489, 1
  %494 = mul i32 %489, %492
  %495 = urem i32 %494, 2
  %496 = icmp eq i32 %495, 0
  %497 = icmp slt i32 %490, 10
  %498 = xor i1 %496, true
  %499 = xor i1 %497, true
  %500 = xor i1 false, true
  %501 = and i1 %498, false
  %502 = and i1 %496, %500
  %503 = and i1 %499, false
  %504 = and i1 %497, %500
  %505 = or i1 %501, %502
  %506 = or i1 %503, %504
  %507 = xor i1 %505, %506
  %508 = or i1 %498, %499
  %509 = xor i1 %508, true
  %510 = or i1 false, %500
  %511 = and i1 %509, %510
  %512 = or i1 %507, %511
  %513 = or i1 %496, %497
  br i1 %512, label %514, label %820

; <label>:514:                                    ; preds = %488
  br label %515

; <label>:515:                                    ; preds = %514
  %516 = load i32, i32* %17, align 4
  %517 = sub i32 0, 1
  %518 = sub i32 %516, %517
  %519 = add nsw i32 %516, 1
  store i32 %518, i32* %17, align 4
  br label %194

; <label>:520:                                    ; preds = %194
  %521 = load i32, i32* @x.2
  %522 = load i32, i32* @y.3
  %523 = add i32 %521, 1913184511
  %524 = sub i32 %523, 1
  %525 = sub i32 %524, 1913184511
  %526 = sub i32 %521, 1
  %527 = mul i32 %521, %525
  %528 = urem i32 %527, 2
  %529 = icmp eq i32 %528, 0
  %530 = icmp slt i32 %522, 10
  %531 = and i1 %529, %530
  %532 = xor i1 %529, %530
  %533 = or i1 %531, %532
  %534 = or i1 %529, %530
  br i1 %533, label %535, label %821

; <label>:535:                                    ; preds = %520, %821
  %536 = load i32, i32* @x.2
  %537 = load i32, i32* @y.3
  %538 = sub i32 0, 1
  %539 = add i32 %536, %538
  %540 = sub i32 %536, 1
  %541 = mul i32 %536, %539
  %542 = urem i32 %541, 2
  %543 = icmp eq i32 %542, 0
  %544 = icmp slt i32 %537, 10
  %545 = xor i1 %543, true
  %546 = xor i1 %544, true
  %547 = xor i1 false, true
  %548 = and i1 %545, false
  %549 = and i1 %543, %547
  %550 = and i1 %546, false
  %551 = and i1 %544, %547
  %552 = or i1 %548, %549
  %553 = or i1 %550, %551
  %554 = xor i1 %552, %553
  %555 = or i1 %545, %546
  %556 = xor i1 %555, true
  %557 = or i1 false, %547
  %558 = and i1 %556, %557
  %559 = or i1 %554, %558
  %560 = or i1 %543, %544
  br i1 %559, label %561, label %821

; <label>:561:                                    ; preds = %535
  br label %562

; <label>:562:                                    ; preds = %561
  %563 = load i32, i32* %16, align 4
  %564 = sub i32 0, %563
  %565 = sub i32 0, 1
  %566 = add i32 %564, %565
  %567 = sub i32 0, %566
  %568 = add nsw i32 %563, 1
  store i32 %567, i32* %16, align 4
  br label %160

; <label>:569:                                    ; preds = %160
  %570 = load i32, i32* %2, align 4
  %571 = load i32, i32* %3, align 4
  %572 = sub i32 0, %571
  %573 = sub i32 %570, %572
  %574 = add nsw i32 %570, %571
  %575 = sext i32 %573 to i64
  %576 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %575) #3
  store i32 300, i32* %21, align 4
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJRiiEEEvDpOT_(%"class.std::vector.0"* %576, i32* dereferenceable(4) %4, i32* dereferenceable(4) %21)
          to label %577 unwind label %155

; <label>:577:                                    ; preds = %569
  %578 = load i32, i32* @x.2
  %579 = load i32, i32* @y.3
  %580 = add i32 %578, -399626336
  %581 = sub i32 %580, 1
  %582 = sub i32 %581, -399626336
  %583 = sub i32 %578, 1
  %584 = mul i32 %578, %582
  %585 = urem i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = icmp slt i32 %579, 10
  %588 = and i1 %586, %587
  %589 = xor i1 %586, %587
  %590 = or i1 %588, %589
  %591 = or i1 %586, %587
  br i1 %590, label %592, label %822

; <label>:592:                                    ; preds = %577, %822
  %593 = load i32, i32* %2, align 4
  %594 = load i32, i32* %3, align 4
  %595 = sub i32 0, %594
  %596 = sub i32 %593, %595
  %597 = add nsw i32 %593, %594
  %598 = sext i32 %596 to i64
  %599 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %598) #3
  %600 = load i32, i32* %2, align 4
  %601 = load i32, i32* %5, align 4
  %602 = sub i32 %600, 1948132563
  %603 = add i32 %602, %601
  %604 = add i32 %603, 1948132563
  %605 = add nsw i32 %600, %601
  store i32 %604, i32* %22, align 4
  store i32 300, i32* %23, align 4
  %606 = load i32, i32* @x.2
  %607 = load i32, i32* @y.3
  %608 = sub i32 %606, 559712234
  %609 = sub i32 %608, 1
  %610 = add i32 %609, 559712234
  %611 = sub i32 %606, 1
  %612 = mul i32 %606, %610
  %613 = urem i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = icmp slt i32 %607, 10
  %616 = xor i1 %614, true
  %617 = xor i1 %615, true
  %618 = xor i1 false, true
  %619 = and i1 %616, false
  %620 = and i1 %614, %618
  %621 = and i1 %617, false
  %622 = and i1 %615, %618
  %623 = or i1 %619, %620
  %624 = or i1 %621, %622
  %625 = xor i1 %623, %624
  %626 = or i1 %616, %617
  %627 = xor i1 %626, true
  %628 = or i1 false, %618
  %629 = and i1 %627, %628
  %630 = or i1 %625, %629
  %631 = or i1 %614, %615
  br i1 %630, label %632, label %822

; <label>:632:                                    ; preds = %592
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_(%"class.std::vector.0"* %599, i32* dereferenceable(4) %22, i32* dereferenceable(4) %23)
          to label %633 unwind label %155

; <label>:633:                                    ; preds = %632
  %634 = load i32, i32* %6, align 4
  %635 = sext i32 %634 to i64
  %636 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %635) #3
  %637 = load i32, i32* %2, align 4
  %638 = load i32, i32* %3, align 4
  %639 = sub i32 0, %637
  %640 = sub i32 0, %638
  %641 = add i32 %639, %640
  %642 = sub i32 0, %641
  %643 = add nsw i32 %637, %638
  %644 = sub i32 0, %642
  %645 = sub i32 0, 1
  %646 = add i32 %644, %645
  %647 = sub i32 0, %646
  %648 = add nsw i32 %642, 1
  store i32 %647, i32* %24, align 4
  store i32 300, i32* %25, align 4
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_(%"class.std::vector.0"* %636, i32* dereferenceable(4) %24, i32* dereferenceable(4) %25)
          to label %649 unwind label %155

; <label>:649:                                    ; preds = %633
  %650 = load i32, i32* %2, align 4
  %651 = load i32, i32* %7, align 4
  %652 = sub i32 0, %651
  %653 = sub i32 %650, %652
  %654 = add nsw i32 %650, %651
  %655 = sext i32 %653 to i64
  %656 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %655) #3
  %657 = load i32, i32* %2, align 4
  %658 = load i32, i32* %3, align 4
  %659 = sub i32 0, %658
  %660 = sub i32 %657, %659
  %661 = add nsw i32 %657, %658
  %662 = add i32 %660, 366167727
  %663 = add i32 %662, 1
  %664 = sub i32 %663, 366167727
  %665 = add nsw i32 %660, 1
  store i32 %664, i32* %26, align 4
  store i32 300, i32* %27, align 4
  invoke void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_(%"class.std::vector.0"* %656, i32* dereferenceable(4) %26, i32* dereferenceable(4) %27)
          to label %666 unwind label %155

; <label>:666:                                    ; preds = %649
  invoke void @_ZN5DinicIiEC2ERSt6vectorIS1_ISt4pairIiiESaIS3_EESaIS5_EEi(%struct.Dinic* %28, %"class.std::vector"* dereferenceable(24) %8, i32 1000000001)
          to label %667 unwind label %155

; <label>:667:                                    ; preds = %666
  %668 = load i32, i32* %2, align 4
  %669 = load i32, i32* %3, align 4
  %670 = add i32 %668, -1326972346
  %671 = add i32 %670, %669
  %672 = sub i32 %671, -1326972346
  %673 = add nsw i32 %668, %669
  %674 = load i32, i32* %2, align 4
  %675 = load i32, i32* %3, align 4
  %676 = sub i32 0, %675
  %677 = sub i32 %674, %676
  %678 = add nsw i32 %674, %675
  %679 = sub i32 0, %677
  %680 = sub i32 0, 1
  %681 = add i32 %679, %680
  %682 = sub i32 0, %681
  %683 = add nsw i32 %677, 1
  %684 = invoke i32 @_ZN5DinicIiE12maximum_flowEii(%struct.Dinic* %28, i32 %672, i32 %682)
          to label %685 unwind label %693

; <label>:685:                                    ; preds = %667
  store i32 %684, i32* %29, align 4
  %686 = load i32, i32* %29, align 4
  %687 = icmp sge i32 %686, 300
  br i1 %687, label %688, label %697

; <label>:688:                                    ; preds = %685
  %689 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 -1)
          to label %690 unwind label %693

; <label>:690:                                    ; preds = %688
  %691 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %689, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %692 unwind label %693

; <label>:692:                                    ; preds = %690
  br label %731

; <label>:693:                                    ; preds = %700, %697, %690, %688, %667
  %694 = landingpad { i8*, i32 }
          cleanup
  %695 = extractvalue { i8*, i32 } %694, 0
  store i8* %695, i8** %11, align 8
  %696 = extractvalue { i8*, i32 } %694, 1
  store i32 %696, i32* %12, align 4
  call void @_ZN5DinicIiED2Ev(%struct.Dinic* %28) #3
  br label %785

; <label>:697:                                    ; preds = %685
  %698 = load i32, i32* %29, align 4
  %699 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"* @_ZSt4cout, i32 %698)
          to label %700 unwind label %693

; <label>:700:                                    ; preds = %697
  %701 = invoke dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"* %699, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_)
          to label %702 unwind label %693

; <label>:702:                                    ; preds = %700
  %703 = load i32, i32* @x.2
  %704 = load i32, i32* @y.3
  %705 = sub i32 0, 1
  %706 = add i32 %703, %705
  %707 = sub i32 %703, 1
  %708 = mul i32 %703, %706
  %709 = urem i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = icmp slt i32 %704, 10
  %712 = and i1 %710, %711
  %713 = xor i1 %710, %711
  %714 = or i1 %712, %713
  %715 = or i1 %710, %711
  br i1 %714, label %716, label %878

; <label>:716:                                    ; preds = %702, %878
  %717 = load i32, i32* @x.2
  %718 = load i32, i32* @y.3
  %719 = sub i32 0, 1
  %720 = add i32 %717, %719
  %721 = sub i32 %717, 1
  %722 = mul i32 %717, %720
  %723 = urem i32 %722, 2
  %724 = icmp eq i32 %723, 0
  %725 = icmp slt i32 %718, 10
  %726 = and i1 %724, %725
  %727 = xor i1 %724, %725
  %728 = or i1 %726, %727
  %729 = or i1 %724, %725
  br i1 %728, label %730, label %878

; <label>:730:                                    ; preds = %716
  br label %731

; <label>:731:                                    ; preds = %730, %692
  %732 = load i32, i32* @x.2
  %733 = load i32, i32* @y.3
  %734 = sub i32 0, 1
  %735 = add i32 %732, %734
  %736 = sub i32 %732, 1
  %737 = mul i32 %732, %735
  %738 = urem i32 %737, 2
  %739 = icmp eq i32 %738, 0
  %740 = icmp slt i32 %733, 10
  %741 = xor i1 %739, true
  %742 = xor i1 %740, true
  %743 = xor i1 true, true
  %744 = and i1 %741, true
  %745 = and i1 %739, %743
  %746 = and i1 %742, true
  %747 = and i1 %740, %743
  %748 = or i1 %744, %745
  %749 = or i1 %746, %747
  %750 = xor i1 %748, %749
  %751 = or i1 %741, %742
  %752 = xor i1 %751, true
  %753 = or i1 true, %743
  %754 = and i1 %752, %753
  %755 = or i1 %750, %754
  %756 = or i1 %739, %740
  br i1 %755, label %757, label %879

; <label>:757:                                    ; preds = %731, %879
  store i32 0, i32* %1, align 4
  call void @_ZN5DinicIiED2Ev(%struct.Dinic* %28) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.5"* %13) #3
  call void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %8) #3
  %758 = load i32, i32* %1, align 4
  %759 = load i32, i32* @x.2
  %760 = load i32, i32* @y.3
  %761 = sub i32 0, 1
  %762 = add i32 %759, %761
  %763 = sub i32 %759, 1
  %764 = mul i32 %759, %762
  %765 = urem i32 %764, 2
  %766 = icmp eq i32 %765, 0
  %767 = icmp slt i32 %760, 10
  %768 = xor i1 %766, true
  %769 = xor i1 %767, true
  %770 = xor i1 false, true
  %771 = and i1 %768, false
  %772 = and i1 %766, %770
  %773 = and i1 %769, false
  %774 = and i1 %767, %770
  %775 = or i1 %771, %772
  %776 = or i1 %773, %774
  %777 = xor i1 %775, %776
  %778 = or i1 %768, %769
  %779 = xor i1 %778, true
  %780 = or i1 false, %770
  %781 = and i1 %779, %780
  %782 = or i1 %777, %781
  %783 = or i1 %766, %767
  br i1 %782, label %784, label %879

; <label>:784:                                    ; preds = %757
  ret i32 %758

; <label>:785:                                    ; preds = %693, %155
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.5"* %13) #3
  br label %786

; <label>:786:                                    ; preds = %785, %151
  call void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %8) #3
  br label %787

; <label>:787:                                    ; preds = %786, %147
  %788 = load i8*, i8** %11, align 8
  %789 = load i32, i32* %12, align 4
  %790 = insertvalue { i8*, i32 } undef, i8* %788, 0
  %791 = insertvalue { i8*, i32 } %790, i32 %789, 1
  resume { i8*, i32 } %791

; <label>:792:                                    ; preds = %59, %45
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev(%"class.std::allocator"* %10) #3
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"* %9) #3
  %793 = load i32, i32* %2, align 4
  %794 = sext i32 %793 to i64
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator.7"* %14) #3
  br label %59

; <label>:795:                                    ; preds = %114, %99
  br label %114

; <label>:796:                                    ; preds = %178, %164
  store i32 0, i32* %17, align 4
  br label %178

; <label>:797:                                    ; preds = %231, %205
  %798 = load i8, i8* %204, align 1
  %799 = sext i8 %798 to i32
  %800 = icmp eq i32 %799, 83
  br label %231

; <label>:801:                                    ; preds = %292, %265
  %802 = load i32, i32* %16, align 4
  %803 = sext i32 %802 to i64
  %804 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %803) #3
  %805 = load i32, i32* %17, align 4
  %806 = sext i32 %805 to i64
  br label %292

; <label>:807:                                    ; preds = %341, %314
  %808 = load i8, i8* %313, align 1
  %809 = sext i8 %808 to i32
  %810 = icmp eq i32 %809, 84
  br label %341

; <label>:811:                                    ; preds = %373, %359
  %812 = load i32, i32* %16, align 4
  store i32 %812, i32* %6, align 4
  %813 = load i32, i32* %17, align 4
  store i32 %813, i32* %7, align 4
  br label %373

; <label>:814:                                    ; preds = %417, %391
  %815 = load i32, i32* %16, align 4
  %816 = sext i32 %815 to i64
  %817 = call dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"* %13, i64 %816) #3
  %818 = load i32, i32* %17, align 4
  %819 = sext i32 %818 to i64
  br label %417

; <label>:820:                                    ; preds = %488, %474
  br label %488

; <label>:821:                                    ; preds = %535, %520
  br label %535

; <label>:822:                                    ; preds = %592, %577
  %823 = load i32, i32* %2, align 4
  %824 = load i32, i32* %3, align 4
  %825 = add i32 %823, 946730496
  %826 = sub i32 %825, %824
  %827 = sub i32 %826, 946730496
  %828 = sub i32 %823, %824
  %829 = mul i32 %827, %824
  %830 = sub i32 0, -1123345925
  %831 = sub i32 %830, %823
  %832 = add i32 %831, -1123345925
  %833 = sub i32 0, %823
  %834 = sub i32 0, %824
  %835 = sub i32 %832, %834
  %836 = add i32 %832, %824
  %837 = sub i32 0, %824
  %838 = sub i32 %823, %837
  %839 = add nsw i32 %823, %824
  %840 = sext i32 %838 to i64
  %841 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %8, i64 %840) #3
  %842 = load i32, i32* %2, align 4
  %843 = load i32, i32* %5, align 4
  %844 = sub i32 0, %842
  %845 = add i32 0, %844
  %846 = sub i32 0, %842
  %847 = sub i32 0, %843
  %848 = sub i32 %845, %847
  %849 = add i32 %845, %843
  %850 = sub i32 0, -934465039
  %851 = sub i32 %850, %842
  %852 = add i32 %851, -934465039
  %853 = sub i32 0, %842
  %854 = sub i32 0, %852
  %855 = sub i32 0, %843
  %856 = add i32 %854, %855
  %857 = sub i32 0, %856
  %858 = add i32 %852, %843
  %859 = shl i32 %842, %843
  %860 = sub i32 %842, -539045657
  %861 = sub i32 %860, %843
  %862 = add i32 %861, -539045657
  %863 = sub i32 %842, %843
  %864 = mul i32 %862, %843
  %865 = add i32 0, -275763416
  %866 = sub i32 %865, %842
  %867 = sub i32 %866, -275763416
  %868 = sub i32 0, %842
  %869 = sub i32 0, %867
  %870 = sub i32 0, %843
  %871 = add i32 %869, %870
  %872 = sub i32 0, %871
  %873 = add i32 %867, %843
  %874 = add i32 %842, 1300524178
  %875 = add i32 %874, %843
  %876 = sub i32 %875, 1300524178
  %877 = add nsw i32 %842, %843
  store i32 %876, i32* %22, align 4
  store i32 300, i32* %23, align 4
  br label %592

; <label>:878:                                    ; preds = %716, %702
  br label %716

; <label>:879:                                    ; preds = %757, %731
  store i32 0, i32* %1, align 4
  call void @_ZN5DinicIiED2Ev(%struct.Dinic* %28) #3
  call void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.5"* %13) #3
  call void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev(%"class.std::vector"* %8) #3
  %880 = load i32, i32* %1, align 4
  br label %757
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZNSirsERi(%"class.std::basic_istream"*, i32* dereferenceable(4)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EEC2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"* %4)
          to label %5 unwind label %6

; <label>:5:                                      ; preds = %1
  ret void

; <label>:6:                                      ; preds = %1
  %7 = landingpad { i8*, i32 }
          catch i8* null
  %8 = extractvalue { i8*, i32 } %7, 0
  call void @__clang_call_terminate(i8* %8) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEC2EmRKS3_RKS4_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %12 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"* %12, i64 %13, %"class.std::allocator"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  invoke void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"* %11, i64 %15, %"class.std::vector.0"* dereferenceable(24) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = load i32, i32* @x.8
  %20 = load i32, i32* @y.9
  %21 = sub i32 %19, 1479733027
  %22 = sub i32 %21, 1
  %23 = add i32 %22, 1479733027
  %24 = sub i32 %19, 1
  %25 = mul i32 %19, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %20, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 true, true
  %32 = and i1 %29, true
  %33 = and i1 %27, %31
  %34 = and i1 %30, true
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 true, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  br i1 %43, label %45, label %100

; <label>:45:                                     ; preds = %18, %100
  %46 = landingpad { i8*, i32 }
          cleanup
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %9, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %10, align 4
  %49 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %49) #3
  %50 = load i32, i32* @x.8
  %51 = load i32, i32* @y.9
  %52 = add i32 %50, -178057864
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -178057864
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %100

; <label>:64:                                     ; preds = %45
  br label %65

; <label>:65:                                     ; preds = %64
  %66 = load i32, i32* @x.8
  %67 = load i32, i32* @y.9
  %68 = sub i32 %66, 789294080
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 789294080
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %105

; <label>:80:                                     ; preds = %65, %105
  %81 = load i8*, i8** %9, align 8
  %82 = load i32, i32* %10, align 4
  %83 = insertvalue { i8*, i32 } undef, i8* %81, 0
  %84 = insertvalue { i8*, i32 } %83, i32 %82, 1
  %85 = load i32, i32* @x.8
  %86 = load i32, i32* @y.9
  %87 = add i32 %85, -1541268245
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -1541268245
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  br i1 %97, label %99, label %105

; <label>:99:                                     ; preds = %80
  resume { i8*, i32 } %84

; <label>:100:                                    ; preds = %45, %18
  %101 = landingpad { i8*, i32 }
          cleanup
  %102 = extractvalue { i8*, i32 } %101, 0
  store i8* %102, i8** %9, align 8
  %103 = extractvalue { i8*, i32 } %101, 1
  store i32 %103, i32* %10, align 4
  %104 = bitcast %"class.std::vector"* %11 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %104) #3
  br label %45

; <label>:105:                                    ; preds = %80, %65
  %106 = load i8*, i8** %9, align 8
  %107 = load i32, i32* %10, align 4
  %108 = insertvalue { i8*, i32 } undef, i8* %106, 0
  %109 = insertvalue { i8*, i32 } %108, i32 %107, 1
  br label %80
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.12
  %3 = load i32, i32* @y.13
  %4 = add i32 %2, -330497098
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -330497098
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %55

; <label>:16:                                     ; preds = %1, %55
  %17 = alloca %"class.std::vector.0"*, align 8
  %18 = alloca i8*
  %19 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %17, align 8
  %20 = load %"class.std::vector.0"*, %"class.std::vector.0"** %17, align 8
  %21 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %22, i32 0, i32 0
  %24 = load %"struct.std::pair"*, %"struct.std::pair"** %23, align 8
  %25 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %26, i32 0, i32 1
  %28 = load %"struct.std::pair"*, %"struct.std::pair"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  %30 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %29) #3
  %31 = load i32, i32* @x.12
  %32 = load i32, i32* @y.13
  %33 = add i32 %31, -756470433
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -756470433
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  br i1 %43, label %45, label %55

; <label>:45:                                     ; preds = %16
  invoke void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %24, %"struct.std::pair"* %28, %"class.std::allocator.2"* dereferenceable(1) %30)
          to label %46 unwind label %48

; <label>:46:                                     ; preds = %45
  %47 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %47) #3
  ret void

; <label>:48:                                     ; preds = %45
  %49 = landingpad { i8*, i32 }
          catch i8* null
  %50 = extractvalue { i8*, i32 } %49, 0
  store i8* %50, i8** %18, align 8
  %51 = extractvalue { i8*, i32 } %49, 1
  store i32 %51, i32* %19, align 4
  %52 = bitcast %"class.std::vector.0"* %20 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %52) #3
  br label %53

; <label>:53:                                     ; preds = %48
  %54 = load i8*, i8** %18, align 8
  call void @__clang_call_terminate(i8* %54) #10
  unreachable

; <label>:55:                                     ; preds = %16, %1
  %56 = alloca %"class.std::vector.0"*, align 8
  %57 = alloca i8*
  %58 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %56, align 8
  %59 = load %"class.std::vector.0"*, %"class.std::vector.0"** %56, align 8
  %60 = bitcast %"class.std::vector.0"* %59 to %"struct.std::_Vector_base.1"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %61, i32 0, i32 0
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %62, align 8
  %64 = bitcast %"class.std::vector.0"* %59 to %"struct.std::_Vector_base.1"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %65, i32 0, i32 1
  %67 = load %"struct.std::pair"*, %"struct.std::pair"** %66, align 8
  %68 = bitcast %"class.std::vector.0"* %59 to %"struct.std::_Vector_base.1"*
  %69 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %68) #3
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.std::allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_(%"class.std::vector.5"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.5"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"class.std::vector.5"*, %"class.std::vector.5"** %4, align 8
  %10 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  %11 = load i64, i64* %5, align 8
  %12 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_(%"struct.std::_Vector_base.6"* %10, i64 %11, %"class.std::allocator.7"* dereferenceable(1) %12)
  %13 = load i64, i64* %5, align 8
  invoke void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm(%"class.std::vector.5"* %9, i64 %13)
          to label %14 unwind label %15

; <label>:14:                                     ; preds = %3
  ret void

; <label>:15:                                     ; preds = %3
  %16 = landingpad { i8*, i32 }
          cleanup
  %17 = extractvalue { i8*, i32 } %16, 0
  store i8* %17, i8** %7, align 8
  %18 = extractvalue { i8*, i32 } %16, 1
  store i32 %18, i32* %8, align 4
  %19 = bitcast %"class.std::vector.5"* %9 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"* %19) #3
  br label %20

; <label>:20:                                     ; preds = %15
  %21 = load i8*, i8** %7, align 8
  %22 = load i32, i32* %8, align 4
  %23 = insertvalue { i8*, i32 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i32 } %23, i32 %22, 1
  resume { i8*, i32 } %24
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.7"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %2, align 8
  %3 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %2, align 8
  %4 = bitcast %"class.std::allocator.7"* %3 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator.8"* %4) #3
  ret void
}

declare dereferenceable(280) %"class.std::basic_istream"* @_ZStrsIcSt11char_traitsIcESaIcEERSt13basic_istreamIT_T0_ES7_RNSt7__cxx1112basic_stringIS4_S5_T1_EE(%"class.std::basic_istream"* dereferenceable(280), %"class.std::__cxx11::basic_string"* dereferenceable(32)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"class.std::__cxx11::basic_string"* @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEixEm(%"class.std::vector.5"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.20
  %7 = load i32, i32* @y.21
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 536384816, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %75
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 536384816, label %19
    i32 -332058253, label %39
    i32 -1640568601, label %63
    i32 -1604999990, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %75

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -332058253, i32 -1604999990
  store i32 %38, i32* %15
  br label %75

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.5"*, align 8
  %41 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %40, align 8
  store i64 %1, i64* %41, align 8
  %42 = load %"class.std::vector.5"*, %"class.std::vector.5"** %40, align 8
  %43 = bitcast %"class.std::vector.5"* %42 to %"struct.std::_Vector_base.6"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %45, align 8
  %47 = load i64, i64* %41, align 8
  %48 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %46, i64 %47
  store %"class.std::__cxx11::basic_string"* %48, %"class.std::__cxx11::basic_string"** %3
  %49 = load i32, i32* @x.20
  %50 = load i32, i32* @y.21
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 -1640568601, i32 -1604999990
  store i32 %62, i32* %15
  br label %75

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  ret %"class.std::__cxx11::basic_string"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector.5"*, align 8
  %67 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %66, align 8
  store i64 %1, i64* %67, align 8
  %68 = load %"class.std::vector.5"*, %"class.std::vector.5"** %66, align 8
  %69 = bitcast %"class.std::vector.5"* %68 to %"struct.std::_Vector_base.6"*
  %70 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %69, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %71, align 8
  %73 = load i64, i64* %67, align 8
  %74 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %72, i64 %73
  store i32 -332058253, i32* %15
  br label %75

; <label>:75:                                     ; preds = %65, %39, %19, %18
  br label %16
}

declare dereferenceable(1) i8* @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm(%"class.std::__cxx11::basic_string"*, i64) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %9, i64 %10
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJiiEEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"struct.std::pair"*
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i32* %1, i32** %8, align 8
  store i32* %2, i32** %9, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %6
  %11 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8
  store %"struct.std::pair"* %15, %"struct.std::pair"** %5
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %17 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  store %"struct.std::pair"* %20, %"struct.std::pair"** %4
  %21 = alloca i32
  store i32 -1714450432, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %101
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 -1714450432, label %25
    i32 -197024235, label %30
    i32 1738845043, label %50
    i32 138648786, label %56
    i32 1278992119, label %72
    i32 1925468663, label %99
    i32 -600388709, label %100
  ]

; <label>:24:                                     ; preds = %22
  br label %101

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %27 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %28 = icmp ne %"struct.std::pair"* %26, %27
  %29 = select i1 %28, i32 -197024235, i32 1738845043
  store i32 %29, i32* %21
  br label %101

; <label>:30:                                     ; preds = %22
  %31 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %33 to %"class.std::allocator.2"*
  %35 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %38, align 8
  %40 = load i32*, i32** %8, align 8
  %41 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %40) #3
  %42 = load i32*, i32** %9, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %42) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %34, %"struct.std::pair"* %39, i32* dereferenceable(4) %41, i32* dereferenceable(4) %43)
  %44 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %45 = bitcast %"class.std::vector.0"* %44 to %"struct.std::_Vector_base.1"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %46, i32 0, i32 1
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i32 1
  store %"struct.std::pair"* %49, %"struct.std::pair"** %47, align 8
  store i32 138648786, i32* %21
  br label %101

; <label>:50:                                     ; preds = %22
  %51 = load i32*, i32** %8, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32*, i32** %9, align 8
  %54 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %53) #3
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJiiEEEvDpOT_(%"class.std::vector.0"* %55, i32* dereferenceable(4) %52, i32* dereferenceable(4) %54)
  store i32 138648786, i32* %21
  br label %101

; <label>:56:                                     ; preds = %22
  %57 = load i32, i32* @x.24
  %58 = load i32, i32* @y.25
  %59 = add i32 %57, -1527301708
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, -1527301708
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 1278992119, i32 -600388709
  store i32 %71, i32* %21
  br label %101

; <label>:72:                                     ; preds = %22
  %73 = load i32, i32* @x.24
  %74 = load i32, i32* @y.25
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 1925468663, i32 -600388709
  store i32 %98, i32* %21
  br label %101

; <label>:99:                                     ; preds = %22
  ret void

; <label>:100:                                    ; preds = %22
  store i32 1278992119, i32* %21
  br label %101

; <label>:101:                                    ; preds = %100, %72, %56, %50, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EE12emplace_backIJRiiEEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"struct.std::pair"*
  %6 = alloca %"class.std::vector.0"*
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca i32*, align 8
  %9 = alloca i32*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %7, align 8
  store i32* %1, i32** %8, align 8
  store i32* %2, i32** %9, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  store %"class.std::vector.0"* %10, %"class.std::vector.0"** %6
  %11 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %12 = bitcast %"class.std::vector.0"* %11 to %"struct.std::_Vector_base.1"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %13, i32 0, i32 1
  %15 = load %"struct.std::pair"*, %"struct.std::pair"** %14, align 8
  store %"struct.std::pair"* %15, %"struct.std::pair"** %5
  %16 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %17 = bitcast %"class.std::vector.0"* %16 to %"struct.std::_Vector_base.1"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %18, i32 0, i32 2
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  store %"struct.std::pair"* %20, %"struct.std::pair"** %4
  %21 = alloca i32
  store i32 2001696982, i32* %21
  br label %22

; <label>:22:                                     ; preds = %3, %57
  %23 = load i32, i32* %21
  switch i32 %23, label %24 [
    i32 2001696982, label %25
    i32 -528717167, label %30
    i32 -2050841593, label %50
    i32 1058610392, label %56
  ]

; <label>:24:                                     ; preds = %22
  br label %57

; <label>:25:                                     ; preds = %22
  %26 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  %27 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %28 = icmp ne %"struct.std::pair"* %26, %27
  %29 = select i1 %28, i32 -528717167, i32 -2050841593
  store i32 %29, i32* %21
  br label %57

; <label>:30:                                     ; preds = %22
  %31 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %32 = bitcast %"class.std::vector.0"* %31 to %"struct.std::_Vector_base.1"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %33 to %"class.std::allocator.2"*
  %35 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %36 = bitcast %"class.std::vector.0"* %35 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load %"struct.std::pair"*, %"struct.std::pair"** %38, align 8
  %40 = load i32*, i32** %8, align 8
  %41 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %40) #3
  %42 = load i32*, i32** %9, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %42) #3
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JRiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %34, %"struct.std::pair"* %39, i32* dereferenceable(4) %41, i32* dereferenceable(4) %43)
  %44 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  %45 = bitcast %"class.std::vector.0"* %44 to %"struct.std::_Vector_base.1"*
  %46 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %46, i32 0, i32 1
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i32 1
  store %"struct.std::pair"* %49, %"struct.std::pair"** %47, align 8
  store i32 1058610392, i32* %21
  br label %57

; <label>:50:                                     ; preds = %22
  %51 = load i32*, i32** %8, align 8
  %52 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %51) #3
  %53 = load i32*, i32** %9, align 8
  %54 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %53) #3
  %55 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %6
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJRiiEEEvDpOT_(%"class.std::vector.0"* %55, i32* dereferenceable(4) %52, i32* dereferenceable(4) %54)
  store i32 1058610392, i32* %21
  br label %57

; <label>:56:                                     ; preds = %22
  ret void

; <label>:57:                                     ; preds = %50, %30, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN5DinicIiEC2ERSt6vectorIS1_ISt4pairIiiESaIS3_EESaIS5_EEi(%struct.Dinic*, %"class.std::vector"* dereferenceable(24), i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.Dinic*, align 8
  %5 = alloca %"class.std::vector"*, align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::vector.18", align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"struct.Dinic<int>::edge", align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"struct.Dinic<int>::edge", align 4
  store %struct.Dinic* %0, %struct.Dinic** %4, align 8
  store %"class.std::vector"* %1, %"class.std::vector"** %5, align 8
  store i32 %2, i32* %6, align 4
  %16 = load %struct.Dinic*, %struct.Dinic** %4, align 8
  %17 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  call void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector.13"* %17) #3
  %18 = load i32, i32* %6, align 4
  %19 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 1
  store i32 %18, i32* %19, align 8
  %20 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %21 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %22 = call i64 @_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %21) #3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2Ev(%"class.std::vector.18"* %7) #3
  invoke void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6resizeEmRKS4_(%"class.std::vector.13"* %20, i64 %22, %"class.std::vector.18"* dereferenceable(24) %7)
          to label %23 unwind label %168

; <label>:23:                                     ; preds = %3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %7) #3
  store i32 0, i32* %10, align 4
  br label %24

; <label>:24:                                     ; preds = %249, %23
  %25 = load i32, i32* %10, align 4
  %26 = sext i32 %25 to i64
  %27 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %28 = call i64 @_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %27) #3
  %29 = icmp ult i64 %26, %28
  br i1 %29, label %30, label %256

; <label>:30:                                     ; preds = %24
  store i32 0, i32* %11, align 4
  br label %31

; <label>:31:                                     ; preds = %167, %30
  %32 = load i32, i32* %11, align 4
  %33 = sext i32 %32 to i64
  %34 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %35 = load i32, i32* %10, align 4
  %36 = sext i32 %35 to i64
  %37 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %34, i64 %36) #3
  %38 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %37) #3
  %39 = icmp ult i64 %33, %38
  br i1 %39, label %40, label %248

; <label>:40:                                     ; preds = %31
  %41 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %12, i32 0, i32 0
  %42 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %43 = load i32, i32* %10, align 4
  %44 = sext i32 %43 to i64
  %45 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %42, i64 %44) #3
  %46 = load i32, i32* %11, align 4
  %47 = sext i32 %46 to i64
  %48 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt6vectorISt4pairIiiESaIS1_EEixEm(%"class.std::vector.0"* %45, i64 %47) #3
  %49 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %48, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %41, align 4
  %51 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %12, i32 0, i32 1
  %52 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %53 = load i32, i32* %10, align 4
  %54 = sext i32 %53 to i64
  %55 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %52, i64 %54) #3
  %56 = load i32, i32* %11, align 4
  %57 = sext i32 %56 to i64
  %58 = call dereferenceable(8) %"struct.std::pair"* @_ZNSt6vectorISt4pairIiiESaIS1_EEixEm(%"class.std::vector.0"* %55, i64 %57) #3
  %59 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %58, i32 0, i32 1
  %60 = load i32, i32* %59, align 4
  store i32 %60, i32* %51, align 4
  %61 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %12, i32 0, i32 2
  store i32 0, i32* %61, align 4
  %62 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %63 = load i32, i32* %10, align 4
  %64 = sext i32 %63 to i64
  %65 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %62, i64 %64) #3
  invoke void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE9push_backERKS2_(%"class.std::vector.18"* %65, %"struct.Dinic<int>::edge"* dereferenceable(12) %12)
          to label %66 unwind label %202

; <label>:66:                                     ; preds = %40
  %67 = load i32, i32* @x.28
  %68 = load i32, i32* @y.29
  %69 = add i32 %67, -1065322655
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, -1065322655
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %567

; <label>:93:                                     ; preds = %66, %567
  %94 = load i32, i32* @x.28
  %95 = load i32, i32* @y.29
  %96 = sub i32 %94, 638964157
  %97 = sub i32 %96, 1
  %98 = add i32 %97, 638964157
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 false, true
  %107 = and i1 %104, false
  %108 = and i1 %102, %106
  %109 = and i1 %105, false
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 false, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %567

; <label>:120:                                    ; preds = %93
  br label %121

; <label>:121:                                    ; preds = %120
  %122 = load i32, i32* @x.28
  %123 = load i32, i32* @y.29
  %124 = sub i32 %122, 537474817
  %125 = sub i32 %124, 1
  %126 = add i32 %125, 537474817
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %568

; <label>:148:                                    ; preds = %121, %568
  %149 = load i32, i32* %11, align 4
  %150 = sub i32 %149, 705084232
  %151 = add i32 %150, 1
  %152 = add i32 %151, 705084232
  %153 = add nsw i32 %149, 1
  store i32 %152, i32* %11, align 4
  %154 = load i32, i32* @x.28
  %155 = load i32, i32* @y.29
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %568

; <label>:167:                                    ; preds = %148
  br label %31

; <label>:168:                                    ; preds = %3
  %169 = load i32, i32* @x.28
  %170 = load i32, i32* @y.29
  %171 = add i32 %169, -97261251
  %172 = sub i32 %171, 1
  %173 = sub i32 %172, -97261251
  %174 = sub i32 %169, 1
  %175 = mul i32 %169, %173
  %176 = urem i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = icmp slt i32 %170, 10
  %179 = and i1 %177, %178
  %180 = xor i1 %177, %178
  %181 = or i1 %179, %180
  %182 = or i1 %177, %178
  br i1 %181, label %183, label %602

; <label>:183:                                    ; preds = %168, %602
  %184 = landingpad { i8*, i32 }
          cleanup
  %185 = extractvalue { i8*, i32 } %184, 0
  store i8* %185, i8** %8, align 8
  %186 = extractvalue { i8*, i32 } %184, 1
  store i32 %186, i32* %9, align 4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %7) #3
  %187 = load i32, i32* @x.28
  %188 = load i32, i32* @y.29
  %189 = add i32 %187, -1046514883
  %190 = sub i32 %189, 1
  %191 = sub i32 %190, -1046514883
  %192 = sub i32 %187, 1
  %193 = mul i32 %187, %191
  %194 = urem i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = icmp slt i32 %188, 10
  %197 = and i1 %195, %196
  %198 = xor i1 %195, %196
  %199 = or i1 %197, %198
  %200 = or i1 %195, %196
  br i1 %199, label %201, label %602

; <label>:201:                                    ; preds = %183
  br label %507

; <label>:202:                                    ; preds = %395, %40
  %203 = load i32, i32* @x.28
  %204 = load i32, i32* @y.29
  %205 = sub i32 %203, -227999470
  %206 = sub i32 %205, 1
  %207 = add i32 %206, -227999470
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = and i1 %211, %212
  %214 = xor i1 %211, %212
  %215 = or i1 %213, %214
  %216 = or i1 %211, %212
  br i1 %215, label %217, label %606

; <label>:217:                                    ; preds = %202, %606
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %8, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %9, align 4
  %221 = load i32, i32* @x.28
  %222 = load i32, i32* @y.29
  %223 = add i32 %221, 1927058764
  %224 = sub i32 %223, 1
  %225 = sub i32 %224, 1927058764
  %226 = sub i32 %221, 1
  %227 = mul i32 %221, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %222, 10
  %231 = xor i1 %229, true
  %232 = xor i1 %230, true
  %233 = xor i1 true, true
  %234 = and i1 %231, true
  %235 = and i1 %229, %233
  %236 = and i1 %232, true
  %237 = and i1 %230, %233
  %238 = or i1 %234, %235
  %239 = or i1 %236, %237
  %240 = xor i1 %238, %239
  %241 = or i1 %231, %232
  %242 = xor i1 %241, true
  %243 = or i1 true, %233
  %244 = and i1 %242, %243
  %245 = or i1 %240, %244
  %246 = or i1 %229, %230
  br i1 %245, label %247, label %606

; <label>:247:                                    ; preds = %217
  br label %507

; <label>:248:                                    ; preds = %31
  br label %249

; <label>:249:                                    ; preds = %248
  %250 = load i32, i32* %10, align 4
  %251 = sub i32 0, %250
  %252 = sub i32 0, 1
  %253 = add i32 %251, %252
  %254 = sub i32 0, %253
  %255 = add nsw i32 %250, 1
  store i32 %254, i32* %10, align 4
  br label %24

; <label>:256:                                    ; preds = %24
  store i32 0, i32* %13, align 4
  br label %257

; <label>:257:                                    ; preds = %458, %256
  %258 = load i32, i32* @x.28
  %259 = load i32, i32* @y.29
  %260 = add i32 %258, -407757557
  %261 = sub i32 %260, 1
  %262 = sub i32 %261, -407757557
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = xor i1 %266, true
  %269 = xor i1 %267, true
  %270 = xor i1 true, true
  %271 = and i1 %268, true
  %272 = and i1 %266, %270
  %273 = and i1 %269, true
  %274 = and i1 %267, %270
  %275 = or i1 %271, %272
  %276 = or i1 %273, %274
  %277 = xor i1 %275, %276
  %278 = or i1 %268, %269
  %279 = xor i1 %278, true
  %280 = or i1 true, %270
  %281 = and i1 %279, %280
  %282 = or i1 %277, %281
  %283 = or i1 %266, %267
  br i1 %282, label %284, label %610

; <label>:284:                                    ; preds = %257, %610
  %285 = load i32, i32* %13, align 4
  %286 = sext i32 %285 to i64
  %287 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %288 = call i64 @_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %287) #3
  %289 = icmp ult i64 %286, %288
  %290 = load i32, i32* @x.28
  %291 = load i32, i32* @y.29
  %292 = sub i32 0, 1
  %293 = add i32 %290, %292
  %294 = sub i32 %290, 1
  %295 = mul i32 %290, %293
  %296 = urem i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = icmp slt i32 %291, 10
  %299 = xor i1 %297, true
  %300 = xor i1 %298, true
  %301 = xor i1 false, true
  %302 = and i1 %299, false
  %303 = and i1 %297, %301
  %304 = and i1 %300, false
  %305 = and i1 %298, %301
  %306 = or i1 %302, %303
  %307 = or i1 %304, %305
  %308 = xor i1 %306, %307
  %309 = or i1 %299, %300
  %310 = xor i1 %309, true
  %311 = or i1 false, %301
  %312 = and i1 %310, %311
  %313 = or i1 %308, %312
  %314 = or i1 %297, %298
  br i1 %313, label %315, label %610

; <label>:315:                                    ; preds = %284
  br i1 %289, label %316, label %464

; <label>:316:                                    ; preds = %315
  store i32 0, i32* %14, align 4
  br label %317

; <label>:317:                                    ; preds = %450, %316
  %318 = load i32, i32* %14, align 4
  %319 = sext i32 %318 to i64
  %320 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %321 = load i32, i32* %13, align 4
  %322 = sext i32 %321 to i64
  %323 = call dereferenceable(24) %"class.std::vector.0"* @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EEixEm(%"class.std::vector"* %320, i64 %322) #3
  %324 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %323) #3
  %325 = icmp ult i64 %319, %324
  br i1 %325, label %326, label %457

; <label>:326:                                    ; preds = %317
  %327 = load i32, i32* @x.28
  %328 = load i32, i32* @y.29
  %329 = add i32 %327, -1559071483
  %330 = sub i32 %329, 1
  %331 = sub i32 %330, -1559071483
  %332 = sub i32 %327, 1
  %333 = mul i32 %327, %331
  %334 = urem i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = icmp slt i32 %328, 10
  %337 = and i1 %335, %336
  %338 = xor i1 %335, %336
  %339 = or i1 %337, %338
  %340 = or i1 %335, %336
  br i1 %339, label %341, label %616

; <label>:341:                                    ; preds = %326, %616
  %342 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %343 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %344 = load i32, i32* %13, align 4
  %345 = sext i32 %344 to i64
  %346 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %343, i64 %345) #3
  %347 = load i32, i32* %14, align 4
  %348 = sext i32 %347 to i64
  %349 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %346, i64 %348) #3
  %350 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %349, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = sext i32 %351 to i64
  %353 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %342, i64 %352) #3
  %354 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %353) #3
  %355 = trunc i64 %354 to i32
  %356 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %357 = load i32, i32* %13, align 4
  %358 = sext i32 %357 to i64
  %359 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %356, i64 %358) #3
  %360 = load i32, i32* %14, align 4
  %361 = sext i32 %360 to i64
  %362 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %359, i64 %361) #3
  %363 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %362, i32 0, i32 2
  store i32 %355, i32* %363, align 4
  %364 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 0
  %365 = load i32, i32* %13, align 4
  store i32 %365, i32* %364, align 4
  %366 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 1
  store i32 0, i32* %366, align 4
  %367 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 2
  %368 = load i32, i32* %14, align 4
  store i32 %368, i32* %367, align 4
  %369 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %370 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %371 = load i32, i32* %13, align 4
  %372 = sext i32 %371 to i64
  %373 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %370, i64 %372) #3
  %374 = load i32, i32* %14, align 4
  %375 = sext i32 %374 to i64
  %376 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %373, i64 %375) #3
  %377 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %376, i32 0, i32 0
  %378 = load i32, i32* %377, align 4
  %379 = sext i32 %378 to i64
  %380 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %369, i64 %379) #3
  %381 = load i32, i32* @x.28
  %382 = load i32, i32* @y.29
  %383 = sub i32 %381, -1532334526
  %384 = sub i32 %383, 1
  %385 = add i32 %384, -1532334526
  %386 = sub i32 %381, 1
  %387 = mul i32 %381, %385
  %388 = urem i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = icmp slt i32 %382, 10
  %391 = and i1 %389, %390
  %392 = xor i1 %389, %390
  %393 = or i1 %391, %392
  %394 = or i1 %389, %390
  br i1 %393, label %395, label %616

; <label>:395:                                    ; preds = %341
  invoke void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE9push_backERKS2_(%"class.std::vector.18"* %380, %"struct.Dinic<int>::edge"* dereferenceable(12) %15)
          to label %396 unwind label %202

; <label>:396:                                    ; preds = %395
  %397 = load i32, i32* @x.28
  %398 = load i32, i32* @y.29
  %399 = add i32 %397, -298285767
  %400 = sub i32 %399, 1
  %401 = sub i32 %400, -298285767
  %402 = sub i32 %397, 1
  %403 = mul i32 %397, %401
  %404 = urem i32 %403, 2
  %405 = icmp eq i32 %404, 0
  %406 = icmp slt i32 %398, 10
  %407 = xor i1 %405, true
  %408 = xor i1 %406, true
  %409 = xor i1 false, true
  %410 = and i1 %407, false
  %411 = and i1 %405, %409
  %412 = and i1 %408, false
  %413 = and i1 %406, %409
  %414 = or i1 %410, %411
  %415 = or i1 %412, %413
  %416 = xor i1 %414, %415
  %417 = or i1 %407, %408
  %418 = xor i1 %417, true
  %419 = or i1 false, %409
  %420 = and i1 %418, %419
  %421 = or i1 %416, %420
  %422 = or i1 %405, %406
  br i1 %421, label %423, label %656

; <label>:423:                                    ; preds = %396, %656
  %424 = load i32, i32* @x.28
  %425 = load i32, i32* @y.29
  %426 = sub i32 0, 1
  %427 = add i32 %424, %426
  %428 = sub i32 %424, 1
  %429 = mul i32 %424, %427
  %430 = urem i32 %429, 2
  %431 = icmp eq i32 %430, 0
  %432 = icmp slt i32 %425, 10
  %433 = xor i1 %431, true
  %434 = xor i1 %432, true
  %435 = xor i1 false, true
  %436 = and i1 %433, false
  %437 = and i1 %431, %435
  %438 = and i1 %434, false
  %439 = and i1 %432, %435
  %440 = or i1 %436, %437
  %441 = or i1 %438, %439
  %442 = xor i1 %440, %441
  %443 = or i1 %433, %434
  %444 = xor i1 %443, true
  %445 = or i1 false, %435
  %446 = and i1 %444, %445
  %447 = or i1 %442, %446
  %448 = or i1 %431, %432
  br i1 %447, label %449, label %656

; <label>:449:                                    ; preds = %423
  br label %450

; <label>:450:                                    ; preds = %449
  %451 = load i32, i32* %14, align 4
  %452 = sub i32 0, %451
  %453 = sub i32 0, 1
  %454 = add i32 %452, %453
  %455 = sub i32 0, %454
  %456 = add nsw i32 %451, 1
  store i32 %455, i32* %14, align 4
  br label %317

; <label>:457:                                    ; preds = %317
  br label %458

; <label>:458:                                    ; preds = %457
  %459 = load i32, i32* %13, align 4
  %460 = add i32 %459, -1383882425
  %461 = add i32 %460, 1
  %462 = sub i32 %461, -1383882425
  %463 = add nsw i32 %459, 1
  store i32 %462, i32* %13, align 4
  br label %257

; <label>:464:                                    ; preds = %315
  %465 = load i32, i32* @x.28
  %466 = load i32, i32* @y.29
  %467 = sub i32 %465, 292051217
  %468 = sub i32 %467, 1
  %469 = add i32 %468, 292051217
  %470 = sub i32 %465, 1
  %471 = mul i32 %465, %469
  %472 = urem i32 %471, 2
  %473 = icmp eq i32 %472, 0
  %474 = icmp slt i32 %466, 10
  %475 = and i1 %473, %474
  %476 = xor i1 %473, %474
  %477 = or i1 %475, %476
  %478 = or i1 %473, %474
  br i1 %477, label %479, label %657

; <label>:479:                                    ; preds = %464, %657
  %480 = load i32, i32* @x.28
  %481 = load i32, i32* @y.29
  %482 = add i32 %480, -969488945
  %483 = sub i32 %482, 1
  %484 = sub i32 %483, -969488945
  %485 = sub i32 %480, 1
  %486 = mul i32 %480, %484
  %487 = urem i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = icmp slt i32 %481, 10
  %490 = xor i1 %488, true
  %491 = xor i1 %489, true
  %492 = xor i1 false, true
  %493 = and i1 %490, false
  %494 = and i1 %488, %492
  %495 = and i1 %491, false
  %496 = and i1 %489, %492
  %497 = or i1 %493, %494
  %498 = or i1 %495, %496
  %499 = xor i1 %497, %498
  %500 = or i1 %490, %491
  %501 = xor i1 %500, true
  %502 = or i1 false, %492
  %503 = and i1 %501, %502
  %504 = or i1 %499, %503
  %505 = or i1 %488, %489
  br i1 %504, label %506, label %657

; <label>:506:                                    ; preds = %479
  ret void

; <label>:507:                                    ; preds = %247, %201
  call void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.13"* %17) #3
  br label %508

; <label>:508:                                    ; preds = %507
  %509 = load i32, i32* @x.28
  %510 = load i32, i32* @y.29
  %511 = sub i32 %509, 747983891
  %512 = sub i32 %511, 1
  %513 = add i32 %512, 747983891
  %514 = sub i32 %509, 1
  %515 = mul i32 %509, %513
  %516 = urem i32 %515, 2
  %517 = icmp eq i32 %516, 0
  %518 = icmp slt i32 %510, 10
  %519 = xor i1 %517, true
  %520 = xor i1 %518, true
  %521 = xor i1 true, true
  %522 = and i1 %519, true
  %523 = and i1 %517, %521
  %524 = and i1 %520, true
  %525 = and i1 %518, %521
  %526 = or i1 %522, %523
  %527 = or i1 %524, %525
  %528 = xor i1 %526, %527
  %529 = or i1 %519, %520
  %530 = xor i1 %529, true
  %531 = or i1 true, %521
  %532 = and i1 %530, %531
  %533 = or i1 %528, %532
  %534 = or i1 %517, %518
  br i1 %533, label %535, label %658

; <label>:535:                                    ; preds = %508, %658
  %536 = load i8*, i8** %8, align 8
  %537 = load i32, i32* %9, align 4
  %538 = insertvalue { i8*, i32 } undef, i8* %536, 0
  %539 = insertvalue { i8*, i32 } %538, i32 %537, 1
  %540 = load i32, i32* @x.28
  %541 = load i32, i32* @y.29
  %542 = sub i32 %540, -2135667909
  %543 = sub i32 %542, 1
  %544 = add i32 %543, -2135667909
  %545 = sub i32 %540, 1
  %546 = mul i32 %540, %544
  %547 = urem i32 %546, 2
  %548 = icmp eq i32 %547, 0
  %549 = icmp slt i32 %541, 10
  %550 = xor i1 %548, true
  %551 = xor i1 %549, true
  %552 = xor i1 false, true
  %553 = and i1 %550, false
  %554 = and i1 %548, %552
  %555 = and i1 %551, false
  %556 = and i1 %549, %552
  %557 = or i1 %553, %554
  %558 = or i1 %555, %556
  %559 = xor i1 %557, %558
  %560 = or i1 %550, %551
  %561 = xor i1 %560, true
  %562 = or i1 false, %552
  %563 = and i1 %561, %562
  %564 = or i1 %559, %563
  %565 = or i1 %548, %549
  br i1 %564, label %566, label %658

; <label>:566:                                    ; preds = %535
  resume { i8*, i32 } %539

; <label>:567:                                    ; preds = %93, %66
  br label %93

; <label>:568:                                    ; preds = %148, %121
  %569 = load i32, i32* %11, align 4
  %570 = add i32 0, 66854137
  %571 = sub i32 %570, %569
  %572 = sub i32 %571, 66854137
  %573 = sub i32 0, %569
  %574 = sub i32 0, %572
  %575 = sub i32 0, 1
  %576 = add i32 %574, %575
  %577 = sub i32 0, %576
  %578 = add i32 %572, 1
  %579 = sub i32 %569, -244102247
  %580 = sub i32 %579, 1
  %581 = add i32 %580, -244102247
  %582 = sub i32 %569, 1
  %583 = mul i32 %581, 1
  %584 = shl i32 %569, 1
  %585 = sub i32 %569, 1611976910
  %586 = sub i32 %585, 1
  %587 = add i32 %586, 1611976910
  %588 = sub i32 %569, 1
  %589 = mul i32 %587, 1
  %590 = shl i32 %569, 1
  %591 = add i32 0, 1982291337
  %592 = sub i32 %591, %569
  %593 = sub i32 %592, 1982291337
  %594 = sub i32 0, %569
  %595 = sub i32 0, 1
  %596 = sub i32 %593, %595
  %597 = add i32 %593, 1
  %598 = sub i32 %569, 1552147278
  %599 = add i32 %598, 1
  %600 = add i32 %599, 1552147278
  %601 = add nsw i32 %569, 1
  store i32 %600, i32* %11, align 4
  br label %148

; <label>:602:                                    ; preds = %183, %168
  %603 = landingpad { i8*, i32 }
          cleanup
  %604 = extractvalue { i8*, i32 } %603, 0
  store i8* %604, i8** %8, align 8
  %605 = extractvalue { i8*, i32 } %603, 1
  store i32 %605, i32* %9, align 4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %7) #3
  br label %183

; <label>:606:                                    ; preds = %217, %202
  %607 = landingpad { i8*, i32 }
          cleanup
  %608 = extractvalue { i8*, i32 } %607, 0
  store i8* %608, i8** %8, align 8
  %609 = extractvalue { i8*, i32 } %607, 1
  store i32 %609, i32* %9, align 4
  br label %217

; <label>:610:                                    ; preds = %284, %257
  %611 = load i32, i32* %13, align 4
  %612 = sext i32 %611 to i64
  %613 = load %"class.std::vector"*, %"class.std::vector"** %5, align 8
  %614 = call i64 @_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"* %613) #3
  %615 = icmp ult i64 %612, %614
  br label %284

; <label>:616:                                    ; preds = %341, %326
  %617 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %618 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %619 = load i32, i32* %13, align 4
  %620 = sext i32 %619 to i64
  %621 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %618, i64 %620) #3
  %622 = load i32, i32* %14, align 4
  %623 = sext i32 %622 to i64
  %624 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %621, i64 %623) #3
  %625 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %624, i32 0, i32 0
  %626 = load i32, i32* %625, align 4
  %627 = sext i32 %626 to i64
  %628 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %617, i64 %627) #3
  %629 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %628) #3
  %630 = trunc i64 %629 to i32
  %631 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %632 = load i32, i32* %13, align 4
  %633 = sext i32 %632 to i64
  %634 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %631, i64 %633) #3
  %635 = load i32, i32* %14, align 4
  %636 = sext i32 %635 to i64
  %637 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %634, i64 %636) #3
  %638 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %637, i32 0, i32 2
  store i32 %630, i32* %638, align 4
  %639 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 0
  %640 = load i32, i32* %13, align 4
  store i32 %640, i32* %639, align 4
  %641 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 1
  store i32 0, i32* %641, align 4
  %642 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %15, i32 0, i32 2
  %643 = load i32, i32* %14, align 4
  store i32 %643, i32* %642, align 4
  %644 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %645 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %16, i32 0, i32 0
  %646 = load i32, i32* %13, align 4
  %647 = sext i32 %646 to i64
  %648 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %645, i64 %647) #3
  %649 = load i32, i32* %14, align 4
  %650 = sext i32 %649 to i64
  %651 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %648, i64 %650) #3
  %652 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %651, i32 0, i32 0
  %653 = load i32, i32* %652, align 4
  %654 = sext i32 %653 to i64
  %655 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %644, i64 %654) #3
  br label %341

; <label>:656:                                    ; preds = %423, %396
  br label %423

; <label>:657:                                    ; preds = %479, %464
  br label %479

; <label>:658:                                    ; preds = %535, %508
  %659 = load i8*, i8** %8, align 8
  %660 = load i32, i32* %9, align 4
  %661 = insertvalue { i8*, i32 } undef, i8* %659, 0
  %662 = insertvalue { i8*, i32 } %661, i32 %660, 1
  br label %535
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN5DinicIiE12maximum_flowEii(%struct.Dinic*, i32, i32) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %struct.Dinic*, align 8
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.std::vector.29", align 8
  %9 = alloca i32, align 4
  %10 = alloca %"class.std::allocator.31", align 1
  %11 = alloca i8*
  %12 = alloca i32
  %13 = alloca %"class.std::queue", align 8
  %14 = alloca %"class.std::deque", align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32
  %19 = alloca %"class.std::vector.29", align 8
  %20 = alloca i32, align 4
  %21 = alloca %"class.std::allocator.31", align 1
  %22 = alloca i32, align 4
  store %struct.Dinic* %0, %struct.Dinic** %4, align 8
  store i32 %1, i32* %5, align 4
  store i32 %2, i32* %6, align 4
  %23 = load %struct.Dinic*, %struct.Dinic** %4, align 8
  store i32 0, i32* %7, align 4
  br label %24

; <label>:24:                                     ; preds = %3, %657
  %25 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %26 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %25) #3
  store i32 -1, i32* %9, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.31"* %10) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.29"* %8, i64 %26, i32* dereferenceable(4) %9, %"class.std::allocator.31"* dereferenceable(1) %10)
          to label %27 unwind label %230

; <label>:27:                                     ; preds = %24
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %10) #3
  invoke void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %14)
          to label %28 unwind label %264

; <label>:28:                                     ; preds = %27
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %13, %"class.std::deque"* dereferenceable(80) %14)
          to label %29 unwind label %268

; <label>:29:                                     ; preds = %28
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %14) #3
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %13, i32* dereferenceable(4) %5)
          to label %30 unwind label %272

; <label>:30:                                     ; preds = %29
  %31 = load i32, i32* @x.30
  %32 = load i32, i32* @y.31
  %33 = add i32 %31, -735809120
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -735809120
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  br i1 %55, label %57, label %709

; <label>:57:                                     ; preds = %30, %709
  %58 = load i32, i32* %5, align 4
  %59 = sext i32 %58 to i64
  %60 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %59) #3
  store i32 0, i32* %60, align 4
  %61 = load i32, i32* @x.30
  %62 = load i32, i32* @y.31
  %63 = add i32 %61, -2145550486
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, -2145550486
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 false, true
  %74 = and i1 %71, false
  %75 = and i1 %69, %73
  %76 = and i1 %72, false
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 false, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %709

; <label>:87:                                     ; preds = %57
  br label %88

; <label>:88:                                     ; preds = %465, %87
  %89 = load i32, i32* @x.30
  %90 = load i32, i32* @y.31
  %91 = add i32 %89, 895666930
  %92 = sub i32 %91, 1
  %93 = sub i32 %92, 895666930
  %94 = sub i32 %89, 1
  %95 = mul i32 %89, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %90, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %713

; <label>:103:                                    ; preds = %88, %713
  %104 = load i32, i32* @x.30
  %105 = load i32, i32* @y.31
  %106 = sub i32 %104, 953720368
  %107 = sub i32 %106, 1
  %108 = add i32 %107, 953720368
  %109 = sub i32 %104, 1
  %110 = mul i32 %104, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %105, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  br i1 %116, label %118, label %713

; <label>:118:                                    ; preds = %103
  %119 = invoke i64 @_ZNKSt5queueIiSt5dequeIiSaIiEEE4sizeEv(%"class.std::queue"* %13)
          to label %120 unwind label %272

; <label>:120:                                    ; preds = %118
  %121 = icmp ne i64 %119, 0
  br i1 %121, label %122, label %466

; <label>:122:                                    ; preds = %120
  %123 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %13)
          to label %124 unwind label %272

; <label>:124:                                    ; preds = %122
  %125 = load i32, i32* @x.30
  %126 = load i32, i32* @y.31
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %714

; <label>:150:                                    ; preds = %124, %714
  %151 = load i32, i32* %123, align 4
  store i32 %151, i32* %15, align 4
  %152 = load i32, i32* @x.30
  %153 = load i32, i32* @y.31
  %154 = sub i32 %152, -705732841
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -705732841
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %714

; <label>:166:                                    ; preds = %150
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %13)
          to label %167 unwind label %272

; <label>:167:                                    ; preds = %166
  store i32 0, i32* %16, align 4
  br label %168

; <label>:168:                                    ; preds = %430, %167
  %169 = load i32, i32* %16, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %172 = load i32, i32* %15, align 4
  %173 = sext i32 %172 to i64
  %174 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %171, i64 %173) #3
  %175 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %174) #3
  %176 = icmp ult i64 %170, %175
  br i1 %176, label %177, label %436

; <label>:177:                                    ; preds = %168
  %178 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %179 = load i32, i32* %15, align 4
  %180 = sext i32 %179 to i64
  %181 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %178, i64 %180) #3
  %182 = load i32, i32* %16, align 4
  %183 = sext i32 %182 to i64
  %184 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %181, i64 %183) #3
  %185 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %184, i32 0, i32 1
  %186 = load i32, i32* %185, align 4
  %187 = icmp sle i32 %186, 0
  br i1 %187, label %188, label %276

; <label>:188:                                    ; preds = %177
  %189 = load i32, i32* @x.30
  %190 = load i32, i32* @y.31
  %191 = sub i32 0, 1
  %192 = add i32 %189, %191
  %193 = sub i32 %189, 1
  %194 = mul i32 %189, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %190, 10
  %198 = and i1 %196, %197
  %199 = xor i1 %196, %197
  %200 = or i1 %198, %199
  %201 = or i1 %196, %197
  br i1 %200, label %202, label %716

; <label>:202:                                    ; preds = %188, %716
  %203 = load i32, i32* @x.30
  %204 = load i32, i32* @y.31
  %205 = add i32 %203, -1000462610
  %206 = sub i32 %205, 1
  %207 = sub i32 %206, -1000462610
  %208 = sub i32 %203, 1
  %209 = mul i32 %203, %207
  %210 = urem i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = icmp slt i32 %204, 10
  %213 = xor i1 %211, true
  %214 = xor i1 %212, true
  %215 = xor i1 true, true
  %216 = and i1 %213, true
  %217 = and i1 %211, %215
  %218 = and i1 %214, true
  %219 = and i1 %212, %215
  %220 = or i1 %216, %217
  %221 = or i1 %218, %219
  %222 = xor i1 %220, %221
  %223 = or i1 %213, %214
  %224 = xor i1 %223, true
  %225 = or i1 true, %215
  %226 = and i1 %224, %225
  %227 = or i1 %222, %226
  %228 = or i1 %211, %212
  br i1 %227, label %229, label %716

; <label>:229:                                    ; preds = %202
  br label %430

; <label>:230:                                    ; preds = %24
  %231 = load i32, i32* @x.30
  %232 = load i32, i32* @y.31
  %233 = add i32 %231, 1657909464
  %234 = sub i32 %233, 1
  %235 = sub i32 %234, 1657909464
  %236 = sub i32 %231, 1
  %237 = mul i32 %231, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %232, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %717

; <label>:245:                                    ; preds = %230, %717
  %246 = landingpad { i8*, i32 }
          cleanup
  %247 = extractvalue { i8*, i32 } %246, 0
  store i8* %247, i8** %11, align 8
  %248 = extractvalue { i8*, i32 } %246, 1
  store i32 %248, i32* %12, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %10) #3
  %249 = load i32, i32* @x.30
  %250 = load i32, i32* @y.31
  %251 = sub i32 %249, -1938163798
  %252 = sub i32 %251, 1
  %253 = add i32 %252, -1938163798
  %254 = sub i32 %249, 1
  %255 = mul i32 %249, %253
  %256 = urem i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = icmp slt i32 %250, 10
  %259 = and i1 %257, %258
  %260 = xor i1 %257, %258
  %261 = or i1 %259, %260
  %262 = or i1 %257, %258
  br i1 %261, label %263, label %717

; <label>:263:                                    ; preds = %245
  br label %704

; <label>:264:                                    ; preds = %27
  %265 = landingpad { i8*, i32 }
          cleanup
  %266 = extractvalue { i8*, i32 } %265, 0
  store i8* %266, i8** %11, align 8
  %267 = extractvalue { i8*, i32 } %265, 1
  store i32 %267, i32* %12, align 4
  br label %659

; <label>:268:                                    ; preds = %28
  %269 = landingpad { i8*, i32 }
          cleanup
  %270 = extractvalue { i8*, i32 } %269, 0
  store i8* %270, i8** %11, align 8
  %271 = extractvalue { i8*, i32 } %269, 1
  store i32 %271, i32* %12, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %14) #3
  br label %659

; <label>:272:                                    ; preds = %428, %166, %122, %118, %29
  %273 = landingpad { i8*, i32 }
          cleanup
  %274 = extractvalue { i8*, i32 } %273, 0
  store i8* %274, i8** %11, align 8
  %275 = extractvalue { i8*, i32 } %273, 1
  store i32 %275, i32* %12, align 4
  br label %658

; <label>:276:                                    ; preds = %177
  %277 = load i32, i32* @x.30
  %278 = load i32, i32* @y.31
  %279 = sub i32 %277, -1682121998
  %280 = sub i32 %279, 1
  %281 = add i32 %280, -1682121998
  %282 = sub i32 %277, 1
  %283 = mul i32 %277, %281
  %284 = urem i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = icmp slt i32 %278, 10
  %287 = and i1 %285, %286
  %288 = xor i1 %285, %286
  %289 = or i1 %287, %288
  %290 = or i1 %285, %286
  br i1 %289, label %291, label %721

; <label>:291:                                    ; preds = %276, %721
  %292 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %293 = load i32, i32* %15, align 4
  %294 = sext i32 %293 to i64
  %295 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %292, i64 %294) #3
  %296 = load i32, i32* %16, align 4
  %297 = sext i32 %296 to i64
  %298 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %295, i64 %297) #3
  %299 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %298, i32 0, i32 0
  %300 = load i32, i32* %299, align 4
  store i32 %300, i32* %17, align 4
  %301 = load i32, i32* %17, align 4
  %302 = sext i32 %301 to i64
  %303 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %302) #3
  %304 = load i32, i32* %303, align 4
  %305 = icmp ne i32 %304, -1
  %306 = load i32, i32* @x.30
  %307 = load i32, i32* @y.31
  %308 = sub i32 0, 1
  %309 = add i32 %306, %308
  %310 = sub i32 %306, 1
  %311 = mul i32 %306, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %307, 10
  %315 = xor i1 %313, true
  %316 = xor i1 %314, true
  %317 = xor i1 true, true
  %318 = and i1 %315, true
  %319 = and i1 %313, %317
  %320 = and i1 %316, true
  %321 = and i1 %314, %317
  %322 = or i1 %318, %319
  %323 = or i1 %320, %321
  %324 = xor i1 %322, %323
  %325 = or i1 %315, %316
  %326 = xor i1 %325, true
  %327 = or i1 true, %317
  %328 = and i1 %326, %327
  %329 = or i1 %324, %328
  %330 = or i1 %313, %314
  br i1 %329, label %331, label %721

; <label>:331:                                    ; preds = %291
  br i1 %305, label %332, label %375

; <label>:332:                                    ; preds = %331
  %333 = load i32, i32* @x.30
  %334 = load i32, i32* @y.31
  %335 = sub i32 %333, 1224778245
  %336 = sub i32 %335, 1
  %337 = add i32 %336, 1224778245
  %338 = sub i32 %333, 1
  %339 = mul i32 %333, %337
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %334, 10
  %343 = xor i1 %341, true
  %344 = xor i1 %342, true
  %345 = xor i1 true, true
  %346 = and i1 %343, true
  %347 = and i1 %341, %345
  %348 = and i1 %344, true
  %349 = and i1 %342, %345
  %350 = or i1 %346, %347
  %351 = or i1 %348, %349
  %352 = xor i1 %350, %351
  %353 = or i1 %343, %344
  %354 = xor i1 %353, true
  %355 = or i1 true, %345
  %356 = and i1 %354, %355
  %357 = or i1 %352, %356
  %358 = or i1 %341, %342
  br i1 %357, label %359, label %736

; <label>:359:                                    ; preds = %332, %736
  %360 = load i32, i32* @x.30
  %361 = load i32, i32* @y.31
  %362 = add i32 %360, -1312452267
  %363 = sub i32 %362, 1
  %364 = sub i32 %363, -1312452267
  %365 = sub i32 %360, 1
  %366 = mul i32 %360, %364
  %367 = urem i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = icmp slt i32 %361, 10
  %370 = and i1 %368, %369
  %371 = xor i1 %368, %369
  %372 = or i1 %370, %371
  %373 = or i1 %368, %369
  br i1 %372, label %374, label %736

; <label>:374:                                    ; preds = %359
  br label %430

; <label>:375:                                    ; preds = %331
  %376 = load i32, i32* @x.30
  %377 = load i32, i32* @y.31
  %378 = sub i32 %376, 1602542810
  %379 = sub i32 %378, 1
  %380 = add i32 %379, 1602542810
  %381 = sub i32 %376, 1
  %382 = mul i32 %376, %380
  %383 = urem i32 %382, 2
  %384 = icmp eq i32 %383, 0
  %385 = icmp slt i32 %377, 10
  %386 = and i1 %384, %385
  %387 = xor i1 %384, %385
  %388 = or i1 %386, %387
  %389 = or i1 %384, %385
  br i1 %388, label %390, label %737

; <label>:390:                                    ; preds = %375, %737
  %391 = load i32, i32* %15, align 4
  %392 = sext i32 %391 to i64
  %393 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %392) #3
  %394 = load i32, i32* %393, align 4
  %395 = sub i32 0, %394
  %396 = sub i32 0, 1
  %397 = add i32 %395, %396
  %398 = sub i32 0, %397
  %399 = add nsw i32 %394, 1
  %400 = load i32, i32* %17, align 4
  %401 = sext i32 %400 to i64
  %402 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %401) #3
  store i32 %398, i32* %402, align 4
  %403 = load i32, i32* @x.30
  %404 = load i32, i32* @y.31
  %405 = sub i32 0, 1
  %406 = add i32 %403, %405
  %407 = sub i32 %403, 1
  %408 = mul i32 %403, %406
  %409 = urem i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = icmp slt i32 %404, 10
  %412 = xor i1 %410, true
  %413 = xor i1 %411, true
  %414 = xor i1 false, true
  %415 = and i1 %412, false
  %416 = and i1 %410, %414
  %417 = and i1 %413, false
  %418 = and i1 %411, %414
  %419 = or i1 %415, %416
  %420 = or i1 %417, %418
  %421 = xor i1 %419, %420
  %422 = or i1 %412, %413
  %423 = xor i1 %422, true
  %424 = or i1 false, %414
  %425 = and i1 %423, %424
  %426 = or i1 %421, %425
  %427 = or i1 %410, %411
  br i1 %426, label %428, label %737

; <label>:428:                                    ; preds = %390
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"* %13, i32* dereferenceable(4) %17)
          to label %429 unwind label %272

; <label>:429:                                    ; preds = %428
  br label %430

; <label>:430:                                    ; preds = %429, %374, %229
  %431 = load i32, i32* %16, align 4
  %432 = sub i32 %431, -1676758188
  %433 = add i32 %432, 1
  %434 = add i32 %433, -1676758188
  %435 = add nsw i32 %431, 1
  store i32 %434, i32* %16, align 4
  br label %168

; <label>:436:                                    ; preds = %168
  %437 = load i32, i32* @x.30
  %438 = load i32, i32* @y.31
  %439 = sub i32 0, 1
  %440 = add i32 %437, %439
  %441 = sub i32 %437, 1
  %442 = mul i32 %437, %440
  %443 = urem i32 %442, 2
  %444 = icmp eq i32 %443, 0
  %445 = icmp slt i32 %438, 10
  %446 = and i1 %444, %445
  %447 = xor i1 %444, %445
  %448 = or i1 %446, %447
  %449 = or i1 %444, %445
  br i1 %448, label %450, label %770

; <label>:450:                                    ; preds = %436, %770
  %451 = load i32, i32* @x.30
  %452 = load i32, i32* @y.31
  %453 = sub i32 %451, -109092337
  %454 = sub i32 %453, 1
  %455 = add i32 %454, -109092337
  %456 = sub i32 %451, 1
  %457 = mul i32 %451, %455
  %458 = urem i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = icmp slt i32 %452, 10
  %461 = and i1 %459, %460
  %462 = xor i1 %459, %460
  %463 = or i1 %461, %462
  %464 = or i1 %459, %460
  br i1 %463, label %465, label %770

; <label>:465:                                    ; preds = %450
  br label %88

; <label>:466:                                    ; preds = %120
  %467 = load i32, i32* %6, align 4
  %468 = sext i32 %467 to i64
  %469 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %468) #3
  %470 = load i32, i32* %469, align 4
  %471 = icmp eq i32 %470, -1
  br i1 %471, label %472, label %473

; <label>:472:                                    ; preds = %466
  store i32 3, i32* %18, align 4
  br label %652

; <label>:473:                                    ; preds = %466
  %474 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %475 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %474) #3
  store i32 0, i32* %20, align 4
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.31"* %21) #3
  invoke void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.29"* %19, i64 %475, i32* dereferenceable(4) %20, %"class.std::allocator.31"* dereferenceable(1) %21)
          to label %476 unwind label %582

; <label>:476:                                    ; preds = %473
  %477 = load i32, i32* @x.30
  %478 = load i32, i32* @y.31
  %479 = sub i32 0, 1
  %480 = add i32 %477, %479
  %481 = sub i32 %477, 1
  %482 = mul i32 %477, %480
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %478, 10
  %486 = xor i1 %484, true
  %487 = xor i1 %485, true
  %488 = xor i1 true, true
  %489 = and i1 %486, true
  %490 = and i1 %484, %488
  %491 = and i1 %487, true
  %492 = and i1 %485, %488
  %493 = or i1 %489, %490
  %494 = or i1 %491, %492
  %495 = xor i1 %493, %494
  %496 = or i1 %486, %487
  %497 = xor i1 %496, true
  %498 = or i1 true, %488
  %499 = and i1 %497, %498
  %500 = or i1 %495, %499
  %501 = or i1 %484, %485
  br i1 %500, label %502, label %771

; <label>:502:                                    ; preds = %476, %771
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %21) #3
  %503 = load i32, i32* @x.30
  %504 = load i32, i32* @y.31
  %505 = add i32 %503, -574128714
  %506 = sub i32 %505, 1
  %507 = sub i32 %506, -574128714
  %508 = sub i32 %503, 1
  %509 = mul i32 %503, %507
  %510 = urem i32 %509, 2
  %511 = icmp eq i32 %510, 0
  %512 = icmp slt i32 %504, 10
  %513 = and i1 %511, %512
  %514 = xor i1 %511, %512
  %515 = or i1 %513, %514
  %516 = or i1 %511, %512
  br i1 %515, label %517, label %771

; <label>:517:                                    ; preds = %502
  br label %518

; <label>:518:                                    ; preds = %590, %517
  br label %519

; <label>:519:                                    ; preds = %518
  %520 = load i32, i32* %5, align 4
  %521 = load i32, i32* %6, align 4
  %522 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 1
  %523 = load i32, i32* %522, align 8
  %524 = invoke i32 @_ZN5DinicIiE3dfsEiiiRSt6vectorIiSaIiEES4_(%struct.Dinic* %23, i32 %520, i32 %521, i32 %523, %"class.std::vector.29"* dereferenceable(24) %19, %"class.std::vector.29"* dereferenceable(24) %8)
          to label %525 unwind label %586

; <label>:525:                                    ; preds = %519
  store i32 %524, i32* %22, align 4
  %526 = load i32, i32* %22, align 4
  %527 = icmp eq i32 %526, 0
  br i1 %527, label %528, label %590

; <label>:528:                                    ; preds = %525
  %529 = load i32, i32* @x.30
  %530 = load i32, i32* @y.31
  %531 = sub i32 0, 1
  %532 = add i32 %529, %531
  %533 = sub i32 %529, 1
  %534 = mul i32 %529, %532
  %535 = urem i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = icmp slt i32 %530, 10
  %538 = xor i1 %536, true
  %539 = xor i1 %537, true
  %540 = xor i1 true, true
  %541 = and i1 %538, true
  %542 = and i1 %536, %540
  %543 = and i1 %539, true
  %544 = and i1 %537, %540
  %545 = or i1 %541, %542
  %546 = or i1 %543, %544
  %547 = xor i1 %545, %546
  %548 = or i1 %538, %539
  %549 = xor i1 %548, true
  %550 = or i1 true, %540
  %551 = and i1 %549, %550
  %552 = or i1 %547, %551
  %553 = or i1 %536, %537
  br i1 %552, label %554, label %772

; <label>:554:                                    ; preds = %528, %772
  %555 = load i32, i32* @x.30
  %556 = load i32, i32* @y.31
  %557 = sub i32 %555, -225116209
  %558 = sub i32 %557, 1
  %559 = add i32 %558, -225116209
  %560 = sub i32 %555, 1
  %561 = mul i32 %555, %559
  %562 = urem i32 %561, 2
  %563 = icmp eq i32 %562, 0
  %564 = icmp slt i32 %556, 10
  %565 = xor i1 %563, true
  %566 = xor i1 %564, true
  %567 = xor i1 false, true
  %568 = and i1 %565, false
  %569 = and i1 %563, %567
  %570 = and i1 %566, false
  %571 = and i1 %564, %567
  %572 = or i1 %568, %569
  %573 = or i1 %570, %571
  %574 = xor i1 %572, %573
  %575 = or i1 %565, %566
  %576 = xor i1 %575, true
  %577 = or i1 false, %567
  %578 = and i1 %576, %577
  %579 = or i1 %574, %578
  %580 = or i1 %563, %564
  br i1 %579, label %581, label %772

; <label>:581:                                    ; preds = %554
  br label %597

; <label>:582:                                    ; preds = %473
  %583 = landingpad { i8*, i32 }
          cleanup
  %584 = extractvalue { i8*, i32 } %583, 0
  store i8* %584, i8** %11, align 8
  %585 = extractvalue { i8*, i32 } %583, 1
  store i32 %585, i32* %12, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %21) #3
  br label %658

; <label>:586:                                    ; preds = %519
  %587 = landingpad { i8*, i32 }
          cleanup
  %588 = extractvalue { i8*, i32 } %587, 0
  store i8* %588, i8** %11, align 8
  %589 = extractvalue { i8*, i32 } %587, 1
  store i32 %589, i32* %12, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %19) #3
  br label %658

; <label>:590:                                    ; preds = %525
  %591 = load i32, i32* %22, align 4
  %592 = load i32, i32* %7, align 4
  %593 = sub i32 %592, 994660643
  %594 = add i32 %593, %591
  %595 = add i32 %594, 994660643
  %596 = add nsw i32 %592, %591
  store i32 %595, i32* %7, align 4
  br label %518

; <label>:597:                                    ; preds = %581
  %598 = load i32, i32* @x.30
  %599 = load i32, i32* @y.31
  %600 = add i32 %598, 964056727
  %601 = sub i32 %600, 1
  %602 = sub i32 %601, 964056727
  %603 = sub i32 %598, 1
  %604 = mul i32 %598, %602
  %605 = urem i32 %604, 2
  %606 = icmp eq i32 %605, 0
  %607 = icmp slt i32 %599, 10
  %608 = xor i1 %606, true
  %609 = xor i1 %607, true
  %610 = xor i1 true, true
  %611 = and i1 %608, true
  %612 = and i1 %606, %610
  %613 = and i1 %609, true
  %614 = and i1 %607, %610
  %615 = or i1 %611, %612
  %616 = or i1 %613, %614
  %617 = xor i1 %615, %616
  %618 = or i1 %608, %609
  %619 = xor i1 %618, true
  %620 = or i1 true, %610
  %621 = and i1 %619, %620
  %622 = or i1 %617, %621
  %623 = or i1 %606, %607
  br i1 %622, label %624, label %773

; <label>:624:                                    ; preds = %597, %773
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %19) #3
  store i32 0, i32* %18, align 4
  %625 = load i32, i32* @x.30
  %626 = load i32, i32* @y.31
  %627 = add i32 %625, -574526597
  %628 = sub i32 %627, 1
  %629 = sub i32 %628, -574526597
  %630 = sub i32 %625, 1
  %631 = mul i32 %625, %629
  %632 = urem i32 %631, 2
  %633 = icmp eq i32 %632, 0
  %634 = icmp slt i32 %626, 10
  %635 = xor i1 %633, true
  %636 = xor i1 %634, true
  %637 = xor i1 false, true
  %638 = and i1 %635, false
  %639 = and i1 %633, %637
  %640 = and i1 %636, false
  %641 = and i1 %634, %637
  %642 = or i1 %638, %639
  %643 = or i1 %640, %641
  %644 = xor i1 %642, %643
  %645 = or i1 %635, %636
  %646 = xor i1 %645, true
  %647 = or i1 false, %637
  %648 = and i1 %646, %647
  %649 = or i1 %644, %648
  %650 = or i1 %633, %634
  br i1 %649, label %651, label %773

; <label>:651:                                    ; preds = %624
  br label %652

; <label>:652:                                    ; preds = %651, %472
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %13) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %8) #3
  %653 = load i32, i32* %18, align 4
  br label %654

; <label>:654:                                    ; preds = %652
  %655 = icmp eq i32 %653, 3
  br i1 %655, label %702, label %656

; <label>:656:                                    ; preds = %654
  br label %657

; <label>:657:                                    ; preds = %656
  br label %24

; <label>:658:                                    ; preds = %586, %582, %272
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %13) #3
  br label %659

; <label>:659:                                    ; preds = %658, %268, %264
  %660 = load i32, i32* @x.30
  %661 = load i32, i32* @y.31
  %662 = add i32 %660, -1294334540
  %663 = sub i32 %662, 1
  %664 = sub i32 %663, -1294334540
  %665 = sub i32 %660, 1
  %666 = mul i32 %660, %664
  %667 = urem i32 %666, 2
  %668 = icmp eq i32 %667, 0
  %669 = icmp slt i32 %661, 10
  %670 = xor i1 %668, true
  %671 = xor i1 %669, true
  %672 = xor i1 false, true
  %673 = and i1 %670, false
  %674 = and i1 %668, %672
  %675 = and i1 %671, false
  %676 = and i1 %669, %672
  %677 = or i1 %673, %674
  %678 = or i1 %675, %676
  %679 = xor i1 %677, %678
  %680 = or i1 %670, %671
  %681 = xor i1 %680, true
  %682 = or i1 false, %672
  %683 = and i1 %681, %682
  %684 = or i1 %679, %683
  %685 = or i1 %668, %669
  br i1 %684, label %686, label %774

; <label>:686:                                    ; preds = %659, %774
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %8) #3
  %687 = load i32, i32* @x.30
  %688 = load i32, i32* @y.31
  %689 = add i32 %687, -691307106
  %690 = sub i32 %689, 1
  %691 = sub i32 %690, -691307106
  %692 = sub i32 %687, 1
  %693 = mul i32 %687, %691
  %694 = urem i32 %693, 2
  %695 = icmp eq i32 %694, 0
  %696 = icmp slt i32 %688, 10
  %697 = and i1 %695, %696
  %698 = xor i1 %695, %696
  %699 = or i1 %697, %698
  %700 = or i1 %695, %696
  br i1 %699, label %701, label %774

; <label>:701:                                    ; preds = %686
  br label %704

; <label>:702:                                    ; preds = %654
  %703 = load i32, i32* %7, align 4
  ret i32 %703

; <label>:704:                                    ; preds = %701, %263
  %705 = load i8*, i8** %11, align 8
  %706 = load i32, i32* %12, align 4
  %707 = insertvalue { i8*, i32 } undef, i8* %705, 0
  %708 = insertvalue { i8*, i32 } %707, i32 %706, 1
  resume { i8*, i32 } %708

; <label>:709:                                    ; preds = %57, %30
  %710 = load i32, i32* %5, align 4
  %711 = sext i32 %710 to i64
  %712 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %711) #3
  store i32 0, i32* %712, align 4
  br label %57

; <label>:713:                                    ; preds = %103, %88
  br label %103

; <label>:714:                                    ; preds = %150, %124
  %715 = load i32, i32* %123, align 4
  store i32 %715, i32* %15, align 4
  br label %150

; <label>:716:                                    ; preds = %202, %188
  br label %202

; <label>:717:                                    ; preds = %245, %230
  %718 = landingpad { i8*, i32 }
          cleanup
  %719 = extractvalue { i8*, i32 } %718, 0
  store i8* %719, i8** %11, align 8
  %720 = extractvalue { i8*, i32 } %718, 1
  store i32 %720, i32* %12, align 4
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %10) #3
  br label %245

; <label>:721:                                    ; preds = %291, %276
  %722 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %23, i32 0, i32 0
  %723 = load i32, i32* %15, align 4
  %724 = sext i32 %723 to i64
  %725 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %722, i64 %724) #3
  %726 = load i32, i32* %16, align 4
  %727 = sext i32 %726 to i64
  %728 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %725, i64 %727) #3
  %729 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %728, i32 0, i32 0
  %730 = load i32, i32* %729, align 4
  store i32 %730, i32* %17, align 4
  %731 = load i32, i32* %17, align 4
  %732 = sext i32 %731 to i64
  %733 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %732) #3
  %734 = load i32, i32* %733, align 4
  %735 = icmp ne i32 %734, -1
  br label %291

; <label>:736:                                    ; preds = %359, %332
  br label %359

; <label>:737:                                    ; preds = %390, %375
  %738 = load i32, i32* %15, align 4
  %739 = sext i32 %738 to i64
  %740 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %739) #3
  %741 = load i32, i32* %740, align 4
  %742 = sub i32 0, %741
  %743 = add i32 0, %742
  %744 = sub i32 0, %741
  %745 = sub i32 %743, -593891094
  %746 = add i32 %745, 1
  %747 = add i32 %746, -593891094
  %748 = add i32 %743, 1
  %749 = add i32 %741, -2083228423
  %750 = sub i32 %749, 1
  %751 = sub i32 %750, -2083228423
  %752 = sub i32 %741, 1
  %753 = mul i32 %751, 1
  %754 = shl i32 %741, 1
  %755 = sub i32 0, %741
  %756 = add i32 0, %755
  %757 = sub i32 0, %741
  %758 = add i32 %756, -973379941
  %759 = add i32 %758, 1
  %760 = sub i32 %759, -973379941
  %761 = add i32 %756, 1
  %762 = sub i32 0, %741
  %763 = sub i32 0, 1
  %764 = add i32 %762, %763
  %765 = sub i32 0, %764
  %766 = add nsw i32 %741, 1
  %767 = load i32, i32* %17, align 4
  %768 = sext i32 %767 to i64
  %769 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %8, i64 %768) #3
  store i32 %765, i32* %769, align 4
  br label %390

; <label>:770:                                    ; preds = %450, %436
  br label %450

; <label>:771:                                    ; preds = %502, %476
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %21) #3
  br label %502

; <label>:772:                                    ; preds = %554, %528
  br label %554

; <label>:773:                                    ; preds = %624, %597
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %19) #3
  store i32 0, i32* %18, align 4
  br label %624

; <label>:774:                                    ; preds = %686, %659
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"* %8) #3
  br label %686
}

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEi(%"class.std::basic_ostream"*, i32) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZNSolsEPFRSoS_E(%"class.std::basic_ostream"*, %"class.std::basic_ostream"* (%"class.std::basic_ostream"*)*) #1

declare dereferenceable(272) %"class.std::basic_ostream"* @_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_(%"class.std::basic_ostream"* dereferenceable(272)) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN5DinicIiED2Ev(%struct.Dinic*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %struct.Dinic*, align 8
  store %struct.Dinic* %0, %struct.Dinic** %2, align 8
  %3 = load %struct.Dinic*, %struct.Dinic** %2, align 8
  %4 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %3, i32 0, i32 0
  call void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.13"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"class.std::vector.5"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.5"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %2, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %2, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8
  %10 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %12, align 8
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %14) #3
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"* %9, %"class.std::__cxx11::basic_string"* %13, %"class.std::allocator.7"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.34
  %18 = load i32, i32* @y.35
  %19 = add i32 %17, -1654568074
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1654568074
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %96

; <label>:43:                                     ; preds = %16, %96
  %44 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"* %44) #3
  %45 = load i32, i32* @x.34
  %46 = load i32, i32* @y.35
  %47 = add i32 %45, -67881695
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -67881695
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %96

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.34
  %62 = load i32, i32* @y.35
  %63 = add i32 %61, 212000499
  %64 = sub i32 %63, 1
  %65 = sub i32 %64, 212000499
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  br i1 %73, label %75, label %98

; <label>:75:                                     ; preds = %60, %98
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  store i8* %77, i8** %3, align 8
  %78 = extractvalue { i8*, i32 } %76, 1
  store i32 %78, i32* %4, align 4
  %79 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"* %79) #3
  %80 = load i32, i32* @x.34
  %81 = load i32, i32* @y.35
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  br i1 %91, label %93, label %98

; <label>:93:                                     ; preds = %75
  br label %94

; <label>:94:                                     ; preds = %93
  %95 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %95) #10
  unreachable

; <label>:96:                                     ; preds = %43, %16
  %97 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"* %97) #3
  br label %43

; <label>:98:                                     ; preds = %75, %60
  %99 = landingpad { i8*, i32 }
          catch i8* null
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %3, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %4, align 4
  %102 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"* %102) #3
  br label %75
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %8, align 8
  %10 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %12, align 8
  %14 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.0"* %9, %"class.std::vector.0"* %13, %"class.std::allocator"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.36
  %18 = load i32, i32* @y.37
  %19 = add i32 %17, -1757708704
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1757708704
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %149

; <label>:31:                                     ; preds = %16, %149
  %32 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %32) #3
  %33 = load i32, i32* @x.36
  %34 = load i32, i32* @y.37
  %35 = add i32 %33, 940633775
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 940633775
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %149

; <label>:59:                                     ; preds = %31
  ret void

; <label>:60:                                     ; preds = %1
  %61 = load i32, i32* @x.36
  %62 = load i32, i32* @y.37
  %63 = sub i32 %61, 425701748
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 425701748
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %151

; <label>:87:                                     ; preds = %60, %151
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %3, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %4, align 4
  %91 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %91) #3
  %92 = load i32, i32* @x.36
  %93 = load i32, i32* @y.37
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %151

; <label>:105:                                    ; preds = %87
  br label %106

; <label>:106:                                    ; preds = %105
  %107 = load i32, i32* @x.36
  %108 = load i32, i32* @y.37
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  br i1 %118, label %120, label %156

; <label>:120:                                    ; preds = %106, %156
  %121 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %121) #10
  %122 = load i32, i32* @x.36
  %123 = load i32, i32* @y.37
  %124 = sub i32 %122, -1588885234
  %125 = sub i32 %124, 1
  %126 = add i32 %125, -1588885234
  %127 = sub i32 %122, 1
  %128 = mul i32 %122, %126
  %129 = urem i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = icmp slt i32 %123, 10
  %132 = xor i1 %130, true
  %133 = xor i1 %131, true
  %134 = xor i1 false, true
  %135 = and i1 %132, false
  %136 = and i1 %130, %134
  %137 = and i1 %133, false
  %138 = and i1 %131, %134
  %139 = or i1 %135, %136
  %140 = or i1 %137, %138
  %141 = xor i1 %139, %140
  %142 = or i1 %132, %133
  %143 = xor i1 %142, true
  %144 = or i1 false, %134
  %145 = and i1 %143, %144
  %146 = or i1 %141, %145
  %147 = or i1 %130, %131
  br i1 %146, label %148, label %156

; <label>:148:                                    ; preds = %120
  unreachable

; <label>:149:                                    ; preds = %31, %16
  %150 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %150) #3
  br label %31

; <label>:151:                                    ; preds = %87, %60
  %152 = landingpad { i8*, i32 }
          catch i8* null
  %153 = extractvalue { i8*, i32 } %152, 0
  store i8* %153, i8** %3, align 8
  %154 = extractvalue { i8*, i32 } %152, 1
  store i32 %154, i32* %4, align 4
  %155 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"* %155) #3
  br label %87

; <label>:156:                                    ; preds = %120, %106
  %157 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %157) #10
  br label %120
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %14 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %15 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %14) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"* %9, %"class.std::vector.18"* %13, %"class.std::allocator.15"* dereferenceable(1) %15)
          to label %16 unwind label %59

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.38
  %18 = load i32, i32* @y.39
  %19 = add i32 %17, -1541261205
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1541261205
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %107

; <label>:31:                                     ; preds = %16, %107
  %32 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.14"* %32) #3
  %33 = load i32, i32* @x.38
  %34 = load i32, i32* @y.39
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  br i1 %56, label %58, label %107

; <label>:58:                                     ; preds = %31
  ret void

; <label>:59:                                     ; preds = %1
  %60 = load i32, i32* @x.38
  %61 = load i32, i32* @y.39
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %109

; <label>:73:                                     ; preds = %59, %109
  %74 = landingpad { i8*, i32 }
          catch i8* null
  %75 = extractvalue { i8*, i32 } %74, 0
  store i8* %75, i8** %3, align 8
  %76 = extractvalue { i8*, i32 } %74, 1
  store i32 %76, i32* %4, align 4
  %77 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.14"* %77) #3
  %78 = load i32, i32* @x.38
  %79 = load i32, i32* @y.39
  %80 = sub i32 %78, 528239711
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 528239711
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  br i1 %102, label %104, label %109

; <label>:104:                                    ; preds = %73
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %106) #10
  unreachable

; <label>:107:                                    ; preds = %31, %16
  %108 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.14"* %108) #3
  br label %31

; <label>:109:                                    ; preds = %73, %59
  %110 = landingpad { i8*, i32 }
          catch i8* null
  %111 = extractvalue { i8*, i32 } %110, 0
  store i8* %111, i8** %3, align 8
  %112 = extractvalue { i8*, i32 } %110, 1
  store i32 %112, i32* %4, align 4
  %113 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.14"* %113) #3
  br label %73
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.40
  %7 = load i32, i32* @y.41
  %8 = add i32 %6, -1547850926
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1547850926
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -761704195, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -761704195, label %20
    i32 1604200978, label %40
    i32 1666128314, label %72
    i32 2118633447, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1604200978, i32 2118633447
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::vector.18"*, align 8
  %42 = alloca %"class.std::vector.18"*, align 8
  %43 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %41, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %42, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %43, align 8
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %42, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.18"* %44, %"class.std::vector.18"* %45)
  %46 = load i32, i32* @x.40
  %47 = load i32, i32* @y.41
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1666128314, i32 2118633447
  store i32 %71, i32* %16
  br label %79

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.18"*, align 8
  %75 = alloca %"class.std::vector.18"*, align 8
  %76 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %74, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %75, align 8
  store %"class.std::allocator.15"* %2, %"class.std::allocator.15"** %76, align 8
  %77 = load %"class.std::vector.18"*, %"class.std::vector.18"** %74, align 8
  %78 = load %"class.std::vector.18"*, %"class.std::vector.18"** %75, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.18"* %77, %"class.std::vector.18"* %78)
  store i32 1604200978, i32* %16
  br label %79

; <label>:79:                                     ; preds = %73, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %5 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %13, align 8
  %15 = ptrtoint %"class.std::vector.18"* %11 to i64
  %16 = ptrtoint %"class.std::vector.18"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.14"* %5, %"class.std::vector.18"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #10
  unreachable
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #10
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5DinicIiE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.18"* %5, %"class.std::vector.18"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN5DinicIiE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  %6 = alloca i32
  store i32 -950055955, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %149
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -950055955, label %10
    i32 2115556091, label %26
    i32 969111157, label %45
    i32 -1206310332, label %48
    i32 -434849518, label %51
    i32 1201562568, label %66
    i32 218476190, label %84
    i32 21788589, label %85
    i32 607534951, label %112
    i32 819658542, label %140
    i32 -103847849, label %141
    i32 1709153230, label %145
    i32 1304505371, label %148
  ]

; <label>:9:                                      ; preds = %7
  br label %149

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.50
  %12 = load i32, i32* @y.51
  %13 = add i32 %11, 1822620895
  %14 = sub i32 %13, 1
  %15 = sub i32 %14, 1822620895
  %16 = sub i32 %11, 1
  %17 = mul i32 %11, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %12, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 2115556091, i32 -103847849
  store i32 %25, i32* %6
  br label %149

; <label>:26:                                     ; preds = %7
  %27 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %28 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %29 = icmp ne %"class.std::vector.18"* %27, %28
  store i1 %29, i1* %3
  %30 = load i32, i32* @x.50
  %31 = load i32, i32* @y.51
  %32 = add i32 %30, -1132313254
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1132313254
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 969111157, i32 -103847849
  store i32 %44, i32* %6
  br label %149

; <label>:45:                                     ; preds = %7
  %46 = load volatile i1, i1* %3
  %47 = select i1 %46, i32 -1206310332, i32 21788589
  store i32 %47, i32* %6
  br label %149

; <label>:48:                                     ; preds = %7
  %49 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %50 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIN5DinicIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.18"* dereferenceable(24) %49) #3
  call void @_ZSt8_DestroyISt6vectorIN5DinicIiE4edgeESaIS3_EEEvPT_(%"class.std::vector.18"* %50)
  store i32 -434849518, i32* %6
  br label %149

; <label>:51:                                     ; preds = %7
  %52 = load i32, i32* @x.50
  %53 = load i32, i32* @y.51
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 1201562568, i32 1709153230
  store i32 %65, i32* %6
  br label %149

; <label>:66:                                     ; preds = %7
  %67 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %68 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %67, i32 1
  store %"class.std::vector.18"* %68, %"class.std::vector.18"** %4, align 8
  %69 = load i32, i32* @x.50
  %70 = load i32, i32* @y.51
  %71 = add i32 %69, 1807357838
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, 1807357838
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 218476190, i32 1709153230
  store i32 %83, i32* %6
  br label %149

; <label>:84:                                     ; preds = %7
  store i32 -950055955, i32* %6
  br label %149

; <label>:85:                                     ; preds = %7
  %86 = load i32, i32* @x.50
  %87 = load i32, i32* @y.51
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 false, true
  %98 = and i1 %95, false
  %99 = and i1 %93, %97
  %100 = and i1 %96, false
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 false, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 607534951, i32 1304505371
  store i32 %111, i32* %6
  br label %149

; <label>:112:                                    ; preds = %7
  %113 = load i32, i32* @x.50
  %114 = load i32, i32* @y.51
  %115 = add i32 %113, -254593685
  %116 = sub i32 %115, 1
  %117 = sub i32 %116, -254593685
  %118 = sub i32 %113, 1
  %119 = mul i32 %113, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %114, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 true, true
  %126 = and i1 %123, true
  %127 = and i1 %121, %125
  %128 = and i1 %124, true
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 true, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 819658542, i32 1304505371
  store i32 %139, i32* %6
  br label %149

; <label>:140:                                    ; preds = %7
  ret void

; <label>:141:                                    ; preds = %7
  %142 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %143 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %144 = icmp ne %"class.std::vector.18"* %142, %143
  store i32 2115556091, i32* %6
  br label %149

; <label>:145:                                    ; preds = %7
  %146 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %147 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %146, i32 1
  store %"class.std::vector.18"* %147, %"class.std::vector.18"** %4, align 8
  store i32 1201562568, i32* %6
  br label %149

; <label>:148:                                    ; preds = %7
  store i32 607534951, i32* %6
  br label %149

; <label>:149:                                    ; preds = %148, %145, %141, %112, %85, %84, %66, %51, %48, %45, %26, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN5DinicIiE4edgeESaIS3_EEEvPT_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIN5DinicIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.54
  %6 = load i32, i32* @y.55
  %7 = sub i32 %5, -293357265
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -293357265
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -942732264, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -942732264, label %19
    i32 247100390, label %27
    i32 -1903303407, label %46
    i32 -1437873339, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 247100390, i32 -1437873339
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to i8*
  %31 = bitcast i8* %30 to %"class.std::vector.18"*
  store %"class.std::vector.18"* %31, %"class.std::vector.18"** %2
  %32 = load i32, i32* @x.54
  %33 = load i32, i32* @y.55
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1903303407, i32 -1437873339
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %2
  ret %"class.std::vector.18"* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %49, align 8
  %50 = load %"class.std::vector.18"*, %"class.std::vector.18"** %49, align 8
  %51 = bitcast %"class.std::vector.18"* %50 to i8*
  %52 = bitcast i8* %51 to %"class.std::vector.18"*
  store i32 247100390, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.56
  %3 = load i32, i32* @y.57
  %4 = add i32 %2, 1899788926
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, 1899788926
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %121

; <label>:28:                                     ; preds = %1, %121
  %29 = alloca %"class.std::vector.18"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %29, align 8
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %29, align 8
  %33 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %35, align 8
  %37 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %39, align 8
  %41 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  %42 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %41) #3
  %43 = load i32, i32* @x.56
  %44 = load i32, i32* @y.57
  %45 = add i32 %43, -884247984
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -884247984
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %121

; <label>:69:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"* %36, %"struct.Dinic<int>::edge"* %40, %"class.std::allocator.20"* dereferenceable(1) %42)
          to label %70 unwind label %72

; <label>:70:                                     ; preds = %69
  %71 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %71) #3
  ret void

; <label>:72:                                     ; preds = %69
  %73 = load i32, i32* @x.56
  %74 = load i32, i32* @y.57
  %75 = sub i32 %73, -42070802
  %76 = sub i32 %75, 1
  %77 = add i32 %76, -42070802
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = and i1 %81, %82
  %84 = xor i1 %81, %82
  %85 = or i1 %83, %84
  %86 = or i1 %81, %82
  br i1 %85, label %87, label %136

; <label>:87:                                     ; preds = %72, %136
  %88 = landingpad { i8*, i32 }
          catch i8* null
  %89 = extractvalue { i8*, i32 } %88, 0
  store i8* %89, i8** %30, align 8
  %90 = extractvalue { i8*, i32 } %88, 1
  store i32 %90, i32* %31, align 4
  %91 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %91) #3
  %92 = load i32, i32* @x.56
  %93 = load i32, i32* @y.57
  %94 = sub i32 %92, -1178440796
  %95 = sub i32 %94, 1
  %96 = add i32 %95, -1178440796
  %97 = sub i32 %92, 1
  %98 = mul i32 %92, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %93, 10
  %102 = xor i1 %100, true
  %103 = xor i1 %101, true
  %104 = xor i1 true, true
  %105 = and i1 %102, true
  %106 = and i1 %100, %104
  %107 = and i1 %103, true
  %108 = and i1 %101, %104
  %109 = or i1 %105, %106
  %110 = or i1 %107, %108
  %111 = xor i1 %109, %110
  %112 = or i1 %102, %103
  %113 = xor i1 %112, true
  %114 = or i1 true, %104
  %115 = and i1 %113, %114
  %116 = or i1 %111, %115
  %117 = or i1 %100, %101
  br i1 %116, label %118, label %136

; <label>:118:                                    ; preds = %87
  br label %119

; <label>:119:                                    ; preds = %118
  %120 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %120) #10
  unreachable

; <label>:121:                                    ; preds = %28, %1
  %122 = alloca %"class.std::vector.18"*, align 8
  %123 = alloca i8*
  %124 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %122, align 8
  %125 = load %"class.std::vector.18"*, %"class.std::vector.18"** %122, align 8
  %126 = bitcast %"class.std::vector.18"* %125 to %"struct.std::_Vector_base.19"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %127, i32 0, i32 0
  %129 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %128, align 8
  %130 = bitcast %"class.std::vector.18"* %125 to %"struct.std::_Vector_base.19"*
  %131 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %130, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %131, i32 0, i32 1
  %133 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %132, align 8
  %134 = bitcast %"class.std::vector.18"* %125 to %"struct.std::_Vector_base.19"*
  %135 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %134) #3
  br label %28

; <label>:136:                                    ; preds = %87, %72
  %137 = landingpad { i8*, i32 }
          catch i8* null
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %30, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %31, align 4
  %140 = bitcast %"class.std::vector.18"* %32 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %140) #3
  br label %87
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %7 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  call void @_ZSt8_DestroyIPN5DinicIiE4edgeEEvT_S4_(%"struct.Dinic<int>::edge"* %7, %"struct.Dinic<int>::edge"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.60
  %6 = load i32, i32* @y.61
  %7 = add i32 %5, -1715409803
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1715409803
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1595926498, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1595926498, label %19
    i32 -1998901124, label %27
    i32 201343231, label %59
    i32 -111009025, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1998901124, i32 -111009025
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %28, align 8
  %29 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %30 to %"class.std::allocator.20"*
  store %"class.std::allocator.20"* %31, %"class.std::allocator.20"** %2
  %32 = load i32, i32* @x.60
  %33 = load i32, i32* @y.61
  %34 = add i32 %32, 2039562406
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 2039562406
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 201343231, i32 -111009025
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %62, align 8
  %63 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %64 to %"class.std::allocator.20"*
  store i32 -1998901124, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.62
  %3 = load i32, i32* @y.63
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %72

; <label>:27:                                     ; preds = %1, %72
  %28 = alloca %"struct.std::_Vector_base.19"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %28, align 8
  %31 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %35, i32 0, i32 2
  %37 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %39, align 8
  %41 = ptrtoint %"struct.Dinic<int>::edge"* %37 to i64
  %42 = ptrtoint %"struct.Dinic<int>::edge"* %40 to i64
  %43 = add i64 %41, -8001160627719677958
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -8001160627719677958
  %46 = sub i64 %41, %42
  %47 = sdiv exact i64 %45, 12
  %48 = load i32, i32* @x.62
  %49 = load i32, i32* @y.63
  %50 = sub i32 %48, -1259942735
  %51 = sub i32 %50, 1
  %52 = add i32 %51, -1259942735
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  br i1 %60, label %62, label %72

; <label>:62:                                     ; preds = %27
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %31, %"struct.Dinic<int>::edge"* %34, i64 %47)
          to label %63 unwind label %65

; <label>:63:                                     ; preds = %62
  %64 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %64) #3
  ret void

; <label>:65:                                     ; preds = %62
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %29, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %30, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %31, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %71) #10
  unreachable

; <label>:72:                                     ; preds = %27, %1
  %73 = alloca %"struct.std::_Vector_base.19"*, align 8
  %74 = alloca i8*
  %75 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %73, align 8
  %76 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %73, align 8
  %77 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %77, i32 0, i32 0
  %79 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %78, align 8
  %80 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %76, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %80, i32 0, i32 2
  %82 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %81, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %76, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %84, align 8
  %86 = ptrtoint %"struct.Dinic<int>::edge"* %82 to i64
  %87 = ptrtoint %"struct.Dinic<int>::edge"* %85 to i64
  %88 = sub i64 0, %86
  %89 = add i64 0, %88
  %90 = sub i64 0, %86
  %91 = sub i64 0, %89
  %92 = sub i64 0, %87
  %93 = add i64 %91, %92
  %94 = sub i64 0, %93
  %95 = add i64 %89, %87
  %96 = sub i64 0, %87
  %97 = add i64 %86, %96
  %98 = sub i64 %86, %87
  %99 = sub i64 %97, -8456660822347275761
  %100 = sub i64 %99, 12
  %101 = add i64 %100, -8456660822347275761
  %102 = sub i64 %97, 12
  %103 = mul i64 %101, 12
  %104 = shl i64 %97, 12
  %105 = shl i64 %97, 12
  %106 = sub i64 0, 12
  %107 = add i64 %97, %106
  %108 = sub i64 %97, 12
  %109 = mul i64 %107, 12
  %110 = sub i64 %97, -7945126057287091869
  %111 = sub i64 %110, 12
  %112 = add i64 %111, -7945126057287091869
  %113 = sub i64 %97, 12
  %114 = mul i64 %112, 12
  %115 = sdiv exact i64 %97, 12
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN5DinicIiE4edgeEEvT_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.64
  %6 = load i32, i32* @y.65
  %7 = sub i32 %5, 861795625
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 861795625
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2045929026, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2045929026, label %19
    i32 174925641, label %27
    i32 -1676751223, label %47
    i32 1752274784, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 174925641, i32 1752274784
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.Dinic<int>::edge"*, align 8
  %29 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %28, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %29, align 8
  %30 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %28, align 8
  %31 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %29, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5DinicIiE4edgeEEEvT_S6_(%"struct.Dinic<int>::edge"* %30, %"struct.Dinic<int>::edge"* %31)
  %32 = load i32, i32* @x.64
  %33 = load i32, i32* @y.65
  %34 = sub i32 %32, -52139098
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -52139098
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1676751223, i32 1752274784
  store i32 %46, i32* %15
  br label %53

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.Dinic<int>::edge"*, align 8
  %50 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %49, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %50, align 8
  %51 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %49, align 8
  %52 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %50, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5DinicIiE4edgeEEEvT_S6_(%"struct.Dinic<int>::edge"* %51, %"struct.Dinic<int>::edge"* %52)
  store i32 174925641, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN5DinicIiE4edgeEEEvT_S6_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.Dinic<int>::edge"*, align 8
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %3, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"*, %"struct.Dinic<int>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %9, %"struct.std::_Vector_base.19"** %5
  %10 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  store %"struct.Dinic<int>::edge"* %10, %"struct.Dinic<int>::edge"** %4
  %11 = alloca i32
  store i32 1055122796, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %88
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1055122796, label %15
    i32 -852493658, label %19
    i32 -1988939677, label %47
    i32 555903934, label %80
    i32 -299858314, label %81
    i32 805004304, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %88

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  %17 = icmp ne %"struct.Dinic<int>::edge"* %16, null
  %18 = select i1 %17, i32 -852493658, i32 -299858314
  store i32 %18, i32* %11
  br label %88

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.68
  %21 = load i32, i32* @y.69
  %22 = add i32 %20, -1278694944
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1278694944
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -1988939677, i32 805004304
  store i32 %46, i32* %11
  br label %88

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %49 to %"class.std::allocator.20"*
  %51 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.20"* dereferenceable(1) %50, %"struct.Dinic<int>::edge"* %51, i64 %52)
  %53 = load i32, i32* @x.68
  %54 = load i32, i32* @y.69
  %55 = add i32 %53, 60636855
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 60636855
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 555903934, i32 805004304
  store i32 %79, i32* %11
  br label %88

; <label>:80:                                     ; preds = %12
  store i32 -299858314, i32* %11
  br label %88

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  %83 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %84 to %"class.std::allocator.20"*
  %86 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %87 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.20"* dereferenceable(1) %85, %"struct.Dinic<int>::edge"* %86, i64 %87)
  store i32 -1988939677, i32* %11
  br label %88

; <label>:88:                                     ; preds = %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %3 to %"class.std::allocator.20"*
  call void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.20"* dereferenceable(1), %"struct.Dinic<int>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.20"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = bitcast %"class.std::allocator.20"* %7 to %"class.__gnu_cxx::new_allocator.21"*
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.21"* %8, %"struct.Dinic<int>::edge"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Dinic<int>::edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %9 = bitcast %"struct.Dinic<int>::edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.14"*, %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %9, %"struct.std::_Vector_base.14"** %5
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %10, %"class.std::vector.18"** %4
  %11 = alloca i32
  store i32 -972674797, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %71
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -972674797, label %15
    i32 -912677379, label %19
    i32 -1562311832, label %25
    i32 -396420601, label %41
    i32 -58453466, label %69
    i32 1881937440, label %70
  ]

; <label>:14:                                     ; preds = %12
  br label %71

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %17 = icmp ne %"class.std::vector.18"* %16, null
  %18 = select i1 %17, i32 -912677379, i32 -1562311832
  store i32 %18, i32* %11
  br label %71

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.15"*
  %23 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.15"* dereferenceable(1) %22, %"class.std::vector.18"* %23, i64 %24)
  store i32 -1562311832, i32* %11
  br label %71

; <label>:25:                                     ; preds = %12
  %26 = load i32, i32* @x.78
  %27 = load i32, i32* @y.79
  %28 = sub i32 %26, 337956533
  %29 = sub i32 %28, 1
  %30 = add i32 %29, 337956533
  %31 = sub i32 %26, 1
  %32 = mul i32 %26, %30
  %33 = urem i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = icmp slt i32 %27, 10
  %36 = and i1 %34, %35
  %37 = xor i1 %34, %35
  %38 = or i1 %36, %37
  %39 = or i1 %34, %35
  %40 = select i1 %38, i32 -396420601, i32 1881937440
  store i32 %40, i32* %11
  br label %71

; <label>:41:                                     ; preds = %12
  %42 = load i32, i32* @x.78
  %43 = load i32, i32* @y.79
  %44 = add i32 %42, 2056278310
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 2056278310
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -58453466, i32 1881937440
  store i32 %68, i32* %11
  br label %71

; <label>:69:                                     ; preds = %12
  ret void

; <label>:70:                                     ; preds = %12
  store i32 -396420601, i32* %11
  br label %71

; <label>:71:                                     ; preds = %70, %41, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEED2Ev(%"class.std::allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator.15"* dereferenceable(1), %"class.std::vector.18"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.15"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %4, align 8
  %8 = bitcast %"class.std::allocator.15"* %7 to %"class.__gnu_cxx::new_allocator.16"*
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.16"* %8, %"class.std::vector.18"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.16"*, %"class.std::vector.18"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %4, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %9 = bitcast %"class.std::vector.18"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEED2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.90
  %5 = load i32, i32* @y.91
  %6 = sub i32 %4, -1145220683
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1145220683
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1201321929, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1201321929, label %18
    i32 1055526531, label %26
    i32 -1089260578, label %57
    i32 -625397401, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1055526531, i32 -625397401
  store i32 %25, i32* %14
  br label %62

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %27, align 8
  %28 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %28, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %29)
  %30 = load i32, i32* @x.90
  %31 = load i32, i32* @y.91
  %32 = add i32 %30, 1143500079
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1143500079
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -1089260578, i32 -625397401
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %59, align 8
  %60 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %59, align 8
  %61 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %60, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %61)
  store i32 1055526531, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.92
  %5 = load i32, i32* @y.93
  %6 = add i32 %4, 725914023
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 725914023
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -490681113, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -490681113, label %18
    i32 1809922068, label %38
    i32 -199668922, label %60
    i32 -1152950717, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1809922068, i32 -1152950717
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40 to %"class.std::allocator.2"*
  call void @_ZNSaISt4pairIiiEEC2Ev(%"class.std::allocator.2"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %44, align 8
  %45 = load i32, i32* @x.92
  %46 = load i32, i32* @y.93
  %47 = sub i32 %45, 2064493026
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 2064493026
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -199668922, i32 -1152950717
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %63 to %"class.std::allocator.2"*
  call void @_ZNSaISt4pairIiiEEC2Ev(%"class.std::allocator.2"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %63, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %63, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %63, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %67, align 8
  store i32 1809922068, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEEC2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.98
  %7 = load i32, i32* @y.99
  %8 = add i32 %6, -1362113471
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -1362113471
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 223369796, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 223369796, label %20
    i32 895708200, label %40
    i32 -1661748725, label %73
    i32 751486963, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 895708200, i32 751486963
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.std::pair"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  %43 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %42, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %43, align 8
  %44 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  call void @_ZSt8_DestroyIPSt4pairIiiEEvT_S3_(%"struct.std::pair"* %44, %"struct.std::pair"* %45)
  %46 = load i32, i32* @x.98
  %47 = load i32, i32* @y.99
  %48 = add i32 %46, -753066132
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -753066132
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -1661748725, i32 751486963
  store i32 %72, i32* %16
  br label %80

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"struct.std::pair"*, align 8
  %76 = alloca %"struct.std::pair"*, align 8
  %77 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %75, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %76, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %77, align 8
  %78 = load %"struct.std::pair"*, %"struct.std::pair"** %75, align 8
  %79 = load %"struct.std::pair"*, %"struct.std::pair"** %76, align 8
  call void @_ZSt8_DestroyIPSt4pairIiiEEvT_S3_(%"struct.std::pair"* %78, %"struct.std::pair"* %79)
  store i32 895708200, i32* %16
  br label %80

; <label>:80:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EED2Ev(%"struct.std::_Vector_base.1"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %5 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.std::pair"*, %"struct.std::pair"** %13, align 8
  %15 = ptrtoint %"struct.std::pair"* %11 to i64
  %16 = ptrtoint %"struct.std::pair"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 8
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %5, %"struct.std::pair"* %8, i64 %20)
          to label %21 unwind label %51

; <label>:21:                                     ; preds = %1
  %22 = load i32, i32* @x.102
  %23 = load i32, i32* @y.103
  %24 = sub i32 0, 1
  %25 = add i32 %22, %24
  %26 = sub i32 %22, 1
  %27 = mul i32 %22, %25
  %28 = urem i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = icmp slt i32 %23, 10
  %31 = and i1 %29, %30
  %32 = xor i1 %29, %30
  %33 = or i1 %31, %32
  %34 = or i1 %29, %30
  br i1 %33, label %35, label %58

; <label>:35:                                     ; preds = %21, %58
  %36 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %36) #3
  %37 = load i32, i32* @x.102
  %38 = load i32, i32* @y.103
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  br i1 %48, label %50, label %58

; <label>:50:                                     ; preds = %35
  ret void

; <label>:51:                                     ; preds = %1
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %3, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %4, align 4
  %55 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %55) #3
  br label %56

; <label>:56:                                     ; preds = %51
  %57 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %57) #10
  unreachable

; <label>:58:                                     ; preds = %35, %21
  %59 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %59) #3
  br label %35
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt4pairIiiEEvT_S3_(%"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIiiEEEvT_S5_(%"struct.std::pair"* %5, %"struct.std::pair"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPSt4pairIiiEEEvT_S5_(%"struct.std::pair"*, %"struct.std::pair"*) #5 comdat align 2 {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"*, %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca %"struct.std::pair"*
  %5 = alloca %"struct.std::_Vector_base.1"*
  %6 = alloca %"struct.std::_Vector_base.1"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %6, align 8
  store %"struct.std::_Vector_base.1"* %9, %"struct.std::_Vector_base.1"** %5
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %10, %"struct.std::pair"** %4
  %11 = alloca i32
  store i32 462847986, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 462847986, label %15
    i32 1049732816, label %19
    i32 -1948700241, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %4
  %17 = icmp ne %"struct.std::pair"* %16, null
  %18 = select i1 %17, i32 1049732816, i32 -1948700241
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %21 to %"class.std::allocator.2"*
  %23 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1) %22, %"struct.std::pair"* %23, i64 %24)
  store i32 -1948700241, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.110
  %5 = load i32, i32* @y.111
  %6 = add i32 %4, 386633034
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 386633034
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1940363897, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1940363897, label %18
    i32 -1271311703, label %38
    i32 -268552131, label %57
    i32 -1601073244, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1271311703, i32 -1601073244
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40 to %"class.std::allocator.2"*
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"* %41) #3
  %42 = load i32, i32* @x.110
  %43 = load i32, i32* @y.111
  %44 = sub i32 %42, -1484955836
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1484955836
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -268552131, i32 -1601073244
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %59, align 8
  %60 = load %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %59, align 8
  %61 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %60 to %"class.std::allocator.2"*
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"* %61) #3
  store i32 -1271311703, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE10deallocateERS2_PS1_m(%"class.std::allocator.2"* dereferenceable(1), %"struct.std::pair"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.112
  %7 = load i32, i32* @y.113
  %8 = sub i32 %6, -1207497564
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1207497564
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1740371683, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %83
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1740371683, label %20
    i32 1597428686, label %40
    i32 -1862032350, label %74
    i32 -1309869597, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %83

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1597428686, i32 -1309869597
  store i32 %39, i32* %16
  br label %83

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.2"*, align 8
  %42 = alloca %"struct.std::pair"*, align 8
  %43 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %41, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %42, align 8
  store i64 %2, i64* %43, align 8
  %44 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %41, align 8
  %45 = bitcast %"class.std::allocator.2"* %44 to %"class.__gnu_cxx::new_allocator.3"*
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %42, align 8
  %47 = load i64, i64* %43, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"* %45, %"struct.std::pair"* %46, i64 %47)
  %48 = load i32, i32* @x.112
  %49 = load i32, i32* @y.113
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -1862032350, i32 -1309869597
  store i32 %73, i32* %16
  br label %83

; <label>:74:                                     ; preds = %17
  ret void

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::allocator.2"*, align 8
  %77 = alloca %"struct.std::pair"*, align 8
  %78 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %76, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %77, align 8
  store i64 %2, i64* %78, align 8
  %79 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %76, align 8
  %80 = bitcast %"class.std::allocator.2"* %79 to %"class.__gnu_cxx::new_allocator.3"*
  %81 = load %"struct.std::pair"*, %"struct.std::pair"** %77, align 8
  %82 = load i64, i64* %78, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"* %80, %"struct.std::pair"* %81, i64 %82)
  store i32 1597428686, i32* %16
  br label %83

; <label>:83:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE10deallocateEPS2_m(%"class.__gnu_cxx::new_allocator.3"*, %"struct.std::pair"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %5 = alloca %"struct.std::pair"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  %9 = bitcast %"struct.std::pair"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.3"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EEC2EmRKS5_(%"struct.std::_Vector_base"*, i64, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %9 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator"*, %"class.std::allocator"** %6, align 8
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %10, %"class.std::allocator"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE18_M_fill_initializeEmRKS3_(%"class.std::vector"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  %7 = load %"class.std::vector"*, %"class.std::vector"** %4, align 8
  %8 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = load i64, i64* %5, align 8
  %13 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %14 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %15 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %14) #3
  %16 = call %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt4pairIiiESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.0"* %11, i64 %12, %"class.std::vector.0"* dereferenceable(24) %13, %"class.std::allocator"* dereferenceable(1) %15)
  %17 = bitcast %"class.std::vector"* %7 to %"struct.std::_Vector_base"*
  %18 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %18, i32 0, i32 1
  store %"class.std::vector.0"* %16, %"class.std::vector.0"** %19, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %13, align 8
  %15 = ptrtoint %"class.std::vector.0"* %11 to i64
  %16 = ptrtoint %"class.std::vector.0"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.0"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implC2ERKS5_(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %5 to %"class.std::allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2ERKS4_(%"class.std::allocator"* %6, %"class.std::allocator"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE17_M_create_storageEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %8, i32 0, i32 0
  store %"class.std::vector.0"* %7, %"class.std::vector.0"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %13, i32 0, i32 1
  store %"class.std::vector.0"* %12, %"class.std::vector.0"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"class.std::vector.0"*, %"class.std::vector.0"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %20, i32 0, i32 2
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorISt4pairIiiESaIS1_EEEC2ERKS4_(%"class.std::allocator"*, %"class.std::allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store %"class.std::allocator"* %1, %"class.std::allocator"** %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"* %6, %"class.__gnu_cxx::new_allocator"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEEC2ERKS6_(%"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.136
  %6 = load i32, i32* @y.137
  %7 = add i32 %5, 2117543234
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 2117543234
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1622116693, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1622116693, label %19
    i32 -1261354799, label %27
    i32 2003221125, label %58
    i32 1500613940, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1261354799, i32 1500613940
  store i32 %26, i32* %15
  br label %63

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %28, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %28, align 8
  %31 = load i32, i32* @x.136
  %32 = load i32, i32* @y.137
  %33 = sub i32 %31, -1956970337
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1956970337
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 2003221125, i32 1500613940
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %60, align 8
  store %"class.__gnu_cxx::new_allocator"* %1, %"class.__gnu_cxx::new_allocator"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %60, align 8
  store i32 -1261354799, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca %"class.std::vector.0"*
  %5 = alloca i1
  %6 = alloca %"struct.std::_Vector_base"*
  %7 = alloca i64*
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.138
  %11 = load i32, i32* @y.139
  %12 = add i32 %10, -1679221577
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1679221577
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -829363995, i32* %20
  %21 = alloca %"class.std::vector.0"*
  br label %22

; <label>:22:                                     ; preds = %2, %159
  %23 = load i32, i32* %20
  switch i32 %23, label %24 [
    i32 -829363995, label %25
    i32 1478004637, label %33
    i32 608171801, label %56
    i32 1647710770, label %59
    i32 -519671803, label %86
    i32 -1031072064, label %107
    i32 1560288010, label %109
    i32 1163937508, label %110
    i32 1410179475, label %127
    i32 -1942316095, label %143
    i32 -790409069, label %145
    i32 1297688500, label %151
    i32 -178072756, label %158
  ]

; <label>:24:                                     ; preds = %22
  br label %159

; <label>:25:                                     ; preds = %22
  %26 = load volatile i1, i1* %9
  %27 = load volatile i1, i1* %8
  %28 = and i1 %26, %27
  %29 = xor i1 %26, %27
  %30 = or i1 %28, %29
  %31 = or i1 %26, %27
  %32 = select i1 %30, i32 1478004637, i32 -790409069
  store i32 %32, i32* %20
  br label %159

; <label>:33:                                     ; preds = %22
  %34 = alloca %"struct.std::_Vector_base"*, align 8
  %35 = alloca i64, align 8
  store i64* %35, i64** %7
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %34, align 8
  %36 = load volatile i64*, i64** %7
  store i64 %1, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %34, align 8
  store %"struct.std::_Vector_base"* %37, %"struct.std::_Vector_base"** %6
  %38 = load volatile i64*, i64** %7
  %39 = load i64, i64* %38, align 8
  %40 = icmp ne i64 %39, 0
  store i1 %40, i1* %5
  %41 = load i32, i32* @x.138
  %42 = load i32, i32* @y.139
  %43 = add i32 %41, -1748667013
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -1748667013
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 608171801, i32 -790409069
  store i32 %55, i32* %20
  br label %159

; <label>:56:                                     ; preds = %22
  %57 = load volatile i1, i1* %5
  %58 = select i1 %57, i32 1647710770, i32 1560288010
  store i32 %58, i32* %20
  br label %159

; <label>:59:                                     ; preds = %22
  %60 = load i32, i32* @x.138
  %61 = load i32, i32* @y.139
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -519671803, i32 1297688500
  store i32 %85, i32* %20
  br label %159

; <label>:86:                                     ; preds = %22
  %87 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %88 to %"class.std::allocator"*
  %90 = load volatile i64*, i64** %7
  %91 = load i64, i64* %90, align 8
  %92 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1) %89, i64 %91)
  store %"class.std::vector.0"* %92, %"class.std::vector.0"** %4
  %93 = load i32, i32* @x.138
  %94 = load i32, i32* @y.139
  %95 = sub i32 0, 1
  %96 = add i32 %93, %95
  %97 = sub i32 %93, 1
  %98 = mul i32 %93, %96
  %99 = urem i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = icmp slt i32 %94, 10
  %102 = and i1 %100, %101
  %103 = xor i1 %100, %101
  %104 = or i1 %102, %103
  %105 = or i1 %100, %101
  %106 = select i1 %104, i32 -1031072064, i32 1297688500
  store i32 %106, i32* %20
  br label %159

; <label>:107:                                    ; preds = %22
  store i32 1163937508, i32* %20
  %108 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %4
  store %"class.std::vector.0"* %108, %"class.std::vector.0"** %21
  br label %159

; <label>:109:                                    ; preds = %22
  store i32 1163937508, i32* %20
  store %"class.std::vector.0"* null, %"class.std::vector.0"** %21
  br label %159

; <label>:110:                                    ; preds = %22
  %111 = load %"class.std::vector.0"*, %"class.std::vector.0"** %21
  store %"class.std::vector.0"* %111, %"class.std::vector.0"** %3
  %112 = load i32, i32* @x.138
  %113 = load i32, i32* @y.139
  %114 = add i32 %112, -849807291
  %115 = sub i32 %114, 1
  %116 = sub i32 %115, -849807291
  %117 = sub i32 %112, 1
  %118 = mul i32 %112, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %113, 10
  %122 = and i1 %120, %121
  %123 = xor i1 %120, %121
  %124 = or i1 %122, %123
  %125 = or i1 %120, %121
  %126 = select i1 %124, i32 1410179475, i32 -178072756
  store i32 %126, i32* %20
  br label %159

; <label>:127:                                    ; preds = %22
  %128 = load i32, i32* @x.138
  %129 = load i32, i32* @y.139
  %130 = sub i32 %128, 257696441
  %131 = sub i32 %130, 1
  %132 = add i32 %131, 257696441
  %133 = sub i32 %128, 1
  %134 = mul i32 %128, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %129, 10
  %138 = and i1 %136, %137
  %139 = xor i1 %136, %137
  %140 = or i1 %138, %139
  %141 = or i1 %136, %137
  %142 = select i1 %140, i32 -1942316095, i32 -178072756
  store i32 %142, i32* %20
  br label %159

; <label>:143:                                    ; preds = %22
  %144 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %144

; <label>:145:                                    ; preds = %22
  %146 = alloca %"struct.std::_Vector_base"*, align 8
  %147 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %146, align 8
  store i64 %1, i64* %147, align 8
  %148 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %146, align 8
  %149 = load i64, i64* %147, align 8
  %150 = icmp ne i64 %149, 0
  store i32 1478004637, i32* %20
  br label %159

; <label>:151:                                    ; preds = %22
  %152 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %6
  %153 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %152, i32 0, i32 0
  %154 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %153 to %"class.std::allocator"*
  %155 = load volatile i64*, i64** %7
  %156 = load i64, i64* %155, align 8
  %157 = call %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1) %154, i64 %156)
  store i32 -519671803, i32* %20
  br label %159

; <label>:158:                                    ; preds = %22
  store i32 1410179475, i32* %20
  br label %159

; <label>:159:                                    ; preds = %158, %151, %145, %127, %110, %109, %107, %86, %59, %56, %33, %25, %24
  br label %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE8allocateERS5_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.140
  %7 = load i32, i32* @y.141
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 76036231, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 76036231, label %19
    i32 -1114045593, label %27
    i32 1236859048, label %61
    i32 1088840348, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1114045593, i32 1088840348
  store i32 %26, i32* %15
  br label %70

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::allocator"*, %"class.std::allocator"** %28, align 8
  %31 = bitcast %"class.std::allocator"* %30 to %"class.__gnu_cxx::new_allocator"*
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %31, i64 %32, i8* null)
  store %"class.std::vector.0"* %33, %"class.std::vector.0"** %3
  %34 = load i32, i32* @x.140
  %35 = load i32, i32* @y.141
  %36 = sub i32 %34, -1465130726
  %37 = sub i32 %36, 1
  %38 = add i32 %37, -1465130726
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1236859048, i32 1088840348
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %3
  ret %"class.std::vector.0"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::allocator"*, align 8
  %65 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %64, align 8
  store i64 %1, i64* %65, align 8
  %66 = load %"class.std::allocator"*, %"class.std::allocator"** %64, align 8
  %67 = bitcast %"class.std::allocator"* %66 to %"class.__gnu_cxx::new_allocator"*
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %67, i64 %68, i8* null)
  store i32 -1114045593, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 1420544735, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1420544735, label %16
    i32 -1796009781, label %21
    i32 -817476925, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1796009781, i32 -817476925
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 24
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"class.std::vector.0"*
  ret %"class.std::vector.0"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret i64 768614336404564650
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #8

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #9

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorISt4pairIiiESaIS2_EEmS4_S4_ET_S6_T0_RKT1_RSaIT2_E(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24), %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.0"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %7, align 8
  %12 = call %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt4pairIiiESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.0"* %9, i64 %10, %"class.std::vector.0"* dereferenceable(24) %11)
  ret %"class.std::vector.0"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.148
  %6 = load i32, i32* @y.149
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1691253072, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %52
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1691253072, label %18
    i32 48071585, label %26
    i32 -985685054, label %45
    i32 -1514080611, label %47
  ]

; <label>:17:                                     ; preds = %15
  br label %52

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 48071585, i32 -1514080611
  store i32 %25, i32* %14
  br label %52

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %27, align 8
  %28 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %29 to %"class.std::allocator"*
  store %"class.std::allocator"* %30, %"class.std::allocator"** %2
  %31 = load i32, i32* @x.148
  %32 = load i32, i32* @y.149
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -985685054, i32 -1514080611
  store i32 %44, i32* %14
  br label %52

; <label>:45:                                     ; preds = %15
  %46 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %46

; <label>:47:                                     ; preds = %15
  %48 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %48, align 8
  %49 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %48, align 8
  %50 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %49, i32 0, i32 0
  %51 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %50 to %"class.std::allocator"*
  store i32 48071585, i32* %14
  br label %52

; <label>:52:                                     ; preds = %47, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt20uninitialized_fill_nIPSt6vectorISt4pairIiiESaIS2_EEmS4_ET_S6_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.0"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %11 = call %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt4pairIiiESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.0"* %8, i64 %9, %"class.std::vector.0"* dereferenceable(24) %10)
  ret %"class.std::vector.0"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.0"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorISt4pairIiiESaIS4_EEmS6_EET_S8_T0_RKT1_(%"class.std::vector.0"*, i64, %"class.std::vector.0"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.152
  %5 = load i32, i32* @y.153
  %6 = sub i32 %4, -1839526902
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1839526902
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %232

; <label>:30:                                     ; preds = %3, %232
  %31 = alloca %"class.std::vector.0"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.0"*, align 8
  %34 = alloca %"class.std::vector.0"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %33, align 8
  %37 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  store %"class.std::vector.0"* %37, %"class.std::vector.0"** %34, align 8
  %38 = load i32, i32* @x.152
  %39 = load i32, i32* @y.153
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %232

; <label>:63:                                     ; preds = %30
  br label %64

; <label>:64:                                     ; preds = %102, %63
  %65 = load i32, i32* @x.152
  %66 = load i32, i32* @y.153
  %67 = sub i32 %65, 1697083696
  %68 = sub i32 %67, 1
  %69 = add i32 %68, 1697083696
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %240

; <label>:79:                                     ; preds = %64, %240
  %80 = load i64, i64* %32, align 8
  %81 = icmp ugt i64 %80, 0
  %82 = load i32, i32* @x.152
  %83 = load i32, i32* @y.153
  %84 = add i32 %82, -633846270
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -633846270
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %240

; <label>:96:                                     ; preds = %79
  br i1 %81, label %97, label %162

; <label>:97:                                     ; preds = %96
  %98 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %99 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt4pairIiiESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24) %98) #3
  %100 = load %"class.std::vector.0"*, %"class.std::vector.0"** %33, align 8
  invoke void @_ZSt10_ConstructISt6vectorISt4pairIiiESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.0"* %99, %"class.std::vector.0"* dereferenceable(24) %100)
          to label %101 unwind label %111

; <label>:101:                                    ; preds = %97
  br label %102

; <label>:102:                                    ; preds = %101
  %103 = load i64, i64* %32, align 8
  %104 = sub i64 0, %103
  %105 = sub i64 0, -1
  %106 = add i64 %104, %105
  %107 = sub i64 0, %106
  %108 = add i64 %103, -1
  store i64 %107, i64* %32, align 8
  %109 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %110 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %109, i32 1
  store %"class.std::vector.0"* %110, %"class.std::vector.0"** %34, align 8
  br label %64

; <label>:111:                                    ; preds = %97
  %112 = landingpad { i8*, i32 }
          catch i8* null
  %113 = extractvalue { i8*, i32 } %112, 0
  store i8* %113, i8** %35, align 8
  %114 = extractvalue { i8*, i32 } %112, 1
  store i32 %114, i32* %36, align 4
  br label %115

; <label>:115:                                    ; preds = %111
  %116 = load i32, i32* @x.152
  %117 = load i32, i32* @y.153
  %118 = sub i32 %116, 1020881667
  %119 = sub i32 %118, 1
  %120 = add i32 %119, 1020881667
  %121 = sub i32 %116, 1
  %122 = mul i32 %116, %120
  %123 = urem i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = icmp slt i32 %117, 10
  %126 = and i1 %124, %125
  %127 = xor i1 %124, %125
  %128 = or i1 %126, %127
  %129 = or i1 %124, %125
  br i1 %128, label %130, label %243

; <label>:130:                                    ; preds = %115, %243
  %131 = load i8*, i8** %35, align 8
  %132 = call i8* @__cxa_begin_catch(i8* %131) #3
  %133 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %134 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  %135 = load i32, i32* @x.152
  %136 = load i32, i32* @y.153
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = xor i1 %142, true
  %145 = xor i1 %143, true
  %146 = xor i1 false, true
  %147 = and i1 %144, false
  %148 = and i1 %142, %146
  %149 = and i1 %145, false
  %150 = and i1 %143, %146
  %151 = or i1 %147, %148
  %152 = or i1 %149, %150
  %153 = xor i1 %151, %152
  %154 = or i1 %144, %145
  %155 = xor i1 %154, true
  %156 = or i1 false, %146
  %157 = and i1 %155, %156
  %158 = or i1 %153, %157
  %159 = or i1 %142, %143
  br i1 %158, label %160, label %243

; <label>:160:                                    ; preds = %130
  invoke void @_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EEEvT_S6_(%"class.std::vector.0"* %133, %"class.std::vector.0"* %134)
          to label %161 unwind label %164

; <label>:161:                                    ; preds = %160
  invoke void @__cxa_rethrow() #12
          to label %231 unwind label %164

; <label>:162:                                    ; preds = %96
  %163 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  ret %"class.std::vector.0"* %163

; <label>:164:                                    ; preds = %161, %160
  %165 = load i32, i32* @x.152
  %166 = load i32, i32* @y.153
  %167 = sub i32 0, 1
  %168 = add i32 %165, %167
  %169 = sub i32 %165, 1
  %170 = mul i32 %165, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %166, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 false, true
  %177 = and i1 %174, false
  %178 = and i1 %172, %176
  %179 = and i1 %175, false
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 false, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  br i1 %188, label %190, label %248

; <label>:190:                                    ; preds = %164, %248
  %191 = landingpad { i8*, i32 }
          cleanup
  %192 = extractvalue { i8*, i32 } %191, 0
  store i8* %192, i8** %35, align 8
  %193 = extractvalue { i8*, i32 } %191, 1
  store i32 %193, i32* %36, align 4
  %194 = load i32, i32* @x.152
  %195 = load i32, i32* @y.153
  %196 = add i32 %194, 1640274525
  %197 = sub i32 %196, 1
  %198 = sub i32 %197, 1640274525
  %199 = sub i32 %194, 1
  %200 = mul i32 %194, %198
  %201 = urem i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = icmp slt i32 %195, 10
  %204 = xor i1 %202, true
  %205 = xor i1 %203, true
  %206 = xor i1 true, true
  %207 = and i1 %204, true
  %208 = and i1 %202, %206
  %209 = and i1 %205, true
  %210 = and i1 %203, %206
  %211 = or i1 %207, %208
  %212 = or i1 %209, %210
  %213 = xor i1 %211, %212
  %214 = or i1 %204, %205
  %215 = xor i1 %214, true
  %216 = or i1 true, %206
  %217 = and i1 %215, %216
  %218 = or i1 %213, %217
  %219 = or i1 %202, %203
  br i1 %218, label %220, label %248

; <label>:220:                                    ; preds = %190
  invoke void @__cxa_end_catch()
          to label %221 unwind label %228

; <label>:221:                                    ; preds = %220
  br label %223
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:223:                                    ; preds = %221
  %224 = load i8*, i8** %35, align 8
  %225 = load i32, i32* %36, align 4
  %226 = insertvalue { i8*, i32 } undef, i8* %224, 0
  %227 = insertvalue { i8*, i32 } %226, i32 %225, 1
  resume { i8*, i32 } %227

; <label>:228:                                    ; preds = %220
  %229 = landingpad { i8*, i32 }
          catch i8* null
  %230 = extractvalue { i8*, i32 } %229, 0
  call void @__clang_call_terminate(i8* %230) #10
  unreachable

; <label>:231:                                    ; preds = %161
  unreachable

; <label>:232:                                    ; preds = %30, %3
  %233 = alloca %"class.std::vector.0"*, align 8
  %234 = alloca i64, align 8
  %235 = alloca %"class.std::vector.0"*, align 8
  %236 = alloca %"class.std::vector.0"*, align 8
  %237 = alloca i8*
  %238 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %233, align 8
  store i64 %1, i64* %234, align 8
  store %"class.std::vector.0"* %2, %"class.std::vector.0"** %235, align 8
  %239 = load %"class.std::vector.0"*, %"class.std::vector.0"** %233, align 8
  store %"class.std::vector.0"* %239, %"class.std::vector.0"** %236, align 8
  br label %30

; <label>:240:                                    ; preds = %79, %64
  %241 = load i64, i64* %32, align 8
  %242 = icmp ugt i64 %241, 0
  br label %79

; <label>:243:                                    ; preds = %130, %115
  %244 = load i8*, i8** %35, align 8
  %245 = call i8* @__cxa_begin_catch(i8* %244) #3
  %246 = load %"class.std::vector.0"*, %"class.std::vector.0"** %31, align 8
  %247 = load %"class.std::vector.0"*, %"class.std::vector.0"** %34, align 8
  br label %130

; <label>:248:                                    ; preds = %190, %164
  %249 = landingpad { i8*, i32 }
          cleanup
  %250 = extractvalue { i8*, i32 } %249, 0
  store i8* %250, i8** %35, align 8
  %251 = extractvalue { i8*, i32 } %249, 1
  store i32 %251, i32* %36, align 4
  br label %190
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorISt4pairIiiESaIS2_EEJRKS4_EEvPT_DpOT0_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.154
  %6 = load i32, i32* @y.155
  %7 = add i32 %5, 1002717590
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1002717590
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 694418799, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 694418799, label %19
    i32 1318672819, label %39
    i32 -266777613, label %62
    i32 2098655344, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1318672819, i32 2098655344
  store i32 %38, i32* %15
  br label %71

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %41, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to i8*
  %44 = bitcast i8* %43 to %"class.std::vector.0"*
  %45 = load %"class.std::vector.0"*, %"class.std::vector.0"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt4pairIiiESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.0"* dereferenceable(24) %45) #3
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EEC2ERKS3_(%"class.std::vector.0"* %44, %"class.std::vector.0"* dereferenceable(24) %46)
  %47 = load i32, i32* @x.154
  %48 = load i32, i32* @y.155
  %49 = sub i32 %47, 1530454541
  %50 = sub i32 %49, 1
  %51 = add i32 %50, 1530454541
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -266777613, i32 2098655344
  store i32 %61, i32* %15
  br label %71

; <label>:62:                                     ; preds = %16
  ret void

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::vector.0"*, align 8
  %65 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %64, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %65, align 8
  %66 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  %67 = bitcast %"class.std::vector.0"* %66 to i8*
  %68 = bitcast i8* %67 to %"class.std::vector.0"*
  %69 = load %"class.std::vector.0"*, %"class.std::vector.0"** %65, align 8
  %70 = call dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt4pairIiiESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.0"* dereferenceable(24) %69) #3
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EEC2ERKS3_(%"class.std::vector.0"* %68, %"class.std::vector.0"* dereferenceable(24) %70)
  store i32 1318672819, i32* %15
  br label %71

; <label>:71:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt4pairIiiESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.156
  %6 = load i32, i32* @y.157
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -2086503384, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2086503384, label %18
    i32 2065524186, label %38
    i32 1868599987, label %69
    i32 -2121017906, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 2065524186, i32 -2121017906
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  %41 = bitcast %"class.std::vector.0"* %40 to i8*
  %42 = bitcast i8* %41 to %"class.std::vector.0"*
  store %"class.std::vector.0"* %42, %"class.std::vector.0"** %2
  %43 = load i32, i32* @x.156
  %44 = load i32, i32* @y.157
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1868599987, i32 -2121017906
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %2
  ret %"class.std::vector.0"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %72, align 8
  %73 = load %"class.std::vector.0"*, %"class.std::vector.0"** %72, align 8
  %74 = bitcast %"class.std::vector.0"* %73 to i8*
  %75 = bitcast i8* %74 to %"class.std::vector.0"*
  store i32 2065524186, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EEEvT_S6_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.158
  %6 = load i32, i32* @y.159
  %7 = add i32 %5, 506677330
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 506677330
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -893234648, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -893234648, label %19
    i32 1324982775, label %27
    i32 405620243, label %58
    i32 -2097540131, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1324982775, i32 -2097540131
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.0"*, align 8
  %29 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %28, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %29, align 8
  %30 = load %"class.std::vector.0"*, %"class.std::vector.0"** %28, align 8
  %31 = load %"class.std::vector.0"*, %"class.std::vector.0"** %29, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairIiiESaIS4_EEEEvT_S8_(%"class.std::vector.0"* %30, %"class.std::vector.0"* %31)
  %32 = load i32, i32* @x.158
  %33 = load i32, i32* @y.159
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 405620243, i32 -2097540131
  store i32 %57, i32* %15
  br label %64

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::vector.0"*, align 8
  %61 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %60, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %61, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %60, align 8
  %63 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairIiiESaIS4_EEEEvT_S8_(%"class.std::vector.0"* %62, %"class.std::vector.0"* %63)
  store i32 1324982775, i32* %15
  br label %64

; <label>:64:                                     ; preds = %59, %27, %19, %18
  br label %16
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #10

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.0"* @_ZSt7forwardIRKSt6vectorISt4pairIiiESaIS2_EEEOT_RNSt16remove_referenceIS7_E4typeE(%"class.std::vector.0"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  ret %"class.std::vector.0"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EEC2ERKS3_(%"class.std::vector.0"*, %"class.std::vector.0"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::allocator.2", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %15 = bitcast %"class.std::vector.0"* %14 to %"struct.std::_Vector_base.1"*
  %16 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiiEEE17_S_select_on_copyERKS3_(%"class.std::allocator.2"* sret %5, %"class.std::allocator.2"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.1"* %11, i64 %13, %"class.std::allocator.2"* dereferenceable(1) %5)
          to label %17 unwind label %39

; <label>:17:                                     ; preds = %2
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"* %5) #3
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %19 = call %"struct.std::pair"* @_ZNKSt6vectorISt4pairIiiESaIS1_EE5beginEv(%"class.std::vector.0"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  store %"struct.std::pair"* %19, %"struct.std::pair"** %20, align 8
  %21 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %22 = call %"struct.std::pair"* @_ZNKSt6vectorISt4pairIiiESaIS1_EE3endEv(%"class.std::vector.0"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  store %"struct.std::pair"* %22, %"struct.std::pair"** %23, align 8
  %24 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load %"struct.std::pair"*, %"struct.std::pair"** %26, align 8
  %28 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %29 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %31 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %33 = load %"struct.std::pair"*, %"struct.std::pair"** %32, align 8
  %34 = invoke %"struct.std::pair"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.std::pair"* %31, %"struct.std::pair"* %33, %"struct.std::pair"* %27, %"class.std::allocator.2"* dereferenceable(1) %29)
          to label %35 unwind label %85

; <label>:35:                                     ; preds = %17
  %36 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %37, i32 0, i32 1
  store %"struct.std::pair"* %34, %"struct.std::pair"** %38, align 8
  ret void

; <label>:39:                                     ; preds = %2
  %40 = load i32, i32* @x.162
  %41 = load i32, i32* @y.163
  %42 = sub i32 %40, -948495124
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -948495124
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %95

; <label>:66:                                     ; preds = %39, %95
  %67 = landingpad { i8*, i32 }
          cleanup
  %68 = extractvalue { i8*, i32 } %67, 0
  store i8* %68, i8** %6, align 8
  %69 = extractvalue { i8*, i32 } %67, 1
  store i32 %69, i32* %7, align 4
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"* %5) #3
  %70 = load i32, i32* @x.162
  %71 = load i32, i32* @y.163
  %72 = add i32 %70, -1338374091
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -1338374091
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %95

; <label>:84:                                     ; preds = %66
  br label %90

; <label>:85:                                     ; preds = %17
  %86 = landingpad { i8*, i32 }
          cleanup
  %87 = extractvalue { i8*, i32 } %86, 0
  store i8* %87, i8** %6, align 8
  %88 = extractvalue { i8*, i32 } %86, 1
  store i32 %88, i32* %7, align 4
  %89 = bitcast %"class.std::vector.0"* %10 to %"struct.std::_Vector_base.1"*
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EED2Ev(%"struct.std::_Vector_base.1"* %89) #3
  br label %90

; <label>:90:                                     ; preds = %85, %84
  %91 = load i8*, i8** %6, align 8
  %92 = load i32, i32* %7, align 4
  %93 = insertvalue { i8*, i32 } undef, i8* %91, 0
  %94 = insertvalue { i8*, i32 } %93, i32 %92, 1
  resume { i8*, i32 } %94

; <label>:95:                                     ; preds = %66, %39
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %6, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %7, align 4
  call void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"* %5) #3
  br label %66
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.164
  %6 = load i32, i32* @y.165
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1833436692, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %100
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1833436692, label %18
    i32 -1351168043, label %26
    i32 -1832142933, label %58
    i32 -1251615354, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %100

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1351168043, i32 -1251615354
  store i32 %25, i32* %14
  br label %100

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %27, align 8
  %28 = load %"class.std::vector.0"*, %"class.std::vector.0"** %27, align 8
  %29 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %33 = bitcast %"class.std::vector.0"* %28 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %35, align 8
  %37 = ptrtoint %"struct.std::pair"* %32 to i64
  %38 = ptrtoint %"struct.std::pair"* %36 to i64
  %39 = sub i64 0, %38
  %40 = add i64 %37, %39
  %41 = sub i64 %37, %38
  %42 = sdiv exact i64 %40, 8
  store i64 %42, i64* %2
  %43 = load i32, i32* @x.164
  %44 = load i32, i32* @y.165
  %45 = add i32 %43, -939471983
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -939471983
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1832142933, i32 -1251615354
  store i32 %57, i32* %14
  br label %100

; <label>:58:                                     ; preds = %15
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %61, align 8
  %62 = load %"class.std::vector.0"*, %"class.std::vector.0"** %61, align 8
  %63 = bitcast %"class.std::vector.0"* %62 to %"struct.std::_Vector_base.1"*
  %64 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %64, i32 0, i32 1
  %66 = load %"struct.std::pair"*, %"struct.std::pair"** %65, align 8
  %67 = bitcast %"class.std::vector.0"* %62 to %"struct.std::_Vector_base.1"*
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %68, i32 0, i32 0
  %70 = load %"struct.std::pair"*, %"struct.std::pair"** %69, align 8
  %71 = ptrtoint %"struct.std::pair"* %66 to i64
  %72 = ptrtoint %"struct.std::pair"* %70 to i64
  %73 = sub i64 %71, -8741083372702695540
  %74 = sub i64 %73, %72
  %75 = add i64 %74, -8741083372702695540
  %76 = sub i64 %71, %72
  %77 = mul i64 %75, %72
  %78 = add i64 0, -1325461726621754960
  %79 = sub i64 %78, %71
  %80 = sub i64 %79, -1325461726621754960
  %81 = sub i64 0, %71
  %82 = sub i64 0, %80
  %83 = sub i64 0, %72
  %84 = add i64 %82, %83
  %85 = sub i64 0, %84
  %86 = add i64 %80, %72
  %87 = shl i64 %71, %72
  %88 = sub i64 %71, 7001742441633660545
  %89 = sub i64 %88, %72
  %90 = add i64 %89, 7001742441633660545
  %91 = sub i64 %71, %72
  %92 = sub i64 0, %90
  %93 = add i64 0, %92
  %94 = sub i64 0, %90
  %95 = sub i64 %93, 4472866404066562949
  %96 = add i64 %95, 8
  %97 = add i64 %96, 4472866404066562949
  %98 = add i64 %93, 8
  %99 = sdiv exact i64 %90, 8
  store i32 -1351168043, i32* %14
  br label %100

; <label>:100:                                    ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIiiEEE17_S_select_on_copyERKS3_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.166
  %6 = load i32, i32* @y.167
  %7 = sub i32 %5, 1030168929
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1030168929
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1905553475, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1905553475, label %19
    i32 -501332929, label %27
    i32 -733561611, label %57
    i32 992979086, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -501332929, i32 992979086
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %28, align 8
  %29 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %29)
  %30 = load i32, i32* @x.166
  %31 = load i32, i32* @y.167
  %32 = add i32 %30, -1567645451
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1567645451
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 true, true
  %43 = and i1 %40, true
  %44 = and i1 %38, %42
  %45 = and i1 %41, true
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 true, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -733561611, i32 992979086
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %59, align 8
  %60 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %59, align 8
  call void @_ZNSt16allocator_traitsISaISt4pairIiiEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.2"* sret %0, %"class.std::allocator.2"* dereferenceable(1) %60)
  store i32 -501332929, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.1"*, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %2, align 8
  %3 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %4 to %"class.std::allocator.2"*
  ret %"class.std::allocator.2"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EEC2EmRKS2_(%"struct.std::_Vector_base.1"*, i64, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.1"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.2"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.2"* %2, %"class.std::allocator.2"** %6, align 8
  %9 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %6, align 8
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %10, %"class.std::allocator.2"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = landingpad { i8*, i32 }
          cleanup
  %16 = extractvalue { i8*, i32 } %15, 0
  store i8* %16, i8** %7, align 8
  %17 = extractvalue { i8*, i32 } %15, 1
  store i32 %17, i32* %8, align 4
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %10) #3
  br label %18

; <label>:18:                                     ; preds = %14
  %19 = load i8*, i8** %7, align 8
  %20 = load i32, i32* %8, align 4
  %21 = insertvalue { i8*, i32 } undef, i8* %19, 0
  %22 = insertvalue { i8*, i32 } %21, i32 %20, 1
  resume { i8*, i32 } %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEED2Ev(%"class.std::allocator.2"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEED2Ev(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_S3_ET0_T_SC_SB_RSaIT1_E(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %6, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.std::pair"*, %"struct.std::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.std::pair"*, %"struct.std::pair"** %20, align 8
  %22 = call %"struct.std::pair"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.std::pair"* %19, %"struct.std::pair"* %21, %"struct.std::pair"* %17)
  ret %"struct.std::pair"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt6vectorISt4pairIiiESaIS1_EE5beginEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.176
  %6 = load i32, i32* @y.177
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 460362711, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 460362711, label %18
    i32 -1844516006, label %38
    i32 -1526652417, label %64
    i32 -374259539, label %66
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1844516006, i32 -374259539
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %40 = alloca %"class.std::vector.0"*, align 8
  %41 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %40, align 8
  %42 = load %"class.std::vector.0"*, %"class.std::vector.0"** %40, align 8
  %43 = bitcast %"class.std::vector.0"* %42 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  store %"struct.std::pair"* %46, %"struct.std::pair"** %41, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %39, %"struct.std::pair"** dereferenceable(8) %41) #3
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %39, i32 0, i32 0
  %48 = load %"struct.std::pair"*, %"struct.std::pair"** %47, align 8
  store %"struct.std::pair"* %48, %"struct.std::pair"** %2
  %49 = load i32, i32* @x.176
  %50 = load i32, i32* @y.177
  %51 = add i32 %49, -1766273960
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1766273960
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1526652417, i32 -374259539
  store i32 %63, i32* %14
  br label %77

; <label>:64:                                     ; preds = %15
  %65 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %65

; <label>:66:                                     ; preds = %15
  %67 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %68 = alloca %"class.std::vector.0"*, align 8
  %69 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %68, align 8
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %68, align 8
  %71 = bitcast %"class.std::vector.0"* %70 to %"struct.std::_Vector_base.1"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %72, i32 0, i32 0
  %74 = load %"struct.std::pair"*, %"struct.std::pair"** %73, align 8
  store %"struct.std::pair"* %74, %"struct.std::pair"** %69, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %67, %"struct.std::pair"** dereferenceable(8) %69) #3
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %67, i32 0, i32 0
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %75, align 8
  store i32 -1844516006, i32* %14
  br label %77

; <label>:77:                                     ; preds = %66, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt6vectorISt4pairIiiESaIS1_EE3endEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  store %"struct.std::pair"* %9, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.std::pair"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %10, align 8
  ret %"struct.std::pair"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE37select_on_container_copy_constructionERKS2_(%"class.std::allocator.2"* noalias sret, %"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %3, align 8
  %4 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  call void @_ZNSaISt4pairIiiEEC2ERKS1_(%"class.std::allocator.2"* %0, %"class.std::allocator.2"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt4pairIiiEEC2ERKS1_(%"class.std::allocator.2"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.182
  %6 = load i32, i32* @y.183
  %7 = sub i32 %5, 1682834220
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1682834220
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -165609125, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -165609125, label %19
    i32 -1427139625, label %27
    i32 -808726062, label %61
    i32 826028866, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1427139625, i32 826028866
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.2"*, align 8
  %29 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %28, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %29, align 8
  %30 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %28, align 8
  %31 = bitcast %"class.std::allocator.2"* %30 to %"class.__gnu_cxx::new_allocator.3"*
  %32 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %29, align 8
  %33 = bitcast %"class.std::allocator.2"* %32 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.3"* %31, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.182
  %35 = load i32, i32* @y.183
  %36 = add i32 %34, -488023944
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -488023944
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -808726062, i32 826028866
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.2"*, align 8
  %64 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %63, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %64, align 8
  %65 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %63, align 8
  %66 = bitcast %"class.std::allocator.2"* %65 to %"class.__gnu_cxx::new_allocator.3"*
  %67 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %64, align 8
  %68 = bitcast %"class.std::allocator.2"* %67 to %"class.__gnu_cxx::new_allocator.3"*
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.3"* %66, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1) %68) #3
  store i32 -1427139625, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEEC2ERKS3_(%"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.184
  %6 = load i32, i32* @y.185
  %7 = sub i32 %5, 1776110979
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1776110979
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -324478886, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -324478886, label %19
    i32 -120861956, label %39
    i32 -578932213, label %58
    i32 -609065133, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -120861956, i32 -609065133
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %41 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %41, align 8
  %42 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %40, align 8
  %43 = load i32, i32* @x.184
  %44 = load i32, i32* @y.185
  %45 = add i32 %43, 1440077863
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, 1440077863
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -578932213, i32 -609065133
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %61 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %1, %"class.__gnu_cxx::new_allocator.3"** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %60, align 8
  store i32 -120861956, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE12_Vector_implC2ERKS2_(%"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"class.std::allocator.2"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.2"*, align 8
  store %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.2"* %1, %"class.std::allocator.2"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %5 to %"class.std::allocator.2"*
  %7 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %4, align 8
  call void @_ZNSaISt4pairIiiEEC2ERKS1_(%"class.std::allocator.2"* %6, %"class.std::allocator.2"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.std::pair"* null, %"struct.std::pair"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.std::pair"* null, %"struct.std::pair"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE17_M_create_storageEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.188
  %6 = load i32, i32* @y.189
  %7 = sub i32 %5, 11273403
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 11273403
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 777402546, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 777402546, label %19
    i32 -1714930759, label %27
    i32 838370868, label %61
    i32 -711838446, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1714930759, i32 -711838446
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.1"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %33, i32 0, i32 0
  store %"struct.std::pair"* %32, %"struct.std::pair"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %38, i32 0, i32 1
  store %"struct.std::pair"* %37, %"struct.std::pair"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %45, i32 0, i32 2
  store %"struct.std::pair"* %44, %"struct.std::pair"** %46, align 8
  %47 = load i32, i32* @x.188
  %48 = load i32, i32* @y.189
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 838370868, i32 -711838446
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Vector_base.1"*, align 8
  %64 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %63, align 8
  store i64 %1, i64* %64, align 8
  %65 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %63, align 8
  %66 = load i64, i64* %64, align 8
  %67 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %65, i64 %66)
  %68 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %68, i32 0, i32 0
  store %"struct.std::pair"* %67, %"struct.std::pair"** %69, align 8
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %71 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.std::pair"*, %"struct.std::pair"** %71, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %73, i32 0, i32 1
  store %"struct.std::pair"* %72, %"struct.std::pair"** %74, align 8
  %75 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %75, i32 0, i32 0
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %76, align 8
  %78 = load i64, i64* %64, align 8
  %79 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %77, i64 %78
  %80 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %65, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %80, i32 0, i32 2
  store %"struct.std::pair"* %79, %"struct.std::pair"** %81, align 8
  store i32 -1714930759, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.1"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.190
  %9 = load i32, i32* @y.191
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 784427714, i32* %17
  %18 = alloca %"struct.std::pair"*
  br label %19

; <label>:19:                                     ; preds = %2, %84
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 784427714, label %22
    i32 1417782722, label %42
    i32 -692863287, label %65
    i32 267216358, label %68
    i32 87680482, label %75
    i32 667380349, label %76
    i32 755051394, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %84

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 1417782722, i32 755051394
  store i32 %41, i32* %17
  br label %84

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::_Vector_base.1"*, align 8
  %44 = alloca i64, align 8
  store i64* %44, i64** %5
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %43, align 8
  %45 = load volatile i64*, i64** %5
  store i64 %1, i64* %45, align 8
  %46 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %43, align 8
  store %"struct.std::_Vector_base.1"* %46, %"struct.std::_Vector_base.1"** %4
  %47 = load volatile i64*, i64** %5
  %48 = load i64, i64* %47, align 8
  %49 = icmp ne i64 %48, 0
  store i1 %49, i1* %3
  %50 = load i32, i32* @x.190
  %51 = load i32, i32* @y.191
  %52 = sub i32 %50, 1425468719
  %53 = sub i32 %52, 1
  %54 = add i32 %53, 1425468719
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -692863287, i32 755051394
  store i32 %64, i32* %17
  br label %84

; <label>:65:                                     ; preds = %19
  %66 = load volatile i1, i1* %3
  %67 = select i1 %66, i32 267216358, i32 87680482
  store i32 %67, i32* %17
  br label %84

; <label>:68:                                     ; preds = %19
  %69 = load volatile %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %4
  %70 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %69, i32 0, i32 0
  %71 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %70 to %"class.std::allocator.2"*
  %72 = load volatile i64*, i64** %5
  %73 = load i64, i64* %72, align 8
  %74 = call %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1) %71, i64 %73)
  store i32 667380349, i32* %17
  store %"struct.std::pair"* %74, %"struct.std::pair"** %18
  br label %84

; <label>:75:                                     ; preds = %19
  store i32 667380349, i32* %17
  store %"struct.std::pair"* null, %"struct.std::pair"** %18
  br label %84

; <label>:76:                                     ; preds = %19
  %77 = load %"struct.std::pair"*, %"struct.std::pair"** %18
  ret %"struct.std::pair"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"struct.std::_Vector_base.1"*, align 8
  %80 = alloca i64, align 8
  store %"struct.std::_Vector_base.1"* %0, %"struct.std::_Vector_base.1"** %79, align 8
  store i64 %1, i64* %80, align 8
  %81 = load %"struct.std::_Vector_base.1"*, %"struct.std::_Vector_base.1"** %79, align 8
  %82 = load i64, i64* %80, align 8
  %83 = icmp ne i64 %82, 0
  store i32 1417782722, i32* %17
  br label %84

; <label>:84:                                     ; preds = %78, %75, %68, %65, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt16allocator_traitsISaISt4pairIiiEEE8allocateERS2_m(%"class.std::allocator.2"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"* %6, i64 %7, i8* null)
  ret %"struct.std::pair"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -694559818, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -694559818, label %16
    i32 996613675, label %21
    i32 779141336, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 996613675, i32 779141336
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.std::pair"*
  ret %"struct.std::pair"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS3_SaIS3_EEEEPS3_ET0_T_SC_SB_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator"* %8 to i8*
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator"* %9 to i8*
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %21 = call %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.std::pair"* %18, %"struct.std::pair"* %20, %"struct.std::pair"* %16)
  ret %"struct.std::pair"* %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS5_SaIS5_EEEEPS5_EET0_T_SE_SD_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  store %"struct.std::pair"* %12, %"struct.std::pair"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %20, %3
  %14 = call zeroext i1 @_ZN9__gnu_cxxneIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %4, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %5) #3
  br i1 %14, label %15, label %129

; <label>:15:                                     ; preds = %13
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %17 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIiiEEPT_RS2_(%"struct.std::pair"* dereferenceable(8) %16) #3
  %18 = call dereferenceable(8) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  invoke void @_ZSt10_ConstructISt4pairIiiEJRKS1_EEvPT_DpOT0_(%"struct.std::pair"* %17, %"struct.std::pair"* dereferenceable(8) %18)
          to label %19 unwind label %24

; <label>:19:                                     ; preds = %15
  br label %20

; <label>:20:                                     ; preds = %19
  %21 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %4) #3
  %22 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %22, i32 1
  store %"struct.std::pair"* %23, %"struct.std::pair"** %7, align 8
  br label %13

; <label>:24:                                     ; preds = %15
  %25 = landingpad { i8*, i32 }
          catch i8* null
  %26 = extractvalue { i8*, i32 } %25, 0
  store i8* %26, i8** %8, align 8
  %27 = extractvalue { i8*, i32 } %25, 1
  store i32 %27, i32* %9, align 4
  br label %28

; <label>:28:                                     ; preds = %24
  %29 = load i32, i32* @x.200
  %30 = load i32, i32* @y.201
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %188

; <label>:42:                                     ; preds = %28, %188
  %43 = load i8*, i8** %8, align 8
  %44 = call i8* @__cxa_begin_catch(i8* %43) #3
  %45 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %47 = load i32, i32* @x.200
  %48 = load i32, i32* @y.201
  %49 = add i32 %47, -581221208
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -581221208
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %188

; <label>:73:                                     ; preds = %42
  invoke void @_ZSt8_DestroyIPSt4pairIiiEEvT_S3_(%"struct.std::pair"* %45, %"struct.std::pair"* %46)
          to label %74 unwind label %131

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.200
  %76 = load i32, i32* @y.201
  %77 = sub i32 %75, 795971546
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 795971546
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %193

; <label>:101:                                    ; preds = %74, %193
  %102 = load i32, i32* @x.200
  %103 = load i32, i32* @y.201
  %104 = sub i32 %102, -55965961
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -55965961
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %193

; <label>:128:                                    ; preds = %101
  invoke void @__cxa_rethrow() #12
          to label %145 unwind label %131

; <label>:129:                                    ; preds = %13
  %130 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  ret %"struct.std::pair"* %130

; <label>:131:                                    ; preds = %128, %73
  %132 = landingpad { i8*, i32 }
          cleanup
  %133 = extractvalue { i8*, i32 } %132, 0
  store i8* %133, i8** %8, align 8
  %134 = extractvalue { i8*, i32 } %132, 1
  store i32 %134, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %135 unwind label %142

; <label>:135:                                    ; preds = %131
  br label %137
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:137:                                    ; preds = %135
  %138 = load i8*, i8** %8, align 8
  %139 = load i32, i32* %9, align 4
  %140 = insertvalue { i8*, i32 } undef, i8* %138, 0
  %141 = insertvalue { i8*, i32 } %140, i32 %139, 1
  resume { i8*, i32 } %141

; <label>:142:                                    ; preds = %131
  %143 = landingpad { i8*, i32 }
          catch i8* null
  %144 = extractvalue { i8*, i32 } %143, 0
  call void @__clang_call_terminate(i8* %144) #10
  unreachable

; <label>:145:                                    ; preds = %128
  %146 = load i32, i32* @x.200
  %147 = load i32, i32* @y.201
  %148 = add i32 %146, -1193841335
  %149 = sub i32 %148, 1
  %150 = sub i32 %149, -1193841335
  %151 = sub i32 %146, 1
  %152 = mul i32 %146, %150
  %153 = urem i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = icmp slt i32 %147, 10
  %156 = xor i1 %154, true
  %157 = xor i1 %155, true
  %158 = xor i1 true, true
  %159 = and i1 %156, true
  %160 = and i1 %154, %158
  %161 = and i1 %157, true
  %162 = and i1 %155, %158
  %163 = or i1 %159, %160
  %164 = or i1 %161, %162
  %165 = xor i1 %163, %164
  %166 = or i1 %156, %157
  %167 = xor i1 %166, true
  %168 = or i1 true, %158
  %169 = and i1 %167, %168
  %170 = or i1 %165, %169
  %171 = or i1 %154, %155
  br i1 %170, label %172, label %194

; <label>:172:                                    ; preds = %145, %194
  %173 = load i32, i32* @x.200
  %174 = load i32, i32* @y.201
  %175 = sub i32 %173, 1021578292
  %176 = sub i32 %175, 1
  %177 = add i32 %176, 1021578292
  %178 = sub i32 %173, 1
  %179 = mul i32 %173, %177
  %180 = urem i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = icmp slt i32 %174, 10
  %183 = and i1 %181, %182
  %184 = xor i1 %181, %182
  %185 = or i1 %183, %184
  %186 = or i1 %181, %182
  br i1 %185, label %187, label %194

; <label>:187:                                    ; preds = %172
  unreachable

; <label>:188:                                    ; preds = %42, %28
  %189 = load i8*, i8** %8, align 8
  %190 = call i8* @__cxa_begin_catch(i8* %189) #3
  %191 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %192 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  br label %42

; <label>:193:                                    ; preds = %101, %74
  br label %101

; <label>:194:                                    ; preds = %172, %145
  br label %172
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %11 = icmp ne %"struct.std::pair"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIiiEJRKS1_EEvPT_DpOT0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = bitcast %"struct.std::pair"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.std::pair"*
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIiiEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(8) %8) #3
  %10 = bitcast %"struct.std::pair"* %7 to i8*
  %11 = bitcast %"struct.std::pair"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt11__addressofISt4pairIiiEEPT_RS2_(%"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %2, align 8
  %3 = load %"struct.std::pair"*, %"struct.std::pair"** %2, align 8
  %4 = bitcast %"struct.std::pair"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.std::pair"*
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret %"struct.std::pair"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 1
  store %"struct.std::pair"* %6, %"struct.std::pair"** %4, align 8
  ret %"class.__gnu_cxx::__normal_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.std::pair"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardIRKSt4pairIiiEEOT_RNSt16remove_referenceIS4_E4typeE(%"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.214
  %6 = load i32, i32* @y.215
  %7 = add i32 %5, -1846079040
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1846079040
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 777376951, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 777376951, label %19
    i32 852806344, label %39
    i32 -1079510716, label %56
    i32 -1625820144, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 852806344, i32 -1625820144
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %40, align 8
  %41 = load %"struct.std::pair"*, %"struct.std::pair"** %40, align 8
  store %"struct.std::pair"* %41, %"struct.std::pair"** %2
  %42 = load i32, i32* @x.214
  %43 = load i32, i32* @y.215
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -1079510716, i32 -1625820144
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %59, align 8
  %60 = load %"struct.std::pair"*, %"struct.std::pair"** %59, align 8
  store i32 852806344, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt4pairIiiESt6vectorIS2_SaIS2_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.std::pair"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.std::pair"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.std::pair"** %1, %"struct.std::pair"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"**, %"struct.std::pair"*** %4, align 8
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  store %"struct.std::pair"* %8, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorISt4pairIiiESaIS4_EEEEvT_S8_(%"class.std::vector.0"*, %"class.std::vector.0"*) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %4, align 8
  %5 = alloca i32
  store i32 855401255, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %21
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 855401255, label %9
    i32 1813820812, label %14
    i32 157740080, label %17
    i32 681510315, label %20
  ]

; <label>:8:                                      ; preds = %6
  br label %21

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %12 = icmp ne %"class.std::vector.0"* %10, %11
  %13 = select i1 %12, i32 1813820812, i32 681510315
  store i32 %13, i32* %5
  br label %21

; <label>:14:                                     ; preds = %6
  %15 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %16 = call %"class.std::vector.0"* @_ZSt11__addressofISt6vectorISt4pairIiiESaIS2_EEEPT_RS5_(%"class.std::vector.0"* dereferenceable(24) %15) #3
  call void @_ZSt8_DestroyISt6vectorISt4pairIiiESaIS2_EEEvPT_(%"class.std::vector.0"* %16)
  store i32 157740080, i32* %5
  br label %21

; <label>:17:                                     ; preds = %6
  %18 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %19 = getelementptr inbounds %"class.std::vector.0", %"class.std::vector.0"* %18, i32 1
  store %"class.std::vector.0"* %19, %"class.std::vector.0"** %3, align 8
  store i32 855401255, i32* %5
  br label %21

; <label>:20:                                     ; preds = %6
  ret void

; <label>:21:                                     ; preds = %17, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorISt4pairIiiESaIS2_EEEvPT_(%"class.std::vector.0"*) #5 comdat {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.220
  %5 = load i32, i32* @y.221
  %6 = add i32 %4, 302596606
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 302596606
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1278741932, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %71
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1278741932, label %18
    i32 -772744187, label %38
    i32 -1476924471, label %67
    i32 62411809, label %68
  ]

; <label>:17:                                     ; preds = %15
  br label %71

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -772744187, i32 62411809
  store i32 %37, i32* %14
  br label %71

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %39, align 8
  %40 = load %"class.std::vector.0"*, %"class.std::vector.0"** %39, align 8
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"* %40) #3
  %41 = load i32, i32* @x.220
  %42 = load i32, i32* @y.221
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1476924471, i32 62411809
  store i32 %66, i32* %14
  br label %71

; <label>:67:                                     ; preds = %15
  ret void

; <label>:68:                                     ; preds = %15
  %69 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %69, align 8
  %70 = load %"class.std::vector.0"*, %"class.std::vector.0"** %69, align 8
  call void @_ZNSt6vectorISt4pairIiiESaIS1_EED2Ev(%"class.std::vector.0"* %70) #3
  store i32 -772744187, i32* %14
  br label %71

; <label>:71:                                     ; preds = %68, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorISt4pairIiiESaIS2_EESaIS4_EE13_M_deallocateEPS4_m(%"struct.std::_Vector_base"*, %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.0"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.222
  %11 = load i32, i32* @y.223
  %12 = sub i32 %10, -2086353278
  %13 = sub i32 %12, 1
  %14 = add i32 %13, -2086353278
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 1180414523, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %126
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 1180414523, label %24
    i32 -1361282961, label %44
    i32 1469208909, label %68
    i32 1417051635, label %71
    i32 -1242773755, label %86
    i32 1398090613, label %109
    i32 836791916, label %110
    i32 -340166923, label %111
    i32 -1419184643, label %118
  ]

; <label>:23:                                     ; preds = %21
  br label %126

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1361282961, i32 -340166923
  store i32 %43, i32* %20
  br label %126

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base"*, align 8
  %46 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"** %46, %"class.std::vector.0"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %45, align 8
  %48 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %45, align 8
  store %"struct.std::_Vector_base"* %50, %"struct.std::_Vector_base"** %5
  %51 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %52 = load %"class.std::vector.0"*, %"class.std::vector.0"** %51, align 8
  %53 = icmp ne %"class.std::vector.0"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.222
  %55 = load i32, i32* @y.223
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1469208909, i32 -340166923
  store i32 %67, i32* %20
  br label %126

; <label>:68:                                     ; preds = %21
  %69 = load volatile i1, i1* %4
  %70 = select i1 %69, i32 1417051635, i32 836791916
  store i32 %70, i32* %20
  br label %126

; <label>:71:                                     ; preds = %21
  %72 = load i32, i32* @x.222
  %73 = load i32, i32* @y.223
  %74 = sub i32 0, 1
  %75 = add i32 %72, %74
  %76 = sub i32 %72, 1
  %77 = mul i32 %72, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %73, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -1242773755, i32 -1419184643
  store i32 %85, i32* %20
  br label %126

; <label>:86:                                     ; preds = %21
  %87 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %88 to %"class.std::allocator"*
  %90 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %91 = load %"class.std::vector.0"*, %"class.std::vector.0"** %90, align 8
  %92 = load volatile i64*, i64** %6
  %93 = load i64, i64* %92, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1) %89, %"class.std::vector.0"* %91, i64 %93)
  %94 = load i32, i32* @x.222
  %95 = load i32, i32* @y.223
  %96 = add i32 %94, 284509301
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 284509301
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = and i1 %102, %103
  %105 = xor i1 %102, %103
  %106 = or i1 %104, %105
  %107 = or i1 %102, %103
  %108 = select i1 %106, i32 1398090613, i32 -1419184643
  store i32 %108, i32* %20
  br label %126

; <label>:109:                                    ; preds = %21
  store i32 836791916, i32* %20
  br label %126

; <label>:110:                                    ; preds = %21
  ret void

; <label>:111:                                    ; preds = %21
  %112 = alloca %"struct.std::_Vector_base"*, align 8
  %113 = alloca %"class.std::vector.0"*, align 8
  %114 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %112, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %113, align 8
  store i64 %2, i64* %114, align 8
  %115 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %112, align 8
  %116 = load %"class.std::vector.0"*, %"class.std::vector.0"** %113, align 8
  %117 = icmp ne %"class.std::vector.0"* %116, null
  store i32 -1361282961, i32* %20
  br label %126

; <label>:118:                                    ; preds = %21
  %119 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %120 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %119, i32 0, i32 0
  %121 = bitcast %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %120 to %"class.std::allocator"*
  %122 = load volatile %"class.std::vector.0"**, %"class.std::vector.0"*** %7
  %123 = load %"class.std::vector.0"*, %"class.std::vector.0"** %122, align 8
  %124 = load volatile i64*, i64** %6
  %125 = load i64, i64* %124, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1) %121, %"class.std::vector.0"* %123, i64 %125)
  store i32 -1242773755, i32* %20
  br label %126

; <label>:126:                                    ; preds = %118, %111, %109, %86, %71, %68, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorISt4pairIiiESaIS2_EEEE10deallocateERS5_PS4_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.0"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.0"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorISt4pairIiiESaIS3_EEE10deallocateEPS5_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.0"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.226
  %7 = load i32, i32* @y.227
  %8 = sub i32 %6, 798589976
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 798589976
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 542625600, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %69
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 542625600, label %20
    i32 766342806, label %28
    i32 1082072908, label %61
    i32 246380596, label %62
  ]

; <label>:19:                                     ; preds = %17
  br label %69

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 766342806, i32 246380596
  store i32 %27, i32* %16
  br label %69

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %30 = alloca %"class.std::vector.0"*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %29, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %29, align 8
  %33 = load %"class.std::vector.0"*, %"class.std::vector.0"** %30, align 8
  %34 = bitcast %"class.std::vector.0"* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.226
  %36 = load i32, i32* @y.227
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 1082072908, i32 246380596
  store i32 %60, i32* %16
  br label %69

; <label>:61:                                     ; preds = %17
  ret void

; <label>:62:                                     ; preds = %17
  %63 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %64 = alloca %"class.std::vector.0"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %63, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %63, align 8
  %67 = load %"class.std::vector.0"*, %"class.std::vector.0"** %64, align 8
  %68 = bitcast %"class.std::vector.0"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 766342806, i32* %16
  br label %69

; <label>:69:                                     ; preds = %62, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EES4_EvT_S6_RSaIT0_E(%"class.std::vector.0"*, %"class.std::vector.0"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca %"class.std::vector.0"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store %"class.std::vector.0"* %1, %"class.std::vector.0"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %8 = load %"class.std::vector.0"*, %"class.std::vector.0"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorISt4pairIiiESaIS2_EEEvT_S6_(%"class.std::vector.0"* %7, %"class.std::vector.0"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.230
  %5 = load i32, i32* @y.231
  %6 = add i32 %4, -1897354319
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1897354319
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1111916066, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1111916066, label %18
    i32 -287808618, label %26
    i32 -773324710, label %44
    i32 1193807440, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -287808618, i32 1193807440
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %27, align 8
  %29 = load i32, i32* @x.230
  %30 = load i32, i32* @y.231
  %31 = sub i32 %29, 628648687
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 628648687
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -773324710, i32 1193807440
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %46, align 8
  store i32 -287808618, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.__gnu_cxx::new_allocator.8"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EEC2EmRKS6_(%"struct.std::_Vector_base.6"*, i64, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.6"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.7"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %6, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %6, align 8
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %10, %"class.std::allocator.7"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"* %9, i64 %12)
          to label %13 unwind label %44

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.234
  %15 = load i32, i32* @y.235
  %16 = add i32 %14, 560085049
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 560085049
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %53

; <label>:28:                                     ; preds = %13, %53
  %29 = load i32, i32* @x.234
  %30 = load i32, i32* @y.235
  %31 = add i32 %29, -426012141
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, -426012141
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %53

; <label>:43:                                     ; preds = %28
  ret void

; <label>:44:                                     ; preds = %3
  %45 = landingpad { i8*, i32 }
          cleanup
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %7, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %8, align 4
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %10) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %7, align 8
  %50 = load i32, i32* %8, align 4
  %51 = insertvalue { i8*, i32 } undef, i8* %49, 0
  %52 = insertvalue { i8*, i32 } %51, i32 %50, 1
  resume { i8*, i32 } %52

; <label>:53:                                     ; preds = %28, %13
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE21_M_default_initializeEm(%"class.std::vector.5"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.5"* %0, %"class.std::vector.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.5"*, %"class.std::vector.5"** %3, align 8
  %6 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %12 = call dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"* %11) #3
  %13 = call %"class.std::__cxx11::basic_string"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E(%"class.std::__cxx11::basic_string"* %9, i64 %10, %"class.std::allocator.7"* dereferenceable(1) %12)
  %14 = bitcast %"class.std::vector.5"* %5 to %"struct.std::_Vector_base.6"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %15, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %13, %"class.std::__cxx11::basic_string"** %16, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EED2Ev(%"struct.std::_Vector_base.6"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %5 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %13, align 8
  %15 = ptrtoint %"class.std::__cxx11::basic_string"* %11 to i64
  %16 = ptrtoint %"class.std::__cxx11::basic_string"* %14 to i64
  %17 = sub i64 %15, 5250872569715490012
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 5250872569715490012
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 32
  invoke void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.6"* %5, %"class.std::__cxx11::basic_string"* %8, i64 %21)
          to label %22 unwind label %24

; <label>:22:                                     ; preds = %1
  %23 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %23) #3
  ret void

; <label>:24:                                     ; preds = %1
  %25 = load i32, i32* @x.238
  %26 = load i32, i32* @y.239
  %27 = sub i32 0, 1
  %28 = add i32 %25, %27
  %29 = sub i32 %25, 1
  %30 = mul i32 %25, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %26, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %72

; <label>:38:                                     ; preds = %24, %72
  %39 = landingpad { i8*, i32 }
          catch i8* null
  %40 = extractvalue { i8*, i32 } %39, 0
  store i8* %40, i8** %3, align 8
  %41 = extractvalue { i8*, i32 } %39, 1
  store i32 %41, i32* %4, align 4
  %42 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %42) #3
  %43 = load i32, i32* @x.238
  %44 = load i32, i32* @y.239
  %45 = add i32 %43, -286879912
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -286879912
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  br i1 %67, label %69, label %72

; <label>:69:                                     ; preds = %38
  br label %70

; <label>:70:                                     ; preds = %69
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #10
  unreachable

; <label>:72:                                     ; preds = %38, %24
  %73 = landingpad { i8*, i32 }
          catch i8* null
  %74 = extractvalue { i8*, i32 } %73, 0
  store i8* %74, i8** %3, align 8
  %75 = extractvalue { i8*, i32 } %73, 1
  store i32 %75, i32* %4, align 4
  %76 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %76) #3
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implC2ERKS6_(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5 to %"class.std::allocator.7"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS5_(%"class.std::allocator.7"* %6, %"class.std::allocator.7"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %5, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_create_storageEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.242
  %6 = load i32, i32* @y.243
  %7 = sub i32 %5, -673670271
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -673670271
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -207856351, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -207856351, label %19
    i32 385511746, label %27
    i32 1617971, label %74
    i32 589372252, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 385511746, i32 589372252
  store i32 %26, i32* %15
  br label %95

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.6"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %33, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %32, %"class.std::__cxx11::basic_string"** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %38, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %37, %"class.std::__cxx11::basic_string"** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %45, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %44, %"class.std::__cxx11::basic_string"** %46, align 8
  %47 = load i32, i32* @x.242
  %48 = load i32, i32* @y.243
  %49 = sub i32 %47, -99877786
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -99877786
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1617971, i32 589372252
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.6"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.6"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %81, i32 0, i32 0
  store %"class.std::__cxx11::basic_string"* %80, %"class.std::__cxx11::basic_string"** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %86, i32 0, i32 1
  store %"class.std::__cxx11::basic_string"* %85, %"class.std::__cxx11::basic_string"** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl", %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %93, i32 0, i32 2
  store %"class.std::__cxx11::basic_string"* %92, %"class.std::__cxx11::basic_string"** %94, align 8
  store i32 385511746, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"*, %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %3 to %"class.std::allocator.7"*
  call void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEED2Ev(%"class.std::allocator.7"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS5_(%"class.std::allocator.7"*, %"class.std::allocator.7"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store %"class.std::allocator.7"* %1, %"class.std::allocator.7"** %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.8"* %6, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC2ERKS7_(%"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %1, %"class.__gnu_cxx::new_allocator.8"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.6"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.6"*
  %5 = alloca %"struct.std::_Vector_base.6"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5, align 8
  store %"struct.std::_Vector_base.6"* %7, %"struct.std::_Vector_base.6"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1046344513, i32* %9
  %10 = alloca %"class.std::__cxx11::basic_string"*
  br label %11

; <label>:11:                                     ; preds = %2, %71
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1046344513, label %14
    i32 1849943139, label %18
    i32 1461559852, label %24
    i32 -430266509, label %40
    i32 -1620369600, label %67
    i32 1471055277, label %68
    i32 -89460153, label %70
  ]

; <label>:13:                                     ; preds = %11
  br label %71

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1849943139, i32 1461559852
  store i32 %17, i32* %9
  br label %71

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %20 to %"class.std::allocator.7"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.7"* dereferenceable(1) %21, i64 %22)
  store i32 1471055277, i32* %9
  store %"class.std::__cxx11::basic_string"* %23, %"class.std::__cxx11::basic_string"** %10
  br label %71

; <label>:24:                                     ; preds = %11
  %25 = load i32, i32* @x.250
  %26 = load i32, i32* @y.251
  %27 = sub i32 %25, -83466642
  %28 = sub i32 %27, 1
  %29 = add i32 %28, -83466642
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = and i1 %33, %34
  %36 = xor i1 %33, %34
  %37 = or i1 %35, %36
  %38 = or i1 %33, %34
  %39 = select i1 %37, i32 -430266509, i32 -89460153
  store i32 %39, i32* %9
  br label %71

; <label>:40:                                     ; preds = %11
  %41 = load i32, i32* @x.250
  %42 = load i32, i32* @y.251
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -1620369600, i32 -89460153
  store i32 %66, i32* %9
  br label %71

; <label>:67:                                     ; preds = %11
  store i32 1471055277, i32* %9
  store %"class.std::__cxx11::basic_string"* null, %"class.std::__cxx11::basic_string"** %10
  br label %71

; <label>:68:                                     ; preds = %11
  %69 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %10
  ret %"class.std::__cxx11::basic_string"* %69

; <label>:70:                                     ; preds = %11
  store i32 -430266509, i32* %9
  br label %71

; <label>:71:                                     ; preds = %70, %67, %40, %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE8allocateERS6_m(%"class.std::allocator.7"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.7"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %3, align 8
  %6 = bitcast %"class.std::allocator.7"* %5 to %"class.__gnu_cxx::new_allocator.8"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"* %6, i64 %7, i8* null)
  ret %"class.std::__cxx11::basic_string"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.8"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 1242205111, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %81
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1242205111, label %17
    i32 -1544417738, label %22
    i32 780150790, label %23
    i32 -172714104, label %39
    i32 -661365407, label %58
    i32 872583580, label %60
  ]

; <label>:16:                                     ; preds = %14
  br label %81

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1544417738, i32 780150790
  store i32 %21, i32* %13
  br label %81

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.254
  %25 = load i32, i32* @y.255
  %26 = sub i32 %24, -839065545
  %27 = sub i32 %26, 1
  %28 = add i32 %27, -839065545
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -172714104, i32 872583580
  store i32 %38, i32* %13
  br label %81

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 32
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to %"class.std::__cxx11::basic_string"*
  store %"class.std::__cxx11::basic_string"* %43, %"class.std::__cxx11::basic_string"** %4
  %44 = load i32, i32* @x.254
  %45 = load i32, i32* @y.255
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -661365407, i32 872583580
  store i32 %57, i32* %13
  br label %81

; <label>:58:                                     ; preds = %14
  %59 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %59

; <label>:60:                                     ; preds = %14
  %61 = load i64, i64* %8, align 8
  %62 = shl i64 %61, 32
  %63 = add i64 %61, 8842289320468589623
  %64 = sub i64 %63, 32
  %65 = sub i64 %64, 8842289320468589623
  %66 = sub i64 %61, 32
  %67 = mul i64 %65, 32
  %68 = add i64 %61, 4625271910039402321
  %69 = sub i64 %68, 32
  %70 = sub i64 %69, 4625271910039402321
  %71 = sub i64 %61, 32
  %72 = mul i64 %70, 32
  %73 = add i64 %61, -6692569903082748950
  %74 = sub i64 %73, 32
  %75 = sub i64 %74, -6692569903082748950
  %76 = sub i64 %61, 32
  %77 = mul i64 %75, 32
  %78 = mul i64 %61, 32
  %79 = call i8* @_Znwm(i64 %78)
  %80 = bitcast i8* %79 to %"class.std::__cxx11::basic_string"*
  store i32 -172714104, i32* %13
  br label %81

; <label>:81:                                     ; preds = %60, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.8"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.256
  %5 = load i32, i32* @y.257
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -2016713734, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -2016713734, label %17
    i32 -968135640, label %37
    i32 -1148261064, label %54
    i32 962608286, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -968135640, i32 962608286
  store i32 %36, i32* %13
  br label %58

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %38, align 8
  %39 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %38, align 8
  %40 = load i32, i32* @x.256
  %41 = load i32, i32* @y.257
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -1148261064, i32 962608286
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret i64 576460752303423487

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %56, align 8
  store i32 -968135640, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %37, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt27__uninitialized_default_n_aIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmS5_ET_S7_T0_RSaIT1_E(%"class.std::__cxx11::basic_string"*, i64, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.258
  %8 = load i32, i32* @y.259
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 765426972, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %82
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 765426972, label %20
    i32 1917001352, label %40
    i32 1565569750, label %73
    i32 671323248, label %75
  ]

; <label>:19:                                     ; preds = %17
  br label %82

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1917001352, i32 671323248
  store i32 %39, i32* %16
  br label %82

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %42 = alloca i64, align 8
  %43 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %41, align 8
  store i64 %1, i64* %42, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %43, align 8
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  %45 = load i64, i64* %42, align 8
  %46 = call %"class.std::__cxx11::basic_string"* @_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_(%"class.std::__cxx11::basic_string"* %44, i64 %45)
  store %"class.std::__cxx11::basic_string"* %46, %"class.std::__cxx11::basic_string"** %4
  %47 = load i32, i32* @x.258
  %48 = load i32, i32* @y.259
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1565569750, i32 671323248
  store i32 %72, i32* %16
  br label %82

; <label>:73:                                     ; preds = %17
  %74 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  ret %"class.std::__cxx11::basic_string"* %74

; <label>:75:                                     ; preds = %17
  %76 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %77 = alloca i64, align 8
  %78 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %76, align 8
  store i64 %1, i64* %77, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %78, align 8
  %79 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %76, align 8
  %80 = load i64, i64* %77, align 8
  %81 = call %"class.std::__cxx11::basic_string"* @_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_(%"class.std::__cxx11::basic_string"* %79, i64 %80)
  store i32 1917001352, i32* %16
  br label %82

; <label>:82:                                     ; preds = %75, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.7"* @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.6"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.6"*, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %2, align 8
  %3 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %4 to %"class.std::allocator.7"*
  ret %"class.std::allocator.7"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt25__uninitialized_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmET_S7_T0_(%"class.std::__cxx11::basic_string"*, i64) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.262
  %7 = load i32, i32* @y.263
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1763766327, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %70
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1763766327, label %19
    i32 1870238477, label %39
    i32 534726286, label %61
    i32 -645075819, label %63
  ]

; <label>:18:                                     ; preds = %16
  br label %70

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1870238477, i32 -645075819
  store i32 %38, i32* %15
  br label %70

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %41 = alloca i64, align 8
  %42 = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %40, align 8
  store i64 %1, i64* %41, align 8
  store i8 1, i8* %42, align 1
  %43 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %40, align 8
  %44 = load i64, i64* %41, align 8
  %45 = call %"class.std::__cxx11::basic_string"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_(%"class.std::__cxx11::basic_string"* %43, i64 %44)
  store %"class.std::__cxx11::basic_string"* %45, %"class.std::__cxx11::basic_string"** %3
  %46 = load i32, i32* @x.262
  %47 = load i32, i32* @y.263
  %48 = sub i32 %46, 1237625092
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1237625092
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 534726286, i32 -645075819
  store i32 %60, i32* %15
  br label %70

; <label>:61:                                     ; preds = %16
  %62 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3
  ret %"class.std::__cxx11::basic_string"* %62

; <label>:63:                                     ; preds = %16
  %64 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %65 = alloca i64, align 8
  %66 = alloca i8, align 1
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %64, align 8
  store i64 %1, i64* %65, align 8
  store i8 1, i8* %66, align 1
  %67 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %64, align 8
  %68 = load i64, i64* %65, align 8
  %69 = call %"class.std::__cxx11::basic_string"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_(%"class.std::__cxx11::basic_string"* %67, i64 %68)
  store i32 1870238477, i32* %15
  br label %70

; <label>:70:                                     ; preds = %63, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEmEET_S9_T0_(%"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.264
  %4 = load i32, i32* @y.265
  %5 = sub i32 %3, -1226005110
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1226005110
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %344

; <label>:17:                                     ; preds = %2, %344
  %18 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %21 = alloca i8*
  %22 = alloca i32
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %18, align 8
  store i64 %1, i64* %19, align 8
  %23 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8
  store %"class.std::__cxx11::basic_string"* %23, %"class.std::__cxx11::basic_string"** %20, align 8
  %24 = load i32, i32* @x.264
  %25 = load i32, i32* @y.265
  %26 = add i32 %24, 363024377
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 363024377
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %344

; <label>:38:                                     ; preds = %17
  br label %39

; <label>:39:                                     ; preds = %103, %38
  %40 = load i32, i32* @x.264
  %41 = load i32, i32* @y.265
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %351

; <label>:53:                                     ; preds = %39, %351
  %54 = load i64, i64* %19, align 8
  %55 = icmp ugt i64 %54, 0
  %56 = load i32, i32* @x.264
  %57 = load i32, i32* @y.265
  %58 = sub i32 0, 1
  %59 = add i32 %56, %58
  %60 = sub i32 %56, 1
  %61 = mul i32 %56, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %57, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %351

; <label>:69:                                     ; preds = %53
  br i1 %55, label %70, label %162

; <label>:70:                                     ; preds = %69
  %71 = load i32, i32* @x.264
  %72 = load i32, i32* @y.265
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  br i1 %82, label %84, label %354

; <label>:84:                                     ; preds = %70, %354
  %85 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %86 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %85) #3
  %87 = load i32, i32* @x.264
  %88 = load i32, i32* @y.265
  %89 = sub i32 %87, 236186205
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 236186205
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %354

; <label>:101:                                    ; preds = %84
  invoke void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_(%"class.std::__cxx11::basic_string"* %86)
          to label %102 unwind label %110

; <label>:102:                                    ; preds = %101
  br label %103

; <label>:103:                                    ; preds = %102
  %104 = load i64, i64* %19, align 8
  %105 = sub i64 0, -1
  %106 = sub i64 %104, %105
  %107 = add i64 %104, -1
  store i64 %106, i64* %19, align 8
  %108 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %109 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %108, i32 1
  store %"class.std::__cxx11::basic_string"* %109, %"class.std::__cxx11::basic_string"** %20, align 8
  br label %39

; <label>:110:                                    ; preds = %101
  %111 = load i32, i32* @x.264
  %112 = load i32, i32* @y.265
  %113 = sub i32 %111, -1564186578
  %114 = sub i32 %113, 1
  %115 = add i32 %114, -1564186578
  %116 = sub i32 %111, 1
  %117 = mul i32 %111, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %112, 10
  %121 = xor i1 %119, true
  %122 = xor i1 %120, true
  %123 = xor i1 true, true
  %124 = and i1 %121, true
  %125 = and i1 %119, %123
  %126 = and i1 %122, true
  %127 = and i1 %120, %123
  %128 = or i1 %124, %125
  %129 = or i1 %126, %127
  %130 = xor i1 %128, %129
  %131 = or i1 %121, %122
  %132 = xor i1 %131, true
  %133 = or i1 true, %123
  %134 = and i1 %132, %133
  %135 = or i1 %130, %134
  %136 = or i1 %119, %120
  br i1 %135, label %137, label %357

; <label>:137:                                    ; preds = %110, %357
  %138 = landingpad { i8*, i32 }
          catch i8* null
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %21, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %22, align 4
  %141 = load i32, i32* @x.264
  %142 = load i32, i32* @y.265
  %143 = sub i32 %141, -1328024823
  %144 = sub i32 %143, 1
  %145 = add i32 %144, -1328024823
  %146 = sub i32 %141, 1
  %147 = mul i32 %141, %145
  %148 = urem i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = icmp slt i32 %142, 10
  %151 = and i1 %149, %150
  %152 = xor i1 %149, %150
  %153 = or i1 %151, %152
  %154 = or i1 %149, %150
  br i1 %153, label %155, label %357

; <label>:155:                                    ; preds = %137
  br label %156

; <label>:156:                                    ; preds = %155
  %157 = load i8*, i8** %21, align 8
  %158 = call i8* @__cxa_begin_catch(i8* %157) #3
  %159 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %18, align 8
  %160 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  invoke void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %159, %"class.std::__cxx11::basic_string"* %160)
          to label %161 unwind label %164

; <label>:161:                                    ; preds = %156
  invoke void @__cxa_rethrow() #12
          to label %343 unwind label %164

; <label>:162:                                    ; preds = %69
  %163 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  ret %"class.std::__cxx11::basic_string"* %163

; <label>:164:                                    ; preds = %161, %156
  %165 = load i32, i32* @x.264
  %166 = load i32, i32* @y.265
  %167 = add i32 %165, -990332922
  %168 = sub i32 %167, 1
  %169 = sub i32 %168, -990332922
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  br i1 %189, label %191, label %361

; <label>:191:                                    ; preds = %164, %361
  %192 = landingpad { i8*, i32 }
          cleanup
  %193 = extractvalue { i8*, i32 } %192, 0
  store i8* %193, i8** %21, align 8
  %194 = extractvalue { i8*, i32 } %192, 1
  store i32 %194, i32* %22, align 4
  %195 = load i32, i32* @x.264
  %196 = load i32, i32* @y.265
  %197 = sub i32 %195, -1801084618
  %198 = sub i32 %197, 1
  %199 = add i32 %198, -1801084618
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %361

; <label>:209:                                    ; preds = %191
  invoke void @__cxa_end_catch()
          to label %210 unwind label %298

; <label>:210:                                    ; preds = %209
  %211 = load i32, i32* @x.264
  %212 = load i32, i32* @y.265
  %213 = add i32 %211, -508072544
  %214 = sub i32 %213, 1
  %215 = sub i32 %214, -508072544
  %216 = sub i32 %211, 1
  %217 = mul i32 %211, %215
  %218 = urem i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = icmp slt i32 %212, 10
  %221 = and i1 %219, %220
  %222 = xor i1 %219, %220
  %223 = or i1 %221, %222
  %224 = or i1 %219, %220
  br i1 %223, label %225, label %365

; <label>:225:                                    ; preds = %210, %365
  %226 = load i32, i32* @x.264
  %227 = load i32, i32* @y.265
  %228 = sub i32 0, 1
  %229 = add i32 %226, %228
  %230 = sub i32 %226, 1
  %231 = mul i32 %226, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %227, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %365

; <label>:239:                                    ; preds = %225
  br label %241
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:241:                                    ; preds = %239
  %242 = load i32, i32* @x.264
  %243 = load i32, i32* @y.265
  %244 = sub i32 0, 1
  %245 = add i32 %242, %244
  %246 = sub i32 %242, 1
  %247 = mul i32 %242, %245
  %248 = urem i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = icmp slt i32 %243, 10
  %251 = xor i1 %249, true
  %252 = xor i1 %250, true
  %253 = xor i1 false, true
  %254 = and i1 %251, false
  %255 = and i1 %249, %253
  %256 = and i1 %252, false
  %257 = and i1 %250, %253
  %258 = or i1 %254, %255
  %259 = or i1 %256, %257
  %260 = xor i1 %258, %259
  %261 = or i1 %251, %252
  %262 = xor i1 %261, true
  %263 = or i1 false, %253
  %264 = and i1 %262, %263
  %265 = or i1 %260, %264
  %266 = or i1 %249, %250
  br i1 %265, label %267, label %366

; <label>:267:                                    ; preds = %241, %366
  %268 = load i8*, i8** %21, align 8
  %269 = load i32, i32* %22, align 4
  %270 = insertvalue { i8*, i32 } undef, i8* %268, 0
  %271 = insertvalue { i8*, i32 } %270, i32 %269, 1
  %272 = load i32, i32* @x.264
  %273 = load i32, i32* @y.265
  %274 = sub i32 0, 1
  %275 = add i32 %272, %274
  %276 = sub i32 %272, 1
  %277 = mul i32 %272, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %273, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 false, true
  %284 = and i1 %281, false
  %285 = and i1 %279, %283
  %286 = and i1 %282, false
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 false, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %366

; <label>:297:                                    ; preds = %267
  resume { i8*, i32 } %271

; <label>:298:                                    ; preds = %209
  %299 = load i32, i32* @x.264
  %300 = load i32, i32* @y.265
  %301 = sub i32 %299, 703154436
  %302 = sub i32 %301, 1
  %303 = add i32 %302, 703154436
  %304 = sub i32 %299, 1
  %305 = mul i32 %299, %303
  %306 = urem i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = icmp slt i32 %300, 10
  %309 = xor i1 %307, true
  %310 = xor i1 %308, true
  %311 = xor i1 true, true
  %312 = and i1 %309, true
  %313 = and i1 %307, %311
  %314 = and i1 %310, true
  %315 = and i1 %308, %311
  %316 = or i1 %312, %313
  %317 = or i1 %314, %315
  %318 = xor i1 %316, %317
  %319 = or i1 %309, %310
  %320 = xor i1 %319, true
  %321 = or i1 true, %311
  %322 = and i1 %320, %321
  %323 = or i1 %318, %322
  %324 = or i1 %307, %308
  br i1 %323, label %325, label %371

; <label>:325:                                    ; preds = %298, %371
  %326 = landingpad { i8*, i32 }
          catch i8* null
  %327 = extractvalue { i8*, i32 } %326, 0
  call void @__clang_call_terminate(i8* %327) #10
  %328 = load i32, i32* @x.264
  %329 = load i32, i32* @y.265
  %330 = sub i32 %328, -413082776
  %331 = sub i32 %330, 1
  %332 = add i32 %331, -413082776
  %333 = sub i32 %328, 1
  %334 = mul i32 %328, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %329, 10
  %338 = and i1 %336, %337
  %339 = xor i1 %336, %337
  %340 = or i1 %338, %339
  %341 = or i1 %336, %337
  br i1 %340, label %342, label %371

; <label>:342:                                    ; preds = %325
  unreachable

; <label>:343:                                    ; preds = %161
  unreachable

; <label>:344:                                    ; preds = %17, %2
  %345 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %346 = alloca i64, align 8
  %347 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %348 = alloca i8*
  %349 = alloca i32
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %345, align 8
  store i64 %1, i64* %346, align 8
  %350 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %345, align 8
  store %"class.std::__cxx11::basic_string"* %350, %"class.std::__cxx11::basic_string"** %347, align 8
  br label %17

; <label>:351:                                    ; preds = %53, %39
  %352 = load i64, i64* %19, align 8
  %353 = icmp ugt i64 %352, 0
  br label %53

; <label>:354:                                    ; preds = %84, %70
  %355 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %20, align 8
  %356 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %355) #3
  br label %84

; <label>:357:                                    ; preds = %137, %110
  %358 = landingpad { i8*, i32 }
          catch i8* null
  %359 = extractvalue { i8*, i32 } %358, 0
  store i8* %359, i8** %21, align 8
  %360 = extractvalue { i8*, i32 } %358, 1
  store i32 %360, i32* %22, align 4
  br label %137

; <label>:361:                                    ; preds = %191, %164
  %362 = landingpad { i8*, i32 }
          cleanup
  %363 = extractvalue { i8*, i32 } %362, 0
  store i8* %363, i8** %21, align 8
  %364 = extractvalue { i8*, i32 } %362, 1
  store i32 %364, i32* %22, align 4
  br label %191

; <label>:365:                                    ; preds = %225, %210
  br label %225

; <label>:366:                                    ; preds = %267, %241
  %367 = load i8*, i8** %21, align 8
  %368 = load i32, i32* %22, align 4
  %369 = insertvalue { i8*, i32 } undef, i8* %367, 0
  %370 = insertvalue { i8*, i32 } %369, i32 %368, 1
  br label %267

; <label>:371:                                    ; preds = %325, %298
  %372 = landingpad { i8*, i32 }
          catch i8* null
  %373 = extractvalue { i8*, i32 } %372, 0
  call void @__clang_call_terminate(i8* %373) #10
  br label %325
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEJEEvPT_DpOT0_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"* %5) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  %4 = bitcast %"class.std::__cxx11::basic_string"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::__cxx11::basic_string"*
  ret %"class.std::__cxx11::basic_string"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %6 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"* %5, %"class.std::__cxx11::basic_string"* %6)
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEvT_S9_(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*) #0 comdat align 2 {
  %3 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %4 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %3, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %4, align 8
  %5 = alloca i32
  store i32 -637991606, i32* %5
  br label %6

; <label>:6:                                      ; preds = %2, %68
  %7 = load i32, i32* %5
  switch i32 %7, label %8 [
    i32 -637991606, label %9
    i32 541988112, label %14
    i32 -272544143, label %30
    i32 -1928531604, label %60
    i32 387473247, label %61
    i32 1030488421, label %64
    i32 -899961475, label %65
  ]

; <label>:8:                                      ; preds = %6
  br label %68

; <label>:9:                                      ; preds = %6
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %11 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4, align 8
  %12 = icmp ne %"class.std::__cxx11::basic_string"* %10, %11
  %13 = select i1 %12, i32 541988112, i32 1030488421
  store i32 %13, i32* %5
  br label %68

; <label>:14:                                     ; preds = %6
  %15 = load i32, i32* @x.272
  %16 = load i32, i32* @y.273
  %17 = sub i32 %15, 160483618
  %18 = sub i32 %17, 1
  %19 = add i32 %18, 160483618
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -272544143, i32 -899961475
  store i32 %29, i32* %5
  br label %68

; <label>:30:                                     ; preds = %6
  %31 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %32 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %31) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %32)
  %33 = load i32, i32* @x.272
  %34 = load i32, i32* @y.273
  %35 = sub i32 %33, 951292378
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 951292378
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1928531604, i32 -899961475
  store i32 %59, i32* %5
  br label %68

; <label>:60:                                     ; preds = %6
  store i32 387473247, i32* %5
  br label %68

; <label>:61:                                     ; preds = %6
  %62 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %63 = getelementptr inbounds %"class.std::__cxx11::basic_string", %"class.std::__cxx11::basic_string"* %62, i32 1
  store %"class.std::__cxx11::basic_string"* %63, %"class.std::__cxx11::basic_string"** %3, align 8
  store i32 -637991606, i32* %5
  br label %68

; <label>:64:                                     ; preds = %6
  ret void

; <label>:65:                                     ; preds = %6
  %66 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %3, align 8
  %67 = call %"class.std::__cxx11::basic_string"* @_ZSt11__addressofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEPT_RS6_(%"class.std::__cxx11::basic_string"* dereferenceable(32) %66) #3
  call void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"* %67)
  store i32 -272544143, i32* %5
  br label %68

; <label>:68:                                     ; preds = %65, %61, %60, %30, %14, %9, %8
  br label %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvPT_(%"class.std::__cxx11::basic_string"*) #5 comdat {
  %2 = alloca %"class.std::__cxx11::basic_string"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %2, align 8
  %3 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %2, align 8
  call void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"* %3) #3
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED1Ev(%"class.std::__cxx11::basic_string"*) unnamed_addr #2

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.6"*, %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::__cxx11::basic_string"*
  %5 = alloca %"struct.std::_Vector_base.6"*
  %6 = alloca %"struct.std::_Vector_base.6"*, align 8
  %7 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.6"* %0, %"struct.std::_Vector_base.6"** %6, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %6, align 8
  store %"struct.std::_Vector_base.6"* %9, %"struct.std::_Vector_base.6"** %5
  %10 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  store %"class.std::__cxx11::basic_string"* %10, %"class.std::__cxx11::basic_string"** %4
  %11 = alloca i32
  store i32 1113761599, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %88
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 1113761599, label %15
    i32 -150631708, label %19
    i32 649979036, label %47
    i32 -2007623357, label %80
    i32 -1801128195, label %81
    i32 1978709021, label %82
  ]

; <label>:14:                                     ; preds = %12
  br label %88

; <label>:15:                                     ; preds = %12
  %16 = load volatile %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %4
  %17 = icmp ne %"class.std::__cxx11::basic_string"* %16, null
  %18 = select i1 %17, i32 -150631708, i32 -1801128195
  store i32 %18, i32* %11
  br label %88

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.276
  %21 = load i32, i32* @y.277
  %22 = sub i32 %20, 1465054000
  %23 = sub i32 %22, 1
  %24 = add i32 %23, 1465054000
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 true, true
  %33 = and i1 %30, true
  %34 = and i1 %28, %32
  %35 = and i1 %31, true
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 true, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 649979036, i32 1978709021
  store i32 %46, i32* %11
  br label %88

; <label>:47:                                     ; preds = %12
  %48 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %49 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %48, i32 0, i32 0
  %50 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %49 to %"class.std::allocator.7"*
  %51 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %52 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.7"* dereferenceable(1) %50, %"class.std::__cxx11::basic_string"* %51, i64 %52)
  %53 = load i32, i32* @x.276
  %54 = load i32, i32* @y.277
  %55 = add i32 %53, 1019064705
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1019064705
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -2007623357, i32 1978709021
  store i32 %79, i32* %11
  br label %88

; <label>:80:                                     ; preds = %12
  store i32 -1801128195, i32* %11
  br label %88

; <label>:81:                                     ; preds = %12
  ret void

; <label>:82:                                     ; preds = %12
  %83 = load volatile %"struct.std::_Vector_base.6"*, %"struct.std::_Vector_base.6"** %5
  %84 = getelementptr inbounds %"struct.std::_Vector_base.6", %"struct.std::_Vector_base.6"* %83, i32 0, i32 0
  %85 = bitcast %"struct.std::_Vector_base<std::__cxx11::basic_string<char>, std::allocator<std::__cxx11::basic_string<char> > >::_Vector_impl"* %84 to %"class.std::allocator.7"*
  %86 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %7, align 8
  %87 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.7"* dereferenceable(1) %85, %"class.std::__cxx11::basic_string"* %86, i64 %87)
  store i32 649979036, i32* %11
  br label %88

; <label>:88:                                     ; preds = %82, %80, %47, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEE10deallocateERS6_PS5_m(%"class.std::allocator.7"* dereferenceable(1), %"class.std::__cxx11::basic_string"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.7"*, align 8
  %5 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.7"* %0, %"class.std::allocator.7"** %4, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.7"*, %"class.std::allocator.7"** %4, align 8
  %8 = bitcast %"class.std::allocator.7"* %7 to %"class.__gnu_cxx::new_allocator.8"*
  %9 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.8"* %8, %"class.std::__cxx11::basic_string"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator.8"*, %"class.std::__cxx11::basic_string"*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.280
  %7 = load i32, i32* @y.281
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -2008958436, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2008958436, label %19
    i32 -1255937818, label %27
    i32 -1472506590, label %61
    i32 357947878, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1255937818, i32 357947878
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %29 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %30 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %28, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %29, align 8
  store i64 %2, i64* %30, align 8
  %31 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %28, align 8
  %32 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %29, align 8
  %33 = bitcast %"class.std::__cxx11::basic_string"* %32 to i8*
  call void @_ZdlPv(i8* %33) #3
  %34 = load i32, i32* @x.280
  %35 = load i32, i32* @y.281
  %36 = add i32 %34, 1807239246
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1807239246
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1472506590, i32 357947878
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.__gnu_cxx::new_allocator.8"*, align 8
  %64 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %65 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.8"* %0, %"class.__gnu_cxx::new_allocator.8"** %63, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %64, align 8
  store i64 %2, i64* %65, align 8
  %66 = load %"class.__gnu_cxx::new_allocator.8"*, %"class.__gnu_cxx::new_allocator.8"** %63, align 8
  %67 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %64, align 8
  %68 = bitcast %"class.std::__cxx11::basic_string"* %67 to i8*
  call void @_ZdlPv(i8* %68) #3
  store i32 -1255937818, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES5_EvT_S7_RSaIT0_E(%"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"*, %"class.std::allocator.7"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.282
  %7 = load i32, i32* @y.283
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1817800078, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1817800078, label %19
    i32 833507251, label %39
    i32 -2046932518, label %60
    i32 482436987, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 833507251, i32 482436987
  store i32 %38, i32* %15
  br label %67

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %41 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %42 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %40, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %41, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %42, align 8
  %43 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %40, align 8
  %44 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %41, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %43, %"class.std::__cxx11::basic_string"* %44)
  %45 = load i32, i32* @x.282
  %46 = load i32, i32* @y.283
  %47 = sub i32 %45, 1916121764
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 1916121764
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 -2046932518, i32 482436987
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %63 = alloca %"class.std::__cxx11::basic_string"*, align 8
  %64 = alloca %"class.std::allocator.7"*, align 8
  store %"class.std::__cxx11::basic_string"* %0, %"class.std::__cxx11::basic_string"** %62, align 8
  store %"class.std::__cxx11::basic_string"* %1, %"class.std::__cxx11::basic_string"** %63, align 8
  store %"class.std::allocator.7"* %2, %"class.std::allocator.7"** %64, align 8
  %65 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %62, align 8
  %66 = load %"class.std::__cxx11::basic_string"*, %"class.std::__cxx11::basic_string"** %63, align 8
  call void @_ZSt8_DestroyIPNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEvT_S7_(%"class.std::__cxx11::basic_string"* %65, %"class.std::__cxx11::basic_string"* %66)
  store i32 833507251, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator.2"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %5, align 8
  %10 = bitcast %"class.std::allocator.2"* %9 to %"class.__gnu_cxx::new_allocator.3"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %10, %"struct.std::pair"* %11, i32* dereferenceable(4) %13, i32* dereferenceable(4) %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJiiEEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::pair"*, align 8
  %9 = alloca %"struct.std::pair"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %12, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %13, i64* %7, align 8
  %14 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %15 = load i64, i64* %7, align 8
  %16 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %14, i64 %15)
  store %"struct.std::pair"* %16, %"struct.std::pair"** %8, align 8
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  store %"struct.std::pair"* %17, %"struct.std::pair"** %9, align 8
  %18 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %19 to %"class.std::allocator.2"*
  %21 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %22 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %21, i64 %22
  %24 = load i32*, i32** %5, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %24) #3
  %26 = load i32*, i32** %6, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %26) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %20, %"struct.std::pair"* %23, i32* dereferenceable(4) %25, i32* dereferenceable(4) %27)
          to label %28 unwind label %44

; <label>:28:                                     ; preds = %3
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %29 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %30, i32 0, i32 0
  %32 = load %"struct.std::pair"*, %"struct.std::pair"** %31, align 8
  %33 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %34, i32 0, i32 1
  %36 = load %"struct.std::pair"*, %"struct.std::pair"** %35, align 8
  %37 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %38 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %39 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %38) #3
  %40 = invoke %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiiES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"* %32, %"struct.std::pair"* %36, %"struct.std::pair"* %37, %"class.std::allocator.2"* dereferenceable(1) %39)
          to label %41 unwind label %44

; <label>:41:                                     ; preds = %28
  store %"struct.std::pair"* %40, %"struct.std::pair"** %9, align 8
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %43 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %42, i32 1
  store %"struct.std::pair"* %43, %"struct.std::pair"** %9, align 8
  br label %213

; <label>:44:                                     ; preds = %28, %3
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %10, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %11, align 4
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %10, align 8
  %50 = call i8* @__cxa_begin_catch(i8* %49) #3
  %51 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %52 = icmp ne %"struct.std::pair"* %51, null
  br i1 %52, label %106, label %53

; <label>:53:                                     ; preds = %48
  %54 = load i32, i32* @x.288
  %55 = load i32, i32* @y.289
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 false, true
  %66 = and i1 %63, false
  %67 = and i1 %61, %65
  %68 = and i1 %64, false
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 false, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  br i1 %77, label %79, label %321

; <label>:79:                                     ; preds = %53, %321
  %80 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %80, i32 0, i32 0
  %82 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %81 to %"class.std::allocator.2"*
  %83 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %84 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %85 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %83, i64 %84
  %86 = load i32, i32* @x.288
  %87 = load i32, i32* @y.289
  %88 = sub i32 %86, 1315554531
  %89 = sub i32 %88, 1
  %90 = add i32 %89, 1315554531
  %91 = sub i32 %86, 1
  %92 = mul i32 %86, %90
  %93 = urem i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = icmp slt i32 %87, 10
  %96 = and i1 %94, %95
  %97 = xor i1 %94, %95
  %98 = or i1 %96, %97
  %99 = or i1 %94, %95
  br i1 %98, label %100, label %321

; <label>:100:                                    ; preds = %79
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.2"* dereferenceable(1) %82, %"struct.std::pair"* %85)
          to label %101 unwind label %102

; <label>:101:                                    ; preds = %100
  br label %166

; <label>:102:                                    ; preds = %170, %166, %164, %100
  %103 = landingpad { i8*, i32 }
          cleanup
  %104 = extractvalue { i8*, i32 } %103, 0
  store i8* %104, i8** %10, align 8
  %105 = extractvalue { i8*, i32 } %103, 1
  store i32 %105, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %171 unwind label %317

; <label>:106:                                    ; preds = %48
  %107 = load i32, i32* @x.288
  %108 = load i32, i32* @y.289
  %109 = sub i32 %107, 1668929890
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 1668929890
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 true, true
  %120 = and i1 %117, true
  %121 = and i1 %115, %119
  %122 = and i1 %118, true
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 true, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %328

; <label>:133:                                    ; preds = %106, %328
  %134 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %135 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %136 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %137 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %136) #3
  %138 = load i32, i32* @x.288
  %139 = load i32, i32* @y.289
  %140 = add i32 %138, 336657384
  %141 = sub i32 %140, 1
  %142 = sub i32 %141, 336657384
  %143 = sub i32 %138, 1
  %144 = mul i32 %138, %142
  %145 = urem i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = icmp slt i32 %139, 10
  %148 = xor i1 %146, true
  %149 = xor i1 %147, true
  %150 = xor i1 true, true
  %151 = and i1 %148, true
  %152 = and i1 %146, %150
  %153 = and i1 %149, true
  %154 = and i1 %147, %150
  %155 = or i1 %151, %152
  %156 = or i1 %153, %154
  %157 = xor i1 %155, %156
  %158 = or i1 %148, %149
  %159 = xor i1 %158, true
  %160 = or i1 true, %150
  %161 = and i1 %159, %160
  %162 = or i1 %157, %161
  %163 = or i1 %146, %147
  br i1 %162, label %164, label %328

; <label>:164:                                    ; preds = %133
  invoke void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %134, %"struct.std::pair"* %135, %"class.std::allocator.2"* dereferenceable(1) %137)
          to label %165 unwind label %102

; <label>:165:                                    ; preds = %164
  br label %166

; <label>:166:                                    ; preds = %165, %101
  %167 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %168 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %169 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %167, %"struct.std::pair"* %168, i64 %169)
          to label %170 unwind label %102

; <label>:170:                                    ; preds = %166
  invoke void @__cxa_rethrow() #12
          to label %320 unwind label %102

; <label>:171:                                    ; preds = %102
  %172 = load i32, i32* @x.288
  %173 = load i32, i32* @y.289
  %174 = sub i32 %172, -2039961075
  %175 = sub i32 %174, 1
  %176 = add i32 %175, -2039961075
  %177 = sub i32 %172, 1
  %178 = mul i32 %172, %176
  %179 = urem i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = icmp slt i32 %173, 10
  %182 = xor i1 %180, true
  %183 = xor i1 %181, true
  %184 = xor i1 false, true
  %185 = and i1 %182, false
  %186 = and i1 %180, %184
  %187 = and i1 %183, false
  %188 = and i1 %181, %184
  %189 = or i1 %185, %186
  %190 = or i1 %187, %188
  %191 = xor i1 %189, %190
  %192 = or i1 %182, %183
  %193 = xor i1 %192, true
  %194 = or i1 false, %184
  %195 = and i1 %193, %194
  %196 = or i1 %191, %195
  %197 = or i1 %180, %181
  br i1 %196, label %198, label %333

; <label>:198:                                    ; preds = %171, %333
  %199 = load i32, i32* @x.288
  %200 = load i32, i32* @y.289
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %333

; <label>:212:                                    ; preds = %198
  br label %312

; <label>:213:                                    ; preds = %41
  %214 = load i32, i32* @x.288
  %215 = load i32, i32* @y.289
  %216 = add i32 %214, -77604939
  %217 = sub i32 %216, 1
  %218 = sub i32 %217, -77604939
  %219 = sub i32 %214, 1
  %220 = mul i32 %214, %218
  %221 = urem i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = icmp slt i32 %215, 10
  %224 = xor i1 %222, true
  %225 = xor i1 %223, true
  %226 = xor i1 false, true
  %227 = and i1 %224, false
  %228 = and i1 %222, %226
  %229 = and i1 %225, false
  %230 = and i1 %223, %226
  %231 = or i1 %227, %228
  %232 = or i1 %229, %230
  %233 = xor i1 %231, %232
  %234 = or i1 %224, %225
  %235 = xor i1 %234, true
  %236 = or i1 false, %226
  %237 = and i1 %235, %236
  %238 = or i1 %233, %237
  %239 = or i1 %222, %223
  br i1 %238, label %240, label %334

; <label>:240:                                    ; preds = %213, %334
  %241 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %242 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %241, i32 0, i32 0
  %243 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %242, i32 0, i32 0
  %244 = load %"struct.std::pair"*, %"struct.std::pair"** %243, align 8
  %245 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %246 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %245, i32 0, i32 0
  %247 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %246, i32 0, i32 1
  %248 = load %"struct.std::pair"*, %"struct.std::pair"** %247, align 8
  %249 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %250 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %249) #3
  call void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %244, %"struct.std::pair"* %248, %"class.std::allocator.2"* dereferenceable(1) %250)
  %251 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %252 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %253 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %252, i32 0, i32 0
  %254 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %253, i32 0, i32 0
  %255 = load %"struct.std::pair"*, %"struct.std::pair"** %254, align 8
  %256 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %257 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %256, i32 0, i32 0
  %258 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %257, i32 0, i32 2
  %259 = load %"struct.std::pair"*, %"struct.std::pair"** %258, align 8
  %260 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %261 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %260, i32 0, i32 0
  %262 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %261, i32 0, i32 0
  %263 = load %"struct.std::pair"*, %"struct.std::pair"** %262, align 8
  %264 = ptrtoint %"struct.std::pair"* %259 to i64
  %265 = ptrtoint %"struct.std::pair"* %263 to i64
  %266 = sub i64 %264, 1578717581637322808
  %267 = sub i64 %266, %265
  %268 = add i64 %267, 1578717581637322808
  %269 = sub i64 %264, %265
  %270 = sdiv exact i64 %268, 8
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %251, %"struct.std::pair"* %255, i64 %270)
  %271 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %272 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %273, i32 0, i32 0
  store %"struct.std::pair"* %271, %"struct.std::pair"** %274, align 8
  %275 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %276 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %277 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %276, i32 0, i32 0
  %278 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %277, i32 0, i32 1
  store %"struct.std::pair"* %275, %"struct.std::pair"** %278, align 8
  %279 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %280 = load i64, i64* %7, align 8
  %281 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %279, i64 %280
  %282 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %283 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %283, i32 0, i32 2
  store %"struct.std::pair"* %281, %"struct.std::pair"** %284, align 8
  %285 = load i32, i32* @x.288
  %286 = load i32, i32* @y.289
  %287 = add i32 %285, 495255561
  %288 = sub i32 %287, 1
  %289 = sub i32 %288, 495255561
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %334

; <label>:311:                                    ; preds = %240
  ret void

; <label>:312:                                    ; preds = %212
  %313 = load i8*, i8** %10, align 8
  %314 = load i32, i32* %11, align 4
  %315 = insertvalue { i8*, i32 } undef, i8* %313, 0
  %316 = insertvalue { i8*, i32 } %315, i32 %314, 1
  resume { i8*, i32 } %316

; <label>:317:                                    ; preds = %102
  %318 = landingpad { i8*, i32 }
          catch i8* null
  %319 = extractvalue { i8*, i32 } %318, 0
  call void @__clang_call_terminate(i8* %319) #10
  unreachable

; <label>:320:                                    ; preds = %170
  unreachable

; <label>:321:                                    ; preds = %79, %53
  %322 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %323 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %322, i32 0, i32 0
  %324 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %323 to %"class.std::allocator.2"*
  %325 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %326 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %327 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %325, i64 %326
  br label %79

; <label>:328:                                    ; preds = %133, %106
  %329 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %330 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %331 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %332 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %331) #3
  br label %133

; <label>:333:                                    ; preds = %198, %171
  br label %198

; <label>:334:                                    ; preds = %240, %213
  %335 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %336 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %335, i32 0, i32 0
  %337 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %336, i32 0, i32 0
  %338 = load %"struct.std::pair"*, %"struct.std::pair"** %337, align 8
  %339 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %340 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %339, i32 0, i32 0
  %341 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %340, i32 0, i32 1
  %342 = load %"struct.std::pair"*, %"struct.std::pair"** %341, align 8
  %343 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %344 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %343) #3
  call void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %338, %"struct.std::pair"* %342, %"class.std::allocator.2"* dereferenceable(1) %344)
  %345 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %346 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %347 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %346, i32 0, i32 0
  %348 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %347, i32 0, i32 0
  %349 = load %"struct.std::pair"*, %"struct.std::pair"** %348, align 8
  %350 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %351 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %350, i32 0, i32 0
  %352 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %351, i32 0, i32 2
  %353 = load %"struct.std::pair"*, %"struct.std::pair"** %352, align 8
  %354 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %355 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %354, i32 0, i32 0
  %356 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %355, i32 0, i32 0
  %357 = load %"struct.std::pair"*, %"struct.std::pair"** %356, align 8
  %358 = ptrtoint %"struct.std::pair"* %353 to i64
  %359 = ptrtoint %"struct.std::pair"* %357 to i64
  %360 = add i64 %358, -5505712874179899260
  %361 = sub i64 %360, %359
  %362 = sub i64 %361, -5505712874179899260
  %363 = sub i64 %358, %359
  %364 = mul i64 %362, %359
  %365 = shl i64 %358, %359
  %366 = add i64 0, 906866611242871783
  %367 = sub i64 %366, %358
  %368 = sub i64 %367, 906866611242871783
  %369 = sub i64 0, %358
  %370 = sub i64 0, %368
  %371 = sub i64 0, %359
  %372 = add i64 %370, %371
  %373 = sub i64 0, %372
  %374 = add i64 %368, %359
  %375 = sub i64 %358, 2995309400019723971
  %376 = sub i64 %375, %359
  %377 = add i64 %376, 2995309400019723971
  %378 = sub i64 %358, %359
  %379 = mul i64 %377, %359
  %380 = sub i64 %358, 6812280684265436904
  %381 = sub i64 %380, %359
  %382 = add i64 %381, 6812280684265436904
  %383 = sub i64 %358, %359
  %384 = add i64 0, -6268574243880851292
  %385 = sub i64 %384, %382
  %386 = sub i64 %385, -6268574243880851292
  %387 = sub i64 0, %382
  %388 = sub i64 %386, -1941499977432821162
  %389 = add i64 %388, 8
  %390 = add i64 %389, -1941499977432821162
  %391 = add i64 %386, 8
  %392 = shl i64 %382, 8
  %393 = sdiv exact i64 %382, 8
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %345, %"struct.std::pair"* %349, i64 %393)
  %394 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %395 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %396, i32 0, i32 0
  store %"struct.std::pair"* %394, %"struct.std::pair"** %397, align 8
  %398 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %399 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %400 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %399, i32 0, i32 0
  %401 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %400, i32 0, i32 1
  store %"struct.std::pair"* %398, %"struct.std::pair"** %401, align 8
  %402 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %403 = load i64, i64* %7, align 8
  %404 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %402, i64 %403
  %405 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %406 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %405, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %406, i32 0, i32 2
  store %"struct.std::pair"* %404, %"struct.std::pair"** %407, align 8
  br label %240
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.290
  %8 = load i32, i32* @y.291
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 2018191813, i32* %16
  br label %17

; <label>:17:                                     ; preds = %4, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 2018191813, label %20
    i32 -2112285883, label %28
    i32 -272388510, label %56
    i32 -1117038133, label %57
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -2112285883, i32 -1117038133
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %30 = alloca %"struct.std::pair"*, align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %30, align 8
  store i32* %2, i32** %31, align 8
  store i32* %3, i32** %32, align 8
  %33 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %29, align 8
  %34 = load %"struct.std::pair"*, %"struct.std::pair"** %30, align 8
  %35 = bitcast %"struct.std::pair"* %34 to i8*
  %36 = bitcast i8* %35 to %"struct.std::pair"*
  %37 = load i32*, i32** %31, align 8
  %38 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %37) #3
  %39 = load i32*, i32** %32, align 8
  %40 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %39) #3
  call void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"* %36, i32* dereferenceable(4) %38, i32* dereferenceable(4) %40)
  %41 = load i32, i32* @x.290
  %42 = load i32, i32* @y.291
  %43 = add i32 %41, 1407597130
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1407597130
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -272388510, i32 -1117038133
  store i32 %55, i32* %16
  br label %70

; <label>:56:                                     ; preds = %17
  ret void

; <label>:57:                                     ; preds = %17
  %58 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %59 = alloca %"struct.std::pair"*, align 8
  %60 = alloca i32*, align 8
  %61 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %58, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %59, align 8
  store i32* %2, i32** %60, align 8
  store i32* %3, i32** %61, align 8
  %62 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %58, align 8
  %63 = load %"struct.std::pair"*, %"struct.std::pair"** %59, align 8
  %64 = bitcast %"struct.std::pair"* %63 to i8*
  %65 = bitcast i8* %64 to %"struct.std::pair"*
  %66 = load i32*, i32** %60, align 8
  %67 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %66) #3
  %68 = load i32*, i32** %61, align 8
  %69 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %68) #3
  call void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"* %65, i32* dereferenceable(4) %67, i32* dereferenceable(4) %69)
  store i32 -2112285883, i32* %16
  br label %70

; <label>:70:                                     ; preds = %57, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IiivEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca %"struct.std::pair"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 0
  %9 = load i32*, i32** %5, align 8
  %10 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %9) #3
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %8, align 4
  %12 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %7, i32 0, i32 1
  %13 = load i32*, i32** %6, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %12, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.0"*
  %9 = alloca %"class.std::vector.0"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.0"*, %"class.std::vector.0"** %9, align 8
  store %"class.std::vector.0"* %14, %"class.std::vector.0"** %8
  %15 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %16 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %15) #3
  %17 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %18 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %17) #3
  %19 = sub i64 %16, 1256595738787754780
  %20 = sub i64 %19, %18
  %21 = add i64 %20, 1256595738787754780
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -2007540748, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %243
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -2007540748, label %29
    i32 1522425789, label %34
    i32 1778391318, label %50
    i32 -1553100688, label %79
    i32 -937801603, label %80
    i32 1511780710, label %108
    i32 898131051, label %150
    i32 991260430, label %153
    i32 -983326464, label %159
    i32 -1992136771, label %162
    i32 57224173, label %190
    i32 -1786453288, label %207
    i32 -87887961, label %209
    i32 -566722827, label %211
    i32 368482030, label %213
    i32 -1018329785, label %241
  ]

; <label>:28:                                     ; preds = %26
  br label %243

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 1522425789, i32 -937801603
  store i32 %33, i32* %24
  br label %243

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.294
  %36 = load i32, i32* @y.295
  %37 = sub i32 %35, -1063800493
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1063800493
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1778391318, i32 -566722827
  store i32 %49, i32* %24
  br label %243

; <label>:50:                                     ; preds = %26
  %51 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %51) #12
  %52 = load i32, i32* @x.294
  %53 = load i32, i32* @y.295
  %54 = add i32 %52, 1900261337
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 1900261337
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 -1553100688, i32 -566722827
  store i32 %78, i32* %24
  br label %243

; <label>:79:                                     ; preds = %26
  unreachable

; <label>:80:                                     ; preds = %26
  %81 = load i32, i32* @x.294
  %82 = load i32, i32* @y.295
  %83 = add i32 %81, -1450211927
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -1450211927
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 1511780710, i32 368482030
  store i32 %107, i32* %24
  br label %243

; <label>:108:                                    ; preds = %26
  %109 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %110 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %109) #3
  %111 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %112 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %111) #3
  store i64 %112, i64* %13, align 8
  %113 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %114 = load i64, i64* %113, align 8
  %115 = sub i64 %110, -4480962100492658598
  %116 = add i64 %115, %114
  %117 = add i64 %116, -4480962100492658598
  %118 = add i64 %110, %114
  store i64 %117, i64* %12, align 8
  %119 = load i64, i64* %12, align 8
  %120 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %121 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %120) #3
  %122 = icmp ult i64 %119, %121
  store i1 %122, i1* %5
  %123 = load i32, i32* @x.294
  %124 = load i32, i32* @y.295
  %125 = sub i32 %123, 1950973951
  %126 = sub i32 %125, 1
  %127 = add i32 %126, 1950973951
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 true, true
  %136 = and i1 %133, true
  %137 = and i1 %131, %135
  %138 = and i1 %134, true
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 true, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  %149 = select i1 %147, i32 898131051, i32 368482030
  store i32 %149, i32* %24
  br label %243

; <label>:150:                                    ; preds = %26
  %151 = load volatile i1, i1* %5
  %152 = select i1 %151, i32 -983326464, i32 991260430
  store i32 %152, i32* %24
  br label %243

; <label>:153:                                    ; preds = %26
  %154 = load i64, i64* %12, align 8
  %155 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %156 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %155) #3
  %157 = icmp ugt i64 %154, %156
  %158 = select i1 %157, i32 -983326464, i32 -1992136771
  store i32 %158, i32* %24
  br label %243

; <label>:159:                                    ; preds = %26
  %160 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %161 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE8max_sizeEv(%"class.std::vector.0"* %160) #3
  store i32 -87887961, i32* %24
  store i64 %161, i64* %25
  br label %243

; <label>:162:                                    ; preds = %26
  %163 = load i32, i32* @x.294
  %164 = load i32, i32* @y.295
  %165 = add i32 %163, -261142481
  %166 = sub i32 %165, 1
  %167 = sub i32 %166, -261142481
  %168 = sub i32 %163, 1
  %169 = mul i32 %163, %167
  %170 = urem i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = icmp slt i32 %164, 10
  %173 = xor i1 %171, true
  %174 = xor i1 %172, true
  %175 = xor i1 true, true
  %176 = and i1 %173, true
  %177 = and i1 %171, %175
  %178 = and i1 %174, true
  %179 = and i1 %172, %175
  %180 = or i1 %176, %177
  %181 = or i1 %178, %179
  %182 = xor i1 %180, %181
  %183 = or i1 %173, %174
  %184 = xor i1 %183, true
  %185 = or i1 true, %175
  %186 = and i1 %184, %185
  %187 = or i1 %182, %186
  %188 = or i1 %171, %172
  %189 = select i1 %187, i32 57224173, i32 -1018329785
  store i32 %189, i32* %24
  br label %243

; <label>:190:                                    ; preds = %26
  %191 = load i64, i64* %12, align 8
  store i64 %191, i64* %4
  %192 = load i32, i32* @x.294
  %193 = load i32, i32* @y.295
  %194 = sub i32 %192, 2123398200
  %195 = sub i32 %194, 1
  %196 = add i32 %195, 2123398200
  %197 = sub i32 %192, 1
  %198 = mul i32 %192, %196
  %199 = urem i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = icmp slt i32 %193, 10
  %202 = and i1 %200, %201
  %203 = xor i1 %200, %201
  %204 = or i1 %202, %203
  %205 = or i1 %200, %201
  %206 = select i1 %204, i32 -1786453288, i32 -1018329785
  store i32 %206, i32* %24
  br label %243

; <label>:207:                                    ; preds = %26
  store i32 -87887961, i32* %24
  %208 = load volatile i64, i64* %4
  store i64 %208, i64* %25
  br label %243

; <label>:209:                                    ; preds = %26
  %210 = load i64, i64* %25
  ret i64 %210

; <label>:211:                                    ; preds = %26
  %212 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %212) #12
  store i32 1778391318, i32* %24
  br label %243

; <label>:213:                                    ; preds = %26
  %214 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %215 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %214) #3
  %216 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %217 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %216) #3
  store i64 %217, i64* %13, align 8
  %218 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %219 = load i64, i64* %218, align 8
  %220 = sub i64 %215, 3830421235011752533
  %221 = sub i64 %220, %219
  %222 = add i64 %221, 3830421235011752533
  %223 = sub i64 %215, %219
  %224 = mul i64 %222, %219
  %225 = add i64 0, 8214764169979382949
  %226 = sub i64 %225, %215
  %227 = sub i64 %226, 8214764169979382949
  %228 = sub i64 0, %215
  %229 = sub i64 %227, 7232016407155692622
  %230 = add i64 %229, %219
  %231 = add i64 %230, 7232016407155692622
  %232 = add i64 %227, %219
  %233 = sub i64 %215, 448400138716095231
  %234 = add i64 %233, %219
  %235 = add i64 %234, 448400138716095231
  %236 = add i64 %215, %219
  store i64 %235, i64* %12, align 8
  %237 = load i64, i64* %12, align 8
  %238 = load volatile %"class.std::vector.0"*, %"class.std::vector.0"** %8
  %239 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %238) #3
  %240 = icmp ult i64 %237, %239
  store i32 1511780710, i32* %24
  br label %243

; <label>:241:                                    ; preds = %26
  %242 = load i64, i64* %12, align 8
  store i32 57224173, i32* %24
  br label %243

; <label>:243:                                    ; preds = %241, %213, %211, %207, %190, %162, %159, %153, %150, %108, %80, %50, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiiES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.std::pair"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.296
  %9 = load i32, i32* @y.297
  %10 = add i32 %8, 1772119703
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, 1772119703
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 -1609256247, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %98
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -1609256247, label %22
    i32 68245238, label %42
    i32 569874744, label %76
    i32 -295715327, label %78
  ]

; <label>:21:                                     ; preds = %19
  br label %98

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 68245238, i32 -295715327
  store i32 %41, i32* %18
  br label %98

; <label>:42:                                     ; preds = %19
  %43 = alloca %"struct.std::pair"*, align 8
  %44 = alloca %"struct.std::pair"*, align 8
  %45 = alloca %"struct.std::pair"*, align 8
  %46 = alloca %"class.std::allocator.2"*, align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %43, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %44, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %45, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %46, align 8
  %49 = load %"struct.std::pair"*, %"struct.std::pair"** %43, align 8
  %50 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  store %"struct.std::pair"* %50, %"struct.std::pair"** %51, align 8
  %52 = load %"struct.std::pair"*, %"struct.std::pair"** %44, align 8
  %53 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  store %"struct.std::pair"* %53, %"struct.std::pair"** %54, align 8
  %55 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  %56 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"struct.std::pair"*, %"struct.std::pair"** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %48, i32 0, i32 0
  %60 = load %"struct.std::pair"*, %"struct.std::pair"** %59, align 8
  %61 = call %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIiiEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"* %58, %"struct.std::pair"* %60, %"struct.std::pair"* %55, %"class.std::allocator.2"* dereferenceable(1) %56)
  store %"struct.std::pair"* %61, %"struct.std::pair"** %5
  %62 = load i32, i32* @x.296
  %63 = load i32, i32* @y.297
  %64 = sub i32 0, 1
  %65 = add i32 %62, %64
  %66 = sub i32 %62, 1
  %67 = mul i32 %62, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %63, 10
  %71 = and i1 %69, %70
  %72 = xor i1 %69, %70
  %73 = or i1 %71, %72
  %74 = or i1 %69, %70
  %75 = select i1 %73, i32 569874744, i32 -295715327
  store i32 %75, i32* %18
  br label %98

; <label>:76:                                     ; preds = %19
  %77 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %5
  ret %"struct.std::pair"* %77

; <label>:78:                                     ; preds = %19
  %79 = alloca %"struct.std::pair"*, align 8
  %80 = alloca %"struct.std::pair"*, align 8
  %81 = alloca %"struct.std::pair"*, align 8
  %82 = alloca %"class.std::allocator.2"*, align 8
  %83 = alloca %"class.std::move_iterator", align 8
  %84 = alloca %"class.std::move_iterator", align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %79, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %80, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %81, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %82, align 8
  %85 = load %"struct.std::pair"*, %"struct.std::pair"** %79, align 8
  %86 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %85)
  %87 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  store %"struct.std::pair"* %86, %"struct.std::pair"** %87, align 8
  %88 = load %"struct.std::pair"*, %"struct.std::pair"** %80, align 8
  %89 = call %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"* %88)
  %90 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  store %"struct.std::pair"* %89, %"struct.std::pair"** %90, align 8
  %91 = load %"struct.std::pair"*, %"struct.std::pair"** %81, align 8
  %92 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %82, align 8
  %93 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %83, i32 0, i32 0
  %94 = load %"struct.std::pair"*, %"struct.std::pair"** %93, align 8
  %95 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %84, i32 0, i32 0
  %96 = load %"struct.std::pair"*, %"struct.std::pair"** %95, align 8
  %97 = call %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIiiEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"* %94, %"struct.std::pair"* %96, %"struct.std::pair"* %91, %"class.std::allocator.2"* dereferenceable(1) %92)
  store i32 68245238, i32* %18
  br label %98

; <label>:98:                                     ; preds = %78, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.2"* dereferenceable(1), %"struct.std::pair"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.2"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %3, align 8
  %6 = bitcast %"class.std::allocator.2"* %5 to %"class.__gnu_cxx::new_allocator.3"*
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.3"* %6, %"struct.std::pair"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE8max_sizeEv(%"class.std::vector.0"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.0"*, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %2, align 8
  %3 = load %"class.std::vector.0"*, %"class.std::vector.0"** %2, align 8
  %4 = bitcast %"class.std::vector.0"* %3 to %"struct.std::_Vector_base.1"*
  %5 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNKSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt4pairIiiEEE8max_sizeERKS2_(%"class.std::allocator.2"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  %8 = alloca i64*, align 8
  store i64* %0, i64** %7, align 8
  store i64* %1, i64** %8, align 8
  %9 = load i64*, i64** %7, align 8
  %10 = load i64, i64* %9, align 8
  store i64 %10, i64* %5
  %11 = load i64*, i64** %8, align 8
  %12 = load i64, i64* %11, align 8
  store i64 %12, i64* %4
  %13 = alloca i32
  store i32 2036582226, i32* %13
  br label %14

; <label>:14:                                     ; preds = %2, %167
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2036582226, label %17
    i32 -457186257, label %22
    i32 -397402975, label %50
    i32 2017314215, label %79
    i32 373576531, label %80
    i32 1975002183, label %96
    i32 31216560, label %125
    i32 -847762109, label %126
    i32 850784877, label %142
    i32 625238212, label %159
    i32 -504400506, label %161
    i32 -66367277, label %163
    i32 1492587538, label %165
  ]

; <label>:16:                                     ; preds = %14
  br label %167

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %5
  %19 = load volatile i64, i64* %4
  %20 = icmp ult i64 %18, %19
  %21 = select i1 %20, i32 -457186257, i32 373576531
  store i32 %21, i32* %13
  br label %167

; <label>:22:                                     ; preds = %14
  %23 = load i32, i32* @x.302
  %24 = load i32, i32* @y.303
  %25 = sub i32 %23, -669773442
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -669773442
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -397402975, i32 -504400506
  store i32 %49, i32* %13
  br label %167

; <label>:50:                                     ; preds = %14
  %51 = load i64*, i64** %8, align 8
  store i64* %51, i64** %6, align 8
  %52 = load i32, i32* @x.302
  %53 = load i32, i32* @y.303
  %54 = sub i32 %52, -486718105
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -486718105
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 2017314215, i32 -504400506
  store i32 %78, i32* %13
  br label %167

; <label>:79:                                     ; preds = %14
  store i32 -847762109, i32* %13
  br label %167

; <label>:80:                                     ; preds = %14
  %81 = load i32, i32* @x.302
  %82 = load i32, i32* @y.303
  %83 = sub i32 %81, -1235779634
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -1235779634
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 1975002183, i32 -66367277
  store i32 %95, i32* %13
  br label %167

; <label>:96:                                     ; preds = %14
  %97 = load i64*, i64** %7, align 8
  store i64* %97, i64** %6, align 8
  %98 = load i32, i32* @x.302
  %99 = load i32, i32* @y.303
  %100 = sub i32 %98, -895922383
  %101 = sub i32 %100, 1
  %102 = add i32 %101, -895922383
  %103 = sub i32 %98, 1
  %104 = mul i32 %98, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %99, 10
  %108 = xor i1 %106, true
  %109 = xor i1 %107, true
  %110 = xor i1 false, true
  %111 = and i1 %108, false
  %112 = and i1 %106, %110
  %113 = and i1 %109, false
  %114 = and i1 %107, %110
  %115 = or i1 %111, %112
  %116 = or i1 %113, %114
  %117 = xor i1 %115, %116
  %118 = or i1 %108, %109
  %119 = xor i1 %118, true
  %120 = or i1 false, %110
  %121 = and i1 %119, %120
  %122 = or i1 %117, %121
  %123 = or i1 %106, %107
  %124 = select i1 %122, i32 31216560, i32 -66367277
  store i32 %124, i32* %13
  br label %167

; <label>:125:                                    ; preds = %14
  store i32 -847762109, i32* %13
  br label %167

; <label>:126:                                    ; preds = %14
  %127 = load i32, i32* @x.302
  %128 = load i32, i32* @y.303
  %129 = add i32 %127, 1143703828
  %130 = sub i32 %129, 1
  %131 = sub i32 %130, 1143703828
  %132 = sub i32 %127, 1
  %133 = mul i32 %127, %131
  %134 = urem i32 %133, 2
  %135 = icmp eq i32 %134, 0
  %136 = icmp slt i32 %128, 10
  %137 = and i1 %135, %136
  %138 = xor i1 %135, %136
  %139 = or i1 %137, %138
  %140 = or i1 %135, %136
  %141 = select i1 %139, i32 850784877, i32 1492587538
  store i32 %141, i32* %13
  br label %167

; <label>:142:                                    ; preds = %14
  %143 = load i64*, i64** %6, align 8
  store i64* %143, i64** %3
  %144 = load i32, i32* @x.302
  %145 = load i32, i32* @y.303
  %146 = sub i32 %144, -1570037616
  %147 = sub i32 %146, 1
  %148 = add i32 %147, -1570037616
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  %158 = select i1 %156, i32 625238212, i32 1492587538
  store i32 %158, i32* %13
  br label %167

; <label>:159:                                    ; preds = %14
  %160 = load volatile i64*, i64** %3
  ret i64* %160

; <label>:161:                                    ; preds = %14
  %162 = load i64*, i64** %8, align 8
  store i64* %162, i64** %6, align 8
  store i32 -397402975, i32* %13
  br label %167

; <label>:163:                                    ; preds = %14
  %164 = load i64*, i64** %7, align 8
  store i64* %164, i64** %6, align 8
  store i32 1975002183, i32* %13
  br label %167

; <label>:165:                                    ; preds = %14
  %166 = load i64*, i64** %6, align 8
  store i32 850784877, i32* %13
  br label %167

; <label>:167:                                    ; preds = %165, %163, %161, %142, %126, %125, %96, %80, %79, %50, %22, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt4pairIiiEEE8max_sizeERKS2_(%"class.std::allocator.2"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.2"*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %2, align 8
  %3 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %2, align 8
  %4 = bitcast %"class.std::allocator.2"* %3 to %"class.__gnu_cxx::new_allocator.3"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt4pairIiiEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.3"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt4pairIiiEES3_S2_ET0_T_S6_S5_RSaIT1_E(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*, %"class.std::allocator.2"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca %"class.std::allocator.2"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %12, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %7, align 8
  store %"class.std::allocator.2"* %3, %"class.std::allocator.2"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"struct.std::pair"*, %"struct.std::pair"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"struct.std::pair"*, %"struct.std::pair"** %20, align 8
  %22 = call %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIiiEES3_ET0_T_S6_S5_(%"struct.std::pair"* %19, %"struct.std::pair"* %21, %"struct.std::pair"* %17)
  ret %"struct.std::pair"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt32__make_move_if_noexcept_iteratorIPSt4pairIiiESt13move_iteratorIS2_EET0_T_(%"struct.std::pair"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  %4 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt4pairIiiEEC2ES2_(%"class.std::move_iterator"* %2, %"struct.std::pair"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %5, align 8
  ret %"struct.std::pair"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt4pairIiiEES3_ET0_T_S6_S5_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator", align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %8, i32 0, i32 0
  %18 = load %"struct.std::pair"*, %"struct.std::pair"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"struct.std::pair"*, %"struct.std::pair"** %19, align 8
  %21 = call %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIiiEES5_EET0_T_S8_S7_(%"struct.std::pair"* %18, %"struct.std::pair"* %20, %"struct.std::pair"* %16)
  ret %"struct.std::pair"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.std::pair"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt4pairIiiEES5_EET0_T_S8_S7_(%"struct.std::pair"*, %"struct.std::pair"*, %"struct.std::pair"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca %"struct.std::pair"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"struct.std::pair"* %0, %"struct.std::pair"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"struct.std::pair"* %1, %"struct.std::pair"** %11, align 8
  store %"struct.std::pair"* %2, %"struct.std::pair"** %6, align 8
  %12 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  store %"struct.std::pair"* %12, %"struct.std::pair"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %94, %3
  %14 = load i32, i32* @x.312
  %15 = load i32, i32* @y.313
  %16 = add i32 %14, 1289384720
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 1289384720
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %220

; <label>:40:                                     ; preds = %13, %220
  %41 = load i32, i32* @x.312
  %42 = load i32, i32* @y.313
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %220

; <label>:54:                                     ; preds = %40
  %55 = invoke zeroext i1 @_ZStneIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %56 unwind label %97

; <label>:56:                                     ; preds = %54
  br i1 %55, label %57, label %107

; <label>:57:                                     ; preds = %56
  %58 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %59 = call %"struct.std::pair"* @_ZSt11__addressofISt4pairIiiEEPT_RS2_(%"struct.std::pair"* dereferenceable(8) %58) #3
  %60 = invoke dereferenceable(8) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIiiEEdeEv(%"class.std::move_iterator"* %4)
          to label %61 unwind label %97

; <label>:61:                                     ; preds = %57
  invoke void @_ZSt10_ConstructISt4pairIiiEJS1_EEvPT_DpOT0_(%"struct.std::pair"* %59, %"struct.std::pair"* dereferenceable(8) %60)
          to label %62 unwind label %97

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.312
  %64 = load i32, i32* @y.313
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  br i1 %74, label %76, label %221

; <label>:76:                                     ; preds = %62, %221
  %77 = load i32, i32* @x.312
  %78 = load i32, i32* @y.313
  %79 = sub i32 %77, 79711844
  %80 = sub i32 %79, 1
  %81 = add i32 %80, 79711844
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = and i1 %85, %86
  %88 = xor i1 %85, %86
  %89 = or i1 %87, %88
  %90 = or i1 %85, %86
  br i1 %89, label %91, label %221

; <label>:91:                                     ; preds = %76
  br label %92

; <label>:92:                                     ; preds = %91
  %93 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIiiEEppEv(%"class.std::move_iterator"* %4)
          to label %94 unwind label %97

; <label>:94:                                     ; preds = %92
  %95 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  %96 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %95, i32 1
  store %"struct.std::pair"* %96, %"struct.std::pair"** %7, align 8
  br label %13

; <label>:97:                                     ; preds = %92, %61, %57, %54
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %8, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %9, align 4
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %8, align 8
  %103 = call i8* @__cxa_begin_catch(i8* %102) #3
  %104 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %105 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt4pairIiiEEvT_S3_(%"struct.std::pair"* %104, %"struct.std::pair"* %105)
          to label %106 unwind label %109

; <label>:106:                                    ; preds = %101
  invoke void @__cxa_rethrow() #12
          to label %177 unwind label %109

; <label>:107:                                    ; preds = %56
  %108 = load %"struct.std::pair"*, %"struct.std::pair"** %7, align 8
  ret %"struct.std::pair"* %108

; <label>:109:                                    ; preds = %106, %101
  %110 = load i32, i32* @x.312
  %111 = load i32, i32* @y.313
  %112 = sub i32 %110, 885713688
  %113 = sub i32 %112, 1
  %114 = add i32 %113, 885713688
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = xor i1 %118, true
  %121 = xor i1 %119, true
  %122 = xor i1 false, true
  %123 = and i1 %120, false
  %124 = and i1 %118, %122
  %125 = and i1 %121, false
  %126 = and i1 %119, %122
  %127 = or i1 %123, %124
  %128 = or i1 %125, %126
  %129 = xor i1 %127, %128
  %130 = or i1 %120, %121
  %131 = xor i1 %130, true
  %132 = or i1 false, %122
  %133 = and i1 %131, %132
  %134 = or i1 %129, %133
  %135 = or i1 %118, %119
  br i1 %134, label %136, label %222

; <label>:136:                                    ; preds = %109, %222
  %137 = landingpad { i8*, i32 }
          cleanup
  %138 = extractvalue { i8*, i32 } %137, 0
  store i8* %138, i8** %8, align 8
  %139 = extractvalue { i8*, i32 } %137, 1
  store i32 %139, i32* %9, align 4
  %140 = load i32, i32* @x.312
  %141 = load i32, i32* @y.313
  %142 = sub i32 %140, -1120735911
  %143 = sub i32 %142, 1
  %144 = add i32 %143, -1120735911
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = xor i1 %148, true
  %151 = xor i1 %149, true
  %152 = xor i1 true, true
  %153 = and i1 %150, true
  %154 = and i1 %148, %152
  %155 = and i1 %151, true
  %156 = and i1 %149, %152
  %157 = or i1 %153, %154
  %158 = or i1 %155, %156
  %159 = xor i1 %157, %158
  %160 = or i1 %150, %151
  %161 = xor i1 %160, true
  %162 = or i1 true, %152
  %163 = and i1 %161, %162
  %164 = or i1 %159, %163
  %165 = or i1 %148, %149
  br i1 %164, label %166, label %222

; <label>:166:                                    ; preds = %136
  invoke void @__cxa_end_catch()
          to label %167 unwind label %174

; <label>:167:                                    ; preds = %166
  br label %169
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:169:                                    ; preds = %167
  %170 = load i8*, i8** %8, align 8
  %171 = load i32, i32* %9, align 4
  %172 = insertvalue { i8*, i32 } undef, i8* %170, 0
  %173 = insertvalue { i8*, i32 } %172, i32 %171, 1
  resume { i8*, i32 } %173

; <label>:174:                                    ; preds = %166
  %175 = landingpad { i8*, i32 }
          catch i8* null
  %176 = extractvalue { i8*, i32 } %175, 0
  call void @__clang_call_terminate(i8* %176) #10
  unreachable

; <label>:177:                                    ; preds = %106
  %178 = load i32, i32* @x.312
  %179 = load i32, i32* @y.313
  %180 = sub i32 %178, 580678548
  %181 = sub i32 %180, 1
  %182 = add i32 %181, 580678548
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = and i1 %186, %187
  %189 = xor i1 %186, %187
  %190 = or i1 %188, %189
  %191 = or i1 %186, %187
  br i1 %190, label %192, label %226

; <label>:192:                                    ; preds = %177, %226
  %193 = load i32, i32* @x.312
  %194 = load i32, i32* @y.313
  %195 = sub i32 %193, -1088089493
  %196 = sub i32 %195, 1
  %197 = add i32 %196, -1088089493
  %198 = sub i32 %193, 1
  %199 = mul i32 %193, %197
  %200 = urem i32 %199, 2
  %201 = icmp eq i32 %200, 0
  %202 = icmp slt i32 %194, 10
  %203 = xor i1 %201, true
  %204 = xor i1 %202, true
  %205 = xor i1 true, true
  %206 = and i1 %203, true
  %207 = and i1 %201, %205
  %208 = and i1 %204, true
  %209 = and i1 %202, %205
  %210 = or i1 %206, %207
  %211 = or i1 %208, %209
  %212 = xor i1 %210, %211
  %213 = or i1 %203, %204
  %214 = xor i1 %213, true
  %215 = or i1 true, %205
  %216 = and i1 %214, %215
  %217 = or i1 %212, %216
  %218 = or i1 %201, %202
  br i1 %217, label %219, label %226

; <label>:219:                                    ; preds = %192
  unreachable

; <label>:220:                                    ; preds = %40, %13
  br label %40

; <label>:221:                                    ; preds = %76, %62
  br label %76

; <label>:222:                                    ; preds = %136, %109
  %223 = landingpad { i8*, i32 }
          cleanup
  %224 = extractvalue { i8*, i32 } %223, 0
  store i8* %224, i8** %8, align 8
  %225 = extractvalue { i8*, i32 } %223, 1
  store i32 %225, i32* %9, align 4
  br label %136

; <label>:226:                                    ; preds = %192, %177
  br label %192
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.314
  %7 = load i32, i32* @y.315
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1944726796, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1944726796, label %19
    i32 -218498165, label %27
    i32 -1673789064, label %58
    i32 265594819, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -218498165, i32 265594819
  store i32 %26, i32* %15
  br label %94

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  %29 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %29, align 8
  %30 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %31 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %29, align 8
  %32 = call zeroext i1 @_ZSteqIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %30, %"class.std::move_iterator"* dereferenceable(8) %31)
  %33 = xor i1 %32, true
  %34 = and i1 false, %33
  %35 = xor i1 false, true
  %36 = and i1 %32, %35
  %37 = xor i1 true, true
  %38 = and i1 %37, false
  %39 = and i1 true, %35
  %40 = or i1 %34, %36
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = xor i1 %32, true
  store i1 %42, i1* %3
  %44 = load i32, i32* @x.314
  %45 = load i32, i32* @y.315
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1673789064, i32 265594819
  store i32 %57, i32* %15
  br label %94

; <label>:58:                                     ; preds = %16
  %59 = load volatile i1, i1* %3
  ret i1 %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::move_iterator"*, align 8
  %62 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %61, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %62, align 8
  %63 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %61, align 8
  %64 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %62, align 8
  %65 = call zeroext i1 @_ZSteqIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8) %63, %"class.std::move_iterator"* dereferenceable(8) %64)
  %66 = shl i1 %65, true
  %67 = add i1 false, false
  %68 = sub i1 %67, %65
  %69 = sub i1 %68, false
  %70 = sub i1 false, %65
  %71 = sub i1 false, true
  %72 = sub i1 %69, %71
  %73 = add i1 %69, true
  %74 = shl i1 %65, true
  %75 = sub i1 false, true
  %76 = sub i1 %75, %65
  %77 = add i1 %76, true
  %78 = sub i1 false, %65
  %79 = add i1 %77, false
  %80 = add i1 %79, true
  %81 = sub i1 %80, false
  %82 = add i1 %77, true
  %83 = xor i1 %65, true
  %84 = and i1 true, %83
  %85 = xor i1 true, true
  %86 = and i1 %65, %85
  %87 = xor i1 true, true
  %88 = and i1 %87, true
  %89 = and i1 true, %85
  %90 = or i1 %84, %86
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = xor i1 %65, true
  store i32 -218498165, i32* %15
  br label %94

; <label>:94:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt4pairIiiEJS1_EEvPT_DpOT0_(%"struct.std::pair"*, %"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.std::pair"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %3, align 8
  %6 = bitcast %"struct.std::pair"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.std::pair"*
  %8 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %9 = call dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8) %8) #3
  %10 = bitcast %"struct.std::pair"* %7 to i8*
  %11 = bitcast %"struct.std::pair"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 8, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIiiEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.318
  %6 = load i32, i32* @y.319
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 501837022, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 501837022, label %18
    i32 1492943255, label %38
    i32 2027873122, label %70
    i32 497902793, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1492943255, i32 497902793
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %39, align 8
  %40 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %42, %"struct.std::pair"** %2
  %43 = load i32, i32* @x.318
  %44 = load i32, i32* @y.319
  %45 = add i32 %43, -1000878363
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -1000878363
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 2027873122, i32 497902793
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %73, align 8
  %74 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %73, align 8
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %74, i32 0, i32 0
  %76 = load %"struct.std::pair"*, %"struct.std::pair"** %75, align 8
  store i32 1492943255, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt4pairIiiEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %2, align 8
  %3 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  %6 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %5, i32 1
  store %"struct.std::pair"* %6, %"struct.std::pair"** %4, align 8
  ret %"class.std::move_iterator"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt4pairIiiEEbRKSt13move_iteratorIT_ES7_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIiiEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIiiEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"struct.std::pair"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.std::pair"* @_ZNKSt13move_iteratorIPSt4pairIiiEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.324
  %6 = load i32, i32* @y.325
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1434116407, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %76
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1434116407, label %18
    i32 -1251167159, label %38
    i32 1005988258, label %69
    i32 -567494138, label %71
  ]

; <label>:17:                                     ; preds = %15
  br label %76

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1251167159, i32 -567494138
  store i32 %37, i32* %14
  br label %76

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %39, align 8
  %40 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %42 = load %"struct.std::pair"*, %"struct.std::pair"** %41, align 8
  store %"struct.std::pair"* %42, %"struct.std::pair"** %2
  %43 = load i32, i32* @x.324
  %44 = load i32, i32* @y.325
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1005988258, i32 -567494138
  store i32 %68, i32* %14
  br label %76

; <label>:69:                                     ; preds = %15
  %70 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %70

; <label>:71:                                     ; preds = %15
  %72 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %72, align 8
  %73 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %72, align 8
  %74 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %73, i32 0, i32 0
  %75 = load %"struct.std::pair"*, %"struct.std::pair"** %74, align 8
  store i32 -1251167159, i32* %14
  br label %76

; <label>:76:                                     ; preds = %71, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZSt7forwardISt4pairIiiEEOT_RNSt16remove_referenceIS2_E4typeE(%"struct.std::pair"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::pair"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.326
  %6 = load i32, i32* @y.327
  %7 = sub i32 %5, -1561965551
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1561965551
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 986964468, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 986964468, label %19
    i32 -705985805, label %27
    i32 -1939017891, label %45
    i32 506502403, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -705985805, i32 506502403
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  %29 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  store %"struct.std::pair"* %29, %"struct.std::pair"** %2
  %30 = load i32, i32* @x.326
  %31 = load i32, i32* @y.327
  %32 = add i32 %30, 137021886
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 137021886
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -1939017891, i32 506502403
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"struct.std::pair"*, %"struct.std::pair"** %2
  ret %"struct.std::pair"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::pair"*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %48, align 8
  %49 = load %"struct.std::pair"*, %"struct.std::pair"** %48, align 8
  store i32 -705985805, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt4pairIiiEEC2ES2_(%"class.std::move_iterator"*, %"struct.std::pair"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  store %"struct.std::pair"* %7, %"struct.std::pair"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE7destroyIS2_EEvPT_(%"class.__gnu_cxx::new_allocator.3"*, %"struct.std::pair"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %4 = alloca %"struct.std::pair"*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %3, align 8
  %6 = load %"struct.std::pair"*, %"struct.std::pair"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JRiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1), %"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca %"class.std::allocator.2"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.std::allocator.2"* %0, %"class.std::allocator.2"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.std::allocator.2"*, %"class.std::allocator.2"** %5, align 8
  %10 = bitcast %"class.std::allocator.2"* %9 to %"class.__gnu_cxx::new_allocator.3"*
  %11 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %12 = load i32*, i32** %7, align 8
  %13 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %12) #3
  %14 = load i32*, i32** %8, align 8
  %15 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %14) #3
  call void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JRiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"* %10, %"struct.std::pair"* %11, i32* dereferenceable(4) %13, i32* dereferenceable(4) %15)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorISt4pairIiiESaIS1_EE19_M_emplace_back_auxIJRiiEEEvDpOT_(%"class.std::vector.0"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.0"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.std::pair"*, align 8
  %9 = alloca %"struct.std::pair"*, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %12 = load %"class.std::vector.0"*, %"class.std::vector.0"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE12_M_check_lenEmPKc(%"class.std::vector.0"* %12, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %13, i64* %7, align 8
  %14 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %15 = load i64, i64* %7, align 8
  %16 = call %"struct.std::pair"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE11_M_allocateEm(%"struct.std::_Vector_base.1"* %14, i64 %15)
  store %"struct.std::pair"* %16, %"struct.std::pair"** %8, align 8
  %17 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  store %"struct.std::pair"* %17, %"struct.std::pair"** %9, align 8
  %18 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %19 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %18, i32 0, i32 0
  %20 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %19 to %"class.std::allocator.2"*
  %21 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %22 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %23 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %21, i64 %22
  %24 = load i32*, i32** %5, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %24) #3
  %26 = load i32*, i32** %6, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %26) #3
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE9constructIS1_JRiiEEEvRS2_PT_DpOT0_(%"class.std::allocator.2"* dereferenceable(1) %20, %"struct.std::pair"* %23, i32* dereferenceable(4) %25, i32* dereferenceable(4) %27)
          to label %28 unwind label %113

; <label>:28:                                     ; preds = %3
  %29 = load i32, i32* @x.336
  %30 = load i32, i32* @y.337
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %313

; <label>:42:                                     ; preds = %28, %313
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %43 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %44, i32 0, i32 0
  %46 = load %"struct.std::pair"*, %"struct.std::pair"** %45, align 8
  %47 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %48, i32 0, i32 1
  %50 = load %"struct.std::pair"*, %"struct.std::pair"** %49, align 8
  %51 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %52 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %53 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %52) #3
  %54 = load i32, i32* @x.336
  %55 = load i32, i32* @y.337
  %56 = sub i32 %54, -658466977
  %57 = sub i32 %56, 1
  %58 = add i32 %57, -658466977
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %313

; <label>:80:                                     ; preds = %42
  %81 = invoke %"struct.std::pair"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt4pairIiiES2_SaIS1_EET0_T_S5_S4_RT1_(%"struct.std::pair"* %46, %"struct.std::pair"* %50, %"struct.std::pair"* %51, %"class.std::allocator.2"* dereferenceable(1) %53)
          to label %82 unwind label %113

; <label>:82:                                     ; preds = %80
  %83 = load i32, i32* @x.336
  %84 = load i32, i32* @y.337
  %85 = sub i32 0, 1
  %86 = add i32 %83, %85
  %87 = sub i32 %83, 1
  %88 = mul i32 %83, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %84, 10
  %92 = and i1 %90, %91
  %93 = xor i1 %90, %91
  %94 = or i1 %92, %93
  %95 = or i1 %90, %91
  br i1 %94, label %96, label %325

; <label>:96:                                     ; preds = %82, %325
  store %"struct.std::pair"* %81, %"struct.std::pair"** %9, align 8
  %97 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %98 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %97, i32 1
  store %"struct.std::pair"* %98, %"struct.std::pair"** %9, align 8
  %99 = load i32, i32* @x.336
  %100 = load i32, i32* @y.337
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %325

; <label>:112:                                    ; preds = %96
  br label %217

; <label>:113:                                    ; preds = %80, %3
  %114 = landingpad { i8*, i32 }
          catch i8* null
  %115 = extractvalue { i8*, i32 } %114, 0
  store i8* %115, i8** %10, align 8
  %116 = extractvalue { i8*, i32 } %114, 1
  store i32 %116, i32* %11, align 4
  br label %117

; <label>:117:                                    ; preds = %113
  %118 = load i8*, i8** %10, align 8
  %119 = call i8* @__cxa_begin_catch(i8* %118) #3
  %120 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %121 = icmp ne %"struct.std::pair"* %120, null
  br i1 %121, label %163, label %122

; <label>:122:                                    ; preds = %117
  %123 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %124 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %123, i32 0, i32 0
  %125 = bitcast %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %124 to %"class.std::allocator.2"*
  %126 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %127 = call i64 @_ZNKSt6vectorISt4pairIiiESaIS1_EE4sizeEv(%"class.std::vector.0"* %12) #3
  %128 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %126, i64 %127
  invoke void @_ZNSt16allocator_traitsISaISt4pairIiiEEE7destroyIS1_EEvRS2_PT_(%"class.std::allocator.2"* dereferenceable(1) %125, %"struct.std::pair"* %128)
          to label %129 unwind label %159

; <label>:129:                                    ; preds = %122
  %130 = load i32, i32* @x.336
  %131 = load i32, i32* @y.337
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = and i1 %137, %138
  %140 = xor i1 %137, %138
  %141 = or i1 %139, %140
  %142 = or i1 %137, %138
  br i1 %141, label %143, label %328

; <label>:143:                                    ; preds = %129, %328
  %144 = load i32, i32* @x.336
  %145 = load i32, i32* @y.337
  %146 = add i32 %144, -588436100
  %147 = sub i32 %146, 1
  %148 = sub i32 %147, -588436100
  %149 = sub i32 %144, 1
  %150 = mul i32 %144, %148
  %151 = urem i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = icmp slt i32 %145, 10
  %154 = and i1 %152, %153
  %155 = xor i1 %152, %153
  %156 = or i1 %154, %155
  %157 = or i1 %152, %153
  br i1 %156, label %158, label %328

; <label>:158:                                    ; preds = %143
  br label %211

; <label>:159:                                    ; preds = %215, %211, %209, %122
  %160 = landingpad { i8*, i32 }
          cleanup
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %10, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %11, align 4
  invoke void @__cxa_end_catch()
          to label %216 unwind label %267

; <label>:163:                                    ; preds = %117
  %164 = load i32, i32* @x.336
  %165 = load i32, i32* @y.337
  %166 = sub i32 %164, -604846628
  %167 = sub i32 %166, 1
  %168 = add i32 %167, -604846628
  %169 = sub i32 %164, 1
  %170 = mul i32 %164, %168
  %171 = urem i32 %170, 2
  %172 = icmp eq i32 %171, 0
  %173 = icmp slt i32 %165, 10
  %174 = xor i1 %172, true
  %175 = xor i1 %173, true
  %176 = xor i1 true, true
  %177 = and i1 %174, true
  %178 = and i1 %172, %176
  %179 = and i1 %175, true
  %180 = and i1 %173, %176
  %181 = or i1 %177, %178
  %182 = or i1 %179, %180
  %183 = xor i1 %181, %182
  %184 = or i1 %174, %175
  %185 = xor i1 %184, true
  %186 = or i1 true, %176
  %187 = and i1 %185, %186
  %188 = or i1 %183, %187
  %189 = or i1 %172, %173
  br i1 %188, label %190, label %329

; <label>:190:                                    ; preds = %163, %329
  %191 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %192 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %193 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %194 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %193) #3
  %195 = load i32, i32* @x.336
  %196 = load i32, i32* @y.337
  %197 = add i32 %195, -898898403
  %198 = sub i32 %197, 1
  %199 = sub i32 %198, -898898403
  %200 = sub i32 %195, 1
  %201 = mul i32 %195, %199
  %202 = urem i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = icmp slt i32 %196, 10
  %205 = and i1 %203, %204
  %206 = xor i1 %203, %204
  %207 = or i1 %205, %206
  %208 = or i1 %203, %204
  br i1 %207, label %209, label %329

; <label>:209:                                    ; preds = %190
  invoke void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %191, %"struct.std::pair"* %192, %"class.std::allocator.2"* dereferenceable(1) %194)
          to label %210 unwind label %159

; <label>:210:                                    ; preds = %209
  br label %211

; <label>:211:                                    ; preds = %210, %158
  %212 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %213 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %214 = load i64, i64* %7, align 8
  invoke void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %212, %"struct.std::pair"* %213, i64 %214)
          to label %215 unwind label %159

; <label>:215:                                    ; preds = %211
  invoke void @__cxa_rethrow() #12
          to label %312 unwind label %159

; <label>:216:                                    ; preds = %159
  br label %262

; <label>:217:                                    ; preds = %112
  %218 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %219 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %218, i32 0, i32 0
  %220 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %219, i32 0, i32 0
  %221 = load %"struct.std::pair"*, %"struct.std::pair"** %220, align 8
  %222 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %223 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %222, i32 0, i32 0
  %224 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %223, i32 0, i32 1
  %225 = load %"struct.std::pair"*, %"struct.std::pair"** %224, align 8
  %226 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %227 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %226) #3
  call void @_ZSt8_DestroyIPSt4pairIiiES1_EvT_S3_RSaIT0_E(%"struct.std::pair"* %221, %"struct.std::pair"* %225, %"class.std::allocator.2"* dereferenceable(1) %227)
  %228 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %229 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %230 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %229, i32 0, i32 0
  %231 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %230, i32 0, i32 0
  %232 = load %"struct.std::pair"*, %"struct.std::pair"** %231, align 8
  %233 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %234 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %233, i32 0, i32 0
  %235 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %234, i32 0, i32 2
  %236 = load %"struct.std::pair"*, %"struct.std::pair"** %235, align 8
  %237 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %238 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %237, i32 0, i32 0
  %239 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %238, i32 0, i32 0
  %240 = load %"struct.std::pair"*, %"struct.std::pair"** %239, align 8
  %241 = ptrtoint %"struct.std::pair"* %236 to i64
  %242 = ptrtoint %"struct.std::pair"* %240 to i64
  %243 = add i64 %241, -1806252040717849273
  %244 = sub i64 %243, %242
  %245 = sub i64 %244, -1806252040717849273
  %246 = sub i64 %241, %242
  %247 = sdiv exact i64 %245, 8
  call void @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE13_M_deallocateEPS1_m(%"struct.std::_Vector_base.1"* %228, %"struct.std::pair"* %232, i64 %247)
  %248 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %249 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %250 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %249, i32 0, i32 0
  %251 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %250, i32 0, i32 0
  store %"struct.std::pair"* %248, %"struct.std::pair"** %251, align 8
  %252 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %253 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %254 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %253, i32 0, i32 0
  %255 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %254, i32 0, i32 1
  store %"struct.std::pair"* %252, %"struct.std::pair"** %255, align 8
  %256 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %257 = load i64, i64* %7, align 8
  %258 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %256, i64 %257
  %259 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %260 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %260, i32 0, i32 2
  store %"struct.std::pair"* %258, %"struct.std::pair"** %261, align 8
  ret void

; <label>:262:                                    ; preds = %216
  %263 = load i8*, i8** %10, align 8
  %264 = load i32, i32* %11, align 4
  %265 = insertvalue { i8*, i32 } undef, i8* %263, 0
  %266 = insertvalue { i8*, i32 } %265, i32 %264, 1
  resume { i8*, i32 } %266

; <label>:267:                                    ; preds = %159
  %268 = load i32, i32* @x.336
  %269 = load i32, i32* @y.337
  %270 = add i32 %268, 1433653314
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, 1433653314
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = and i1 %276, %277
  %279 = xor i1 %276, %277
  %280 = or i1 %278, %279
  %281 = or i1 %276, %277
  br i1 %280, label %282, label %334

; <label>:282:                                    ; preds = %267, %334
  %283 = landingpad { i8*, i32 }
          catch i8* null
  %284 = extractvalue { i8*, i32 } %283, 0
  call void @__clang_call_terminate(i8* %284) #10
  %285 = load i32, i32* @x.336
  %286 = load i32, i32* @y.337
  %287 = add i32 %285, -1822717080
  %288 = sub i32 %287, 1
  %289 = sub i32 %288, -1822717080
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %334

; <label>:311:                                    ; preds = %282
  unreachable

; <label>:312:                                    ; preds = %215
  unreachable

; <label>:313:                                    ; preds = %42, %28
  store %"struct.std::pair"* null, %"struct.std::pair"** %9, align 8
  %314 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %315 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %314, i32 0, i32 0
  %316 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %315, i32 0, i32 0
  %317 = load %"struct.std::pair"*, %"struct.std::pair"** %316, align 8
  %318 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %319 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %318, i32 0, i32 0
  %320 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %319, i32 0, i32 1
  %321 = load %"struct.std::pair"*, %"struct.std::pair"** %320, align 8
  %322 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %323 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %324 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %323) #3
  br label %42

; <label>:325:                                    ; preds = %96, %82
  store %"struct.std::pair"* %81, %"struct.std::pair"** %9, align 8
  %326 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %327 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %326, i32 1
  store %"struct.std::pair"* %327, %"struct.std::pair"** %9, align 8
  br label %96

; <label>:328:                                    ; preds = %143, %129
  br label %143

; <label>:329:                                    ; preds = %190, %163
  %330 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %331 = load %"struct.std::pair"*, %"struct.std::pair"** %9, align 8
  %332 = bitcast %"class.std::vector.0"* %12 to %"struct.std::_Vector_base.1"*
  %333 = call dereferenceable(1) %"class.std::allocator.2"* @_ZNSt12_Vector_baseISt4pairIiiESaIS1_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.1"* %332) #3
  br label %190

; <label>:334:                                    ; preds = %282, %267
  %335 = landingpad { i8*, i32 }
          catch i8* null
  %336 = extractvalue { i8*, i32 } %335, 0
  call void @__clang_call_terminate(i8* %336) #10
  br label %282
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt4pairIiiEE9constructIS2_JRiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.3"*, %"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::new_allocator.3"*, align 8
  %6 = alloca %"struct.std::pair"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.3"* %0, %"class.__gnu_cxx::new_allocator.3"** %5, align 8
  store %"struct.std::pair"* %1, %"struct.std::pair"** %6, align 8
  store i32* %2, i32** %7, align 8
  store i32* %3, i32** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.3"*, %"class.__gnu_cxx::new_allocator.3"** %5, align 8
  %10 = load %"struct.std::pair"*, %"struct.std::pair"** %6, align 8
  %11 = bitcast %"struct.std::pair"* %10 to i8*
  %12 = bitcast i8* %11 to %"struct.std::pair"*
  %13 = load i32*, i32** %7, align 8
  %14 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %13) #3
  %15 = load i32*, i32** %8, align 8
  %16 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %15) #3
  call void @_ZNSt4pairIiiEC2IRiivEEOT_OT0_(%"struct.std::pair"* %12, i32* dereferenceable(4) %14, i32* dereferenceable(4) %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt4pairIiiEC2IRiivEEOT_OT0_(%"struct.std::pair"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.340
  %7 = load i32, i32* @y.341
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1823713796, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1823713796, label %19
    i32 -257999455, label %27
    i32 -441433007, label %54
    i32 804261381, label %55
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -257999455, i32 804261381
  store i32 %26, i32* %15
  br label %68

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::pair"*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %28, align 8
  store i32* %1, i32** %29, align 8
  store i32* %2, i32** %30, align 8
  %31 = load %"struct.std::pair"*, %"struct.std::pair"** %28, align 8
  %32 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i32 0, i32 0
  %33 = load i32*, i32** %29, align 8
  %34 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %33) #3
  %35 = load i32, i32* %34, align 4
  store i32 %35, i32* %32, align 4
  %36 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %31, i32 0, i32 1
  %37 = load i32*, i32** %30, align 8
  %38 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %37) #3
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %36, align 4
  %40 = load i32, i32* @x.340
  %41 = load i32, i32* @y.341
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -441433007, i32 804261381
  store i32 %53, i32* %15
  br label %68

; <label>:54:                                     ; preds = %16
  ret void

; <label>:55:                                     ; preds = %16
  %56 = alloca %"struct.std::pair"*, align 8
  %57 = alloca i32*, align 8
  %58 = alloca i32*, align 8
  store %"struct.std::pair"* %0, %"struct.std::pair"** %56, align 8
  store i32* %1, i32** %57, align 8
  store i32* %2, i32** %58, align 8
  %59 = load %"struct.std::pair"*, %"struct.std::pair"** %56, align 8
  %60 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i32 0, i32 0
  %61 = load i32*, i32** %57, align 8
  %62 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %61) #3
  %63 = load i32, i32* %62, align 4
  store i32 %63, i32* %60, align 4
  %64 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %59, i32 0, i32 1
  %65 = load i32*, i32** %58, align 8
  %66 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %65) #3
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %64, align 4
  store i32 -257999455, i32* %15
  br label %68

; <label>:68:                                     ; preds = %55, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector.13"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.14"* %4)
          to label %5 unwind label %60

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.342
  %7 = load i32, i32* @y.343
  %8 = add i32 %6, -583208302
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -583208302
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %63

; <label>:32:                                     ; preds = %5, %63
  %33 = load i32, i32* @x.342
  %34 = load i32, i32* @y.343
  %35 = add i32 %33, 246510372
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 246510372
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %63

; <label>:59:                                     ; preds = %32
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  call void @__clang_call_terminate(i8* %62) #10
  unreachable

; <label>:63:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6resizeEmRKS4_(%"class.std::vector.13"*, i64, %"class.std::vector.18"* dereferenceable(24)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.13"*
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.18"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %7, align 8
  store i64 %1, i64* %8, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %9, align 8
  %13 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  store %"class.std::vector.13"* %13, %"class.std::vector.13"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %16 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 1162332922, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %220
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1162332922, label %21
    i32 -1605858919, label %26
    i32 -1855161292, label %42
    i32 429881523, label %74
    i32 -751107313, label %75
    i32 -482380179, label %81
    i32 -2108924503, label %90
    i32 1069726035, label %106
    i32 -1747734665, label %121
    i32 1637522642, label %122
    i32 1660177504, label %150
    i32 -2074559195, label %178
    i32 782674027, label %179
    i32 -1911178295, label %218
    i32 -2058684216, label %219
  ]

; <label>:20:                                     ; preds = %18
  br label %220

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 -1605858919, i32 -751107313
  store i32 %25, i32* %17
  br label %220

; <label>:26:                                     ; preds = %18
  %27 = load i32, i32* @x.344
  %28 = load i32, i32* @y.345
  %29 = add i32 %27, 888169648
  %30 = sub i32 %29, 1
  %31 = sub i32 %30, 888169648
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  %41 = select i1 %39, i32 -1855161292, i32 782674027
  store i32 %41, i32* %17
  br label %220

; <label>:42:                                     ; preds = %18
  %43 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %44 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector.13"* %43) #3
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %11, i32 0, i32 0
  store %"class.std::vector.18"* %44, %"class.std::vector.18"** %45, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2IPS6_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISE_SD_EE7__valueESA_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %10, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %11) #3
  %46 = load i64, i64* %8, align 8
  %47 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %48 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %47) #3
  %49 = sub i64 %46, -853502646845989220
  %50 = sub i64 %49, %48
  %51 = add i64 %50, -853502646845989220
  %52 = sub i64 %46, %48
  %53 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %10, i32 0, i32 0
  %55 = load %"class.std::vector.18"*, %"class.std::vector.18"** %54, align 8
  %56 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %57 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEmRS9_(%"class.std::vector.13"* %56, %"class.std::vector.18"* %55, i64 %51, %"class.std::vector.18"* dereferenceable(24) %53)
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %12, i32 0, i32 0
  store %"class.std::vector.18"* %57, %"class.std::vector.18"** %58, align 8
  %59 = load i32, i32* @x.344
  %60 = load i32, i32* @y.345
  %61 = sub i32 %59, -1572720321
  %62 = sub i32 %61, 1
  %63 = add i32 %62, -1572720321
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 429881523, i32 782674027
  store i32 %73, i32* %17
  br label %220

; <label>:74:                                     ; preds = %18
  store i32 1637522642, i32* %17
  br label %220

; <label>:75:                                     ; preds = %18
  %76 = load i64, i64* %8, align 8
  %77 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %78 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %77) #3
  %79 = icmp ult i64 %76, %78
  %80 = select i1 %79, i32 -482380179, i32 -2108924503
  store i32 %80, i32* %17
  br label %220

; <label>:81:                                     ; preds = %18
  %82 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %83 = bitcast %"class.std::vector.13"* %82 to %"struct.std::_Vector_base.14"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"class.std::vector.18"*, %"class.std::vector.18"** %85, align 8
  %87 = load i64, i64* %8, align 8
  %88 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %86, i64 %87
  %89 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  call void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector.13"* %89, %"class.std::vector.18"* %88) #3
  store i32 -2108924503, i32* %17
  br label %220

; <label>:90:                                     ; preds = %18
  %91 = load i32, i32* @x.344
  %92 = load i32, i32* @y.345
  %93 = sub i32 %91, -1566417659
  %94 = sub i32 %93, 1
  %95 = add i32 %94, -1566417659
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 1069726035, i32 -1911178295
  store i32 %105, i32* %17
  br label %220

; <label>:106:                                    ; preds = %18
  %107 = load i32, i32* @x.344
  %108 = load i32, i32* @y.345
  %109 = sub i32 0, 1
  %110 = add i32 %107, %109
  %111 = sub i32 %107, 1
  %112 = mul i32 %107, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %108, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  %120 = select i1 %118, i32 -1747734665, i32 -1911178295
  store i32 %120, i32* %17
  br label %220

; <label>:121:                                    ; preds = %18
  store i32 1637522642, i32* %17
  br label %220

; <label>:122:                                    ; preds = %18
  %123 = load i32, i32* @x.344
  %124 = load i32, i32* @y.345
  %125 = add i32 %123, 631253990
  %126 = sub i32 %125, 1
  %127 = sub i32 %126, 631253990
  %128 = sub i32 %123, 1
  %129 = mul i32 %123, %127
  %130 = urem i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = icmp slt i32 %124, 10
  %133 = xor i1 %131, true
  %134 = xor i1 %132, true
  %135 = xor i1 true, true
  %136 = and i1 %133, true
  %137 = and i1 %131, %135
  %138 = and i1 %134, true
  %139 = and i1 %132, %135
  %140 = or i1 %136, %137
  %141 = or i1 %138, %139
  %142 = xor i1 %140, %141
  %143 = or i1 %133, %134
  %144 = xor i1 %143, true
  %145 = or i1 true, %135
  %146 = and i1 %144, %145
  %147 = or i1 %142, %146
  %148 = or i1 %131, %132
  %149 = select i1 %147, i32 1660177504, i32 -2058684216
  store i32 %149, i32* %17
  br label %220

; <label>:150:                                    ; preds = %18
  %151 = load i32, i32* @x.344
  %152 = load i32, i32* @y.345
  %153 = add i32 %151, 1730251354
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 1730251354
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = xor i1 %159, true
  %162 = xor i1 %160, true
  %163 = xor i1 false, true
  %164 = and i1 %161, false
  %165 = and i1 %159, %163
  %166 = and i1 %162, false
  %167 = and i1 %160, %163
  %168 = or i1 %164, %165
  %169 = or i1 %166, %167
  %170 = xor i1 %168, %169
  %171 = or i1 %161, %162
  %172 = xor i1 %171, true
  %173 = or i1 false, %163
  %174 = and i1 %172, %173
  %175 = or i1 %170, %174
  %176 = or i1 %159, %160
  %177 = select i1 %175, i32 -2074559195, i32 -2058684216
  store i32 %177, i32* %17
  br label %220

; <label>:178:                                    ; preds = %18
  ret void

; <label>:179:                                    ; preds = %18
  %180 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %181 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector.13"* %180) #3
  %182 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %11, i32 0, i32 0
  store %"class.std::vector.18"* %181, %"class.std::vector.18"** %182, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2IPS6_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISE_SD_EE7__valueESA_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"* %10, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %11) #3
  %183 = load i64, i64* %8, align 8
  %184 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %185 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %184) #3
  %186 = shl i64 %183, %185
  %187 = shl i64 %183, %185
  %188 = add i64 %183, 4147858334905912693
  %189 = sub i64 %188, %185
  %190 = sub i64 %189, 4147858334905912693
  %191 = sub i64 %183, %185
  %192 = mul i64 %190, %185
  %193 = sub i64 0, %183
  %194 = add i64 0, %193
  %195 = sub i64 0, %183
  %196 = sub i64 0, %194
  %197 = sub i64 0, %185
  %198 = add i64 %196, %197
  %199 = sub i64 0, %198
  %200 = add i64 %194, %185
  %201 = sub i64 0, 7924906138480670513
  %202 = sub i64 %201, %183
  %203 = add i64 %202, 7924906138480670513
  %204 = sub i64 0, %183
  %205 = sub i64 0, %185
  %206 = sub i64 %203, %205
  %207 = add i64 %203, %185
  %208 = add i64 %183, 2107547962741530207
  %209 = sub i64 %208, %185
  %210 = sub i64 %209, 2107547962741530207
  %211 = sub i64 %183, %185
  %212 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %213 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %10, i32 0, i32 0
  %214 = load %"class.std::vector.18"*, %"class.std::vector.18"** %213, align 8
  %215 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %6
  %216 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEmRS9_(%"class.std::vector.13"* %215, %"class.std::vector.18"* %214, i64 %210, %"class.std::vector.18"* dereferenceable(24) %212)
  %217 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %12, i32 0, i32 0
  store %"class.std::vector.18"* %216, %"class.std::vector.18"** %217, align 8
  store i32 -1855161292, i32* %17
  br label %220

; <label>:218:                                    ; preds = %18
  store i32 1069726035, i32* %17
  br label %220

; <label>:219:                                    ; preds = %18
  store i32 1660177504, i32* %17
  br label %220

; <label>:220:                                    ; preds = %219, %218, %179, %150, %122, %121, %106, %90, %81, %75, %74, %42, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_ISt4pairIiiESaIS1_EESaIS3_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.0"*, %"class.std::vector.0"** %6, align 8
  %8 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > >, std::allocator<std::vector<std::pair<int, int>, std::allocator<std::pair<int, int> > > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.0"*, %"class.std::vector.0"** %10, align 8
  %12 = ptrtoint %"class.std::vector.0"* %7 to i64
  %13 = ptrtoint %"class.std::vector.0"* %11 to i64
  %14 = sub i64 %12, 8681618229964190512
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 8681618229964190512
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2Ev(%"class.std::vector.18"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.348
  %3 = load i32, i32* @y.349
  %4 = add i32 %2, -1314335140
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -1314335140
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %81

; <label>:16:                                     ; preds = %1, %81
  %17 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %17, align 8
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = bitcast %"class.std::vector.18"* %18 to %"struct.std::_Vector_base.19"*
  %20 = load i32, i32* @x.348
  %21 = load i32, i32* @y.349
  %22 = add i32 %20, -1336762463
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, -1336762463
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %81

; <label>:34:                                     ; preds = %16
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.19"* %19)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %34
  ret void

; <label>:36:                                     ; preds = %34
  %37 = load i32, i32* @x.348
  %38 = load i32, i32* @y.349
  %39 = add i32 %37, -3593376
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -3593376
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %85

; <label>:63:                                     ; preds = %36, %85
  %64 = landingpad { i8*, i32 }
          catch i8* null
  %65 = extractvalue { i8*, i32 } %64, 0
  call void @__clang_call_terminate(i8* %65) #10
  %66 = load i32, i32* @x.348
  %67 = load i32, i32* @y.349
  %68 = sub i32 %66, 1334086743
  %69 = sub i32 %68, 1
  %70 = add i32 %69, 1334086743
  %71 = sub i32 %66, 1
  %72 = mul i32 %66, %70
  %73 = urem i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = icmp slt i32 %67, 10
  %76 = and i1 %74, %75
  %77 = xor i1 %74, %75
  %78 = or i1 %76, %77
  %79 = or i1 %74, %75
  br i1 %78, label %80, label %85

; <label>:80:                                     ; preds = %63
  unreachable

; <label>:81:                                     ; preds = %16, %1
  %82 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %82, align 8
  %83 = load %"class.std::vector.18"*, %"class.std::vector.18"** %82, align 8
  %84 = bitcast %"class.std::vector.18"* %83 to %"struct.std::_Vector_base.19"*
  br label %16

; <label>:85:                                     ; preds = %63, %36
  %86 = landingpad { i8*, i32 }
          catch i8* null
  %87 = extractvalue { i8*, i32 } %86, 0
  call void @__clang_call_terminate(i8* %87) #10
  br label %63
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::pair"* @_ZNSt6vectorISt4pairIiiESaIS1_EEixEm(%"class.std::vector.0"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.0"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.0"* %0, %"class.std::vector.0"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.0"*, %"class.std::vector.0"** %3, align 8
  %6 = bitcast %"class.std::vector.0"* %5 to %"struct.std::_Vector_base.1"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.1", %"struct.std::_Vector_base.1"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl", %"struct.std::_Vector_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.std::pair"*, %"struct.std::pair"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.std::pair", %"struct.std::pair"* %9, i64 %10
  ret %"struct.std::pair"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %9, i64 %10
  ret %"class.std::vector.18"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE9push_backERKS2_(%"class.std::vector.18"*, %"struct.Dinic<int>::edge"* dereferenceable(12)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"struct.Dinic<int>::edge"**
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.354
  %9 = load i32, i32* @y.355
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 -1196041823, i32* %17
  br label %18

; <label>:18:                                     ; preds = %2, %172
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1196041823, label %21
    i32 -1152739465, label %41
    i32 -594084140, label %84
    i32 1831533040, label %87
    i32 878757727, label %103
    i32 -1891757049, label %135
    i32 1760294116, label %136
    i32 1654229486, label %140
    i32 2064427395, label %141
    i32 1551125840, label %154
  ]

; <label>:20:                                     ; preds = %18
  br label %172

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1152739465, i32 2064427395
  store i32 %40, i32* %17
  br label %172

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.18"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"** %43, %"struct.Dinic<int>::edge"*** %5
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %42, align 8
  %44 = load volatile %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %5
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %44, align 8
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %42, align 8
  store %"class.std::vector.18"* %45, %"class.std::vector.18"** %4
  %46 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %47 = bitcast %"class.std::vector.18"* %46 to %"struct.std::_Vector_base.19"*
  %48 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %47, i32 0, i32 0
  %49 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %48, i32 0, i32 1
  %50 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %49, align 8
  %51 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %52 = bitcast %"class.std::vector.18"* %51 to %"struct.std::_Vector_base.19"*
  %53 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %52, i32 0, i32 0
  %54 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %53, i32 0, i32 2
  %55 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %54, align 8
  %56 = icmp ne %"struct.Dinic<int>::edge"* %50, %55
  store i1 %56, i1* %3
  %57 = load i32, i32* @x.354
  %58 = load i32, i32* @y.355
  %59 = sub i32 %57, 460196325
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 460196325
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 true, true
  %70 = and i1 %67, true
  %71 = and i1 %65, %69
  %72 = and i1 %68, true
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 true, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -594084140, i32 2064427395
  store i32 %83, i32* %17
  br label %172

; <label>:84:                                     ; preds = %18
  %85 = load volatile i1, i1* %3
  %86 = select i1 %85, i32 1831533040, i32 1760294116
  store i32 %86, i32* %17
  br label %172

; <label>:87:                                     ; preds = %18
  %88 = load i32, i32* @x.354
  %89 = load i32, i32* @y.355
  %90 = sub i32 %88, -475852835
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -475852835
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = and i1 %96, %97
  %99 = xor i1 %96, %97
  %100 = or i1 %98, %99
  %101 = or i1 %96, %97
  %102 = select i1 %100, i32 878757727, i32 1551125840
  store i32 %102, i32* %17
  br label %172

; <label>:103:                                    ; preds = %18
  %104 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %105 = bitcast %"class.std::vector.18"* %104 to %"struct.std::_Vector_base.19"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %105, i32 0, i32 0
  %107 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %106 to %"class.std::allocator.20"*
  %108 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %109 = bitcast %"class.std::vector.18"* %108 to %"struct.std::_Vector_base.19"*
  %110 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %109, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %110, i32 0, i32 1
  %112 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %111, align 8
  %113 = load volatile %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %5
  %114 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %113, align 8
  call void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %107, %"struct.Dinic<int>::edge"* %112, %"struct.Dinic<int>::edge"* dereferenceable(12) %114)
  %115 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %116 = bitcast %"class.std::vector.18"* %115 to %"struct.std::_Vector_base.19"*
  %117 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %117, i32 0, i32 1
  %119 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %118, align 8
  %120 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %119, i32 1
  store %"struct.Dinic<int>::edge"* %120, %"struct.Dinic<int>::edge"** %118, align 8
  %121 = load i32, i32* @x.354
  %122 = load i32, i32* @y.355
  %123 = sub i32 0, 1
  %124 = add i32 %121, %123
  %125 = sub i32 %121, 1
  %126 = mul i32 %121, %124
  %127 = urem i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = icmp slt i32 %122, 10
  %130 = and i1 %128, %129
  %131 = xor i1 %128, %129
  %132 = or i1 %130, %131
  %133 = or i1 %128, %129
  %134 = select i1 %132, i32 -1891757049, i32 1551125840
  store i32 %134, i32* %17
  br label %172

; <label>:135:                                    ; preds = %18
  store i32 1654229486, i32* %17
  br label %172

; <label>:136:                                    ; preds = %18
  %137 = load volatile %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %5
  %138 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %137, align 8
  %139 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_(%"class.std::vector.18"* %139, %"struct.Dinic<int>::edge"* dereferenceable(12) %138)
  store i32 1654229486, i32* %17
  br label %172

; <label>:140:                                    ; preds = %18
  ret void

; <label>:141:                                    ; preds = %18
  %142 = alloca %"class.std::vector.18"*, align 8
  %143 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %142, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %143, align 8
  %144 = load %"class.std::vector.18"*, %"class.std::vector.18"** %142, align 8
  %145 = bitcast %"class.std::vector.18"* %144 to %"struct.std::_Vector_base.19"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %146, i32 0, i32 1
  %148 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %147, align 8
  %149 = bitcast %"class.std::vector.18"* %144 to %"struct.std::_Vector_base.19"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %150, i32 0, i32 2
  %152 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %151, align 8
  %153 = icmp ne %"struct.Dinic<int>::edge"* %148, %152
  store i32 -1152739465, i32* %17
  br label %172

; <label>:154:                                    ; preds = %18
  %155 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %156 = bitcast %"class.std::vector.18"* %155 to %"struct.std::_Vector_base.19"*
  %157 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %156, i32 0, i32 0
  %158 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %157 to %"class.std::allocator.20"*
  %159 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %160 = bitcast %"class.std::vector.18"* %159 to %"struct.std::_Vector_base.19"*
  %161 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %160, i32 0, i32 0
  %162 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %161, i32 0, i32 1
  %163 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %162, align 8
  %164 = load volatile %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %5
  %165 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %164, align 8
  call void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %158, %"struct.Dinic<int>::edge"* %163, %"struct.Dinic<int>::edge"* dereferenceable(12) %165)
  %166 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %167 = bitcast %"class.std::vector.18"* %166 to %"struct.std::_Vector_base.19"*
  %168 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %167, i32 0, i32 0
  %169 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %168, i32 0, i32 1
  %170 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %169, align 8
  %171 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %170, i32 1
  store %"struct.Dinic<int>::edge"* %171, %"struct.Dinic<int>::edge"** %169, align 8
  store i32 878757727, i32* %17
  br label %172

; <label>:172:                                    ; preds = %154, %141, %136, %135, %103, %87, %84, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %9, i64 %10
  ret %"struct.Dinic<int>::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.358
  %6 = load i32, i32* @y.359
  %7 = add i32 %5, -1514249684
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1514249684
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 707437895, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %123
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 707437895, label %19
    i32 273298887, label %27
    i32 766055489, label %72
    i32 -571015284, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %123

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 273298887, i32 -571015284
  store i32 %26, i32* %15
  br label %123

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  %30 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %31 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %31, i32 0, i32 1
  %33 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %32, align 8
  %34 = bitcast %"class.std::vector.18"* %29 to %"struct.std::_Vector_base.19"*
  %35 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %34, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %36, align 8
  %38 = ptrtoint %"struct.Dinic<int>::edge"* %33 to i64
  %39 = ptrtoint %"struct.Dinic<int>::edge"* %37 to i64
  %40 = add i64 %38, 8107159723573034760
  %41 = sub i64 %40, %39
  %42 = sub i64 %41, 8107159723573034760
  %43 = sub i64 %38, %39
  %44 = sdiv exact i64 %42, 12
  store i64 %44, i64* %2
  %45 = load i32, i32* @x.358
  %46 = load i32, i32* @y.359
  %47 = sub i32 %45, 626683337
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 626683337
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 766055489, i32 -571015284
  store i32 %71, i32* %15
  br label %123

; <label>:72:                                     ; preds = %16
  %73 = load volatile i64, i64* %2
  ret i64 %73

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %75, align 8
  %76 = load %"class.std::vector.18"*, %"class.std::vector.18"** %75, align 8
  %77 = bitcast %"class.std::vector.18"* %76 to %"struct.std::_Vector_base.19"*
  %78 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %77, i32 0, i32 0
  %79 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %78, i32 0, i32 1
  %80 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %79, align 8
  %81 = bitcast %"class.std::vector.18"* %76 to %"struct.std::_Vector_base.19"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %82, i32 0, i32 0
  %84 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %83, align 8
  %85 = ptrtoint %"struct.Dinic<int>::edge"* %80 to i64
  %86 = ptrtoint %"struct.Dinic<int>::edge"* %84 to i64
  %87 = shl i64 %85, %86
  %88 = sub i64 0, %86
  %89 = add i64 %85, %88
  %90 = sub i64 %85, %86
  %91 = mul i64 %89, %86
  %92 = shl i64 %85, %86
  %93 = sub i64 %85, -4079647229474525843
  %94 = sub i64 %93, %86
  %95 = add i64 %94, -4079647229474525843
  %96 = sub i64 %85, %86
  %97 = add i64 0, 5686945764282069633
  %98 = sub i64 %97, %95
  %99 = sub i64 %98, 5686945764282069633
  %100 = sub i64 0, %95
  %101 = sub i64 0, %99
  %102 = sub i64 0, 12
  %103 = add i64 %101, %102
  %104 = sub i64 0, %103
  %105 = add i64 %99, 12
  %106 = add i64 0, -192728403618541654
  %107 = sub i64 %106, %95
  %108 = sub i64 %107, -192728403618541654
  %109 = sub i64 0, %95
  %110 = sub i64 0, 12
  %111 = sub i64 %108, %110
  %112 = add i64 %108, 12
  %113 = sub i64 0, 5257313723241336071
  %114 = sub i64 %113, %95
  %115 = add i64 %114, 5257313723241336071
  %116 = sub i64 0, %95
  %117 = sub i64 0, %115
  %118 = sub i64 0, 12
  %119 = add i64 %117, %118
  %120 = sub i64 0, %119
  %121 = add i64 %115, 12
  %122 = sdiv exact i64 %95, 12
  store i32 273298887, i32* %15
  br label %123

; <label>:123:                                    ; preds = %74, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base.14"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator.15"*
  call void @_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEEC2Ev(%"class.std::allocator.15"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN5DinicIiE4edgeESaIS2_EEEC2Ev(%"class.std::allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator.16"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %8 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10, align 8
  %12 = ptrtoint %"class.std::vector.18"* %7 to i64
  %13 = ptrtoint %"class.std::vector.18"* %11 to i64
  %14 = sub i64 %12, -5732322584746229938
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -5732322584746229938
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 24
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS4_S6_EEmRS9_(%"class.std::vector.13"*, %"class.std::vector.18"*, i64, %"class.std::vector.18"* dereferenceable(24)) #0 comdat align 2 {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %7 = alloca %"class.std::vector.13"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"class.std::vector.18"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %6, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %15, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %7, align 8
  store i64 %2, i64* %8, align 8
  store %"class.std::vector.18"* %3, %"class.std::vector.18"** %9, align 8
  %16 = load %"class.std::vector.13"*, %"class.std::vector.13"** %7, align 8
  %17 = call %"class.std::vector.18"* @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6cbeginEv(%"class.std::vector.13"* %16) #3
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %11, i32 0, i32 0
  store %"class.std::vector.18"* %17, %"class.std::vector.18"** %18, align 8
  %19 = call i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %6, %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8) %11) #3
  store i64 %19, i64* %10, align 8
  %20 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector.13"* %16) #3
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %13, i32 0, i32 0
  store %"class.std::vector.18"* %20, %"class.std::vector.18"** %21, align 8
  %22 = load i64, i64* %10, align 8
  %23 = call %"class.std::vector.18"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %13, i64 %22) #3
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %12, i32 0, i32 0
  store %"class.std::vector.18"* %23, %"class.std::vector.18"** %24, align 8
  %25 = load i64, i64* %8, align 8
  %26 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %12, i32 0, i32 0
  %28 = load %"class.std::vector.18"*, %"class.std::vector.18"** %27, align 8
  call void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(%"class.std::vector.13"* %16, %"class.std::vector.18"* %28, i64 %25, %"class.std::vector.18"* dereferenceable(24) %26)
  %29 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector.13"* %16) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %14, i32 0, i32 0
  store %"class.std::vector.18"* %29, %"class.std::vector.18"** %30, align 8
  %31 = load i64, i64* %10, align 8
  %32 = call %"class.std::vector.18"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"* %14, i64 %31) #3
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %32, %"class.std::vector.18"** %33, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %5, i32 0, i32 0
  %35 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  ret %"class.std::vector.18"* %35
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.23"* %2, %"class.std::vector.18"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  ret %"class.std::vector.18"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2IPS6_EERKNS0_IT_NS_11__enable_ifIXsr3std10__are_sameISE_SD_EE7__valueESA_E6__typeEEE(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %1, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %5, i32 0, i32 0
  %7 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %8 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %7) #3
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  store %"class.std::vector.18"* %9, %"class.std::vector.18"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector.13"*, %"class.std::vector.18"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.376
  %4 = load i32, i32* @y.377
  %5 = sub i32 %3, -367158947
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -367158947
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %92

; <label>:17:                                     ; preds = %2, %92
  %18 = alloca %"class.std::vector.13"*, align 8
  %19 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %18, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %19, align 8
  %20 = load %"class.std::vector.13"*, %"class.std::vector.13"** %18, align 8
  %21 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %22 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %22, i32 0, i32 0
  %24 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %23, i32 0, i32 1
  %25 = load %"class.std::vector.18"*, %"class.std::vector.18"** %24, align 8
  %26 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %27 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %26) #3
  %28 = load i32, i32* @x.376
  %29 = load i32, i32* @y.377
  %30 = sub i32 %28, 768840615
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 768840615
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %92

; <label>:54:                                     ; preds = %17
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"* %21, %"class.std::vector.18"* %25, %"class.std::allocator.15"* dereferenceable(1) %27)
          to label %55 unwind label %89

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.376
  %57 = load i32, i32* @y.377
  %58 = sub i32 %56, 113233411
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 113233411
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  br i1 %68, label %70, label %103

; <label>:70:                                     ; preds = %55, %103
  %71 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %72 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %73 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %73, i32 0, i32 1
  store %"class.std::vector.18"* %71, %"class.std::vector.18"** %74, align 8
  %75 = load i32, i32* @x.376
  %76 = load i32, i32* @y.377
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %103

; <label>:88:                                     ; preds = %70
  ret void

; <label>:89:                                     ; preds = %54
  %90 = landingpad { i8*, i32 }
          catch i8* null
  %91 = extractvalue { i8*, i32 } %90, 0
  call void @__clang_call_terminate(i8* %91) #10
  unreachable

; <label>:92:                                     ; preds = %17, %2
  %93 = alloca %"class.std::vector.13"*, align 8
  %94 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %93, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %94, align 8
  %95 = load %"class.std::vector.13"*, %"class.std::vector.13"** %93, align 8
  %96 = load %"class.std::vector.18"*, %"class.std::vector.18"** %94, align 8
  %97 = bitcast %"class.std::vector.13"* %95 to %"struct.std::_Vector_base.14"*
  %98 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %98, i32 0, i32 1
  %100 = load %"class.std::vector.18"*, %"class.std::vector.18"** %99, align 8
  %101 = bitcast %"class.std::vector.13"* %95 to %"struct.std::_Vector_base.14"*
  %102 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %101) #3
  br label %17

; <label>:103:                                    ; preds = %70, %55
  %104 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %105 = bitcast %"class.std::vector.13"* %20 to %"struct.std::_Vector_base.14"*
  %106 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %106, i32 0, i32 1
  store %"class.std::vector.18"* %104, %"class.std::vector.18"** %107, align 8
  br label %70
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSE_SH_(%"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.24"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %1, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %5) #3
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"* %8) #3
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %11 = ptrtoint %"class.std::vector.18"* %7 to i64
  %12 = ptrtoint %"class.std::vector.18"* %10 to i64
  %13 = sub i64 %11, -1702803944317421134
  %14 = sub i64 %13, %12
  %15 = add i64 %14, -1702803944317421134
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE6cbeginEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %5 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %6 = bitcast %"class.std::vector.13"* %5 to %"struct.std::_Vector_base.14"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  store %"class.std::vector.18"* %9, %"class.std::vector.18"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.24"* %2, %"class.std::vector.18"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %2, i32 0, i32 0
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %10, align 8
  ret %"class.std::vector.18"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS4_S6_EEmRKS4_(%"class.std::vector.13"*, %"class.std::vector.18"*, i64, %"class.std::vector.18"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %6 = alloca %"class.std::vector.13"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"class.std::vector.18"*, align 8
  %9 = alloca %"class.std::vector.18", align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %12 = alloca %"class.std::vector.18"*, align 8
  %13 = alloca i8*
  %14 = alloca i32
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %18 = alloca %"class.std::vector.18"*, align 8
  %19 = alloca %"class.std::vector.18"*, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %20, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %6, align 8
  store i64 %2, i64* %7, align 8
  store %"class.std::vector.18"* %3, %"class.std::vector.18"** %8, align 8
  %21 = load %"class.std::vector.13"*, %"class.std::vector.13"** %6, align 8
  %22 = load i64, i64* %7, align 8
  %23 = icmp ne i64 %22, 0
  br i1 %23, label %24, label %608

; <label>:24:                                     ; preds = %4
  %25 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %26 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %25, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %26, i32 0, i32 2
  %28 = load %"class.std::vector.18"*, %"class.std::vector.18"** %27, align 8
  %29 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %30, i32 0, i32 1
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  %33 = ptrtoint %"class.std::vector.18"* %28 to i64
  %34 = ptrtoint %"class.std::vector.18"* %32 to i64
  %35 = add i64 %33, 7976014311656261762
  %36 = sub i64 %35, %34
  %37 = sub i64 %36, 7976014311656261762
  %38 = sub i64 %33, %34
  %39 = sdiv exact i64 %37, 24
  %40 = load i64, i64* %7, align 8
  %41 = icmp uge i64 %39, %40
  br i1 %41, label %42, label %352

; <label>:42:                                     ; preds = %24
  %43 = load i32, i32* @x.382
  %44 = load i32, i32* @y.383
  %45 = sub i32 %43, 1454091855
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1454091855
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %677

; <label>:57:                                     ; preds = %42, %677
  %58 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS4_(%"class.std::vector.18"* %9, %"class.std::vector.18"* dereferenceable(24) %58)
  %59 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector.13"* %21) #3
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %11, i32 0, i32 0
  store %"class.std::vector.18"* %59, %"class.std::vector.18"** %60, align 8
  %61 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %5) #3
  store i64 %61, i64* %10, align 8
  %62 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %63, i32 0, i32 1
  %65 = load %"class.std::vector.18"*, %"class.std::vector.18"** %64, align 8
  store %"class.std::vector.18"* %65, %"class.std::vector.18"** %12, align 8
  %66 = load i64, i64* %10, align 8
  %67 = load i64, i64* %7, align 8
  %68 = icmp ugt i64 %66, %67
  %69 = load i32, i32* @x.382
  %70 = load i32, i32* @y.383
  %71 = sub i32 %69, 1480610518
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 1480610518
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %677

; <label>:83:                                     ; preds = %57
  br i1 %68, label %84, label %271

; <label>:84:                                     ; preds = %83
  %85 = load i32, i32* @x.382
  %86 = load i32, i32* @y.383
  %87 = sub i32 %85, -693537631
  %88 = sub i32 %87, 1
  %89 = add i32 %88, -693537631
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  br i1 %109, label %111, label %689

; <label>:111:                                    ; preds = %84, %689
  %112 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %113 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %112, i32 0, i32 0
  %114 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %113, i32 0, i32 1
  %115 = load %"class.std::vector.18"*, %"class.std::vector.18"** %114, align 8
  %116 = load i64, i64* %7, align 8
  %117 = add i64 0, 2084159894148884796
  %118 = sub i64 %117, %116
  %119 = sub i64 %118, 2084159894148884796
  %120 = sub i64 0, %116
  %121 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %115, i64 %119
  %122 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %123, i32 0, i32 1
  %125 = load %"class.std::vector.18"*, %"class.std::vector.18"** %124, align 8
  %126 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %127, i32 0, i32 1
  %129 = load %"class.std::vector.18"*, %"class.std::vector.18"** %128, align 8
  %130 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %131 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %130) #3
  %132 = load i32, i32* @x.382
  %133 = load i32, i32* @y.383
  %134 = sub i32 0, 1
  %135 = add i32 %132, %134
  %136 = sub i32 %132, 1
  %137 = mul i32 %132, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %133, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %689

; <label>:145:                                    ; preds = %111
  %146 = invoke %"class.std::vector.18"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"* %121, %"class.std::vector.18"* %125, %"class.std::vector.18"* %129, %"class.std::allocator.15"* dereferenceable(1) %131)
          to label %147 unwind label %214

; <label>:147:                                    ; preds = %145
  %148 = load i64, i64* %7, align 8
  %149 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %150 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %149, i32 0, i32 0
  %151 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %150, i32 0, i32 1
  %152 = load %"class.std::vector.18"*, %"class.std::vector.18"** %151, align 8
  %153 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %152, i64 %148
  store %"class.std::vector.18"* %153, %"class.std::vector.18"** %151, align 8
  %154 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %155 = load %"class.std::vector.18"*, %"class.std::vector.18"** %154, align 8
  %156 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %157 = load i64, i64* %7, align 8
  %158 = sub i64 0, %157
  %159 = add i64 0, %158
  %160 = sub i64 0, %157
  %161 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %156, i64 %159
  %162 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %163 = invoke %"class.std::vector.18"* @_ZSt13move_backwardIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.18"* %155, %"class.std::vector.18"* %161, %"class.std::vector.18"* %162)
          to label %164 unwind label %214

; <label>:164:                                    ; preds = %147
  %165 = load i32, i32* @x.382
  %166 = load i32, i32* @y.383
  %167 = add i32 %165, -1410053209
  %168 = sub i32 %167, 1
  %169 = sub i32 %168, -1410053209
  %170 = sub i32 %165, 1
  %171 = mul i32 %165, %169
  %172 = urem i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = icmp slt i32 %166, 10
  %175 = xor i1 %173, true
  %176 = xor i1 %174, true
  %177 = xor i1 false, true
  %178 = and i1 %175, false
  %179 = and i1 %173, %177
  %180 = and i1 %176, false
  %181 = and i1 %174, %177
  %182 = or i1 %178, %179
  %183 = or i1 %180, %181
  %184 = xor i1 %182, %183
  %185 = or i1 %175, %176
  %186 = xor i1 %185, true
  %187 = or i1 false, %177
  %188 = and i1 %186, %187
  %189 = or i1 %184, %188
  %190 = or i1 %173, %174
  br i1 %189, label %191, label %726

; <label>:191:                                    ; preds = %164, %726
  %192 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %193 = load %"class.std::vector.18"*, %"class.std::vector.18"** %192, align 8
  %194 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %195 = load %"class.std::vector.18"*, %"class.std::vector.18"** %194, align 8
  %196 = load i64, i64* %7, align 8
  %197 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %195, i64 %196
  %198 = load i32, i32* @x.382
  %199 = load i32, i32* @y.383
  %200 = sub i32 %198, -1223998750
  %201 = sub i32 %200, 1
  %202 = add i32 %201, -1223998750
  %203 = sub i32 %198, 1
  %204 = mul i32 %198, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %199, 10
  %208 = and i1 %206, %207
  %209 = xor i1 %206, %207
  %210 = or i1 %208, %209
  %211 = or i1 %206, %207
  br i1 %210, label %212, label %726

; <label>:212:                                    ; preds = %191
  invoke void @_ZSt4fillIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RKT0_(%"class.std::vector.18"* %193, %"class.std::vector.18"* %197, %"class.std::vector.18"* dereferenceable(24) %9)
          to label %213 unwind label %214

; <label>:213:                                    ; preds = %212
  br label %310

; <label>:214:                                    ; preds = %299, %285, %271, %212, %147, %145
  %215 = load i32, i32* @x.382
  %216 = load i32, i32* @y.383
  %217 = sub i32 %215, 590481188
  %218 = sub i32 %217, 1
  %219 = add i32 %218, 590481188
  %220 = sub i32 %215, 1
  %221 = mul i32 %215, %219
  %222 = urem i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = icmp slt i32 %216, 10
  %225 = xor i1 %223, true
  %226 = xor i1 %224, true
  %227 = xor i1 true, true
  %228 = and i1 %225, true
  %229 = and i1 %223, %227
  %230 = and i1 %226, true
  %231 = and i1 %224, %227
  %232 = or i1 %228, %229
  %233 = or i1 %230, %231
  %234 = xor i1 %232, %233
  %235 = or i1 %225, %226
  %236 = xor i1 %235, true
  %237 = or i1 true, %227
  %238 = and i1 %236, %237
  %239 = or i1 %234, %238
  %240 = or i1 %223, %224
  br i1 %239, label %241, label %733

; <label>:241:                                    ; preds = %214, %733
  %242 = landingpad { i8*, i32 }
          cleanup
  %243 = extractvalue { i8*, i32 } %242, 0
  store i8* %243, i8** %13, align 8
  %244 = extractvalue { i8*, i32 } %242, 1
  store i32 %244, i32* %14, align 4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %9) #3
  %245 = load i32, i32* @x.382
  %246 = load i32, i32* @y.383
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = xor i1 %252, true
  %255 = xor i1 %253, true
  %256 = xor i1 true, true
  %257 = and i1 %254, true
  %258 = and i1 %252, %256
  %259 = and i1 %255, true
  %260 = and i1 %253, %256
  %261 = or i1 %257, %258
  %262 = or i1 %259, %260
  %263 = xor i1 %261, %262
  %264 = or i1 %254, %255
  %265 = xor i1 %264, true
  %266 = or i1 true, %256
  %267 = and i1 %265, %266
  %268 = or i1 %263, %267
  %269 = or i1 %252, %253
  br i1 %268, label %270, label %733

; <label>:270:                                    ; preds = %241
  br label %638

; <label>:271:                                    ; preds = %83
  %272 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %273 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %272, i32 0, i32 0
  %274 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %273, i32 0, i32 1
  %275 = load %"class.std::vector.18"*, %"class.std::vector.18"** %274, align 8
  %276 = load i64, i64* %7, align 8
  %277 = load i64, i64* %10, align 8
  %278 = sub i64 %276, 2876663018042195519
  %279 = sub i64 %278, %277
  %280 = add i64 %279, 2876663018042195519
  %281 = sub i64 %276, %277
  %282 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %283 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %282) #3
  %284 = invoke %"class.std::vector.18"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E(%"class.std::vector.18"* %275, i64 %280, %"class.std::vector.18"* dereferenceable(24) %9, %"class.std::allocator.15"* dereferenceable(1) %283)
          to label %285 unwind label %214

; <label>:285:                                    ; preds = %271
  %286 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %287 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %287, i32 0, i32 1
  store %"class.std::vector.18"* %284, %"class.std::vector.18"** %288, align 8
  %289 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %290 = load %"class.std::vector.18"*, %"class.std::vector.18"** %289, align 8
  %291 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  %292 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %293 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %292, i32 0, i32 0
  %294 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %293, i32 0, i32 1
  %295 = load %"class.std::vector.18"*, %"class.std::vector.18"** %294, align 8
  %296 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %297 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %296) #3
  %298 = invoke %"class.std::vector.18"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"* %290, %"class.std::vector.18"* %291, %"class.std::vector.18"* %295, %"class.std::allocator.15"* dereferenceable(1) %297)
          to label %299 unwind label %214

; <label>:299:                                    ; preds = %285
  %300 = load i64, i64* %10, align 8
  %301 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %302 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %301, i32 0, i32 0
  %303 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %302, i32 0, i32 1
  %304 = load %"class.std::vector.18"*, %"class.std::vector.18"** %303, align 8
  %305 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %304, i64 %300
  store %"class.std::vector.18"* %305, %"class.std::vector.18"** %303, align 8
  %306 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %307 = load %"class.std::vector.18"*, %"class.std::vector.18"** %306, align 8
  %308 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  invoke void @_ZSt4fillIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RKT0_(%"class.std::vector.18"* %307, %"class.std::vector.18"* %308, %"class.std::vector.18"* dereferenceable(24) %9)
          to label %309 unwind label %214

; <label>:309:                                    ; preds = %299
  br label %310

; <label>:310:                                    ; preds = %309, %213
  %311 = load i32, i32* @x.382
  %312 = load i32, i32* @y.383
  %313 = add i32 %311, 1182120783
  %314 = sub i32 %313, 1
  %315 = sub i32 %314, 1182120783
  %316 = sub i32 %311, 1
  %317 = mul i32 %311, %315
  %318 = urem i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = icmp slt i32 %312, 10
  %321 = xor i1 %319, true
  %322 = xor i1 %320, true
  %323 = xor i1 false, true
  %324 = and i1 %321, false
  %325 = and i1 %319, %323
  %326 = and i1 %322, false
  %327 = and i1 %320, %323
  %328 = or i1 %324, %325
  %329 = or i1 %326, %327
  %330 = xor i1 %328, %329
  %331 = or i1 %321, %322
  %332 = xor i1 %331, true
  %333 = or i1 false, %323
  %334 = and i1 %332, %333
  %335 = or i1 %330, %334
  %336 = or i1 %319, %320
  br i1 %335, label %337, label %737

; <label>:337:                                    ; preds = %310, %737
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %9) #3
  %338 = load i32, i32* @x.382
  %339 = load i32, i32* @y.383
  %340 = sub i32 0, 1
  %341 = add i32 %338, %340
  %342 = sub i32 %338, 1
  %343 = mul i32 %338, %341
  %344 = urem i32 %343, 2
  %345 = icmp eq i32 %344, 0
  %346 = icmp slt i32 %339, 10
  %347 = and i1 %345, %346
  %348 = xor i1 %345, %346
  %349 = or i1 %347, %348
  %350 = or i1 %345, %346
  br i1 %349, label %351, label %737

; <label>:351:                                    ; preds = %337
  br label %607

; <label>:352:                                    ; preds = %24
  %353 = load i64, i64* %7, align 8
  %354 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.13"* %21, i64 %353, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i32 0, i32 0))
  store i64 %354, i64* %15, align 8
  %355 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector.13"* %21) #3
  %356 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %17, i32 0, i32 0
  store %"class.std::vector.18"* %355, %"class.std::vector.18"** %356, align 8
  %357 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %5, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %17) #3
  store i64 %357, i64* %16, align 8
  %358 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %359 = load i64, i64* %15, align 8
  %360 = call %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.14"* %358, i64 %359)
  store %"class.std::vector.18"* %360, %"class.std::vector.18"** %18, align 8
  %361 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  store %"class.std::vector.18"* %361, %"class.std::vector.18"** %19, align 8
  %362 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %363 = load i64, i64* %16, align 8
  %364 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %362, i64 %363
  %365 = load i64, i64* %7, align 8
  %366 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %367 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %368 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %367) #3
  %369 = invoke %"class.std::vector.18"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E(%"class.std::vector.18"* %364, i64 %365, %"class.std::vector.18"* dereferenceable(24) %366, %"class.std::allocator.15"* dereferenceable(1) %368)
          to label %370 unwind label %425

; <label>:370:                                    ; preds = %352
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %19, align 8
  %371 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %372 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %372, i32 0, i32 0
  %374 = load %"class.std::vector.18"*, %"class.std::vector.18"** %373, align 8
  %375 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %376 = load %"class.std::vector.18"*, %"class.std::vector.18"** %375, align 8
  %377 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %378 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %379 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %378) #3
  %380 = invoke %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"* %374, %"class.std::vector.18"* %376, %"class.std::vector.18"* %377, %"class.std::allocator.15"* dereferenceable(1) %379)
          to label %381 unwind label %425

; <label>:381:                                    ; preds = %370
  %382 = load i32, i32* @x.382
  %383 = load i32, i32* @y.383
  %384 = add i32 %382, -1993523367
  %385 = sub i32 %384, 1
  %386 = sub i32 %385, -1993523367
  %387 = sub i32 %382, 1
  %388 = mul i32 %382, %386
  %389 = urem i32 %388, 2
  %390 = icmp eq i32 %389, 0
  %391 = icmp slt i32 %383, 10
  %392 = and i1 %390, %391
  %393 = xor i1 %390, %391
  %394 = or i1 %392, %393
  %395 = or i1 %390, %391
  br i1 %394, label %396, label %738

; <label>:396:                                    ; preds = %381, %738
  store %"class.std::vector.18"* %380, %"class.std::vector.18"** %19, align 8
  %397 = load i64, i64* %7, align 8
  %398 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %399 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %398, i64 %397
  store %"class.std::vector.18"* %399, %"class.std::vector.18"** %19, align 8
  %400 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %401 = load %"class.std::vector.18"*, %"class.std::vector.18"** %400, align 8
  %402 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %403 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %402, i32 0, i32 0
  %404 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %403, i32 0, i32 1
  %405 = load %"class.std::vector.18"*, %"class.std::vector.18"** %404, align 8
  %406 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %407 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %408 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %407) #3
  %409 = load i32, i32* @x.382
  %410 = load i32, i32* @y.383
  %411 = sub i32 0, 1
  %412 = add i32 %409, %411
  %413 = sub i32 %409, 1
  %414 = mul i32 %409, %412
  %415 = urem i32 %414, 2
  %416 = icmp eq i32 %415, 0
  %417 = icmp slt i32 %410, 10
  %418 = and i1 %416, %417
  %419 = xor i1 %416, %417
  %420 = or i1 %418, %419
  %421 = or i1 %416, %417
  br i1 %420, label %422, label %738

; <label>:422:                                    ; preds = %396
  %423 = invoke %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"* %401, %"class.std::vector.18"* %405, %"class.std::vector.18"* %406, %"class.std::allocator.15"* dereferenceable(1) %408)
          to label %424 unwind label %425

; <label>:424:                                    ; preds = %422
  store %"class.std::vector.18"* %423, %"class.std::vector.18"** %19, align 8
  br label %563

; <label>:425:                                    ; preds = %422, %370, %352
  %426 = landingpad { i8*, i32 }
          catch i8* null
  %427 = extractvalue { i8*, i32 } %426, 0
  store i8* %427, i8** %13, align 8
  %428 = extractvalue { i8*, i32 } %426, 1
  store i32 %428, i32* %14, align 4
  br label %429

; <label>:429:                                    ; preds = %425
  %430 = load i32, i32* @x.382
  %431 = load i32, i32* @y.383
  %432 = sub i32 %430, -1980833576
  %433 = sub i32 %432, 1
  %434 = add i32 %433, -1980833576
  %435 = sub i32 %430, 1
  %436 = mul i32 %430, %434
  %437 = urem i32 %436, 2
  %438 = icmp eq i32 %437, 0
  %439 = icmp slt i32 %431, 10
  %440 = and i1 %438, %439
  %441 = xor i1 %438, %439
  %442 = or i1 %440, %441
  %443 = or i1 %438, %439
  br i1 %442, label %444, label %751

; <label>:444:                                    ; preds = %429, %751
  %445 = load i8*, i8** %13, align 8
  %446 = call i8* @__cxa_begin_catch(i8* %445) #3
  %447 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %448 = icmp ne %"class.std::vector.18"* %447, null
  %449 = load i32, i32* @x.382
  %450 = load i32, i32* @y.383
  %451 = sub i32 %449, 155686908
  %452 = sub i32 %451, 1
  %453 = add i32 %452, 155686908
  %454 = sub i32 %449, 1
  %455 = mul i32 %449, %453
  %456 = urem i32 %455, 2
  %457 = icmp eq i32 %456, 0
  %458 = icmp slt i32 %450, 10
  %459 = and i1 %457, %458
  %460 = xor i1 %457, %458
  %461 = or i1 %459, %460
  %462 = or i1 %457, %458
  br i1 %461, label %463, label %751

; <label>:463:                                    ; preds = %444
  br i1 %448, label %480, label %464

; <label>:464:                                    ; preds = %463
  %465 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %466 = load i64, i64* %16, align 8
  %467 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %465, i64 %466
  %468 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %469 = load i64, i64* %16, align 8
  %470 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %468, i64 %469
  %471 = load i64, i64* %7, align 8
  %472 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %470, i64 %471
  %473 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %474 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %473) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"* %467, %"class.std::vector.18"* %472, %"class.std::allocator.15"* dereferenceable(1) %474)
          to label %475 unwind label %476

; <label>:475:                                    ; preds = %464
  br label %557

; <label>:476:                                    ; preds = %561, %557, %514, %464
  %477 = landingpad { i8*, i32 }
          cleanup
  %478 = extractvalue { i8*, i32 } %477, 0
  store i8* %478, i8** %13, align 8
  %479 = extractvalue { i8*, i32 } %477, 1
  store i32 %479, i32* %14, align 4
  invoke void @__cxa_end_catch()
          to label %562 unwind label %643

; <label>:480:                                    ; preds = %463
  %481 = load i32, i32* @x.382
  %482 = load i32, i32* @y.383
  %483 = sub i32 %481, -1532345981
  %484 = sub i32 %483, 1
  %485 = add i32 %484, -1532345981
  %486 = sub i32 %481, 1
  %487 = mul i32 %481, %485
  %488 = urem i32 %487, 2
  %489 = icmp eq i32 %488, 0
  %490 = icmp slt i32 %482, 10
  %491 = and i1 %489, %490
  %492 = xor i1 %489, %490
  %493 = or i1 %491, %492
  %494 = or i1 %489, %490
  br i1 %493, label %495, label %756

; <label>:495:                                    ; preds = %480, %756
  %496 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %497 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %498 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %499 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %498) #3
  %500 = load i32, i32* @x.382
  %501 = load i32, i32* @y.383
  %502 = add i32 %500, -706689460
  %503 = sub i32 %502, 1
  %504 = sub i32 %503, -706689460
  %505 = sub i32 %500, 1
  %506 = mul i32 %500, %504
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %501, 10
  %510 = and i1 %508, %509
  %511 = xor i1 %508, %509
  %512 = or i1 %510, %511
  %513 = or i1 %508, %509
  br i1 %512, label %514, label %756

; <label>:514:                                    ; preds = %495
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"* %496, %"class.std::vector.18"* %497, %"class.std::allocator.15"* dereferenceable(1) %499)
          to label %515 unwind label %476

; <label>:515:                                    ; preds = %514
  %516 = load i32, i32* @x.382
  %517 = load i32, i32* @y.383
  %518 = sub i32 %516, -1101602756
  %519 = sub i32 %518, 1
  %520 = add i32 %519, -1101602756
  %521 = sub i32 %516, 1
  %522 = mul i32 %516, %520
  %523 = urem i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = icmp slt i32 %517, 10
  %526 = and i1 %524, %525
  %527 = xor i1 %524, %525
  %528 = or i1 %526, %527
  %529 = or i1 %524, %525
  br i1 %528, label %530, label %761

; <label>:530:                                    ; preds = %515, %761
  %531 = load i32, i32* @x.382
  %532 = load i32, i32* @y.383
  %533 = sub i32 0, 1
  %534 = add i32 %531, %533
  %535 = sub i32 %531, 1
  %536 = mul i32 %531, %534
  %537 = urem i32 %536, 2
  %538 = icmp eq i32 %537, 0
  %539 = icmp slt i32 %532, 10
  %540 = xor i1 %538, true
  %541 = xor i1 %539, true
  %542 = xor i1 false, true
  %543 = and i1 %540, false
  %544 = and i1 %538, %542
  %545 = and i1 %541, false
  %546 = and i1 %539, %542
  %547 = or i1 %543, %544
  %548 = or i1 %545, %546
  %549 = xor i1 %547, %548
  %550 = or i1 %540, %541
  %551 = xor i1 %550, true
  %552 = or i1 false, %542
  %553 = and i1 %551, %552
  %554 = or i1 %549, %553
  %555 = or i1 %538, %539
  br i1 %554, label %556, label %761

; <label>:556:                                    ; preds = %530
  br label %557

; <label>:557:                                    ; preds = %556, %475
  %558 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %559 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %560 = load i64, i64* %15, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.14"* %558, %"class.std::vector.18"* %559, i64 %560)
          to label %561 unwind label %476

; <label>:561:                                    ; preds = %557
  invoke void @__cxa_rethrow() #12
          to label %646 unwind label %476

; <label>:562:                                    ; preds = %476
  br label %638

; <label>:563:                                    ; preds = %424
  %564 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %565 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %564, i32 0, i32 0
  %566 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %565, i32 0, i32 0
  %567 = load %"class.std::vector.18"*, %"class.std::vector.18"** %566, align 8
  %568 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %569 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %568, i32 0, i32 0
  %570 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %569, i32 0, i32 1
  %571 = load %"class.std::vector.18"*, %"class.std::vector.18"** %570, align 8
  %572 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %573 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %572) #3
  call void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.18"* %567, %"class.std::vector.18"* %571, %"class.std::allocator.15"* dereferenceable(1) %573)
  %574 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %575 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %576 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %575, i32 0, i32 0
  %577 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %576, i32 0, i32 0
  %578 = load %"class.std::vector.18"*, %"class.std::vector.18"** %577, align 8
  %579 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %580 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %579, i32 0, i32 0
  %581 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %580, i32 0, i32 2
  %582 = load %"class.std::vector.18"*, %"class.std::vector.18"** %581, align 8
  %583 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %584 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %583, i32 0, i32 0
  %585 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %584, i32 0, i32 0
  %586 = load %"class.std::vector.18"*, %"class.std::vector.18"** %585, align 8
  %587 = ptrtoint %"class.std::vector.18"* %582 to i64
  %588 = ptrtoint %"class.std::vector.18"* %586 to i64
  %589 = sub i64 0, %588
  %590 = add i64 %587, %589
  %591 = sub i64 %587, %588
  %592 = sdiv exact i64 %590, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base.14"* %574, %"class.std::vector.18"* %578, i64 %592)
  %593 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %594 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %595 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %594, i32 0, i32 0
  %596 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %595, i32 0, i32 0
  store %"class.std::vector.18"* %593, %"class.std::vector.18"** %596, align 8
  %597 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %598 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %599 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %598, i32 0, i32 0
  %600 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %599, i32 0, i32 1
  store %"class.std::vector.18"* %597, %"class.std::vector.18"** %600, align 8
  %601 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %602 = load i64, i64* %15, align 8
  %603 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %601, i64 %602
  %604 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %605 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %604, i32 0, i32 0
  %606 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %605, i32 0, i32 2
  store %"class.std::vector.18"* %603, %"class.std::vector.18"** %606, align 8
  br label %607

; <label>:607:                                    ; preds = %563, %351
  br label %608

; <label>:608:                                    ; preds = %607, %4
  %609 = load i32, i32* @x.382
  %610 = load i32, i32* @y.383
  %611 = sub i32 0, 1
  %612 = add i32 %609, %611
  %613 = sub i32 %609, 1
  %614 = mul i32 %609, %612
  %615 = urem i32 %614, 2
  %616 = icmp eq i32 %615, 0
  %617 = icmp slt i32 %610, 10
  %618 = and i1 %616, %617
  %619 = xor i1 %616, %617
  %620 = or i1 %618, %619
  %621 = or i1 %616, %617
  br i1 %620, label %622, label %762

; <label>:622:                                    ; preds = %608, %762
  %623 = load i32, i32* @x.382
  %624 = load i32, i32* @y.383
  %625 = sub i32 %623, 171188888
  %626 = sub i32 %625, 1
  %627 = add i32 %626, 171188888
  %628 = sub i32 %623, 1
  %629 = mul i32 %623, %627
  %630 = urem i32 %629, 2
  %631 = icmp eq i32 %630, 0
  %632 = icmp slt i32 %624, 10
  %633 = and i1 %631, %632
  %634 = xor i1 %631, %632
  %635 = or i1 %633, %634
  %636 = or i1 %631, %632
  br i1 %635, label %637, label %762

; <label>:637:                                    ; preds = %622
  ret void

; <label>:638:                                    ; preds = %562, %270
  %639 = load i8*, i8** %13, align 8
  %640 = load i32, i32* %14, align 4
  %641 = insertvalue { i8*, i32 } undef, i8* %639, 0
  %642 = insertvalue { i8*, i32 } %641, i32 %640, 1
  resume { i8*, i32 } %642

; <label>:643:                                    ; preds = %476
  %644 = landingpad { i8*, i32 }
          catch i8* null
  %645 = extractvalue { i8*, i32 } %644, 0
  call void @__clang_call_terminate(i8* %645) #10
  unreachable

; <label>:646:                                    ; preds = %561
  %647 = load i32, i32* @x.382
  %648 = load i32, i32* @y.383
  %649 = add i32 %647, -1657302762
  %650 = sub i32 %649, 1
  %651 = sub i32 %650, -1657302762
  %652 = sub i32 %647, 1
  %653 = mul i32 %647, %651
  %654 = urem i32 %653, 2
  %655 = icmp eq i32 %654, 0
  %656 = icmp slt i32 %648, 10
  %657 = and i1 %655, %656
  %658 = xor i1 %655, %656
  %659 = or i1 %657, %658
  %660 = or i1 %655, %656
  br i1 %659, label %661, label %763

; <label>:661:                                    ; preds = %646, %763
  %662 = load i32, i32* @x.382
  %663 = load i32, i32* @y.383
  %664 = add i32 %662, -2000312258
  %665 = sub i32 %664, 1
  %666 = sub i32 %665, -2000312258
  %667 = sub i32 %662, 1
  %668 = mul i32 %662, %666
  %669 = urem i32 %668, 2
  %670 = icmp eq i32 %669, 0
  %671 = icmp slt i32 %663, 10
  %672 = and i1 %670, %671
  %673 = xor i1 %670, %671
  %674 = or i1 %672, %673
  %675 = or i1 %670, %671
  br i1 %674, label %676, label %763

; <label>:676:                                    ; preds = %661
  unreachable

; <label>:677:                                    ; preds = %57, %42
  %678 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS4_(%"class.std::vector.18"* %9, %"class.std::vector.18"* dereferenceable(24) %678)
  %679 = call %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE3endEv(%"class.std::vector.13"* %21) #3
  %680 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %11, i32 0, i32 0
  store %"class.std::vector.18"* %679, %"class.std::vector.18"** %680, align 8
  %681 = call i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %11, %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8) %5) #3
  store i64 %681, i64* %10, align 8
  %682 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %683 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %682, i32 0, i32 0
  %684 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %683, i32 0, i32 1
  %685 = load %"class.std::vector.18"*, %"class.std::vector.18"** %684, align 8
  store %"class.std::vector.18"* %685, %"class.std::vector.18"** %12, align 8
  %686 = load i64, i64* %10, align 8
  %687 = load i64, i64* %7, align 8
  %688 = icmp ugt i64 %686, %687
  br label %57

; <label>:689:                                    ; preds = %111, %84
  %690 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %691 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %690, i32 0, i32 0
  %692 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %691, i32 0, i32 1
  %693 = load %"class.std::vector.18"*, %"class.std::vector.18"** %692, align 8
  %694 = load i64, i64* %7, align 8
  %695 = sub i64 0, 0
  %696 = add i64 0, %695
  %697 = sub i64 0, 0
  %698 = sub i64 0, %696
  %699 = sub i64 0, %694
  %700 = add i64 %698, %699
  %701 = sub i64 0, %700
  %702 = add i64 %696, %694
  %703 = sub i64 0, 0
  %704 = add i64 0, %703
  %705 = sub i64 0, 0
  %706 = sub i64 %704, -7701999719466068449
  %707 = add i64 %706, %694
  %708 = add i64 %707, -7701999719466068449
  %709 = add i64 %704, %694
  %710 = shl i64 0, %694
  %711 = add i64 0, -3032221838925160577
  %712 = sub i64 %711, %694
  %713 = sub i64 %712, -3032221838925160577
  %714 = sub i64 0, %694
  %715 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %693, i64 %713
  %716 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %717 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %716, i32 0, i32 0
  %718 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %717, i32 0, i32 1
  %719 = load %"class.std::vector.18"*, %"class.std::vector.18"** %718, align 8
  %720 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %721 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %720, i32 0, i32 0
  %722 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %721, i32 0, i32 1
  %723 = load %"class.std::vector.18"*, %"class.std::vector.18"** %722, align 8
  %724 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %725 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %724) #3
  br label %111

; <label>:726:                                    ; preds = %191, %164
  %727 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %728 = load %"class.std::vector.18"*, %"class.std::vector.18"** %727, align 8
  %729 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %730 = load %"class.std::vector.18"*, %"class.std::vector.18"** %729, align 8
  %731 = load i64, i64* %7, align 8
  %732 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %730, i64 %731
  br label %191

; <label>:733:                                    ; preds = %241, %214
  %734 = landingpad { i8*, i32 }
          cleanup
  %735 = extractvalue { i8*, i32 } %734, 0
  store i8* %735, i8** %13, align 8
  %736 = extractvalue { i8*, i32 } %734, 1
  store i32 %736, i32* %14, align 4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %9) #3
  br label %241

; <label>:737:                                    ; preds = %337, %310
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %9) #3
  br label %337

; <label>:738:                                    ; preds = %396, %381
  store %"class.std::vector.18"* %380, %"class.std::vector.18"** %19, align 8
  %739 = load i64, i64* %7, align 8
  %740 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %741 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %740, i64 %739
  store %"class.std::vector.18"* %741, %"class.std::vector.18"** %19, align 8
  %742 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %743 = load %"class.std::vector.18"*, %"class.std::vector.18"** %742, align 8
  %744 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %745 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %744, i32 0, i32 0
  %746 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %745, i32 0, i32 1
  %747 = load %"class.std::vector.18"*, %"class.std::vector.18"** %746, align 8
  %748 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %749 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %750 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %749) #3
  br label %396

; <label>:751:                                    ; preds = %444, %429
  %752 = load i8*, i8** %13, align 8
  %753 = call i8* @__cxa_begin_catch(i8* %752) #3
  %754 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %755 = icmp ne %"class.std::vector.18"* %754, null
  br label %444

; <label>:756:                                    ; preds = %495, %480
  %757 = load %"class.std::vector.18"*, %"class.std::vector.18"** %18, align 8
  %758 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %759 = bitcast %"class.std::vector.13"* %21 to %"struct.std::_Vector_base.14"*
  %760 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %759) #3
  br label %495

; <label>:761:                                    ; preds = %530, %515
  br label %530

; <label>:762:                                    ; preds = %622, %608
  br label %622

; <label>:763:                                    ; preds = %661, %646
  br label %661
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE5beginEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %3 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %3, align 8
  %4 = load %"class.std::vector.13"*, %"class.std::vector.13"** %3, align 8
  %5 = bitcast %"class.std::vector.13"* %4 to %"struct.std::_Vector_base.14"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.23"* %2, %"class.std::vector.18"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %2, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  ret %"class.std::vector.18"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEplEl(%"class.__gnu_cxx::__normal_iterator.23"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  store i64 %1, i64* %5, align 8
  %7 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %8, align 8
  %10 = load i64, i64* %5, align 8
  %11 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %9, i64 %10
  store %"class.std::vector.18"* %11, %"class.std::vector.18"** %6, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.23"* %3, %"class.std::vector.18"** dereferenceable(8) %6) #3
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %3, i32 0, i32 0
  %13 = load %"class.std::vector.18"*, %"class.std::vector.18"** %12, align 8
  ret %"class.std::vector.18"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.24"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %3, i32 0, i32 0
  ret %"class.std::vector.18"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS8_(%"class.__gnu_cxx::__normal_iterator.24"*, %"class.std::vector.18"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.390
  %6 = load i32, i32* @y.391
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1837191558, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1837191558, label %18
    i32 1985386823, label %26
    i32 -1278486815, label %48
    i32 1958209711, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1985386823, i32 1958209711
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %28 = alloca %"class.std::vector.18"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  store %"class.std::vector.18"** %1, %"class.std::vector.18"*** %28, align 8
  %29 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %27, align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.18"**, %"class.std::vector.18"*** %28, align 8
  %32 = load %"class.std::vector.18"*, %"class.std::vector.18"** %31, align 8
  store %"class.std::vector.18"* %32, %"class.std::vector.18"** %30, align 8
  %33 = load i32, i32* @x.390
  %34 = load i32, i32* @y.391
  %35 = sub i32 %33, 871621590
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 871621590
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 -1278486815, i32 1958209711
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.24"*, align 8
  %51 = alloca %"class.std::vector.18"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.24"* %0, %"class.__gnu_cxx::__normal_iterator.24"** %50, align 8
  store %"class.std::vector.18"** %1, %"class.std::vector.18"*** %51, align 8
  %52 = load %"class.__gnu_cxx::__normal_iterator.24"*, %"class.__gnu_cxx::__normal_iterator.24"** %50, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.24", %"class.__gnu_cxx::__normal_iterator.24"* %52, i32 0, i32 0
  %54 = load %"class.std::vector.18"**, %"class.std::vector.18"*** %51, align 8
  %55 = load %"class.std::vector.18"*, %"class.std::vector.18"** %54, align 8
  store %"class.std::vector.18"* %55, %"class.std::vector.18"** %53, align 8
  store i32 1985386823, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS4_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::allocator.20", align 1
  %6 = alloca i8*
  %7 = alloca i32
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %11 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %12 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %13 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %12) #3
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %15 = bitcast %"class.std::vector.18"* %14 to %"struct.std::_Vector_base.19"*
  %16 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %15) #3
  call void @_ZN9__gnu_cxx14__alloc_traitsISaIN5DinicIiE4edgeEEE17_S_select_on_copyERKS4_(%"class.std::allocator.20"* sret %5, %"class.std::allocator.20"* dereferenceable(1) %16)
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.19"* %11, i64 %13, %"class.std::allocator.20"* dereferenceable(1) %5)
          to label %17 unwind label %68

; <label>:17:                                     ; preds = %2
  call void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"* %5) #3
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %19 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"* %18) #3
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"** %20, align 8
  %21 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %22 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"* %21) #3
  %23 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %22, %"struct.Dinic<int>::edge"** %23, align 8
  %24 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %25, i32 0, i32 0
  %27 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %26, align 8
  %28 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %29 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %28) #3
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %31 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %33 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %32, align 8
  %34 = invoke %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Dinic<int>::edge"* %31, %"struct.Dinic<int>::edge"* %33, %"struct.Dinic<int>::edge"* %27, %"class.std::allocator.20"* dereferenceable(1) %29)
          to label %35 unwind label %114

; <label>:35:                                     ; preds = %17
  %36 = load i32, i32* @x.392
  %37 = load i32, i32* @y.393
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  br i1 %47, label %49, label %124

; <label>:49:                                     ; preds = %35, %124
  %50 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %51 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %50, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %51, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* %34, %"struct.Dinic<int>::edge"** %52, align 8
  %53 = load i32, i32* @x.392
  %54 = load i32, i32* @y.393
  %55 = add i32 %53, 1630694773
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, 1630694773
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %124

; <label>:67:                                     ; preds = %49
  ret void

; <label>:68:                                     ; preds = %2
  %69 = load i32, i32* @x.392
  %70 = load i32, i32* @y.393
  %71 = sub i32 %69, 819398732
  %72 = sub i32 %71, 1
  %73 = add i32 %72, 819398732
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = xor i1 %77, true
  %80 = xor i1 %78, true
  %81 = xor i1 false, true
  %82 = and i1 %79, false
  %83 = and i1 %77, %81
  %84 = and i1 %80, false
  %85 = and i1 %78, %81
  %86 = or i1 %82, %83
  %87 = or i1 %84, %85
  %88 = xor i1 %86, %87
  %89 = or i1 %79, %80
  %90 = xor i1 %89, true
  %91 = or i1 false, %81
  %92 = and i1 %90, %91
  %93 = or i1 %88, %92
  %94 = or i1 %77, %78
  br i1 %93, label %95, label %128

; <label>:95:                                     ; preds = %68, %128
  %96 = landingpad { i8*, i32 }
          cleanup
  %97 = extractvalue { i8*, i32 } %96, 0
  store i8* %97, i8** %6, align 8
  %98 = extractvalue { i8*, i32 } %96, 1
  store i32 %98, i32* %7, align 4
  call void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"* %5) #3
  %99 = load i32, i32* @x.392
  %100 = load i32, i32* @y.393
  %101 = add i32 %99, 1983693245
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 1983693245
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  br i1 %111, label %113, label %128

; <label>:113:                                    ; preds = %95
  br label %119

; <label>:114:                                    ; preds = %17
  %115 = landingpad { i8*, i32 }
          cleanup
  %116 = extractvalue { i8*, i32 } %115, 0
  store i8* %116, i8** %6, align 8
  %117 = extractvalue { i8*, i32 } %115, 1
  store i32 %117, i32* %7, align 4
  %118 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.19"* %118) #3
  br label %119

; <label>:119:                                    ; preds = %114, %113
  %120 = load i8*, i8** %6, align 8
  %121 = load i32, i32* %7, align 4
  %122 = insertvalue { i8*, i32 } undef, i8* %120, 0
  %123 = insertvalue { i8*, i32 } %122, i32 %121, 1
  resume { i8*, i32 } %123

; <label>:124:                                    ; preds = %49, %35
  %125 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %126 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %125, i32 0, i32 0
  %127 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %126, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* %34, %"struct.Dinic<int>::edge"** %127, align 8
  br label %49

; <label>:128:                                    ; preds = %95, %68
  %129 = landingpad { i8*, i32 }
          cleanup
  %130 = extractvalue { i8*, i32 } %129, 0
  store i8* %130, i8** %6, align 8
  %131 = extractvalue { i8*, i32 } %129, 1
  store i32 %131, i32* %7, align 4
  call void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"* %5) #3
  br label %95
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZN9__gnu_cxxmiIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEENS_17__normal_iteratorIT_T0_E15difference_typeERKSD_SG_(%"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator.23"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %1, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  %6 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %5) #3
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %4, align 8
  %9 = call dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"* %8) #3
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  %11 = ptrtoint %"class.std::vector.18"* %7 to i64
  %12 = ptrtoint %"class.std::vector.18"* %10 to i64
  %13 = add i64 %11, 2522271268053420918
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 2522271268053420918
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  ret i64 %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt22__uninitialized_move_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %12 = call %"class.std::vector.18"* @_ZSt18make_move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEESt13move_iteratorIT_ES8_(%"class.std::vector.18"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  store %"class.std::vector.18"* %12, %"class.std::vector.18"** %13, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %15 = call %"class.std::vector.18"* @_ZSt18make_move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEESt13move_iteratorIT_ES8_(%"class.std::vector.18"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  store %"class.std::vector.18"* %15, %"class.std::vector.18"** %16, align 8
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %18 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.18"*, %"class.std::vector.18"** %21, align 8
  %23 = call %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.18"* %20, %"class.std::vector.18"* %22, %"class.std::vector.18"* %17, %"class.std::allocator.15"* dereferenceable(1) %18)
  ret %"class.std::vector.18"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt13move_backwardIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET0_T_S8_S7_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZSt12__miter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %7)
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = call %"class.std::vector.18"* @_ZSt12__miter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %9)
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %12 = call %"class.std::vector.18"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.18"* %8, %"class.std::vector.18"* %10, %"class.std::vector.18"* %11)
  ret %"class.std::vector.18"* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::vector.18"** @_ZNK9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.23"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %3, i32 0, i32 0
  ret %"class.std::vector.18"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EvT_S7_RKT0_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %7)
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = call %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %9)
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  call void @_ZSt8__fill_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SC_RKS9_(%"class.std::vector.18"* %8, %"class.std::vector.18"* %10, %"class.std::vector.18"* dereferenceable(24) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt24__uninitialized_fill_n_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_S5_ET_S7_T0_RKT1_RSaIT2_E(%"class.std::vector.18"*, i64, %"class.std::vector.18"* dereferenceable(24), %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store i64 %1, i64* %6, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %12 = call %"class.std::vector.18"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_ET_S7_T0_RKT1_(%"class.std::vector.18"* %9, i64 %10, %"class.std::vector.18"* dereferenceable(24) %11)
  ret %"class.std::vector.18"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector.13"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.13"*
  %9 = alloca %"class.std::vector.13"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.13"*, %"class.std::vector.13"** %9, align 8
  store %"class.std::vector.13"* %14, %"class.std::vector.13"** %8
  %15 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %16 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.13"* %15) #3
  %17 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %18 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %17) #3
  %19 = add i64 %16, 8868239783973610180
  %20 = sub i64 %19, %18
  %21 = sub i64 %20, 8868239783973610180
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 -138277696, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %196
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -138277696, label %29
    i32 1810194769, label %34
    i32 303492538, label %36
    i32 -209425129, label %63
    i32 2122747927, label %105
    i32 112162584, label %108
    i32 1842761446, label %124
    i32 570741727, label %156
    i32 -948284086, label %159
    i32 -1804183162, label %162
    i32 1528416324, label %164
    i32 295018732, label %166
    i32 -2124440104, label %191
  ]

; <label>:28:                                     ; preds = %26
  br label %196

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 1810194769, i32 303492538
  store i32 %33, i32* %24
  br label %196

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.406
  %38 = load i32, i32* @y.407
  %39 = sub i32 0, 1
  %40 = add i32 %37, %39
  %41 = sub i32 %37, 1
  %42 = mul i32 %37, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %38, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -209425129, i32 295018732
  store i32 %62, i32* %24
  br label %196

; <label>:63:                                     ; preds = %26
  %64 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %65 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %64) #3
  %66 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %67 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %66) #3
  store i64 %67, i64* %13, align 8
  %68 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %69 = load i64, i64* %68, align 8
  %70 = sub i64 %65, -8292922309235198209
  %71 = add i64 %70, %69
  %72 = add i64 %71, -8292922309235198209
  %73 = add i64 %65, %69
  store i64 %72, i64* %12, align 8
  %74 = load i64, i64* %12, align 8
  %75 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %76 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %75) #3
  %77 = icmp ult i64 %74, %76
  store i1 %77, i1* %5
  %78 = load i32, i32* @x.406
  %79 = load i32, i32* @y.407
  %80 = add i32 %78, -1226385700
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, -1226385700
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 2122747927, i32 295018732
  store i32 %104, i32* %24
  br label %196

; <label>:105:                                    ; preds = %26
  %106 = load volatile i1, i1* %5
  %107 = select i1 %106, i32 -948284086, i32 112162584
  store i32 %107, i32* %24
  br label %196

; <label>:108:                                    ; preds = %26
  %109 = load i32, i32* @x.406
  %110 = load i32, i32* @y.407
  %111 = sub i32 %109, -1686101780
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -1686101780
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  %123 = select i1 %121, i32 1842761446, i32 -2124440104
  store i32 %123, i32* %24
  br label %196

; <label>:124:                                    ; preds = %26
  %125 = load i64, i64* %12, align 8
  %126 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %127 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.13"* %126) #3
  %128 = icmp ugt i64 %125, %127
  store i1 %128, i1* %4
  %129 = load i32, i32* @x.406
  %130 = load i32, i32* @y.407
  %131 = add i32 %129, -1744265663
  %132 = sub i32 %131, 1
  %133 = sub i32 %132, -1744265663
  %134 = sub i32 %129, 1
  %135 = mul i32 %129, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %130, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 true, true
  %142 = and i1 %139, true
  %143 = and i1 %137, %141
  %144 = and i1 %140, true
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 true, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 570741727, i32 -2124440104
  store i32 %155, i32* %24
  br label %196

; <label>:156:                                    ; preds = %26
  %157 = load volatile i1, i1* %4
  %158 = select i1 %157, i32 -948284086, i32 -1804183162
  store i32 %158, i32* %24
  br label %196

; <label>:159:                                    ; preds = %26
  %160 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %161 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.13"* %160) #3
  store i32 1528416324, i32* %24
  store i64 %161, i64* %25
  br label %196

; <label>:162:                                    ; preds = %26
  %163 = load i64, i64* %12, align 8
  store i32 1528416324, i32* %24
  store i64 %163, i64* %25
  br label %196

; <label>:164:                                    ; preds = %26
  %165 = load i64, i64* %25
  ret i64 %165

; <label>:166:                                    ; preds = %26
  %167 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %168 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %167) #3
  %169 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %170 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %169) #3
  store i64 %170, i64* %13, align 8
  %171 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 0, %172
  %174 = add i64 %168, %173
  %175 = sub i64 %168, %172
  %176 = mul i64 %174, %172
  %177 = shl i64 %168, %172
  %178 = shl i64 %168, %172
  %179 = add i64 %168, -7514447502962943418
  %180 = sub i64 %179, %172
  %181 = sub i64 %180, -7514447502962943418
  %182 = sub i64 %168, %172
  %183 = mul i64 %181, %172
  %184 = sub i64 0, %172
  %185 = sub i64 %168, %184
  %186 = add i64 %168, %172
  store i64 %185, i64* %12, align 8
  %187 = load i64, i64* %12, align 8
  %188 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %189 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector.13"* %188) #3
  %190 = icmp ult i64 %187, %189
  store i32 -209425129, i32* %24
  br label %196

; <label>:191:                                    ; preds = %26
  %192 = load i64, i64* %12, align 8
  %193 = load volatile %"class.std::vector.13"*, %"class.std::vector.13"** %8
  %194 = call i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.13"* %193) #3
  %195 = icmp ugt i64 %192, %194
  store i32 1842761446, i32* %24
  br label %196

; <label>:196:                                    ; preds = %191, %166, %162, %159, %156, %124, %108, %105, %63, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base.14"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.14"*
  %6 = alloca %"struct.std::_Vector_base.14"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %6, align 8
  store %"struct.std::_Vector_base.14"* %8, %"struct.std::_Vector_base.14"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 -780522976, i32* %10
  %11 = alloca %"class.std::vector.18"*
  br label %12

; <label>:12:                                     ; preds = %2, %73
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 -780522976, label %15
    i32 1752701659, label %19
    i32 -74664748, label %25
    i32 -592839357, label %26
    i32 -1749620067, label %43
    i32 492407445, label %70
    i32 -1191332684, label %72
  ]

; <label>:14:                                     ; preds = %12
  br label %73

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 1752701659, i32 -74664748
  store i32 %18, i32* %10
  br label %73

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %21 to %"class.std::allocator.15"*
  %23 = load i64, i64* %7, align 8
  %24 = call %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator.15"* dereferenceable(1) %22, i64 %23)
  store i32 -592839357, i32* %10
  store %"class.std::vector.18"* %24, %"class.std::vector.18"** %11
  br label %73

; <label>:25:                                     ; preds = %12
  store i32 -592839357, i32* %10
  store %"class.std::vector.18"* null, %"class.std::vector.18"** %11
  br label %73

; <label>:26:                                     ; preds = %12
  %27 = load %"class.std::vector.18"*, %"class.std::vector.18"** %11
  store %"class.std::vector.18"* %27, %"class.std::vector.18"** %3
  %28 = load i32, i32* @x.408
  %29 = load i32, i32* @y.409
  %30 = add i32 %28, 1183282230
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1183282230
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -1749620067, i32 -1191332684
  store i32 %42, i32* %10
  br label %73

; <label>:43:                                     ; preds = %12
  %44 = load i32, i32* @x.408
  %45 = load i32, i32* @y.409
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 492407445, i32 -1191332684
  store i32 %69, i32* %10
  br label %73

; <label>:70:                                     ; preds = %12
  %71 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  ret %"class.std::vector.18"* %71

; <label>:72:                                     ; preds = %12
  store i32 -1749620067, i32* %10
  br label %73

; <label>:73:                                     ; preds = %72, %43, %26, %25, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca %"class.std::allocator.15"*, align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = alloca %"class.std::move_iterator.26", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %8, align 8
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %12 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.18"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  store %"class.std::vector.18"* %12, %"class.std::vector.18"** %13, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %15 = call %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.18"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  store %"class.std::vector.18"* %15, %"class.std::vector.18"** %16, align 8
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %18 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.18"*, %"class.std::vector.18"** %21, align 8
  %23 = call %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.18"* %20, %"class.std::vector.18"* %22, %"class.std::vector.18"* %17, %"class.std::allocator.15"* dereferenceable(1) %18)
  ret %"class.std::vector.18"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx14__alloc_traitsISaIN5DinicIiE4edgeEEE17_S_select_on_copyERKS4_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE37select_on_container_copy_constructionERKS3_(%"class.std::allocator.20"* sret %0, %"class.std::allocator.20"* dereferenceable(1) %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %4 to %"class.std::allocator.20"*
  ret %"class.std::allocator.20"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EmRKS3_(%"struct.std::_Vector_base.19"*, i64, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %9 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %6, align 8
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10, %"class.std::allocator.20"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"* %9, i64 %12)
          to label %13 unwind label %54

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.416
  %15 = load i32, i32* @y.417
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %92

; <label>:39:                                     ; preds = %13, %92
  %40 = load i32, i32* @x.416
  %41 = load i32, i32* @y.417
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %92

; <label>:53:                                     ; preds = %39
  ret void

; <label>:54:                                     ; preds = %3
  %55 = load i32, i32* @x.416
  %56 = load i32, i32* @y.417
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = and i1 %62, %63
  %65 = xor i1 %62, %63
  %66 = or i1 %64, %65
  %67 = or i1 %62, %63
  br i1 %66, label %68, label %93

; <label>:68:                                     ; preds = %54, %93
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %7, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10) #3
  %72 = load i32, i32* @x.416
  %73 = load i32, i32* @y.417
  %74 = sub i32 %72, 867171866
  %75 = sub i32 %74, 1
  %76 = add i32 %75, 867171866
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  br i1 %84, label %86, label %93

; <label>:86:                                     ; preds = %68
  br label %87

; <label>:87:                                     ; preds = %86
  %88 = load i8*, i8** %7, align 8
  %89 = load i32, i32* %8, align 4
  %90 = insertvalue { i8*, i32 } undef, i8* %88, 0
  %91 = insertvalue { i8*, i32 } %90, i32 %89, 1
  resume { i8*, i32 } %91

; <label>:92:                                     ; preds = %39, %13
  br label %39

; <label>:93:                                     ; preds = %68, %54
  %94 = landingpad { i8*, i32 }
          cleanup
  %95 = extractvalue { i8*, i32 } %94, 0
  store i8* %95, i8** %7, align 8
  %96 = extractvalue { i8*, i32 } %94, 1
  store i32 %96, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10) #3
  br label %68
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %2, align 8
  %3 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %2, align 8
  %4 = bitcast %"class.std::allocator.20"* %3 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.21"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %12, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %9 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %19 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %21 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %20, align 8
  %22 = call %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"* %21, %"struct.Dinic<int>::edge"* %17)
  ret %"struct.Dinic<int>::edge"* %22
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.422
  %6 = load i32, i32* @y.423
  %7 = add i32 %5, -325364167
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -325364167
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 125362921, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %90
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 125362921, label %19
    i32 -6578800, label %39
    i32 1946135425, label %77
    i32 -1906540511, label %79
  ]

; <label>:18:                                     ; preds = %16
  br label %90

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -6578800, i32 -1906540511
  store i32 %38, i32* %15
  br label %90

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %41 = alloca %"class.std::vector.18"*, align 8
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %41, align 8
  %43 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  %44 = bitcast %"class.std::vector.18"* %43 to %"struct.std::_Vector_base.19"*
  %45 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %44, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %45, i32 0, i32 0
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %46, align 8
  store %"struct.Dinic<int>::edge"* %47, %"struct.Dinic<int>::edge"** %42, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.25"* %40, %"struct.Dinic<int>::edge"** dereferenceable(8) %42) #3
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %40, i32 0, i32 0
  %49 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %48, align 8
  store %"struct.Dinic<int>::edge"* %49, %"struct.Dinic<int>::edge"** %2
  %50 = load i32, i32* @x.422
  %51 = load i32, i32* @y.423
  %52 = sub i32 %50, -1164535680
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1164535680
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 1946135425, i32 -1906540511
  store i32 %76, i32* %15
  br label %90

; <label>:77:                                     ; preds = %16
  %78 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %78

; <label>:79:                                     ; preds = %16
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %81 = alloca %"class.std::vector.18"*, align 8
  %82 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %81, align 8
  %83 = load %"class.std::vector.18"*, %"class.std::vector.18"** %81, align 8
  %84 = bitcast %"class.std::vector.18"* %83 to %"struct.std::_Vector_base.19"*
  %85 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %84, i32 0, i32 0
  %86 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %85, i32 0, i32 0
  %87 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %86, align 8
  store %"struct.Dinic<int>::edge"* %87, %"struct.Dinic<int>::edge"** %82, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.25"* %80, %"struct.Dinic<int>::edge"** dereferenceable(8) %82) #3
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %80, i32 0, i32 0
  %89 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %88, align 8
  store i32 -6578800, i32* %15
  br label %90

; <label>:90:                                     ; preds = %79, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %7, i32 0, i32 1
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  store %"struct.Dinic<int>::edge"* %9, %"struct.Dinic<int>::edge"** %4, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.25"* %2, %"struct.Dinic<int>::edge"** dereferenceable(8) %4) #3
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %10, align 8
  ret %"struct.Dinic<int>::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE37select_on_container_copy_constructionERKS3_(%"class.std::allocator.20"* noalias sret, %"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %3, align 8
  %4 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %3, align 8
  call void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.428
  %6 = load i32, i32* @y.429
  %7 = sub i32 %5, -563865558
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -563865558
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 605402521, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 605402521, label %19
    i32 -1667681517, label %27
    i32 2022062058, label %61
    i32 -739186113, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1667681517, i32 -739186113
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %29, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %31 = bitcast %"class.std::allocator.20"* %30 to %"class.__gnu_cxx::new_allocator.21"*
  %32 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %29, align 8
  %33 = bitcast %"class.std::allocator.20"* %32 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.21"* %31, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.428
  %35 = load i32, i32* @y.429
  %36 = sub i32 %34, 1044834326
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 1044834326
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 2022062058, i32 -739186113
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::allocator.20"*, align 8
  %64 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %63, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %64, align 8
  %65 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %63, align 8
  %66 = bitcast %"class.std::allocator.20"* %65 to %"class.__gnu_cxx::new_allocator.21"*
  %67 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %64, align 8
  %68 = bitcast %"class.std::allocator.20"* %67 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.21"* %66, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1) %68) #3
  store i32 -1667681517, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %1, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  call void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %7) #3
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %8, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %10, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE17_M_create_storageEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call %"struct.Dinic<int>::edge"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %8, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %7, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %13, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* %12, %"struct.Dinic<int>::edge"** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %20, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"** %21, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.Dinic<int>::edge"*
  %4 = alloca i64
  %5 = alloca %"struct.std::_Vector_base.19"*
  %6 = alloca %"struct.std::_Vector_base.19"*, align 8
  %7 = alloca i64, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %6, align 8
  store %"struct.std::_Vector_base.19"* %8, %"struct.std::_Vector_base.19"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = alloca i32
  store i32 1401335962, i32* %10
  %11 = alloca %"struct.Dinic<int>::edge"*
  br label %12

; <label>:12:                                     ; preds = %2, %110
  %13 = load i32, i32* %10
  switch i32 %13, label %14 [
    i32 1401335962, label %15
    i32 -1835070869, label %19
    i32 -1543600484, label %46
    i32 -264527557, label %67
    i32 -294971792, label %69
    i32 -1972515556, label %85
    i32 -1356941317, label %100
    i32 -2046931493, label %101
    i32 -1970051791, label %103
    i32 827584573, label %109
  ]

; <label>:14:                                     ; preds = %12
  br label %110

; <label>:15:                                     ; preds = %12
  %16 = load volatile i64, i64* %4
  %17 = icmp ne i64 %16, 0
  %18 = select i1 %17, i32 -1835070869, i32 -294971792
  store i32 %18, i32* %10
  br label %110

; <label>:19:                                     ; preds = %12
  %20 = load i32, i32* @x.436
  %21 = load i32, i32* @y.437
  %22 = sub i32 0, 1
  %23 = add i32 %20, %22
  %24 = sub i32 %20, 1
  %25 = mul i32 %20, %23
  %26 = urem i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = icmp slt i32 %21, 10
  %29 = xor i1 %27, true
  %30 = xor i1 %28, true
  %31 = xor i1 false, true
  %32 = and i1 %29, false
  %33 = and i1 %27, %31
  %34 = and i1 %30, false
  %35 = and i1 %28, %31
  %36 = or i1 %32, %33
  %37 = or i1 %34, %35
  %38 = xor i1 %36, %37
  %39 = or i1 %29, %30
  %40 = xor i1 %39, true
  %41 = or i1 false, %31
  %42 = and i1 %40, %41
  %43 = or i1 %38, %42
  %44 = or i1 %27, %28
  %45 = select i1 %43, i32 -1543600484, i32 -1970051791
  store i32 %45, i32* %10
  br label %110

; <label>:46:                                     ; preds = %12
  %47 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %48 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %47, i32 0, i32 0
  %49 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %48 to %"class.std::allocator.20"*
  %50 = load i64, i64* %7, align 8
  %51 = call %"struct.Dinic<int>::edge"* @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8allocateERS3_m(%"class.std::allocator.20"* dereferenceable(1) %49, i64 %50)
  store %"struct.Dinic<int>::edge"* %51, %"struct.Dinic<int>::edge"** %3
  %52 = load i32, i32* @x.436
  %53 = load i32, i32* @y.437
  %54 = sub i32 %52, -67872462
  %55 = sub i32 %54, 1
  %56 = add i32 %55, -67872462
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -264527557, i32 -1970051791
  store i32 %66, i32* %10
  br label %110

; <label>:67:                                     ; preds = %12
  store i32 -2046931493, i32* %10
  %68 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %3
  store %"struct.Dinic<int>::edge"* %68, %"struct.Dinic<int>::edge"** %11
  br label %110

; <label>:69:                                     ; preds = %12
  %70 = load i32, i32* @x.436
  %71 = load i32, i32* @y.437
  %72 = add i32 %70, -75707199
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, -75707199
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -1972515556, i32 827584573
  store i32 %84, i32* %10
  br label %110

; <label>:85:                                     ; preds = %12
  %86 = load i32, i32* @x.436
  %87 = load i32, i32* @y.437
  %88 = sub i32 0, 1
  %89 = add i32 %86, %88
  %90 = sub i32 %86, 1
  %91 = mul i32 %86, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %87, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 -1356941317, i32 827584573
  store i32 %99, i32* %10
  br label %110

; <label>:100:                                    ; preds = %12
  store i32 -2046931493, i32* %10
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %11
  br label %110

; <label>:101:                                    ; preds = %12
  %102 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %11
  ret %"struct.Dinic<int>::edge"* %102

; <label>:103:                                    ; preds = %12
  %104 = load volatile %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %5
  %105 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %104, i32 0, i32 0
  %106 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %105 to %"class.std::allocator.20"*
  %107 = load i64, i64* %7, align 8
  %108 = call %"struct.Dinic<int>::edge"* @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8allocateERS3_m(%"class.std::allocator.20"* dereferenceable(1) %106, i64 %107)
  store i32 -1543600484, i32* %10
  br label %110

; <label>:109:                                    ; preds = %12
  store i32 -1972515556, i32* %10
  br label %110

; <label>:110:                                    ; preds = %109, %103, %100, %85, %69, %67, %46, %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8allocateERS3_m(%"class.std::allocator.20"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.Dinic<int>::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.438
  %7 = load i32, i32* @y.439
  %8 = sub i32 %6, -1237587221
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -1237587221
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -785106102, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -785106102, label %20
    i32 1088615317, label %28
    i32 548200269, label %50
    i32 -252347774, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1088615317, i32 -252347774
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.20"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %29, align 8
  %32 = bitcast %"class.std::allocator.20"* %31 to %"class.__gnu_cxx::new_allocator.21"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.Dinic<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %32, i64 %33, i8* null)
  store %"struct.Dinic<int>::edge"* %34, %"struct.Dinic<int>::edge"** %3
  %35 = load i32, i32* @x.438
  %36 = load i32, i32* @y.439
  %37 = sub i32 %35, 969665464
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 969665464
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 548200269, i32 -252347774
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %3
  ret %"struct.Dinic<int>::edge"* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.20"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %53, align 8
  %56 = bitcast %"class.std::allocator.20"* %55 to %"class.__gnu_cxx::new_allocator.21"*
  %57 = load i64, i64* %54, align 8
  %58 = call %"struct.Dinic<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"* %56, i64 %57, i8* null)
  store i32 1088615317, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.21"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 891218164, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %71
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 891218164, label %16
    i32 1366875218, label %21
    i32 842847108, label %37
    i32 -355015724, label %64
    i32 -1755396129, label %65
    i32 544916313, label %70
  ]

; <label>:15:                                     ; preds = %13
  br label %71

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 1366875218, i32 -1755396129
  store i32 %20, i32* %12
  br label %71

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.440
  %23 = load i32, i32* @y.441
  %24 = add i32 %22, 1147774575
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1147774575
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 842847108, i32 544916313
  store i32 %36, i32* %12
  br label %71

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.440
  %39 = load i32, i32* @y.441
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 -355015724, i32 544916313
  store i32 %63, i32* %12
  br label %71

; <label>:64:                                     ; preds = %13
  unreachable

; <label>:65:                                     ; preds = %13
  %66 = load i64, i64* %7, align 8
  %67 = mul i64 %66, 12
  %68 = call i8* @_Znwm(i64 %67)
  %69 = bitcast i8* %68 to %"struct.Dinic<int>::edge"*
  ret %"struct.Dinic<int>::edge"* %69

; <label>:70:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 842847108, i32* %12
  br label %71

; <label>:71:                                     ; preds = %70, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret i64 1537228672809129301
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.444
  %8 = load i32, i32* @y.445
  %9 = sub i32 %7, -567691669
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -567691669
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -914995609, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %96
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -914995609, label %21
    i32 -1644073927, label %41
    i32 1429753806, label %75
    i32 945749078, label %77
  ]

; <label>:20:                                     ; preds = %18
  br label %96

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1644073927, i32 945749078
  store i32 %40, i32* %17
  br label %96

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %43 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %44 = alloca %"struct.Dinic<int>::edge"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %47 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %48 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %42, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %48, align 8
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %43, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %49, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %46 to i8*
  %51 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %47 to i8*
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %44, align 8
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %46, i32 0, i32 0
  %56 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %55, align 8
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %47, i32 0, i32 0
  %58 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %57, align 8
  %59 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"struct.Dinic<int>::edge"* %56, %"struct.Dinic<int>::edge"* %58, %"struct.Dinic<int>::edge"* %54)
  store %"struct.Dinic<int>::edge"* %59, %"struct.Dinic<int>::edge"** %4
  %60 = load i32, i32* @x.444
  %61 = load i32, i32* @y.445
  %62 = add i32 %60, 998601189
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, 998601189
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 1429753806, i32 945749078
  store i32 %74, i32* %17
  br label %96

; <label>:75:                                     ; preds = %18
  %76 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %76

; <label>:77:                                     ; preds = %18
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %80 = alloca %"struct.Dinic<int>::edge"*, align 8
  %81 = alloca i8, align 1
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %83 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %78, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %84, align 8
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %79, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %85, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %80, align 8
  store i8 1, i8* %81, align 1
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %82 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %83 to i8*
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %88, i8* %89, i64 8, i32 8, i1 false)
  %90 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %80, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %82, i32 0, i32 0
  %92 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %91, align 8
  %93 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %83, i32 0, i32 0
  %94 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %93, align 8
  %95 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"struct.Dinic<int>::edge"* %92, %"struct.Dinic<int>::edge"* %94, %"struct.Dinic<int>::edge"* %90)
  store i32 -1644073927, i32* %17
  br label %96

; <label>:96:                                     ; preds = %77, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEPS6_EET0_T_SF_SE_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.446
  %8 = load i32, i32* @y.447
  %9 = add i32 %7, -1625500412
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1625500412
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1202494989, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %94
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1202494989, label %21
    i32 -1577034766, label %29
    i32 -206979720, label %74
    i32 398387792, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %94

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1577034766, i32 398387792
  store i32 %28, i32* %17
  br label %94

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %31 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %32 = alloca %"struct.Dinic<int>::edge"*, align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %35 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %30, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %35, align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %31, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %36, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %32, align 8
  %37 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %33 to i8*
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %34 to i8*
  %40 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %32, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %33, i32 0, i32 0
  %43 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %44 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %34, i32 0, i32 0
  %45 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %44, align 8
  %46 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Dinic<int>::edge"* %43, %"struct.Dinic<int>::edge"* %45, %"struct.Dinic<int>::edge"* %41)
  store %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"** %4
  %47 = load i32, i32* @x.446
  %48 = load i32, i32* @y.447
  %49 = sub i32 %47, -804634016
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -804634016
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -206979720, i32 398387792
  store i32 %73, i32* %17
  br label %94

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %79 = alloca %"struct.Dinic<int>::edge"*, align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %77, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %82, align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %78, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %83, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %79, align 8
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %80 to i8*
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %84, i8* %85, i64 8, i32 8, i1 false)
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %81 to i8*
  %87 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %86, i8* %87, i64 8, i32 8, i1 false)
  %88 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %79, align 8
  %89 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %80, i32 0, i32 0
  %90 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %89, align 8
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %81, i32 0, i32 0
  %92 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %91, align 8
  %93 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Dinic<int>::edge"* %90, %"struct.Dinic<int>::edge"* %92, %"struct.Dinic<int>::edge"* %88)
  store i32 -1577034766, i32* %17
  br label %94

; <label>:94:                                     ; preds = %76, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET0_T_SD_SC_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.448
  %8 = load i32, i32* @y.449
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1253132066, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %101
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1253132066, label %20
    i32 -1984545100, label %28
    i32 2074752933, label %71
    i32 199384968, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %101

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1984545100, i32 199384968
  store i32 %27, i32* %16
  br label %101

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %30 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %31 = alloca %"struct.Dinic<int>::edge"*, align 8
  %32 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %33 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %34 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %35 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %36 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %29, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %36, align 8
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %30, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %37, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %31, align 8
  %38 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %33 to i8*
  %39 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %38, i8* %39, i64 8, i32 8, i1 false)
  %40 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %33, i32 0, i32 0
  %41 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %40, align 8
  %42 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %41)
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %32, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %42, %"struct.Dinic<int>::edge"** %43, align 8
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %35 to i8*
  %45 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %44, i8* %45, i64 8, i32 8, i1 false)
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %35, i32 0, i32 0
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %46, align 8
  %48 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %47)
  %49 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %34, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"** %49, align 8
  %50 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %31, align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %32, i32 0, i32 0
  %52 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %51, align 8
  %53 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %34, i32 0, i32 0
  %54 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %53, align 8
  %55 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET1_T0_SD_SC_(%"struct.Dinic<int>::edge"* %52, %"struct.Dinic<int>::edge"* %54, %"struct.Dinic<int>::edge"* %50)
  store %"struct.Dinic<int>::edge"* %55, %"struct.Dinic<int>::edge"** %4
  %56 = load i32, i32* @x.448
  %57 = load i32, i32* @y.449
  %58 = add i32 %56, 478038326
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, 478038326
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 2074752933, i32 199384968
  store i32 %70, i32* %16
  br label %101

; <label>:71:                                     ; preds = %17
  %72 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %76 = alloca %"struct.Dinic<int>::edge"*, align 8
  %77 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %80 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %81 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %74, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %81, align 8
  %82 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %75, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %82, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %76, align 8
  %83 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %78 to i8*
  %84 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %74 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %83, i8* %84, i64 8, i32 8, i1 false)
  %85 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %78, i32 0, i32 0
  %86 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %85, align 8
  %87 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %86)
  %88 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %77, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %87, %"struct.Dinic<int>::edge"** %88, align 8
  %89 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %80 to i8*
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %89, i8* %90, i64 8, i32 8, i1 false)
  %91 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %80, i32 0, i32 0
  %92 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %91, align 8
  %93 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %92)
  %94 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %79, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %93, %"struct.Dinic<int>::edge"** %94, align 8
  %95 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %76, align 8
  %96 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %77, i32 0, i32 0
  %97 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %96, align 8
  %98 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %79, i32 0, i32 0
  %99 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %98, align 8
  %100 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET1_T0_SD_SC_(%"struct.Dinic<int>::edge"* %97, %"struct.Dinic<int>::edge"* %99, %"struct.Dinic<int>::edge"* %95)
  store i32 -1984545100, i32* %16
  br label %101

; <label>:101:                                    ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_ET1_T0_SD_SC_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.450
  %8 = load i32, i32* @y.451
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -502894738, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %98
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -502894738, label %20
    i32 110827844, label %40
    i32 628200290, label %75
    i32 -242924457, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %98

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 110827844, i32 -242924457
  store i32 %39, i32* %16
  br label %98

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %42 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %45 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %41, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %46, align 8
  %47 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %42, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %47, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %44 to i8*
  %49 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %48, i8* %49, i64 8, i32 8, i1 false)
  %50 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %44, i32 0, i32 0
  %51 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %50, align 8
  %52 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %51)
  %53 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %45 to i8*
  %54 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %53, i8* %54, i64 8, i32 8, i1 false)
  %55 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %45, i32 0, i32 0
  %56 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %55, align 8
  %57 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %56)
  %58 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %59 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %58)
  %60 = call %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPKN5DinicIiE4edgeEPS2_ET1_T0_S7_S6_(%"struct.Dinic<int>::edge"* %52, %"struct.Dinic<int>::edge"* %57, %"struct.Dinic<int>::edge"* %59)
  store %"struct.Dinic<int>::edge"* %60, %"struct.Dinic<int>::edge"** %4
  %61 = load i32, i32* @x.450
  %62 = load i32, i32* @y.451
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  %74 = select i1 %72, i32 628200290, i32 -242924457
  store i32 %74, i32* %16
  br label %98

; <label>:75:                                     ; preds = %17
  %76 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %79 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %80 = alloca %"struct.Dinic<int>::edge"*, align 8
  %81 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %82 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %83 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %78, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %83, align 8
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %79, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %84, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %80, align 8
  %85 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %81 to i8*
  %86 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %81, i32 0, i32 0
  %88 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %87, align 8
  %89 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %88)
  %90 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %82 to i8*
  %91 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %79 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %90, i8* %91, i64 8, i32 8, i1 false)
  %92 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %82, i32 0, i32 0
  %93 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %92, align 8
  %94 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %93)
  %95 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %80, align 8
  %96 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %95)
  %97 = call %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPKN5DinicIiE4edgeEPS2_ET1_T0_S7_S6_(%"struct.Dinic<int>::edge"* %89, %"struct.Dinic<int>::edge"* %94, %"struct.Dinic<int>::edge"* %96)
  store i32 110827844, i32* %16
  br label %98

; <label>:98:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %5, align 8
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %4 to i8*
  %7 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %6, i8* %7, i64 8, i32 8, i1 false)
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %4, i32 0, i32 0
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %10 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_(%"struct.Dinic<int>::edge"* %9)
  %11 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %10, %"struct.Dinic<int>::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %2, i32 0, i32 0
  %13 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %12, align 8
  ret %"struct.Dinic<int>::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPKN5DinicIiE4edgeEPS2_ET1_T0_S7_S6_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.454
  %8 = load i32, i32* @y.455
  %9 = sub i32 %7, -986907889
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -986907889
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 345274091, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %75
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 345274091, label %21
    i32 1122807147, label %41
    i32 -1906558758, label %64
    i32 1694686619, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %75

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1122807147, i32 1694686619
  store i32 %40, i32* %17
  br label %75

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca %"struct.Dinic<int>::edge"*, align 8
  %45 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %43, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %44, align 8
  %49 = call %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* %47, %"struct.Dinic<int>::edge"* %48)
  store %"struct.Dinic<int>::edge"* %49, %"struct.Dinic<int>::edge"** %4
  %50 = load i32, i32* @x.454
  %51 = load i32, i32* @y.455
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -1906558758, i32 1694686619
  store i32 %63, i32* %17
  br label %75

; <label>:64:                                     ; preds = %18
  %65 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"struct.Dinic<int>::edge"*, align 8
  %68 = alloca %"struct.Dinic<int>::edge"*, align 8
  %69 = alloca %"struct.Dinic<int>::edge"*, align 8
  %70 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %67, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %68, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %67, align 8
  %72 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %68, align 8
  %73 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %69, align 8
  %74 = call %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"* %71, %"struct.Dinic<int>::edge"* %72, %"struct.Dinic<int>::edge"* %73)
  store i32 1122807147, i32* %17
  br label %75

; <label>:75:                                     ; preds = %66, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.456
  %6 = load i32, i32* @y.457
  %7 = add i32 %5, -1007953725
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1007953725
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -113244051, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -113244051, label %19
    i32 494524447, label %27
    i32 -1362963497, label %51
    i32 1275595845, label %53
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 494524447, i32 1275595845
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %29 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %28, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %30, align 8
  %31 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %29 to i8*
  %32 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %31, i8* %32, i64 8, i32 8, i1 false)
  %33 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %29, i32 0, i32 0
  %34 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %35 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_(%"struct.Dinic<int>::edge"* %34)
  store %"struct.Dinic<int>::edge"* %35, %"struct.Dinic<int>::edge"** %2
  %36 = load i32, i32* @x.456
  %37 = load i32, i32* @y.457
  %38 = sub i32 %36, 1958138434
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 1958138434
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1362963497, i32 1275595845
  store i32 %50, i32* %15
  br label %62

; <label>:51:                                     ; preds = %16
  %52 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %52

; <label>:53:                                     ; preds = %16
  %54 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %55 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %56 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %54, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %56, align 8
  %57 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %55 to i8*
  %58 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %57, i8* %58, i64 8, i32 8, i1 false)
  %59 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %55, i32 0, i32 0
  %60 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %59, align 8
  %61 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_(%"struct.Dinic<int>::edge"* %60)
  store i32 494524447, i32* %15
  br label %62

; <label>:62:                                     ; preds = %53, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %2, align 8
  %3 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2, align 8
  %4 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIPN5DinicIiE4edgeELb0EE7_S_baseES3_(%"struct.Dinic<int>::edge"* %3)
  ret %"struct.Dinic<int>::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca i64, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %6, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %7, align 8
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %10 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %11 = ptrtoint %"struct.Dinic<int>::edge"* %9 to i64
  %12 = ptrtoint %"struct.Dinic<int>::edge"* %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 12
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 1029102241, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %37
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1029102241, label %22
    i32 1619980137, label %26
    i32 1637872272, label %33
  ]

; <label>:21:                                     ; preds = %19
  br label %37

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 1619980137, i32 1637872272
  store i32 %25, i32* %18
  br label %37

; <label>:26:                                     ; preds = %19
  %27 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %28 = bitcast %"struct.Dinic<int>::edge"* %27 to i8*
  %29 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %30 = bitcast %"struct.Dinic<int>::edge"* %29 to i8*
  %31 = load i64, i64* %8, align 8
  %32 = mul i64 12, %31
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %28, i8* %30, i64 %32, i32 4, i1 false)
  store i32 1637872272, i32* %18
  br label %37

; <label>:33:                                     ; preds = %19
  %34 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %35 = load i64, i64* %8, align 8
  %36 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %34, i64 %35
  ret %"struct.Dinic<int>::edge"* %36

; <label>:37:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseESA_(%"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.462
  %6 = load i32, i32* @y.463
  %7 = sub i32 %5, -350011990
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -350011990
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1170688909, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1170688909, label %19
    i32 -1729072798, label %27
    i32 1722322139, label %47
    i32 -1703175663, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1729072798, i32 -1703175663
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %28, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %29, align 8
  %30 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %28) #3
  %31 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %30, align 8
  store %"struct.Dinic<int>::edge"* %31, %"struct.Dinic<int>::edge"** %2
  %32 = load i32, i32* @x.462
  %33 = load i32, i32* @y.463
  %34 = add i32 %32, 1637262765
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1637262765
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1722322139, i32 -1703175663
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %50, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %51, align 8
  %52 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"* %50) #3
  %53 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %52, align 8
  store i32 -1729072798, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.25"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %3, i32 0, i32 0
  ret %"struct.Dinic<int>::edge"** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIPN5DinicIiE4edgeELb0EE7_S_baseES3_(%"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %2, align 8
  %3 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2, align 8
  ret %"struct.Dinic<int>::edge"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb0EE7_S_baseESA_(%"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.468
  %6 = load i32, i32* @y.469
  %7 = add i32 %5, 1053332901
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1053332901
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1533981973, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %72
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1533981973, label %19
    i32 -314669360, label %39
    i32 -576380519, label %62
    i32 452578733, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %72

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -314669360, i32 452578733
  store i32 %38, i32* %15
  br label %72

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %41 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %41, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %42, align 8
  %43 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %40 to i8*
  %44 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %43, i8* %44, i64 8, i32 8, i1 false)
  %45 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %40, i32 0, i32 0
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %45, align 8
  store %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"** %2
  %47 = load i32, i32* @x.468
  %48 = load i32, i32* @y.469
  %49 = add i32 %47, -943275931
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -943275931
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = and i1 %55, %56
  %58 = xor i1 %55, %56
  %59 = or i1 %57, %58
  %60 = or i1 %55, %56
  %61 = select i1 %59, i32 -576380519, i32 452578733
  store i32 %61, i32* %15
  br label %72

; <label>:62:                                     ; preds = %16
  %63 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %63

; <label>:64:                                     ; preds = %16
  %65 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %66 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %67 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %66, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %67, align 8
  %68 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %65 to i8*
  %69 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %68, i8* %69, i64 8, i32 8, i1 false)
  %70 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %65, i32 0, i32 0
  %71 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %70, align 8
  store i32 -314669360, i32* %15
  br label %72

; <label>:72:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS5_(%"class.__gnu_cxx::__normal_iterator.25"*, %"struct.Dinic<int>::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.25"*, align 8
  %4 = alloca %"struct.Dinic<int>::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.25"* %0, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  store %"struct.Dinic<int>::edge"** %1, %"struct.Dinic<int>::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.25"*, %"class.__gnu_cxx::__normal_iterator.25"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  %7 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %4, align 8
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  store %"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::allocator.15"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.18"*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.472
  %9 = load i32, i32* @y.473
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 599473329, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %95
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 599473329, label %21
    i32 -2146783870, label %41
    i32 -1154795220, label %74
    i32 -136617505, label %76
  ]

; <label>:20:                                     ; preds = %18
  br label %95

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %7
  %23 = load volatile i1, i1* %6
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -2146783870, i32 -136617505
  store i32 %40, i32* %17
  br label %95

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator.26", align 8
  %43 = alloca %"class.std::move_iterator.26", align 8
  %44 = alloca %"class.std::vector.18"*, align 8
  %45 = alloca %"class.std::allocator.15"*, align 8
  %46 = alloca %"class.std::move_iterator.26", align 8
  %47 = alloca %"class.std::move_iterator.26", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %42, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %43, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %49, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %44, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %45, align 8
  %50 = bitcast %"class.std::move_iterator.26"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator.26"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator.26"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator.26"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::vector.18"*, %"class.std::vector.18"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %46, i32 0, i32 0
  %56 = load %"class.std::vector.18"*, %"class.std::vector.18"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %47, i32 0, i32 0
  %58 = load %"class.std::vector.18"*, %"class.std::vector.18"** %57, align 8
  %59 = call %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.18"* %56, %"class.std::vector.18"* %58, %"class.std::vector.18"* %54)
  store %"class.std::vector.18"* %59, %"class.std::vector.18"** %5
  %60 = load i32, i32* @x.472
  %61 = load i32, i32* @y.473
  %62 = sub i32 0, 1
  %63 = add i32 %60, %62
  %64 = sub i32 %60, 1
  %65 = mul i32 %60, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %61, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  %73 = select i1 %71, i32 -1154795220, i32 -136617505
  store i32 %73, i32* %17
  br label %95

; <label>:74:                                     ; preds = %18
  %75 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %5
  ret %"class.std::vector.18"* %75

; <label>:76:                                     ; preds = %18
  %77 = alloca %"class.std::move_iterator.26", align 8
  %78 = alloca %"class.std::move_iterator.26", align 8
  %79 = alloca %"class.std::vector.18"*, align 8
  %80 = alloca %"class.std::allocator.15"*, align 8
  %81 = alloca %"class.std::move_iterator.26", align 8
  %82 = alloca %"class.std::move_iterator.26", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %77, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %78, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %84, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %79, align 8
  store %"class.std::allocator.15"* %3, %"class.std::allocator.15"** %80, align 8
  %85 = bitcast %"class.std::move_iterator.26"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.26"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.26"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.26"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load %"class.std::vector.18"*, %"class.std::vector.18"** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %81, i32 0, i32 0
  %91 = load %"class.std::vector.18"*, %"class.std::vector.18"** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %82, i32 0, i32 0
  %93 = load %"class.std::vector.18"*, %"class.std::vector.18"** %92, align 8
  %94 = call %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.18"* %91, %"class.std::vector.18"* %93, %"class.std::vector.18"* %89)
  store i32 -2146783870, i32* %17
  br label %95

; <label>:95:                                     ; preds = %76, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt18make_move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEESt13move_iteratorIT_ES8_(%"class.std::vector.18"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.26", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator.26"* %2, %"class.std::vector.18"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  ret %"class.std::vector.18"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.26", align 8
  %5 = alloca %"class.std::move_iterator.26", align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca i8, align 1
  %8 = alloca %"class.std::move_iterator.26", align 8
  %9 = alloca %"class.std::move_iterator.26", align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %4, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %11, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  store i8 1, i8* %7, align 1
  %12 = bitcast %"class.std::move_iterator.26"* %8 to i8*
  %13 = bitcast %"class.std::move_iterator.26"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %12, i8* %13, i64 8, i32 8, i1 false)
  %14 = bitcast %"class.std::move_iterator.26"* %9 to i8*
  %15 = bitcast %"class.std::move_iterator.26"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %14, i8* %15, i64 8, i32 8, i1 false)
  %16 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %17 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %8, i32 0, i32 0
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %17, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.18"*, %"class.std::vector.18"** %19, align 8
  %21 = call %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.18"* %18, %"class.std::vector.18"* %20, %"class.std::vector.18"* %16)
  ret %"class.std::vector.18"* %21
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.478
  %5 = load i32, i32* @y.479
  %6 = add i32 %4, 1717342899
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1717342899
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 false, true
  %17 = and i1 %14, false
  %18 = and i1 %12, %16
  %19 = and i1 %15, false
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 false, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %311

; <label>:30:                                     ; preds = %3, %311
  %31 = alloca %"class.std::move_iterator.26", align 8
  %32 = alloca %"class.std::move_iterator.26", align 8
  %33 = alloca %"class.std::vector.18"*, align 8
  %34 = alloca %"class.std::vector.18"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  %37 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %31, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %37, align 8
  %38 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %32, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %38, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %33, align 8
  %39 = load %"class.std::vector.18"*, %"class.std::vector.18"** %33, align 8
  store %"class.std::vector.18"* %39, %"class.std::vector.18"** %34, align 8
  %40 = load i32, i32* @x.478
  %41 = load i32, i32* @y.479
  %42 = add i32 %40, -583071117
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, -583071117
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 false, true
  %53 = and i1 %50, false
  %54 = and i1 %48, %52
  %55 = and i1 %51, false
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 false, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %311

; <label>:66:                                     ; preds = %30
  br label %67

; <label>:67:                                     ; preds = %130, %66
  %68 = invoke zeroext i1 @_ZStneIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.26"* dereferenceable(8) %31, %"class.std::move_iterator.26"* dereferenceable(8) %32)
          to label %69 unwind label %133

; <label>:69:                                     ; preds = %67
  br i1 %68, label %70, label %184

; <label>:70:                                     ; preds = %69
  %71 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %72 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIN5DinicIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.18"* dereferenceable(24) %71) #3
  %73 = invoke dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator.26"* %31)
          to label %74 unwind label %133

; <label>:74:                                     ; preds = %70
  invoke void @_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.18"* %72, %"class.std::vector.18"* dereferenceable(24) %73)
          to label %75 unwind label %133

; <label>:75:                                     ; preds = %74
  %76 = load i32, i32* @x.478
  %77 = load i32, i32* @y.479
  %78 = sub i32 0, 1
  %79 = add i32 %76, %78
  %80 = sub i32 %76, 1
  %81 = mul i32 %76, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %77, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 false, true
  %88 = and i1 %85, false
  %89 = and i1 %83, %87
  %90 = and i1 %86, false
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 false, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %321

; <label>:101:                                    ; preds = %75, %321
  %102 = load i32, i32* @x.478
  %103 = load i32, i32* @y.479
  %104 = sub i32 0, 1
  %105 = add i32 %102, %104
  %106 = sub i32 %102, 1
  %107 = mul i32 %102, %105
  %108 = urem i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = icmp slt i32 %103, 10
  %111 = xor i1 %109, true
  %112 = xor i1 %110, true
  %113 = xor i1 false, true
  %114 = and i1 %111, false
  %115 = and i1 %109, %113
  %116 = and i1 %112, false
  %117 = and i1 %110, %113
  %118 = or i1 %114, %115
  %119 = or i1 %116, %117
  %120 = xor i1 %118, %119
  %121 = or i1 %111, %112
  %122 = xor i1 %121, true
  %123 = or i1 false, %113
  %124 = and i1 %122, %123
  %125 = or i1 %120, %124
  %126 = or i1 %109, %110
  br i1 %125, label %127, label %321

; <label>:127:                                    ; preds = %101
  br label %128

; <label>:128:                                    ; preds = %127
  %129 = invoke dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEppEv(%"class.std::move_iterator.26"* %31)
          to label %130 unwind label %133

; <label>:130:                                    ; preds = %128
  %131 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %132 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %131, i32 1
  store %"class.std::vector.18"* %132, %"class.std::vector.18"** %34, align 8
  br label %67

; <label>:133:                                    ; preds = %128, %74, %70, %67
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %35, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %36, align 4
  br label %137

; <label>:137:                                    ; preds = %133
  %138 = load i32, i32* @x.478
  %139 = load i32, i32* @y.479
  %140 = sub i32 0, 1
  %141 = add i32 %138, %140
  %142 = sub i32 %138, 1
  %143 = mul i32 %138, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %139, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %322

; <label>:163:                                    ; preds = %137, %322
  %164 = load i8*, i8** %35, align 8
  %165 = call i8* @__cxa_begin_catch(i8* %164) #3
  %166 = load %"class.std::vector.18"*, %"class.std::vector.18"** %33, align 8
  %167 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %168 = load i32, i32* @x.478
  %169 = load i32, i32* @y.479
  %170 = sub i32 %168, 429968219
  %171 = sub i32 %170, 1
  %172 = add i32 %171, 429968219
  %173 = sub i32 %168, 1
  %174 = mul i32 %168, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %169, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %322

; <label>:182:                                    ; preds = %163
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.18"* %166, %"class.std::vector.18"* %167)
          to label %183 unwind label %215

; <label>:183:                                    ; preds = %182
  invoke void @__cxa_rethrow() #12
          to label %310 unwind label %215

; <label>:184:                                    ; preds = %69
  %185 = load i32, i32* @x.478
  %186 = load i32, i32* @y.479
  %187 = sub i32 %185, -1943974137
  %188 = sub i32 %187, 1
  %189 = add i32 %188, -1943974137
  %190 = sub i32 %185, 1
  %191 = mul i32 %185, %189
  %192 = urem i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = icmp slt i32 %186, 10
  %195 = and i1 %193, %194
  %196 = xor i1 %193, %194
  %197 = or i1 %195, %196
  %198 = or i1 %193, %194
  br i1 %197, label %199, label %327

; <label>:199:                                    ; preds = %184, %327
  %200 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  %201 = load i32, i32* @x.478
  %202 = load i32, i32* @y.479
  %203 = sub i32 0, 1
  %204 = add i32 %201, %203
  %205 = sub i32 %201, 1
  %206 = mul i32 %201, %204
  %207 = urem i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = icmp slt i32 %202, 10
  %210 = and i1 %208, %209
  %211 = xor i1 %208, %209
  %212 = or i1 %210, %211
  %213 = or i1 %208, %209
  br i1 %212, label %214, label %327

; <label>:214:                                    ; preds = %199
  ret %"class.std::vector.18"* %200

; <label>:215:                                    ; preds = %183, %182
  %216 = landingpad { i8*, i32 }
          cleanup
  %217 = extractvalue { i8*, i32 } %216, 0
  store i8* %217, i8** %35, align 8
  %218 = extractvalue { i8*, i32 } %216, 1
  store i32 %218, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %219 unwind label %307

; <label>:219:                                    ; preds = %215
  %220 = load i32, i32* @x.478
  %221 = load i32, i32* @y.479
  %222 = sub i32 %220, -1878168123
  %223 = sub i32 %222, 1
  %224 = add i32 %223, -1878168123
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 false, true
  %233 = and i1 %230, false
  %234 = and i1 %228, %232
  %235 = and i1 %231, false
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 false, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %329

; <label>:246:                                    ; preds = %219, %329
  %247 = load i32, i32* @x.478
  %248 = load i32, i32* @y.479
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %329

; <label>:260:                                    ; preds = %246
  br label %262
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:262:                                    ; preds = %260
  %263 = load i32, i32* @x.478
  %264 = load i32, i32* @y.479
  %265 = sub i32 0, 1
  %266 = add i32 %263, %265
  %267 = sub i32 %263, 1
  %268 = mul i32 %263, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %264, 10
  %272 = and i1 %270, %271
  %273 = xor i1 %270, %271
  %274 = or i1 %272, %273
  %275 = or i1 %270, %271
  br i1 %274, label %276, label %330

; <label>:276:                                    ; preds = %262, %330
  %277 = load i8*, i8** %35, align 8
  %278 = load i32, i32* %36, align 4
  %279 = insertvalue { i8*, i32 } undef, i8* %277, 0
  %280 = insertvalue { i8*, i32 } %279, i32 %278, 1
  %281 = load i32, i32* @x.478
  %282 = load i32, i32* @y.479
  %283 = sub i32 0, 1
  %284 = add i32 %281, %283
  %285 = sub i32 %281, 1
  %286 = mul i32 %281, %284
  %287 = urem i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = icmp slt i32 %282, 10
  %290 = xor i1 %288, true
  %291 = xor i1 %289, true
  %292 = xor i1 false, true
  %293 = and i1 %290, false
  %294 = and i1 %288, %292
  %295 = and i1 %291, false
  %296 = and i1 %289, %292
  %297 = or i1 %293, %294
  %298 = or i1 %295, %296
  %299 = xor i1 %297, %298
  %300 = or i1 %290, %291
  %301 = xor i1 %300, true
  %302 = or i1 false, %292
  %303 = and i1 %301, %302
  %304 = or i1 %299, %303
  %305 = or i1 %288, %289
  br i1 %304, label %306, label %330

; <label>:306:                                    ; preds = %276
  resume { i8*, i32 } %280

; <label>:307:                                    ; preds = %215
  %308 = landingpad { i8*, i32 }
          catch i8* null
  %309 = extractvalue { i8*, i32 } %308, 0
  call void @__clang_call_terminate(i8* %309) #10
  unreachable

; <label>:310:                                    ; preds = %183
  unreachable

; <label>:311:                                    ; preds = %30, %3
  %312 = alloca %"class.std::move_iterator.26", align 8
  %313 = alloca %"class.std::move_iterator.26", align 8
  %314 = alloca %"class.std::vector.18"*, align 8
  %315 = alloca %"class.std::vector.18"*, align 8
  %316 = alloca i8*
  %317 = alloca i32
  %318 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %312, i32 0, i32 0
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %318, align 8
  %319 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %313, i32 0, i32 0
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %319, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %314, align 8
  %320 = load %"class.std::vector.18"*, %"class.std::vector.18"** %314, align 8
  store %"class.std::vector.18"* %320, %"class.std::vector.18"** %315, align 8
  br label %30

; <label>:321:                                    ; preds = %101, %75
  br label %101

; <label>:322:                                    ; preds = %163, %137
  %323 = load i8*, i8** %35, align 8
  %324 = call i8* @__cxa_begin_catch(i8* %323) #3
  %325 = load %"class.std::vector.18"*, %"class.std::vector.18"** %33, align 8
  %326 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  br label %163

; <label>:327:                                    ; preds = %199, %184
  %328 = load %"class.std::vector.18"*, %"class.std::vector.18"** %34, align 8
  br label %199

; <label>:329:                                    ; preds = %246, %219
  br label %246

; <label>:330:                                    ; preds = %276, %262
  %331 = load i8*, i8** %35, align 8
  %332 = load i32, i32* %36, align 4
  %333 = insertvalue { i8*, i32 } undef, i8* %331, 0
  %334 = insertvalue { i8*, i32 } %333, i32 %332, 1
  br label %276
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.26"* dereferenceable(8) %5, %"class.std::move_iterator.26"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 false, %8
  %10 = xor i1 false, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, false
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.18"*
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.18"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.18"* %7, %"class.std::vector.18"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.26"* @_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEppEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %6 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %5, i32 1
  store %"class.std::vector.18"* %6, %"class.std::vector.18"** %4, align 8
  ret %"class.std::move_iterator.26"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator.26"* dereferenceable(8), %"class.std::move_iterator.26"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::move_iterator.26"* %1, %"class.std::move_iterator.26"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator.26"* %5)
  %7 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator.26"* %7)
  %9 = icmp eq %"class.std::vector.18"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNKSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator.26"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.26"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %2, align 8
  %3 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %3, i32 0, i32 0
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  ret %"class.std::vector.18"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardISt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.18"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.18"* %8 to %"struct.std::_Vector_base.19"*
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.19"* %6, %"struct.std::_Vector_base.19"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.20"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.20"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.500
  %6 = load i32, i32* @y.501
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1949085078, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1949085078, label %18
    i32 887453410, label %38
    i32 83751545, label %68
    i32 26311577, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 887453410, i32 26311577
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %39, align 8
  %40 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %39, align 8
  store %"class.std::allocator.20"* %40, %"class.std::allocator.20"** %2
  %41 = load i32, i32* @x.500
  %42 = load i32, i32* @y.501
  %43 = add i32 %41, -2089874605
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -2089874605
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 83751545, i32 26311577
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"class.std::allocator.20"*, %"class.std::allocator.20"** %2
  ret %"class.std::allocator.20"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %71, align 8
  %72 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %71, align 8
  store i32 887453410, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5 to %"class.std::allocator.20"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"* %6, %"class.std::allocator.20"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %11, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN5DinicIiE4edgeEEvRT_S5_(%"struct.Dinic<int>::edge"** dereferenceable(8) %6, %"struct.Dinic<int>::edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN5DinicIiE4edgeEEvRT_S5_(%"struct.Dinic<int>::edge"** dereferenceable(8) %9, %"struct.Dinic<int>::edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN5DinicIiE4edgeEEvRT_S5_(%"struct.Dinic<int>::edge"** dereferenceable(8) %12, %"struct.Dinic<int>::edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN5DinicIiE4edgeEEvRT_S5_(%"struct.Dinic<int>::edge"** dereferenceable(8), %"struct.Dinic<int>::edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.Dinic<int>::edge"**, align 8
  %4 = alloca %"struct.Dinic<int>::edge"**, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"** %0, %"struct.Dinic<int>::edge"*** %3, align 8
  store %"struct.Dinic<int>::edge"** %1, %"struct.Dinic<int>::edge"*** %4, align 8
  %6 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZSt4moveIRPN5DinicIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Dinic<int>::edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  store %"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"** %5, align 8
  %9 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZSt4moveIRPN5DinicIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Dinic<int>::edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %10, align 8
  %12 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %3, align 8
  store %"struct.Dinic<int>::edge"* %11, %"struct.Dinic<int>::edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZSt4moveIRPN5DinicIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Dinic<int>::edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %13, align 8
  %15 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %4, align 8
  store %"struct.Dinic<int>::edge"* %14, %"struct.Dinic<int>::edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZSt4moveIRPN5DinicIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.Dinic<int>::edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.Dinic<int>::edge"**, align 8
  store %"struct.Dinic<int>::edge"** %0, %"struct.Dinic<int>::edge"*** %2, align 8
  %3 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %2, align 8
  ret %"struct.Dinic<int>::edge"** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator.26"*, %"class.std::vector.18"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.26"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::move_iterator.26"* %0, %"class.std::move_iterator.26"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::move_iterator.26"*, %"class.std::move_iterator.26"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %7, %"class.std::vector.18"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt23__copy_move_backward_a2ILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %7 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %8 = call %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %7)
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = call %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %9)
  %11 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %12 = call %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"* %11)
  %13 = call %"class.std::vector.18"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.18"* %8, %"class.std::vector.18"* %10, %"class.std::vector.18"* %12)
  ret %"class.std::vector.18"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt12__miter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Miter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"*) #5 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = call %"class.std::vector.18"* @_ZNSt10_Iter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.18"* %3)
  ret %"class.std::vector.18"* %4
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt22__copy_move_backward_aILb1EPSt6vectorIN5DinicIiE4edgeESaIS3_EES6_ET1_T0_S8_S7_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #0 comdat {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca i8, align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  store i8 0, i8* %7, align 1
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %11 = call %"class.std::vector.18"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5DinicIiE4edgeESaIS6_EES9_EET0_T_SB_SA_(%"class.std::vector.18"* %8, %"class.std::vector.18"* %9, %"class.std::vector.18"* %10)
  ret %"class.std::vector.18"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt12__niter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EEENSt11_Niter_baseIT_E13iterator_typeES8_(%"class.std::vector.18"*) #0 comdat {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = call %"class.std::vector.18"* @_ZNSt10_Iter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.18"* %3)
  ret %"class.std::vector.18"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt20__copy_move_backwardILb1ELb0ESt26random_access_iterator_tagE13__copy_move_bIPSt6vectorIN5DinicIiE4edgeESaIS6_EES9_EET0_T_SB_SA_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"*) #5 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %7, align 8
  %9 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %11 = ptrtoint %"class.std::vector.18"* %9 to i64
  %12 = ptrtoint %"class.std::vector.18"* %10 to i64
  %13 = add i64 %11, 8549030804103283384
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 8549030804103283384
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 24
  store i64 %17, i64* %8, align 8
  %18 = alloca i32
  store i32 -988778895, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %101
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -988778895, label %22
    i32 1554229410, label %26
    i32 1301014542, label %33
    i32 -1337623327, label %40
    i32 -79052097, label %68
    i32 1798469171, label %97
    i32 498036452, label %99
  ]

; <label>:21:                                     ; preds = %19
  br label %101

; <label>:22:                                     ; preds = %19
  %23 = load i64, i64* %8, align 8
  %24 = icmp sgt i64 %23, 0
  %25 = select i1 %24, i32 1554229410, i32 -1337623327
  store i32 %25, i32* %18
  br label %101

; <label>:26:                                     ; preds = %19
  %27 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %28 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %27, i32 -1
  store %"class.std::vector.18"* %28, %"class.std::vector.18"** %6, align 8
  %29 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.18"* dereferenceable(24) %28) #3
  %30 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %31 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %30, i32 -1
  store %"class.std::vector.18"* %31, %"class.std::vector.18"** %7, align 8
  %32 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSEOS4_(%"class.std::vector.18"* %31, %"class.std::vector.18"* dereferenceable(24) %29) #3
  store i32 1301014542, i32* %18
  br label %101

; <label>:33:                                     ; preds = %19
  %34 = load i64, i64* %8, align 8
  %35 = sub i64 0, %34
  %36 = sub i64 0, -1
  %37 = add i64 %35, %36
  %38 = sub i64 0, %37
  %39 = add nsw i64 %34, -1
  store i64 %38, i64* %8, align 8
  store i32 -988778895, i32* %18
  br label %101

; <label>:40:                                     ; preds = %19
  %41 = load i32, i32* @x.520
  %42 = load i32, i32* @y.521
  %43 = sub i32 %41, -588908990
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -588908990
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 true, true
  %54 = and i1 %51, true
  %55 = and i1 %49, %53
  %56 = and i1 %52, true
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 true, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -79052097, i32 498036452
  store i32 %67, i32* %18
  br label %101

; <label>:68:                                     ; preds = %19
  %69 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %69, %"class.std::vector.18"** %4
  %70 = load i32, i32* @x.520
  %71 = load i32, i32* @y.521
  %72 = add i32 %70, 1399131474
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1399131474
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  %96 = select i1 %94, i32 1798469171, i32 498036452
  store i32 %96, i32* %18
  br label %101

; <label>:97:                                     ; preds = %19
  %98 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %98

; <label>:99:                                     ; preds = %19
  %100 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store i32 -79052097, i32* %18
  br label %101

; <label>:101:                                    ; preds = %99, %68, %40, %33, %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSEOS4_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.522
  %7 = load i32, i32* @y.523
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 631696141, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %73
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 631696141, label %19
    i32 1031654443, label %39
    i32 1751137737, label %63
    i32 -962537877, label %65
  ]

; <label>:18:                                     ; preds = %16
  br label %73

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1031654443, i32 -962537877
  store i32 %38, i32* %15
  br label %73

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.18"*, align 8
  %41 = alloca %"class.std::vector.18"*, align 8
  %42 = alloca i8, align 1
  %43 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %40, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %41, align 8
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %40, align 8
  store %"class.std::vector.18"* %44, %"class.std::vector.18"** %3
  store i8 1, i8* %42, align 1
  %45 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  %46 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.18"* dereferenceable(24) %45) #3
  %47 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE(%"class.std::vector.18"* %47, %"class.std::vector.18"* dereferenceable(24) %46) #3
  %48 = load i32, i32* @x.522
  %49 = load i32, i32* @y.523
  %50 = sub i32 %48, 478983508
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 478983508
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 1751137737, i32 -962537877
  store i32 %62, i32* %15
  br label %73

; <label>:63:                                     ; preds = %16
  %64 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  ret %"class.std::vector.18"* %64

; <label>:65:                                     ; preds = %16
  %66 = alloca %"class.std::vector.18"*, align 8
  %67 = alloca %"class.std::vector.18"*, align 8
  %68 = alloca i8, align 1
  %69 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %66, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %67, align 8
  %70 = load %"class.std::vector.18"*, %"class.std::vector.18"** %66, align 8
  store i8 1, i8* %68, align 1
  %71 = load %"class.std::vector.18"*, %"class.std::vector.18"** %67, align 8
  %72 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt4moveIRSt6vectorIN5DinicIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.18"* dereferenceable(24) %71) #3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE(%"class.std::vector.18"* %70, %"class.std::vector.18"* dereferenceable(24) %72) #3
  store i32 1031654443, i32* %15
  br label %73

; <label>:73:                                     ; preds = %65, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE14_M_move_assignEOS4_St17integral_constantIbLb1EE(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18", align 8
  %7 = alloca %"class.std::allocator.20", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %5, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %11 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  call void @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13get_allocatorEv(%"class.std::allocator.20"* sret %7, %"struct.std::_Vector_base.19"* %11) #3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS3_(%"class.std::vector.18"* %6, %"class.std::allocator.20"* dereferenceable(1) %7) #3
  call void @_ZNSaIN5DinicIiE4edgeEED2Ev(%"class.std::allocator.20"* %7) #3
  %12 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %13 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %12, i32 0, i32 0
  %14 = bitcast %"class.std::vector.18"* %6 to %"struct.std::_Vector_base.19"*
  %15 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %14, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %13, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* dereferenceable(24) %15) #3
  %16 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %16, i32 0, i32 0
  %18 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %19 = bitcast %"class.std::vector.18"* %18 to %"struct.std::_Vector_base.19"*
  %20 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %19, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %17, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* dereferenceable(24) %20) #3
  %21 = bitcast %"class.std::vector.18"* %10 to %"struct.std::_Vector_base.19"*
  %22 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %21) #3
  %23 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  %24 = bitcast %"class.std::vector.18"* %23 to %"struct.std::_Vector_base.19"*
  %25 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %24) #3
  invoke void @_ZSt15__alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_(%"class.std::allocator.20"* dereferenceable(1) %22, %"class.std::allocator.20"* dereferenceable(1) %25)
          to label %26 unwind label %27

; <label>:26:                                     ; preds = %2
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %6) #3
  ret void

; <label>:27:                                     ; preds = %2
  %28 = landingpad { i8*, i32 }
          catch i8* null
  %29 = extractvalue { i8*, i32 } %28, 0
  store i8* %29, i8** %8, align 8
  %30 = extractvalue { i8*, i32 } %28, 1
  store i32 %30, i32* %9, align 4
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EED2Ev(%"class.std::vector.18"* %6) #3
  br label %31

; <label>:31:                                     ; preds = %27
  %32 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %32) #10
  unreachable
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13get_allocatorEv(%"class.std::allocator.20"* noalias sret, %"struct.std::_Vector_base.19"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.526
  %6 = load i32, i32* @y.527
  %7 = add i32 %5, -1055737671
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1055737671
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 799723229, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 799723229, label %19
    i32 1283119249, label %27
    i32 974733517, label %46
    i32 -405644347, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1283119249, i32 -405644347
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %28, align 8
  %29 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %28, align 8
  %30 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %29) #3
  call void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %30) #3
  %31 = load i32, i32* @x.526
  %32 = load i32, i32* @y.527
  %33 = add i32 %31, 1607831155
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1607831155
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 974733517, i32 -405644347
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %1, %"struct.std::_Vector_base.19"** %48, align 8
  %49 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %48, align 8
  %50 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %49) #3
  call void @_ZNSaIN5DinicIiE4edgeEEC2ERKS2_(%"class.std::allocator.20"* %0, %"class.std::allocator.20"* dereferenceable(1) %50) #3
  store i32 1283119249, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS3_(%"class.std::vector.18"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to %"struct.std::_Vector_base.19"*
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.19"* %6, %"class.std::allocator.20"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt15__alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_(%"class.std::allocator.20"* dereferenceable(1), %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.530
  %6 = load i32, i32* @y.531
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1613160911, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %66
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1613160911, label %18
    i32 1117776922, label %26
    i32 394058203, label %59
    i32 -1125565352, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %66

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1117776922, i32 -1125565352
  store i32 %25, i32* %14
  br label %66

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.20"*, align 8
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %27, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %28, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %27, align 8
  %31 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  call void @_ZSt18__do_alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_St17integral_constantIbLb1EE(%"class.std::allocator.20"* dereferenceable(1) %30, %"class.std::allocator.20"* dereferenceable(1) %31)
  %32 = load i32, i32* @x.530
  %33 = load i32, i32* @y.531
  %34 = add i32 %32, 1886457195
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1886457195
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 394058203, i32 -1125565352
  store i32 %58, i32* %14
  br label %66

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::allocator.20"*, align 8
  %62 = alloca %"class.std::allocator.20"*, align 8
  %63 = alloca %"struct.std::integral_constant", align 1
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %61, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %62, align 8
  %64 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %61, align 8
  %65 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %62, align 8
  call void @_ZSt18__do_alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_St17integral_constantIbLb1EE(%"class.std::allocator.20"* dereferenceable(1) %64, %"class.std::allocator.20"* dereferenceable(1) %65)
  store i32 1117776922, i32* %14
  br label %66

; <label>:66:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2ERKS3_(%"struct.std::_Vector_base.19"*, %"class.std::allocator.20"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.19"*, align 8
  %4 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %3, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %4, align 8
  %5 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %4, align 8
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2ERKS3_(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %6, %"class.std::allocator.20"* dereferenceable(1) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt18__do_alloc_on_moveISaIN5DinicIiE4edgeEEEvRT_S5_St17integral_constantIbLb1EE(%"class.std::allocator.20"* dereferenceable(1), %"class.std::allocator.20"* dereferenceable(1)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.534
  %6 = load i32, i32* @y.535
  %7 = sub i32 %5, -471245577
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -471245577
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1309178349, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1309178349, label %19
    i32 -1055915200, label %27
    i32 -448147137, label %61
    i32 -1239363023, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1055915200, i32 -1239363023
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::integral_constant", align 1
  %29 = alloca %"class.std::allocator.20"*, align 8
  %30 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %29, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %30, align 8
  %31 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %30, align 8
  %32 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.20"* dereferenceable(1) %31) #3
  %33 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %29, align 8
  %34 = load i32, i32* @x.534
  %35 = load i32, i32* @y.535
  %36 = sub i32 %34, 2057582558
  %37 = sub i32 %36, 1
  %38 = add i32 %37, 2057582558
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 true, true
  %47 = and i1 %44, true
  %48 = and i1 %42, %46
  %49 = and i1 %45, true
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 true, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -448147137, i32 -1239363023
  store i32 %60, i32* %15
  br label %69

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::integral_constant", align 1
  %64 = alloca %"class.std::allocator.20"*, align 8
  %65 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %64, align 8
  store %"class.std::allocator.20"* %1, %"class.std::allocator.20"** %65, align 8
  %66 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %65, align 8
  %67 = call dereferenceable(1) %"class.std::allocator.20"* @_ZSt4moveIRSaIN5DinicIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.20"* dereferenceable(1) %66) #3
  %68 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %64, align 8
  store i32 -1055915200, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt10_Iter_baseIPSt6vectorIN5DinicIiE4edgeESaIS3_EELb0EE7_S_baseES6_(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  ret %"class.std::vector.18"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8__fill_aIPSt6vectorIN5DinicIiE4edgeESaIS3_EES5_EN9__gnu_cxx11__enable_ifIXntsr11__is_scalarIT0_EE7__valueEvE6__typeET_SC_RKS9_(%"class.std::vector.18"*, %"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.18"**
  %5 = alloca %"class.std::vector.18"**
  %6 = alloca %"class.std::vector.18"**
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.538
  %10 = load i32, i32* @y.539
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 981458124, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %138
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 981458124, label %22
    i32 -2091110583, label %42
    i32 1455927049, label %64
    i32 -1624428670, label %65
    i32 661719678, label %72
    i32 61411027, label %100
    i32 -1007250609, label %121
    i32 2087820417, label %122
    i32 415239215, label %127
    i32 -1337190263, label %128
    i32 1491761309, label %132
  ]

; <label>:21:                                     ; preds = %19
  br label %138

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 -2091110583, i32 -1337190263
  store i32 %41, i32* %18
  br label %138

; <label>:42:                                     ; preds = %19
  %43 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %43, %"class.std::vector.18"*** %6
  %44 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %44, %"class.std::vector.18"*** %5
  %45 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"** %45, %"class.std::vector.18"*** %4
  %46 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %46, align 8
  %47 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %47, align 8
  %48 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %48, align 8
  %49 = load i32, i32* @x.538
  %50 = load i32, i32* @y.539
  %51 = sub i32 %49, -341196927
  %52 = sub i32 %51, 1
  %53 = add i32 %52, -341196927
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1455927049, i32 -1337190263
  store i32 %63, i32* %18
  br label %138

; <label>:64:                                     ; preds = %19
  store i32 -1624428670, i32* %18
  br label %138

; <label>:65:                                     ; preds = %19
  %66 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  %67 = load %"class.std::vector.18"*, %"class.std::vector.18"** %66, align 8
  %68 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %5
  %69 = load %"class.std::vector.18"*, %"class.std::vector.18"** %68, align 8
  %70 = icmp ne %"class.std::vector.18"* %67, %69
  %71 = select i1 %70, i32 661719678, i32 415239215
  store i32 %71, i32* %18
  br label %138

; <label>:72:                                     ; preds = %19
  %73 = load i32, i32* @x.538
  %74 = load i32, i32* @y.539
  %75 = add i32 %73, 1711067622
  %76 = sub i32 %75, 1
  %77 = sub i32 %76, 1711067622
  %78 = sub i32 %73, 1
  %79 = mul i32 %73, %77
  %80 = urem i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = icmp slt i32 %74, 10
  %83 = xor i1 %81, true
  %84 = xor i1 %82, true
  %85 = xor i1 false, true
  %86 = and i1 %83, false
  %87 = and i1 %81, %85
  %88 = and i1 %84, false
  %89 = and i1 %82, %85
  %90 = or i1 %86, %87
  %91 = or i1 %88, %89
  %92 = xor i1 %90, %91
  %93 = or i1 %83, %84
  %94 = xor i1 %93, true
  %95 = or i1 false, %85
  %96 = and i1 %94, %95
  %97 = or i1 %92, %96
  %98 = or i1 %81, %82
  %99 = select i1 %97, i32 61411027, i32 1491761309
  store i32 %99, i32* %18
  br label %138

; <label>:100:                                    ; preds = %19
  %101 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %102 = load %"class.std::vector.18"*, %"class.std::vector.18"** %101, align 8
  %103 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  %104 = load %"class.std::vector.18"*, %"class.std::vector.18"** %103, align 8
  %105 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSERKS4_(%"class.std::vector.18"* %104, %"class.std::vector.18"* dereferenceable(24) %102)
  %106 = load i32, i32* @x.538
  %107 = load i32, i32* @y.539
  %108 = add i32 %106, -711769933
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, -711769933
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = and i1 %114, %115
  %117 = xor i1 %114, %115
  %118 = or i1 %116, %117
  %119 = or i1 %114, %115
  %120 = select i1 %118, i32 -1007250609, i32 1491761309
  store i32 %120, i32* %18
  br label %138

; <label>:121:                                    ; preds = %19
  store i32 2087820417, i32* %18
  br label %138

; <label>:122:                                    ; preds = %19
  %123 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  %124 = load %"class.std::vector.18"*, %"class.std::vector.18"** %123, align 8
  %125 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %124, i32 1
  %126 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  store %"class.std::vector.18"* %125, %"class.std::vector.18"** %126, align 8
  store i32 -1624428670, i32* %18
  br label %138

; <label>:127:                                    ; preds = %19
  ret void

; <label>:128:                                    ; preds = %19
  %129 = alloca %"class.std::vector.18"*, align 8
  %130 = alloca %"class.std::vector.18"*, align 8
  %131 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %129, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %130, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %131, align 8
  store i32 -2091110583, i32* %18
  br label %138

; <label>:132:                                    ; preds = %19
  %133 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %4
  %134 = load %"class.std::vector.18"*, %"class.std::vector.18"** %133, align 8
  %135 = load volatile %"class.std::vector.18"**, %"class.std::vector.18"*** %6
  %136 = load %"class.std::vector.18"*, %"class.std::vector.18"** %135, align 8
  %137 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSERKS4_(%"class.std::vector.18"* %136, %"class.std::vector.18"* dereferenceable(24) %134)
  store i32 61411027, i32* %18
  br label %138

; <label>:138:                                    ; preds = %132, %128, %122, %121, %100, %72, %65, %64, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEaSERKS4_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.18"*
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca %"class.std::vector.18"*, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca %"struct.Dinic<int>::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %14 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %15 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %6, align 8
  %16 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  store %"class.std::vector.18"* %16, %"class.std::vector.18"** %4
  %17 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  store %"class.std::vector.18"* %17, %"class.std::vector.18"** %3
  %18 = alloca i32
  store i32 -948061075, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %362
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -948061075, label %22
    i32 -696964034, label %27
    i32 -19566390, label %35
    i32 -1188445903, label %50
    i32 1579074839, label %132
    i32 1878910568, label %133
    i32 528625685, label %139
    i32 1900927670, label %167
    i32 1678567826, label %209
    i32 -1807355209, label %225
    i32 1807437154, label %253
    i32 341780338, label %254
    i32 -1010079226, label %266
    i32 -1949023175, label %268
    i32 -1975753385, label %361
  ]

; <label>:21:                                     ; preds = %19
  br label %362

; <label>:22:                                     ; preds = %19
  %23 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %24 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %3
  %25 = icmp ne %"class.std::vector.18"* %24, %23
  %26 = select i1 %25, i32 -696964034, i32 -1010079226
  store i32 %26, i32* %18
  br label %362

; <label>:27:                                     ; preds = %19
  %28 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %29 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %28) #3
  store i64 %29, i64* %7, align 8
  %30 = load i64, i64* %7, align 8
  %31 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %32 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8capacityEv(%"class.std::vector.18"* %31) #3
  %33 = icmp ugt i64 %30, %32
  %34 = select i1 %33, i32 -19566390, i32 1878910568
  store i32 %34, i32* %18
  br label %362

; <label>:35:                                     ; preds = %19
  %36 = load i32, i32* @x.540
  %37 = load i32, i32* @y.541
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -1188445903, i32 -1949023175
  store i32 %49, i32* %18
  br label %362

; <label>:50:                                     ; preds = %19
  %51 = load i64, i64* %7, align 8
  %52 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %53 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"* %52) #3
  %54 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %53, %"struct.Dinic<int>::edge"** %54, align 8
  %55 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %56 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"* %55) #3
  %57 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %56, %"struct.Dinic<int>::edge"** %57, align 8
  %58 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %59 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %58, align 8
  %60 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %61 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %60, align 8
  %62 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %63 = call %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.18"* %62, i64 %51, %"struct.Dinic<int>::edge"* %59, %"struct.Dinic<int>::edge"* %61)
  store %"struct.Dinic<int>::edge"* %63, %"struct.Dinic<int>::edge"** %8, align 8
  %64 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %65 = bitcast %"class.std::vector.18"* %64 to %"struct.std::_Vector_base.19"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %66, i32 0, i32 0
  %68 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %67, align 8
  %69 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %70 = bitcast %"class.std::vector.18"* %69 to %"struct.std::_Vector_base.19"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %71, i32 0, i32 1
  %73 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %72, align 8
  %74 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %75 = bitcast %"class.std::vector.18"* %74 to %"struct.std::_Vector_base.19"*
  %76 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %75) #3
  call void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"* %68, %"struct.Dinic<int>::edge"* %73, %"class.std::allocator.20"* dereferenceable(1) %76)
  %77 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %78 = bitcast %"class.std::vector.18"* %77 to %"struct.std::_Vector_base.19"*
  %79 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %80 = bitcast %"class.std::vector.18"* %79 to %"struct.std::_Vector_base.19"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %82, align 8
  %84 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %85 = bitcast %"class.std::vector.18"* %84 to %"struct.std::_Vector_base.19"*
  %86 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %85, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %86, i32 0, i32 2
  %88 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %87, align 8
  %89 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %90 = bitcast %"class.std::vector.18"* %89 to %"struct.std::_Vector_base.19"*
  %91 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %90, i32 0, i32 0
  %92 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %91, i32 0, i32 0
  %93 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %92, align 8
  %94 = ptrtoint %"struct.Dinic<int>::edge"* %88 to i64
  %95 = ptrtoint %"struct.Dinic<int>::edge"* %93 to i64
  %96 = add i64 %94, 8435897957125782777
  %97 = sub i64 %96, %95
  %98 = sub i64 %97, 8435897957125782777
  %99 = sub i64 %94, %95
  %100 = sdiv exact i64 %98, 12
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %78, %"struct.Dinic<int>::edge"* %83, i64 %100)
  %101 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %102 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %103 = bitcast %"class.std::vector.18"* %102 to %"struct.std::_Vector_base.19"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %104, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %101, %"struct.Dinic<int>::edge"** %105, align 8
  %106 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %107 = bitcast %"class.std::vector.18"* %106 to %"struct.std::_Vector_base.19"*
  %108 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %107, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %108, i32 0, i32 0
  %110 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %109, align 8
  %111 = load i64, i64* %7, align 8
  %112 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %110, i64 %111
  %113 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %114 = bitcast %"class.std::vector.18"* %113 to %"struct.std::_Vector_base.19"*
  %115 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %114, i32 0, i32 0
  %116 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %115, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* %112, %"struct.Dinic<int>::edge"** %116, align 8
  %117 = load i32, i32* @x.540
  %118 = load i32, i32* @y.541
  %119 = sub i32 %117, -1842677925
  %120 = sub i32 %119, 1
  %121 = add i32 %120, -1842677925
  %122 = sub i32 %117, 1
  %123 = mul i32 %117, %121
  %124 = urem i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = icmp slt i32 %118, 10
  %127 = and i1 %125, %126
  %128 = xor i1 %125, %126
  %129 = or i1 %127, %128
  %130 = or i1 %125, %126
  %131 = select i1 %129, i32 1579074839, i32 -1949023175
  store i32 %131, i32* %18
  br label %362

; <label>:132:                                    ; preds = %19
  store i32 341780338, i32* %18
  br label %362

; <label>:133:                                    ; preds = %19
  %134 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %135 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %134) #3
  %136 = load i64, i64* %7, align 8
  %137 = icmp uge i64 %135, %136
  %138 = select i1 %137, i32 528625685, i32 1900927670
  store i32 %138, i32* %18
  br label %362

; <label>:139:                                    ; preds = %19
  %140 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %141 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"* %140) #3
  %142 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %12, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %141, %"struct.Dinic<int>::edge"** %142, align 8
  %143 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %144 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"* %143) #3
  %145 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %13, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %144, %"struct.Dinic<int>::edge"** %145, align 8
  %146 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %147 = call %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"* %146) #3
  %148 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %14, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %147, %"struct.Dinic<int>::edge"** %148, align 8
  %149 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %12, i32 0, i32 0
  %150 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %149, align 8
  %151 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %13, i32 0, i32 0
  %152 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %151, align 8
  %153 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %14, i32 0, i32 0
  %154 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %153, align 8
  %155 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_(%"struct.Dinic<int>::edge"* %150, %"struct.Dinic<int>::edge"* %152, %"struct.Dinic<int>::edge"* %154)
  %156 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %155, %"struct.Dinic<int>::edge"** %156, align 8
  %157 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %158 = call %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"* %157) #3
  %159 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %15, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %158, %"struct.Dinic<int>::edge"** %159, align 8
  %160 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %161 = bitcast %"class.std::vector.18"* %160 to %"struct.std::_Vector_base.19"*
  %162 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %161) #3
  %163 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  %164 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %163, align 8
  %165 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %15, i32 0, i32 0
  %166 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %165, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E(%"struct.Dinic<int>::edge"* %164, %"struct.Dinic<int>::edge"* %166, %"class.std::allocator.20"* dereferenceable(1) %162)
  store i32 1678567826, i32* %18
  br label %362

; <label>:167:                                    ; preds = %19
  %168 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %169 = bitcast %"class.std::vector.18"* %168 to %"struct.std::_Vector_base.19"*
  %170 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %169, i32 0, i32 0
  %171 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %170, i32 0, i32 0
  %172 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %171, align 8
  %173 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %174 = bitcast %"class.std::vector.18"* %173 to %"struct.std::_Vector_base.19"*
  %175 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %174, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %175, i32 0, i32 0
  %177 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %176, align 8
  %178 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %179 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %178) #3
  %180 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %177, i64 %179
  %181 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %182 = bitcast %"class.std::vector.18"* %181 to %"struct.std::_Vector_base.19"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %183, i32 0, i32 0
  %185 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %184, align 8
  %186 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"* %172, %"struct.Dinic<int>::edge"* %180, %"struct.Dinic<int>::edge"* %185)
  %187 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %188 = bitcast %"class.std::vector.18"* %187 to %"struct.std::_Vector_base.19"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %189, i32 0, i32 0
  %191 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %190, align 8
  %192 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %193 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %192) #3
  %194 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %191, i64 %193
  %195 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %196 = bitcast %"class.std::vector.18"* %195 to %"struct.std::_Vector_base.19"*
  %197 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %197, i32 0, i32 1
  %199 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %198, align 8
  %200 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %201 = bitcast %"class.std::vector.18"* %200 to %"struct.std::_Vector_base.19"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %202, i32 0, i32 1
  %204 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %203, align 8
  %205 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %206 = bitcast %"class.std::vector.18"* %205 to %"struct.std::_Vector_base.19"*
  %207 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %206) #3
  %208 = call %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aIPN5DinicIiE4edgeES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.Dinic<int>::edge"* %194, %"struct.Dinic<int>::edge"* %199, %"struct.Dinic<int>::edge"* %204, %"class.std::allocator.20"* dereferenceable(1) %207)
  store i32 1678567826, i32* %18
  br label %362

; <label>:209:                                    ; preds = %19
  %210 = load i32, i32* @x.540
  %211 = load i32, i32* @y.541
  %212 = add i32 %210, 625782579
  %213 = sub i32 %212, 1
  %214 = sub i32 %213, 625782579
  %215 = sub i32 %210, 1
  %216 = mul i32 %210, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %211, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  %224 = select i1 %222, i32 -1807355209, i32 -1975753385
  store i32 %224, i32* %18
  br label %362

; <label>:225:                                    ; preds = %19
  %226 = load i32, i32* @x.540
  %227 = load i32, i32* @y.541
  %228 = add i32 %226, -697026700
  %229 = sub i32 %228, 1
  %230 = sub i32 %229, -697026700
  %231 = sub i32 %226, 1
  %232 = mul i32 %226, %230
  %233 = urem i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = icmp slt i32 %227, 10
  %236 = xor i1 %234, true
  %237 = xor i1 %235, true
  %238 = xor i1 false, true
  %239 = and i1 %236, false
  %240 = and i1 %234, %238
  %241 = and i1 %237, false
  %242 = and i1 %235, %238
  %243 = or i1 %239, %240
  %244 = or i1 %241, %242
  %245 = xor i1 %243, %244
  %246 = or i1 %236, %237
  %247 = xor i1 %246, true
  %248 = or i1 false, %238
  %249 = and i1 %247, %248
  %250 = or i1 %245, %249
  %251 = or i1 %234, %235
  %252 = select i1 %250, i32 1807437154, i32 -1975753385
  store i32 %252, i32* %18
  br label %362

; <label>:253:                                    ; preds = %19
  store i32 341780338, i32* %18
  br label %362

; <label>:254:                                    ; preds = %19
  %255 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %256 = bitcast %"class.std::vector.18"* %255 to %"struct.std::_Vector_base.19"*
  %257 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %256, i32 0, i32 0
  %258 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %257, i32 0, i32 0
  %259 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %258, align 8
  %260 = load i64, i64* %7, align 8
  %261 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %259, i64 %260
  %262 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %263 = bitcast %"class.std::vector.18"* %262 to %"struct.std::_Vector_base.19"*
  %264 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %263, i32 0, i32 0
  %265 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %264, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* %261, %"struct.Dinic<int>::edge"** %265, align 8
  store i32 -1010079226, i32* %18
  br label %362

; <label>:266:                                    ; preds = %19
  %267 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %267

; <label>:268:                                    ; preds = %19
  %269 = load i64, i64* %7, align 8
  %270 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %271 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"* %270) #3
  %272 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %271, %"struct.Dinic<int>::edge"** %272, align 8
  %273 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  %274 = call %"struct.Dinic<int>::edge"* @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"* %273) #3
  %275 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %274, %"struct.Dinic<int>::edge"** %275, align 8
  %276 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %277 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %276, align 8
  %278 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %279 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %278, align 8
  %280 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %281 = call %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.18"* %280, i64 %269, %"struct.Dinic<int>::edge"* %277, %"struct.Dinic<int>::edge"* %279)
  store %"struct.Dinic<int>::edge"* %281, %"struct.Dinic<int>::edge"** %8, align 8
  %282 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %283 = bitcast %"class.std::vector.18"* %282 to %"struct.std::_Vector_base.19"*
  %284 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %283, i32 0, i32 0
  %285 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %284, i32 0, i32 0
  %286 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %285, align 8
  %287 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %288 = bitcast %"class.std::vector.18"* %287 to %"struct.std::_Vector_base.19"*
  %289 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %288, i32 0, i32 0
  %290 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %289, i32 0, i32 1
  %291 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %290, align 8
  %292 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %293 = bitcast %"class.std::vector.18"* %292 to %"struct.std::_Vector_base.19"*
  %294 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %293) #3
  call void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"* %286, %"struct.Dinic<int>::edge"* %291, %"class.std::allocator.20"* dereferenceable(1) %294)
  %295 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %296 = bitcast %"class.std::vector.18"* %295 to %"struct.std::_Vector_base.19"*
  %297 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %298 = bitcast %"class.std::vector.18"* %297 to %"struct.std::_Vector_base.19"*
  %299 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %298, i32 0, i32 0
  %300 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %299, i32 0, i32 0
  %301 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %300, align 8
  %302 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %303 = bitcast %"class.std::vector.18"* %302 to %"struct.std::_Vector_base.19"*
  %304 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %303, i32 0, i32 0
  %305 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %304, i32 0, i32 2
  %306 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %305, align 8
  %307 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %308 = bitcast %"class.std::vector.18"* %307 to %"struct.std::_Vector_base.19"*
  %309 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %308, i32 0, i32 0
  %310 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %309, i32 0, i32 0
  %311 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %310, align 8
  %312 = ptrtoint %"struct.Dinic<int>::edge"* %306 to i64
  %313 = ptrtoint %"struct.Dinic<int>::edge"* %311 to i64
  %314 = sub i64 0, %312
  %315 = add i64 0, %314
  %316 = sub i64 0, %312
  %317 = sub i64 %315, -3817420209442660912
  %318 = add i64 %317, %313
  %319 = add i64 %318, -3817420209442660912
  %320 = add i64 %315, %313
  %321 = shl i64 %312, %313
  %322 = add i64 0, 7747191929298525547
  %323 = sub i64 %322, %312
  %324 = sub i64 %323, 7747191929298525547
  %325 = sub i64 0, %312
  %326 = sub i64 %324, -3349916324578176085
  %327 = add i64 %326, %313
  %328 = add i64 %327, -3349916324578176085
  %329 = add i64 %324, %313
  %330 = sub i64 %312, -2186517878421634566
  %331 = sub i64 %330, %313
  %332 = add i64 %331, -2186517878421634566
  %333 = sub i64 %312, %313
  %334 = sub i64 %332, -1389238554232630532
  %335 = sub i64 %334, 12
  %336 = add i64 %335, -1389238554232630532
  %337 = sub i64 %332, 12
  %338 = mul i64 %336, 12
  %339 = add i64 %332, -6700960775449764184
  %340 = sub i64 %339, 12
  %341 = sub i64 %340, -6700960775449764184
  %342 = sub i64 %332, 12
  %343 = mul i64 %341, 12
  %344 = sdiv exact i64 %332, 12
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %296, %"struct.Dinic<int>::edge"* %301, i64 %344)
  %345 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %346 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %347 = bitcast %"class.std::vector.18"* %346 to %"struct.std::_Vector_base.19"*
  %348 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %347, i32 0, i32 0
  %349 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %348, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %345, %"struct.Dinic<int>::edge"** %349, align 8
  %350 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %351 = bitcast %"class.std::vector.18"* %350 to %"struct.std::_Vector_base.19"*
  %352 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %351, i32 0, i32 0
  %353 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %352, i32 0, i32 0
  %354 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %353, align 8
  %355 = load i64, i64* %7, align 8
  %356 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %354, i64 %355
  %357 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  %358 = bitcast %"class.std::vector.18"* %357 to %"struct.std::_Vector_base.19"*
  %359 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %358, i32 0, i32 0
  %360 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %359, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* %356, %"struct.Dinic<int>::edge"** %360, align 8
  store i32 -1188445903, i32* %18
  br label %362

; <label>:361:                                    ; preds = %19
  store i32 -1807355209, i32* %18
  br label %362

; <label>:362:                                    ; preds = %361, %268, %254, %253, %225, %209, %167, %139, %133, %132, %50, %35, %27, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8capacityEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %7 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %8 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %10, align 8
  %12 = ptrtoint %"struct.Dinic<int>::edge"* %7 to i64
  %13 = ptrtoint %"struct.Dinic<int>::edge"* %11 to i64
  %14 = sub i64 %12, -5171122638124207893
  %15 = sub i64 %14, %13
  %16 = add i64 %15, -5171122638124207893
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 12
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE20_M_allocate_and_copyIN9__gnu_cxx17__normal_iteratorIPKS2_S4_EEEEPS2_mT_SC_(%"class.std::vector.18"*, i64, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca %"struct.Dinic<int>::edge"*, align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %12 = alloca i8*
  %13 = alloca i32
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %3, %"struct.Dinic<int>::edge"** %15, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %7, align 8
  store i64 %1, i64* %8, align 8
  %16 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %17 = bitcast %"class.std::vector.18"* %16 to %"struct.std::_Vector_base.19"*
  %18 = load i64, i64* %8, align 8
  %19 = call %"struct.Dinic<int>::edge"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %17, i64 %18)
  store %"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"** %9, align 8
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %9, align 8
  %25 = bitcast %"class.std::vector.18"* %16 to %"struct.std::_Vector_base.19"*
  %26 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %25) #3
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %28 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %27, align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %11, i32 0, i32 0
  %30 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %29, align 8
  %31 = invoke %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEPS4_S4_ET0_T_SD_SC_RSaIT1_E(%"struct.Dinic<int>::edge"* %28, %"struct.Dinic<int>::edge"* %30, %"struct.Dinic<int>::edge"* %24, %"class.std::allocator.20"* dereferenceable(1) %26)
          to label %32 unwind label %34

; <label>:32:                                     ; preds = %4
  %33 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %9, align 8
  ret %"struct.Dinic<int>::edge"* %33

; <label>:34:                                     ; preds = %4
  %35 = landingpad { i8*, i32 }
          catch i8* null
  %36 = extractvalue { i8*, i32 } %35, 0
  store i8* %36, i8** %12, align 8
  %37 = extractvalue { i8*, i32 } %35, 1
  store i32 %37, i32* %13, align 4
  br label %38

; <label>:38:                                     ; preds = %34
  %39 = load i8*, i8** %12, align 8
  %40 = call i8* @__cxa_begin_catch(i8* %39) #3
  %41 = bitcast %"class.std::vector.18"* %16 to %"struct.std::_Vector_base.19"*
  %42 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %9, align 8
  %43 = load i64, i64* %8, align 8
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %41, %"struct.Dinic<int>::edge"* %42, i64 %43)
          to label %44 unwind label %45

; <label>:44:                                     ; preds = %38
  invoke void @__cxa_rethrow() #12
          to label %130 unwind label %45

; <label>:45:                                     ; preds = %44, %38
  %46 = load i32, i32* @x.544
  %47 = load i32, i32* @y.545
  %48 = sub i32 %46, 177730722
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 177730722
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %160

; <label>:60:                                     ; preds = %45, %160
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %12, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %13, align 4
  %64 = load i32, i32* @x.544
  %65 = load i32, i32* @y.545
  %66 = add i32 %64, 642495724
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, 642495724
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  br i1 %88, label %90, label %160

; <label>:90:                                     ; preds = %60
  invoke void @__cxa_end_catch()
          to label %91 unwind label %98

; <label>:91:                                     ; preds = %90
  br label %93
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:93:                                     ; preds = %91
  %94 = load i8*, i8** %12, align 8
  %95 = load i32, i32* %13, align 4
  %96 = insertvalue { i8*, i32 } undef, i8* %94, 0
  %97 = insertvalue { i8*, i32 } %96, i32 %95, 1
  resume { i8*, i32 } %97

; <label>:98:                                     ; preds = %90
  %99 = load i32, i32* @x.544
  %100 = load i32, i32* @y.545
  %101 = sub i32 0, 1
  %102 = add i32 %99, %101
  %103 = sub i32 %99, 1
  %104 = mul i32 %99, %102
  %105 = urem i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = icmp slt i32 %100, 10
  %108 = and i1 %106, %107
  %109 = xor i1 %106, %107
  %110 = or i1 %108, %109
  %111 = or i1 %106, %107
  br i1 %110, label %112, label %164

; <label>:112:                                    ; preds = %98, %164
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  call void @__clang_call_terminate(i8* %114) #10
  %115 = load i32, i32* @x.544
  %116 = load i32, i32* @y.545
  %117 = sub i32 %115, 998209854
  %118 = sub i32 %117, 1
  %119 = add i32 %118, 998209854
  %120 = sub i32 %115, 1
  %121 = mul i32 %115, %119
  %122 = urem i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = icmp slt i32 %116, 10
  %125 = and i1 %123, %124
  %126 = xor i1 %123, %124
  %127 = or i1 %125, %126
  %128 = or i1 %123, %124
  br i1 %127, label %129, label %164

; <label>:129:                                    ; preds = %112
  unreachable

; <label>:130:                                    ; preds = %44
  %131 = load i32, i32* @x.544
  %132 = load i32, i32* @y.545
  %133 = add i32 %131, -2030652188
  %134 = sub i32 %133, 1
  %135 = sub i32 %134, -2030652188
  %136 = sub i32 %131, 1
  %137 = mul i32 %131, %135
  %138 = urem i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = icmp slt i32 %132, 10
  %141 = and i1 %139, %140
  %142 = xor i1 %139, %140
  %143 = or i1 %141, %142
  %144 = or i1 %139, %140
  br i1 %143, label %145, label %167

; <label>:145:                                    ; preds = %130, %167
  %146 = load i32, i32* @x.544
  %147 = load i32, i32* @y.545
  %148 = sub i32 0, 1
  %149 = add i32 %146, %148
  %150 = sub i32 %146, 1
  %151 = mul i32 %146, %149
  %152 = urem i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = icmp slt i32 %147, 10
  %155 = and i1 %153, %154
  %156 = xor i1 %153, %154
  %157 = or i1 %155, %156
  %158 = or i1 %153, %154
  br i1 %157, label %159, label %167

; <label>:159:                                    ; preds = %145
  unreachable

; <label>:160:                                    ; preds = %60, %45
  %161 = landingpad { i8*, i32 }
          cleanup
  %162 = extractvalue { i8*, i32 } %161, 0
  store i8* %162, i8** %12, align 8
  %163 = extractvalue { i8*, i32 } %161, 1
  store i32 %163, i32* %13, align 4
  br label %60

; <label>:164:                                    ; preds = %112, %98
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  call void @__clang_call_terminate(i8* %166) #10
  br label %112

; <label>:167:                                    ; preds = %145, %130
  br label %145
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEES4_EvT_SA_RSaIT0_E(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.std::allocator.20"*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %10, align 8
  store %"class.std::allocator.20"* %2, %"class.std::allocator.20"** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %8 to i8*
  %14 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  %16 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %15, align 8
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %8, i32 0, i32 0
  %18 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %17, align 8
  call void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEEvT_SA_(%"struct.Dinic<int>::edge"* %16, %"struct.Dinic<int>::edge"* %18)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt4copyIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET0_T_SE_SD_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %14, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %15, align 8
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %9 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %19 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %18, align 8
  %20 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %19)
  %21 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %20, %"struct.Dinic<int>::edge"** %21, align 8
  %22 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %11 to i8*
  %23 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %22, i8* %23, i64 8, i32 8, i1 false)
  %24 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %11, i32 0, i32 0
  %25 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %24, align 8
  %26 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Miter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %25)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %26, %"struct.Dinic<int>::edge"** %27, align 8
  %28 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %12 to i8*
  %29 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %28, i8* %29, i64 8, i32 8, i1 false)
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %8, i32 0, i32 0
  %31 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %30, align 8
  %32 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %33 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %32, align 8
  %34 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %12, i32 0, i32 0
  %35 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %36 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_(%"struct.Dinic<int>::edge"* %31, %"struct.Dinic<int>::edge"* %33, %"struct.Dinic<int>::edge"* %35)
  %37 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %36, %"struct.Dinic<int>::edge"** %37, align 8
  %38 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  %39 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %38, align 8
  ret %"struct.Dinic<int>::edge"* %39
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %5 = bitcast %"class.std::vector.18"* %4 to %"struct.std::_Vector_base.19"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %2, %"struct.Dinic<int>::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  ret %"struct.Dinic<int>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE3endEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.552
  %6 = load i32, i32* @y.553
  %7 = add i32 %5, -1757113691
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1757113691
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1121492776, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %86
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1121492776, label %19
    i32 -459228822, label %39
    i32 1482649431, label %75
    i32 191106236, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %86

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -459228822, i32 191106236
  store i32 %38, i32* %15
  br label %86

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %41 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %41, align 8
  %42 = load %"class.std::vector.18"*, %"class.std::vector.18"** %41, align 8
  %43 = bitcast %"class.std::vector.18"* %42 to %"struct.std::_Vector_base.19"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %43, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %44, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %40, %"struct.Dinic<int>::edge"** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %40, i32 0, i32 0
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %46, align 8
  store %"struct.Dinic<int>::edge"* %47, %"struct.Dinic<int>::edge"** %2
  %48 = load i32, i32* @x.552
  %49 = load i32, i32* @y.553
  %50 = sub i32 %48, 272156730
  %51 = sub i32 %50, 1
  %52 = add i32 %51, 272156730
  %53 = sub i32 %48, 1
  %54 = mul i32 %48, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %49, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 1482649431, i32 191106236
  store i32 %74, i32* %15
  br label %86

; <label>:75:                                     ; preds = %16
  %76 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %79 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %79, align 8
  %80 = load %"class.std::vector.18"*, %"class.std::vector.18"** %79, align 8
  %81 = bitcast %"class.std::vector.18"* %80 to %"struct.std::_Vector_base.19"*
  %82 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %81, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %82, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %78, %"struct.Dinic<int>::edge"** dereferenceable(8) %83) #3
  %84 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %78, i32 0, i32 0
  %85 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %84, align 8
  store i32 -459228822, i32* %15
  br label %86

; <label>:86:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt4copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.554
  %8 = load i32, i32* @y.555
  %9 = sub i32 %7, -880776930
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -880776930
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -851229315, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %90
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -851229315, label %21
    i32 1906237895, label %41
    i32 -58324941, label %78
    i32 -1283615461, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %90

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1906237895, i32 -1283615461
  store i32 %40, i32* %17
  br label %90

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %43, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %44, align 8
  %45 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %46 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %45)
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %47)
  %49 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %44, align 8
  %50 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"* %49)
  store %"struct.Dinic<int>::edge"* %50, %"struct.Dinic<int>::edge"** %4
  %51 = load i32, i32* @x.554
  %52 = load i32, i32* @y.555
  %53 = add i32 %51, -469007203
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -469007203
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -58324941, i32 -1283615461
  store i32 %77, i32* %17
  br label %90

; <label>:78:                                     ; preds = %18
  %79 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %79

; <label>:80:                                     ; preds = %18
  %81 = alloca %"struct.Dinic<int>::edge"*, align 8
  %82 = alloca %"struct.Dinic<int>::edge"*, align 8
  %83 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %81, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %82, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %83, align 8
  %84 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %81, align 8
  %85 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %84)
  %86 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %82, align 8
  %87 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %86)
  %88 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %83, align 8
  %89 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"* %85, %"struct.Dinic<int>::edge"* %87, %"struct.Dinic<int>::edge"* %88)
  store i32 1906237895, i32* %17
  br label %90

; <label>:90:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aIPN5DinicIiE4edgeES3_S2_ET0_T_S5_S4_RSaIT1_E(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %6, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %10 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %12 = call %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"* %9, %"struct.Dinic<int>::edge"* %10, %"struct.Dinic<int>::edge"* %11)
  ret %"struct.Dinic<int>::edge"* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEEvT_SA_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %7, align 8
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %8, align 8
  %9 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %5 to i8*
  %10 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %9, i8* %10, i64 8, i32 8, i1 false)
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %6 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %14 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %13, align 8
  %15 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %6, i32 0, i32 0
  %16 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %15, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_(%"struct.Dinic<int>::edge"* %14, %"struct.Dinic<int>::edge"* %16)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS6_SaIS6_EEEEEEvT_SC_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %5, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEENS1_IPS4_S9_EEET1_T0_SE_SD_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %6 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %8 = alloca %"struct.Dinic<int>::edge"*, align 8
  %9 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %10 = alloca %"class.__gnu_cxx::__normal_iterator.25", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %12 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %12, align 8
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %6, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %13, align 8
  %14 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %7, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %14, align 8
  %15 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %9 to i8*
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %9, i32 0, i32 0
  %18 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %17, align 8
  %19 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %18)
  %20 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %10 to i8*
  %21 = bitcast %"class.__gnu_cxx::__normal_iterator.25"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %20, i8* %21, i64 8, i32 8, i1 false)
  %22 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.25", %"class.__gnu_cxx::__normal_iterator.25"* %10, i32 0, i32 0
  %23 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %22, align 8
  %24 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPKN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESC_(%"struct.Dinic<int>::edge"* %23)
  %25 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %11 to i8*
  %26 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %25, i8* %26, i64 8, i32 8, i1 false)
  %27 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %11, i32 0, i32 0
  %28 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %27, align 8
  %29 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Dinic<int>::edge"* %28)
  %30 = call %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPKN5DinicIiE4edgeEPS2_ET1_T0_S7_S6_(%"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"* %24, %"struct.Dinic<int>::edge"* %29)
  store %"struct.Dinic<int>::edge"* %30, %"struct.Dinic<int>::edge"** %8, align 8
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"* %4, %"struct.Dinic<int>::edge"** dereferenceable(8) %8) #3
  %31 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %4, i32 0, i32 0
  %32 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %31, align 8
  ret %"struct.Dinic<int>::edge"* %32
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEEENSt11_Niter_baseIT_E13iterator_typeESB_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %2, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.27"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %3, i32 0, i32 0
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %9 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_(%"struct.Dinic<int>::edge"* %8)
  ret %"struct.Dinic<int>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator.27"*, %"struct.Dinic<int>::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  %4 = alloca %"struct.Dinic<int>::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  store %"struct.Dinic<int>::edge"** %1, %"struct.Dinic<int>::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %5, i32 0, i32 0
  %7 = load %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %4, align 8
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  store %"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS4_SaIS4_EEEELb1EE7_S_baseES9_(%"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.568
  %6 = load i32, i32* @y.569
  %7 = sub i32 %5, 447195546
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 447195546
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 295968211, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 295968211, label %19
    i32 329936604, label %27
    i32 -1391680052, label %47
    i32 -1075671652, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 329936604, i32 -1075671652
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %29 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %28, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %29, align 8
  %30 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %28) #3
  %31 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %30, align 8
  store %"struct.Dinic<int>::edge"* %31, %"struct.Dinic<int>::edge"** %2
  %32 = load i32, i32* @x.568
  %33 = load i32, i32* @y.569
  %34 = add i32 %32, -932987769
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -932987769
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1391680052, i32 -1075671652
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.__gnu_cxx::__normal_iterator.27", align 8
  %51 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %50, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %51, align 8
  %52 = call dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"* %50) #3
  %53 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %52, align 8
  store i32 329936604, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.Dinic<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN5DinicIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator.27"*) #5 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.570
  %6 = load i32, i32* @y.571
  %7 = sub i32 %5, 1133325060
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1133325060
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -49729830, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %76
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -49729830, label %19
    i32 -501726756, label %39
    i32 996003852, label %70
    i32 -253691171, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %76

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -501726756, i32 -253691171
  store i32 %38, i32* %15
  br label %76

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %41, i32 0, i32 0
  store %"struct.Dinic<int>::edge"** %42, %"struct.Dinic<int>::edge"*** %2
  %43 = load i32, i32* @x.570
  %44 = load i32, i32* @y.571
  %45 = add i32 %43, -559278551
  %46 = sub i32 %45, 1
  %47 = sub i32 %46, -559278551
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 996003852, i32 -253691171
  store i32 %69, i32* %15
  br label %76

; <label>:70:                                     ; preds = %16
  %71 = load volatile %"struct.Dinic<int>::edge"**, %"struct.Dinic<int>::edge"*** %2
  ret %"struct.Dinic<int>::edge"** %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.__gnu_cxx::__normal_iterator.27"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.27"* %0, %"class.__gnu_cxx::__normal_iterator.27"** %73, align 8
  %74 = load %"class.__gnu_cxx::__normal_iterator.27"*, %"class.__gnu_cxx::__normal_iterator.27"** %73, align 8
  %75 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.27", %"class.__gnu_cxx::__normal_iterator.27"* %74, i32 0, i32 0
  store i32 -501726756, i32* %15
  br label %76

; <label>:76:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  %7 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  %8 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %7)
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %10 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %9)
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %12 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %11)
  %13 = call %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"* %10, %"struct.Dinic<int>::edge"* %12)
  ret %"struct.Dinic<int>::edge"* %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseIPN5DinicIiE4edgeEENSt11_Miter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"*) #5 comdat {
  %2 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %2, align 8
  %3 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2, align 8
  %4 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseIPN5DinicIiE4edgeELb0EE7_S_baseES3_(%"struct.Dinic<int>::edge"* %3)
  ret %"struct.Dinic<int>::edge"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb0EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #5 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %10 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %11 = call %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"* %9, %"struct.Dinic<int>::edge"* %10)
  ret %"struct.Dinic<int>::edge"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.578
  %8 = load i32, i32* @y.579
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -510129048, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %86
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -510129048, label %20
    i32 -1715642245, label %40
    i32 -92543539, label %75
    i32 -18309807, label %77
  ]

; <label>:19:                                     ; preds = %17
  br label %86

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1715642245, i32 -18309807
  store i32 %39, i32* %16
  br label %86

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Dinic<int>::edge"*, align 8
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %41, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %41, align 8
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5DinicIiE4edgeES5_EET0_T_S7_S6_(%"struct.Dinic<int>::edge"* %45, %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* %47)
  store %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"** %4
  %49 = load i32, i32* @x.578
  %50 = load i32, i32* @y.579
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 true, true
  %61 = and i1 %58, true
  %62 = and i1 %56, %60
  %63 = and i1 %59, true
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 true, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -92543539, i32 -18309807
  store i32 %74, i32* %16
  br label %86

; <label>:75:                                     ; preds = %17
  %76 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %76

; <label>:77:                                     ; preds = %17
  %78 = alloca %"struct.Dinic<int>::edge"*, align 8
  %79 = alloca %"struct.Dinic<int>::edge"*, align 8
  %80 = alloca %"struct.Dinic<int>::edge"*, align 8
  %81 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %78, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %79, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %80, align 8
  store i8 1, i8* %81, align 1
  %82 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %78, align 8
  %83 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %79, align 8
  %84 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %80, align 8
  %85 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5DinicIiE4edgeES5_EET0_T_S7_S6_(%"struct.Dinic<int>::edge"* %82, %"struct.Dinic<int>::edge"* %83, %"struct.Dinic<int>::edge"* %84)
  store i32 -1715642245, i32* %16
  br label %86

; <label>:86:                                     ; preds = %77, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyIPN5DinicIiE4edgeES5_EET0_T_S7_S6_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat align 2 {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.580
  %8 = load i32, i32* @y.581
  %9 = sub i32 %7, 273121443
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 273121443
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1673290331, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1673290331, label %21
    i32 414871088, label %41
    i32 -1079092557, label %76
    i32 -1102938442, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 414871088, i32 -1102938442
  store i32 %40, i32* %17
  br label %86

; <label>:41:                                     ; preds = %18
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %43, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %44, align 8
  %45 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %44, align 8
  %48 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"* %45, %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* %47)
  store %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"** %4
  %49 = load i32, i32* @x.580
  %50 = load i32, i32* @y.581
  %51 = sub i32 %49, 1257394723
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1257394723
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 true, true
  %62 = and i1 %59, true
  %63 = and i1 %57, %61
  %64 = and i1 %60, true
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 true, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -1079092557, i32 -1102938442
  store i32 %75, i32* %17
  br label %86

; <label>:76:                                     ; preds = %18
  %77 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %77

; <label>:78:                                     ; preds = %18
  %79 = alloca %"struct.Dinic<int>::edge"*, align 8
  %80 = alloca %"struct.Dinic<int>::edge"*, align 8
  %81 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %79, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %80, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %81, align 8
  %82 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %79, align 8
  %83 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %80, align 8
  %84 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %81, align 8
  %85 = call %"struct.Dinic<int>::edge"* @_ZSt4copyIPN5DinicIiE4edgeES3_ET0_T_S5_S4_(%"struct.Dinic<int>::edge"* %82, %"struct.Dinic<int>::edge"* %83, %"struct.Dinic<int>::edge"* %84)
  store i32 414871088, i32* %17
  br label %86

; <label>:86:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt20uninitialized_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS3_EEmS5_ET_S7_T0_RKT1_(%"class.std::vector.18"*, i64, %"class.std::vector.18"* dereferenceable(24)) #0 comdat {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.582
  %8 = load i32, i32* @y.583
  %9 = add i32 %7, 721651199
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 721651199
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -111522489, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %88
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -111522489, label %21
    i32 1361296267, label %41
    i32 -1657212378, label %77
    i32 1587356927, label %79
  ]

; <label>:20:                                     ; preds = %18
  br label %88

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 1361296267, i32 1587356927
  store i32 %40, i32* %17
  br label %88

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::vector.18"*, align 8
  %43 = alloca i64, align 8
  %44 = alloca %"class.std::vector.18"*, align 8
  %45 = alloca i8, align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %42, align 8
  store i64 %1, i64* %43, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load %"class.std::vector.18"*, %"class.std::vector.18"** %42, align 8
  %47 = load i64, i64* %43, align 8
  %48 = load %"class.std::vector.18"*, %"class.std::vector.18"** %44, align 8
  %49 = call %"class.std::vector.18"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS5_EEmS7_EET_S9_T0_RKT1_(%"class.std::vector.18"* %46, i64 %47, %"class.std::vector.18"* dereferenceable(24) %48)
  store %"class.std::vector.18"* %49, %"class.std::vector.18"** %4
  %50 = load i32, i32* @x.582
  %51 = load i32, i32* @y.583
  %52 = sub i32 %50, -1425143478
  %53 = sub i32 %52, 1
  %54 = add i32 %53, -1425143478
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  %76 = select i1 %74, i32 -1657212378, i32 1587356927
  store i32 %76, i32* %17
  br label %88

; <label>:77:                                     ; preds = %18
  %78 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %78

; <label>:79:                                     ; preds = %18
  %80 = alloca %"class.std::vector.18"*, align 8
  %81 = alloca i64, align 8
  %82 = alloca %"class.std::vector.18"*, align 8
  %83 = alloca i8, align 1
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %80, align 8
  store i64 %1, i64* %81, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %82, align 8
  store i8 1, i8* %83, align 1
  %84 = load %"class.std::vector.18"*, %"class.std::vector.18"** %80, align 8
  %85 = load i64, i64* %81, align 8
  %86 = load %"class.std::vector.18"*, %"class.std::vector.18"** %82, align 8
  %87 = call %"class.std::vector.18"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS5_EEmS7_EET_S9_T0_RKT1_(%"class.std::vector.18"* %84, i64 %85, %"class.std::vector.18"* dereferenceable(24) %86)
  store i32 1361296267, i32* %17
  br label %88

; <label>:88:                                     ; preds = %79, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt22__uninitialized_fill_nILb0EE15__uninit_fill_nIPSt6vectorIN5DinicIiE4edgeESaIS5_EEmS7_EET_S9_T0_RKT1_(%"class.std::vector.18"*, i64, %"class.std::vector.18"* dereferenceable(24)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::vector.18"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::vector.18"*, align 8
  %7 = alloca %"class.std::vector.18"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::vector.18"* %2, %"class.std::vector.18"** %6, align 8
  %10 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  store %"class.std::vector.18"* %10, %"class.std::vector.18"** %7, align 8
  br label %11

; <label>:11:                                     ; preds = %48, %3
  %12 = load i32, i32* @x.584
  %13 = load i32, i32* @y.585
  %14 = sub i32 0, 1
  %15 = add i32 %12, %14
  %16 = sub i32 %12, 1
  %17 = mul i32 %12, %15
  %18 = urem i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = icmp slt i32 %13, 10
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  br i1 %23, label %25, label %195

; <label>:25:                                     ; preds = %11, %195
  %26 = load i64, i64* %5, align 8
  %27 = icmp ugt i64 %26, 0
  %28 = load i32, i32* @x.584
  %29 = load i32, i32* @y.585
  %30 = add i32 %28, 1175798074
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, 1175798074
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  br i1 %40, label %42, label %195

; <label>:42:                                     ; preds = %25
  br i1 %27, label %43, label %95

; <label>:43:                                     ; preds = %42
  %44 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %45 = call %"class.std::vector.18"* @_ZSt11__addressofISt6vectorIN5DinicIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.18"* dereferenceable(24) %44) #3
  %46 = load %"class.std::vector.18"*, %"class.std::vector.18"** %6, align 8
  invoke void @_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJRKS5_EEvPT_DpOT0_(%"class.std::vector.18"* %45, %"class.std::vector.18"* dereferenceable(24) %46)
          to label %47 unwind label %56

; <label>:47:                                     ; preds = %43
  br label %48

; <label>:48:                                     ; preds = %47
  %49 = load i64, i64* %5, align 8
  %50 = add i64 %49, 7480418974272620929
  %51 = add i64 %50, -1
  %52 = sub i64 %51, 7480418974272620929
  %53 = add i64 %49, -1
  store i64 %52, i64* %5, align 8
  %54 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  %55 = getelementptr inbounds %"class.std::vector.18", %"class.std::vector.18"* %54, i32 1
  store %"class.std::vector.18"* %55, %"class.std::vector.18"** %7, align 8
  br label %11

; <label>:56:                                     ; preds = %43
  %57 = load i32, i32* @x.584
  %58 = load i32, i32* @y.585
  %59 = add i32 %57, 101621050
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 101621050
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %198

; <label>:71:                                     ; preds = %56, %198
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %8, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %9, align 4
  %75 = load i32, i32* @x.584
  %76 = load i32, i32* @y.585
  %77 = sub i32 0, 1
  %78 = add i32 %75, %77
  %79 = sub i32 %75, 1
  %80 = mul i32 %75, %78
  %81 = urem i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = icmp slt i32 %76, 10
  %84 = and i1 %82, %83
  %85 = xor i1 %82, %83
  %86 = or i1 %84, %85
  %87 = or i1 %82, %83
  br i1 %86, label %88, label %198

; <label>:88:                                     ; preds = %71
  br label %89

; <label>:89:                                     ; preds = %88
  %90 = load i8*, i8** %8, align 8
  %91 = call i8* @__cxa_begin_catch(i8* %90) #3
  %92 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %93 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.18"* %92, %"class.std::vector.18"* %93)
          to label %94 unwind label %97

; <label>:94:                                     ; preds = %89
  invoke void @__cxa_rethrow() #12
          to label %194 unwind label %97

; <label>:95:                                     ; preds = %42
  %96 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  ret %"class.std::vector.18"* %96

; <label>:97:                                     ; preds = %94, %89
  %98 = landingpad { i8*, i32 }
          cleanup
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %8, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %101 unwind label %150

; <label>:101:                                    ; preds = %97
  br label %145
                                                  ; No predecessors!
  %103 = load i32, i32* @x.584
  %104 = load i32, i32* @y.585
  %105 = add i32 %103, -58231494
  %106 = sub i32 %105, 1
  %107 = sub i32 %106, -58231494
  %108 = sub i32 %103, 1
  %109 = mul i32 %103, %107
  %110 = urem i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = icmp slt i32 %104, 10
  %113 = and i1 %111, %112
  %114 = xor i1 %111, %112
  %115 = or i1 %113, %114
  %116 = or i1 %111, %112
  br i1 %115, label %117, label %202

; <label>:117:                                    ; preds = %102, %202
  call void @llvm.trap()
  %118 = load i32, i32* @x.584
  %119 = load i32, i32* @y.585
  %120 = sub i32 %118, 592611254
  %121 = sub i32 %120, 1
  %122 = add i32 %121, 592611254
  %123 = sub i32 %118, 1
  %124 = mul i32 %118, %122
  %125 = urem i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = icmp slt i32 %119, 10
  %128 = xor i1 %126, true
  %129 = xor i1 %127, true
  %130 = xor i1 true, true
  %131 = and i1 %128, true
  %132 = and i1 %126, %130
  %133 = and i1 %129, true
  %134 = and i1 %127, %130
  %135 = or i1 %131, %132
  %136 = or i1 %133, %134
  %137 = xor i1 %135, %136
  %138 = or i1 %128, %129
  %139 = xor i1 %138, true
  %140 = or i1 true, %130
  %141 = and i1 %139, %140
  %142 = or i1 %137, %141
  %143 = or i1 %126, %127
  br i1 %142, label %144, label %202

; <label>:144:                                    ; preds = %117
  unreachable

; <label>:145:                                    ; preds = %101
  %146 = load i8*, i8** %8, align 8
  %147 = load i32, i32* %9, align 4
  %148 = insertvalue { i8*, i32 } undef, i8* %146, 0
  %149 = insertvalue { i8*, i32 } %148, i32 %147, 1
  resume { i8*, i32 } %149

; <label>:150:                                    ; preds = %97
  %151 = load i32, i32* @x.584
  %152 = load i32, i32* @y.585
  %153 = add i32 %151, 1497376140
  %154 = sub i32 %153, 1
  %155 = sub i32 %154, 1497376140
  %156 = sub i32 %151, 1
  %157 = mul i32 %151, %155
  %158 = urem i32 %157, 2
  %159 = icmp eq i32 %158, 0
  %160 = icmp slt i32 %152, 10
  %161 = and i1 %159, %160
  %162 = xor i1 %159, %160
  %163 = or i1 %161, %162
  %164 = or i1 %159, %160
  br i1 %163, label %165, label %203

; <label>:165:                                    ; preds = %150, %203
  %166 = landingpad { i8*, i32 }
          catch i8* null
  %167 = extractvalue { i8*, i32 } %166, 0
  call void @__clang_call_terminate(i8* %167) #10
  %168 = load i32, i32* @x.584
  %169 = load i32, i32* @y.585
  %170 = sub i32 0, 1
  %171 = add i32 %168, %170
  %172 = sub i32 %168, 1
  %173 = mul i32 %168, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %169, 10
  %177 = xor i1 %175, true
  %178 = xor i1 %176, true
  %179 = xor i1 false, true
  %180 = and i1 %177, false
  %181 = and i1 %175, %179
  %182 = and i1 %178, false
  %183 = and i1 %176, %179
  %184 = or i1 %180, %181
  %185 = or i1 %182, %183
  %186 = xor i1 %184, %185
  %187 = or i1 %177, %178
  %188 = xor i1 %187, true
  %189 = or i1 false, %179
  %190 = and i1 %188, %189
  %191 = or i1 %186, %190
  %192 = or i1 %175, %176
  br i1 %191, label %193, label %203

; <label>:193:                                    ; preds = %165
  unreachable

; <label>:194:                                    ; preds = %94
  unreachable

; <label>:195:                                    ; preds = %25, %11
  %196 = load i64, i64* %5, align 8
  %197 = icmp ugt i64 %196, 0
  br label %25

; <label>:198:                                    ; preds = %71, %56
  %199 = landingpad { i8*, i32 }
          catch i8* null
  %200 = extractvalue { i8*, i32 } %199, 0
  store i8* %200, i8** %8, align 8
  %201 = extractvalue { i8*, i32 } %199, 1
  store i32 %201, i32* %9, align 4
  br label %71

; <label>:202:                                    ; preds = %117, %102
  call void @llvm.trap()
  br label %117

; <label>:203:                                    ; preds = %165, %150
  %204 = landingpad { i8*, i32 }
          catch i8* null
  %205 = extractvalue { i8*, i32 } %204, 0
  call void @__clang_call_terminate(i8* %205) #10
  br label %165
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN5DinicIiE4edgeESaIS3_EEJRKS5_EEvPT_DpOT0_(%"class.std::vector.18"*, %"class.std::vector.18"* dereferenceable(24)) #0 comdat {
  %3 = alloca %"class.std::vector.18"*, align 8
  %4 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  store %"class.std::vector.18"* %1, %"class.std::vector.18"** %4, align 8
  %5 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  %6 = bitcast %"class.std::vector.18"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.18"*
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardIRKSt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::vector.18"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEC2ERKS4_(%"class.std::vector.18"* %7, %"class.std::vector.18"* dereferenceable(24) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.18"* @_ZSt7forwardIRKSt6vectorIN5DinicIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS8_E4typeE(%"class.std::vector.18"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.18"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.588
  %6 = load i32, i32* @y.589
  %7 = sub i32 %5, -1297490547
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1297490547
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -2001411899, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -2001411899, label %19
    i32 -1767433212, label %27
    i32 -363071875, label %45
    i32 1295532411, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1767433212, i32 1295532411
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %28, align 8
  %29 = load %"class.std::vector.18"*, %"class.std::vector.18"** %28, align 8
  store %"class.std::vector.18"* %29, %"class.std::vector.18"** %2
  %30 = load i32, i32* @x.588
  %31 = load i32, i32* @y.589
  %32 = sub i32 %30, -835758252
  %33 = sub i32 %32, 1
  %34 = add i32 %33, -835758252
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 -363071875, i32 1295532411
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %2
  ret %"class.std::vector.18"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %48, align 8
  %49 = load %"class.std::vector.18"*, %"class.std::vector.18"** %48, align 8
  store i32 -1767433212, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector.13"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.13"*, align 8
  store %"class.std::vector.13"* %0, %"class.std::vector.13"** %2, align 8
  %3 = load %"class.std::vector.13"*, %"class.std::vector.13"** %2, align 8
  %4 = bitcast %"class.std::vector.13"* %3 to %"struct.std::_Vector_base.14"*
  %5 = call dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator.15"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator.15"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.15"*, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %2, align 8
  %3 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %2, align 8
  %4 = bitcast %"class.std::allocator.15"* %3 to %"class.__gnu_cxx::new_allocator.16"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.15"* @_ZNKSt12_Vector_baseISt6vectorIN5DinicIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.14"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.14"*, align 8
  store %"struct.std::_Vector_base.14"* %0, %"struct.std::_Vector_base.14"** %2, align 8
  %3 = load %"struct.std::_Vector_base.14"*, %"struct.std::_Vector_base.14"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.14", %"struct.std::_Vector_base.14"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >, std::allocator<std::vector<Dinic<int>::edge, std::allocator<Dinic<int>::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator.15"*
  ret %"class.std::allocator.15"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.596
  %5 = load i32, i32* @y.597
  %6 = add i32 %4, 693902660
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 693902660
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 266742886, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 266742886, label %18
    i32 -115747490, label %38
    i32 -228006159, label %56
    i32 1959441914, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -115747490, i32 1959441914
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %39, align 8
  %41 = load i32, i32* @x.596
  %42 = load i32, i32* @y.597
  %43 = add i32 %41, 1200168162
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 1200168162
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -228006159, i32 1959441914
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret i64 768614336404564650

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %58, align 8
  store i32 -115747490, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZNSt16allocator_traitsISaISt6vectorIN5DinicIiE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator.15"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.15"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.15"* %0, %"class.std::allocator.15"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.15"*, %"class.std::allocator.15"** %3, align 8
  %6 = bitcast %"class.std::allocator.15"* %5 to %"class.__gnu_cxx::new_allocator.16"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"* %6, i64 %7, i8* null)
  ret %"class.std::vector.18"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.16"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.18"*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.16"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.16"* %0, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.16"*, %"class.__gnu_cxx::new_allocator.16"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN5DinicIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.16"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -1637495541, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %89
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1637495541, label %17
    i32 1654235526, label %22
    i32 753285079, label %23
    i32 2004355839, label %51
    i32 -1549277820, label %71
    i32 -1781729616, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %89

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 1654235526, i32 753285079
  store i32 %21, i32* %13
  br label %89

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.600
  %25 = load i32, i32* @y.601
  %26 = add i32 %24, 383156666
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 383156666
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = xor i1 %32, true
  %35 = xor i1 %33, true
  %36 = xor i1 false, true
  %37 = and i1 %34, false
  %38 = and i1 %32, %36
  %39 = and i1 %35, false
  %40 = and i1 %33, %36
  %41 = or i1 %37, %38
  %42 = or i1 %39, %40
  %43 = xor i1 %41, %42
  %44 = or i1 %34, %35
  %45 = xor i1 %44, true
  %46 = or i1 false, %36
  %47 = and i1 %45, %46
  %48 = or i1 %43, %47
  %49 = or i1 %32, %33
  %50 = select i1 %48, i32 2004355839, i32 -1781729616
  store i32 %50, i32* %13
  br label %89

; <label>:51:                                     ; preds = %14
  %52 = load i64, i64* %8, align 8
  %53 = mul i64 %52, 24
  %54 = call i8* @_Znwm(i64 %53)
  %55 = bitcast i8* %54 to %"class.std::vector.18"*
  store %"class.std::vector.18"* %55, %"class.std::vector.18"** %4
  %56 = load i32, i32* @x.600
  %57 = load i32, i32* @y.601
  %58 = sub i32 %56, -313963130
  %59 = sub i32 %58, 1
  %60 = add i32 %59, -313963130
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = and i1 %64, %65
  %67 = xor i1 %64, %65
  %68 = or i1 %66, %67
  %69 = or i1 %64, %65
  %70 = select i1 %68, i32 -1549277820, i32 -1781729616
  store i32 %70, i32* %13
  br label %89

; <label>:71:                                     ; preds = %14
  %72 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %4
  ret %"class.std::vector.18"* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = shl i64 %74, 24
  %76 = add i64 %74, -4118301361146369593
  %77 = sub i64 %76, 24
  %78 = sub i64 %77, -4118301361146369593
  %79 = sub i64 %74, 24
  %80 = mul i64 %78, 24
  %81 = sub i64 %74, -4601772711087439423
  %82 = sub i64 %81, 24
  %83 = add i64 %82, -4601772711087439423
  %84 = sub i64 %74, 24
  %85 = mul i64 %83, 24
  %86 = mul i64 %74, 24
  %87 = call i8* @_Znwm(i64 %86)
  %88 = bitcast i8* %87 to %"class.std::vector.18"*
  store i32 2004355839, i32* %13
  br label %89

; <label>:89:                                     ; preds = %73, %51, %23, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.18"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.18"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.26", align 8
  %3 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %3, align 8
  %4 = load %"class.std::vector.18"*, %"class.std::vector.18"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator.26"* %2, %"class.std::vector.18"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.26", %"class.std::move_iterator.26"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.18"*, %"class.std::vector.18"** %5, align 8
  ret %"class.std::vector.18"* %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPSt6vectorIN5DinicIiE4edgeESaIS4_EES1_IS6_SaIS6_EEEC2ERKS7_(%"class.__gnu_cxx::__normal_iterator.23"*, %"class.std::vector.18"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.23"*, align 8
  %4 = alloca %"class.std::vector.18"**, align 8
  store %"class.__gnu_cxx::__normal_iterator.23"* %0, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  store %"class.std::vector.18"** %1, %"class.std::vector.18"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator.23"*, %"class.__gnu_cxx::__normal_iterator.23"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.23", %"class.__gnu_cxx::__normal_iterator.23"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.18"**, %"class.std::vector.18"*** %4, align 8
  %8 = load %"class.std::vector.18"*, %"class.std::vector.18"** %7, align 8
  store %"class.std::vector.18"* %8, %"class.std::vector.18"** %6, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.19"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.19"*, align 8
  store %"struct.std::_Vector_base.19"* %0, %"struct.std::_Vector_base.19"** %2, align 8
  %3 = load %"struct.std::_Vector_base.19"*, %"struct.std::_Vector_base.19"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.608
  %5 = load i32, i32* @y.609
  %6 = sub i32 %4, -1660216270
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1660216270
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1502152516, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1502152516, label %18
    i32 -357737062, label %38
    i32 1937619077, label %60
    i32 1154396340, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -357737062, i32 1154396340
  store i32 %37, i32* %14
  br label %68

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %39, align 8
  %40 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %40 to %"class.std::allocator.20"*
  call void @_ZNSaIN5DinicIiE4edgeEEC2Ev(%"class.std::allocator.20"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %40, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %40, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %40, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %44, align 8
  %45 = load i32, i32* @x.608
  %46 = load i32, i32* @y.609
  %47 = sub i32 %45, -1791433777
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1791433777
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 1937619077, i32 1154396340
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %62, align 8
  %63 = load %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %63 to %"class.std::allocator.20"*
  call void @_ZNSaIN5DinicIiE4edgeEEC2Ev(%"class.std::allocator.20"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %63, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %63, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %63, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %67, align 8
  store i32 -357737062, i32* %14
  br label %68

; <label>:68:                                     ; preds = %61, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN5DinicIiE4edgeEEC2Ev(%"class.std::allocator.20"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.610
  %5 = load i32, i32* @y.611
  %6 = sub i32 %4, 410844535
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 410844535
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 966658942, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 966658942, label %18
    i32 238428459, label %38
    i32 1455591513, label %57
    i32 -1286368793, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 238428459, i32 -1286368793
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %39, align 8
  %40 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %39, align 8
  %41 = bitcast %"class.std::allocator.20"* %40 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %41) #3
  %42 = load i32, i32* @x.610
  %43 = load i32, i32* @y.611
  %44 = sub i32 %42, -72620482
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -72620482
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1455591513, i32 -1286368793
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %59, align 8
  %60 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %59, align 8
  %61 = bitcast %"class.std::allocator.20"* %60 to %"class.__gnu_cxx::new_allocator.21"*
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"* %61) #3
  store i32 238428459, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.21"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"* dereferenceable(12)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.614
  %7 = load i32, i32* @y.615
  %8 = sub i32 %6, -902724737
  %9 = sub i32 %8, 1
  %10 = add i32 %9, -902724737
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1550728065, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %74
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1550728065, label %20
    i32 1117684298, label %40
    i32 -478693119, label %64
    i32 -1955885921, label %65
  ]

; <label>:19:                                     ; preds = %17
  br label %74

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1117684298, i32 -1955885921
  store i32 %39, i32* %16
  br label %74

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::allocator.20"*, align 8
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %41, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %43, align 8
  %44 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %41, align 8
  %45 = bitcast %"class.std::allocator.20"* %44 to %"class.__gnu_cxx::new_allocator.21"*
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %45, %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* dereferenceable(12) %48)
  %49 = load i32, i32* @x.614
  %50 = load i32, i32* @y.615
  %51 = sub i32 %49, 2135562734
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 2135562734
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 -478693119, i32 -1955885921
  store i32 %63, i32* %16
  br label %74

; <label>:64:                                     ; preds = %17
  ret void

; <label>:65:                                     ; preds = %17
  %66 = alloca %"class.std::allocator.20"*, align 8
  %67 = alloca %"struct.Dinic<int>::edge"*, align 8
  %68 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %66, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %67, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %68, align 8
  %69 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %66, align 8
  %70 = bitcast %"class.std::allocator.20"* %69 to %"class.__gnu_cxx::new_allocator.21"*
  %71 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %67, align 8
  %72 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %68, align 8
  %73 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12) %72) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"* %70, %"struct.Dinic<int>::edge"* %71, %"struct.Dinic<int>::edge"* dereferenceable(12) %73)
  store i32 1117684298, i32* %16
  br label %74

; <label>:74:                                     ; preds = %65, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRKS2_EEEvDpOT_(%"class.std::vector.18"*, %"struct.Dinic<int>::edge"* dereferenceable(12)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.616
  %4 = load i32, i32* @y.617
  %5 = add i32 %3, -1650332826
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1650332826
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %345

; <label>:29:                                     ; preds = %2, %345
  %30 = alloca %"class.std::vector.18"*, align 8
  %31 = alloca %"struct.Dinic<int>::edge"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"struct.Dinic<int>::edge"*, align 8
  %34 = alloca %"struct.Dinic<int>::edge"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %30, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %31, align 8
  %37 = load %"class.std::vector.18"*, %"class.std::vector.18"** %30, align 8
  %38 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %37, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %38, i64* %32, align 8
  %39 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %40 = load i64, i64* %32, align 8
  %41 = call %"struct.Dinic<int>::edge"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %39, i64 %40)
  store %"struct.Dinic<int>::edge"* %41, %"struct.Dinic<int>::edge"** %33, align 8
  %42 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  store %"struct.Dinic<int>::edge"* %42, %"struct.Dinic<int>::edge"** %34, align 8
  %43 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %44 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %43, i32 0, i32 0
  %45 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %44 to %"class.std::allocator.20"*
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %47 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %37) #3
  %48 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %46, i64 %47
  %49 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %31, align 8
  %50 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12) %49) #3
  %51 = load i32, i32* @x.616
  %52 = load i32, i32* @y.617
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = xor i1 %58, true
  %61 = xor i1 %59, true
  %62 = xor i1 true, true
  %63 = and i1 %60, true
  %64 = and i1 %58, %62
  %65 = and i1 %61, true
  %66 = and i1 %59, %62
  %67 = or i1 %63, %64
  %68 = or i1 %65, %66
  %69 = xor i1 %67, %68
  %70 = or i1 %60, %61
  %71 = xor i1 %70, true
  %72 = or i1 true, %62
  %73 = and i1 %71, %72
  %74 = or i1 %69, %73
  %75 = or i1 %58, %59
  br i1 %74, label %76, label %345

; <label>:76:                                     ; preds = %29
  invoke void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE9constructIS2_JRKS2_EEEvRS3_PT_DpOT0_(%"class.std::allocator.20"* dereferenceable(1) %45, %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"* dereferenceable(12) %50)
          to label %77 unwind label %93

; <label>:77:                                     ; preds = %76
  store %"struct.Dinic<int>::edge"* null, %"struct.Dinic<int>::edge"** %34, align 8
  %78 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %80, align 8
  %82 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %83 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %83, i32 0, i32 1
  %85 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %84, align 8
  %86 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %87 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %88 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %87) #3
  %89 = invoke %"struct.Dinic<int>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5DinicIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Dinic<int>::edge"* %81, %"struct.Dinic<int>::edge"* %85, %"struct.Dinic<int>::edge"* %86, %"class.std::allocator.20"* dereferenceable(1) %88)
          to label %90 unwind label %93

; <label>:90:                                     ; preds = %77
  store %"struct.Dinic<int>::edge"* %89, %"struct.Dinic<int>::edge"** %34, align 8
  %91 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %92 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %91, i32 1
  store %"struct.Dinic<int>::edge"* %92, %"struct.Dinic<int>::edge"** %34, align 8
  br label %250

; <label>:93:                                     ; preds = %77, %76
  %94 = load i32, i32* @x.616
  %95 = load i32, i32* @y.617
  %96 = add i32 %94, 27114798
  %97 = sub i32 %96, 1
  %98 = sub i32 %97, 27114798
  %99 = sub i32 %94, 1
  %100 = mul i32 %94, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %95, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  br i1 %118, label %120, label %367

; <label>:120:                                    ; preds = %93, %367
  %121 = landingpad { i8*, i32 }
          catch i8* null
  %122 = extractvalue { i8*, i32 } %121, 0
  store i8* %122, i8** %35, align 8
  %123 = extractvalue { i8*, i32 } %121, 1
  store i32 %123, i32* %36, align 4
  %124 = load i32, i32* @x.616
  %125 = load i32, i32* @y.617
  %126 = add i32 %124, 2131715825
  %127 = sub i32 %126, 1
  %128 = sub i32 %127, 2131715825
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = and i1 %132, %133
  %135 = xor i1 %132, %133
  %136 = or i1 %134, %135
  %137 = or i1 %132, %133
  br i1 %136, label %138, label %367

; <label>:138:                                    ; preds = %120
  br label %139

; <label>:139:                                    ; preds = %138
  %140 = load i8*, i8** %35, align 8
  %141 = call i8* @__cxa_begin_catch(i8* %140) #3
  %142 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %143 = icmp ne %"struct.Dinic<int>::edge"* %142, null
  br i1 %143, label %156, label %144

; <label>:144:                                    ; preds = %139
  %145 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %145, i32 0, i32 0
  %147 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %146 to %"class.std::allocator.20"*
  %148 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %149 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %37) #3
  %150 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %148, i64 %149
  invoke void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.20"* dereferenceable(1) %147, %"struct.Dinic<int>::edge"* %150)
          to label %151 unwind label %152

; <label>:151:                                    ; preds = %144
  br label %204

; <label>:152:                                    ; preds = %208, %204, %202, %144
  %153 = landingpad { i8*, i32 }
          cleanup
  %154 = extractvalue { i8*, i32 } %153, 0
  store i8* %154, i8** %35, align 8
  %155 = extractvalue { i8*, i32 } %153, 1
  store i32 %155, i32* %36, align 4
  invoke void @__cxa_end_catch()
          to label %209 unwind label %299

; <label>:156:                                    ; preds = %139
  %157 = load i32, i32* @x.616
  %158 = load i32, i32* @y.617
  %159 = sub i32 %157, -1366924793
  %160 = sub i32 %159, 1
  %161 = add i32 %160, -1366924793
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 false, true
  %170 = and i1 %167, false
  %171 = and i1 %165, %169
  %172 = and i1 %168, false
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 false, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  br i1 %181, label %183, label %371

; <label>:183:                                    ; preds = %156, %371
  %184 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %185 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %186 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %187 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %186) #3
  %188 = load i32, i32* @x.616
  %189 = load i32, i32* @y.617
  %190 = sub i32 %188, 1287286830
  %191 = sub i32 %190, 1
  %192 = add i32 %191, 1287286830
  %193 = sub i32 %188, 1
  %194 = mul i32 %188, %192
  %195 = urem i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = icmp slt i32 %189, 10
  %198 = and i1 %196, %197
  %199 = xor i1 %196, %197
  %200 = or i1 %198, %199
  %201 = or i1 %196, %197
  br i1 %200, label %202, label %371

; <label>:202:                                    ; preds = %183
  invoke void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"* %184, %"struct.Dinic<int>::edge"* %185, %"class.std::allocator.20"* dereferenceable(1) %187)
          to label %203 unwind label %152

; <label>:203:                                    ; preds = %202
  br label %204

; <label>:204:                                    ; preds = %203, %151
  %205 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %206 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %207 = load i64, i64* %32, align 8
  invoke void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %205, %"struct.Dinic<int>::edge"* %206, i64 %207)
          to label %208 unwind label %152

; <label>:208:                                    ; preds = %204
  invoke void @__cxa_rethrow() #12
          to label %302 unwind label %152

; <label>:209:                                    ; preds = %152
  %210 = load i32, i32* @x.616
  %211 = load i32, i32* @y.617
  %212 = sub i32 0, 1
  %213 = add i32 %210, %212
  %214 = sub i32 %210, 1
  %215 = mul i32 %210, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %211, 10
  %219 = xor i1 %217, true
  %220 = xor i1 %218, true
  %221 = xor i1 true, true
  %222 = and i1 %219, true
  %223 = and i1 %217, %221
  %224 = and i1 %220, true
  %225 = and i1 %218, %221
  %226 = or i1 %222, %223
  %227 = or i1 %224, %225
  %228 = xor i1 %226, %227
  %229 = or i1 %219, %220
  %230 = xor i1 %229, true
  %231 = or i1 true, %221
  %232 = and i1 %230, %231
  %233 = or i1 %228, %232
  %234 = or i1 %217, %218
  br i1 %233, label %235, label %376

; <label>:235:                                    ; preds = %209, %376
  %236 = load i32, i32* @x.616
  %237 = load i32, i32* @y.617
  %238 = sub i32 0, 1
  %239 = add i32 %236, %238
  %240 = sub i32 %236, 1
  %241 = mul i32 %236, %239
  %242 = urem i32 %241, 2
  %243 = icmp eq i32 %242, 0
  %244 = icmp slt i32 %237, 10
  %245 = and i1 %243, %244
  %246 = xor i1 %243, %244
  %247 = or i1 %245, %246
  %248 = or i1 %243, %244
  br i1 %247, label %249, label %376

; <label>:249:                                    ; preds = %235
  br label %294

; <label>:250:                                    ; preds = %90
  %251 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %252 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %251, i32 0, i32 0
  %253 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %252, i32 0, i32 0
  %254 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %253, align 8
  %255 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %256 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %255, i32 0, i32 0
  %257 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %256, i32 0, i32 1
  %258 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %257, align 8
  %259 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %260 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %259) #3
  call void @_ZSt8_DestroyIPN5DinicIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.Dinic<int>::edge"* %254, %"struct.Dinic<int>::edge"* %258, %"class.std::allocator.20"* dereferenceable(1) %260)
  %261 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %262 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %263 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %262, i32 0, i32 0
  %264 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %263, i32 0, i32 0
  %265 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %264, align 8
  %266 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %267 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %266, i32 0, i32 0
  %268 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %267, i32 0, i32 2
  %269 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %268, align 8
  %270 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %271 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %270, i32 0, i32 0
  %272 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %271, i32 0, i32 0
  %273 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %272, align 8
  %274 = ptrtoint %"struct.Dinic<int>::edge"* %269 to i64
  %275 = ptrtoint %"struct.Dinic<int>::edge"* %273 to i64
  %276 = sub i64 0, %275
  %277 = add i64 %274, %276
  %278 = sub i64 %274, %275
  %279 = sdiv exact i64 %277, 12
  call void @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.19"* %261, %"struct.Dinic<int>::edge"* %265, i64 %279)
  %280 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %281 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %282 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %281, i32 0, i32 0
  %283 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %282, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %280, %"struct.Dinic<int>::edge"** %283, align 8
  %284 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %285 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %286 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %285, i32 0, i32 0
  %287 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %286, i32 0, i32 1
  store %"struct.Dinic<int>::edge"* %284, %"struct.Dinic<int>::edge"** %287, align 8
  %288 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %289 = load i64, i64* %32, align 8
  %290 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %288, i64 %289
  %291 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %292 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %291, i32 0, i32 0
  %293 = getelementptr inbounds %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %292, i32 0, i32 2
  store %"struct.Dinic<int>::edge"* %290, %"struct.Dinic<int>::edge"** %293, align 8
  ret void

; <label>:294:                                    ; preds = %249
  %295 = load i8*, i8** %35, align 8
  %296 = load i32, i32* %36, align 4
  %297 = insertvalue { i8*, i32 } undef, i8* %295, 0
  %298 = insertvalue { i8*, i32 } %297, i32 %296, 1
  resume { i8*, i32 } %298

; <label>:299:                                    ; preds = %152
  %300 = landingpad { i8*, i32 }
          catch i8* null
  %301 = extractvalue { i8*, i32 } %300, 0
  call void @__clang_call_terminate(i8* %301) #10
  unreachable

; <label>:302:                                    ; preds = %208
  %303 = load i32, i32* @x.616
  %304 = load i32, i32* @y.617
  %305 = sub i32 %303, 1996236676
  %306 = sub i32 %305, 1
  %307 = add i32 %306, 1996236676
  %308 = sub i32 %303, 1
  %309 = mul i32 %303, %307
  %310 = urem i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = icmp slt i32 %304, 10
  %313 = and i1 %311, %312
  %314 = xor i1 %311, %312
  %315 = or i1 %313, %314
  %316 = or i1 %311, %312
  br i1 %315, label %317, label %377

; <label>:317:                                    ; preds = %302, %377
  %318 = load i32, i32* @x.616
  %319 = load i32, i32* @y.617
  %320 = add i32 %318, -269340310
  %321 = sub i32 %320, 1
  %322 = sub i32 %321, -269340310
  %323 = sub i32 %318, 1
  %324 = mul i32 %318, %322
  %325 = urem i32 %324, 2
  %326 = icmp eq i32 %325, 0
  %327 = icmp slt i32 %319, 10
  %328 = xor i1 %326, true
  %329 = xor i1 %327, true
  %330 = xor i1 false, true
  %331 = and i1 %328, false
  %332 = and i1 %326, %330
  %333 = and i1 %329, false
  %334 = and i1 %327, %330
  %335 = or i1 %331, %332
  %336 = or i1 %333, %334
  %337 = xor i1 %335, %336
  %338 = or i1 %328, %329
  %339 = xor i1 %338, true
  %340 = or i1 false, %330
  %341 = and i1 %339, %340
  %342 = or i1 %337, %341
  %343 = or i1 %326, %327
  br i1 %342, label %344, label %377

; <label>:344:                                    ; preds = %317
  unreachable

; <label>:345:                                    ; preds = %29, %2
  %346 = alloca %"class.std::vector.18"*, align 8
  %347 = alloca %"struct.Dinic<int>::edge"*, align 8
  %348 = alloca i64, align 8
  %349 = alloca %"struct.Dinic<int>::edge"*, align 8
  %350 = alloca %"struct.Dinic<int>::edge"*, align 8
  %351 = alloca i8*
  %352 = alloca i32
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %346, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %347, align 8
  %353 = load %"class.std::vector.18"*, %"class.std::vector.18"** %346, align 8
  %354 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.18"* %353, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str, i32 0, i32 0))
  store i64 %354, i64* %348, align 8
  %355 = bitcast %"class.std::vector.18"* %353 to %"struct.std::_Vector_base.19"*
  %356 = load i64, i64* %348, align 8
  %357 = call %"struct.Dinic<int>::edge"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.19"* %355, i64 %356)
  store %"struct.Dinic<int>::edge"* %357, %"struct.Dinic<int>::edge"** %349, align 8
  %358 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %349, align 8
  store %"struct.Dinic<int>::edge"* %358, %"struct.Dinic<int>::edge"** %350, align 8
  %359 = bitcast %"class.std::vector.18"* %353 to %"struct.std::_Vector_base.19"*
  %360 = getelementptr inbounds %"struct.std::_Vector_base.19", %"struct.std::_Vector_base.19"* %359, i32 0, i32 0
  %361 = bitcast %"struct.std::_Vector_base<Dinic<int>::edge, std::allocator<Dinic<int>::edge> >::_Vector_impl"* %360 to %"class.std::allocator.20"*
  %362 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %349, align 8
  %363 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %353) #3
  %364 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %362, i64 %363
  %365 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %347, align 8
  %366 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12) %365) #3
  br label %29

; <label>:367:                                    ; preds = %120, %93
  %368 = landingpad { i8*, i32 }
          catch i8* null
  %369 = extractvalue { i8*, i32 } %368, 0
  store i8* %369, i8** %35, align 8
  %370 = extractvalue { i8*, i32 } %368, 1
  store i32 %370, i32* %36, align 4
  br label %120

; <label>:371:                                    ; preds = %183, %156
  %372 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %33, align 8
  %373 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %34, align 8
  %374 = bitcast %"class.std::vector.18"* %37 to %"struct.std::_Vector_base.19"*
  %375 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %374) #3
  br label %183

; <label>:376:                                    ; preds = %235, %209
  br label %235

; <label>:377:                                    ; preds = %317, %302
  br label %317
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE9constructIS3_JRKS3_EEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"* dereferenceable(12)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %4, align 8
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %9 = bitcast %"struct.Dinic<int>::edge"* %8 to i8*
  %10 = bitcast i8* %9 to %"struct.Dinic<int>::edge"*
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %12 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12) %11) #3
  %13 = bitcast %"struct.Dinic<int>::edge"* %10 to i8*
  %14 = bitcast %"struct.Dinic<int>::edge"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 12, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZSt7forwardIRKN5DinicIiE4edgeEEOT_RNSt16remove_referenceIS5_E4typeE(%"struct.Dinic<int>::edge"* dereferenceable(12)) #5 comdat {
  %2 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %2, align 8
  %3 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2, align 8
  ret %"struct.Dinic<int>::edge"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.18"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i64
  %7 = alloca i64
  %8 = alloca %"class.std::vector.18"*
  %9 = alloca %"class.std::vector.18"*, align 8
  %10 = alloca i64, align 8
  %11 = alloca i8*, align 8
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %9, align 8
  store i64 %1, i64* %10, align 8
  store i8* %2, i8** %11, align 8
  %14 = load %"class.std::vector.18"*, %"class.std::vector.18"** %9, align 8
  store %"class.std::vector.18"* %14, %"class.std::vector.18"** %8
  %15 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %16 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.18"* %15) #3
  %17 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %18 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %17) #3
  %19 = sub i64 %16, 4810540405971122589
  %20 = sub i64 %19, %18
  %21 = add i64 %20, 4810540405971122589
  %22 = sub i64 %16, %18
  store i64 %21, i64* %7
  %23 = load i64, i64* %10, align 8
  store i64 %23, i64* %6
  %24 = alloca i32
  store i32 1569268116, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %227
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 1569268116, label %29
    i32 1698129643, label %34
    i32 966966510, label %62
    i32 -1247162157, label %79
    i32 -1887714523, label %80
    i32 1017323343, label %96
    i32 530985343, label %125
    i32 -1028119148, label %128
    i32 -1401657480, label %134
    i32 -1229579457, label %149
    i32 -1819562377, label %179
    i32 1197281783, label %181
    i32 -495225312, label %183
    i32 -1027490694, label %185
    i32 2125081706, label %187
    i32 2122779661, label %224
  ]

; <label>:28:                                     ; preds = %26
  br label %227

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %7
  %31 = load volatile i64, i64* %6
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 1698129643, i32 -1887714523
  store i32 %33, i32* %24
  br label %227

; <label>:34:                                     ; preds = %26
  %35 = load i32, i32* @x.622
  %36 = load i32, i32* @y.623
  %37 = add i32 %35, 828034774
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 828034774
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 966966510, i32 -1027490694
  store i32 %61, i32* %24
  br label %227

; <label>:62:                                     ; preds = %26
  %63 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %63) #12
  %64 = load i32, i32* @x.622
  %65 = load i32, i32* @y.623
  %66 = sub i32 %64, -1947004082
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -1947004082
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 -1247162157, i32 -1027490694
  store i32 %78, i32* %24
  br label %227

; <label>:79:                                     ; preds = %26
  unreachable

; <label>:80:                                     ; preds = %26
  %81 = load i32, i32* @x.622
  %82 = load i32, i32* @y.623
  %83 = sub i32 %81, -1967868859
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -1967868859
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 1017323343, i32 2125081706
  store i32 %95, i32* %24
  br label %227

; <label>:96:                                     ; preds = %26
  %97 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %98 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %97) #3
  %99 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %100 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %99) #3
  store i64 %100, i64* %13, align 8
  %101 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %98, 704205596658223922
  %104 = add i64 %103, %102
  %105 = sub i64 %104, 704205596658223922
  %106 = add i64 %98, %102
  store i64 %105, i64* %12, align 8
  %107 = load i64, i64* %12, align 8
  %108 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %109 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %108) #3
  %110 = icmp ult i64 %107, %109
  store i1 %110, i1* %5
  %111 = load i32, i32* @x.622
  %112 = load i32, i32* @y.623
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 530985343, i32 2125081706
  store i32 %124, i32* %24
  br label %227

; <label>:125:                                    ; preds = %26
  %126 = load volatile i1, i1* %5
  %127 = select i1 %126, i32 -1401657480, i32 -1028119148
  store i32 %127, i32* %24
  br label %227

; <label>:128:                                    ; preds = %26
  %129 = load i64, i64* %12, align 8
  %130 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %131 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.18"* %130) #3
  %132 = icmp ugt i64 %129, %131
  %133 = select i1 %132, i32 -1401657480, i32 1197281783
  store i32 %133, i32* %24
  br label %227

; <label>:134:                                    ; preds = %26
  %135 = load i32, i32* @x.622
  %136 = load i32, i32* @y.623
  %137 = sub i32 0, 1
  %138 = add i32 %135, %137
  %139 = sub i32 %135, 1
  %140 = mul i32 %135, %138
  %141 = urem i32 %140, 2
  %142 = icmp eq i32 %141, 0
  %143 = icmp slt i32 %136, 10
  %144 = and i1 %142, %143
  %145 = xor i1 %142, %143
  %146 = or i1 %144, %145
  %147 = or i1 %142, %143
  %148 = select i1 %146, i32 -1229579457, i32 2122779661
  store i32 %148, i32* %24
  br label %227

; <label>:149:                                    ; preds = %26
  %150 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %151 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.18"* %150) #3
  store i64 %151, i64* %4
  %152 = load i32, i32* @x.622
  %153 = load i32, i32* @y.623
  %154 = sub i32 %152, -436914735
  %155 = sub i32 %154, 1
  %156 = add i32 %155, -436914735
  %157 = sub i32 %152, 1
  %158 = mul i32 %152, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %153, 10
  %162 = xor i1 %160, true
  %163 = xor i1 %161, true
  %164 = xor i1 true, true
  %165 = and i1 %162, true
  %166 = and i1 %160, %164
  %167 = and i1 %163, true
  %168 = and i1 %161, %164
  %169 = or i1 %165, %166
  %170 = or i1 %167, %168
  %171 = xor i1 %169, %170
  %172 = or i1 %162, %163
  %173 = xor i1 %172, true
  %174 = or i1 true, %164
  %175 = and i1 %173, %174
  %176 = or i1 %171, %175
  %177 = or i1 %160, %161
  %178 = select i1 %176, i32 -1819562377, i32 2122779661
  store i32 %178, i32* %24
  br label %227

; <label>:179:                                    ; preds = %26
  store i32 -495225312, i32* %24
  %180 = load volatile i64, i64* %4
  store i64 %180, i64* %25
  br label %227

; <label>:181:                                    ; preds = %26
  %182 = load i64, i64* %12, align 8
  store i32 -495225312, i32* %24
  store i64 %182, i64* %25
  br label %227

; <label>:183:                                    ; preds = %26
  %184 = load i64, i64* %25
  ret i64 %184

; <label>:185:                                    ; preds = %26
  %186 = load i8*, i8** %11, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %186) #12
  store i32 966966510, i32* %24
  br label %227

; <label>:187:                                    ; preds = %26
  %188 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %189 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %188) #3
  %190 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %191 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %190) #3
  store i64 %191, i64* %13, align 8
  %192 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %13, i64* dereferenceable(8) %10)
  %193 = load i64, i64* %192, align 8
  %194 = add i64 %189, 18943726518623293
  %195 = sub i64 %194, %193
  %196 = sub i64 %195, 18943726518623293
  %197 = sub i64 %189, %193
  %198 = mul i64 %196, %193
  %199 = sub i64 0, %189
  %200 = add i64 0, %199
  %201 = sub i64 0, %189
  %202 = sub i64 0, %193
  %203 = sub i64 %200, %202
  %204 = add i64 %200, %193
  %205 = sub i64 0, %189
  %206 = add i64 0, %205
  %207 = sub i64 0, %189
  %208 = add i64 %206, 5093294612053428500
  %209 = add i64 %208, %193
  %210 = sub i64 %209, 5093294612053428500
  %211 = add i64 %206, %193
  %212 = sub i64 %189, -2074856853969834117
  %213 = sub i64 %212, %193
  %214 = add i64 %213, -2074856853969834117
  %215 = sub i64 %189, %193
  %216 = mul i64 %214, %193
  %217 = sub i64 0, %193
  %218 = sub i64 %189, %217
  %219 = add i64 %189, %193
  store i64 %218, i64* %12, align 8
  %220 = load i64, i64* %12, align 8
  %221 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %222 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %221) #3
  %223 = icmp ult i64 %220, %222
  store i32 1017323343, i32* %24
  br label %227

; <label>:224:                                    ; preds = %26
  %225 = load volatile %"class.std::vector.18"*, %"class.std::vector.18"** %8
  %226 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.18"* %225) #3
  store i32 -1229579457, i32* %24
  br label %227

; <label>:227:                                    ; preds = %224, %187, %185, %181, %179, %149, %134, %128, %125, %96, %80, %62, %34, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN5DinicIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = alloca %"class.std::move_iterator.28", align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %6, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %12 = call %"struct.Dinic<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5DinicIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Dinic<int>::edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %12, %"struct.Dinic<int>::edge"** %13, align 8
  %14 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %15 = call %"struct.Dinic<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5DinicIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Dinic<int>::edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %15, %"struct.Dinic<int>::edge"** %16, align 8
  %17 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %18 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %20 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  %22 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %21, align 8
  %23 = call %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5DinicIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Dinic<int>::edge"* %20, %"struct.Dinic<int>::edge"* %22, %"struct.Dinic<int>::edge"* %17, %"class.std::allocator.20"* dereferenceable(1) %18)
  ret %"struct.Dinic<int>::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.20"* dereferenceable(1), %"struct.Dinic<int>::edge"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.626
  %6 = load i32, i32* @y.627
  %7 = add i32 %5, -169790425
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -169790425
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1691995310, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1691995310, label %19
    i32 1043288847, label %27
    i32 -815835299, label %60
    i32 2033761304, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1043288847, i32 2033761304
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.20"*, align 8
  %29 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %29, align 8
  %30 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %31 = bitcast %"class.std::allocator.20"* %30 to %"class.__gnu_cxx::new_allocator.21"*
  %32 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %29, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %31, %"struct.Dinic<int>::edge"* %32)
  %33 = load i32, i32* @x.626
  %34 = load i32, i32* @y.627
  %35 = add i32 %33, -1984643465
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1984643465
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -815835299, i32 2033761304
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca %"class.std::allocator.20"*, align 8
  %63 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %62, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %63, align 8
  %64 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %62, align 8
  %65 = bitcast %"class.std::allocator.20"* %64 to %"class.__gnu_cxx::new_allocator.21"*
  %66 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %63, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.21"* %65, %"struct.Dinic<int>::edge"* %66)
  store i32 1043288847, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.18"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.18"*, align 8
  store %"class.std::vector.18"* %0, %"class.std::vector.18"** %2, align 8
  %3 = load %"class.std::vector.18"*, %"class.std::vector.18"** %2, align 8
  %4 = bitcast %"class.std::vector.18"* %3 to %"struct.std::_Vector_base.19"*
  %5 = call dereferenceable(1) %"class.std::allocator.20"* @_ZNKSt12_Vector_baseIN5DinicIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.19"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.20"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN5DinicIiE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.20"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.630
  %6 = load i32, i32* @y.631
  %7 = add i32 %5, 1068995010
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1068995010
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 909790201, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 909790201, label %19
    i32 713650169, label %27
    i32 -1244057467, label %47
    i32 1927338174, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 713650169, i32 1927338174
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %28, align 8
  %29 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %28, align 8
  %30 = bitcast %"class.std::allocator.20"* %29 to %"class.__gnu_cxx::new_allocator.21"*
  %31 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.630
  %33 = load i32, i32* @y.631
  %34 = add i32 %32, 2063070087
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 2063070087
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1244057467, i32 1927338174
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::allocator.20"*, align 8
  store %"class.std::allocator.20"* %0, %"class.std::allocator.20"** %50, align 8
  %51 = load %"class.std::allocator.20"*, %"class.std::allocator.20"** %50, align 8
  %52 = bitcast %"class.std::allocator.20"* %51 to %"class.__gnu_cxx::new_allocator.21"*
  %53 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.21"* %52) #3
  store i32 713650169, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN5DinicIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"class.std::allocator.20"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"class.std::move_iterator.28", align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.20"*, align 8
  %9 = alloca %"class.std::move_iterator.28", align 8
  %10 = alloca %"class.std::move_iterator.28", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %6, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %12, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %7, align 8
  store %"class.std::allocator.20"* %3, %"class.std::allocator.20"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.28"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.28"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.28"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %9, i32 0, i32 0
  %19 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %10, i32 0, i32 0
  %21 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %20, align 8
  %22 = call %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_(%"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"* %21, %"struct.Dinic<int>::edge"* %17)
  ret %"struct.Dinic<int>::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN5DinicIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.28", align 8
  %3 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %3, align 8
  %4 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %3, align 8
  call void @_ZNSt13move_iteratorIPN5DinicIiE4edgeEEC2ES3_(%"class.std::move_iterator.28"* %2, %"struct.Dinic<int>::edge"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %2, i32 0, i32 0
  %6 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  ret %"struct.Dinic<int>::edge"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.636
  %8 = load i32, i32* @y.637
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -861605365, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %107
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -861605365, label %20
    i32 644746811, label %40
    i32 -129620599, label %86
    i32 1291754826, label %88
  ]

; <label>:19:                                     ; preds = %17
  br label %107

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 644746811, i32 1291754826
  store i32 %39, i32* %16
  br label %107

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.28", align 8
  %42 = alloca %"class.std::move_iterator.28", align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.28", align 8
  %46 = alloca %"class.std::move_iterator.28", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %41, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %42, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %48, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.28"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.28"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.28"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.28"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %45, i32 0, i32 0
  %55 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %46, i32 0, i32 0
  %57 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %56, align 8
  %58 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5DinicIiE4edgeEES6_EET0_T_S9_S8_(%"struct.Dinic<int>::edge"* %55, %"struct.Dinic<int>::edge"* %57, %"struct.Dinic<int>::edge"* %53)
  store %"struct.Dinic<int>::edge"* %58, %"struct.Dinic<int>::edge"** %4
  %59 = load i32, i32* @x.636
  %60 = load i32, i32* @y.637
  %61 = add i32 %59, 940988597
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 940988597
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 false, true
  %72 = and i1 %69, false
  %73 = and i1 %67, %71
  %74 = and i1 %70, false
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 false, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 -129620599, i32 1291754826
  store i32 %85, i32* %16
  br label %107

; <label>:86:                                     ; preds = %17
  %87 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %87

; <label>:88:                                     ; preds = %17
  %89 = alloca %"class.std::move_iterator.28", align 8
  %90 = alloca %"class.std::move_iterator.28", align 8
  %91 = alloca %"struct.Dinic<int>::edge"*, align 8
  %92 = alloca i8, align 1
  %93 = alloca %"class.std::move_iterator.28", align 8
  %94 = alloca %"class.std::move_iterator.28", align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %89, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %95, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %90, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %96, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %91, align 8
  store i8 1, i8* %92, align 1
  %97 = bitcast %"class.std::move_iterator.28"* %93 to i8*
  %98 = bitcast %"class.std::move_iterator.28"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.std::move_iterator.28"* %94 to i8*
  %100 = bitcast %"class.std::move_iterator.28"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %91, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %93, i32 0, i32 0
  %103 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %102, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %94, i32 0, i32 0
  %105 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %104, align 8
  %106 = call %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5DinicIiE4edgeEES6_EET0_T_S9_S8_(%"struct.Dinic<int>::edge"* %103, %"struct.Dinic<int>::edge"* %105, %"struct.Dinic<int>::edge"* %101)
  store i32 644746811, i32* %16
  br label %107

; <label>:107:                                    ; preds = %88, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPN5DinicIiE4edgeEES6_EET0_T_S9_S8_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.28", align 8
  %8 = alloca %"class.std::move_iterator.28", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %10, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.28"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.28"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.28"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %7, i32 0, i32 0
  %17 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %8, i32 0, i32 0
  %19 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %18, align 8
  %20 = call %"struct.Dinic<int>::edge"* @_ZSt4copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_(%"struct.Dinic<int>::edge"* %17, %"struct.Dinic<int>::edge"* %19, %"struct.Dinic<int>::edge"* %15)
  ret %"struct.Dinic<int>::edge"* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt4copyISt13move_iteratorIPN5DinicIiE4edgeEES4_ET0_T_S7_S6_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"class.std::move_iterator.28", align 8
  %5 = alloca %"class.std::move_iterator.28", align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"class.std::move_iterator.28", align 8
  %8 = alloca %"class.std::move_iterator.28", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %4, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %10, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  %11 = bitcast %"class.std::move_iterator.28"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.28"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %7, i32 0, i32 0
  %14 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %13, align 8
  %15 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5DinicIiE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Dinic<int>::edge"* %14)
  %16 = bitcast %"class.std::move_iterator.28"* %8 to i8*
  %17 = bitcast %"class.std::move_iterator.28"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %8, i32 0, i32 0
  %19 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %18, align 8
  %20 = call %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5DinicIiE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Dinic<int>::edge"* %19)
  %21 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %22 = call %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"* %15, %"struct.Dinic<int>::edge"* %20, %"struct.Dinic<int>::edge"* %21)
  ret %"struct.Dinic<int>::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt14__copy_move_a2ILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  %5 = alloca %"struct.Dinic<int>::edge"*, align 8
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %5, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %6, align 8
  %7 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  %8 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %7)
  %9 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %5, align 8
  %10 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %9)
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %12 = call %"struct.Dinic<int>::edge"* @_ZSt12__niter_baseIPN5DinicIiE4edgeEENSt11_Niter_baseIT_E13iterator_typeES5_(%"struct.Dinic<int>::edge"* %11)
  %13 = call %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"* %8, %"struct.Dinic<int>::edge"* %10, %"struct.Dinic<int>::edge"* %12)
  ret %"struct.Dinic<int>::edge"* %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt12__miter_baseISt13move_iteratorIPN5DinicIiE4edgeEEENSt11_Miter_baseIT_E13iterator_typeES7_(%"struct.Dinic<int>::edge"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.28", align 8
  %3 = alloca %"class.std::move_iterator.28", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %2, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %4, align 8
  %5 = bitcast %"class.std::move_iterator.28"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.28"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %8 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %9 = call %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5DinicIiE4edgeEELb1EE7_S_baseES5_(%"struct.Dinic<int>::edge"* %8)
  ret %"struct.Dinic<int>::edge"* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZSt13__copy_move_aILb1EPN5DinicIiE4edgeES3_ET1_T0_S5_S4_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.646
  %8 = load i32, i32* @y.647
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 1009625158, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %75
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1009625158, label %20
    i32 -989094274, label %40
    i32 1955388133, label %64
    i32 -1615253081, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %75

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -989094274, i32 -1615253081
  store i32 %39, i32* %16
  br label %75

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.Dinic<int>::edge"*, align 8
  %42 = alloca %"struct.Dinic<int>::edge"*, align 8
  %43 = alloca %"struct.Dinic<int>::edge"*, align 8
  %44 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %41, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %42, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %45 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %41, align 8
  %46 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %42, align 8
  %47 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %43, align 8
  %48 = call %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"* %45, %"struct.Dinic<int>::edge"* %46, %"struct.Dinic<int>::edge"* %47)
  store %"struct.Dinic<int>::edge"* %48, %"struct.Dinic<int>::edge"** %4
  %49 = load i32, i32* @x.646
  %50 = load i32, i32* @y.647
  %51 = sub i32 %49, 1692826554
  %52 = sub i32 %51, 1
  %53 = add i32 %52, 1692826554
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1955388133, i32 -1615253081
  store i32 %63, i32* %16
  br label %75

; <label>:64:                                     ; preds = %17
  %65 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"struct.Dinic<int>::edge"*, align 8
  %68 = alloca %"struct.Dinic<int>::edge"*, align 8
  %69 = alloca %"struct.Dinic<int>::edge"*, align 8
  %70 = alloca i8, align 1
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %67, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %68, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %69, align 8
  store i8 1, i8* %70, align 1
  %71 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %67, align 8
  %72 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %68, align 8
  %73 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %69, align 8
  %74 = call %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"* %71, %"struct.Dinic<int>::edge"* %72, %"struct.Dinic<int>::edge"* %73)
  store i32 -989094274, i32* %16
  br label %75

; <label>:75:                                     ; preds = %66, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIN5DinicIiE4edgeEEEPT_PKS6_S9_S7_(%"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %4 = alloca %"struct.Dinic<int>::edge"*
  %5 = alloca i64
  %6 = alloca %"struct.Dinic<int>::edge"*, align 8
  %7 = alloca %"struct.Dinic<int>::edge"*, align 8
  %8 = alloca %"struct.Dinic<int>::edge"*, align 8
  %9 = alloca i64, align 8
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %6, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %7, align 8
  store %"struct.Dinic<int>::edge"* %2, %"struct.Dinic<int>::edge"** %8, align 8
  %10 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %7, align 8
  %11 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %12 = ptrtoint %"struct.Dinic<int>::edge"* %10 to i64
  %13 = ptrtoint %"struct.Dinic<int>::edge"* %11 to i64
  %14 = sub i64 0, %13
  %15 = add i64 %12, %14
  %16 = sub i64 %12, %13
  %17 = sdiv exact i64 %15, 12
  store i64 %17, i64* %9, align 8
  %18 = load i64, i64* %9, align 8
  store i64 %18, i64* %5
  %19 = alloca i32
  store i32 521840747, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %74
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 521840747, label %23
    i32 -30381418, label %27
    i32 -1208398130, label %34
    i32 1538436269, label %50
    i32 1057675790, label %68
    i32 1278878144, label %70
  ]

; <label>:22:                                     ; preds = %20
  br label %74

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %5
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -30381418, i32 -1208398130
  store i32 %26, i32* %19
  br label %74

; <label>:27:                                     ; preds = %20
  %28 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %29 = bitcast %"struct.Dinic<int>::edge"* %28 to i8*
  %30 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %6, align 8
  %31 = bitcast %"struct.Dinic<int>::edge"* %30 to i8*
  %32 = load i64, i64* %9, align 8
  %33 = mul i64 12, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 4, i1 false)
  store i32 -1208398130, i32* %19
  br label %74

; <label>:34:                                     ; preds = %20
  %35 = load i32, i32* @x.648
  %36 = load i32, i32* @y.649
  %37 = add i32 %35, -1513651601
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -1513651601
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1538436269, i32 1278878144
  store i32 %49, i32* %19
  br label %74

; <label>:50:                                     ; preds = %20
  %51 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %52 = load i64, i64* %9, align 8
  %53 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %51, i64 %52
  store %"struct.Dinic<int>::edge"* %53, %"struct.Dinic<int>::edge"** %4
  %54 = load i32, i32* @x.648
  %55 = load i32, i32* @y.649
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 1057675790, i32 1278878144
  store i32 %67, i32* %19
  br label %74

; <label>:68:                                     ; preds = %20
  %69 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4
  ret %"struct.Dinic<int>::edge"* %69

; <label>:70:                                     ; preds = %20
  %71 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %8, align 8
  %72 = load i64, i64* %9, align 8
  %73 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %71, i64 %72
  store i32 1538436269, i32* %19
  br label %74

; <label>:74:                                     ; preds = %70, %50, %34, %27, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNSt10_Iter_baseISt13move_iteratorIPN5DinicIiE4edgeEELb1EE7_S_baseES5_(%"struct.Dinic<int>::edge"*) #0 comdat align 2 {
  %2 = alloca %"struct.Dinic<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.650
  %6 = load i32, i32* @y.651
  %7 = add i32 %5, 308132742
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 308132742
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -778695222, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -778695222, label %19
    i32 -1121693350, label %39
    i32 -2032166156, label %57
    i32 83343564, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1121693350, i32 83343564
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.28", align 8
  %41 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %40, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %41, align 8
  %42 = call %"struct.Dinic<int>::edge"* @_ZNKSt13move_iteratorIPN5DinicIiE4edgeEE4baseEv(%"class.std::move_iterator.28"* %40)
  store %"struct.Dinic<int>::edge"* %42, %"struct.Dinic<int>::edge"** %2
  %43 = load i32, i32* @x.650
  %44 = load i32, i32* @y.651
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -2032166156, i32 83343564
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %2
  ret %"struct.Dinic<int>::edge"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::move_iterator.28", align 8
  %61 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %60, i32 0, i32 0
  store %"struct.Dinic<int>::edge"* %0, %"struct.Dinic<int>::edge"** %61, align 8
  %62 = call %"struct.Dinic<int>::edge"* @_ZNKSt13move_iteratorIPN5DinicIiE4edgeEE4baseEv(%"class.std::move_iterator.28"* %60)
  store i32 -1121693350, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.Dinic<int>::edge"* @_ZNKSt13move_iteratorIPN5DinicIiE4edgeEE4baseEv(%"class.std::move_iterator.28"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.28"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %2, align 8
  %3 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %3, i32 0, i32 0
  %5 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  ret %"struct.Dinic<int>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN5DinicIiE4edgeEEC2ES3_(%"class.std::move_iterator.28"*, %"struct.Dinic<int>::edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.28"*, align 8
  %4 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.std::move_iterator.28"* %0, %"class.std::move_iterator.28"** %3, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %4, align 8
  %5 = load %"class.std::move_iterator.28"*, %"class.std::move_iterator.28"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.28", %"class.std::move_iterator.28"* %5, i32 0, i32 0
  %7 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %4, align 8
  store %"struct.Dinic<int>::edge"* %7, %"struct.Dinic<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN5DinicIiE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.21"*, %"struct.Dinic<int>::edge"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.656
  %6 = load i32, i32* @y.657
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1628365644, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %75
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1628365644, label %18
    i32 1757831468, label %38
    i32 1648175936, label %69
    i32 -1394167443, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %75

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1757831468, i32 -1394167443
  store i32 %37, i32* %14
  br label %75

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %40 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %39, align 8
  %42 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %40, align 8
  %43 = load i32, i32* @x.656
  %44 = load i32, i32* @y.657
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 1648175936, i32 -1394167443
  store i32 %68, i32* %14
  br label %75

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.__gnu_cxx::new_allocator.21"*, align 8
  %72 = alloca %"struct.Dinic<int>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.21"* %0, %"class.__gnu_cxx::new_allocator.21"** %71, align 8
  store %"struct.Dinic<int>::edge"* %1, %"struct.Dinic<int>::edge"** %72, align 8
  %73 = load %"class.__gnu_cxx::new_allocator.21"*, %"class.__gnu_cxx::new_allocator.21"** %71, align 8
  %74 = load %"struct.Dinic<int>::edge"*, %"struct.Dinic<int>::edge"** %72, align 8
  store i32 1757831468, i32* %14
  br label %75

; <label>:75:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %2, align 8
  %3 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %2, align 8
  %4 = bitcast %"class.std::allocator.31"* %3 to %"class.__gnu_cxx::new_allocator.32"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.32"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.29"*, i64, i32* dereferenceable(4), %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.29"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.31"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.31"* %3, %"class.std::allocator.31"** %8, align 8
  %11 = load %"class.std::vector.29"*, %"class.std::vector.29"** %5, align 8
  %12 = bitcast %"class.std::vector.29"* %11 to %"struct.std::_Vector_base.30"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.30"* %12, i64 %13, %"class.std::allocator.31"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.29"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.29"* %11 to %"struct.std::_Vector_base.30"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.30"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i32, i32* @x.660
  %25 = load i32, i32* @y.661
  %26 = sub i32 %24, 1700206585
  %27 = sub i32 %26, 1
  %28 = add i32 %27, 1700206585
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %58

; <label>:38:                                     ; preds = %23, %58
  %39 = load i8*, i8** %9, align 8
  %40 = load i32, i32* %10, align 4
  %41 = insertvalue { i8*, i32 } undef, i8* %39, 0
  %42 = insertvalue { i8*, i32 } %41, i32 %40, 1
  %43 = load i32, i32* @x.660
  %44 = load i32, i32* @y.661
  %45 = sub i32 %43, 773306113
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 773306113
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  br i1 %55, label %57, label %58

; <label>:57:                                     ; preds = %38
  resume { i8*, i32 } %42

; <label>:58:                                     ; preds = %38, %23
  %59 = load i8*, i8** %9, align 8
  %60 = load i32, i32* %10, align 4
  %61 = insertvalue { i8*, i32 } undef, i8* %59, 0
  %62 = insertvalue { i8*, i32 } %61, i32 %60, 1
  br label %38
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.31"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.662
  %5 = load i32, i32* @y.663
  %6 = sub i32 %4, -1705540102
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1705540102
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -590008229, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -590008229, label %18
    i32 -328485181, label %38
    i32 -1023763958, label %68
    i32 1465635074, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -328485181, i32 1465635074
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %39, align 8
  %40 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %39, align 8
  %41 = bitcast %"class.std::allocator.31"* %40 to %"class.__gnu_cxx::new_allocator.32"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.32"* %41) #3
  %42 = load i32, i32* @x.662
  %43 = load i32, i32* @y.663
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1023763958, i32 1465635074
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %70, align 8
  %71 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %70, align 8
  %72 = bitcast %"class.std::allocator.31"* %71 to %"class.__gnu_cxx::new_allocator.32"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.32"* %72) #3
  store i32 -328485181, i32* %14
  br label %73

; <label>:73:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.664
  %5 = load i32, i32* @y.665
  %6 = sub i32 %4, 1943393471
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1943393471
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 856389763, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 856389763, label %18
    i32 588538614, label %26
    i32 -115189704, label %44
    i32 844925701, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 588538614, i32 844925701
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %29)
  %30 = load i32, i32* @x.664
  %31 = load i32, i32* @y.665
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -115189704, i32 844925701
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %46, align 8
  %47 = load %"class.std::deque"*, %"class.std::deque"** %46, align 8
  %48 = bitcast %"class.std::deque"* %47 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %48)
  store i32 588538614, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  %4 = alloca %"struct.std::_Deque_iterator", align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %7) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %4, %"class.std::deque"* %7) #3
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %8) #3
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %7, %"struct.std::_Deque_iterator"* %3, %"struct.std::_Deque_iterator"* %4, %"class.std::allocator.31"* dereferenceable(1) %9)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %1
  %11 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %11) #3
  ret void

; <label>:12:                                     ; preds = %1
  %13 = landingpad { i8*, i32 }
          catch i8* null
  %14 = extractvalue { i8*, i32 } %13, 0
  store i8* %14, i8** %5, align 8
  %15 = extractvalue { i8*, i32 } %13, 1
  store i32 %15, i32* %6, align 4
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %16) #3
  br label %17

; <label>:17:                                     ; preds = %12
  %18 = load i32, i32* @x.668
  %19 = load i32, i32* @y.669
  %20 = sub i32 %18, 1678418242
  %21 = sub i32 %20, 1
  %22 = add i32 %21, 1678418242
  %23 = sub i32 %18, 1
  %24 = mul i32 %18, %22
  %25 = urem i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = icmp slt i32 %19, 10
  %28 = xor i1 %26, true
  %29 = xor i1 %27, true
  %30 = xor i1 true, true
  %31 = and i1 %28, true
  %32 = and i1 %26, %30
  %33 = and i1 %29, true
  %34 = and i1 %27, %30
  %35 = or i1 %31, %32
  %36 = or i1 %33, %34
  %37 = xor i1 %35, %36
  %38 = or i1 %28, %29
  %39 = xor i1 %38, true
  %40 = or i1 true, %30
  %41 = and i1 %39, %40
  %42 = or i1 %37, %41
  %43 = or i1 %26, %27
  br i1 %42, label %44, label %61

; <label>:44:                                     ; preds = %17, %61
  %45 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %45) #10
  %46 = load i32, i32* @x.668
  %47 = load i32, i32* @y.669
  %48 = add i32 %46, 942202588
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 942202588
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %61

; <label>:60:                                     ; preds = %44
  unreachable

; <label>:61:                                     ; preds = %44, %17
  %62 = load i8*, i8** %5, align 8
  call void @__clang_call_terminate(i8* %62) #10
  br label %44
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE4pushERKi(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"*, i64) #5 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.672
  %7 = load i32, i32* @y.673
  %8 = sub i32 %6, 590986801
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 590986801
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -738233070, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %76
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -738233070, label %20
    i32 1507740051, label %28
    i32 343644905, label %64
    i32 161224989, label %66
  ]

; <label>:19:                                     ; preds = %17
  br label %76

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1507740051, i32 161224989
  store i32 %27, i32* %16
  br label %76

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.29"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::vector.29"*, %"class.std::vector.29"** %29, align 8
  %32 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = load i64, i64* %30, align 8
  %37 = getelementptr inbounds i32, i32* %35, i64 %36
  store i32* %37, i32** %3
  %38 = load i32, i32* @x.672
  %39 = load i32, i32* @y.673
  %40 = sub i32 0, 1
  %41 = add i32 %38, %40
  %42 = sub i32 %38, 1
  %43 = mul i32 %38, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %39, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 false, true
  %50 = and i1 %47, false
  %51 = and i1 %45, %49
  %52 = and i1 %48, false
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 false, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  %63 = select i1 %61, i32 343644905, i32 161224989
  store i32 %63, i32* %16
  br label %76

; <label>:64:                                     ; preds = %17
  %65 = load volatile i32*, i32** %3
  ret i32* %65

; <label>:66:                                     ; preds = %17
  %67 = alloca %"class.std::vector.29"*, align 8
  %68 = alloca i64, align 8
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"class.std::vector.29"*, %"class.std::vector.29"** %67, align 8
  %70 = bitcast %"class.std::vector.29"* %69 to %"struct.std::_Vector_base.30"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %71, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = load i64, i64* %68, align 8
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 1507740051, i32* %16
  br label %76

; <label>:76:                                     ; preds = %66, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5queueIiSt5dequeIiSaIiEEE4sizeEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.674
  %6 = load i32, i32* @y.675
  %7 = add i32 %5, -655963732
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -655963732
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1062188900, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1062188900, label %19
    i32 -485564991, label %27
    i32 211270900, label %58
    i32 1782208402, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -485564991, i32 1782208402
  store i32 %26, i32* %15
  br label %65

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %28, align 8
  %29 = load %"class.std::queue"*, %"class.std::queue"** %28, align 8
  %30 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %29, i32 0, i32 0
  %31 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.674
  %33 = load i32, i32* @y.675
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 211270900, i32 1782208402
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i64, i64* %2
  ret i64 %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %61, align 8
  %62 = load %"class.std::queue"*, %"class.std::queue"** %61, align 8
  %63 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %62, i32 0, i32 0
  %64 = call i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"* %63) #3
  store i32 -485564991, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.676
  %6 = load i32, i32* @y.677
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 859666974, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 859666974, label %18
    i32 151514582, label %26
    i32 -713835246, label %46
    i32 -1823121356, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 151514582, i32 -1823121356
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %27, align 8
  %28 = load %"class.std::queue"*, %"class.std::queue"** %27, align 8
  %29 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %28, i32 0, i32 0
  %30 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %29) #3
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.676
  %32 = load i32, i32* @y.677
  %33 = add i32 %31, -1323914787
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -1323914787
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -713835246, i32 -1823121356
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %49, align 8
  %50 = load %"class.std::queue"*, %"class.std::queue"** %49, align 8
  %51 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %50, i32 0, i32 0
  %52 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %51) #3
  store i32 151514582, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN5DinicIiE3dfsEiiiRSt6vectorIiSaIiEES4_(%struct.Dinic*, i32, i32, i32, %"class.std::vector.29"* dereferenceable(24), %"class.std::vector.29"* dereferenceable(24)) #0 comdat align 2 {
  %7 = alloca i32
  %8 = alloca i32
  %9 = alloca %struct.Dinic*
  %10 = alloca i32, align 4
  %11 = alloca %struct.Dinic*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::vector.29"*, align 8
  %16 = alloca %"class.std::vector.29"*, align 8
  %17 = alloca i32*, align 8
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  store %struct.Dinic* %0, %struct.Dinic** %11, align 8
  store i32 %1, i32* %12, align 4
  store i32 %2, i32* %13, align 4
  store i32 %3, i32* %14, align 4
  store %"class.std::vector.29"* %4, %"class.std::vector.29"** %15, align 8
  store %"class.std::vector.29"* %5, %"class.std::vector.29"** %16, align 8
  %21 = load %struct.Dinic*, %struct.Dinic** %11, align 8
  store %struct.Dinic* %21, %struct.Dinic** %9
  %22 = load i32, i32* %12, align 4
  store i32 %22, i32* %8
  %23 = load i32, i32* %13, align 4
  store i32 %23, i32* %7
  %24 = alloca i32
  store i32 17964658, i32* %24
  br label %25

; <label>:25:                                     ; preds = %6, %329
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 17964658, label %28
    i32 -1056362400, label %33
    i32 389983488, label %61
    i32 -407232547, label %89
    i32 1347945707, label %90
    i32 -998054293, label %95
    i32 -1286075831, label %107
    i32 -690877545, label %133
    i32 -44203533, label %151
    i32 -420537405, label %152
    i32 -666426466, label %164
    i32 811251218, label %218
    i32 -321062890, label %245
    i32 992459225, label %260
    i32 885495774, label %261
    i32 -1246664240, label %267
    i32 -1496887202, label %295
    i32 756214757, label %322
    i32 -1169442727, label %323
    i32 -1155326693, label %325
    i32 169119243, label %327
    i32 501813383, label %328
  ]

; <label>:27:                                     ; preds = %25
  br label %329

; <label>:28:                                     ; preds = %25
  %29 = load volatile i32, i32* %8
  %30 = load volatile i32, i32* %7
  %31 = icmp eq i32 %29, %30
  %32 = select i1 %31, i32 -1056362400, i32 1347945707
  store i32 %32, i32* %24
  br label %329

; <label>:33:                                     ; preds = %25
  %34 = load i32, i32* @x.680
  %35 = load i32, i32* @y.681
  %36 = add i32 %34, 1909574584
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1909574584
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 389983488, i32 -1155326693
  store i32 %60, i32* %24
  br label %329

; <label>:61:                                     ; preds = %25
  %62 = load i32, i32* %14, align 4
  store i32 %62, i32* %10, align 4
  %63 = load i32, i32* @x.680
  %64 = load i32, i32* @y.681
  %65 = sub i32 0, 1
  %66 = add i32 %63, %65
  %67 = sub i32 %63, 1
  %68 = mul i32 %63, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %64, 10
  %72 = xor i1 %70, true
  %73 = xor i1 %71, true
  %74 = xor i1 false, true
  %75 = and i1 %72, false
  %76 = and i1 %70, %74
  %77 = and i1 %73, false
  %78 = and i1 %71, %74
  %79 = or i1 %75, %76
  %80 = or i1 %77, %78
  %81 = xor i1 %79, %80
  %82 = or i1 %72, %73
  %83 = xor i1 %82, true
  %84 = or i1 false, %74
  %85 = and i1 %83, %84
  %86 = or i1 %81, %85
  %87 = or i1 %70, %71
  %88 = select i1 %86, i32 -407232547, i32 -1155326693
  store i32 %88, i32* %24
  br label %329

; <label>:89:                                     ; preds = %25
  store i32 -1169442727, i32* %24
  br label %329

; <label>:90:                                     ; preds = %25
  %91 = load %"class.std::vector.29"*, %"class.std::vector.29"** %15, align 8
  %92 = load i32, i32* %12, align 4
  %93 = sext i32 %92 to i64
  %94 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %91, i64 %93) #3
  store i32* %94, i32** %17, align 8
  store i32 -998054293, i32* %24
  br label %329

; <label>:95:                                     ; preds = %25
  %96 = load i32*, i32** %17, align 8
  %97 = load i32, i32* %96, align 4
  %98 = sext i32 %97 to i64
  %99 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %100 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %99, i32 0, i32 0
  %101 = load i32, i32* %12, align 4
  %102 = sext i32 %101 to i64
  %103 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %100, i64 %102) #3
  %104 = call i64 @_ZNKSt6vectorIN5DinicIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.18"* %103) #3
  %105 = icmp ult i64 %98, %104
  %106 = select i1 %105, i32 -1286075831, i32 -1246664240
  store i32 %106, i32* %24
  br label %329

; <label>:107:                                    ; preds = %25
  %108 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %109 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %108, i32 0, i32 0
  %110 = load i32, i32* %12, align 4
  %111 = sext i32 %110 to i64
  %112 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %109, i64 %111) #3
  %113 = load i32*, i32** %17, align 8
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %112, i64 %115) #3
  %117 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %116, i32 0, i32 0
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %18, align 4
  %119 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %120 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %119, i32 0, i32 0
  %121 = load i32, i32* %12, align 4
  %122 = sext i32 %121 to i64
  %123 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %120, i64 %122) #3
  %124 = load i32*, i32** %17, align 8
  %125 = load i32, i32* %124, align 4
  %126 = sext i32 %125 to i64
  %127 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %123, i64 %126) #3
  %128 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %127, i32 0, i32 1
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %19, align 4
  %130 = load i32, i32* %19, align 4
  %131 = icmp sle i32 %130, 0
  %132 = select i1 %131, i32 -44203533, i32 -690877545
  store i32 %132, i32* %24
  br label %329

; <label>:133:                                    ; preds = %25
  %134 = load %"class.std::vector.29"*, %"class.std::vector.29"** %16, align 8
  %135 = load i32, i32* %12, align 4
  %136 = sext i32 %135 to i64
  %137 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %134, i64 %136) #3
  %138 = load i32, i32* %137, align 4
  %139 = sub i32 0, %138
  %140 = sub i32 0, 1
  %141 = add i32 %139, %140
  %142 = sub i32 0, %141
  %143 = add nsw i32 %138, 1
  %144 = load %"class.std::vector.29"*, %"class.std::vector.29"** %16, align 8
  %145 = load i32, i32* %18, align 4
  %146 = sext i32 %145 to i64
  %147 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.29"* %144, i64 %146) #3
  %148 = load i32, i32* %147, align 4
  %149 = icmp ne i32 %142, %148
  %150 = select i1 %149, i32 -44203533, i32 -420537405
  store i32 %150, i32* %24
  br label %329

; <label>:151:                                    ; preds = %25
  store i32 885495774, i32* %24
  br label %329

; <label>:152:                                    ; preds = %25
  %153 = load i32, i32* %18, align 4
  %154 = load i32, i32* %13, align 4
  %155 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %14, i32* dereferenceable(4) %19)
  %156 = load i32, i32* %155, align 4
  %157 = load %"class.std::vector.29"*, %"class.std::vector.29"** %15, align 8
  %158 = load %"class.std::vector.29"*, %"class.std::vector.29"** %16, align 8
  %159 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %160 = call i32 @_ZN5DinicIiE3dfsEiiiRSt6vectorIiSaIiEES4_(%struct.Dinic* %159, i32 %153, i32 %154, i32 %156, %"class.std::vector.29"* dereferenceable(24) %157, %"class.std::vector.29"* dereferenceable(24) %158)
  store i32 %160, i32* %20, align 4
  %161 = load i32, i32* %20, align 4
  %162 = icmp ne i32 %161, 0
  %163 = select i1 %162, i32 -666426466, i32 811251218
  store i32 %163, i32* %24
  br label %329

; <label>:164:                                    ; preds = %25
  %165 = load i32, i32* %20, align 4
  %166 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %167 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %166, i32 0, i32 0
  %168 = load i32, i32* %12, align 4
  %169 = sext i32 %168 to i64
  %170 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %167, i64 %169) #3
  %171 = load i32*, i32** %17, align 8
  %172 = load i32, i32* %171, align 4
  %173 = sext i32 %172 to i64
  %174 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %170, i64 %173) #3
  %175 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %174, i32 0, i32 1
  %176 = load i32, i32* %175, align 4
  %177 = add i32 %176, -1099072984
  %178 = sub i32 %177, %165
  %179 = sub i32 %178, -1099072984
  %180 = sub nsw i32 %176, %165
  store i32 %179, i32* %175, align 4
  %181 = load i32, i32* %20, align 4
  %182 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %183 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %182, i32 0, i32 0
  %184 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %185 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %184, i32 0, i32 0
  %186 = load i32, i32* %12, align 4
  %187 = sext i32 %186 to i64
  %188 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %185, i64 %187) #3
  %189 = load i32*, i32** %17, align 8
  %190 = load i32, i32* %189, align 4
  %191 = sext i32 %190 to i64
  %192 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %188, i64 %191) #3
  %193 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %192, i32 0, i32 0
  %194 = load i32, i32* %193, align 4
  %195 = sext i32 %194 to i64
  %196 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %183, i64 %195) #3
  %197 = load volatile %struct.Dinic*, %struct.Dinic** %9
  %198 = getelementptr inbounds %struct.Dinic, %struct.Dinic* %197, i32 0, i32 0
  %199 = load i32, i32* %12, align 4
  %200 = sext i32 %199 to i64
  %201 = call dereferenceable(24) %"class.std::vector.18"* @_ZNSt6vectorIS_IN5DinicIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector.13"* %198, i64 %200) #3
  %202 = load i32*, i32** %17, align 8
  %203 = load i32, i32* %202, align 4
  %204 = sext i32 %203 to i64
  %205 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %201, i64 %204) #3
  %206 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %205, i32 0, i32 2
  %207 = load i32, i32* %206, align 4
  %208 = sext i32 %207 to i64
  %209 = call dereferenceable(12) %"struct.Dinic<int>::edge"* @_ZNSt6vectorIN5DinicIiE4edgeESaIS2_EEixEm(%"class.std::vector.18"* %196, i64 %208) #3
  %210 = getelementptr inbounds %"struct.Dinic<int>::edge", %"struct.Dinic<int>::edge"* %209, i32 0, i32 1
  %211 = load i32, i32* %210, align 4
  %212 = sub i32 0, %211
  %213 = sub i32 0, %181
  %214 = add i32 %212, %213
  %215 = sub i32 0, %214
  %216 = add nsw i32 %211, %181
  store i32 %215, i32* %210, align 4
  %217 = load i32, i32* %20, align 4
  store i32 %217, i32* %10, align 4
  store i32 -1169442727, i32* %24
  br label %329

; <label>:218:                                    ; preds = %25
  %219 = load i32, i32* @x.680
  %220 = load i32, i32* @y.681
  %221 = sub i32 0, 1
  %222 = add i32 %219, %221
  %223 = sub i32 %219, 1
  %224 = mul i32 %219, %222
  %225 = urem i32 %224, 2
  %226 = icmp eq i32 %225, 0
  %227 = icmp slt i32 %220, 10
  %228 = xor i1 %226, true
  %229 = xor i1 %227, true
  %230 = xor i1 true, true
  %231 = and i1 %228, true
  %232 = and i1 %226, %230
  %233 = and i1 %229, true
  %234 = and i1 %227, %230
  %235 = or i1 %231, %232
  %236 = or i1 %233, %234
  %237 = xor i1 %235, %236
  %238 = or i1 %228, %229
  %239 = xor i1 %238, true
  %240 = or i1 true, %230
  %241 = and i1 %239, %240
  %242 = or i1 %237, %241
  %243 = or i1 %226, %227
  %244 = select i1 %242, i32 -321062890, i32 169119243
  store i32 %244, i32* %24
  br label %329

; <label>:245:                                    ; preds = %25
  %246 = load i32, i32* @x.680
  %247 = load i32, i32* @y.681
  %248 = sub i32 0, 1
  %249 = add i32 %246, %248
  %250 = sub i32 %246, 1
  %251 = mul i32 %246, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %247, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  %259 = select i1 %257, i32 992459225, i32 169119243
  store i32 %259, i32* %24
  br label %329

; <label>:260:                                    ; preds = %25
  store i32 885495774, i32* %24
  br label %329

; <label>:261:                                    ; preds = %25
  %262 = load i32*, i32** %17, align 8
  %263 = load i32, i32* %262, align 4
  %264 = sub i32 0, 1
  %265 = sub i32 %263, %264
  %266 = add nsw i32 %263, 1
  store i32 %265, i32* %262, align 4
  store i32 -998054293, i32* %24
  br label %329

; <label>:267:                                    ; preds = %25
  %268 = load i32, i32* @x.680
  %269 = load i32, i32* @y.681
  %270 = add i32 %268, 23031378
  %271 = sub i32 %270, 1
  %272 = sub i32 %271, 23031378
  %273 = sub i32 %268, 1
  %274 = mul i32 %268, %272
  %275 = urem i32 %274, 2
  %276 = icmp eq i32 %275, 0
  %277 = icmp slt i32 %269, 10
  %278 = xor i1 %276, true
  %279 = xor i1 %277, true
  %280 = xor i1 true, true
  %281 = and i1 %278, true
  %282 = and i1 %276, %280
  %283 = and i1 %279, true
  %284 = and i1 %277, %280
  %285 = or i1 %281, %282
  %286 = or i1 %283, %284
  %287 = xor i1 %285, %286
  %288 = or i1 %278, %279
  %289 = xor i1 %288, true
  %290 = or i1 true, %280
  %291 = and i1 %289, %290
  %292 = or i1 %287, %291
  %293 = or i1 %276, %277
  %294 = select i1 %292, i32 -1496887202, i32 501813383
  store i32 %294, i32* %24
  br label %329

; <label>:295:                                    ; preds = %25
  store i32 0, i32* %10, align 4
  %296 = load i32, i32* @x.680
  %297 = load i32, i32* @y.681
  %298 = sub i32 0, 1
  %299 = add i32 %296, %298
  %300 = sub i32 %296, 1
  %301 = mul i32 %296, %299
  %302 = urem i32 %301, 2
  %303 = icmp eq i32 %302, 0
  %304 = icmp slt i32 %297, 10
  %305 = xor i1 %303, true
  %306 = xor i1 %304, true
  %307 = xor i1 true, true
  %308 = and i1 %305, true
  %309 = and i1 %303, %307
  %310 = and i1 %306, true
  %311 = and i1 %304, %307
  %312 = or i1 %308, %309
  %313 = or i1 %310, %311
  %314 = xor i1 %312, %313
  %315 = or i1 %305, %306
  %316 = xor i1 %315, true
  %317 = or i1 true, %307
  %318 = and i1 %316, %317
  %319 = or i1 %314, %318
  %320 = or i1 %303, %304
  %321 = select i1 %319, i32 756214757, i32 501813383
  store i32 %321, i32* %24
  br label %329

; <label>:322:                                    ; preds = %25
  store i32 -1169442727, i32* %24
  br label %329

; <label>:323:                                    ; preds = %25
  %324 = load i32, i32* %10, align 4
  ret i32 %324

; <label>:325:                                    ; preds = %25
  %326 = load i32, i32* %14, align 4
  store i32 %326, i32* %10, align 4
  store i32 389983488, i32* %24
  br label %329

; <label>:327:                                    ; preds = %25
  store i32 -321062890, i32* %24
  br label %329

; <label>:328:                                    ; preds = %25
  store i32 0, i32* %10, align 4
  store i32 -1496887202, i32* %24
  br label %329

; <label>:329:                                    ; preds = %328, %327, %325, %322, %295, %267, %261, %260, %245, %218, %164, %152, %151, %133, %107, %95, %90, %89, %61, %33, %28, %27
  br label %25
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.29"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.682
  %3 = load i32, i32* @y.683
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = xor i1 %9, true
  %12 = xor i1 %10, true
  %13 = xor i1 true, true
  %14 = and i1 %11, true
  %15 = and i1 %9, %13
  %16 = and i1 %12, true
  %17 = and i1 %10, %13
  %18 = or i1 %14, %15
  %19 = or i1 %16, %17
  %20 = xor i1 %18, %19
  %21 = or i1 %11, %12
  %22 = xor i1 %21, true
  %23 = or i1 true, %13
  %24 = and i1 %22, %23
  %25 = or i1 %20, %24
  %26 = or i1 %9, %10
  br i1 %25, label %27, label %119

; <label>:27:                                     ; preds = %1, %119
  %28 = alloca %"class.std::vector.29"*, align 8
  %29 = alloca i8*
  %30 = alloca i32
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %28, align 8
  %31 = load %"class.std::vector.29"*, %"class.std::vector.29"** %28, align 8
  %32 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, i32 0, i32 1
  %39 = load i32*, i32** %38, align 8
  %40 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  %41 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.30"* %40) #3
  %42 = load i32, i32* @x.682
  %43 = load i32, i32* @y.683
  %44 = add i32 %42, -1547866945
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -1547866945
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %119

; <label>:68:                                     ; preds = %27
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %35, i32* %39, %"class.std::allocator.31"* dereferenceable(1) %41)
          to label %69 unwind label %112

; <label>:69:                                     ; preds = %68
  %70 = load i32, i32* @x.682
  %71 = load i32, i32* @y.683
  %72 = add i32 %70, 1684785150
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1684785150
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = xor i1 %78, true
  %81 = xor i1 %79, true
  %82 = xor i1 true, true
  %83 = and i1 %80, true
  %84 = and i1 %78, %82
  %85 = and i1 %81, true
  %86 = and i1 %79, %82
  %87 = or i1 %83, %84
  %88 = or i1 %85, %86
  %89 = xor i1 %87, %88
  %90 = or i1 %80, %81
  %91 = xor i1 %90, true
  %92 = or i1 true, %82
  %93 = and i1 %91, %92
  %94 = or i1 %89, %93
  %95 = or i1 %78, %79
  br i1 %94, label %96, label %134

; <label>:96:                                     ; preds = %69, %134
  %97 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.30"* %97) #3
  %98 = load i32, i32* @x.682
  %99 = load i32, i32* @y.683
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  br i1 %109, label %111, label %134

; <label>:111:                                    ; preds = %96
  ret void

; <label>:112:                                    ; preds = %68
  %113 = landingpad { i8*, i32 }
          catch i8* null
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %29, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %30, align 4
  %116 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.30"* %116) #3
  br label %117

; <label>:117:                                    ; preds = %112
  %118 = load i8*, i8** %29, align 8
  call void @__clang_call_terminate(i8* %118) #10
  unreachable

; <label>:119:                                    ; preds = %27, %1
  %120 = alloca %"class.std::vector.29"*, align 8
  %121 = alloca i8*
  %122 = alloca i32
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %120, align 8
  %123 = load %"class.std::vector.29"*, %"class.std::vector.29"** %120, align 8
  %124 = bitcast %"class.std::vector.29"* %123 to %"struct.std::_Vector_base.30"*
  %125 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %124, i32 0, i32 0
  %126 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %125, i32 0, i32 0
  %127 = load i32*, i32** %126, align 8
  %128 = bitcast %"class.std::vector.29"* %123 to %"struct.std::_Vector_base.30"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %129, i32 0, i32 1
  %131 = load i32*, i32** %130, align 8
  %132 = bitcast %"class.std::vector.29"* %123 to %"struct.std::_Vector_base.30"*
  %133 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.30"* %132) #3
  br label %27

; <label>:134:                                    ; preds = %96, %69
  %135 = bitcast %"class.std::vector.29"* %31 to %"struct.std::_Vector_base.30"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.30"* %135) #3
  br label %96
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.32"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.686
  %5 = load i32, i32* @y.687
  %6 = add i32 %4, -382846759
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -382846759
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1092469945, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %60
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1092469945, label %18
    i32 625874554, label %38
    i32 604387050, label %56
    i32 -1767417855, label %57
  ]

; <label>:17:                                     ; preds = %15
  br label %60

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 625874554, i32 -1767417855
  store i32 %37, i32* %14
  br label %60

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %39, align 8
  %40 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %39, align 8
  %41 = load i32, i32* @x.686
  %42 = load i32, i32* @y.687
  %43 = sub i32 %41, 718216682
  %44 = sub i32 %43, 1
  %45 = add i32 %44, 718216682
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 604387050, i32 -1767417855
  store i32 %55, i32* %14
  br label %60

; <label>:56:                                     ; preds = %15
  ret void

; <label>:57:                                     ; preds = %15
  %58 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %58, align 8
  %59 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %58, align 8
  store i32 625874554, i32* %14
  br label %60

; <label>:60:                                     ; preds = %57, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.30"*, i64, %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.688
  %5 = load i32, i32* @y.689
  %6 = sub i32 %4, -1479034530
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -1479034530
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = xor i1 %12, true
  %15 = xor i1 %13, true
  %16 = xor i1 true, true
  %17 = and i1 %14, true
  %18 = and i1 %12, %16
  %19 = and i1 %15, true
  %20 = and i1 %13, %16
  %21 = or i1 %17, %18
  %22 = or i1 %19, %20
  %23 = xor i1 %21, %22
  %24 = or i1 %14, %15
  %25 = xor i1 %24, true
  %26 = or i1 true, %16
  %27 = and i1 %25, %26
  %28 = or i1 %23, %27
  %29 = or i1 %12, %13
  br i1 %28, label %30, label %77

; <label>:30:                                     ; preds = %3, %77
  %31 = alloca %"struct.std::_Vector_base.30"*, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::allocator.31"*, align 8
  %34 = alloca i8*
  %35 = alloca i32
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %31, align 8
  store i64 %1, i64* %32, align 8
  store %"class.std::allocator.31"* %2, %"class.std::allocator.31"** %33, align 8
  %36 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %31, align 8
  %37 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %36, i32 0, i32 0
  %38 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %33, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37, %"class.std::allocator.31"* dereferenceable(1) %38) #3
  %39 = load i64, i64* %32, align 8
  %40 = load i32, i32* @x.688
  %41 = load i32, i32* @y.689
  %42 = sub i32 %40, -1196282191
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1196282191
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  br i1 %64, label %66, label %77

; <label>:66:                                     ; preds = %30
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.30"* %36, i64 %39)
          to label %67 unwind label %68

; <label>:67:                                     ; preds = %66
  ret void

; <label>:68:                                     ; preds = %66
  %69 = landingpad { i8*, i32 }
          cleanup
  %70 = extractvalue { i8*, i32 } %69, 0
  store i8* %70, i8** %34, align 8
  %71 = extractvalue { i8*, i32 } %69, 1
  store i32 %71, i32* %35, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %37) #3
  br label %72

; <label>:72:                                     ; preds = %68
  %73 = load i8*, i8** %34, align 8
  %74 = load i32, i32* %35, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %30, %3
  %78 = alloca %"struct.std::_Vector_base.30"*, align 8
  %79 = alloca i64, align 8
  %80 = alloca %"class.std::allocator.31"*, align 8
  %81 = alloca i8*
  %82 = alloca i32
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %78, align 8
  store i64 %1, i64* %79, align 8
  store %"class.std::allocator.31"* %2, %"class.std::allocator.31"** %80, align 8
  %83 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %78, align 8
  %84 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %83, i32 0, i32 0
  %85 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %80, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %84, %"class.std::allocator.31"* dereferenceable(1) %85) #3
  %86 = load i64, i64* %79, align 8
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.29"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.690
  %7 = load i32, i32* @y.691
  %8 = add i32 %6, 601462840
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 601462840
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1173141292, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1173141292, label %20
    i32 433558570, label %28
    i32 -1262460028, label %72
    i32 -117938197, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 433558570, i32 -117938197
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.29"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector.29"*, %"class.std::vector.29"** %29, align 8
  %33 = bitcast %"class.std::vector.29"* %32 to %"struct.std::_Vector_base.30"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i32*, i32** %31, align 8
  %39 = bitcast %"class.std::vector.29"* %32 to %"struct.std::_Vector_base.30"*
  %40 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.30"* %39) #3
  %41 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %36, i64 %37, i32* dereferenceable(4) %38, %"class.std::allocator.31"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.29"* %32 to %"struct.std::_Vector_base.30"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  store i32* %41, i32** %44, align 8
  %45 = load i32, i32* @x.690
  %46 = load i32, i32* @y.691
  %47 = sub i32 %45, 818246986
  %48 = sub i32 %47, 1
  %49 = add i32 %48, 818246986
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 true, true
  %58 = and i1 %55, true
  %59 = and i1 %53, %57
  %60 = and i1 %56, true
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 true, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -1262460028, i32 -117938197
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.29"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca i32*, align 8
  store %"class.std::vector.29"* %0, %"class.std::vector.29"** %74, align 8
  store i64 %1, i64* %75, align 8
  store i32* %2, i32** %76, align 8
  %77 = load %"class.std::vector.29"*, %"class.std::vector.29"** %74, align 8
  %78 = bitcast %"class.std::vector.29"* %77 to %"struct.std::_Vector_base.30"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load i32*, i32** %76, align 8
  %84 = bitcast %"class.std::vector.29"* %77 to %"struct.std::_Vector_base.30"*
  %85 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.30"* %84) #3
  %86 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %81, i64 %82, i32* dereferenceable(4) %83, %"class.std::allocator.31"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector.29"* %77 to %"struct.std::_Vector_base.30"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 1
  store i32* %86, i32** %89, align 8
  store i32 433558570, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.30"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.692
  %3 = load i32, i32* @y.693
  %4 = add i32 %2, -288774308
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -288774308
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %124

; <label>:28:                                     ; preds = %1, %124
  %29 = alloca %"struct.std::_Vector_base.30"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %29, align 8
  %32 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %36, i32 0, i32 2
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  %40 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = ptrtoint i32* %38 to i64
  %43 = ptrtoint i32* %41 to i64
  %44 = sub i64 0, %43
  %45 = add i64 %42, %44
  %46 = sub i64 %42, %43
  %47 = sdiv exact i64 %45, 4
  %48 = load i32, i32* @x.692
  %49 = load i32, i32* @y.693
  %50 = sub i32 0, 1
  %51 = add i32 %48, %50
  %52 = sub i32 %48, 1
  %53 = mul i32 %48, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %49, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  br i1 %71, label %73, label %124

; <label>:73:                                     ; preds = %28
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.30"* %32, i32* %35, i64 %47)
          to label %74 unwind label %117

; <label>:74:                                     ; preds = %73
  %75 = load i32, i32* @x.692
  %76 = load i32, i32* @y.693
  %77 = sub i32 %75, 541383951
  %78 = sub i32 %77, 1
  %79 = add i32 %78, 541383951
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %185

; <label>:89:                                     ; preds = %74, %185
  %90 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %90) #3
  %91 = load i32, i32* @x.692
  %92 = load i32, i32* @y.693
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 false, true
  %103 = and i1 %100, false
  %104 = and i1 %98, %102
  %105 = and i1 %101, false
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 false, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  br i1 %114, label %116, label %185

; <label>:116:                                    ; preds = %89
  ret void

; <label>:117:                                    ; preds = %73
  %118 = landingpad { i8*, i32 }
          catch i8* null
  %119 = extractvalue { i8*, i32 } %118, 0
  store i8* %119, i8** %30, align 8
  %120 = extractvalue { i8*, i32 } %118, 1
  store i32 %120, i32* %31, align 4
  %121 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %121) #3
  br label %122

; <label>:122:                                    ; preds = %117
  %123 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %123) #10
  unreachable

; <label>:124:                                    ; preds = %28, %1
  %125 = alloca %"struct.std::_Vector_base.30"*, align 8
  %126 = alloca i8*
  %127 = alloca i32
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %125, align 8
  %128 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %125, align 8
  %129 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %129, i32 0, i32 0
  %131 = load i32*, i32** %130, align 8
  %132 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %128, i32 0, i32 0
  %133 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %132, i32 0, i32 2
  %134 = load i32*, i32** %133, align 8
  %135 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %128, i32 0, i32 0
  %136 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %135, i32 0, i32 0
  %137 = load i32*, i32** %136, align 8
  %138 = ptrtoint i32* %134 to i64
  %139 = ptrtoint i32* %137 to i64
  %140 = shl i64 %138, %139
  %141 = add i64 0, 1895027882031222956
  %142 = sub i64 %141, %138
  %143 = sub i64 %142, 1895027882031222956
  %144 = sub i64 0, %138
  %145 = sub i64 0, %143
  %146 = sub i64 0, %139
  %147 = add i64 %145, %146
  %148 = sub i64 0, %147
  %149 = add i64 %143, %139
  %150 = shl i64 %138, %139
  %151 = shl i64 %138, %139
  %152 = add i64 %138, -5093789514165812851
  %153 = sub i64 %152, %139
  %154 = sub i64 %153, -5093789514165812851
  %155 = sub i64 %138, %139
  %156 = shl i64 %154, 4
  %157 = sub i64 0, %154
  %158 = add i64 0, %157
  %159 = sub i64 0, %154
  %160 = sub i64 0, %158
  %161 = sub i64 0, 4
  %162 = add i64 %160, %161
  %163 = sub i64 0, %162
  %164 = add i64 %158, 4
  %165 = sub i64 %154, 5846019724426366091
  %166 = sub i64 %165, 4
  %167 = add i64 %166, 5846019724426366091
  %168 = sub i64 %154, 4
  %169 = mul i64 %167, 4
  %170 = sub i64 0, 4
  %171 = add i64 %154, %170
  %172 = sub i64 %154, 4
  %173 = mul i64 %171, 4
  %174 = add i64 0, -1038839103835469348
  %175 = sub i64 %174, %154
  %176 = sub i64 %175, -1038839103835469348
  %177 = sub i64 0, %154
  %178 = sub i64 0, %176
  %179 = sub i64 0, 4
  %180 = add i64 %178, %179
  %181 = sub i64 0, %180
  %182 = add i64 %176, 4
  %183 = shl i64 %154, 4
  %184 = sdiv exact i64 %154, 4
  br label %28

; <label>:185:                                    ; preds = %89, %74
  %186 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %32, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %186) #3
  br label %89
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.694
  %6 = load i32, i32* @y.695
  %7 = add i32 %5, 526437372
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 526437372
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -333322980, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -333322980, label %19
    i32 -1559841283, label %27
    i32 -211864658, label %51
    i32 1745234663, label %52
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1559841283, i32 1745234663
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %29 = alloca %"class.std::allocator.31"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %28, align 8
  store %"class.std::allocator.31"* %1, %"class.std::allocator.31"** %29, align 8
  %30 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %28, align 8
  %31 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30 to %"class.std::allocator.31"*
  %32 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %29, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.31"* %31, %"class.std::allocator.31"* dereferenceable(1) %32) #3
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 0
  store i32* null, i32** %33, align 8
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 1
  store i32* null, i32** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 2
  store i32* null, i32** %35, align 8
  %36 = load i32, i32* @x.694
  %37 = load i32, i32* @y.695
  %38 = sub i32 %36, 970377983
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 970377983
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -211864658, i32 1745234663
  store i32 %50, i32* %15
  br label %61

; <label>:51:                                     ; preds = %16
  ret void

; <label>:52:                                     ; preds = %16
  %53 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %54 = alloca %"class.std::allocator.31"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %53, align 8
  store %"class.std::allocator.31"* %1, %"class.std::allocator.31"** %54, align 8
  %55 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %53, align 8
  %56 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55 to %"class.std::allocator.31"*
  %57 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %54, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.31"* %56, %"class.std::allocator.31"* dereferenceable(1) %57) #3
  %58 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 0
  store i32* null, i32** %58, align 8
  %59 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 1
  store i32* null, i32** %59, align 8
  %60 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %55, i32 0, i32 2
  store i32* null, i32** %60, align 8
  store i32 -1559841283, i32* %15
  br label %61

; <label>:61:                                     ; preds = %52, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.30"*, i64) #0 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.30"*, align 8
  %4 = alloca i64, align 8
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %3, align 8
  %6 = load i64, i64* %4, align 8
  %7 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.30"* %5, i64 %6)
  %8 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %5, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 0
  store i32* %7, i32** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %5, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %5, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %13, i32 0, i32 1
  store i32* %12, i32** %14, align 8
  %15 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %5, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %15, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = load i64, i64* %4, align 8
  %19 = getelementptr inbounds i32, i32* %17, i64 %18
  %20 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %5, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20, i32 0, i32 2
  store i32* %19, i32** %21, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.31"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.31"*, %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.31"*, align 8
  %4 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %3, align 8
  store %"class.std::allocator.31"* %1, %"class.std::allocator.31"** %4, align 8
  %5 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %3, align 8
  %6 = bitcast %"class.std::allocator.31"* %5 to %"class.__gnu_cxx::new_allocator.32"*
  %7 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %4, align 8
  %8 = bitcast %"class.std::allocator.31"* %7 to %"class.__gnu_cxx::new_allocator.32"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.32"* %6, %"class.__gnu_cxx::new_allocator.32"* dereferenceable(1) %8) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %1, %"class.__gnu_cxx::new_allocator.32"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %3, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.30"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"struct.std::_Vector_base.30"*
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.704
  %9 = load i32, i32* @y.705
  %10 = sub i32 0, 1
  %11 = add i32 %8, %10
  %12 = sub i32 %8, 1
  %13 = mul i32 %8, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %7
  %16 = icmp slt i32 %9, 10
  store i1 %16, i1* %6
  %17 = alloca i32
  store i32 313914881, i32* %17
  %18 = alloca i32*
  br label %19

; <label>:19:                                     ; preds = %2, %72
  %20 = load i32, i32* %17
  switch i32 %20, label %21 [
    i32 313914881, label %22
    i32 2042430446, label %30
    i32 -698700606, label %53
    i32 745986017, label %56
    i32 1315127101, label %63
    i32 722702200, label %64
    i32 -1354009048, label %66
  ]

; <label>:21:                                     ; preds = %19
  br label %72

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 2042430446, i32 -1354009048
  store i32 %29, i32* %17
  br label %72

; <label>:30:                                     ; preds = %19
  %31 = alloca %"struct.std::_Vector_base.30"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %31, align 8
  %33 = load volatile i64*, i64** %5
  store i64 %1, i64* %33, align 8
  %34 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %31, align 8
  store %"struct.std::_Vector_base.30"* %34, %"struct.std::_Vector_base.30"** %4
  %35 = load volatile i64*, i64** %5
  %36 = load i64, i64* %35, align 8
  %37 = icmp ne i64 %36, 0
  store i1 %37, i1* %3
  %38 = load i32, i32* @x.704
  %39 = load i32, i32* @y.705
  %40 = sub i32 %38, 1751284999
  %41 = sub i32 %40, 1
  %42 = add i32 %41, 1751284999
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = and i1 %46, %47
  %49 = xor i1 %46, %47
  %50 = or i1 %48, %49
  %51 = or i1 %46, %47
  %52 = select i1 %50, i32 -698700606, i32 -1354009048
  store i32 %52, i32* %17
  br label %72

; <label>:53:                                     ; preds = %19
  %54 = load volatile i1, i1* %3
  %55 = select i1 %54, i32 745986017, i32 1315127101
  store i32 %55, i32* %17
  br label %72

; <label>:56:                                     ; preds = %19
  %57 = load volatile %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %4
  %58 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %57, i32 0, i32 0
  %59 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %58 to %"class.std::allocator.31"*
  %60 = load volatile i64*, i64** %5
  %61 = load i64, i64* %60, align 8
  %62 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.31"* dereferenceable(1) %59, i64 %61)
  store i32 722702200, i32* %17
  store i32* %62, i32** %18
  br label %72

; <label>:63:                                     ; preds = %19
  store i32 722702200, i32* %17
  store i32* null, i32** %18
  br label %72

; <label>:64:                                     ; preds = %19
  %65 = load i32*, i32** %18
  ret i32* %65

; <label>:66:                                     ; preds = %19
  %67 = alloca %"struct.std::_Vector_base.30"*, align 8
  %68 = alloca i64, align 8
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %67, align 8
  store i64 %1, i64* %68, align 8
  %69 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %67, align 8
  %70 = load i64, i64* %68, align 8
  %71 = icmp ne i64 %70, 0
  store i32 2042430446, i32* %17
  br label %72

; <label>:72:                                     ; preds = %66, %63, %56, %53, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.31"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.706
  %7 = load i32, i32* @y.707
  %8 = sub i32 %6, 375219088
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 375219088
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1810902999, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %59
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1810902999, label %20
    i32 1898044072, label %28
    i32 1954237408, label %50
    i32 2045325918, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %59

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1898044072, i32 2045325918
  store i32 %27, i32* %16
  br label %59

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.31"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %29, align 8
  %32 = bitcast %"class.std::allocator.31"* %31 to %"class.__gnu_cxx::new_allocator.32"*
  %33 = load i64, i64* %30, align 8
  %34 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.32"* %32, i64 %33, i8* null)
  store i32* %34, i32** %3
  %35 = load i32, i32* @x.706
  %36 = load i32, i32* @y.707
  %37 = add i32 %35, -847998703
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, -847998703
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 1954237408, i32 2045325918
  store i32 %49, i32* %16
  br label %59

; <label>:50:                                     ; preds = %17
  %51 = load volatile i32*, i32** %3
  ret i32* %51

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.31"*, align 8
  %54 = alloca i64, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %53, align 8
  store i64 %1, i64* %54, align 8
  %55 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %53, align 8
  %56 = bitcast %"class.std::allocator.31"* %55 to %"class.__gnu_cxx::new_allocator.32"*
  %57 = load i64, i64* %54, align 8
  %58 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.32"* %56, i64 %57, i8* null)
  store i32 1898044072, i32* %16
  br label %59

; <label>:59:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.32"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i64
  %6 = alloca i64
  %7 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i8* %2, i8** %9, align 8
  %10 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %7, align 8
  %11 = load i64, i64* %8, align 8
  store i64 %11, i64* %6
  %12 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.32"* %10) #3
  store i64 %12, i64* %5
  %13 = alloca i32
  store i32 -686999343, i32* %13
  br label %14

; <label>:14:                                     ; preds = %3, %90
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -686999343, label %17
    i32 -1282261816, label %22
    i32 -868123837, label %23
    i32 -1021810158, label %39
    i32 1306291430, label %71
    i32 -1103599828, label %73
  ]

; <label>:16:                                     ; preds = %14
  br label %90

; <label>:17:                                     ; preds = %14
  %18 = load volatile i64, i64* %6
  %19 = load volatile i64, i64* %5
  %20 = icmp ugt i64 %18, %19
  %21 = select i1 %20, i32 -1282261816, i32 -868123837
  store i32 %21, i32* %13
  br label %90

; <label>:22:                                     ; preds = %14
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:23:                                     ; preds = %14
  %24 = load i32, i32* @x.708
  %25 = load i32, i32* @y.709
  %26 = add i32 %24, 12480787
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, 12480787
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  %38 = select i1 %36, i32 -1021810158, i32 -1103599828
  store i32 %38, i32* %13
  br label %90

; <label>:39:                                     ; preds = %14
  %40 = load i64, i64* %8, align 8
  %41 = mul i64 %40, 4
  %42 = call i8* @_Znwm(i64 %41)
  %43 = bitcast i8* %42 to i32*
  store i32* %43, i32** %4
  %44 = load i32, i32* @x.708
  %45 = load i32, i32* @y.709
  %46 = sub i32 %44, -66972710
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -66972710
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1306291430, i32 -1103599828
  store i32 %70, i32* %13
  br label %90

; <label>:71:                                     ; preds = %14
  %72 = load volatile i32*, i32** %4
  ret i32* %72

; <label>:73:                                     ; preds = %14
  %74 = load i64, i64* %8, align 8
  %75 = shl i64 %74, 4
  %76 = sub i64 0, -5296555714748211425
  %77 = sub i64 %76, %74
  %78 = add i64 %77, -5296555714748211425
  %79 = sub i64 0, %74
  %80 = sub i64 0, 4
  %81 = sub i64 %78, %80
  %82 = add i64 %78, 4
  %83 = sub i64 0, 4
  %84 = add i64 %74, %83
  %85 = sub i64 %74, 4
  %86 = mul i64 %84, 4
  %87 = mul i64 %74, 4
  %88 = call i8* @_Znwm(i64 %87)
  %89 = bitcast i8* %88 to i32*
  store i32 -1021810158, i32* %13
  br label %90

; <label>:90:                                     ; preds = %73, %39, %23, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.32"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.32"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.31"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.31"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.31"* %3, %"class.std::allocator.31"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.31"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.30"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.31"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.716
  %6 = load i32, i32* @y.717
  %7 = add i32 %5, -1358918290
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1358918290
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1507269250, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1507269250, label %19
    i32 356752996, label %27
    i32 -1499122190, label %47
    i32 113543399, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 356752996, i32 113543399
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.30"*, align 8
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %28, align 8
  %29 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %29, i32 0, i32 0
  %31 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30 to %"class.std::allocator.31"*
  store %"class.std::allocator.31"* %31, %"class.std::allocator.31"** %2
  %32 = load i32, i32* @x.716
  %33 = load i32, i32* @y.717
  %34 = add i32 %32, 1163691877
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, 1163691877
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -1499122190, i32 113543399
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::allocator.31"*, %"class.std::allocator.31"** %2
  ret %"class.std::allocator.31"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Vector_base.30"*, align 8
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %50, align 8
  %51 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %51, i32 0, i32 0
  %53 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %52 to %"class.std::allocator.31"*
  store i32 356752996, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.724
  %11 = load i32, i32* @y.725
  %12 = add i32 %10, -1014799401
  %13 = sub i32 %12, 1
  %14 = sub i32 %13, -1014799401
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -1632737785, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %166
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1632737785, label %24
    i32 2094575670, label %32
    i32 194571646, label %70
    i32 -1570480070, label %71
    i32 598593312, label %99
    i32 1889228700, label %129
    i32 1682996639, label %132
    i32 -1065044709, label %137
    i32 981719628, label %150
    i32 -2077393873, label %153
    i32 -522802769, label %162
  ]

; <label>:23:                                     ; preds = %21
  br label %166

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 2094575670, i32 -2077393873
  store i32 %31, i32* %20
  br label %166

; <label>:32:                                     ; preds = %21
  %33 = alloca i32*, align 8
  store i32** %33, i32*** %7
  %34 = alloca i64, align 8
  %35 = alloca i32*, align 8
  %36 = alloca i32, align 4
  store i32* %36, i32** %6
  %37 = alloca i64, align 8
  store i64* %37, i64** %5
  %38 = load volatile i32**, i32*** %7
  store i32* %0, i32** %38, align 8
  store i64 %1, i64* %34, align 8
  store i32* %2, i32** %35, align 8
  %39 = load i32*, i32** %35, align 8
  %40 = load i32, i32* %39, align 4
  %41 = load volatile i32*, i32** %6
  store i32 %40, i32* %41, align 4
  %42 = load i64, i64* %34, align 8
  %43 = load volatile i64*, i64** %5
  store i64 %42, i64* %43, align 8
  %44 = load i32, i32* @x.724
  %45 = load i32, i32* @y.725
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 194571646, i32 -2077393873
  store i32 %69, i32* %20
  br label %166

; <label>:70:                                     ; preds = %21
  store i32 -1570480070, i32* %20
  br label %166

; <label>:71:                                     ; preds = %21
  %72 = load i32, i32* @x.724
  %73 = load i32, i32* @y.725
  %74 = sub i32 %72, -1977790204
  %75 = sub i32 %74, 1
  %76 = add i32 %75, -1977790204
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  %98 = select i1 %96, i32 598593312, i32 -522802769
  store i32 %98, i32* %20
  br label %166

; <label>:99:                                     ; preds = %21
  %100 = load volatile i64*, i64** %5
  %101 = load i64, i64* %100, align 8
  %102 = icmp ugt i64 %101, 0
  store i1 %102, i1* %4
  %103 = load i32, i32* @x.724
  %104 = load i32, i32* @y.725
  %105 = sub i32 0, 1
  %106 = add i32 %103, %105
  %107 = sub i32 %103, 1
  %108 = mul i32 %103, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %104, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 true, true
  %115 = and i1 %112, true
  %116 = and i1 %110, %114
  %117 = and i1 %113, true
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 true, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  %128 = select i1 %126, i32 1889228700, i32 -522802769
  store i32 %128, i32* %20
  br label %166

; <label>:129:                                    ; preds = %21
  %130 = load volatile i1, i1* %4
  %131 = select i1 %130, i32 1682996639, i32 981719628
  store i32 %131, i32* %20
  br label %166

; <label>:132:                                    ; preds = %21
  %133 = load volatile i32*, i32** %6
  %134 = load i32, i32* %133, align 4
  %135 = load volatile i32**, i32*** %7
  %136 = load i32*, i32** %135, align 8
  store i32 %134, i32* %136, align 4
  store i32 -1065044709, i32* %20
  br label %166

; <label>:137:                                    ; preds = %21
  %138 = load volatile i64*, i64** %5
  %139 = load i64, i64* %138, align 8
  %140 = sub i64 0, %139
  %141 = sub i64 0, -1
  %142 = add i64 %140, %141
  %143 = sub i64 0, %142
  %144 = add i64 %139, -1
  %145 = load volatile i64*, i64** %5
  store i64 %143, i64* %145, align 8
  %146 = load volatile i32**, i32*** %7
  %147 = load i32*, i32** %146, align 8
  %148 = getelementptr inbounds i32, i32* %147, i32 1
  %149 = load volatile i32**, i32*** %7
  store i32* %148, i32** %149, align 8
  store i32 -1570480070, i32* %20
  br label %166

; <label>:150:                                    ; preds = %21
  %151 = load volatile i32**, i32*** %7
  %152 = load i32*, i32** %151, align 8
  ret i32* %152

; <label>:153:                                    ; preds = %21
  %154 = alloca i32*, align 8
  %155 = alloca i64, align 8
  %156 = alloca i32*, align 8
  %157 = alloca i32, align 4
  %158 = alloca i64, align 8
  store i32* %0, i32** %154, align 8
  store i64 %1, i64* %155, align 8
  store i32* %2, i32** %156, align 8
  %159 = load i32*, i32** %156, align 8
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %157, align 4
  %161 = load i64, i64* %155, align 8
  store i64 %161, i64* %158, align 8
  store i32 2094575670, i32* %20
  br label %166

; <label>:162:                                    ; preds = %21
  %163 = load volatile i64*, i64** %5
  %164 = load i64, i64* %163, align 8
  %165 = icmp ugt i64 %164, 0
  store i32 598593312, i32* %20
  br label %166

; <label>:166:                                    ; preds = %162, %153, %137, %132, %129, %99, %71, %70, %32, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.728
  %6 = load i32, i32* @y.729
  %7 = sub i32 %5, -608855856
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -608855856
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 692150055, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 692150055, label %19
    i32 1706011258, label %39
    i32 -273326131, label %69
    i32 -724974494, label %71
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1706011258, i32 -724974494
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  %41 = load i32*, i32** %40, align 8
  store i32* %41, i32** %2
  %42 = load i32, i32* @x.728
  %43 = load i32, i32* @y.729
  %44 = sub i32 %42, -315992657
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -315992657
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -273326131, i32 -724974494
  store i32 %68, i32* %15
  br label %74

; <label>:69:                                     ; preds = %16
  %70 = load volatile i32*, i32** %2
  ret i32* %70

; <label>:71:                                     ; preds = %16
  %72 = alloca i32*, align 8
  store i32* %0, i32** %72, align 8
  %73 = load i32*, i32** %72, align 8
  store i32 1706011258, i32* %15
  br label %74

; <label>:74:                                     ; preds = %71, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.30"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca %"struct.std::_Vector_base.30"*
  %6 = alloca %"struct.std::_Vector_base.30"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64, align 8
  store %"struct.std::_Vector_base.30"* %0, %"struct.std::_Vector_base.30"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64 %2, i64* %8, align 8
  %9 = load %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %6, align 8
  store %"struct.std::_Vector_base.30"* %9, %"struct.std::_Vector_base.30"** %5
  %10 = load i32*, i32** %7, align 8
  store i32* %10, i32** %4
  %11 = alloca i32
  store i32 -1724851004, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %26
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1724851004, label %15
    i32 -1207125152, label %19
    i32 -560845034, label %25
  ]

; <label>:14:                                     ; preds = %12
  br label %26

; <label>:15:                                     ; preds = %12
  %16 = load volatile i32*, i32** %4
  %17 = icmp ne i32* %16, null
  %18 = select i1 %17, i32 -1207125152, i32 -560845034
  store i32 %18, i32* %11
  br label %26

; <label>:19:                                     ; preds = %12
  %20 = load volatile %"struct.std::_Vector_base.30"*, %"struct.std::_Vector_base.30"** %5
  %21 = getelementptr inbounds %"struct.std::_Vector_base.30", %"struct.std::_Vector_base.30"* %20, i32 0, i32 0
  %22 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21 to %"class.std::allocator.31"*
  %23 = load i32*, i32** %7, align 8
  %24 = load i64, i64* %8, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.31"* dereferenceable(1) %22, i32* %23, i64 %24)
  store i32 -560845034, i32* %11
  br label %26

; <label>:25:                                     ; preds = %12
  ret void

; <label>:26:                                     ; preds = %19, %15, %14
  br label %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.31"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.31"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %4, align 8
  %8 = bitcast %"class.std::allocator.31"* %7 to %"class.__gnu_cxx::new_allocator.32"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.32"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.32"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6)
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %5, i64 0)
          to label %7 unwind label %62

; <label>:7:                                      ; preds = %1
  %8 = load i32, i32* @x.736
  %9 = load i32, i32* @y.737
  %10 = add i32 %8, -1839806761
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -1839806761
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = icmp slt i32 %9, 10
  %18 = xor i1 %16, true
  %19 = xor i1 %17, true
  %20 = xor i1 false, true
  %21 = and i1 %18, false
  %22 = and i1 %16, %20
  %23 = and i1 %19, false
  %24 = and i1 %17, %20
  %25 = or i1 %21, %22
  %26 = or i1 %23, %24
  %27 = xor i1 %25, %26
  %28 = or i1 %18, %19
  %29 = xor i1 %28, true
  %30 = or i1 false, %20
  %31 = and i1 %29, %30
  %32 = or i1 %27, %31
  %33 = or i1 %16, %17
  br i1 %32, label %34, label %71

; <label>:34:                                     ; preds = %7, %71
  %35 = load i32, i32* @x.736
  %36 = load i32, i32* @y.737
  %37 = sub i32 %35, 1962592989
  %38 = sub i32 %37, 1
  %39 = add i32 %38, 1962592989
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %71

; <label>:61:                                     ; preds = %34
  ret void

; <label>:62:                                     ; preds = %1
  %63 = landingpad { i8*, i32 }
          cleanup
  %64 = extractvalue { i8*, i32 } %63, 0
  store i8* %64, i8** %3, align 8
  %65 = extractvalue { i8*, i32 } %63, 1
  store i32 %65, i32* %4, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6) #3
  br label %66

; <label>:66:                                     ; preds = %62
  %67 = load i8*, i8** %3, align 8
  %68 = load i32, i32* %4, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  resume { i8*, i32 } %70

; <label>:71:                                     ; preds = %34, %7
  br label %34
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.738
  %5 = load i32, i32* @y.739
  %6 = add i32 %4, -1713619274
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -1713619274
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -1483096082, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %81
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1483096082, label %18
    i32 -185949438, label %38
    i32 -81811175, label %72
    i32 474726452, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %81

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -185949438, i32 474726452
  store i32 %37, i32* %14
  br label %81

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %40 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %39, align 8
  %41 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40 to %"class.std::allocator.31"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.31"* %41) #3
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 0
  store i32** null, i32*** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 1
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %44) #3
  %45 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %40, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %45) #3
  %46 = load i32, i32* @x.738
  %47 = load i32, i32* @y.739
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -81811175, i32 474726452
  store i32 %71, i32* %14
  br label %81

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %74, align 8
  %75 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %74, align 8
  %76 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75 to %"class.std::allocator.31"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.31"* %76) #3
  %77 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75, i32 0, i32 0
  store i32** null, i32*** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75, i32 0, i32 1
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %79) #3
  %80 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %75, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %80) #3
  store i32 -185949438, i32* %14
  br label %81

; <label>:81:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.740
  %4 = load i32, i32* @y.741
  %5 = sub i32 %3, 1144373015
  %6 = sub i32 %5, 1
  %7 = add i32 %6, 1144373015
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = and i1 %11, %12
  %14 = xor i1 %11, %12
  %15 = or i1 %13, %14
  %16 = or i1 %11, %12
  br i1 %15, label %17, label %332

; <label>:17:                                     ; preds = %2, %332
  %18 = alloca %"class.std::_Deque_base"*, align 8
  %19 = alloca i64, align 8
  %20 = alloca i64, align 8
  %21 = alloca i64, align 8
  %22 = alloca i64, align 8
  %23 = alloca i32**, align 8
  %24 = alloca i32**, align 8
  %25 = alloca i8*
  %26 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %18, align 8
  store i64 %1, i64* %19, align 8
  %27 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %18, align 8
  %28 = load i64, i64* %19, align 8
  %29 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %30 = udiv i64 %28, %29
  %31 = sub i64 %30, -7240295758151031719
  %32 = add i64 %31, 1
  %33 = add i64 %32, -7240295758151031719
  %34 = add i64 %30, 1
  store i64 %33, i64* %20, align 8
  store i64 8, i64* %21, align 8
  %35 = load i64, i64* %20, align 8
  %36 = sub i64 0, 2
  %37 = sub i64 %35, %36
  %38 = add i64 %35, 2
  store i64 %37, i64* %22, align 8
  %39 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %21, i64* dereferenceable(8) %22)
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 1
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %27, i64 %45)
  %47 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %47, i32 0, i32 0
  store i32** %46, i32*** %48, align 8
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 0
  %51 = load i32**, i32*** %50, align 8
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = load i64, i64* %20, align 8
  %56 = sub i64 %54, 5856400444506142291
  %57 = sub i64 %56, %55
  %58 = add i64 %57, 5856400444506142291
  %59 = sub i64 %54, %55
  %60 = udiv i64 %58, 2
  %61 = getelementptr inbounds i32*, i32** %51, i64 %60
  store i32** %61, i32*** %23, align 8
  %62 = load i32**, i32*** %23, align 8
  %63 = load i64, i64* %20, align 8
  %64 = getelementptr inbounds i32*, i32** %62, i64 %63
  store i32** %64, i32*** %24, align 8
  %65 = load i32**, i32*** %23, align 8
  %66 = load i32**, i32*** %24, align 8
  %67 = load i32, i32* @x.740
  %68 = load i32, i32* @y.741
  %69 = sub i32 %67, 243574607
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 243574607
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  br i1 %91, label %93, label %332

; <label>:93:                                     ; preds = %17
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %27, i32** %65, i32** %66)
          to label %94 unwind label %95

; <label>:94:                                     ; preds = %93
  br label %187

; <label>:95:                                     ; preds = %93
  %96 = load i32, i32* @x.740
  %97 = load i32, i32* @y.741
  %98 = add i32 %96, 999980140
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 999980140
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = and i1 %104, %105
  %107 = xor i1 %104, %105
  %108 = or i1 %106, %107
  %109 = or i1 %104, %105
  br i1 %108, label %110, label %513

; <label>:110:                                    ; preds = %95, %513
  %111 = landingpad { i8*, i32 }
          catch i8* null
  %112 = extractvalue { i8*, i32 } %111, 0
  store i8* %112, i8** %25, align 8
  %113 = extractvalue { i8*, i32 } %111, 1
  store i32 %113, i32* %26, align 4
  %114 = load i32, i32* @x.740
  %115 = load i32, i32* @y.741
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = and i1 %121, %122
  %124 = xor i1 %121, %122
  %125 = or i1 %123, %124
  %126 = or i1 %121, %122
  br i1 %125, label %127, label %513

; <label>:127:                                    ; preds = %110
  br label %128

; <label>:128:                                    ; preds = %127
  %129 = load i32, i32* @x.740
  %130 = load i32, i32* @y.741
  %131 = sub i32 0, 1
  %132 = add i32 %129, %131
  %133 = sub i32 %129, 1
  %134 = mul i32 %129, %132
  %135 = urem i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = icmp slt i32 %130, 10
  %138 = xor i1 %136, true
  %139 = xor i1 %137, true
  %140 = xor i1 false, true
  %141 = and i1 %138, false
  %142 = and i1 %136, %140
  %143 = and i1 %139, false
  %144 = and i1 %137, %140
  %145 = or i1 %141, %142
  %146 = or i1 %143, %144
  %147 = xor i1 %145, %146
  %148 = or i1 %138, %139
  %149 = xor i1 %148, true
  %150 = or i1 false, %140
  %151 = and i1 %149, %150
  %152 = or i1 %147, %151
  %153 = or i1 %136, %137
  br i1 %152, label %154, label %517

; <label>:154:                                    ; preds = %128, %517
  %155 = load i8*, i8** %25, align 8
  %156 = call i8* @__cxa_begin_catch(i8* %155) #3
  %157 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %158 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %157, i32 0, i32 0
  %159 = load i32**, i32*** %158, align 8
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %27, i32** %159, i64 %162) #3
  %163 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %164 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %163, i32 0, i32 0
  store i32** null, i32*** %164, align 8
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %165, i32 0, i32 1
  store i64 0, i64* %166, align 8
  %167 = load i32, i32* @x.740
  %168 = load i32, i32* @y.741
  %169 = sub i32 %167, 250253857
  %170 = sub i32 %169, 1
  %171 = add i32 %170, 250253857
  %172 = sub i32 %167, 1
  %173 = mul i32 %167, %171
  %174 = urem i32 %173, 2
  %175 = icmp eq i32 %174, 0
  %176 = icmp slt i32 %168, 10
  %177 = and i1 %175, %176
  %178 = xor i1 %175, %176
  %179 = or i1 %177, %178
  %180 = or i1 %175, %176
  br i1 %179, label %181, label %517

; <label>:181:                                    ; preds = %154
  invoke void @__cxa_rethrow() #12
          to label %289 unwind label %182

; <label>:182:                                    ; preds = %181
  %183 = landingpad { i8*, i32 }
          cleanup
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %25, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %26, align 4
  invoke void @__cxa_end_catch()
          to label %186 unwind label %246

; <label>:186:                                    ; preds = %182
  br label %213

; <label>:187:                                    ; preds = %94
  %188 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %189 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %188, i32 0, i32 2
  %190 = load i32**, i32*** %23, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %189, i32** %190) #3
  %191 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %192 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %191, i32 0, i32 3
  %193 = load i32**, i32*** %24, align 8
  %194 = getelementptr inbounds i32*, i32** %193, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %192, i32** %194) #3
  %195 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %196 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %195, i32 0, i32 2
  %197 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %196, i32 0, i32 1
  %198 = load i32*, i32** %197, align 8
  %199 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %199, i32 0, i32 2
  %201 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %200, i32 0, i32 0
  store i32* %198, i32** %201, align 8
  %202 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %202, i32 0, i32 3
  %204 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %203, i32 0, i32 1
  %205 = load i32*, i32** %204, align 8
  %206 = load i64, i64* %19, align 8
  %207 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %208 = urem i64 %206, %207
  %209 = getelementptr inbounds i32, i32* %205, i64 %208
  %210 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %210, i32 0, i32 3
  %212 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %211, i32 0, i32 0
  store i32* %209, i32** %212, align 8
  ret void

; <label>:213:                                    ; preds = %186
  %214 = load i32, i32* @x.740
  %215 = load i32, i32* @y.741
  %216 = sub i32 0, 1
  %217 = add i32 %214, %216
  %218 = sub i32 %214, 1
  %219 = mul i32 %214, %217
  %220 = urem i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = icmp slt i32 %215, 10
  %223 = and i1 %221, %222
  %224 = xor i1 %221, %222
  %225 = or i1 %223, %224
  %226 = or i1 %221, %222
  br i1 %225, label %227, label %530

; <label>:227:                                    ; preds = %213, %530
  %228 = load i8*, i8** %25, align 8
  %229 = load i32, i32* %26, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  %232 = load i32, i32* @x.740
  %233 = load i32, i32* @y.741
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %530

; <label>:245:                                    ; preds = %227
  resume { i8*, i32 } %231

; <label>:246:                                    ; preds = %182
  %247 = load i32, i32* @x.740
  %248 = load i32, i32* @y.741
  %249 = sub i32 0, 1
  %250 = add i32 %247, %249
  %251 = sub i32 %247, 1
  %252 = mul i32 %247, %250
  %253 = urem i32 %252, 2
  %254 = icmp eq i32 %253, 0
  %255 = icmp slt i32 %248, 10
  %256 = and i1 %254, %255
  %257 = xor i1 %254, %255
  %258 = or i1 %256, %257
  %259 = or i1 %254, %255
  br i1 %258, label %260, label %535

; <label>:260:                                    ; preds = %246, %535
  %261 = landingpad { i8*, i32 }
          catch i8* null
  %262 = extractvalue { i8*, i32 } %261, 0
  call void @__clang_call_terminate(i8* %262) #10
  %263 = load i32, i32* @x.740
  %264 = load i32, i32* @y.741
  %265 = sub i32 0, 1
  %266 = add i32 %263, %265
  %267 = sub i32 %263, 1
  %268 = mul i32 %263, %266
  %269 = urem i32 %268, 2
  %270 = icmp eq i32 %269, 0
  %271 = icmp slt i32 %264, 10
  %272 = xor i1 %270, true
  %273 = xor i1 %271, true
  %274 = xor i1 true, true
  %275 = and i1 %272, true
  %276 = and i1 %270, %274
  %277 = and i1 %273, true
  %278 = and i1 %271, %274
  %279 = or i1 %275, %276
  %280 = or i1 %277, %278
  %281 = xor i1 %279, %280
  %282 = or i1 %272, %273
  %283 = xor i1 %282, true
  %284 = or i1 true, %274
  %285 = and i1 %283, %284
  %286 = or i1 %281, %285
  %287 = or i1 %270, %271
  br i1 %286, label %288, label %535

; <label>:288:                                    ; preds = %260
  unreachable

; <label>:289:                                    ; preds = %181
  %290 = load i32, i32* @x.740
  %291 = load i32, i32* @y.741
  %292 = sub i32 %290, -1908731080
  %293 = sub i32 %292, 1
  %294 = add i32 %293, -1908731080
  %295 = sub i32 %290, 1
  %296 = mul i32 %290, %294
  %297 = urem i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = icmp slt i32 %291, 10
  %300 = xor i1 %298, true
  %301 = xor i1 %299, true
  %302 = xor i1 true, true
  %303 = and i1 %300, true
  %304 = and i1 %298, %302
  %305 = and i1 %301, true
  %306 = and i1 %299, %302
  %307 = or i1 %303, %304
  %308 = or i1 %305, %306
  %309 = xor i1 %307, %308
  %310 = or i1 %300, %301
  %311 = xor i1 %310, true
  %312 = or i1 true, %302
  %313 = and i1 %311, %312
  %314 = or i1 %309, %313
  %315 = or i1 %298, %299
  br i1 %314, label %316, label %538

; <label>:316:                                    ; preds = %289, %538
  %317 = load i32, i32* @x.740
  %318 = load i32, i32* @y.741
  %319 = add i32 %317, 583101101
  %320 = sub i32 %319, 1
  %321 = sub i32 %320, 583101101
  %322 = sub i32 %317, 1
  %323 = mul i32 %317, %321
  %324 = urem i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = icmp slt i32 %318, 10
  %327 = and i1 %325, %326
  %328 = xor i1 %325, %326
  %329 = or i1 %327, %328
  %330 = or i1 %325, %326
  br i1 %329, label %331, label %538

; <label>:331:                                    ; preds = %316
  unreachable

; <label>:332:                                    ; preds = %17, %2
  %333 = alloca %"class.std::_Deque_base"*, align 8
  %334 = alloca i64, align 8
  %335 = alloca i64, align 8
  %336 = alloca i64, align 8
  %337 = alloca i64, align 8
  %338 = alloca i32**, align 8
  %339 = alloca i32**, align 8
  %340 = alloca i8*
  %341 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %333, align 8
  store i64 %1, i64* %334, align 8
  %342 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %333, align 8
  %343 = load i64, i64* %334, align 8
  %344 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %345 = shl i64 %343, %344
  %346 = sub i64 0, %343
  %347 = add i64 0, %346
  %348 = sub i64 0, %343
  %349 = add i64 %347, 286231896493680587
  %350 = add i64 %349, %344
  %351 = sub i64 %350, 286231896493680587
  %352 = add i64 %347, %344
  %353 = add i64 0, -7015515890405061631
  %354 = sub i64 %353, %343
  %355 = sub i64 %354, -7015515890405061631
  %356 = sub i64 0, %343
  %357 = sub i64 %355, -2406723546371978274
  %358 = add i64 %357, %344
  %359 = add i64 %358, -2406723546371978274
  %360 = add i64 %355, %344
  %361 = add i64 0, -2615334000822222396
  %362 = sub i64 %361, %343
  %363 = sub i64 %362, -2615334000822222396
  %364 = sub i64 0, %343
  %365 = sub i64 %363, -8385719340349210095
  %366 = add i64 %365, %344
  %367 = add i64 %366, -8385719340349210095
  %368 = add i64 %363, %344
  %369 = add i64 0, -667761850723279816
  %370 = sub i64 %369, %343
  %371 = sub i64 %370, -667761850723279816
  %372 = sub i64 0, %343
  %373 = sub i64 %371, 8610713823072468040
  %374 = add i64 %373, %344
  %375 = add i64 %374, 8610713823072468040
  %376 = add i64 %371, %344
  %377 = udiv i64 %343, %344
  %378 = sub i64 0, 1
  %379 = add i64 %377, %378
  %380 = sub i64 %377, 1
  %381 = mul i64 %379, 1
  %382 = add i64 0, 2807768192768767478
  %383 = sub i64 %382, %377
  %384 = sub i64 %383, 2807768192768767478
  %385 = sub i64 0, %377
  %386 = sub i64 0, %384
  %387 = sub i64 0, 1
  %388 = add i64 %386, %387
  %389 = sub i64 0, %388
  %390 = add i64 %384, 1
  %391 = sub i64 0, 1
  %392 = add i64 %377, %391
  %393 = sub i64 %377, 1
  %394 = mul i64 %392, 1
  %395 = sub i64 %377, 1734641021871672372
  %396 = sub i64 %395, 1
  %397 = add i64 %396, 1734641021871672372
  %398 = sub i64 %377, 1
  %399 = mul i64 %397, 1
  %400 = add i64 %377, -6783747396105163032
  %401 = add i64 %400, 1
  %402 = sub i64 %401, -6783747396105163032
  %403 = add i64 %377, 1
  store i64 %402, i64* %335, align 8
  store i64 8, i64* %336, align 8
  %404 = load i64, i64* %335, align 8
  %405 = add i64 %404, 7549496867628921068
  %406 = sub i64 %405, 2
  %407 = sub i64 %406, 7549496867628921068
  %408 = sub i64 %404, 2
  %409 = mul i64 %407, 2
  %410 = shl i64 %404, 2
  %411 = sub i64 %404, 1450560575561863014
  %412 = sub i64 %411, 2
  %413 = add i64 %412, 1450560575561863014
  %414 = sub i64 %404, 2
  %415 = mul i64 %413, 2
  %416 = add i64 %404, -3248070047654373158
  %417 = add i64 %416, 2
  %418 = sub i64 %417, -3248070047654373158
  %419 = add i64 %404, 2
  store i64 %418, i64* %337, align 8
  %420 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %336, i64* dereferenceable(8) %337)
  %421 = load i64, i64* %420, align 8
  %422 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %342, i32 0, i32 0
  %423 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %422, i32 0, i32 1
  store i64 %421, i64* %423, align 8
  %424 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %342, i32 0, i32 0
  %425 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %424, i32 0, i32 1
  %426 = load i64, i64* %425, align 8
  %427 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %342, i64 %426)
  %428 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %342, i32 0, i32 0
  %429 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %428, i32 0, i32 0
  store i32** %427, i32*** %429, align 8
  %430 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %342, i32 0, i32 0
  %431 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %430, i32 0, i32 0
  %432 = load i32**, i32*** %431, align 8
  %433 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %342, i32 0, i32 0
  %434 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %433, i32 0, i32 1
  %435 = load i64, i64* %434, align 8
  %436 = load i64, i64* %335, align 8
  %437 = add i64 %435, 5500650658181321696
  %438 = sub i64 %437, %436
  %439 = sub i64 %438, 5500650658181321696
  %440 = sub i64 %435, %436
  %441 = mul i64 %439, %436
  %442 = add i64 0, 5529408122848814029
  %443 = sub i64 %442, %435
  %444 = sub i64 %443, 5529408122848814029
  %445 = sub i64 0, %435
  %446 = add i64 %444, -1459619578108118219
  %447 = add i64 %446, %436
  %448 = sub i64 %447, -1459619578108118219
  %449 = add i64 %444, %436
  %450 = sub i64 0, %436
  %451 = add i64 %435, %450
  %452 = sub i64 %435, %436
  %453 = mul i64 %451, %436
  %454 = sub i64 %435, -6591768587977652568
  %455 = sub i64 %454, %436
  %456 = add i64 %455, -6591768587977652568
  %457 = sub i64 %435, %436
  %458 = mul i64 %456, %436
  %459 = shl i64 %435, %436
  %460 = sub i64 0, %436
  %461 = add i64 %435, %460
  %462 = sub i64 %435, %436
  %463 = mul i64 %461, %436
  %464 = add i64 0, 1389476692324424701
  %465 = sub i64 %464, %435
  %466 = sub i64 %465, 1389476692324424701
  %467 = sub i64 0, %435
  %468 = sub i64 %466, -8769129586171826889
  %469 = add i64 %468, %436
  %470 = add i64 %469, -8769129586171826889
  %471 = add i64 %466, %436
  %472 = shl i64 %435, %436
  %473 = sub i64 0, -6763017637311888813
  %474 = sub i64 %473, %435
  %475 = add i64 %474, -6763017637311888813
  %476 = sub i64 0, %435
  %477 = sub i64 %475, 8892106392199948930
  %478 = add i64 %477, %436
  %479 = add i64 %478, 8892106392199948930
  %480 = add i64 %475, %436
  %481 = sub i64 0, %436
  %482 = add i64 %435, %481
  %483 = sub i64 %435, %436
  %484 = shl i64 %482, 2
  %485 = sub i64 0, -1317345340968476567
  %486 = sub i64 %485, %482
  %487 = add i64 %486, -1317345340968476567
  %488 = sub i64 0, %482
  %489 = sub i64 0, 2
  %490 = sub i64 %487, %489
  %491 = add i64 %487, 2
  %492 = sub i64 0, 2
  %493 = add i64 %482, %492
  %494 = sub i64 %482, 2
  %495 = mul i64 %493, 2
  %496 = shl i64 %482, 2
  %497 = sub i64 0, -3763063500121433045
  %498 = sub i64 %497, %482
  %499 = add i64 %498, -3763063500121433045
  %500 = sub i64 0, %482
  %501 = sub i64 0, %499
  %502 = sub i64 0, 2
  %503 = add i64 %501, %502
  %504 = sub i64 0, %503
  %505 = add i64 %499, 2
  %506 = udiv i64 %482, 2
  %507 = getelementptr inbounds i32*, i32** %432, i64 %506
  store i32** %507, i32*** %338, align 8
  %508 = load i32**, i32*** %338, align 8
  %509 = load i64, i64* %335, align 8
  %510 = getelementptr inbounds i32*, i32** %508, i64 %509
  store i32** %510, i32*** %339, align 8
  %511 = load i32**, i32*** %338, align 8
  %512 = load i32**, i32*** %339, align 8
  br label %17

; <label>:513:                                    ; preds = %110, %95
  %514 = landingpad { i8*, i32 }
          catch i8* null
  %515 = extractvalue { i8*, i32 } %514, 0
  store i8* %515, i8** %25, align 8
  %516 = extractvalue { i8*, i32 } %514, 1
  store i32 %516, i32* %26, align 4
  br label %110

; <label>:517:                                    ; preds = %154, %128
  %518 = load i8*, i8** %25, align 8
  %519 = call i8* @__cxa_begin_catch(i8* %518) #3
  %520 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %521 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %520, i32 0, i32 0
  %522 = load i32**, i32*** %521, align 8
  %523 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %524 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %523, i32 0, i32 1
  %525 = load i64, i64* %524, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %27, i32** %522, i64 %525) #3
  %526 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %527 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %526, i32 0, i32 0
  store i32** null, i32*** %527, align 8
  %528 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %529 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %528, i32 0, i32 1
  store i64 0, i64* %529, align 8
  br label %154

; <label>:530:                                    ; preds = %227, %213
  %531 = load i8*, i8** %25, align 8
  %532 = load i32, i32* %26, align 4
  %533 = insertvalue { i8*, i32 } undef, i8* %531, 0
  %534 = insertvalue { i8*, i32 } %533, i32 %532, 1
  br label %227

; <label>:535:                                    ; preds = %260, %246
  %536 = landingpad { i8*, i32 }
          catch i8* null
  %537 = extractvalue { i8*, i32 } %536, 0
  call void @__clang_call_terminate(i8* %537) #10
  br label %260

; <label>:538:                                    ; preds = %316, %289
  br label %316
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.31"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.31"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.744
  %5 = load i32, i32* @y.745
  %6 = sub i32 %4, 1777270596
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1777270596
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 672207564, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %56
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 672207564, label %18
    i32 1392227213, label %26
    i32 412535340, label %48
    i32 1509029250, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %56

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1392227213, i32 1509029250
  store i32 %25, i32* %14
  br label %56

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %27, align 8
  %28 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  store i32* null, i32** %29, align 8
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 1
  store i32* null, i32** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 2
  store i32* null, i32** %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 3
  store i32** null, i32*** %32, align 8
  %33 = load i32, i32* @x.744
  %34 = load i32, i32* @y.745
  %35 = add i32 %33, -897853586
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -897853586
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 412535340, i32 1509029250
  store i32 %47, i32* %14
  br label %56

; <label>:48:                                     ; preds = %15
  ret void

; <label>:49:                                     ; preds = %15
  %50 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %50, align 8
  %51 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 0
  store i32* null, i32** %52, align 8
  %53 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 1
  store i32* null, i32** %53, align 8
  %54 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 2
  store i32* null, i32** %54, align 8
  %55 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %51, i32 0, i32 3
  store i32** null, i32*** %55, align 8
  store i32 1392227213, i32* %14
  br label %56

; <label>:56:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64, align 8
  store i64 %0, i64* %3, align 8
  %4 = load i64, i64* %3, align 8
  store i64 %4, i64* %2
  %5 = alloca i32
  store i32 -1517685211, i32* %5
  %6 = alloca i64
  br label %7

; <label>:7:                                      ; preds = %1, %20
  %8 = load i32, i32* %5
  switch i32 %8, label %9 [
    i32 -1517685211, label %10
    i32 -1253845928, label %14
    i32 370403391, label %17
    i32 1946676747, label %18
  ]

; <label>:9:                                      ; preds = %7
  br label %20

; <label>:10:                                     ; preds = %7
  %11 = load volatile i64, i64* %2
  %12 = icmp ult i64 %11, 512
  %13 = select i1 %12, i32 -1253845928, i32 370403391
  store i32 %13, i32* %5
  br label %20

; <label>:14:                                     ; preds = %7
  %15 = load i64, i64* %3, align 8
  %16 = udiv i64 512, %15
  store i32 1946676747, i32* %5
  store i64 %16, i64* %6
  br label %20

; <label>:17:                                     ; preds = %7
  store i32 1946676747, i32* %5
  store i64 1, i64* %6
  br label %20

; <label>:18:                                     ; preds = %7
  %19 = load i64, i64* %6
  ret i64 %19

; <label>:20:                                     ; preds = %17, %14, %10, %9
  br label %7
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::allocator.34", align 1
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.34"* sret %5, %"class.std::_Deque_base"* %8) #3
  %9 = load i64, i64* %4, align 8
  %10 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.34"* dereferenceable(1) %5, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %2
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %5) #3
  ret i32** %10

; <label>:12:                                     ; preds = %2
  %13 = load i32, i32* @x.748
  %14 = load i32, i32* @y.749
  %15 = add i32 %13, -540685321
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -540685321
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %103

; <label>:39:                                     ; preds = %12, %103
  %40 = landingpad { i8*, i32 }
          cleanup
  %41 = extractvalue { i8*, i32 } %40, 0
  store i8* %41, i8** %6, align 8
  %42 = extractvalue { i8*, i32 } %40, 1
  store i32 %42, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %5) #3
  %43 = load i32, i32* @x.748
  %44 = load i32, i32* @y.749
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  br i1 %54, label %56, label %103

; <label>:56:                                     ; preds = %39
  br label %57

; <label>:57:                                     ; preds = %56
  %58 = load i32, i32* @x.748
  %59 = load i32, i32* @y.749
  %60 = sub i32 0, 1
  %61 = add i32 %58, %60
  %62 = sub i32 %58, 1
  %63 = mul i32 %58, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %59, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  br i1 %69, label %71, label %107

; <label>:71:                                     ; preds = %57, %107
  %72 = load i8*, i8** %6, align 8
  %73 = load i32, i32* %7, align 4
  %74 = insertvalue { i8*, i32 } undef, i8* %72, 0
  %75 = insertvalue { i8*, i32 } %74, i32 %73, 1
  %76 = load i32, i32* @x.748
  %77 = load i32, i32* @y.749
  %78 = add i32 %76, 32738415
  %79 = sub i32 %78, 1
  %80 = sub i32 %79, 32738415
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = xor i1 %84, true
  %87 = xor i1 %85, true
  %88 = xor i1 false, true
  %89 = and i1 %86, false
  %90 = and i1 %84, %88
  %91 = and i1 %87, false
  %92 = and i1 %85, %88
  %93 = or i1 %89, %90
  %94 = or i1 %91, %92
  %95 = xor i1 %93, %94
  %96 = or i1 %86, %87
  %97 = xor i1 %96, true
  %98 = or i1 false, %88
  %99 = and i1 %97, %98
  %100 = or i1 %95, %99
  %101 = or i1 %84, %85
  br i1 %100, label %102, label %107

; <label>:102:                                    ; preds = %71
  resume { i8*, i32 } %75

; <label>:103:                                    ; preds = %39, %12
  %104 = landingpad { i8*, i32 }
          cleanup
  %105 = extractvalue { i8*, i32 } %104, 0
  store i8* %105, i8** %6, align 8
  %106 = extractvalue { i8*, i32 } %104, 1
  store i32 %106, i32* %7, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %5) #3
  br label %39

; <label>:107:                                    ; preds = %71, %57
  %108 = load i8*, i8** %6, align 8
  %109 = load i32, i32* %7, align 4
  %110 = insertvalue { i8*, i32 } undef, i8* %108, 0
  %111 = insertvalue { i8*, i32 } %110, i32 %109, 1
  br label %71
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %11 = load i32**, i32*** %5, align 8
  store i32** %11, i32*** %7, align 8
  br label %12

; <label>:12:                                     ; preds = %48, %3
  %13 = load i32**, i32*** %7, align 8
  %14 = load i32**, i32*** %6, align 8
  %15 = icmp ult i32** %13, %14
  br i1 %15, label %16, label %60

; <label>:16:                                     ; preds = %12
  %17 = load i32, i32* @x.750
  %18 = load i32, i32* @y.751
  %19 = sub i32 0, 1
  %20 = add i32 %17, %19
  %21 = sub i32 %17, 1
  %22 = mul i32 %17, %20
  %23 = urem i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = icmp slt i32 %18, 10
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  br i1 %28, label %30, label %157

; <label>:30:                                     ; preds = %16, %157
  %31 = load i32, i32* @x.750
  %32 = load i32, i32* @y.751
  %33 = sub i32 0, 1
  %34 = add i32 %31, %33
  %35 = sub i32 %31, 1
  %36 = mul i32 %31, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %32, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  br i1 %42, label %44, label %157

; <label>:44:                                     ; preds = %30
  %45 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %10)
          to label %46 unwind label %51

; <label>:46:                                     ; preds = %44
  %47 = load i32**, i32*** %7, align 8
  store i32* %45, i32** %47, align 8
  br label %48

; <label>:48:                                     ; preds = %46
  %49 = load i32**, i32*** %7, align 8
  %50 = getelementptr inbounds i32*, i32** %49, i32 1
  store i32** %50, i32*** %7, align 8
  br label %12

; <label>:51:                                     ; preds = %44
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %8, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %9, align 4
  br label %55

; <label>:55:                                     ; preds = %51
  %56 = load i8*, i8** %8, align 8
  %57 = call i8* @__cxa_begin_catch(i8* %56) #3
  %58 = load i32**, i32*** %5, align 8
  %59 = load i32**, i32*** %7, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %10, i32** %58, i32** %59) #3
  invoke void @__cxa_rethrow() #12
          to label %156 unwind label %61

; <label>:60:                                     ; preds = %12
  br label %106

; <label>:61:                                     ; preds = %55
  %62 = landingpad { i8*, i32 }
          cleanup
  %63 = extractvalue { i8*, i32 } %62, 0
  store i8* %63, i8** %8, align 8
  %64 = extractvalue { i8*, i32 } %62, 1
  store i32 %64, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %65 unwind label %153

; <label>:65:                                     ; preds = %61
  %66 = load i32, i32* @x.750
  %67 = load i32, i32* @y.751
  %68 = sub i32 0, 1
  %69 = add i32 %66, %68
  %70 = sub i32 %66, 1
  %71 = mul i32 %66, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %67, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %158

; <label>:79:                                     ; preds = %65, %158
  %80 = load i32, i32* @x.750
  %81 = load i32, i32* @y.751
  %82 = sub i32 0, 1
  %83 = add i32 %80, %82
  %84 = sub i32 %80, 1
  %85 = mul i32 %80, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %81, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 true, true
  %92 = and i1 %89, true
  %93 = and i1 %87, %91
  %94 = and i1 %90, true
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 true, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  br i1 %103, label %105, label %158

; <label>:105:                                    ; preds = %79
  br label %148

; <label>:106:                                    ; preds = %60
  %107 = load i32, i32* @x.750
  %108 = load i32, i32* @y.751
  %109 = sub i32 %107, 495087827
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 495087827
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = xor i1 %115, true
  %118 = xor i1 %116, true
  %119 = xor i1 false, true
  %120 = and i1 %117, false
  %121 = and i1 %115, %119
  %122 = and i1 %118, false
  %123 = and i1 %116, %119
  %124 = or i1 %120, %121
  %125 = or i1 %122, %123
  %126 = xor i1 %124, %125
  %127 = or i1 %117, %118
  %128 = xor i1 %127, true
  %129 = or i1 false, %119
  %130 = and i1 %128, %129
  %131 = or i1 %126, %130
  %132 = or i1 %115, %116
  br i1 %131, label %133, label %159

; <label>:133:                                    ; preds = %106, %159
  %134 = load i32, i32* @x.750
  %135 = load i32, i32* @y.751
  %136 = sub i32 0, 1
  %137 = add i32 %134, %136
  %138 = sub i32 %134, 1
  %139 = mul i32 %134, %137
  %140 = urem i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = icmp slt i32 %135, 10
  %143 = and i1 %141, %142
  %144 = xor i1 %141, %142
  %145 = or i1 %143, %144
  %146 = or i1 %141, %142
  br i1 %145, label %147, label %159

; <label>:147:                                    ; preds = %133
  ret void

; <label>:148:                                    ; preds = %105
  %149 = load i8*, i8** %8, align 8
  %150 = load i32, i32* %9, align 4
  %151 = insertvalue { i8*, i32 } undef, i8* %149, 0
  %152 = insertvalue { i8*, i32 } %151, i32 %150, 1
  resume { i8*, i32 } %152

; <label>:153:                                    ; preds = %61
  %154 = landingpad { i8*, i32 }
          catch i8* null
  %155 = extractvalue { i8*, i32 } %154, 0
  call void @__clang_call_terminate(i8* %155) #10
  unreachable

; <label>:156:                                    ; preds = %55
  unreachable

; <label>:157:                                    ; preds = %30, %16
  br label %30

; <label>:158:                                    ; preds = %79, %65
  br label %79

; <label>:159:                                    ; preds = %133, %106
  br label %133
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.34", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.34"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.34"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %44

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.752
  %15 = load i32, i32* @y.753
  %16 = add i32 %14, 613331602
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 613331602
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  br i1 %26, label %28, label %50

; <label>:28:                                     ; preds = %13, %50
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %7) #3
  %29 = load i32, i32* @x.752
  %30 = load i32, i32* @y.753
  %31 = sub i32 %29, -2053718426
  %32 = sub i32 %31, 1
  %33 = add i32 %32, -2053718426
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %50

; <label>:43:                                     ; preds = %28
  ret void

; <label>:44:                                     ; preds = %3
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  store i8* %46, i8** %8, align 8
  %47 = extractvalue { i8*, i32 } %45, 1
  store i32 %47, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %7) #3
  br label %48

; <label>:48:                                     ; preds = %44
  %49 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %49) #10
  unreachable

; <label>:50:                                     ; preds = %28, %13
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.34"* %7) #3
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.34"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %3, align 8
  %4 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %5 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.34"* %0, %"class.std::allocator.31"* dereferenceable(1) %5) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.34"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca i32**
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.758
  %7 = load i32, i32* @y.759
  %8 = add i32 %6, -315361843
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -315361843
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 1695328247, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 1695328247, label %20
    i32 2053428080, label %28
    i32 957365418, label %62
    i32 -691478694, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 2053428080, i32 -691478694
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.34"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %29, align 8
  %32 = bitcast %"class.std::allocator.34"* %31 to %"class.__gnu_cxx::new_allocator.35"*
  %33 = load i64, i64* %30, align 8
  %34 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.35"* %32, i64 %33, i8* null)
  store i32** %34, i32*** %3
  %35 = load i32, i32* @x.758
  %36 = load i32, i32* @y.759
  %37 = add i32 %35, 1092313563
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 1092313563
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 957365418, i32 -691478694
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile i32**, i32*** %3
  ret i32** %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.34"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %65, align 8
  %68 = bitcast %"class.std::allocator.34"* %67 to %"class.__gnu_cxx::new_allocator.35"*
  %69 = load i64, i64* %66, align 8
  %70 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.35"* %68, i64 %69, i8* null)
  store i32 2053428080, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.34"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.760
  %5 = load i32, i32* @y.761
  %6 = sub i32 %4, -148279486
  %7 = sub i32 %6, 1
  %8 = add i32 %7, -148279486
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 970631468, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %74
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 970631468, label %18
    i32 162759680, label %38
    i32 376078642, label %69
    i32 -973570047, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %74

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 162759680, i32 -973570047
  store i32 %37, i32* %14
  br label %74

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %39, align 8
  %40 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %39, align 8
  %41 = bitcast %"class.std::allocator.34"* %40 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.35"* %41) #3
  %42 = load i32, i32* @x.760
  %43 = load i32, i32* @y.761
  %44 = sub i32 %42, -1201823676
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -1201823676
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 376078642, i32 -973570047
  store i32 %68, i32* %14
  br label %74

; <label>:69:                                     ; preds = %15
  ret void

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::allocator.34"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %71, align 8
  %72 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %71, align 8
  %73 = bitcast %"class.std::allocator.34"* %72 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.35"* %73) #3
  store i32 162759680, i32* %14
  br label %74

; <label>:74:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.31"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.31"*
  ret %"class.std::allocator.31"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.34"*, %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::allocator.34"*, align 8
  %4 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %3, align 8
  store %"class.std::allocator.31"* %1, %"class.std::allocator.31"** %4, align 8
  %5 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %3, align 8
  %6 = bitcast %"class.std::allocator.34"* %5 to %"class.__gnu_cxx::new_allocator.35"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.35"* %6) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.35"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.766
  %5 = load i32, i32* @y.767
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -780455396, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %58
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -780455396, label %17
    i32 1092669845, label %25
    i32 -901992920, label %54
    i32 373544915, label %55
  ]

; <label>:16:                                     ; preds = %14
  br label %58

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1092669845, i32 373544915
  store i32 %24, i32* %13
  br label %58

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %26, align 8
  %28 = load i32, i32* @x.766
  %29 = load i32, i32* @y.767
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  %53 = select i1 %51, i32 -901992920, i32 373544915
  store i32 %53, i32* %13
  br label %58

; <label>:54:                                     ; preds = %14
  ret void

; <label>:55:                                     ; preds = %14
  %56 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %56, align 8
  %57 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %56, align 8
  store i32 1092669845, i32* %13
  br label %58

; <label>:58:                                     ; preds = %55, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.35"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.35"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 897886683, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 897886683, label %16
    i32 -1382967860, label %21
    i32 1590872872, label %37
    i32 -81323358, label %65
    i32 -498175957, label %66
    i32 -336676125, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1382967860, i32 -498175957
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.768
  %23 = load i32, i32* @y.769
  %24 = sub i32 %22, -1667923801
  %25 = sub i32 %24, 1
  %26 = add i32 %25, -1667923801
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 1590872872, i32 -336676125
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.768
  %39 = load i32, i32* @y.769
  %40 = add i32 %38, -578140341
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, -578140341
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 false, true
  %51 = and i1 %48, false
  %52 = and i1 %46, %50
  %53 = and i1 %49, false
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 false, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -81323358, i32 -336676125
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 8
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to i32**
  ret i32** %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 1590872872, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.35"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.35"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.31"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.31"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 -1829597403, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %121
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -1829597403, label %15
    i32 -2094507611, label %20
    i32 -863423179, label %47
    i32 1425393520, label %78
    i32 -446572897, label %79
    i32 -1353535571, label %95
    i32 971033301, label %112
    i32 -1155509665, label %113
    i32 -654665687, label %114
    i32 -1641622741, label %118
  ]

; <label>:14:                                     ; preds = %12
  br label %121

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 -2094507611, i32 -1155509665
  store i32 %19, i32* %11
  br label %121

; <label>:20:                                     ; preds = %12
  %21 = load i32, i32* @x.776
  %22 = load i32, i32* @y.777
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 -863423179, i32 -654665687
  store i32 %46, i32* %11
  br label %121

; <label>:47:                                     ; preds = %12
  %48 = load i32**, i32*** %8, align 8
  %49 = load i32*, i32** %48, align 8
  %50 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %50, i32* %49) #3
  %51 = load i32, i32* @x.776
  %52 = load i32, i32* @y.777
  %53 = add i32 %51, -767533277
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -767533277
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 true, true
  %64 = and i1 %61, true
  %65 = and i1 %59, %63
  %66 = and i1 %62, true
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 true, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 1425393520, i32 -654665687
  store i32 %77, i32* %11
  br label %121

; <label>:78:                                     ; preds = %12
  store i32 -446572897, i32* %11
  br label %121

; <label>:79:                                     ; preds = %12
  %80 = load i32, i32* @x.776
  %81 = load i32, i32* @y.777
  %82 = add i32 %80, -1331860978
  %83 = sub i32 %82, 1
  %84 = sub i32 %83, -1331860978
  %85 = sub i32 %80, 1
  %86 = mul i32 %80, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %81, 10
  %90 = and i1 %88, %89
  %91 = xor i1 %88, %89
  %92 = or i1 %90, %91
  %93 = or i1 %88, %89
  %94 = select i1 %92, i32 -1353535571, i32 -1641622741
  store i32 %94, i32* %11
  br label %121

; <label>:95:                                     ; preds = %12
  %96 = load i32**, i32*** %8, align 8
  %97 = getelementptr inbounds i32*, i32** %96, i32 1
  store i32** %97, i32*** %8, align 8
  %98 = load i32, i32* @x.776
  %99 = load i32, i32* @y.777
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 971033301, i32 -1641622741
  store i32 %111, i32* %11
  br label %121

; <label>:112:                                    ; preds = %12
  store i32 -1829597403, i32* %11
  br label %121

; <label>:113:                                    ; preds = %12
  ret void

; <label>:114:                                    ; preds = %12
  %115 = load i32**, i32*** %8, align 8
  %116 = load i32*, i32** %115, align 8
  %117 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %117, i32* %116) #3
  store i32 -863423179, i32* %11
  br label %121

; <label>:118:                                    ; preds = %12
  %119 = load i32**, i32*** %8, align 8
  %120 = getelementptr inbounds i32*, i32** %119, i32 1
  store i32** %120, i32*** %8, align 8
  store i32 -1353535571, i32* %11
  br label %121

; <label>:121:                                    ; preds = %118, %114, %112, %95, %79, %78, %47, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.31"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %12

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.31"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %11 unwind label %12

; <label>:11:                                     ; preds = %10
  ret void

; <label>:12:                                     ; preds = %10, %2
  %13 = load i32, i32* @x.778
  %14 = load i32, i32* @y.779
  %15 = add i32 %13, -1271073726
  %16 = sub i32 %15, 1
  %17 = sub i32 %16, -1271073726
  %18 = sub i32 %13, 1
  %19 = mul i32 %13, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %14, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %69

; <label>:39:                                     ; preds = %12, %69
  %40 = landingpad { i8*, i32 }
          catch i8* null
  %41 = extractvalue { i8*, i32 } %40, 0
  call void @__clang_call_terminate(i8* %41) #10
  %42 = load i32, i32* @x.778
  %43 = load i32, i32* @y.779
  %44 = sub i32 %42, -211678794
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -211678794
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %69

; <label>:68:                                     ; preds = %39
  unreachable

; <label>:69:                                     ; preds = %39, %12
  %70 = landingpad { i8*, i32 }
          catch i8* null
  %71 = extractvalue { i8*, i32 } %70, 0
  call void @__clang_call_terminate(i8* %71) #10
  br label %39
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.34"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.34"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.34"* %0, %"class.std::allocator.34"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.34"*, %"class.std::allocator.34"** %4, align 8
  %8 = bitcast %"class.std::allocator.34"* %7 to %"class.__gnu_cxx::new_allocator.35"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.35"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.35"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.35"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.35"* %0, %"class.__gnu_cxx::new_allocator.35"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.35"*, %"class.__gnu_cxx::new_allocator.35"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = load i32, i32* @x.784
  %2 = load i32, i32* @y.785
  %3 = sub i32 0, 1
  %4 = add i32 %1, %3
  %5 = sub i32 %1, 1
  %6 = mul i32 %1, %4
  %7 = urem i32 %6, 2
  %8 = icmp eq i32 %7, 0
  %9 = icmp slt i32 %2, 10
  %10 = and i1 %8, %9
  %11 = xor i1 %8, %9
  %12 = or i1 %10, %11
  %13 = or i1 %8, %9
  br i1 %12, label %14, label %47

; <label>:14:                                     ; preds = %0, %47
  %15 = load i32, i32* @x.784
  %16 = load i32, i32* @y.785
  %17 = sub i32 %15, -1838883690
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -1838883690
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %47

; <label>:41:                                     ; preds = %14
  %42 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %43 unwind label %44

; <label>:43:                                     ; preds = %41
  ret i64 %42

; <label>:44:                                     ; preds = %41
  %45 = landingpad { i8*, i32 }
          catch i8* null
  %46 = extractvalue { i8*, i32 } %45, 0
  call void @__clang_call_terminate(i8* %46) #10
  unreachable

; <label>:47:                                     ; preds = %14, %0
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.788
  %6 = load i32, i32* @y.789
  %7 = sub i32 %5, -1688495960
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1688495960
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1774468096, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %58
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1774468096, label %19
    i32 1486055575, label %27
    i32 1400952407, label %49
    i32 167490311, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %58

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1486055575, i32 167490311
  store i32 %26, i32* %15
  br label %58

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  %29 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %28, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %29, align 8
  %30 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %31 = bitcast %"class.std::deque"* %30 to %"class.std::_Deque_base"*
  %32 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  %33 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %32) #3
  %34 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %31, %"class.std::_Deque_base"* dereferenceable(80) %34)
  %35 = load i32, i32* @x.788
  %36 = load i32, i32* @y.789
  %37 = sub i32 0, 1
  %38 = add i32 %35, %37
  %39 = sub i32 %35, 1
  %40 = mul i32 %35, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %36, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 1400952407, i32 167490311
  store i32 %48, i32* %15
  br label %58

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::deque"*, align 8
  %52 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %51, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %52, align 8
  %53 = load %"class.std::deque"*, %"class.std::deque"** %51, align 8
  %54 = bitcast %"class.std::deque"* %53 to %"class.std::_Deque_base"*
  %55 = load %"class.std::deque"*, %"class.std::deque"** %52, align 8
  %56 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %55) #3
  %57 = bitcast %"class.std::deque"* %56 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %54, %"class.std::_Deque_base"* dereferenceable(80) %57)
  store i32 1486055575, i32* %15
  br label %58

; <label>:58:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.792
  %6 = load i32, i32* @y.793
  %7 = sub i32 %5, 135815473
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 135815473
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1155067034, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %50
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1155067034, label %19
    i32 -1541146225, label %27
    i32 671103773, label %45
    i32 1592849190, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %50

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1541146225, i32 1592849190
  store i32 %26, i32* %15
  br label %50

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %28, align 8
  %29 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %28, align 8
  store %"class.std::_Deque_base"* %29, %"class.std::_Deque_base"** %2
  %30 = load i32, i32* @x.792
  %31 = load i32, i32* @y.793
  %32 = add i32 %30, 1259869448
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, 1259869448
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = and i1 %38, %39
  %41 = xor i1 %38, %39
  %42 = or i1 %40, %41
  %43 = or i1 %38, %39
  %44 = select i1 %42, i32 671103773, i32 1592849190
  store i32 %44, i32* %15
  br label %50

; <label>:45:                                     ; preds = %16
  %46 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2
  ret %"class.std::_Deque_base"* %46

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %48, align 8
  %49 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %48, align 8
  store i32 -1541146225, i32* %15
  br label %50

; <label>:50:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.31"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.31"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.31"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %23

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %15 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %14, i32 0, i32 0
  %16 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %15, i32 0, i32 0
  %17 = load i32**, i32*** %16, align 8
  %18 = icmp ne i32** %17, null
  br i1 %18, label %19, label %27

; <label>:19:                                     ; preds = %13
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %21 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %22 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %21, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %22) #3
  br label %27

; <label>:23:                                     ; preds = %2
  %24 = landingpad { i8*, i32 }
          cleanup
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %6, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %28

; <label>:27:                                     ; preds = %19, %13
  ret void

; <label>:28:                                     ; preds = %23
  %29 = load i32, i32* @x.794
  %30 = load i32, i32* @y.795
  %31 = sub i32 0, 1
  %32 = add i32 %29, %31
  %33 = sub i32 %29, 1
  %34 = mul i32 %29, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %30, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %74

; <label>:54:                                     ; preds = %28, %74
  %55 = load i8*, i8** %6, align 8
  %56 = load i32, i32* %7, align 4
  %57 = insertvalue { i8*, i32 } undef, i8* %55, 0
  %58 = insertvalue { i8*, i32 } %57, i32 %56, 1
  %59 = load i32, i32* @x.794
  %60 = load i32, i32* @y.795
  %61 = sub i32 %59, 1704473582
  %62 = sub i32 %61, 1
  %63 = add i32 %62, 1704473582
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = and i1 %67, %68
  %70 = xor i1 %67, %68
  %71 = or i1 %69, %70
  %72 = or i1 %67, %68
  br i1 %71, label %73, label %74

; <label>:73:                                     ; preds = %54
  resume { i8*, i32 } %58

; <label>:74:                                     ; preds = %54, %28
  %75 = load i8*, i8** %6, align 8
  %76 = load i32, i32* %7, align 4
  %77 = insertvalue { i8*, i32 } undef, i8* %75, 0
  %78 = insertvalue { i8*, i32 } %77, i32 %76, 1
  br label %54
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.31"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.31"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %2, align 8
  %3 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %2, align 8
  ret %"class.std::allocator.31"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.31"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.31"*
  ret %"class.std::allocator.31"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.31"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.31"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.31"* %1, %"class.std::allocator.31"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.31"*
  %7 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.31"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.31"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.31"* %6, %"class.std::allocator.31"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.802
  %6 = load i32, i32* @y.803
  %7 = add i32 %5, -1332892274
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1332892274
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 477690389, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 477690389, label %19
    i32 666753752, label %27
    i32 -884156108, label %57
    i32 1749870569, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 666753752, i32 1749870569
  store i32 %26, i32* %15
  br label %74

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %29 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %29, align 8
  %30 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 2
  %32 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %31, %"struct.std::_Deque_iterator"* dereferenceable(32) %33) #3
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 3
  %35 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %29, align 8
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %34, %"struct.std::_Deque_iterator"* dereferenceable(32) %36) #3
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 0
  %38 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %29, align 8
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %37, i32*** dereferenceable(8) %39) #3
  %40 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 1
  %41 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %29, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %40, i64* dereferenceable(8) %42) #3
  %43 = load i32, i32* @x.802
  %44 = load i32, i32* @y.803
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -884156108, i32 1749870569
  store i32 %56, i32* %15
  br label %74

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %60 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %60, align 8
  %61 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %59, align 8
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 2
  %63 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %60, align 8
  %64 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %62, %"struct.std::_Deque_iterator"* dereferenceable(32) %64) #3
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 3
  %66 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %60, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %66, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %65, %"struct.std::_Deque_iterator"* dereferenceable(32) %67) #3
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 0
  %69 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %60, align 8
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %68, i32*** dereferenceable(8) %70) #3
  %71 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 1
  %72 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %60, align 8
  %73 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %72, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %71, i64* dereferenceable(8) %73) #3
  store i32 666753752, i32* %15
  br label %74

; <label>:74:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  %5 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %5, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %10 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %11 = bitcast %"struct.std::_Deque_iterator"* %10 to i8*
  %12 = bitcast %"struct.std::_Deque_iterator"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 32, i32 8, i1 false)
  %13 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %5) #3
  %14 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %15 = bitcast %"struct.std::_Deque_iterator"* %14 to i8*
  %16 = bitcast %"struct.std::_Deque_iterator"* %13 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 32, i32 8, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i32***, align 8
  %4 = alloca i32***, align 8
  %5 = alloca i32**, align 8
  store i32*** %0, i32**** %3, align 8
  store i32*** %1, i32**** %4, align 8
  %6 = load i32***, i32**** %3, align 8
  %7 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %6) #3
  %8 = load i32**, i32*** %7, align 8
  store i32** %8, i32*** %5, align 8
  %9 = load i32***, i32**** %4, align 8
  %10 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %9) #3
  %11 = load i32**, i32*** %10, align 8
  %12 = load i32***, i32**** %3, align 8
  store i32** %11, i32*** %12, align 8
  %13 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %5) #3
  %14 = load i32**, i32*** %13, align 8
  %15 = load i32***, i32**** %4, align 8
  store i32** %14, i32*** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64*, align 8
  %4 = alloca i64*, align 8
  %5 = alloca i64, align 8
  store i64* %0, i64** %3, align 8
  store i64* %1, i64** %4, align 8
  %6 = load i64*, i64** %3, align 8
  %7 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %6) #3
  %8 = load i64, i64* %7, align 8
  store i64 %8, i64* %5, align 8
  %9 = load i64*, i64** %4, align 8
  %10 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %9) #3
  %11 = load i64, i64* %10, align 8
  %12 = load i64*, i64** %3, align 8
  store i64 %11, i64* %12, align 8
  %13 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %5) #3
  %14 = load i64, i64* %13, align 8
  %15 = load i64*, i64** %4, align 8
  store i64 %14, i64* %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.812
  %6 = load i32, i32* @y.813
  %7 = sub i32 %5, -177099050
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -177099050
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1714848813, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %82
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1714848813, label %19
    i32 -569813598, label %27
    i32 -1472967176, label %61
    i32 1044299539, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %82

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -569813598, i32 1044299539
  store i32 %26, i32* %15
  br label %82

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  %29 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %29, align 8
  %30 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 0
  %32 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  store i32* %34, i32** %31, align 8
  %35 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 1
  %36 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %37 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %36, i32 0, i32 1
  %38 = load i32*, i32** %37, align 8
  store i32* %38, i32** %35, align 8
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 2
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 2
  %42 = load i32*, i32** %41, align 8
  store i32* %42, i32** %39, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %30, i32 0, i32 3
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %29, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 3
  %46 = load i32**, i32*** %45, align 8
  store i32** %46, i32*** %43, align 8
  %47 = load i32, i32* @x.812
  %48 = load i32, i32* @y.813
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  %60 = select i1 %58, i32 -1472967176, i32 1044299539
  store i32 %60, i32* %15
  br label %82

; <label>:61:                                     ; preds = %16
  ret void

; <label>:62:                                     ; preds = %16
  %63 = alloca %"struct.std::_Deque_iterator"*, align 8
  %64 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %63, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %64, align 8
  %65 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %63, align 8
  %66 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 0
  %67 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %64, align 8
  %68 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %67, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  store i32* %69, i32** %66, align 8
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 1
  %71 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %64, align 8
  %72 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %71, i32 0, i32 1
  %73 = load i32*, i32** %72, align 8
  store i32* %73, i32** %70, align 8
  %74 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 2
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %64, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 2
  %77 = load i32*, i32** %76, align 8
  store i32* %77, i32** %74, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %65, i32 0, i32 3
  %79 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %64, align 8
  %80 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %79, i32 0, i32 3
  %81 = load i32**, i32*** %80, align 8
  store i32** %81, i32*** %78, align 8
  store i32 -569813598, i32* %15
  br label %82

; <label>:82:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.31"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.818
  %8 = load i32, i32* @y.819
  %9 = add i32 %7, 130379025
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, 130379025
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -496883663, i32* %17
  br label %18

; <label>:18:                                     ; preds = %4, %53
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -496883663, label %21
    i32 -1055036994, label %29
    i32 1105841359, label %48
    i32 -1475677320, label %49
  ]

; <label>:20:                                     ; preds = %18
  br label %53

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1055036994, i32 -1475677320
  store i32 %28, i32* %17
  br label %53

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::deque"*, align 8
  %31 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %30, align 8
  store %"class.std::allocator.31"* %3, %"class.std::allocator.31"** %31, align 8
  %32 = load %"class.std::deque"*, %"class.std::deque"** %30, align 8
  %33 = load i32, i32* @x.818
  %34 = load i32, i32* @y.819
  %35 = add i32 %33, -1147604906
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1147604906
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 1105841359, i32 -1475677320
  store i32 %47, i32* %17
  br label %53

; <label>:48:                                     ; preds = %18
  ret void

; <label>:49:                                     ; preds = %18
  %50 = alloca %"class.std::deque"*, align 8
  %51 = alloca %"class.std::allocator.31"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %50, align 8
  store %"class.std::allocator.31"* %3, %"class.std::allocator.31"** %51, align 8
  %52 = load %"class.std::deque"*, %"class.std::deque"** %50, align 8
  store i32 -1055036994, i32* %17
  br label %53

; <label>:53:                                     ; preds = %49, %29, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %3, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %5 = bitcast %"class.std::deque"* %4 to %"class.std::_Deque_base"*
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %7) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.822
  %6 = load i32, i32* @y.823
  %7 = sub i32 %5, 728758348
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 728758348
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 508893380, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 508893380, label %19
    i32 -1704162350, label %27
    i32 2010868912, label %59
    i32 1655303545, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1704162350, i32 1655303545
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.822
  %34 = load i32, i32* @y.823
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 2010868912, i32 1655303545
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %61, align 8
  %62 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  %63 = bitcast %"class.std::deque"* %62 to %"class.std::_Deque_base"*
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %65) #3
  store i32 -1704162350, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %5, %"class.std::_Deque_base"** %3
  %6 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 0
  %9 = load i32**, i32*** %8, align 8
  store i32** %9, i32*** %2
  %10 = alloca i32
  store i32 -1965776077, i32* %10
  br label %11

; <label>:11:                                     ; preds = %1, %43
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 -1965776077, label %14
    i32 -307871935, label %18
    i32 -580981666, label %40
  ]

; <label>:13:                                     ; preds = %11
  br label %43

; <label>:14:                                     ; preds = %11
  %15 = load volatile i32**, i32*** %2
  %16 = icmp ne i32** %15, null
  %17 = select i1 %16, i32 -307871935, i32 -580981666
  store i32 %17, i32* %10
  br label %43

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 2
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 3
  %23 = load i32**, i32*** %22, align 8
  %24 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %25 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %25, i32 0, i32 3
  %27 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %26, i32 0, i32 3
  %28 = load i32**, i32*** %27, align 8
  %29 = getelementptr inbounds i32*, i32** %28, i64 1
  %30 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %30, i32** %23, i32** %29) #3
  %31 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 0
  %34 = load i32**, i32*** %33, align 8
  %35 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %39, i32** %34, i64 %38) #3
  store i32 -580981666, i32* %10
  br label %43

; <label>:40:                                     ; preds = %11
  %41 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42) #3
  ret void

; <label>:43:                                     ; preds = %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9push_backERKi(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 -38771299, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %173
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -38771299, label %26
    i32 -1519858217, label %31
    i32 906951655, label %59
    i32 1833806971, label %105
    i32 1945215357, label %106
    i32 2130531529, label %109
    i32 652394949, label %125
    i32 -1958719607, label %152
    i32 -913414965, label %153
    i32 2050477411, label %172
  ]

; <label>:25:                                     ; preds = %23
  br label %173

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 -1519858217, i32 1945215357
  store i32 %30, i32* %22
  br label %173

; <label>:31:                                     ; preds = %23
  %32 = load i32, i32* @x.826
  %33 = load i32, i32* @y.827
  %34 = add i32 %32, -1820725503
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1820725503
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 906951655, i32 -913414965
  store i32 %58, i32* %22
  br label %173

; <label>:59:                                     ; preds = %23
  %60 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %61 = bitcast %"class.std::deque"* %60 to %"class.std::_Deque_base"*
  %62 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %61, i32 0, i32 0
  %63 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %62 to %"class.std::allocator.31"*
  %64 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %65 = bitcast %"class.std::deque"* %64 to %"class.std::_Deque_base"*
  %66 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %66, i32 0, i32 3
  %68 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %67, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.31"* dereferenceable(1) %63, i32* %69, i32* dereferenceable(4) %70)
  %71 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %72 = bitcast %"class.std::deque"* %71 to %"class.std::_Deque_base"*
  %73 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %72, i32 0, i32 0
  %74 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %73, i32 0, i32 3
  %75 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %74, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = getelementptr inbounds i32, i32* %76, i32 1
  store i32* %77, i32** %75, align 8
  %78 = load i32, i32* @x.826
  %79 = load i32, i32* @y.827
  %80 = sub i32 %78, 480130693
  %81 = sub i32 %80, 1
  %82 = add i32 %81, 480130693
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = xor i1 %86, true
  %89 = xor i1 %87, true
  %90 = xor i1 false, true
  %91 = and i1 %88, false
  %92 = and i1 %86, %90
  %93 = and i1 %89, false
  %94 = and i1 %87, %90
  %95 = or i1 %91, %92
  %96 = or i1 %93, %94
  %97 = xor i1 %95, %96
  %98 = or i1 %88, %89
  %99 = xor i1 %98, true
  %100 = or i1 false, %90
  %101 = and i1 %99, %100
  %102 = or i1 %97, %101
  %103 = or i1 %86, %87
  %104 = select i1 %102, i32 1833806971, i32 -913414965
  store i32 %104, i32* %22
  br label %173

; <label>:105:                                    ; preds = %23
  store i32 2130531529, i32* %22
  br label %173

; <label>:106:                                    ; preds = %23
  %107 = load i32*, i32** %7, align 8
  %108 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %108, i32* dereferenceable(4) %107)
  store i32 2130531529, i32* %22
  br label %173

; <label>:109:                                    ; preds = %23
  %110 = load i32, i32* @x.826
  %111 = load i32, i32* @y.827
  %112 = add i32 %110, -1323865513
  %113 = sub i32 %112, 1
  %114 = sub i32 %113, -1323865513
  %115 = sub i32 %110, 1
  %116 = mul i32 %110, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %111, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  %124 = select i1 %122, i32 652394949, i32 2050477411
  store i32 %124, i32* %22
  br label %173

; <label>:125:                                    ; preds = %23
  %126 = load i32, i32* @x.826
  %127 = load i32, i32* @y.827
  %128 = sub i32 0, 1
  %129 = add i32 %126, %128
  %130 = sub i32 %126, 1
  %131 = mul i32 %126, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %127, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  %151 = select i1 %149, i32 -1958719607, i32 2050477411
  store i32 %151, i32* %22
  br label %173

; <label>:152:                                    ; preds = %23
  ret void

; <label>:153:                                    ; preds = %23
  %154 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %155 = bitcast %"class.std::deque"* %154 to %"class.std::_Deque_base"*
  %156 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %155, i32 0, i32 0
  %157 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %156 to %"class.std::allocator.31"*
  %158 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %159 = bitcast %"class.std::deque"* %158 to %"class.std::_Deque_base"*
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 3
  %162 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %161, i32 0, i32 0
  %163 = load i32*, i32** %162, align 8
  %164 = load i32*, i32** %7, align 8
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.31"* dereferenceable(1) %157, i32* %163, i32* dereferenceable(4) %164)
  %165 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %166 = bitcast %"class.std::deque"* %165 to %"class.std::_Deque_base"*
  %167 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %167, i32 0, i32 3
  %169 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %168, i32 0, i32 0
  %170 = load i32*, i32** %169, align 8
  %171 = getelementptr inbounds i32, i32* %170, i32 1
  store i32* %171, i32** %169, align 8
  store i32 906951655, i32* %22
  br label %173

; <label>:172:                                    ; preds = %23
  store i32 652394949, i32* %22
  br label %173

; <label>:173:                                    ; preds = %172, %153, %125, %109, %106, %105, %59, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.31"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.31"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %4, align 8
  %8 = bitcast %"class.std::allocator.31"* %7 to %"class.__gnu_cxx::new_allocator.32"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.32"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.31"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.31"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %123

; <label>:45:                                     ; preds = %2
  %46 = load i32, i32* @x.830
  %47 = load i32, i32* @y.831
  %48 = sub i32 0, 1
  %49 = add i32 %46, %48
  %50 = sub i32 %46, 1
  %51 = mul i32 %46, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %47, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %133

; <label>:59:                                     ; preds = %45, %133
  %60 = landingpad { i8*, i32 }
          catch i8* null
  %61 = extractvalue { i8*, i32 } %60, 0
  store i8* %61, i8** %5, align 8
  %62 = extractvalue { i8*, i32 } %60, 1
  store i32 %62, i32* %6, align 4
  %63 = load i32, i32* @x.830
  %64 = load i32, i32* @y.831
  %65 = sub i32 %63, 1013446096
  %66 = sub i32 %65, 1
  %67 = add i32 %66, 1013446096
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %133

; <label>:77:                                     ; preds = %59
  br label %78

; <label>:78:                                     ; preds = %77
  %79 = load i8*, i8** %5, align 8
  %80 = call i8* @__cxa_begin_catch(i8* %79) #3
  %81 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %82 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 3
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 3
  %86 = load i32**, i32*** %85, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i64 1
  %88 = load i32*, i32** %87, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %81, i32* %88) #3
  invoke void @__cxa_rethrow() #12
          to label %132 unwind label %89

; <label>:89:                                     ; preds = %78
  %90 = load i32, i32* @x.830
  %91 = load i32, i32* @y.831
  %92 = sub i32 %90, 356052884
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 356052884
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %137

; <label>:104:                                    ; preds = %89, %137
  %105 = landingpad { i8*, i32 }
          cleanup
  %106 = extractvalue { i8*, i32 } %105, 0
  store i8* %106, i8** %5, align 8
  %107 = extractvalue { i8*, i32 } %105, 1
  store i32 %107, i32* %6, align 4
  %108 = load i32, i32* @x.830
  %109 = load i32, i32* @y.831
  %110 = sub i32 0, 1
  %111 = add i32 %108, %110
  %112 = sub i32 %108, 1
  %113 = mul i32 %108, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %109, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %137

; <label>:121:                                    ; preds = %104
  invoke void @__cxa_end_catch()
          to label %122 unwind label %129

; <label>:122:                                    ; preds = %121
  br label %124

; <label>:123:                                    ; preds = %26
  ret void

; <label>:124:                                    ; preds = %122
  %125 = load i8*, i8** %5, align 8
  %126 = load i32, i32* %6, align 4
  %127 = insertvalue { i8*, i32 } undef, i8* %125, 0
  %128 = insertvalue { i8*, i32 } %127, i32 %126, 1
  resume { i8*, i32 } %128

; <label>:129:                                    ; preds = %121
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  call void @__clang_call_terminate(i8* %131) #10
  unreachable

; <label>:132:                                    ; preds = %78
  unreachable

; <label>:133:                                    ; preds = %59, %45
  %134 = landingpad { i8*, i32 }
          catch i8* null
  %135 = extractvalue { i8*, i32 } %134, 0
  store i8* %135, i8** %5, align 8
  %136 = extractvalue { i8*, i32 } %134, 1
  store i32 %136, i32* %6, align 4
  br label %59

; <label>:137:                                    ; preds = %104, %89
  %138 = landingpad { i8*, i32 }
          cleanup
  %139 = extractvalue { i8*, i32 } %138, 0
  store i8* %139, i8** %5, align 8
  %140 = extractvalue { i8*, i32 } %138, 1
  store i32 %140, i32* %6, align 4
  br label %104
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.32"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = sub i64 %9, 3325682548365590670
  %11 = add i64 %10, 1
  %12 = add i64 %11, 3325682548365590670
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 %30, -2569129083980942492
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -2569129083980942492
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 8
  %37 = add i64 %18, -8676517327801892888
  %38 = sub i64 %37, %36
  %39 = sub i64 %38, -8676517327801892888
  %40 = sub i64 %18, %36
  store i64 %39, i64* %3
  %41 = alloca i32
  store i32 519352811, i32* %41
  br label %42

; <label>:42:                                     ; preds = %2, %169
  %43 = load i32, i32* %41
  switch i32 %43, label %44 [
    i32 519352811, label %45
    i32 -624209701, label %50
    i32 -277729316, label %78
    i32 -581836480, label %107
    i32 -291675247, label %108
    i32 1281543758, label %136
    i32 254433686, label %164
    i32 -1942308961, label %165
    i32 1638457699, label %168
  ]

; <label>:44:                                     ; preds = %42
  br label %169

; <label>:45:                                     ; preds = %42
  %46 = load volatile i64, i64* %4
  %47 = load volatile i64, i64* %3
  %48 = icmp ugt i64 %46, %47
  %49 = select i1 %48, i32 -624209701, i32 -291675247
  store i32 %49, i32* %41
  br label %169

; <label>:50:                                     ; preds = %42
  %51 = load i32, i32* @x.836
  %52 = load i32, i32* @y.837
  %53 = add i32 %51, -594728871
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -594728871
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 -277729316, i32 -1942308961
  store i32 %77, i32* %41
  br label %169

; <label>:78:                                     ; preds = %42
  %79 = load i64, i64* %7, align 8
  %80 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %80, i64 %79, i1 zeroext false)
  %81 = load i32, i32* @x.836
  %82 = load i32, i32* @y.837
  %83 = sub i32 0, 1
  %84 = add i32 %81, %83
  %85 = sub i32 %81, 1
  %86 = mul i32 %81, %84
  %87 = urem i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = icmp slt i32 %82, 10
  %90 = xor i1 %88, true
  %91 = xor i1 %89, true
  %92 = xor i1 true, true
  %93 = and i1 %90, true
  %94 = and i1 %88, %92
  %95 = and i1 %91, true
  %96 = and i1 %89, %92
  %97 = or i1 %93, %94
  %98 = or i1 %95, %96
  %99 = xor i1 %97, %98
  %100 = or i1 %90, %91
  %101 = xor i1 %100, true
  %102 = or i1 true, %92
  %103 = and i1 %101, %102
  %104 = or i1 %99, %103
  %105 = or i1 %88, %89
  %106 = select i1 %104, i32 -581836480, i32 -1942308961
  store i32 %106, i32* %41
  br label %169

; <label>:107:                                    ; preds = %42
  store i32 -291675247, i32* %41
  br label %169

; <label>:108:                                    ; preds = %42
  %109 = load i32, i32* @x.836
  %110 = load i32, i32* @y.837
  %111 = sub i32 %109, -1500127156
  %112 = sub i32 %111, 1
  %113 = add i32 %112, -1500127156
  %114 = sub i32 %109, 1
  %115 = mul i32 %109, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %110, 10
  %119 = xor i1 %117, true
  %120 = xor i1 %118, true
  %121 = xor i1 false, true
  %122 = and i1 %119, false
  %123 = and i1 %117, %121
  %124 = and i1 %120, false
  %125 = and i1 %118, %121
  %126 = or i1 %122, %123
  %127 = or i1 %124, %125
  %128 = xor i1 %126, %127
  %129 = or i1 %119, %120
  %130 = xor i1 %129, true
  %131 = or i1 false, %121
  %132 = and i1 %130, %131
  %133 = or i1 %128, %132
  %134 = or i1 %117, %118
  %135 = select i1 %133, i32 1281543758, i32 1638457699
  store i32 %135, i32* %41
  br label %169

; <label>:136:                                    ; preds = %42
  %137 = load i32, i32* @x.836
  %138 = load i32, i32* @y.837
  %139 = sub i32 %137, -890022050
  %140 = sub i32 %139, 1
  %141 = add i32 %140, -890022050
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 254433686, i32 1638457699
  store i32 %163, i32* %41
  br label %169

; <label>:164:                                    ; preds = %42
  ret void

; <label>:165:                                    ; preds = %42
  %166 = load i64, i64* %7, align 8
  %167 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %167, i64 %166, i1 zeroext false)
  store i32 -277729316, i32* %41
  br label %169

; <label>:168:                                    ; preds = %42
  store i32 1281543758, i32* %41
  br label %169

; <label>:169:                                    ; preds = %168, %165, %136, %108, %107, %78, %50, %45, %44
  br label %42
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca i32**
  %9 = alloca i64
  %10 = alloca i64
  %11 = alloca %"class.std::deque"*
  %12 = alloca %"class.std::deque"*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i8, align 1
  %15 = alloca i64, align 8
  %16 = alloca i64, align 8
  %17 = alloca i32**, align 8
  %18 = alloca i64, align 8
  %19 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %12, align 8
  store i64 %1, i64* %13, align 8
  %20 = zext i1 %2 to i8
  store i8 %20, i8* %14, align 1
  %21 = load %"class.std::deque"*, %"class.std::deque"** %12, align 8
  store %"class.std::deque"* %21, %"class.std::deque"** %11
  %22 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %23 = bitcast %"class.std::deque"* %22 to %"class.std::_Deque_base"*
  %24 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %23, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %24, i32 0, i32 3
  %26 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %25, i32 0, i32 3
  %27 = load i32**, i32*** %26, align 8
  %28 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  %30 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %30, i32 0, i32 2
  %32 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %31, i32 0, i32 3
  %33 = load i32**, i32*** %32, align 8
  %34 = ptrtoint i32** %27 to i64
  %35 = ptrtoint i32** %33 to i64
  %36 = add i64 %34, -5049940091252996844
  %37 = sub i64 %36, %35
  %38 = sub i64 %37, -5049940091252996844
  %39 = sub i64 %34, %35
  %40 = sdiv exact i64 %38, 8
  %41 = add i64 %40, -7360928825210525657
  %42 = add i64 %41, 1
  %43 = sub i64 %42, -7360928825210525657
  %44 = add nsw i64 %40, 1
  store i64 %43, i64* %15, align 8
  %45 = load i64, i64* %15, align 8
  %46 = load i64, i64* %13, align 8
  %47 = sub i64 0, %46
  %48 = sub i64 %45, %47
  %49 = add i64 %45, %46
  store i64 %48, i64* %16, align 8
  %50 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  store i64 %54, i64* %10
  %55 = load i64, i64* %16, align 8
  %56 = mul i64 2, %55
  store i64 %56, i64* %9
  %57 = alloca i32
  store i32 -314314783, i32* %57
  %58 = alloca i64
  %59 = alloca i64
  br label %60

; <label>:60:                                     ; preds = %3, %445
  %61 = load i32, i32* %57
  switch i32 %61, label %62 [
    i32 -314314783, label %63
    i32 -115257273, label %68
    i32 1036856557, label %88
    i32 1733927415, label %90
    i32 -2026535530, label %91
    i32 -1762231350, label %120
    i32 1046841822, label %159
    i32 1608713900, label %162
    i32 -1094437718, label %178
    i32 1932262279, label %194
    i32 159208757, label %227
    i32 1621924980, label %228
    i32 827714355, label %229
    i32 830305414, label %265
    i32 -2008911627, label %281
    i32 -1400810604, label %310
    i32 -250146870, label %312
    i32 -833041062, label %328
    i32 10995602, label %356
    i32 -1282939137, label %357
    i32 1539971053, label %398
    i32 978671673, label %412
    i32 -2043059729, label %424
    i32 -1431266708, label %442
    i32 -1630197800, label %444
  ]

; <label>:62:                                     ; preds = %60
  br label %445

; <label>:63:                                     ; preds = %60
  %64 = load volatile i64, i64* %10
  %65 = load volatile i64, i64* %9
  %66 = icmp ugt i64 %64, %65
  %67 = select i1 %66, i32 -115257273, i32 827714355
  store i32 %67, i32* %57
  br label %445

; <label>:68:                                     ; preds = %60
  %69 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %70 = bitcast %"class.std::deque"* %69 to %"class.std::_Deque_base"*
  %71 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %71, i32 0, i32 0
  %73 = load i32**, i32*** %72, align 8
  %74 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %75 = bitcast %"class.std::deque"* %74 to %"class.std::_Deque_base"*
  %76 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %75, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %76, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = load i64, i64* %16, align 8
  %80 = sub i64 0, %79
  %81 = add i64 %78, %80
  %82 = sub i64 %78, %79
  %83 = udiv i64 %81, 2
  %84 = getelementptr inbounds i32*, i32** %73, i64 %83
  store i32** %84, i32*** %8
  %85 = load i8, i8* %14, align 1
  %86 = trunc i8 %85 to i1
  %87 = select i1 %86, i32 1036856557, i32 1733927415
  store i32 %87, i32* %57
  br label %445

; <label>:88:                                     ; preds = %60
  %89 = load i64, i64* %13, align 8
  store i32 -2026535530, i32* %57
  store i64 %89, i64* %58
  br label %445

; <label>:90:                                     ; preds = %60
  store i32 -2026535530, i32* %57
  store i64 0, i64* %58
  br label %445

; <label>:91:                                     ; preds = %60
  %92 = load i64, i64* %58
  store i64 %92, i64* %4
  %93 = load i32, i32* @x.838
  %94 = load i32, i32* @y.839
  %95 = sub i32 %93, -868071199
  %96 = sub i32 %95, 1
  %97 = add i32 %96, -868071199
  %98 = sub i32 %93, 1
  %99 = mul i32 %93, %97
  %100 = urem i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = icmp slt i32 %94, 10
  %103 = xor i1 %101, true
  %104 = xor i1 %102, true
  %105 = xor i1 false, true
  %106 = and i1 %103, false
  %107 = and i1 %101, %105
  %108 = and i1 %104, false
  %109 = and i1 %102, %105
  %110 = or i1 %106, %107
  %111 = or i1 %108, %109
  %112 = xor i1 %110, %111
  %113 = or i1 %103, %104
  %114 = xor i1 %113, true
  %115 = or i1 false, %105
  %116 = and i1 %114, %115
  %117 = or i1 %112, %116
  %118 = or i1 %101, %102
  %119 = select i1 %117, i32 -1762231350, i32 978671673
  store i32 %119, i32* %57
  br label %445

; <label>:120:                                    ; preds = %60
  %121 = load volatile i32**, i32*** %8
  %122 = load volatile i64, i64* %4
  %123 = getelementptr inbounds i32*, i32** %121, i64 %122
  store i32** %123, i32*** %17, align 8
  %124 = load i32**, i32*** %17, align 8
  %125 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %126 = bitcast %"class.std::deque"* %125 to %"class.std::_Deque_base"*
  %127 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %127, i32 0, i32 2
  %129 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %128, i32 0, i32 3
  %130 = load i32**, i32*** %129, align 8
  %131 = icmp ult i32** %124, %130
  store i1 %131, i1* %7
  %132 = load i32, i32* @x.838
  %133 = load i32, i32* @y.839
  %134 = sub i32 %132, 347254988
  %135 = sub i32 %134, 1
  %136 = add i32 %135, 347254988
  %137 = sub i32 %132, 1
  %138 = mul i32 %132, %136
  %139 = urem i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = icmp slt i32 %133, 10
  %142 = xor i1 %140, true
  %143 = xor i1 %141, true
  %144 = xor i1 true, true
  %145 = and i1 %142, true
  %146 = and i1 %140, %144
  %147 = and i1 %143, true
  %148 = and i1 %141, %144
  %149 = or i1 %145, %146
  %150 = or i1 %147, %148
  %151 = xor i1 %149, %150
  %152 = or i1 %142, %143
  %153 = xor i1 %152, true
  %154 = or i1 true, %144
  %155 = and i1 %153, %154
  %156 = or i1 %151, %155
  %157 = or i1 %140, %141
  %158 = select i1 %156, i32 1046841822, i32 978671673
  store i32 %158, i32* %57
  br label %445

; <label>:159:                                    ; preds = %60
  %160 = load volatile i1, i1* %7
  %161 = select i1 %160, i32 1608713900, i32 -1094437718
  store i32 %161, i32* %57
  br label %445

; <label>:162:                                    ; preds = %60
  %163 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %164 = bitcast %"class.std::deque"* %163 to %"class.std::_Deque_base"*
  %165 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %164, i32 0, i32 0
  %166 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %165, i32 0, i32 2
  %167 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %166, i32 0, i32 3
  %168 = load i32**, i32*** %167, align 8
  %169 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %170 = bitcast %"class.std::deque"* %169 to %"class.std::_Deque_base"*
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %171, i32 0, i32 3
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %172, i32 0, i32 3
  %174 = load i32**, i32*** %173, align 8
  %175 = getelementptr inbounds i32*, i32** %174, i64 1
  %176 = load i32**, i32*** %17, align 8
  %177 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %168, i32** %175, i32** %176)
  store i32 1621924980, i32* %57
  br label %445

; <label>:178:                                    ; preds = %60
  %179 = load i32, i32* @x.838
  %180 = load i32, i32* @y.839
  %181 = add i32 %179, 112333747
  %182 = sub i32 %181, 1
  %183 = sub i32 %182, 112333747
  %184 = sub i32 %179, 1
  %185 = mul i32 %179, %183
  %186 = urem i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = icmp slt i32 %180, 10
  %189 = and i1 %187, %188
  %190 = xor i1 %187, %188
  %191 = or i1 %189, %190
  %192 = or i1 %187, %188
  %193 = select i1 %191, i32 1932262279, i32 -2043059729
  store i32 %193, i32* %57
  br label %445

; <label>:194:                                    ; preds = %60
  %195 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %196 = bitcast %"class.std::deque"* %195 to %"class.std::_Deque_base"*
  %197 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %196, i32 0, i32 0
  %198 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %197, i32 0, i32 2
  %199 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %198, i32 0, i32 3
  %200 = load i32**, i32*** %199, align 8
  %201 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %202 = bitcast %"class.std::deque"* %201 to %"class.std::_Deque_base"*
  %203 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %202, i32 0, i32 0
  %204 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %203, i32 0, i32 3
  %205 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %204, i32 0, i32 3
  %206 = load i32**, i32*** %205, align 8
  %207 = getelementptr inbounds i32*, i32** %206, i64 1
  %208 = load i32**, i32*** %17, align 8
  %209 = load i64, i64* %15, align 8
  %210 = getelementptr inbounds i32*, i32** %208, i64 %209
  %211 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %200, i32** %207, i32** %210)
  %212 = load i32, i32* @x.838
  %213 = load i32, i32* @y.839
  %214 = sub i32 %212, 1899738396
  %215 = sub i32 %214, 1
  %216 = add i32 %215, 1899738396
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = and i1 %220, %221
  %223 = xor i1 %220, %221
  %224 = or i1 %222, %223
  %225 = or i1 %220, %221
  %226 = select i1 %224, i32 159208757, i32 -2043059729
  store i32 %226, i32* %57
  br label %445

; <label>:227:                                    ; preds = %60
  store i32 1621924980, i32* %57
  br label %445

; <label>:228:                                    ; preds = %60
  store i32 1539971053, i32* %57
  br label %445

; <label>:229:                                    ; preds = %60
  %230 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %231 = bitcast %"class.std::deque"* %230 to %"class.std::_Deque_base"*
  %232 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %231, i32 0, i32 0
  %233 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %232, i32 0, i32 1
  %234 = load i64, i64* %233, align 8
  %235 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %236 = bitcast %"class.std::deque"* %235 to %"class.std::_Deque_base"*
  %237 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %236, i32 0, i32 0
  %238 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %237, i32 0, i32 1
  %239 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %238, i64* dereferenceable(8) %13)
  %240 = load i64, i64* %239, align 8
  %241 = sub i64 %234, 5594712397994774198
  %242 = add i64 %241, %240
  %243 = add i64 %242, 5594712397994774198
  %244 = add i64 %234, %240
  %245 = sub i64 %243, -941274320760771281
  %246 = add i64 %245, 2
  %247 = add i64 %246, -941274320760771281
  %248 = add i64 %243, 2
  store i64 %247, i64* %18, align 8
  %249 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %250 = bitcast %"class.std::deque"* %249 to %"class.std::_Deque_base"*
  %251 = load i64, i64* %18, align 8
  %252 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %250, i64 %251)
  store i32** %252, i32*** %19, align 8
  %253 = load i32**, i32*** %19, align 8
  %254 = load i64, i64* %18, align 8
  %255 = load i64, i64* %16, align 8
  %256 = sub i64 %254, -6148443167057837679
  %257 = sub i64 %256, %255
  %258 = add i64 %257, -6148443167057837679
  %259 = sub i64 %254, %255
  %260 = udiv i64 %258, 2
  %261 = getelementptr inbounds i32*, i32** %253, i64 %260
  store i32** %261, i32*** %6
  %262 = load i8, i8* %14, align 1
  %263 = trunc i8 %262 to i1
  %264 = select i1 %263, i32 830305414, i32 -250146870
  store i32 %264, i32* %57
  br label %445

; <label>:265:                                    ; preds = %60
  %266 = load i32, i32* @x.838
  %267 = load i32, i32* @y.839
  %268 = sub i32 %266, -349136288
  %269 = sub i32 %268, 1
  %270 = add i32 %269, -349136288
  %271 = sub i32 %266, 1
  %272 = mul i32 %266, %270
  %273 = urem i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = icmp slt i32 %267, 10
  %276 = and i1 %274, %275
  %277 = xor i1 %274, %275
  %278 = or i1 %276, %277
  %279 = or i1 %274, %275
  %280 = select i1 %278, i32 -2008911627, i32 -1431266708
  store i32 %280, i32* %57
  br label %445

; <label>:281:                                    ; preds = %60
  %282 = load i64, i64* %13, align 8
  store i64 %282, i64* %5
  %283 = load i32, i32* @x.838
  %284 = load i32, i32* @y.839
  %285 = add i32 %283, 1220423608
  %286 = sub i32 %285, 1
  %287 = sub i32 %286, 1220423608
  %288 = sub i32 %283, 1
  %289 = mul i32 %283, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %284, 10
  %293 = xor i1 %291, true
  %294 = xor i1 %292, true
  %295 = xor i1 false, true
  %296 = and i1 %293, false
  %297 = and i1 %291, %295
  %298 = and i1 %294, false
  %299 = and i1 %292, %295
  %300 = or i1 %296, %297
  %301 = or i1 %298, %299
  %302 = xor i1 %300, %301
  %303 = or i1 %293, %294
  %304 = xor i1 %303, true
  %305 = or i1 false, %295
  %306 = and i1 %304, %305
  %307 = or i1 %302, %306
  %308 = or i1 %291, %292
  %309 = select i1 %307, i32 -1400810604, i32 -1431266708
  store i32 %309, i32* %57
  br label %445

; <label>:310:                                    ; preds = %60
  store i32 -1282939137, i32* %57
  %311 = load volatile i64, i64* %5
  store i64 %311, i64* %59
  br label %445

; <label>:312:                                    ; preds = %60
  %313 = load i32, i32* @x.838
  %314 = load i32, i32* @y.839
  %315 = add i32 %313, 1772230406
  %316 = sub i32 %315, 1
  %317 = sub i32 %316, 1772230406
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  %327 = select i1 %325, i32 -833041062, i32 -1630197800
  store i32 %327, i32* %57
  br label %445

; <label>:328:                                    ; preds = %60
  %329 = load i32, i32* @x.838
  %330 = load i32, i32* @y.839
  %331 = add i32 %329, 330003019
  %332 = sub i32 %331, 1
  %333 = sub i32 %332, 330003019
  %334 = sub i32 %329, 1
  %335 = mul i32 %329, %333
  %336 = urem i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = icmp slt i32 %330, 10
  %339 = xor i1 %337, true
  %340 = xor i1 %338, true
  %341 = xor i1 true, true
  %342 = and i1 %339, true
  %343 = and i1 %337, %341
  %344 = and i1 %340, true
  %345 = and i1 %338, %341
  %346 = or i1 %342, %343
  %347 = or i1 %344, %345
  %348 = xor i1 %346, %347
  %349 = or i1 %339, %340
  %350 = xor i1 %349, true
  %351 = or i1 true, %341
  %352 = and i1 %350, %351
  %353 = or i1 %348, %352
  %354 = or i1 %337, %338
  %355 = select i1 %353, i32 10995602, i32 -1630197800
  store i32 %355, i32* %57
  br label %445

; <label>:356:                                    ; preds = %60
  store i32 -1282939137, i32* %57
  store i64 0, i64* %59
  br label %445

; <label>:357:                                    ; preds = %60
  %358 = load i64, i64* %59
  %359 = load volatile i32**, i32*** %6
  %360 = getelementptr inbounds i32*, i32** %359, i64 %358
  store i32** %360, i32*** %17, align 8
  %361 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %362 = bitcast %"class.std::deque"* %361 to %"class.std::_Deque_base"*
  %363 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %362, i32 0, i32 0
  %364 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %363, i32 0, i32 2
  %365 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %364, i32 0, i32 3
  %366 = load i32**, i32*** %365, align 8
  %367 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %368 = bitcast %"class.std::deque"* %367 to %"class.std::_Deque_base"*
  %369 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %368, i32 0, i32 0
  %370 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %369, i32 0, i32 3
  %371 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %370, i32 0, i32 3
  %372 = load i32**, i32*** %371, align 8
  %373 = getelementptr inbounds i32*, i32** %372, i64 1
  %374 = load i32**, i32*** %17, align 8
  %375 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %366, i32** %373, i32** %374)
  %376 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %377 = bitcast %"class.std::deque"* %376 to %"class.std::_Deque_base"*
  %378 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %379 = bitcast %"class.std::deque"* %378 to %"class.std::_Deque_base"*
  %380 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %379, i32 0, i32 0
  %381 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %380, i32 0, i32 0
  %382 = load i32**, i32*** %381, align 8
  %383 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %384 = bitcast %"class.std::deque"* %383 to %"class.std::_Deque_base"*
  %385 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %384, i32 0, i32 0
  %386 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %385, i32 0, i32 1
  %387 = load i64, i64* %386, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %377, i32** %382, i64 %387) #3
  %388 = load i32**, i32*** %19, align 8
  %389 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %390 = bitcast %"class.std::deque"* %389 to %"class.std::_Deque_base"*
  %391 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %390, i32 0, i32 0
  %392 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %391, i32 0, i32 0
  store i32** %388, i32*** %392, align 8
  %393 = load i64, i64* %18, align 8
  %394 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %395 = bitcast %"class.std::deque"* %394 to %"class.std::_Deque_base"*
  %396 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %396, i32 0, i32 1
  store i64 %393, i64* %397, align 8
  store i32 1539971053, i32* %57
  br label %445

; <label>:398:                                    ; preds = %60
  %399 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %400 = bitcast %"class.std::deque"* %399 to %"class.std::_Deque_base"*
  %401 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %400, i32 0, i32 0
  %402 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %401, i32 0, i32 2
  %403 = load i32**, i32*** %17, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %402, i32** %403) #3
  %404 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %405 = bitcast %"class.std::deque"* %404 to %"class.std::_Deque_base"*
  %406 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %405, i32 0, i32 0
  %407 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %406, i32 0, i32 3
  %408 = load i32**, i32*** %17, align 8
  %409 = load i64, i64* %15, align 8
  %410 = getelementptr inbounds i32*, i32** %408, i64 %409
  %411 = getelementptr inbounds i32*, i32** %410, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %407, i32** %411) #3
  ret void

; <label>:412:                                    ; preds = %60
  %413 = load volatile i32**, i32*** %8
  %414 = load volatile i64, i64* %4
  %415 = getelementptr inbounds i32*, i32** %413, i64 %414
  store i32** %415, i32*** %17, align 8
  %416 = load i32**, i32*** %17, align 8
  %417 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %418 = bitcast %"class.std::deque"* %417 to %"class.std::_Deque_base"*
  %419 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %418, i32 0, i32 0
  %420 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %419, i32 0, i32 2
  %421 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %420, i32 0, i32 3
  %422 = load i32**, i32*** %421, align 8
  %423 = icmp ult i32** %416, %422
  store i32 -1762231350, i32* %57
  br label %445

; <label>:424:                                    ; preds = %60
  %425 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %426 = bitcast %"class.std::deque"* %425 to %"class.std::_Deque_base"*
  %427 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %426, i32 0, i32 0
  %428 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %427, i32 0, i32 2
  %429 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %428, i32 0, i32 3
  %430 = load i32**, i32*** %429, align 8
  %431 = load volatile %"class.std::deque"*, %"class.std::deque"** %11
  %432 = bitcast %"class.std::deque"* %431 to %"class.std::_Deque_base"*
  %433 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %432, i32 0, i32 0
  %434 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %433, i32 0, i32 3
  %435 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %434, i32 0, i32 3
  %436 = load i32**, i32*** %435, align 8
  %437 = getelementptr inbounds i32*, i32** %436, i64 1
  %438 = load i32**, i32*** %17, align 8
  %439 = load i64, i64* %15, align 8
  %440 = getelementptr inbounds i32*, i32** %438, i64 %439
  %441 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %430, i32** %437, i32** %440)
  store i32 1932262279, i32* %57
  br label %445

; <label>:442:                                    ; preds = %60
  %443 = load i64, i64* %13, align 8
  store i32 -2008911627, i32* %57
  br label %445

; <label>:444:                                    ; preds = %60
  store i32 -833041062, i32* %57
  br label %445

; <label>:445:                                    ; preds = %444, %442, %424, %412, %357, %356, %328, %312, %310, %281, %265, %229, %228, %227, %194, %178, %162, %159, %120, %91, %90, %88, %68, %63, %62
  br label %60
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.842
  %8 = load i32, i32* @y.843
  %9 = sub i32 %7, -1252778779
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1252778779
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1240353421, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %90
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1240353421, label %21
    i32 -1675185906, label %41
    i32 117109645, label %78
    i32 626946277, label %80
  ]

; <label>:20:                                     ; preds = %18
  br label %90

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1675185906, i32 626946277
  store i32 %40, i32* %17
  br label %90

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  %45 = load i32**, i32*** %42, align 8
  %46 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %45)
  %47 = load i32**, i32*** %43, align 8
  %48 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %47)
  %49 = load i32**, i32*** %44, align 8
  %50 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %46, i32** %48, i32** %49)
  store i32** %50, i32*** %4
  %51 = load i32, i32* @x.842
  %52 = load i32, i32* @y.843
  %53 = sub i32 %51, 46324480
  %54 = sub i32 %53, 1
  %55 = add i32 %54, 46324480
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  %77 = select i1 %75, i32 117109645, i32 626946277
  store i32 %77, i32* %17
  br label %90

; <label>:78:                                     ; preds = %18
  %79 = load volatile i32**, i32*** %4
  ret i32** %79

; <label>:80:                                     ; preds = %18
  %81 = alloca i32**, align 8
  %82 = alloca i32**, align 8
  %83 = alloca i32**, align 8
  store i32** %0, i32*** %81, align 8
  store i32** %1, i32*** %82, align 8
  store i32** %2, i32*** %83, align 8
  %84 = load i32**, i32*** %81, align 8
  %85 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %84)
  %86 = load i32**, i32*** %82, align 8
  %87 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %86)
  %88 = load i32**, i32*** %83, align 8
  %89 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %85, i32** %87, i32** %88)
  store i32 -1675185906, i32* %17
  br label %90

; <label>:90:                                     ; preds = %80, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.848
  %8 = load i32, i32* @y.849
  %9 = add i32 %7, -853247937
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -853247937
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1360302780, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1360302780, label %21
    i32 -663068411, label %41
    i32 -1953333237, label %65
    i32 510997692, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -663068411, i32 510997692
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.848
  %51 = load i32, i32* @y.849
  %52 = add i32 %50, -327329381
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -327329381
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1953333237, i32 510997692
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32**, i32*** %4
  ret i32** %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32**, align 8
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i8, align 1
  store i32** %0, i32*** %68, align 8
  store i32** %1, i32*** %69, align 8
  store i32** %2, i32*** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32**, i32*** %68, align 8
  %73 = load i32**, i32*** %69, align 8
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %72, i32** %73, i32** %74)
  store i32 -663068411, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.850
  %6 = load i32, i32* @y.851
  %7 = sub i32 %5, 463059165
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 463059165
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1843366766, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1843366766, label %19
    i32 -1909426949, label %27
    i32 2108368361, label %46
    i32 -201001497, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1909426949, i32 -201001497
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  %30 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %29)
  store i32** %30, i32*** %2
  %31 = load i32, i32* @x.850
  %32 = load i32, i32* @y.851
  %33 = add i32 %31, 287827261
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 287827261
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 2108368361, i32 -201001497
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32**, i32*** %2
  ret i32** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca i32**, align 8
  store i32** %0, i32*** %49, align 8
  %50 = load i32**, i32*** %49, align 8
  %51 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %50)
  store i32 -1909426949, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, 5950844465629917442
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, 5950844465629917442
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 -885604975, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %38
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 -885604975, label %23
    i32 -1283545540, label %27
    i32 1885211459, label %34
  ]

; <label>:22:                                     ; preds = %20
  br label %38

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1283545540, i32 1885211459
  store i32 %26, i32* %19
  br label %38

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = bitcast i32** %28 to i8*
  %30 = load i32**, i32*** %5, align 8
  %31 = bitcast i32** %30 to i8*
  %32 = load i64, i64* %8, align 8
  %33 = mul i64 8, %32
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %29, i8* %31, i64 %33, i32 8, i1 false)
  store i32 1885211459, i32* %19
  br label %38

; <label>:34:                                     ; preds = %20
  %35 = load i32**, i32*** %7, align 8
  %36 = load i64, i64* %8, align 8
  %37 = getelementptr inbounds i32*, i32** %35, i64 %36
  ret i32** %37

; <label>:38:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.854
  %6 = load i32, i32* @y.855
  %7 = sub i32 %5, -1182726325
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1182726325
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1581315858, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1581315858, label %19
    i32 450009544, label %27
    i32 -691922155, label %44
    i32 -580006463, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 450009544, i32 -580006463
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  store i32** %29, i32*** %2
  %30 = load i32, i32* @x.854
  %31 = load i32, i32* @y.855
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -691922155, i32 -580006463
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile i32**, i32*** %2
  ret i32** %45

; <label>:46:                                     ; preds = %16
  %47 = alloca i32**, align 8
  store i32** %0, i32*** %47, align 8
  %48 = load i32**, i32*** %47, align 8
  store i32 450009544, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = add i64 %11, -251630882643798686
  %14 = sub i64 %13, %12
  %15 = sub i64 %14, -251630882643798686
  %16 = sub i64 %11, %12
  %17 = sdiv exact i64 %15, 8
  store i64 %17, i64* %8, align 8
  %18 = load i64, i64* %8, align 8
  store i64 %18, i64* %4
  %19 = alloca i32
  store i32 1034976405, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %48
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 1034976405, label %23
    i32 -1951990790, label %27
    i32 645743083, label %40
  ]

; <label>:22:                                     ; preds = %20
  br label %48

; <label>:23:                                     ; preds = %20
  %24 = load volatile i64, i64* %4
  %25 = icmp ne i64 %24, 0
  %26 = select i1 %25, i32 -1951990790, i32 645743083
  store i32 %26, i32* %19
  br label %48

; <label>:27:                                     ; preds = %20
  %28 = load i32**, i32*** %7, align 8
  %29 = load i64, i64* %8, align 8
  %30 = add i64 0, -7257223310565977307
  %31 = sub i64 %30, %29
  %32 = sub i64 %31, -7257223310565977307
  %33 = sub i64 0, %29
  %34 = getelementptr inbounds i32*, i32** %28, i64 %32
  %35 = bitcast i32** %34 to i8*
  %36 = load i32**, i32*** %5, align 8
  %37 = bitcast i32** %36 to i8*
  %38 = load i64, i64* %8, align 8
  %39 = mul i64 8, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %35, i8* %37, i64 %39, i32 8, i1 false)
  store i32 645743083, i32* %19
  br label %48

; <label>:40:                                     ; preds = %20
  %41 = load i32**, i32*** %7, align 8
  %42 = load i64, i64* %8, align 8
  %43 = add i64 0, -410163758173667539
  %44 = sub i64 %43, %42
  %45 = sub i64 %44, -410163758173667539
  %46 = sub i64 0, %42
  %47 = getelementptr inbounds i32*, i32** %41, i64 %45
  ret i32** %47

; <label>:48:                                     ; preds = %27, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt5dequeIiSaIiEE4sizeEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.862
  %6 = load i32, i32* @y.863
  %7 = add i32 %5, 1296103096
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1296103096
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1926144968, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %87
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1926144968, label %19
    i32 -1633991753, label %39
    i32 -116963301, label %75
    i32 594779282, label %77
  ]

; <label>:18:                                     ; preds = %16
  br label %87

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1633991753, i32 594779282
  store i32 %38, i32* %15
  br label %87

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  %41 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  %42 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 3
  %45 = bitcast %"class.std::deque"* %41 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 2
  %48 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %44, %"struct.std::_Deque_iterator"* dereferenceable(32) %47) #3
  store i64 %48, i64* %2
  %49 = load i32, i32* @x.862
  %50 = load i32, i32* @y.863
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = xor i1 %56, true
  %59 = xor i1 %57, true
  %60 = xor i1 false, true
  %61 = and i1 %58, false
  %62 = and i1 %56, %60
  %63 = and i1 %59, false
  %64 = and i1 %57, %60
  %65 = or i1 %61, %62
  %66 = or i1 %63, %64
  %67 = xor i1 %65, %66
  %68 = or i1 %58, %59
  %69 = xor i1 %68, true
  %70 = or i1 false, %60
  %71 = and i1 %69, %70
  %72 = or i1 %67, %71
  %73 = or i1 %56, %57
  %74 = select i1 %72, i32 -116963301, i32 594779282
  store i32 %74, i32* %15
  br label %87

; <label>:75:                                     ; preds = %16
  %76 = load volatile i64, i64* %2
  ret i64 %76

; <label>:77:                                     ; preds = %16
  %78 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %78, align 8
  %79 = load %"class.std::deque"*, %"class.std::deque"** %78, align 8
  %80 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %81 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %81, i32 0, i32 3
  %83 = bitcast %"class.std::deque"* %79 to %"class.std::_Deque_base"*
  %84 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %84, i32 0, i32 2
  %86 = call i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32) %82, %"struct.std::_Deque_iterator"* dereferenceable(32) %85) #3
  store i32 -1633991753, i32* %15
  br label %87

; <label>:87:                                     ; preds = %77, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZStmiIiRiPiENSt15_Deque_iteratorIT_T0_T1_E15difference_typeERKS6_S9_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %6 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 3
  %8 = load i32**, i32*** %7, align 8
  %9 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %9, i32 0, i32 3
  %11 = load i32**, i32*** %10, align 8
  %12 = ptrtoint i32** %8 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = add i64 %12, -8794101112286015650
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -8794101112286015650
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  %19 = sub i64 %18, 2478781745917155504
  %20 = sub i64 %19, 1
  %21 = add i64 %20, 2478781745917155504
  %22 = sub nsw i64 %18, 1
  %23 = mul nsw i64 %5, %21
  %24 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %25 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %24, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %28 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %27, i32 0, i32 1
  %29 = load i32*, i32** %28, align 8
  %30 = ptrtoint i32* %26 to i64
  %31 = ptrtoint i32* %29 to i64
  %32 = sub i64 %30, -4503132154727242393
  %33 = sub i64 %32, %31
  %34 = add i64 %33, -4503132154727242393
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 4
  %37 = add i64 %23, -7568242070641272024
  %38 = add i64 %37, %36
  %39 = sub i64 %38, -7568242070641272024
  %40 = add nsw i64 %23, %36
  %41 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %41, i32 0, i32 2
  %43 = load i32*, i32** %42, align 8
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = ptrtoint i32* %43 to i64
  %48 = ptrtoint i32* %46 to i64
  %49 = sub i64 %47, 5396284715007287221
  %50 = sub i64 %49, %48
  %51 = add i64 %50, 5396284715007287221
  %52 = sub i64 %47, %48
  %53 = sdiv exact i64 %51, 4
  %54 = add i64 %39, -2416622421617010854
  %55 = add i64 %54, %53
  %56 = sub i64 %55, -2416622421617010854
  %57 = add nsw i64 %39, %53
  ret i64 %56
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  %3 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %4 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %3, %"class.std::deque"* %4) #3
  %5 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %3) #3
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.868
  %6 = load i32, i32* @y.869
  %7 = add i32 %5, -1436014092
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1436014092
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1208516829, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %53
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1208516829, label %19
    i32 1692194552, label %27
    i32 -1986013164, label %46
    i32 117161023, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %53

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1692194552, i32 117161023
  store i32 %26, i32* %15
  br label %53

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %28, align 8
  %29 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.868
  %33 = load i32, i32* @y.869
  %34 = sub i32 0, 1
  %35 = add i32 %32, %34
  %36 = sub i32 %32, 1
  %37 = mul i32 %32, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %33, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 -1986013164, i32 117161023
  store i32 %45, i32* %15
  br label %53

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %16
  %49 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %49, align 8
  %50 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  store i32 1692194552, i32* %15
  br label %53

; <label>:53:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %32

; <label>:16:                                     ; preds = %1
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18 to %"class.std::allocator.31"*
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 0
  %24 = load i32*, i32** %23, align 8
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.31"* dereferenceable(1) %19, i32* %24)
          to label %25 unwind label %141

; <label>:25:                                     ; preds = %16
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = getelementptr inbounds i32, i32* %30, i32 1
  store i32* %31, i32** %29, align 8
  br label %87

; <label>:32:                                     ; preds = %1
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %33 unwind label %141

; <label>:33:                                     ; preds = %32
  %34 = load i32, i32* @x.870
  %35 = load i32, i32* @y.871
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  br i1 %57, label %59, label %144

; <label>:59:                                     ; preds = %33, %144
  %60 = load i32, i32* @x.870
  %61 = load i32, i32* @y.871
  %62 = add i32 %60, -25464710
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -25464710
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  br i1 %84, label %86, label %144

; <label>:86:                                     ; preds = %59
  br label %87

; <label>:87:                                     ; preds = %86, %25
  %88 = load i32, i32* @x.870
  %89 = load i32, i32* @y.871
  %90 = sub i32 %88, -2093872679
  %91 = sub i32 %90, 1
  %92 = add i32 %91, -2093872679
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 true, true
  %101 = and i1 %98, true
  %102 = and i1 %96, %100
  %103 = and i1 %99, true
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 true, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %145

; <label>:114:                                    ; preds = %87, %145
  %115 = load i32, i32* @x.870
  %116 = load i32, i32* @y.871
  %117 = sub i32 0, 1
  %118 = add i32 %115, %117
  %119 = sub i32 %115, 1
  %120 = mul i32 %115, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %116, 10
  %124 = xor i1 %122, true
  %125 = xor i1 %123, true
  %126 = xor i1 false, true
  %127 = and i1 %124, false
  %128 = and i1 %122, %126
  %129 = and i1 %125, false
  %130 = and i1 %123, %126
  %131 = or i1 %127, %128
  %132 = or i1 %129, %130
  %133 = xor i1 %131, %132
  %134 = or i1 %124, %125
  %135 = xor i1 %134, true
  %136 = or i1 false, %126
  %137 = and i1 %135, %136
  %138 = or i1 %133, %137
  %139 = or i1 %122, %123
  br i1 %138, label %140, label %145

; <label>:140:                                    ; preds = %114
  ret void

; <label>:141:                                    ; preds = %32, %16
  %142 = landingpad { i8*, i32 }
          catch i8* null
  %143 = extractvalue { i8*, i32 } %142, 0
  call void @__clang_call_terminate(i8* %143) #10
  unreachable

; <label>:144:                                    ; preds = %59, %33
  br label %59

; <label>:145:                                    ; preds = %114, %87
  br label %114
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.31"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.31"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.31"* %0, %"class.std::allocator.31"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.31"*, %"class.std::allocator.31"** %3, align 8
  %6 = bitcast %"class.std::allocator.31"* %5 to %"class.__gnu_cxx::new_allocator.32"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.32"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = call dereferenceable(1) %"class.std::allocator.31"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %4) #3
  %6 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %7 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.31"* dereferenceable(1) %5, i32* %10)
  %11 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %12 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %13 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 2
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %14, i32 0, i32 1
  %16 = load i32*, i32** %15, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %11, i32* %16) #3
  %17 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %18 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %17, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %18, i32 0, i32 2
  %20 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 2
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = getelementptr inbounds i32*, i32** %24, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %19, i32** %25) #3
  %26 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 2
  %29 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %28, i32 0, i32 1
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %32 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %32, i32 0, i32 2
  %34 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %33, i32 0, i32 0
  store i32* %30, i32** %34, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.32"*, i32*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.32"*, align 8
  %4 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.32"* %0, %"class.__gnu_cxx::new_allocator.32"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.32"*, %"class.__gnu_cxx::new_allocator.32"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat {
  %3 = alloca i32
  %4 = alloca i32
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32*, align 8
  store i32* %0, i32** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load i32*, i32** %7, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %4
  %10 = load i32*, i32** %6, align 8
  %11 = load i32, i32* %10, align 4
  store i32 %11, i32* %3
  %12 = alloca i32
  store i32 -1032336517, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1032336517, label %16
    i32 1655637985, label %21
    i32 1080523171, label %23
    i32 2041191784, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i32, i32* %4
  %18 = load volatile i32, i32* %3
  %19 = icmp slt i32 %17, %18
  %20 = select i1 %19, i32 1655637985, i32 1080523171
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i32*, i32** %7, align 8
  store i32* %22, i32** %5, align 8
  store i32 2041191784, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i32*, i32** %6, align 8
  store i32* %24, i32** %5, align 8
  store i32 2041191784, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i32*, i32** %5, align 8
  ret i32* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.31"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.880
  %7 = load i32, i32* @y.881
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1688276241, i32* %15
  br label %16

; <label>:16:                                     ; preds = %3, %67
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1688276241, label %19
    i32 -127786650, label %27
    i32 1095440489, label %60
    i32 2129596975, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %67

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -127786650, i32 2129596975
  store i32 %26, i32* %15
  br label %67

; <label>:27:                                     ; preds = %16
  %28 = alloca i32*, align 8
  %29 = alloca i32*, align 8
  %30 = alloca %"class.std::allocator.31"*, align 8
  store i32* %0, i32** %28, align 8
  store i32* %1, i32** %29, align 8
  store %"class.std::allocator.31"* %2, %"class.std::allocator.31"** %30, align 8
  %31 = load i32*, i32** %28, align 8
  %32 = load i32*, i32** %29, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %31, i32* %32)
  %33 = load i32, i32* @x.880
  %34 = load i32, i32* @y.881
  %35 = sub i32 %33, 2013862832
  %36 = sub i32 %35, 1
  %37 = add i32 %36, 2013862832
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1095440489, i32 2129596975
  store i32 %59, i32* %15
  br label %67

; <label>:60:                                     ; preds = %16
  ret void

; <label>:61:                                     ; preds = %16
  %62 = alloca i32*, align 8
  %63 = alloca i32*, align 8
  %64 = alloca %"class.std::allocator.31"*, align 8
  store i32* %0, i32** %62, align 8
  store i32* %1, i32** %63, align 8
  store %"class.std::allocator.31"* %2, %"class.std::allocator.31"** %64, align 8
  %65 = load i32*, i32** %62, align 8
  %66 = load i32*, i32** %63, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %65, i32* %66)
  store i32 -127786650, i32* %15
  br label %67

; <label>:67:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.884
  %6 = load i32, i32* @y.885
  %7 = sub i32 %5, 1617452936
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1617452936
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -190653678, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -190653678, label %19
    i32 -1634380799, label %39
    i32 -1056256998, label %57
    i32 1010555198, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1634380799, i32 1010555198
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca i32*, align 8
  %41 = alloca i32*, align 8
  store i32* %0, i32** %40, align 8
  store i32* %1, i32** %41, align 8
  %42 = load i32, i32* @x.884
  %43 = load i32, i32* @y.885
  %44 = sub i32 %42, -32080088
  %45 = sub i32 %44, 1
  %46 = add i32 %45, -32080088
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1056256998, i32 1010555198
  store i32 %56, i32* %15
  br label %61

; <label>:57:                                     ; preds = %16
  ret void

; <label>:58:                                     ; preds = %16
  %59 = alloca i32*, align 8
  %60 = alloca i32*, align 8
  store i32* %0, i32** %59, align 8
  store i32* %1, i32** %60, align 8
  store i32 -1634380799, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s836257848.cpp() #0 section ".text.startup" {
  call void @__cxx_global_var_init()
  ret void
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
