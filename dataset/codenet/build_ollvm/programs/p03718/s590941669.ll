; ModuleID = 'Project_CodeNet_C++1400/p03718/s590941669.cpp'
source_filename = "Project_CodeNet_C++1400/p03718/s590941669.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.std::ios_base::Init" = type { i8 }
%"class.std::tuple" = type { %"struct.std::_Tuple_impl" }
%"struct.std::_Tuple_impl" = type { %"struct.std::_Tuple_impl.0", %"struct.std::_Head_base.1" }
%"struct.std::_Tuple_impl.0" = type { %"struct.std::_Head_base" }
%"struct.std::_Head_base" = type { i32* }
%"struct.std::_Head_base.1" = type { i32* }
%class.network = type { i32, i32, %"class.std::vector", %"class.std::vector.3", %"class.std::vector.3" }
%"class.std::vector" = type { %"struct.std::_Vector_base" }
%"struct.std::_Vector_base" = type { %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl" }
%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl" = type { %"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::vector.2"* }
%"class.std::vector.2" = type { %"struct.std::_Vector_base.8" }
%"struct.std::_Vector_base.8" = type { %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl" }
%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl" = type { %"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"struct.network<int>::edge"* }
%"struct.network<int>::edge" = type { i32, i32, i32, i32 }
%"class.std::vector.3" = type { %"struct.std::_Vector_base.4" }
%"struct.std::_Vector_base.4" = type { %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" }
%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl" = type { i32*, i32*, i32* }
%"class.std::allocator.5" = type { i8 }
%"class.std::allocator" = type { i8 }
%"class.__gnu_cxx::new_allocator.6" = type { i8 }
%"class.std::allocator.9" = type { i8 }
%"class.__gnu_cxx::new_allocator.10" = type { i8 }
%"class.__gnu_cxx::new_allocator" = type { i8 }
%"class.std::move_iterator" = type { %"class.std::vector.2"* }
%"class.std::move_iterator.12" = type { %"struct.network<int>::edge"* }
%"class.std::queue" = type { %"class.std::deque" }
%"class.std::deque" = type { %"class.std::_Deque_base" }
%"class.std::_Deque_base" = type { %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" }
%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl" = type { i32**, i64, %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator" }
%"struct.std::_Deque_iterator" = type { i32*, i32*, i32*, i32** }
%"class.__gnu_cxx::__normal_iterator" = type { %"struct.network<int>::edge"* }
%"class.std::move_iterator.13" = type { i32* }
%"class.std::allocator.14" = type { i8 }
%"class.__gnu_cxx::new_allocator.15" = type { i8 }
%"struct.std::integral_constant" = type { i8 }
%"struct.__gnu_cxx::__allocator_always_compares_equal" = type { i8 }
%"class.__gnu_cxx::__normal_iterator.17" = type { i32* }

$_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_ = comdat any

$_ZNSt5tupleIJRiS0_EEaSEOS1_ = comdat any

$_ZN7networkIiEC2Eiii = comdat any

$_ZN7networkIiE17add_directed_edgeEiiRKi = comdat any

$_ZN7networkIiE12maximum_flowEv = comdat any

$_ZN7networkIiED2Ev = comdat any

$_ZNSt6vectorIiSaIiEED2Ev = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev = comdat any

$_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIiSaIiEED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZSt8_DestroyIPiEvT_S1_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim = comdat any

$_ZNSaIiED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EED2Ev = comdat any

$_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EEEvT_S7_ = comdat any

$_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7networkIiE4edgeESaIS5_EEEEvT_S9_ = comdat any

$_ZSt8_DestroyISt6vectorIN7networkIiE4edgeESaIS3_EEEvPT_ = comdat any

$_ZSt11__addressofISt6vectorIN7networkIiE4edgeESaIS3_EEEPT_RS6_ = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EED2Ev = comdat any

$_ZSt8_DestroyIPN7networkIiE4edgeEEvT_S4_ = comdat any

$_ZNSt12_Destroy_auxILb1EE9__destroyIPN7networkIiE4edgeEEEvT_S6_ = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE10deallocateERS3_PS2_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE10deallocateEPS3_m = comdat any

$_ZNSaIN7networkIiE4edgeEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEED2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE10deallocateEPS6_m = comdat any

$_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEED2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEED2Ev = comdat any

$_ZNSt5tupleIJRiS0_EEC2ES0_S0_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_EEC2ES0_S0_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiEEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_ = comdat any

$_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_ = comdat any

$_ZSt4moveIRSt5tupleIJRiS1_EEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_EEaSEOS1_ = comdat any

$_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_ = comdat any

$_ZSt4moveIRSt11_Tuple_implILm1EJRiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiEEaSEOS1_ = comdat any

$_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_ = comdat any

$_ZNSt11_Tuple_implILm1EJRiEE7_M_headERS1_ = comdat any

$_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_ = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEC2Ev = comdat any

$_ZNSt6vectorIiSaIiEEC2Ev = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE6resizeEm = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EEC2Ev = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev = comdat any

$_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2Ev = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev = comdat any

$_ZNSaIiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2Ev = comdat any

$_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_ = comdat any

$_ZSt27__uninitialized_default_n_aIPSt6vectorIN7networkIiE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7networkIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPSt6vectorIN7networkIiE4edgeESaIS3_EEmET_S7_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7networkIiE4edgeESaIS5_EEmEET_S9_T0_ = comdat any

$_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2Ev = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2Ev = comdat any

$_ZNSaIN7networkIiE4edgeEEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2Ev = comdat any

$_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv = comdat any

$_ZSt3maxImERKT_S2_S2_ = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8max_sizeERKS6_ = comdat any

$_ZNKSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8allocateERS6_m = comdat any

$_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_ = comdat any

$_ZStneIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEdeEv = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEppEv = comdat any

$_ZSteqIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_ = comdat any

$_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEE4baseEv = comdat any

$_ZSt7forwardISt6vectorIN7networkIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSt6vectorIN7networkIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_ = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2EOS4_ = comdat any

$_ZSt4moveIRSaIN7networkIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2EOS3_ = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_ = comdat any

$_ZNSaIN7networkIiE4edgeEEC2ERKS2_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2ERKS4_ = comdat any

$_ZSt4swapIPN7networkIiE4edgeEEvRT_S5_ = comdat any

$_ZSt4moveIRPN7networkIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEC2ES6_ = comdat any

$_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimRKiiEEEvDpOT_ = comdat any

$_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimiiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimRKiiEEEvRS3_PT_DpOT0_ = comdat any

$_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE = comdat any

$_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimRKiiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimRKiiEEEvPT_DpOT0_ = comdat any

$_ZN7networkIiE4edgeC2EiiRKiS3_ = comdat any

$_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPN7networkIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_ = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE7destroyIS2_EEvRS3_PT_ = comdat any

$_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8max_sizeERKS3_ = comdat any

$_ZNKSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8allocateERS3_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7networkIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPN7networkIiE4edgeESt13move_iteratorIS3_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPN7networkIiE4edgeEES4_ET0_T_S7_S6_ = comdat any

$_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7networkIiE4edgeEES6_EET0_T_S9_S8_ = comdat any

$_ZStneIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZSt10_ConstructIN7networkIiE4edgeEJS2_EEvPT_DpOT0_ = comdat any

$_ZSt11__addressofIN7networkIiE4edgeEEPT_RS3_ = comdat any

$_ZNKSt13move_iteratorIPN7networkIiE4edgeEEdeEv = comdat any

$_ZNSt13move_iteratorIPN7networkIiE4edgeEEppEv = comdat any

$_ZSteqIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_ = comdat any

$_ZNKSt13move_iteratorIPN7networkIiE4edgeEE4baseEv = comdat any

$_ZSt7forwardIN7networkIiE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE = comdat any

$_ZNSt13move_iteratorIPN7networkIiE4edgeEEC2ES3_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE7destroyIS3_EEvPT_ = comdat any

$_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimiiEEEvRS3_PT_DpOT0_ = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimiiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimiiEEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE6resizeEm = comdat any

$_ZN7networkIiE10make_layerEv = comdat any

$_ZNSt6vectorIiSaIiEE6assignEmRKi = comdat any

$_ZN7networkIiE7augmentEiRKi = comdat any

$_ZNSt14numeric_limitsIiE3maxEv = comdat any

$_ZNKSt6vectorIiSaIiEE4sizeEv = comdat any

$_ZNSt6vectorIiSaIiEE17_M_default_appendEm = comdat any

$_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi = comdat any

$_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E = comdat any

$_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc = comdat any

$_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm = comdat any

$_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_ = comdat any

$_ZSt25__uninitialized_default_nIPimET_S1_T0_ = comdat any

$_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_ = comdat any

$_ZSt6fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_ = comdat any

$_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_ = comdat any

$_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_ = comdat any

$_ZNKSt6vectorIiSaIiEE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_ = comdat any

$_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv = comdat any

$_ZNSt16allocator_traitsISaIiEE8allocateERS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv = comdat any

$_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E = comdat any

$_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_ = comdat any

$_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_ = comdat any

$_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_ = comdat any

$_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_ = comdat any

$_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_ = comdat any

$_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_ = comdat any

$_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_ = comdat any

$_ZNKSt13move_iteratorIPiE4baseEv = comdat any

$_ZNSt13move_iteratorIPiEC2ES0_ = comdat any

$_ZNSt6vectorIiSaIiEEixEm = comdat any

$_ZNSt5dequeIiSaIiEEC2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_ = comdat any

$_ZNSt5dequeIiSaIiEED2Ev = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRiEEEvDpOT_ = comdat any

$_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE5beginEv = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE3endEv = comdat any

$_ZN9__gnu_cxxneIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEdeEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEppEv = comdat any

$_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2Ev = comdat any

$_ZSt16__deque_buf_sizem = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm = comdat any

$_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_ = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv = comdat any

$_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m = comdat any

$_ZNSaIPiED2Ev = comdat any

$_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSaIPiEC2IiEERKSaIT_E = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiEC2Ev = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv = comdat any

$_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiED2Ev = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi = comdat any

$_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m = comdat any

$_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m = comdat any

$_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv = comdat any

$_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt5dequeIiSaIiEEC2EOS1_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_ = comdat any

$_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE = comdat any

$_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_ = comdat any

$_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_ = comdat any

$_ZNSaIiEC2ERKS_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_ = comdat any

$_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_ = comdat any

$_ZSt4swapIPPiEvRT_S3_ = comdat any

$_ZSt4swapImEvRT_S1_ = comdat any

$_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_ = comdat any

$_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_ = comdat any

$_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_ = comdat any

$_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_ = comdat any

$_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_ = comdat any

$_ZNSt5dequeIiSaIiEE5beginEv = comdat any

$_ZNSt5dequeIiSaIiEE3endEv = comdat any

$_ZNSt11_Deque_baseIiSaIiEED2Ev = comdat any

$_ZNSt5dequeIiSaIiEE12emplace_backIJRiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRiEEEvPT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm = comdat any

$_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb = comdat any

$_ZSt4copyIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_ = comdat any

$_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_ = comdat any

$_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_ = comdat any

$_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_ = comdat any

$_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_ = comdat any

$_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_ = comdat any

$_ZNKSt5dequeIiSaIiEE5emptyEv = comdat any

$_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_ = comdat any

$_ZNSt5dequeIiSaIiEE5frontEv = comdat any

$_ZNKSt15_Deque_iteratorIiRiPiEdeEv = comdat any

$_ZNSt5dequeIiSaIiEE9pop_frontEv = comdat any

$_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_ = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv = comdat any

$_ZNSt5dequeIiSaIiEE12emplace_backIJRKiEEEvDpOT_ = comdat any

$_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_ = comdat any

$_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_ = comdat any

$_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_ = comdat any

$_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi = comdat any

$_ZNKSt6vectorIiSaIiEE8capacityEv = comdat any

$_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_ = comdat any

$_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_ = comdat any

$_ZNSt6vectorIiSaIiEE5beginEv = comdat any

$_ZNSt6vectorIiSaIiEE3endEv = comdat any

$_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E = comdat any

$_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_ = comdat any

$_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi = comdat any

$_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_ = comdat any

$_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm = comdat any

$_ZSt4swapIPiEvRT_S2_ = comdat any

$_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_ = comdat any

$_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_ = comdat any

$_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_ = comdat any

$_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_ = comdat any

$_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv = comdat any

$_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_ = comdat any

$_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_ = comdat any

$_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_ = comdat any

$_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEixEm = comdat any

$_ZSt3minIiERKT_S2_S2_ = comdat any

@_ZStL8__ioinit = internal global %"class.std::ios_base::Init" zeroinitializer, align 1
@__dso_handle = external global i8
@.str = private unnamed_addr constant [5 x i8] c"%d%d\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@_ZL3INF = internal constant i32 536870912, align 4
@.str.2 = private unnamed_addr constant [4 x i8] c"%d\0A\00", align 1
@.str.3 = private unnamed_addr constant [26 x i8] c"vector::_M_default_append\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"vector::_M_emplace_back_aux\00", align 1
@llvm.global_ctors = appending global [1 x { i32, void ()*, i8* }] [{ i32, void ()*, i8* } { i32 65535, void ()* @_GLOBAL__sub_I_s590941669.cpp, i8* null }]
@x = common global i32 0
@y = common global i32 0
@x.5 = common global i32 0
@y.6 = common global i32 0
@x.7 = common global i32 0
@y.8 = common global i32 0
@x.9 = common global i32 0
@y.10 = common global i32 0
@x.11 = common global i32 0
@y.12 = common global i32 0
@x.13 = common global i32 0
@y.14 = common global i32 0
@x.15 = common global i32 0
@y.16 = common global i32 0
@x.17 = common global i32 0
@y.18 = common global i32 0
@x.19 = common global i32 0
@y.20 = common global i32 0
@x.21 = common global i32 0
@y.22 = common global i32 0
@x.23 = common global i32 0
@y.24 = common global i32 0
@x.25 = common global i32 0
@y.26 = common global i32 0
@x.27 = common global i32 0
@y.28 = common global i32 0
@x.29 = common global i32 0
@y.30 = common global i32 0
@x.31 = common global i32 0
@y.32 = common global i32 0
@x.33 = common global i32 0
@y.34 = common global i32 0
@x.35 = common global i32 0
@y.36 = common global i32 0
@x.37 = common global i32 0
@y.38 = common global i32 0
@x.39 = common global i32 0
@y.40 = common global i32 0
@x.41 = common global i32 0
@y.42 = common global i32 0
@x.43 = common global i32 0
@y.44 = common global i32 0
@x.45 = common global i32 0
@y.46 = common global i32 0
@x.47 = common global i32 0
@y.48 = common global i32 0
@x.49 = common global i32 0
@y.50 = common global i32 0
@x.51 = common global i32 0
@y.52 = common global i32 0
@x.53 = common global i32 0
@y.54 = common global i32 0
@x.55 = common global i32 0
@y.56 = common global i32 0
@x.57 = common global i32 0
@y.58 = common global i32 0
@x.59 = common global i32 0
@y.60 = common global i32 0
@x.61 = common global i32 0
@y.62 = common global i32 0
@x.63 = common global i32 0
@y.64 = common global i32 0
@x.65 = common global i32 0
@y.66 = common global i32 0
@x.67 = common global i32 0
@y.68 = common global i32 0
@x.69 = common global i32 0
@y.70 = common global i32 0
@x.71 = common global i32 0
@y.72 = common global i32 0
@x.73 = common global i32 0
@y.74 = common global i32 0
@x.75 = common global i32 0
@y.76 = common global i32 0
@x.77 = common global i32 0
@y.78 = common global i32 0
@x.79 = common global i32 0
@y.80 = common global i32 0
@x.81 = common global i32 0
@y.82 = common global i32 0
@x.83 = common global i32 0
@y.84 = common global i32 0
@x.85 = common global i32 0
@y.86 = common global i32 0
@x.87 = common global i32 0
@y.88 = common global i32 0
@x.89 = common global i32 0
@y.90 = common global i32 0
@x.91 = common global i32 0
@y.92 = common global i32 0
@x.93 = common global i32 0
@y.94 = common global i32 0
@x.95 = common global i32 0
@y.96 = common global i32 0
@x.97 = common global i32 0
@y.98 = common global i32 0
@x.99 = common global i32 0
@y.100 = common global i32 0
@x.101 = common global i32 0
@y.102 = common global i32 0
@x.103 = common global i32 0
@y.104 = common global i32 0
@x.105 = common global i32 0
@y.106 = common global i32 0
@x.107 = common global i32 0
@y.108 = common global i32 0
@x.109 = common global i32 0
@y.110 = common global i32 0
@x.111 = common global i32 0
@y.112 = common global i32 0
@x.113 = common global i32 0
@y.114 = common global i32 0
@x.115 = common global i32 0
@y.116 = common global i32 0
@x.117 = common global i32 0
@y.118 = common global i32 0
@x.119 = common global i32 0
@y.120 = common global i32 0
@x.121 = common global i32 0
@y.122 = common global i32 0
@x.123 = common global i32 0
@y.124 = common global i32 0
@x.125 = common global i32 0
@y.126 = common global i32 0
@x.127 = common global i32 0
@y.128 = common global i32 0
@x.129 = common global i32 0
@y.130 = common global i32 0
@x.131 = common global i32 0
@y.132 = common global i32 0
@x.133 = common global i32 0
@y.134 = common global i32 0
@x.135 = common global i32 0
@y.136 = common global i32 0
@x.137 = common global i32 0
@y.138 = common global i32 0
@x.139 = common global i32 0
@y.140 = common global i32 0
@x.141 = common global i32 0
@y.142 = common global i32 0
@x.143 = common global i32 0
@y.144 = common global i32 0
@x.145 = common global i32 0
@y.146 = common global i32 0
@x.147 = common global i32 0
@y.148 = common global i32 0
@x.149 = common global i32 0
@y.150 = common global i32 0
@x.151 = common global i32 0
@y.152 = common global i32 0
@x.153 = common global i32 0
@y.154 = common global i32 0
@x.155 = common global i32 0
@y.156 = common global i32 0
@x.157 = common global i32 0
@y.158 = common global i32 0
@x.159 = common global i32 0
@y.160 = common global i32 0
@x.161 = common global i32 0
@y.162 = common global i32 0
@x.163 = common global i32 0
@y.164 = common global i32 0
@x.165 = common global i32 0
@y.166 = common global i32 0
@x.167 = common global i32 0
@y.168 = common global i32 0
@x.169 = common global i32 0
@y.170 = common global i32 0
@x.171 = common global i32 0
@y.172 = common global i32 0
@x.173 = common global i32 0
@y.174 = common global i32 0
@x.175 = common global i32 0
@y.176 = common global i32 0
@x.177 = common global i32 0
@y.178 = common global i32 0
@x.179 = common global i32 0
@y.180 = common global i32 0
@x.181 = common global i32 0
@y.182 = common global i32 0
@x.183 = common global i32 0
@y.184 = common global i32 0
@x.185 = common global i32 0
@y.186 = common global i32 0
@x.187 = common global i32 0
@y.188 = common global i32 0
@x.189 = common global i32 0
@y.190 = common global i32 0
@x.191 = common global i32 0
@y.192 = common global i32 0
@x.193 = common global i32 0
@y.194 = common global i32 0
@x.195 = common global i32 0
@y.196 = common global i32 0
@x.197 = common global i32 0
@y.198 = common global i32 0
@x.199 = common global i32 0
@y.200 = common global i32 0
@x.201 = common global i32 0
@y.202 = common global i32 0
@x.203 = common global i32 0
@y.204 = common global i32 0
@x.205 = common global i32 0
@y.206 = common global i32 0
@x.207 = common global i32 0
@y.208 = common global i32 0
@x.209 = common global i32 0
@y.210 = common global i32 0
@x.211 = common global i32 0
@y.212 = common global i32 0
@x.213 = common global i32 0
@y.214 = common global i32 0
@x.215 = common global i32 0
@y.216 = common global i32 0
@x.217 = common global i32 0
@y.218 = common global i32 0
@x.219 = common global i32 0
@y.220 = common global i32 0
@x.221 = common global i32 0
@y.222 = common global i32 0
@x.223 = common global i32 0
@y.224 = common global i32 0
@x.225 = common global i32 0
@y.226 = common global i32 0
@x.227 = common global i32 0
@y.228 = common global i32 0
@x.229 = common global i32 0
@y.230 = common global i32 0
@x.231 = common global i32 0
@y.232 = common global i32 0
@x.233 = common global i32 0
@y.234 = common global i32 0
@x.235 = common global i32 0
@y.236 = common global i32 0
@x.237 = common global i32 0
@y.238 = common global i32 0
@x.239 = common global i32 0
@y.240 = common global i32 0
@x.241 = common global i32 0
@y.242 = common global i32 0
@x.243 = common global i32 0
@y.244 = common global i32 0
@x.245 = common global i32 0
@y.246 = common global i32 0
@x.247 = common global i32 0
@y.248 = common global i32 0
@x.249 = common global i32 0
@y.250 = common global i32 0
@x.251 = common global i32 0
@y.252 = common global i32 0
@x.253 = common global i32 0
@y.254 = common global i32 0
@x.255 = common global i32 0
@y.256 = common global i32 0
@x.257 = common global i32 0
@y.258 = common global i32 0
@x.259 = common global i32 0
@y.260 = common global i32 0
@x.261 = common global i32 0
@y.262 = common global i32 0
@x.263 = common global i32 0
@y.264 = common global i32 0
@x.265 = common global i32 0
@y.266 = common global i32 0
@x.267 = common global i32 0
@y.268 = common global i32 0
@x.269 = common global i32 0
@y.270 = common global i32 0
@x.271 = common global i32 0
@y.272 = common global i32 0
@x.273 = common global i32 0
@y.274 = common global i32 0
@x.275 = common global i32 0
@y.276 = common global i32 0
@x.277 = common global i32 0
@y.278 = common global i32 0
@x.279 = common global i32 0
@y.280 = common global i32 0
@x.281 = common global i32 0
@y.282 = common global i32 0
@x.283 = common global i32 0
@y.284 = common global i32 0
@x.285 = common global i32 0
@y.286 = common global i32 0
@x.287 = common global i32 0
@y.288 = common global i32 0
@x.289 = common global i32 0
@y.290 = common global i32 0
@x.291 = common global i32 0
@y.292 = common global i32 0
@x.293 = common global i32 0
@y.294 = common global i32 0
@x.295 = common global i32 0
@y.296 = common global i32 0
@x.297 = common global i32 0
@y.298 = common global i32 0
@x.299 = common global i32 0
@y.300 = common global i32 0
@x.301 = common global i32 0
@y.302 = common global i32 0
@x.303 = common global i32 0
@y.304 = common global i32 0
@x.305 = common global i32 0
@y.306 = common global i32 0
@x.307 = common global i32 0
@y.308 = common global i32 0
@x.309 = common global i32 0
@y.310 = common global i32 0
@x.311 = common global i32 0
@y.312 = common global i32 0
@x.313 = common global i32 0
@y.314 = common global i32 0
@x.315 = common global i32 0
@y.316 = common global i32 0
@x.317 = common global i32 0
@y.318 = common global i32 0
@x.319 = common global i32 0
@y.320 = common global i32 0
@x.321 = common global i32 0
@y.322 = common global i32 0
@x.323 = common global i32 0
@y.324 = common global i32 0
@x.325 = common global i32 0
@y.326 = common global i32 0
@x.327 = common global i32 0
@y.328 = common global i32 0
@x.329 = common global i32 0
@y.330 = common global i32 0
@x.331 = common global i32 0
@y.332 = common global i32 0
@x.333 = common global i32 0
@y.334 = common global i32 0
@x.335 = common global i32 0
@y.336 = common global i32 0
@x.337 = common global i32 0
@y.338 = common global i32 0
@x.339 = common global i32 0
@y.340 = common global i32 0
@x.341 = common global i32 0
@y.342 = common global i32 0
@x.343 = common global i32 0
@y.344 = common global i32 0
@x.345 = common global i32 0
@y.346 = common global i32 0
@x.347 = common global i32 0
@y.348 = common global i32 0
@x.349 = common global i32 0
@y.350 = common global i32 0
@x.351 = common global i32 0
@y.352 = common global i32 0
@x.353 = common global i32 0
@y.354 = common global i32 0
@x.355 = common global i32 0
@y.356 = common global i32 0
@x.357 = common global i32 0
@y.358 = common global i32 0
@x.359 = common global i32 0
@y.360 = common global i32 0
@x.361 = common global i32 0
@y.362 = common global i32 0
@x.363 = common global i32 0
@y.364 = common global i32 0
@x.365 = common global i32 0
@y.366 = common global i32 0
@x.367 = common global i32 0
@y.368 = common global i32 0
@x.369 = common global i32 0
@y.370 = common global i32 0
@x.371 = common global i32 0
@y.372 = common global i32 0
@x.373 = common global i32 0
@y.374 = common global i32 0
@x.375 = common global i32 0
@y.376 = common global i32 0
@x.377 = common global i32 0
@y.378 = common global i32 0
@x.379 = common global i32 0
@y.380 = common global i32 0
@x.381 = common global i32 0
@y.382 = common global i32 0
@x.383 = common global i32 0
@y.384 = common global i32 0
@x.385 = common global i32 0
@y.386 = common global i32 0
@x.387 = common global i32 0
@y.388 = common global i32 0
@x.389 = common global i32 0
@y.390 = common global i32 0
@x.391 = common global i32 0
@y.392 = common global i32 0
@x.393 = common global i32 0
@y.394 = common global i32 0
@x.395 = common global i32 0
@y.396 = common global i32 0
@x.397 = common global i32 0
@y.398 = common global i32 0
@x.399 = common global i32 0
@y.400 = common global i32 0
@x.401 = common global i32 0
@y.402 = common global i32 0
@x.403 = common global i32 0
@y.404 = common global i32 0
@x.405 = common global i32 0
@y.406 = common global i32 0
@x.407 = common global i32 0
@y.408 = common global i32 0
@x.409 = common global i32 0
@y.410 = common global i32 0
@x.411 = common global i32 0
@y.412 = common global i32 0
@x.413 = common global i32 0
@y.414 = common global i32 0
@x.415 = common global i32 0
@y.416 = common global i32 0
@x.417 = common global i32 0
@y.418 = common global i32 0
@x.419 = common global i32 0
@y.420 = common global i32 0
@x.421 = common global i32 0
@y.422 = common global i32 0
@x.423 = common global i32 0
@y.424 = common global i32 0
@x.425 = common global i32 0
@y.426 = common global i32 0
@x.427 = common global i32 0
@y.428 = common global i32 0
@x.429 = common global i32 0
@y.430 = common global i32 0
@x.431 = common global i32 0
@y.432 = common global i32 0
@x.433 = common global i32 0
@y.434 = common global i32 0
@x.435 = common global i32 0
@y.436 = common global i32 0
@x.437 = common global i32 0
@y.438 = common global i32 0
@x.439 = common global i32 0
@y.440 = common global i32 0
@x.441 = common global i32 0
@y.442 = common global i32 0
@x.443 = common global i32 0
@y.444 = common global i32 0
@x.445 = common global i32 0
@y.446 = common global i32 0
@x.447 = common global i32 0
@y.448 = common global i32 0
@x.449 = common global i32 0
@y.450 = common global i32 0
@x.451 = common global i32 0
@y.452 = common global i32 0
@x.453 = common global i32 0
@y.454 = common global i32 0
@x.455 = common global i32 0
@y.456 = common global i32 0
@x.457 = common global i32 0
@y.458 = common global i32 0
@x.459 = common global i32 0
@y.460 = common global i32 0
@x.461 = common global i32 0
@y.462 = common global i32 0
@x.463 = common global i32 0
@y.464 = common global i32 0
@x.465 = common global i32 0
@y.466 = common global i32 0
@x.467 = common global i32 0
@y.468 = common global i32 0
@x.469 = common global i32 0
@y.470 = common global i32 0
@x.471 = common global i32 0
@y.472 = common global i32 0
@x.473 = common global i32 0
@y.474 = common global i32 0
@x.475 = common global i32 0
@y.476 = common global i32 0
@x.477 = common global i32 0
@y.478 = common global i32 0
@x.479 = common global i32 0
@y.480 = common global i32 0
@x.481 = common global i32 0
@y.482 = common global i32 0
@x.483 = common global i32 0
@y.484 = common global i32 0
@x.485 = common global i32 0
@y.486 = common global i32 0
@x.487 = common global i32 0
@y.488 = common global i32 0
@x.489 = common global i32 0
@y.490 = common global i32 0
@x.491 = common global i32 0
@y.492 = common global i32 0
@x.493 = common global i32 0
@y.494 = common global i32 0
@x.495 = common global i32 0
@y.496 = common global i32 0
@x.497 = common global i32 0
@y.498 = common global i32 0
@x.499 = common global i32 0
@y.500 = common global i32 0
@x.501 = common global i32 0
@y.502 = common global i32 0
@x.503 = common global i32 0
@y.504 = common global i32 0
@x.505 = common global i32 0
@y.506 = common global i32 0
@x.507 = common global i32 0
@y.508 = common global i32 0
@x.509 = common global i32 0
@y.510 = common global i32 0
@x.511 = common global i32 0
@y.512 = common global i32 0
@x.513 = common global i32 0
@y.514 = common global i32 0
@x.515 = common global i32 0
@y.516 = common global i32 0
@x.517 = common global i32 0
@y.518 = common global i32 0
@x.519 = common global i32 0
@y.520 = common global i32 0
@x.521 = common global i32 0
@y.522 = common global i32 0
@x.523 = common global i32 0
@y.524 = common global i32 0
@x.525 = common global i32 0
@y.526 = common global i32 0
@x.527 = common global i32 0
@y.528 = common global i32 0
@x.529 = common global i32 0
@y.530 = common global i32 0
@x.531 = common global i32 0
@y.532 = common global i32 0
@x.533 = common global i32 0
@y.534 = common global i32 0
@x.535 = common global i32 0
@y.536 = common global i32 0
@x.537 = common global i32 0
@y.538 = common global i32 0
@x.539 = common global i32 0
@y.540 = common global i32 0
@x.541 = common global i32 0
@y.542 = common global i32 0
@x.543 = common global i32 0
@y.544 = common global i32 0
@x.545 = common global i32 0
@y.546 = common global i32 0
@x.547 = common global i32 0
@y.548 = common global i32 0
@x.549 = common global i32 0
@y.550 = common global i32 0
@x.551 = common global i32 0
@y.552 = common global i32 0
@x.553 = common global i32 0
@y.554 = common global i32 0
@x.555 = common global i32 0
@y.556 = common global i32 0
@x.557 = common global i32 0
@y.558 = common global i32 0
@x.559 = common global i32 0
@y.560 = common global i32 0
@x.561 = common global i32 0
@y.562 = common global i32 0
@x.563 = common global i32 0
@y.564 = common global i32 0
@x.565 = common global i32 0
@y.566 = common global i32 0
@x.567 = common global i32 0
@y.568 = common global i32 0
@x.569 = common global i32 0
@y.570 = common global i32 0
@x.571 = common global i32 0
@y.572 = common global i32 0
@x.573 = common global i32 0
@y.574 = common global i32 0
@x.575 = common global i32 0
@y.576 = common global i32 0
@x.577 = common global i32 0
@y.578 = common global i32 0
@x.579 = common global i32 0
@y.580 = common global i32 0
@x.581 = common global i32 0
@y.582 = common global i32 0
@x.583 = common global i32 0
@y.584 = common global i32 0
@x.585 = common global i32 0
@y.586 = common global i32 0
@x.587 = common global i32 0
@y.588 = common global i32 0
@x.589 = common global i32 0
@y.590 = common global i32 0
@x.591 = common global i32 0
@y.592 = common global i32 0
@x.593 = common global i32 0
@y.594 = common global i32 0
@x.595 = common global i32 0
@y.596 = common global i32 0
@x.597 = common global i32 0
@y.598 = common global i32 0
@x.599 = common global i32 0
@y.600 = common global i32 0
@x.601 = common global i32 0
@y.602 = common global i32 0
@x.603 = common global i32 0
@y.604 = common global i32 0
@x.605 = common global i32 0
@y.606 = common global i32 0
@x.607 = common global i32 0
@y.608 = common global i32 0
@x.609 = common global i32 0
@y.610 = common global i32 0
@x.611 = common global i32 0
@y.612 = common global i32 0
@x.613 = common global i32 0
@y.614 = common global i32 0
@x.615 = common global i32 0
@y.616 = common global i32 0
@x.617 = common global i32 0
@y.618 = common global i32 0

; Function Attrs: noinline uwtable
define internal void @__cxx_global_var_init() #0 section ".text.startup" {
  call void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"* @_ZStL8__ioinit)
  %1 = call i32 @__cxa_atexit(void (i8*)* bitcast (void (%"class.std::ios_base::Init"*)* @_ZNSt8ios_base4InitD1Ev to void (i8*)*), i8* getelementptr inbounds (%"class.std::ios_base::Init", %"class.std::ios_base::Init"* @_ZStL8__ioinit, i32 0, i32 0), i8* @__dso_handle) #3
  ret void
}

declare void @_ZNSt8ios_base4InitC1Ev(%"class.std::ios_base::Init"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt8ios_base4InitD1Ev(%"class.std::ios_base::Init"*) unnamed_addr #2

; Function Attrs: nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) #3

; Function Attrs: noinline norecurse uwtable
define i32 @main() #4 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = alloca i32, align 4
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca [100 x [101 x i8]], align 16
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.std::tuple", align 8
  %13 = alloca %"class.std::tuple", align 8
  %14 = alloca %"class.std::tuple", align 8
  %15 = alloca %"class.std::tuple", align 8
  %16 = alloca %class.network, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i8*
  %21 = alloca i32
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  store i32 0, i32* %1, align 4
  %25 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i32 0, i32 0), i32* %2, i32* %3)
  store i32 0, i32* %5, align 4
  br label %26

; <label>:26:                                     ; preds = %36, %0
  %27 = load i32, i32* %5, align 4
  %28 = load i32, i32* %2, align 4
  %29 = icmp slt i32 %27, %28
  br i1 %29, label %30, label %41

; <label>:30:                                     ; preds = %26
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %32
  %34 = getelementptr inbounds [101 x i8], [101 x i8]* %33, i32 0, i32 0
  %35 = call i32 (i8*, ...) @scanf(i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i32 0, i32 0), i8* %34)
  br label %36

; <label>:36:                                     ; preds = %30
  %37 = load i32, i32* %5, align 4
  %38 = sub i32 0, 1
  %39 = sub i32 %37, %38
  %40 = add nsw i32 %37, 1
  store i32 %39, i32* %5, align 4
  br label %26

; <label>:41:                                     ; preds = %26
  store i32 0, i32* %10, align 4
  br label %42

; <label>:42:                                     ; preds = %205, %41
  %43 = load i32, i32* %10, align 4
  %44 = load i32, i32* %2, align 4
  %45 = icmp slt i32 %43, %44
  br i1 %45, label %46, label %210

; <label>:46:                                     ; preds = %42
  store i32 0, i32* %11, align 4
  br label %47

; <label>:47:                                     ; preds = %198, %46
  %48 = load i32, i32* %11, align 4
  %49 = load i32, i32* %3, align 4
  %50 = icmp slt i32 %48, %49
  br i1 %50, label %51, label %204

; <label>:51:                                     ; preds = %47
  %52 = load i32, i32* @x.5
  %53 = load i32, i32* @y.6
  %54 = add i32 %52, 206630601
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, 206630601
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  br i1 %76, label %78, label %757

; <label>:78:                                     ; preds = %51, %757
  %79 = load i32, i32* %10, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %80
  %82 = load i32, i32* %11, align 4
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds [101 x i8], [101 x i8]* %81, i64 0, i64 %83
  %85 = load i8, i8* %84, align 1
  %86 = sext i8 %85 to i32
  %87 = icmp eq i32 %86, 83
  %88 = load i32, i32* @x.5
  %89 = load i32, i32* @y.6
  %90 = add i32 %88, 257969458
  %91 = sub i32 %90, 1
  %92 = sub i32 %91, 257969458
  %93 = sub i32 %88, 1
  %94 = mul i32 %88, %92
  %95 = urem i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = icmp slt i32 %89, 10
  %98 = xor i1 %96, true
  %99 = xor i1 %97, true
  %100 = xor i1 false, true
  %101 = and i1 %98, false
  %102 = and i1 %96, %100
  %103 = and i1 %99, false
  %104 = and i1 %97, %100
  %105 = or i1 %101, %102
  %106 = or i1 %103, %104
  %107 = xor i1 %105, %106
  %108 = or i1 %98, %99
  %109 = xor i1 %108, true
  %110 = or i1 false, %100
  %111 = and i1 %109, %110
  %112 = or i1 %107, %111
  %113 = or i1 %96, %97
  br i1 %112, label %114, label %757

; <label>:114:                                    ; preds = %78
  br i1 %87, label %115, label %131

; <label>:115:                                    ; preds = %114
  %116 = call { i32*, i32* } @_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_(i32* dereferenceable(4) %10, i32* dereferenceable(4) %11) #3
  %117 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %12, i32 0, i32 0
  %118 = bitcast %"struct.std::_Tuple_impl"* %117 to { i32*, i32* }*
  %119 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %118, i32 0, i32 0
  %120 = extractvalue { i32*, i32* } %116, 0
  store i32* %120, i32** %119, align 8
  %121 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %118, i32 0, i32 1
  %122 = extractvalue { i32*, i32* } %116, 1
  store i32* %122, i32** %121, align 8
  %123 = call { i32*, i32* } @_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_(i32* dereferenceable(4) %7, i32* dereferenceable(4) %6) #3
  %124 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %13, i32 0, i32 0
  %125 = bitcast %"struct.std::_Tuple_impl"* %124 to { i32*, i32* }*
  %126 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %125, i32 0, i32 0
  %127 = extractvalue { i32*, i32* } %123, 0
  store i32* %127, i32** %126, align 8
  %128 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %125, i32 0, i32 1
  %129 = extractvalue { i32*, i32* } %123, 1
  store i32* %129, i32** %128, align 8
  %130 = call dereferenceable(16) %"class.std::tuple"* @_ZNSt5tupleIJRiS0_EEaSEOS1_(%"class.std::tuple"* %13, %"class.std::tuple"* dereferenceable(16) %12) #3
  br label %131

; <label>:131:                                    ; preds = %115, %114
  %132 = load i32, i32* %10, align 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %133
  %135 = load i32, i32* %11, align 4
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds [101 x i8], [101 x i8]* %134, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %139, 84
  br i1 %140, label %141, label %157

; <label>:141:                                    ; preds = %131
  %142 = call { i32*, i32* } @_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_(i32* dereferenceable(4) %10, i32* dereferenceable(4) %11) #3
  %143 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %14, i32 0, i32 0
  %144 = bitcast %"struct.std::_Tuple_impl"* %143 to { i32*, i32* }*
  %145 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %144, i32 0, i32 0
  %146 = extractvalue { i32*, i32* } %142, 0
  store i32* %146, i32** %145, align 8
  %147 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %144, i32 0, i32 1
  %148 = extractvalue { i32*, i32* } %142, 1
  store i32* %148, i32** %147, align 8
  %149 = call { i32*, i32* } @_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_(i32* dereferenceable(4) %9, i32* dereferenceable(4) %8) #3
  %150 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %15, i32 0, i32 0
  %151 = bitcast %"struct.std::_Tuple_impl"* %150 to { i32*, i32* }*
  %152 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %151, i32 0, i32 0
  %153 = extractvalue { i32*, i32* } %149, 0
  store i32* %153, i32** %152, align 8
  %154 = getelementptr inbounds { i32*, i32* }, { i32*, i32* }* %151, i32 0, i32 1
  %155 = extractvalue { i32*, i32* } %149, 1
  store i32* %155, i32** %154, align 8
  %156 = call dereferenceable(16) %"class.std::tuple"* @_ZNSt5tupleIJRiS0_EEaSEOS1_(%"class.std::tuple"* %15, %"class.std::tuple"* dereferenceable(16) %14) #3
  br label %157

; <label>:157:                                    ; preds = %141, %131
  %158 = load i32, i32* @x.5
  %159 = load i32, i32* @y.6
  %160 = sub i32 0, 1
  %161 = add i32 %158, %160
  %162 = sub i32 %158, 1
  %163 = mul i32 %158, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %159, 10
  %167 = xor i1 %165, true
  %168 = xor i1 %166, true
  %169 = xor i1 true, true
  %170 = and i1 %167, true
  %171 = and i1 %165, %169
  %172 = and i1 %168, true
  %173 = and i1 %166, %169
  %174 = or i1 %170, %171
  %175 = or i1 %172, %173
  %176 = xor i1 %174, %175
  %177 = or i1 %167, %168
  %178 = xor i1 %177, true
  %179 = or i1 true, %169
  %180 = and i1 %178, %179
  %181 = or i1 %176, %180
  %182 = or i1 %165, %166
  br i1 %181, label %183, label %767

; <label>:183:                                    ; preds = %157, %767
  %184 = load i32, i32* @x.5
  %185 = load i32, i32* @y.6
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = and i1 %191, %192
  %194 = xor i1 %191, %192
  %195 = or i1 %193, %194
  %196 = or i1 %191, %192
  br i1 %195, label %197, label %767

; <label>:197:                                    ; preds = %183
  br label %198

; <label>:198:                                    ; preds = %197
  %199 = load i32, i32* %11, align 4
  %200 = add i32 %199, -2097255424
  %201 = add i32 %200, 1
  %202 = sub i32 %201, -2097255424
  %203 = add nsw i32 %199, 1
  store i32 %202, i32* %11, align 4
  br label %47

; <label>:204:                                    ; preds = %47
  br label %205

; <label>:205:                                    ; preds = %204
  %206 = load i32, i32* %10, align 4
  %207 = sub i32 0, 1
  %208 = sub i32 %206, %207
  %209 = add nsw i32 %206, 1
  store i32 %208, i32* %10, align 4
  br label %42

; <label>:210:                                    ; preds = %42
  %211 = load i32, i32* %2, align 4
  %212 = mul nsw i32 2, %211
  %213 = load i32, i32* %3, align 4
  %214 = mul nsw i32 %212, %213
  %215 = load i32, i32* %7, align 4
  %216 = load i32, i32* %3, align 4
  %217 = mul nsw i32 %215, %216
  %218 = load i32, i32* %6, align 4
  %219 = sub i32 0, %218
  %220 = sub i32 %217, %219
  %221 = add nsw i32 %217, %218
  %222 = load i32, i32* %2, align 4
  %223 = load i32, i32* %3, align 4
  %224 = mul nsw i32 %222, %223
  %225 = sub i32 %220, -772901004
  %226 = add i32 %225, %224
  %227 = add i32 %226, -772901004
  %228 = add nsw i32 %220, %224
  %229 = load i32, i32* %9, align 4
  %230 = load i32, i32* %3, align 4
  %231 = mul nsw i32 %229, %230
  %232 = load i32, i32* %8, align 4
  %233 = add i32 %231, -237827830
  %234 = add i32 %233, %232
  %235 = sub i32 %234, -237827830
  %236 = add nsw i32 %231, %232
  call void @_ZN7networkIiEC2Eiii(%class.network* %16, i32 %214, i32 %227, i32 %235)
  store i32 0, i32* %17, align 4
  br label %237

; <label>:237:                                    ; preds = %733, %210
  %238 = load i32, i32* %17, align 4
  %239 = load i32, i32* %2, align 4
  %240 = icmp slt i32 %238, %239
  br i1 %240, label %241, label %739

; <label>:241:                                    ; preds = %237
  store i32 0, i32* %18, align 4
  br label %242

; <label>:242:                                    ; preds = %731, %241
  %243 = load i32, i32* %18, align 4
  %244 = load i32, i32* %3, align 4
  %245 = icmp slt i32 %243, %244
  br i1 %245, label %246, label %732

; <label>:246:                                    ; preds = %242
  %247 = load i32, i32* %17, align 4
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %248
  %250 = load i32, i32* %18, align 4
  %251 = sext i32 %250 to i64
  %252 = getelementptr inbounds [101 x i8], [101 x i8]* %249, i64 0, i64 %251
  %253 = load i8, i8* %252, align 1
  %254 = sext i8 %253 to i32
  %255 = icmp ne i32 %254, 46
  br i1 %255, label %256, label %674

; <label>:256:                                    ; preds = %246
  %257 = load i32, i32* @x.5
  %258 = load i32, i32* @y.6
  %259 = sub i32 0, 1
  %260 = add i32 %257, %259
  %261 = sub i32 %257, 1
  %262 = mul i32 %257, %260
  %263 = urem i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = icmp slt i32 %258, 10
  %266 = xor i1 %264, true
  %267 = xor i1 %265, true
  %268 = xor i1 true, true
  %269 = and i1 %266, true
  %270 = and i1 %264, %268
  %271 = and i1 %267, true
  %272 = and i1 %265, %268
  %273 = or i1 %269, %270
  %274 = or i1 %271, %272
  %275 = xor i1 %273, %274
  %276 = or i1 %266, %267
  %277 = xor i1 %276, true
  %278 = or i1 true, %268
  %279 = and i1 %277, %278
  %280 = or i1 %275, %279
  %281 = or i1 %264, %265
  br i1 %280, label %282, label %768

; <label>:282:                                    ; preds = %256, %768
  %283 = load i32, i32* %17, align 4
  %284 = load i32, i32* %3, align 4
  %285 = mul nsw i32 %283, %284
  %286 = load i32, i32* %18, align 4
  %287 = sub i32 0, %285
  %288 = sub i32 0, %286
  %289 = add i32 %287, %288
  %290 = sub i32 0, %289
  %291 = add nsw i32 %285, %286
  %292 = load i32, i32* %17, align 4
  %293 = load i32, i32* %3, align 4
  %294 = mul nsw i32 %292, %293
  %295 = load i32, i32* %18, align 4
  %296 = sub i32 0, %295
  %297 = sub i32 %294, %296
  %298 = add nsw i32 %294, %295
  %299 = load i32, i32* %2, align 4
  %300 = load i32, i32* %3, align 4
  %301 = mul nsw i32 %299, %300
  %302 = sub i32 %297, 232398164
  %303 = add i32 %302, %301
  %304 = add i32 %303, 232398164
  %305 = add nsw i32 %297, %301
  store i32 1, i32* %19, align 4
  %306 = load i32, i32* @x.5
  %307 = load i32, i32* @y.6
  %308 = sub i32 0, 1
  %309 = add i32 %306, %308
  %310 = sub i32 %306, 1
  %311 = mul i32 %306, %309
  %312 = urem i32 %311, 2
  %313 = icmp eq i32 %312, 0
  %314 = icmp slt i32 %307, 10
  %315 = and i1 %313, %314
  %316 = xor i1 %313, %314
  %317 = or i1 %315, %316
  %318 = or i1 %313, %314
  br i1 %317, label %319, label %768

; <label>:319:                                    ; preds = %282
  invoke void @_ZN7networkIiE17add_directed_edgeEiiRKi(%class.network* %16, i32 %290, i32 %304, i32* dereferenceable(4) %19)
          to label %320 unwind label %392

; <label>:320:                                    ; preds = %319
  %321 = load i32, i32* @x.5
  %322 = load i32, i32* @y.6
  %323 = sub i32 0, 1
  %324 = add i32 %321, %323
  %325 = sub i32 %321, 1
  %326 = mul i32 %321, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %322, 10
  %330 = and i1 %328, %329
  %331 = xor i1 %328, %329
  %332 = or i1 %330, %331
  %333 = or i1 %328, %329
  br i1 %332, label %334, label %929

; <label>:334:                                    ; preds = %320, %929
  store i32 0, i32* %22, align 4
  %335 = load i32, i32* @x.5
  %336 = load i32, i32* @y.6
  %337 = add i32 %335, 1030914332
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, 1030914332
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = and i1 %343, %344
  %346 = xor i1 %343, %344
  %347 = or i1 %345, %346
  %348 = or i1 %343, %344
  br i1 %347, label %349, label %929

; <label>:349:                                    ; preds = %334
  br label %350

; <label>:350:                                    ; preds = %439, %349
  %351 = load i32, i32* %22, align 4
  %352 = load i32, i32* %2, align 4
  %353 = icmp slt i32 %351, %352
  br i1 %353, label %354, label %445

; <label>:354:                                    ; preds = %350
  %355 = load i32, i32* %22, align 4
  %356 = load i32, i32* %17, align 4
  %357 = icmp ne i32 %355, %356
  br i1 %357, label %358, label %438

; <label>:358:                                    ; preds = %354
  %359 = load i32, i32* %22, align 4
  %360 = sext i32 %359 to i64
  %361 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %360
  %362 = load i32, i32* %18, align 4
  %363 = sext i32 %362 to i64
  %364 = getelementptr inbounds [101 x i8], [101 x i8]* %361, i64 0, i64 %363
  %365 = load i8, i8* %364, align 1
  %366 = sext i8 %365 to i32
  %367 = icmp ne i32 %366, 46
  br i1 %367, label %368, label %438

; <label>:368:                                    ; preds = %358
  %369 = load i32, i32* %17, align 4
  %370 = load i32, i32* %3, align 4
  %371 = mul nsw i32 %369, %370
  %372 = load i32, i32* %18, align 4
  %373 = add i32 %371, -784700108
  %374 = add i32 %373, %372
  %375 = sub i32 %374, -784700108
  %376 = add nsw i32 %371, %372
  %377 = load i32, i32* %2, align 4
  %378 = load i32, i32* %3, align 4
  %379 = mul nsw i32 %377, %378
  %380 = sub i32 %375, -1861936843
  %381 = add i32 %380, %379
  %382 = add i32 %381, -1861936843
  %383 = add nsw i32 %375, %379
  %384 = load i32, i32* %22, align 4
  %385 = load i32, i32* %3, align 4
  %386 = mul nsw i32 %384, %385
  %387 = load i32, i32* %18, align 4
  %388 = sub i32 0, %387
  %389 = sub i32 %386, %388
  %390 = add nsw i32 %386, %387
  invoke void @_ZN7networkIiE17add_directed_edgeEiiRKi(%class.network* %16, i32 %382, i32 %389, i32* dereferenceable(4) @_ZL3INF)
          to label %391 unwind label %392

; <label>:391:                                    ; preds = %368
  br label %438

; <label>:392:                                    ; preds = %747, %739, %640, %368, %319
  %393 = load i32, i32* @x.5
  %394 = load i32, i32* @y.6
  %395 = sub i32 %393, 1261910605
  %396 = sub i32 %395, 1
  %397 = add i32 %396, 1261910605
  %398 = sub i32 %393, 1
  %399 = mul i32 %393, %397
  %400 = urem i32 %399, 2
  %401 = icmp eq i32 %400, 0
  %402 = icmp slt i32 %394, 10
  %403 = and i1 %401, %402
  %404 = xor i1 %401, %402
  %405 = or i1 %403, %404
  %406 = or i1 %401, %402
  br i1 %405, label %407, label %930

; <label>:407:                                    ; preds = %392, %930
  %408 = landingpad { i8*, i32 }
          cleanup
  %409 = extractvalue { i8*, i32 } %408, 0
  store i8* %409, i8** %20, align 8
  %410 = extractvalue { i8*, i32 } %408, 1
  store i32 %410, i32* %21, align 4
  call void @_ZN7networkIiED2Ev(%class.network* %16) #3
  %411 = load i32, i32* @x.5
  %412 = load i32, i32* @y.6
  %413 = add i32 %411, -79066461
  %414 = sub i32 %413, 1
  %415 = sub i32 %414, -79066461
  %416 = sub i32 %411, 1
  %417 = mul i32 %411, %415
  %418 = urem i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = icmp slt i32 %412, 10
  %421 = xor i1 %419, true
  %422 = xor i1 %420, true
  %423 = xor i1 false, true
  %424 = and i1 %421, false
  %425 = and i1 %419, %423
  %426 = and i1 %422, false
  %427 = and i1 %420, %423
  %428 = or i1 %424, %425
  %429 = or i1 %426, %427
  %430 = xor i1 %428, %429
  %431 = or i1 %421, %422
  %432 = xor i1 %431, true
  %433 = or i1 false, %423
  %434 = and i1 %432, %433
  %435 = or i1 %430, %434
  %436 = or i1 %419, %420
  br i1 %435, label %437, label %930

; <label>:437:                                    ; preds = %407
  br label %752

; <label>:438:                                    ; preds = %391, %358, %354
  br label %439

; <label>:439:                                    ; preds = %438
  %440 = load i32, i32* %22, align 4
  %441 = sub i32 %440, -1218929216
  %442 = add i32 %441, 1
  %443 = add i32 %442, -1218929216
  %444 = add nsw i32 %440, 1
  store i32 %443, i32* %22, align 4
  br label %350

; <label>:445:                                    ; preds = %350
  %446 = load i32, i32* @x.5
  %447 = load i32, i32* @y.6
  %448 = sub i32 0, 1
  %449 = add i32 %446, %448
  %450 = sub i32 %446, 1
  %451 = mul i32 %446, %449
  %452 = urem i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = icmp slt i32 %447, 10
  %455 = xor i1 %453, true
  %456 = xor i1 %454, true
  %457 = xor i1 true, true
  %458 = and i1 %455, true
  %459 = and i1 %453, %457
  %460 = and i1 %456, true
  %461 = and i1 %454, %457
  %462 = or i1 %458, %459
  %463 = or i1 %460, %461
  %464 = xor i1 %462, %463
  %465 = or i1 %455, %456
  %466 = xor i1 %465, true
  %467 = or i1 true, %457
  %468 = and i1 %466, %467
  %469 = or i1 %464, %468
  %470 = or i1 %453, %454
  br i1 %469, label %471, label %934

; <label>:471:                                    ; preds = %445, %934
  store i32 0, i32* %23, align 4
  %472 = load i32, i32* @x.5
  %473 = load i32, i32* @y.6
  %474 = add i32 %472, 126299521
  %475 = sub i32 %474, 1
  %476 = sub i32 %475, 126299521
  %477 = sub i32 %472, 1
  %478 = mul i32 %472, %476
  %479 = urem i32 %478, 2
  %480 = icmp eq i32 %479, 0
  %481 = icmp slt i32 %473, 10
  %482 = xor i1 %480, true
  %483 = xor i1 %481, true
  %484 = xor i1 true, true
  %485 = and i1 %482, true
  %486 = and i1 %480, %484
  %487 = and i1 %483, true
  %488 = and i1 %481, %484
  %489 = or i1 %485, %486
  %490 = or i1 %487, %488
  %491 = xor i1 %489, %490
  %492 = or i1 %482, %483
  %493 = xor i1 %492, true
  %494 = or i1 true, %484
  %495 = and i1 %493, %494
  %496 = or i1 %491, %495
  %497 = or i1 %480, %481
  br i1 %496, label %498, label %934

; <label>:498:                                    ; preds = %471
  br label %499

; <label>:499:                                    ; preds = %667, %498
  %500 = load i32, i32* @x.5
  %501 = load i32, i32* @y.6
  %502 = sub i32 %500, 349321676
  %503 = sub i32 %502, 1
  %504 = add i32 %503, 349321676
  %505 = sub i32 %500, 1
  %506 = mul i32 %500, %504
  %507 = urem i32 %506, 2
  %508 = icmp eq i32 %507, 0
  %509 = icmp slt i32 %501, 10
  %510 = xor i1 %508, true
  %511 = xor i1 %509, true
  %512 = xor i1 true, true
  %513 = and i1 %510, true
  %514 = and i1 %508, %512
  %515 = and i1 %511, true
  %516 = and i1 %509, %512
  %517 = or i1 %513, %514
  %518 = or i1 %515, %516
  %519 = xor i1 %517, %518
  %520 = or i1 %510, %511
  %521 = xor i1 %520, true
  %522 = or i1 true, %512
  %523 = and i1 %521, %522
  %524 = or i1 %519, %523
  %525 = or i1 %508, %509
  br i1 %524, label %526, label %935

; <label>:526:                                    ; preds = %499, %935
  %527 = load i32, i32* %23, align 4
  %528 = load i32, i32* %3, align 4
  %529 = icmp slt i32 %527, %528
  %530 = load i32, i32* @x.5
  %531 = load i32, i32* @y.6
  %532 = sub i32 0, 1
  %533 = add i32 %530, %532
  %534 = sub i32 %530, 1
  %535 = mul i32 %530, %533
  %536 = urem i32 %535, 2
  %537 = icmp eq i32 %536, 0
  %538 = icmp slt i32 %531, 10
  %539 = xor i1 %537, true
  %540 = xor i1 %538, true
  %541 = xor i1 true, true
  %542 = and i1 %539, true
  %543 = and i1 %537, %541
  %544 = and i1 %540, true
  %545 = and i1 %538, %541
  %546 = or i1 %542, %543
  %547 = or i1 %544, %545
  %548 = xor i1 %546, %547
  %549 = or i1 %539, %540
  %550 = xor i1 %549, true
  %551 = or i1 true, %541
  %552 = and i1 %550, %551
  %553 = or i1 %548, %552
  %554 = or i1 %537, %538
  br i1 %553, label %555, label %935

; <label>:555:                                    ; preds = %526
  br i1 %529, label %556, label %673

; <label>:556:                                    ; preds = %555
  %557 = load i32, i32* @x.5
  %558 = load i32, i32* @y.6
  %559 = add i32 %557, -2136056777
  %560 = sub i32 %559, 1
  %561 = sub i32 %560, -2136056777
  %562 = sub i32 %557, 1
  %563 = mul i32 %557, %561
  %564 = urem i32 %563, 2
  %565 = icmp eq i32 %564, 0
  %566 = icmp slt i32 %558, 10
  %567 = and i1 %565, %566
  %568 = xor i1 %565, %566
  %569 = or i1 %567, %568
  %570 = or i1 %565, %566
  br i1 %569, label %571, label %939

; <label>:571:                                    ; preds = %556, %939
  %572 = load i32, i32* %23, align 4
  %573 = load i32, i32* %18, align 4
  %574 = icmp ne i32 %572, %573
  %575 = load i32, i32* @x.5
  %576 = load i32, i32* @y.6
  %577 = sub i32 0, 1
  %578 = add i32 %575, %577
  %579 = sub i32 %575, 1
  %580 = mul i32 %575, %578
  %581 = urem i32 %580, 2
  %582 = icmp eq i32 %581, 0
  %583 = icmp slt i32 %576, 10
  %584 = and i1 %582, %583
  %585 = xor i1 %582, %583
  %586 = or i1 %584, %585
  %587 = or i1 %582, %583
  br i1 %586, label %588, label %939

; <label>:588:                                    ; preds = %571
  br i1 %574, label %589, label %666

; <label>:589:                                    ; preds = %588
  %590 = load i32, i32* @x.5
  %591 = load i32, i32* @y.6
  %592 = sub i32 %590, 925305991
  %593 = sub i32 %592, 1
  %594 = add i32 %593, 925305991
  %595 = sub i32 %590, 1
  %596 = mul i32 %590, %594
  %597 = urem i32 %596, 2
  %598 = icmp eq i32 %597, 0
  %599 = icmp slt i32 %591, 10
  %600 = and i1 %598, %599
  %601 = xor i1 %598, %599
  %602 = or i1 %600, %601
  %603 = or i1 %598, %599
  br i1 %602, label %604, label %943

; <label>:604:                                    ; preds = %589, %943
  %605 = load i32, i32* %17, align 4
  %606 = sext i32 %605 to i64
  %607 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %606
  %608 = load i32, i32* %23, align 4
  %609 = sext i32 %608 to i64
  %610 = getelementptr inbounds [101 x i8], [101 x i8]* %607, i64 0, i64 %609
  %611 = load i8, i8* %610, align 1
  %612 = sext i8 %611 to i32
  %613 = icmp ne i32 %612, 46
  %614 = load i32, i32* @x.5
  %615 = load i32, i32* @y.6
  %616 = sub i32 0, 1
  %617 = add i32 %614, %616
  %618 = sub i32 %614, 1
  %619 = mul i32 %614, %617
  %620 = urem i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = icmp slt i32 %615, 10
  %623 = xor i1 %621, true
  %624 = xor i1 %622, true
  %625 = xor i1 false, true
  %626 = and i1 %623, false
  %627 = and i1 %621, %625
  %628 = and i1 %624, false
  %629 = and i1 %622, %625
  %630 = or i1 %626, %627
  %631 = or i1 %628, %629
  %632 = xor i1 %630, %631
  %633 = or i1 %623, %624
  %634 = xor i1 %633, true
  %635 = or i1 false, %625
  %636 = and i1 %634, %635
  %637 = or i1 %632, %636
  %638 = or i1 %621, %622
  br i1 %637, label %639, label %943

; <label>:639:                                    ; preds = %604
  br i1 %613, label %640, label %666

; <label>:640:                                    ; preds = %639
  %641 = load i32, i32* %17, align 4
  %642 = load i32, i32* %3, align 4
  %643 = mul nsw i32 %641, %642
  %644 = load i32, i32* %18, align 4
  %645 = sub i32 %643, -57077880
  %646 = add i32 %645, %644
  %647 = add i32 %646, -57077880
  %648 = add nsw i32 %643, %644
  %649 = load i32, i32* %2, align 4
  %650 = load i32, i32* %3, align 4
  %651 = mul nsw i32 %649, %650
  %652 = sub i32 0, %647
  %653 = sub i32 0, %651
  %654 = add i32 %652, %653
  %655 = sub i32 0, %654
  %656 = add nsw i32 %647, %651
  %657 = load i32, i32* %17, align 4
  %658 = load i32, i32* %3, align 4
  %659 = mul nsw i32 %657, %658
  %660 = load i32, i32* %23, align 4
  %661 = add i32 %659, 1980691928
  %662 = add i32 %661, %660
  %663 = sub i32 %662, 1980691928
  %664 = add nsw i32 %659, %660
  invoke void @_ZN7networkIiE17add_directed_edgeEiiRKi(%class.network* %16, i32 %655, i32 %663, i32* dereferenceable(4) @_ZL3INF)
          to label %665 unwind label %392

; <label>:665:                                    ; preds = %640
  br label %666

; <label>:666:                                    ; preds = %665, %639, %588
  br label %667

; <label>:667:                                    ; preds = %666
  %668 = load i32, i32* %23, align 4
  %669 = sub i32 %668, -929566972
  %670 = add i32 %669, 1
  %671 = add i32 %670, -929566972
  %672 = add nsw i32 %668, 1
  store i32 %671, i32* %23, align 4
  br label %499

; <label>:673:                                    ; preds = %555
  br label %674

; <label>:674:                                    ; preds = %673, %246
  br label %675

; <label>:675:                                    ; preds = %674
  %676 = load i32, i32* @x.5
  %677 = load i32, i32* @y.6
  %678 = sub i32 0, 1
  %679 = add i32 %676, %678
  %680 = sub i32 %676, 1
  %681 = mul i32 %676, %679
  %682 = urem i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = icmp slt i32 %677, 10
  %685 = xor i1 %683, true
  %686 = xor i1 %684, true
  %687 = xor i1 false, true
  %688 = and i1 %685, false
  %689 = and i1 %683, %687
  %690 = and i1 %686, false
  %691 = and i1 %684, %687
  %692 = or i1 %688, %689
  %693 = or i1 %690, %691
  %694 = xor i1 %692, %693
  %695 = or i1 %685, %686
  %696 = xor i1 %695, true
  %697 = or i1 false, %687
  %698 = and i1 %696, %697
  %699 = or i1 %694, %698
  %700 = or i1 %683, %684
  br i1 %699, label %701, label %953

; <label>:701:                                    ; preds = %675, %953
  %702 = load i32, i32* %18, align 4
  %703 = sub i32 0, 1
  %704 = sub i32 %702, %703
  %705 = add nsw i32 %702, 1
  store i32 %704, i32* %18, align 4
  %706 = load i32, i32* @x.5
  %707 = load i32, i32* @y.6
  %708 = sub i32 0, 1
  %709 = add i32 %706, %708
  %710 = sub i32 %706, 1
  %711 = mul i32 %706, %709
  %712 = urem i32 %711, 2
  %713 = icmp eq i32 %712, 0
  %714 = icmp slt i32 %707, 10
  %715 = xor i1 %713, true
  %716 = xor i1 %714, true
  %717 = xor i1 false, true
  %718 = and i1 %715, false
  %719 = and i1 %713, %717
  %720 = and i1 %716, false
  %721 = and i1 %714, %717
  %722 = or i1 %718, %719
  %723 = or i1 %720, %721
  %724 = xor i1 %722, %723
  %725 = or i1 %715, %716
  %726 = xor i1 %725, true
  %727 = or i1 false, %717
  %728 = and i1 %726, %727
  %729 = or i1 %724, %728
  %730 = or i1 %713, %714
  br i1 %729, label %731, label %953

; <label>:731:                                    ; preds = %701
  br label %242

; <label>:732:                                    ; preds = %242
  br label %733

; <label>:733:                                    ; preds = %732
  %734 = load i32, i32* %17, align 4
  %735 = sub i32 %734, -1418257427
  %736 = add i32 %735, 1
  %737 = add i32 %736, -1418257427
  %738 = add nsw i32 %734, 1
  store i32 %737, i32* %17, align 4
  br label %237

; <label>:739:                                    ; preds = %237
  %740 = invoke i32 @_ZN7networkIiE12maximum_flowEv(%class.network* %16)
          to label %741 unwind label %392

; <label>:741:                                    ; preds = %739
  store i32 %740, i32* %24, align 4
  %742 = load i32, i32* %24, align 4
  %743 = icmp slt i32 %742, 536870912
  br i1 %743, label %744, label %746

; <label>:744:                                    ; preds = %741
  %745 = load i32, i32* %24, align 4
  br label %747

; <label>:746:                                    ; preds = %741
  br label %747

; <label>:747:                                    ; preds = %746, %744
  %748 = phi i32 [ %745, %744 ], [ -1, %746 ]
  %749 = invoke i32 (i8*, ...) @printf(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i32 0, i32 0), i32 %748)
          to label %750 unwind label %392

; <label>:750:                                    ; preds = %747
  store i32 0, i32* %1, align 4
  call void @_ZN7networkIiED2Ev(%class.network* %16) #3
  %751 = load i32, i32* %1, align 4
  ret i32 %751

; <label>:752:                                    ; preds = %437
  %753 = load i8*, i8** %20, align 8
  %754 = load i32, i32* %21, align 4
  %755 = insertvalue { i8*, i32 } undef, i8* %753, 0
  %756 = insertvalue { i8*, i32 } %755, i32 %754, 1
  resume { i8*, i32 } %756

; <label>:757:                                    ; preds = %78, %51
  %758 = load i32, i32* %10, align 4
  %759 = sext i32 %758 to i64
  %760 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %759
  %761 = load i32, i32* %11, align 4
  %762 = sext i32 %761 to i64
  %763 = getelementptr inbounds [101 x i8], [101 x i8]* %760, i64 0, i64 %762
  %764 = load i8, i8* %763, align 1
  %765 = sext i8 %764 to i32
  %766 = icmp eq i32 %765, 83
  br label %78

; <label>:767:                                    ; preds = %183, %157
  br label %183

; <label>:768:                                    ; preds = %282, %256
  %769 = load i32, i32* %17, align 4
  %770 = load i32, i32* %3, align 4
  %771 = add i32 %769, 747540990
  %772 = sub i32 %771, %770
  %773 = sub i32 %772, 747540990
  %774 = sub i32 %769, %770
  %775 = mul i32 %773, %770
  %776 = add i32 0, -1327182700
  %777 = sub i32 %776, %769
  %778 = sub i32 %777, -1327182700
  %779 = sub i32 0, %769
  %780 = sub i32 0, %778
  %781 = sub i32 0, %770
  %782 = add i32 %780, %781
  %783 = sub i32 0, %782
  %784 = add i32 %778, %770
  %785 = add i32 0, 1261978924
  %786 = sub i32 %785, %769
  %787 = sub i32 %786, 1261978924
  %788 = sub i32 0, %769
  %789 = add i32 %787, 1609603337
  %790 = add i32 %789, %770
  %791 = sub i32 %790, 1609603337
  %792 = add i32 %787, %770
  %793 = shl i32 %769, %770
  %794 = sub i32 0, -668842121
  %795 = sub i32 %794, %769
  %796 = add i32 %795, -668842121
  %797 = sub i32 0, %769
  %798 = add i32 %796, 1172325393
  %799 = add i32 %798, %770
  %800 = sub i32 %799, 1172325393
  %801 = add i32 %796, %770
  %802 = mul nsw i32 %769, %770
  %803 = load i32, i32* %18, align 4
  %804 = sub i32 0, -1595530499
  %805 = sub i32 %804, %802
  %806 = add i32 %805, -1595530499
  %807 = sub i32 0, %802
  %808 = sub i32 0, %806
  %809 = sub i32 0, %803
  %810 = add i32 %808, %809
  %811 = sub i32 0, %810
  %812 = add i32 %806, %803
  %813 = sub i32 0, %802
  %814 = add i32 0, %813
  %815 = sub i32 0, %802
  %816 = sub i32 0, %803
  %817 = sub i32 %814, %816
  %818 = add i32 %814, %803
  %819 = shl i32 %802, %803
  %820 = shl i32 %802, %803
  %821 = sub i32 %802, 1717348246
  %822 = add i32 %821, %803
  %823 = add i32 %822, 1717348246
  %824 = add nsw i32 %802, %803
  %825 = load i32, i32* %17, align 4
  %826 = load i32, i32* %3, align 4
  %827 = sub i32 0, -2008235926
  %828 = sub i32 %827, %825
  %829 = add i32 %828, -2008235926
  %830 = sub i32 0, %825
  %831 = sub i32 0, %826
  %832 = sub i32 %829, %831
  %833 = add i32 %829, %826
  %834 = shl i32 %825, %826
  %835 = sub i32 %825, -447069844
  %836 = sub i32 %835, %826
  %837 = add i32 %836, -447069844
  %838 = sub i32 %825, %826
  %839 = mul i32 %837, %826
  %840 = add i32 0, -466931109
  %841 = sub i32 %840, %825
  %842 = sub i32 %841, -466931109
  %843 = sub i32 0, %825
  %844 = sub i32 %842, -1626938536
  %845 = add i32 %844, %826
  %846 = add i32 %845, -1626938536
  %847 = add i32 %842, %826
  %848 = shl i32 %825, %826
  %849 = sub i32 0, %826
  %850 = add i32 %825, %849
  %851 = sub i32 %825, %826
  %852 = mul i32 %850, %826
  %853 = sub i32 0, %825
  %854 = add i32 0, %853
  %855 = sub i32 0, %825
  %856 = sub i32 0, %854
  %857 = sub i32 0, %826
  %858 = add i32 %856, %857
  %859 = sub i32 0, %858
  %860 = add i32 %854, %826
  %861 = mul nsw i32 %825, %826
  %862 = load i32, i32* %18, align 4
  %863 = sub i32 0, %862
  %864 = add i32 %861, %863
  %865 = sub i32 %861, %862
  %866 = mul i32 %864, %862
  %867 = sub i32 0, %861
  %868 = add i32 0, %867
  %869 = sub i32 0, %861
  %870 = sub i32 0, %862
  %871 = sub i32 %868, %870
  %872 = add i32 %868, %862
  %873 = sub i32 0, 785786945
  %874 = sub i32 %873, %861
  %875 = add i32 %874, 785786945
  %876 = sub i32 0, %861
  %877 = sub i32 0, %862
  %878 = sub i32 %875, %877
  %879 = add i32 %875, %862
  %880 = add i32 %861, 651444795
  %881 = sub i32 %880, %862
  %882 = sub i32 %881, 651444795
  %883 = sub i32 %861, %862
  %884 = mul i32 %882, %862
  %885 = add i32 %861, 862210327
  %886 = add i32 %885, %862
  %887 = sub i32 %886, 862210327
  %888 = add nsw i32 %861, %862
  %889 = load i32, i32* %2, align 4
  %890 = load i32, i32* %3, align 4
  %891 = sub i32 0, %890
  %892 = add i32 %889, %891
  %893 = sub i32 %889, %890
  %894 = mul i32 %892, %890
  %895 = mul nsw i32 %889, %890
  %896 = sub i32 0, %887
  %897 = add i32 0, %896
  %898 = sub i32 0, %887
  %899 = sub i32 0, %897
  %900 = sub i32 0, %895
  %901 = add i32 %899, %900
  %902 = sub i32 0, %901
  %903 = add i32 %897, %895
  %904 = sub i32 0, %887
  %905 = add i32 0, %904
  %906 = sub i32 0, %887
  %907 = sub i32 %905, 1175930439
  %908 = add i32 %907, %895
  %909 = add i32 %908, 1175930439
  %910 = add i32 %905, %895
  %911 = sub i32 0, %895
  %912 = add i32 %887, %911
  %913 = sub i32 %887, %895
  %914 = mul i32 %912, %895
  %915 = sub i32 0, -483583392
  %916 = sub i32 %915, %887
  %917 = add i32 %916, -483583392
  %918 = sub i32 0, %887
  %919 = sub i32 0, %917
  %920 = sub i32 0, %895
  %921 = add i32 %919, %920
  %922 = sub i32 0, %921
  %923 = add i32 %917, %895
  %924 = shl i32 %887, %895
  %925 = add i32 %887, 1444206164
  %926 = add i32 %925, %895
  %927 = sub i32 %926, 1444206164
  %928 = add nsw i32 %887, %895
  store i32 1, i32* %19, align 4
  br label %282

; <label>:929:                                    ; preds = %334, %320
  store i32 0, i32* %22, align 4
  br label %334

; <label>:930:                                    ; preds = %407, %392
  %931 = landingpad { i8*, i32 }
          cleanup
  %932 = extractvalue { i8*, i32 } %931, 0
  store i8* %932, i8** %20, align 8
  %933 = extractvalue { i8*, i32 } %931, 1
  store i32 %933, i32* %21, align 4
  call void @_ZN7networkIiED2Ev(%class.network* %16) #3
  br label %407

; <label>:934:                                    ; preds = %471, %445
  store i32 0, i32* %23, align 4
  br label %471

; <label>:935:                                    ; preds = %526, %499
  %936 = load i32, i32* %23, align 4
  %937 = load i32, i32* %3, align 4
  %938 = icmp slt i32 %936, %937
  br label %526

; <label>:939:                                    ; preds = %571, %556
  %940 = load i32, i32* %23, align 4
  %941 = load i32, i32* %18, align 4
  %942 = icmp ne i32 %940, %941
  br label %571

; <label>:943:                                    ; preds = %604, %589
  %944 = load i32, i32* %17, align 4
  %945 = sext i32 %944 to i64
  %946 = getelementptr inbounds [100 x [101 x i8]], [100 x [101 x i8]]* %4, i64 0, i64 %945
  %947 = load i32, i32* %23, align 4
  %948 = sext i32 %947 to i64
  %949 = getelementptr inbounds [101 x i8], [101 x i8]* %946, i64 0, i64 %948
  %950 = load i8, i8* %949, align 1
  %951 = sext i8 %950 to i32
  %952 = icmp ne i32 %951, 46
  br label %604

; <label>:953:                                    ; preds = %701, %675
  %954 = load i32, i32* %18, align 4
  %955 = shl i32 %954, 1
  %956 = add i32 %954, 1397063984
  %957 = sub i32 %956, 1
  %958 = sub i32 %957, 1397063984
  %959 = sub i32 %954, 1
  %960 = mul i32 %958, 1
  %961 = sub i32 0, -1257530403
  %962 = sub i32 %961, %954
  %963 = add i32 %962, -1257530403
  %964 = sub i32 0, %954
  %965 = sub i32 %963, -746810724
  %966 = add i32 %965, 1
  %967 = add i32 %966, -746810724
  %968 = add i32 %963, 1
  %969 = shl i32 %954, 1
  %970 = shl i32 %954, 1
  %971 = add i32 %954, -843579600
  %972 = sub i32 %971, 1
  %973 = sub i32 %972, -843579600
  %974 = sub i32 %954, 1
  %975 = mul i32 %973, 1
  %976 = shl i32 %954, 1
  %977 = shl i32 %954, 1
  %978 = sub i32 0, 1
  %979 = sub i32 %954, %978
  %980 = add nsw i32 %954, 1
  store i32 %979, i32* %18, align 4
  br label %701
}

declare i32 @scanf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr { i32*, i32* } @_ZSt3tieIJiiEESt5tupleIJDpRT_EES3_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.7
  %4 = load i32, i32* @y.8
  %5 = add i32 %3, -1092813246
  %6 = sub i32 %5, 1
  %7 = sub i32 %6, -1092813246
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 true, true
  %16 = and i1 %13, true
  %17 = and i1 %11, %15
  %18 = and i1 %14, true
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 true, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %99

; <label>:29:                                     ; preds = %2, %99
  %30 = alloca %"class.std::tuple", align 8
  %31 = alloca i32*, align 8
  %32 = alloca i32*, align 8
  store i32* %0, i32** %31, align 8
  store i32* %1, i32** %32, align 8
  %33 = load i32*, i32** %31, align 8
  %34 = load i32*, i32** %32, align 8
  %35 = load i32, i32* @x.7
  %36 = load i32, i32* @y.8
  %37 = sub i32 %35, -1452059568
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1452059568
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 false, true
  %48 = and i1 %45, false
  %49 = and i1 %43, %47
  %50 = and i1 %46, false
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 false, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  br i1 %59, label %61, label %99

; <label>:61:                                     ; preds = %29
  invoke void @_ZNSt5tupleIJRiS0_EEC2ES0_S0_(%"class.std::tuple"* %30, i32* dereferenceable(4) %33, i32* dereferenceable(4) %34)
          to label %62 unwind label %96

; <label>:62:                                     ; preds = %61
  %63 = load i32, i32* @x.7
  %64 = load i32, i32* @y.8
  %65 = add i32 %63, 1944370723
  %66 = sub i32 %65, 1
  %67 = sub i32 %66, 1944370723
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = and i1 %71, %72
  %74 = xor i1 %71, %72
  %75 = or i1 %73, %74
  %76 = or i1 %71, %72
  br i1 %75, label %77, label %105

; <label>:77:                                     ; preds = %62, %105
  %78 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %30, i32 0, i32 0
  %79 = bitcast %"struct.std::_Tuple_impl"* %78 to { i32*, i32* }*
  %80 = load { i32*, i32* }, { i32*, i32* }* %79, align 8
  %81 = load i32, i32* @x.7
  %82 = load i32, i32* @y.8
  %83 = sub i32 %81, -2094625251
  %84 = sub i32 %83, 1
  %85 = add i32 %84, -2094625251
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %105

; <label>:95:                                     ; preds = %77
  ret { i32*, i32* } %80

; <label>:96:                                     ; preds = %61
  %97 = landingpad { i8*, i32 }
          catch i8* null
  %98 = extractvalue { i8*, i32 } %97, 0
  call void @__clang_call_terminate(i8* %98) #8
  unreachable

; <label>:99:                                     ; preds = %29, %2
  %100 = alloca %"class.std::tuple", align 8
  %101 = alloca i32*, align 8
  %102 = alloca i32*, align 8
  store i32* %0, i32** %101, align 8
  store i32* %1, i32** %102, align 8
  %103 = load i32*, i32** %101, align 8
  %104 = load i32*, i32** %102, align 8
  br label %29

; <label>:105:                                    ; preds = %77, %62
  %106 = getelementptr inbounds %"class.std::tuple", %"class.std::tuple"* %30, i32 0, i32 0
  %107 = bitcast %"struct.std::_Tuple_impl"* %106 to { i32*, i32* }*
  %108 = load { i32*, i32* }, { i32*, i32* }* %107, align 8
  br label %77
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple"* @_ZNSt5tupleIJRiS0_EEaSEOS1_(%"class.std::tuple"*, %"class.std::tuple"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"class.std::tuple"*, align 8
  %4 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %3, align 8
  store %"class.std::tuple"* %1, %"class.std::tuple"** %4, align 8
  %5 = load %"class.std::tuple"*, %"class.std::tuple"** %3, align 8
  %6 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %7 = call dereferenceable(16) %"class.std::tuple"* @_ZSt4moveIRSt5tupleIJRiS1_EEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple"* dereferenceable(16) %6) #3
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  %9 = bitcast %"class.std::tuple"* %5 to %"struct.std::_Tuple_impl"*
  %10 = call dereferenceable(16) %"struct.std::_Tuple_impl"* @_ZNSt11_Tuple_implILm0EJRiS0_EEaSEOS1_(%"struct.std::_Tuple_impl"* %9, %"struct.std::_Tuple_impl"* dereferenceable(16) %8) #3
  ret %"class.std::tuple"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7networkIiEC2Eiii(%class.network*, i32, i32, i32) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = load i32, i32* @x.11
  %6 = load i32, i32* @y.12
  %7 = sub i32 %5, 193905638
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 193905638
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %6, 10
  %15 = and i1 %13, %14
  %16 = xor i1 %13, %14
  %17 = or i1 %15, %16
  %18 = or i1 %13, %14
  br i1 %17, label %19, label %103

; <label>:19:                                     ; preds = %4, %103
  %20 = alloca %class.network*, align 8
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i8*
  %25 = alloca i32
  store %class.network* %0, %class.network** %20, align 8
  store i32 %1, i32* %21, align 4
  store i32 %2, i32* %22, align 4
  store i32 %3, i32* %23, align 4
  %26 = load %class.network*, %class.network** %20, align 8
  %27 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 0
  %28 = load i32, i32* %22, align 4
  store i32 %28, i32* %27, align 8
  %29 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 1
  %30 = load i32, i32* %23, align 4
  store i32 %30, i32* %29, align 4
  %31 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"* %31) #3
  %32 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.3"* %32) #3
  %33 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.3"* %33) #3
  %34 = getelementptr inbounds %class.network, %class.network* %26, i32 0, i32 2
  %35 = load i32, i32* %21, align 4
  %36 = sext i32 %35 to i64
  %37 = load i32, i32* @x.11
  %38 = load i32, i32* @y.12
  %39 = sub i32 %37, 625734589
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 625734589
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %103

; <label>:51:                                     ; preds = %19
  invoke void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector"* %34, i64 %36)
          to label %52 unwind label %53

; <label>:52:                                     ; preds = %51
  ret void

; <label>:53:                                     ; preds = %51
  %54 = load i32, i32* @x.11
  %55 = load i32, i32* @y.12
  %56 = add i32 %54, 881936933
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, 881936933
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %121

; <label>:80:                                     ; preds = %53, %121
  %81 = landingpad { i8*, i32 }
          cleanup
  %82 = extractvalue { i8*, i32 } %81, 0
  store i8* %82, i8** %24, align 8
  %83 = extractvalue { i8*, i32 } %81, 1
  store i32 %83, i32* %25, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %33) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %32) #3
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %31) #3
  %84 = load i32, i32* @x.11
  %85 = load i32, i32* @y.12
  %86 = sub i32 0, 1
  %87 = add i32 %84, %86
  %88 = sub i32 %84, 1
  %89 = mul i32 %84, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %85, 10
  %93 = and i1 %91, %92
  %94 = xor i1 %91, %92
  %95 = or i1 %93, %94
  %96 = or i1 %91, %92
  br i1 %95, label %97, label %121

; <label>:97:                                     ; preds = %80
  br label %98

; <label>:98:                                     ; preds = %97
  %99 = load i8*, i8** %24, align 8
  %100 = load i32, i32* %25, align 4
  %101 = insertvalue { i8*, i32 } undef, i8* %99, 0
  %102 = insertvalue { i8*, i32 } %101, i32 %100, 1
  resume { i8*, i32 } %102

; <label>:103:                                    ; preds = %19, %4
  %104 = alloca %class.network*, align 8
  %105 = alloca i32, align 4
  %106 = alloca i32, align 4
  %107 = alloca i32, align 4
  %108 = alloca i8*
  %109 = alloca i32
  store %class.network* %0, %class.network** %104, align 8
  store i32 %1, i32* %105, align 4
  store i32 %2, i32* %106, align 4
  store i32 %3, i32* %107, align 4
  %110 = load %class.network*, %class.network** %104, align 8
  %111 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 0
  %112 = load i32, i32* %106, align 4
  store i32 %112, i32* %111, align 8
  %113 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 1
  %114 = load i32, i32* %107, align 4
  store i32 %114, i32* %113, align 4
  %115 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"* %115) #3
  %116 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.3"* %116) #3
  %117 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.3"* %117) #3
  %118 = getelementptr inbounds %class.network, %class.network* %110, i32 0, i32 2
  %119 = load i32, i32* %105, align 4
  %120 = sext i32 %119 to i64
  br label %19

; <label>:121:                                    ; preds = %80, %53
  %122 = landingpad { i8*, i32 }
          cleanup
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %24, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %25, align 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %33) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %32) #3
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %31) #3
  br label %80
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN7networkIiE17add_directed_edgeEiiRKi(%class.network*, i32, i32, i32* dereferenceable(4)) #0 comdat align 2 {
  %5 = alloca %class.network*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32*, align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i64, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  store %class.network* %0, %class.network** %5, align 8
  store i32 %1, i32* %6, align 4
  store i32 %2, i32* %7, align 4
  store i32* %3, i32** %8, align 8
  %14 = load %class.network*, %class.network** %5, align 8
  %15 = getelementptr inbounds %class.network, %class.network* %14, i32 0, i32 2
  %16 = load i32, i32* %6, align 4
  %17 = sext i32 %16 to i64
  %18 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %15, i64 %17) #3
  %19 = getelementptr inbounds %class.network, %class.network* %14, i32 0, i32 2
  %20 = load i32, i32* %7, align 4
  %21 = sext i32 %20 to i64
  %22 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %19, i64 %21) #3
  %23 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %22) #3
  store i64 %23, i64* %9, align 8
  %24 = load i32*, i32** %8, align 8
  store i32 0, i32* %10, align 4
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimRKiiEEEvDpOT_(%"class.std::vector.2"* %18, i32* dereferenceable(4) %7, i64* dereferenceable(8) %9, i32* dereferenceable(4) %24, i32* dereferenceable(4) %10)
  %25 = getelementptr inbounds %class.network, %class.network* %14, i32 0, i32 2
  %26 = load i32, i32* %7, align 4
  %27 = sext i32 %26 to i64
  %28 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %25, i64 %27) #3
  %29 = getelementptr inbounds %class.network, %class.network* %14, i32 0, i32 2
  %30 = load i32, i32* %6, align 4
  %31 = sext i32 %30 to i64
  %32 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %29, i64 %31) #3
  %33 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %32) #3
  %34 = sub i64 %33, -2345752148583897240
  %35 = sub i64 %34, 1
  %36 = add i64 %35, -2345752148583897240
  %37 = sub i64 %33, 1
  store i64 %36, i64* %11, align 8
  store i32 0, i32* %12, align 4
  store i32 0, i32* %13, align 4
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimiiEEEvDpOT_(%"class.std::vector.2"* %28, i32* dereferenceable(4) %6, i64* dereferenceable(8) %11, i32* dereferenceable(4) %12, i32* dereferenceable(4) %13)
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN7networkIiE12maximum_flowEv(%class.network*) #0 comdat align 2 {
  %2 = alloca i32
  %3 = alloca i1
  %4 = alloca %class.network*
  %5 = alloca %class.network*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  store %class.network* %0, %class.network** %5, align 8
  %11 = load %class.network*, %class.network** %5, align 8
  store %class.network* %11, %class.network** %4
  %12 = load volatile %class.network*, %class.network** %4
  %13 = getelementptr inbounds %class.network, %class.network* %12, i32 0, i32 2
  %14 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %13) #3
  %15 = trunc i64 %14 to i32
  store i32 %15, i32* %6, align 4
  %16 = load volatile %class.network*, %class.network** %4
  %17 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %18 = load i32, i32* %6, align 4
  %19 = sext i32 %18 to i64
  call void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.3"* %17, i64 %19)
  store i32 0, i32* %7, align 4
  %20 = alloca i32
  store i32 723464195, i32* %20
  br label %21

; <label>:21:                                     ; preds = %1, %136
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 723464195, label %24
    i32 90882053, label %28
    i32 -452888121, label %33
    i32 -1450299696, label %61
    i32 687498073, label %79
    i32 -1391990843, label %82
    i32 -665006428, label %89
    i32 493696499, label %96
    i32 1445065586, label %97
    i32 -295610658, label %112
    i32 1270402768, label %129
    i32 -423844455, label %131
    i32 -1961186082, label %134
  ]

; <label>:23:                                     ; preds = %21
  br label %136

; <label>:24:                                     ; preds = %21
  %25 = load volatile %class.network*, %class.network** %4
  %26 = call zeroext i1 @_ZN7networkIiE10make_layerEv(%class.network* %25)
  %27 = select i1 %26, i32 90882053, i32 1445065586
  store i32 %27, i32* %20
  br label %136

; <label>:28:                                     ; preds = %21
  %29 = load volatile %class.network*, %class.network** %4
  %30 = getelementptr inbounds %class.network, %class.network* %29, i32 0, i32 4
  %31 = load i32, i32* %6, align 4
  %32 = sext i32 %31 to i64
  store i32 0, i32* %8, align 4
  call void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.3"* %30, i64 %32, i32* dereferenceable(4) %8)
  store i32 1, i32* %9, align 4
  store i32 -452888121, i32* %20
  br label %136

; <label>:33:                                     ; preds = %21
  %34 = load i32, i32* @x.15
  %35 = load i32, i32* @y.16
  %36 = add i32 %34, 1199056929
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, 1199056929
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = xor i1 %42, true
  %45 = xor i1 %43, true
  %46 = xor i1 false, true
  %47 = and i1 %44, false
  %48 = and i1 %42, %46
  %49 = and i1 %45, false
  %50 = and i1 %43, %46
  %51 = or i1 %47, %48
  %52 = or i1 %49, %50
  %53 = xor i1 %51, %52
  %54 = or i1 %44, %45
  %55 = xor i1 %54, true
  %56 = or i1 false, %46
  %57 = and i1 %55, %56
  %58 = or i1 %53, %57
  %59 = or i1 %42, %43
  %60 = select i1 %58, i32 -1450299696, i32 -423844455
  store i32 %60, i32* %20
  br label %136

; <label>:61:                                     ; preds = %21
  %62 = load i32, i32* %9, align 4
  %63 = icmp sgt i32 %62, 0
  store i1 %63, i1* %3
  %64 = load i32, i32* @x.15
  %65 = load i32, i32* @y.16
  %66 = sub i32 %64, -1009916495
  %67 = sub i32 %66, 1
  %68 = add i32 %67, -1009916495
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = and i1 %72, %73
  %75 = xor i1 %72, %73
  %76 = or i1 %74, %75
  %77 = or i1 %72, %73
  %78 = select i1 %76, i32 687498073, i32 -423844455
  store i32 %78, i32* %20
  br label %136

; <label>:79:                                     ; preds = %21
  %80 = load volatile i1, i1* %3
  %81 = select i1 %80, i32 -1391990843, i32 493696499
  store i32 %81, i32* %20
  br label %136

; <label>:82:                                     ; preds = %21
  %83 = load volatile %class.network*, %class.network** %4
  %84 = getelementptr inbounds %class.network, %class.network* %83, i32 0, i32 0
  %85 = load i32, i32* %84, align 8
  %86 = call i32 @_ZNSt14numeric_limitsIiE3maxEv() #3
  store i32 %86, i32* %10, align 4
  %87 = load volatile %class.network*, %class.network** %4
  %88 = call i32 @_ZN7networkIiE7augmentEiRKi(%class.network* %87, i32 %85, i32* dereferenceable(4) %10)
  store i32 %88, i32* %9, align 4
  store i32 -665006428, i32* %20
  br label %136

; <label>:89:                                     ; preds = %21
  %90 = load i32, i32* %9, align 4
  %91 = load i32, i32* %7, align 4
  %92 = sub i32 %91, -565698034
  %93 = add i32 %92, %90
  %94 = add i32 %93, -565698034
  %95 = add nsw i32 %91, %90
  store i32 %94, i32* %7, align 4
  store i32 -452888121, i32* %20
  br label %136

; <label>:96:                                     ; preds = %21
  store i32 723464195, i32* %20
  br label %136

; <label>:97:                                     ; preds = %21
  %98 = load i32, i32* @x.15
  %99 = load i32, i32* @y.16
  %100 = sub i32 0, 1
  %101 = add i32 %98, %100
  %102 = sub i32 %98, 1
  %103 = mul i32 %98, %101
  %104 = urem i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = icmp slt i32 %99, 10
  %107 = and i1 %105, %106
  %108 = xor i1 %105, %106
  %109 = or i1 %107, %108
  %110 = or i1 %105, %106
  %111 = select i1 %109, i32 -295610658, i32 -1961186082
  store i32 %111, i32* %20
  br label %136

; <label>:112:                                    ; preds = %21
  %113 = load i32, i32* %7, align 4
  store i32 %113, i32* %2
  %114 = load i32, i32* @x.15
  %115 = load i32, i32* @y.16
  %116 = sub i32 %114, 2126515560
  %117 = sub i32 %116, 1
  %118 = add i32 %117, 2126515560
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 1270402768, i32 -1961186082
  store i32 %128, i32* %20
  br label %136

; <label>:129:                                    ; preds = %21
  %130 = load volatile i32, i32* %2
  ret i32 %130

; <label>:131:                                    ; preds = %21
  %132 = load i32, i32* %9, align 4
  %133 = icmp sgt i32 %132, 0
  store i32 -1450299696, i32* %20
  br label %136

; <label>:134:                                    ; preds = %21
  %135 = load i32, i32* %7, align 4
  store i32 -295610658, i32* %20
  br label %136

; <label>:136:                                    ; preds = %134, %131, %112, %97, %96, %89, %82, %79, %61, %33, %28, %24, %23
  br label %21
}

declare i32 @printf(i8*, ...) #1

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7networkIiED2Ev(%class.network*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.17
  %5 = load i32, i32* @y.18
  %6 = add i32 %4, 390981229
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 390981229
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1273905706, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1273905706, label %18
    i32 -1157828635, label %38
    i32 975496480, label %71
    i32 130731374, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1157828635, i32 130731374
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %class.network*, align 8
  store %class.network* %0, %class.network** %39, align 8
  %40 = load %class.network*, %class.network** %39, align 8
  %41 = getelementptr inbounds %class.network, %class.network* %40, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %41) #3
  %42 = getelementptr inbounds %class.network, %class.network* %40, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %42) #3
  %43 = getelementptr inbounds %class.network, %class.network* %40, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %43) #3
  %44 = load i32, i32* @x.17
  %45 = load i32, i32* @y.18
  %46 = sub i32 %44, 589110009
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 589110009
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 975496480, i32 130731374
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %class.network*, align 8
  store %class.network* %0, %class.network** %73, align 8
  %74 = load %class.network*, %class.network** %73, align 8
  %75 = getelementptr inbounds %class.network, %class.network* %74, i32 0, i32 4
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %75) #3
  %76 = getelementptr inbounds %class.network, %class.network* %74, i32 0, i32 3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %76) #3
  %77 = getelementptr inbounds %class.network, %class.network* %74, i32 0, i32 2
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"* %77) #3
  store i32 -1157828635, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.19
  %3 = load i32, i32* @y.20
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %112

; <label>:15:                                     ; preds = %1, %112
  %16 = alloca %"class.std::vector.3"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %16, align 8
  %19 = load %"class.std::vector.3"*, %"class.std::vector.3"** %16, align 8
  %20 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %21 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %25 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %24, i32 0, i32 0
  %26 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %25, i32 0, i32 1
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  %29 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %28) #3
  %30 = load i32, i32* @x.19
  %31 = load i32, i32* @y.20
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  br i1 %41, label %43, label %112

; <label>:43:                                     ; preds = %15
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %23, i32* %27, %"class.std::allocator.5"* dereferenceable(1) %29)
          to label %44 unwind label %75

; <label>:44:                                     ; preds = %43
  %45 = load i32, i32* @x.19
  %46 = load i32, i32* @y.20
  %47 = add i32 %45, -1825620961
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1825620961
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %127

; <label>:59:                                     ; preds = %44, %127
  %60 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"* %60) #3
  %61 = load i32, i32* @x.19
  %62 = load i32, i32* @y.20
  %63 = sub i32 0, 1
  %64 = add i32 %61, %63
  %65 = sub i32 %61, 1
  %66 = mul i32 %61, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %62, 10
  %70 = and i1 %68, %69
  %71 = xor i1 %68, %69
  %72 = or i1 %70, %71
  %73 = or i1 %68, %69
  br i1 %72, label %74, label %127

; <label>:74:                                     ; preds = %59
  ret void

; <label>:75:                                     ; preds = %43
  %76 = load i32, i32* @x.19
  %77 = load i32, i32* @y.20
  %78 = sub i32 %76, -1177768973
  %79 = sub i32 %78, 1
  %80 = add i32 %79, -1177768973
  %81 = sub i32 %76, 1
  %82 = mul i32 %76, %80
  %83 = urem i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = icmp slt i32 %77, 10
  %86 = and i1 %84, %85
  %87 = xor i1 %84, %85
  %88 = or i1 %86, %87
  %89 = or i1 %84, %85
  br i1 %88, label %90, label %129

; <label>:90:                                     ; preds = %75, %129
  %91 = landingpad { i8*, i32 }
          catch i8* null
  %92 = extractvalue { i8*, i32 } %91, 0
  store i8* %92, i8** %17, align 8
  %93 = extractvalue { i8*, i32 } %91, 1
  store i32 %93, i32* %18, align 4
  %94 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"* %94) #3
  %95 = load i32, i32* @x.19
  %96 = load i32, i32* @y.20
  %97 = add i32 %95, 2094137664
  %98 = sub i32 %97, 1
  %99 = sub i32 %98, 2094137664
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  br i1 %107, label %109, label %129

; <label>:109:                                    ; preds = %90
  br label %110

; <label>:110:                                    ; preds = %109
  %111 = load i8*, i8** %17, align 8
  call void @__clang_call_terminate(i8* %111) #8
  unreachable

; <label>:112:                                    ; preds = %15, %1
  %113 = alloca %"class.std::vector.3"*, align 8
  %114 = alloca i8*
  %115 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %113, align 8
  %116 = load %"class.std::vector.3"*, %"class.std::vector.3"** %113, align 8
  %117 = bitcast %"class.std::vector.3"* %116 to %"struct.std::_Vector_base.4"*
  %118 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %118, i32 0, i32 0
  %120 = load i32*, i32** %119, align 8
  %121 = bitcast %"class.std::vector.3"* %116 to %"struct.std::_Vector_base.4"*
  %122 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %122, i32 0, i32 1
  %124 = load i32*, i32** %123, align 8
  %125 = bitcast %"class.std::vector.3"* %116 to %"struct.std::_Vector_base.4"*
  %126 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %125) #3
  br label %15

; <label>:127:                                    ; preds = %59, %44
  %128 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"* %128) #3
  br label %59

; <label>:129:                                    ; preds = %90, %75
  %130 = landingpad { i8*, i32 }
          catch i8* null
  %131 = extractvalue { i8*, i32 } %130, 0
  store i8* %131, i8** %17, align 8
  %132 = extractvalue { i8*, i32 } %130, 1
  store i32 %132, i32* %18, align 4
  %133 = bitcast %"class.std::vector.3"* %19 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"* %133) #3
  br label %90
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EED2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.21
  %3 = load i32, i32* @y.22
  %4 = sub i32 %2, 1677703833
  %5 = sub i32 %4, 1
  %6 = add i32 %5, 1677703833
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %78

; <label>:28:                                     ; preds = %1, %78
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i8*
  %31 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  %32 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %33 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load %"class.std::vector.2"*, %"class.std::vector.2"** %35, align 8
  %37 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %38, i32 0, i32 1
  %40 = load %"class.std::vector.2"*, %"class.std::vector.2"** %39, align 8
  %41 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  %42 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %41) #3
  %43 = load i32, i32* @x.21
  %44 = load i32, i32* @y.22
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 false, true
  %55 = and i1 %52, false
  %56 = and i1 %50, %54
  %57 = and i1 %53, false
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 false, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  br i1 %66, label %68, label %78

; <label>:68:                                     ; preds = %28
  invoke void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"* %36, %"class.std::vector.2"* %40, %"class.std::allocator"* dereferenceable(1) %42)
          to label %69 unwind label %71

; <label>:69:                                     ; preds = %68
  %70 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"* %70) #3
  ret void

; <label>:71:                                     ; preds = %68
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  store i8* %73, i8** %30, align 8
  %74 = extractvalue { i8*, i32 } %72, 1
  store i32 %74, i32* %31, align 4
  %75 = bitcast %"class.std::vector"* %32 to %"struct.std::_Vector_base"*
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"* %75) #3
  br label %76

; <label>:76:                                     ; preds = %71
  %77 = load i8*, i8** %30, align 8
  call void @__clang_call_terminate(i8* %77) #8
  unreachable

; <label>:78:                                     ; preds = %28, %1
  %79 = alloca %"class.std::vector"*, align 8
  %80 = alloca i8*
  %81 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %79, align 8
  %82 = load %"class.std::vector"*, %"class.std::vector"** %79, align 8
  %83 = bitcast %"class.std::vector"* %82 to %"struct.std::_Vector_base"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %84, i32 0, i32 0
  %86 = load %"class.std::vector.2"*, %"class.std::vector.2"** %85, align 8
  %87 = bitcast %"class.std::vector"* %82 to %"struct.std::_Vector_base"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %88, i32 0, i32 1
  %90 = load %"class.std::vector.2"*, %"class.std::vector.2"** %89, align 8
  %91 = bitcast %"class.std::vector"* %82 to %"struct.std::_Vector_base"*
  %92 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %91) #3
  br label %28
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32*, i32*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i32*, i32** %5, align 8
  call void @_ZSt8_DestroyIPiEvT_S1_(i32* %7, i32* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %5 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load i32*, i32** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = ptrtoint i32* %11 to i64
  %16 = ptrtoint i32* %14 to i64
  %17 = sub i64 %15, 1836094329794016213
  %18 = sub i64 %17, %16
  %19 = add i64 %18, 1836094329794016213
  %20 = sub i64 %15, %16
  %21 = sdiv exact i64 %19, 4
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.4"* %5, i32* %8, i64 %21)
          to label %22 unwind label %65

; <label>:22:                                     ; preds = %1
  %23 = load i32, i32* @x.27
  %24 = load i32, i32* @y.28
  %25 = sub i32 %23, -1182381467
  %26 = sub i32 %25, 1
  %27 = add i32 %26, -1182381467
  %28 = sub i32 %23, 1
  %29 = mul i32 %23, %27
  %30 = urem i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = icmp slt i32 %24, 10
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 false, true
  %36 = and i1 %33, false
  %37 = and i1 %31, %35
  %38 = and i1 %34, false
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 false, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  br i1 %47, label %49, label %72

; <label>:49:                                     ; preds = %22, %72
  %50 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50) #3
  %51 = load i32, i32* @x.27
  %52 = load i32, i32* @y.28
  %53 = sub i32 0, 1
  %54 = add i32 %51, %53
  %55 = sub i32 %51, 1
  %56 = mul i32 %51, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %52, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %72

; <label>:64:                                     ; preds = %49
  ret void

; <label>:65:                                     ; preds = %1
  %66 = landingpad { i8*, i32 }
          catch i8* null
  %67 = extractvalue { i8*, i32 } %66, 0
  store i8* %67, i8** %3, align 8
  %68 = extractvalue { i8*, i32 } %66, 1
  store i32 %68, i32* %4, align 4
  %69 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %69) #3
  br label %70

; <label>:70:                                     ; preds = %65
  %71 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %71) #8
  unreachable

; <label>:72:                                     ; preds = %49, %22
  %73 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %73) #3
  br label %49
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(i8*) #6 comdat {
  %2 = call i8* @__cxa_begin_catch(i8* %0) #3
  call void @_ZSt9terminatev() #8
  unreachable
}

declare i8* @__cxa_begin_catch(i8*)

declare void @_ZSt9terminatev()

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPiEvT_S1_(i32*, i32*) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load i32*, i32** %3, align 8
  %6 = load i32*, i32** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32* %5, i32* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPiEEvT_S3_(i32*, i32*) #5 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  store i32* %1, i32** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.4"*, i32*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.4"*
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.35
  %11 = load i32, i32* @y.36
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 417391053, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %74
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 417391053, label %23
    i32 -708879268, label %31
    i32 220000434, label %55
    i32 920004521, label %58
    i32 -1933004584, label %66
    i32 42419203, label %67
  ]

; <label>:22:                                     ; preds = %20
  br label %74

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 -708879268, i32 42419203
  store i32 %30, i32* %19
  br label %74

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base.4"*, align 8
  %33 = alloca i32*, align 8
  store i32** %33, i32*** %7
  %34 = alloca i64, align 8
  store i64* %34, i64** %6
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %32, align 8
  %35 = load volatile i32**, i32*** %7
  store i32* %1, i32** %35, align 8
  %36 = load volatile i64*, i64** %6
  store i64 %2, i64* %36, align 8
  %37 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %32, align 8
  store %"struct.std::_Vector_base.4"* %37, %"struct.std::_Vector_base.4"** %5
  %38 = load volatile i32**, i32*** %7
  %39 = load i32*, i32** %38, align 8
  %40 = icmp ne i32* %39, null
  store i1 %40, i1* %4
  %41 = load i32, i32* @x.35
  %42 = load i32, i32* @y.36
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  %54 = select i1 %52, i32 220000434, i32 42419203
  store i32 %54, i32* %19
  br label %74

; <label>:55:                                     ; preds = %20
  %56 = load volatile i1, i1* %4
  %57 = select i1 %56, i32 920004521, i32 -1933004584
  store i32 %57, i32* %19
  br label %74

; <label>:58:                                     ; preds = %20
  %59 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5
  %60 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %59, i32 0, i32 0
  %61 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %60 to %"class.std::allocator.5"*
  %62 = load volatile i32**, i32*** %7
  %63 = load i32*, i32** %62, align 8
  %64 = load volatile i64*, i64** %6
  %65 = load i64, i64* %64, align 8
  call void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.5"* dereferenceable(1) %61, i32* %63, i64 %65)
  store i32 -1933004584, i32* %19
  br label %74

; <label>:66:                                     ; preds = %20
  ret void

; <label>:67:                                     ; preds = %20
  %68 = alloca %"struct.std::_Vector_base.4"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i64 %2, i64* %70, align 8
  %71 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = icmp ne i32* %72, null
  store i32 -708879268, i32* %19
  br label %74

; <label>:74:                                     ; preds = %67, %58, %55, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.5"* dereferenceable(1), i32*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.6"* %8, i32* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE10deallocateEPim(%"class.__gnu_cxx::new_allocator.6"*, i32*, i64) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.41
  %7 = load i32, i32* @y.42
  %8 = sub i32 %6, 1234113104
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1234113104
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -111606145, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %70
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -111606145, label %20
    i32 -621141717, label %28
    i32 981818664, label %62
    i32 -1552939901, label %63
  ]

; <label>:19:                                     ; preds = %17
  br label %70

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -621141717, i32 -1552939901
  store i32 %27, i32* %16
  br label %70

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  call void @_ZdlPv(i8* %34) #3
  %35 = load i32, i32* @x.41
  %36 = load i32, i32* @y.42
  %37 = sub i32 %35, -1957682723
  %38 = sub i32 %37, 1
  %39 = add i32 %38, -1957682723
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 981818664, i32 -1552939901
  store i32 %61, i32* %16
  br label %70

; <label>:62:                                     ; preds = %17
  ret void

; <label>:63:                                     ; preds = %17
  %64 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %65 = alloca i32*, align 8
  %66 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %64, align 8
  store i32* %1, i32** %65, align 8
  store i64 %2, i64* %66, align 8
  %67 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %64, align 8
  %68 = load i32*, i32** %65, align 8
  %69 = bitcast i32* %68 to i8*
  call void @_ZdlPv(i8* %69) #3
  store i32 -621141717, i32* %16
  br label %70

; <label>:70:                                     ; preds = %63, %28, %20, %19
  br label %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) #7

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiED2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiED2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.2"*, align 8
  %5 = alloca %"class.std::vector.2"*, align 8
  %6 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %4, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %5, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %6, align 8
  %7 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %8 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  call void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.2"* %7, %"class.std::vector.2"* %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %4 to %"class.std::allocator"*
  ret %"class.std::allocator"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EED2Ev(%"struct.std::_Vector_base"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %5 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"class.std::vector.2"*, %"class.std::vector.2"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"class.std::vector.2"*, %"class.std::vector.2"** %13, align 8
  %15 = ptrtoint %"class.std::vector.2"* %11 to i64
  %16 = ptrtoint %"class.std::vector.2"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 24
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %5, %"class.std::vector.2"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.2"*, %"class.std::vector.2"*) #0 comdat {
  %3 = alloca %"class.std::vector.2"*, align 8
  %4 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %4, align 8
  %5 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %6 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7networkIiE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.2"* %5, %"class.std::vector.2"* %6)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb0EE9__destroyIPSt6vectorIN7networkIiE4edgeESaIS5_EEEEvT_S9_(%"class.std::vector.2"*, %"class.std::vector.2"*) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca %"class.std::vector.2"*, align 8
  %5 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %4, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %5, align 8
  %6 = alloca i32
  store i32 -1945367135, i32* %6
  br label %7

; <label>:7:                                      ; preds = %2, %82
  %8 = load i32, i32* %6
  switch i32 %8, label %9 [
    i32 -1945367135, label %10
    i32 2073217298, label %37
    i32 -1458554667, label %68
    i32 1733993850, label %71
    i32 -1699872671, label %74
    i32 -72928441, label %77
    i32 -1320274216, label %78
  ]

; <label>:9:                                      ; preds = %7
  br label %82

; <label>:10:                                     ; preds = %7
  %11 = load i32, i32* @x.55
  %12 = load i32, i32* @y.56
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = icmp slt i32 %12, 10
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 true, true
  %23 = and i1 %20, true
  %24 = and i1 %18, %22
  %25 = and i1 %21, true
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 true, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 2073217298, i32 -1320274216
  store i32 %36, i32* %6
  br label %82

; <label>:37:                                     ; preds = %7
  %38 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %39 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %40 = icmp ne %"class.std::vector.2"* %38, %39
  store i1 %40, i1* %3
  %41 = load i32, i32* @x.55
  %42 = load i32, i32* @y.56
  %43 = add i32 %41, -396355518
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -396355518
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 -1458554667, i32 -1320274216
  store i32 %67, i32* %6
  br label %82

; <label>:68:                                     ; preds = %7
  %69 = load volatile i1, i1* %3
  %70 = select i1 %69, i32 1733993850, i32 -72928441
  store i32 %70, i32* %6
  br label %82

; <label>:71:                                     ; preds = %7
  %72 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %73 = call %"class.std::vector.2"* @_ZSt11__addressofISt6vectorIN7networkIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.2"* dereferenceable(24) %72) #3
  call void @_ZSt8_DestroyISt6vectorIN7networkIiE4edgeESaIS3_EEEvPT_(%"class.std::vector.2"* %73)
  store i32 -1699872671, i32* %6
  br label %82

; <label>:74:                                     ; preds = %7
  %75 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %76 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %75, i32 1
  store %"class.std::vector.2"* %76, %"class.std::vector.2"** %4, align 8
  store i32 -1945367135, i32* %6
  br label %82

; <label>:77:                                     ; preds = %7
  ret void

; <label>:78:                                     ; preds = %7
  %79 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %80 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %81 = icmp ne %"class.std::vector.2"* %79, %80
  store i32 2073217298, i32* %6
  br label %82

; <label>:82:                                     ; preds = %78, %74, %71, %68, %37, %10, %9
  br label %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8_DestroyISt6vectorIN7networkIiE4edgeESaIS3_EEEvPT_(%"class.std::vector.2"*) #5 comdat {
  %2 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %2, align 8
  %3 = load %"class.std::vector.2"*, %"class.std::vector.2"** %2, align 8
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EED2Ev(%"class.std::vector.2"* %3) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt11__addressofISt6vectorIN7networkIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.2"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.59
  %6 = load i32, i32* @y.60
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1703313234, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1703313234, label %18
    i32 -185114071, label %26
    i32 1526641586, label %46
    i32 -1249720491, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -185114071, i32 -1249720491
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %27, align 8
  %28 = load %"class.std::vector.2"*, %"class.std::vector.2"** %27, align 8
  %29 = bitcast %"class.std::vector.2"* %28 to i8*
  %30 = bitcast i8* %29 to %"class.std::vector.2"*
  store %"class.std::vector.2"* %30, %"class.std::vector.2"** %2
  %31 = load i32, i32* @x.59
  %32 = load i32, i32* @y.60
  %33 = add i32 %31, -341021108
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -341021108
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1526641586, i32 -1249720491
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %2
  ret %"class.std::vector.2"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %49, align 8
  %50 = load %"class.std::vector.2"*, %"class.std::vector.2"** %49, align 8
  %51 = bitcast %"class.std::vector.2"* %50 to i8*
  %52 = bitcast i8* %51 to %"class.std::vector.2"*
  store i32 -185114071, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EED2Ev(%"class.std::vector.2"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.2"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %2, align 8
  %5 = load %"class.std::vector.2"*, %"class.std::vector.2"** %2, align 8
  %6 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  %10 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  %11 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %11, i32 0, i32 1
  %13 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %14 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  %15 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %14) #3
  invoke void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"* %9, %"struct.network<int>::edge"* %13, %"class.std::allocator.9"* dereferenceable(1) %15)
          to label %16 unwind label %60

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.61
  %18 = load i32, i32* @y.62
  %19 = sub i32 %17, 605481463
  %20 = sub i32 %19, 1
  %21 = add i32 %20, 605481463
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  br i1 %41, label %43, label %67

; <label>:43:                                     ; preds = %16, %67
  %44 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.8"* %44) #3
  %45 = load i32, i32* @x.61
  %46 = load i32, i32* @y.62
  %47 = sub i32 %45, -245976481
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -245976481
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %67

; <label>:59:                                     ; preds = %43
  ret void

; <label>:60:                                     ; preds = %1
  %61 = landingpad { i8*, i32 }
          catch i8* null
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %3, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %4, align 4
  %64 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.8"* %64) #3
  br label %65

; <label>:65:                                     ; preds = %60
  %66 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %66) #8
  unreachable

; <label>:67:                                     ; preds = %43, %16
  %68 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.8"* %68) #3
  br label %43
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.63
  %7 = load i32, i32* @y.64
  %8 = sub i32 %6, 1828345112
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1828345112
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 717226898, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %80
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 717226898, label %20
    i32 -1967763154, label %40
    i32 1669861701, label %73
    i32 442365327, label %74
  ]

; <label>:19:                                     ; preds = %17
  br label %80

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -1967763154, i32 442365327
  store i32 %39, i32* %16
  br label %80

; <label>:40:                                     ; preds = %17
  %41 = alloca %"struct.network<int>::edge"*, align 8
  %42 = alloca %"struct.network<int>::edge"*, align 8
  %43 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %41, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %42, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %43, align 8
  %44 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %41, align 8
  %45 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %42, align 8
  call void @_ZSt8_DestroyIPN7networkIiE4edgeEEvT_S4_(%"struct.network<int>::edge"* %44, %"struct.network<int>::edge"* %45)
  %46 = load i32, i32* @x.63
  %47 = load i32, i32* @y.64
  %48 = add i32 %46, -783125803
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, -783125803
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1669861701, i32 442365327
  store i32 %72, i32* %16
  br label %80

; <label>:73:                                     ; preds = %17
  ret void

; <label>:74:                                     ; preds = %17
  %75 = alloca %"struct.network<int>::edge"*, align 8
  %76 = alloca %"struct.network<int>::edge"*, align 8
  %77 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %75, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %76, align 8
  store %"class.std::allocator.9"* %2, %"class.std::allocator.9"** %77, align 8
  %78 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %75, align 8
  %79 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %76, align 8
  call void @_ZSt8_DestroyIPN7networkIiE4edgeEEvT_S4_(%"struct.network<int>::edge"* %78, %"struct.network<int>::edge"* %79)
  store i32 -1967763154, i32* %16
  br label %80

; <label>:80:                                     ; preds = %74, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %3 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %4 to %"class.std::allocator.9"*
  ret %"class.std::allocator.9"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EED2Ev(%"struct.std::_Vector_base.8"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  %3 = alloca i8*
  %4 = alloca i32
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %5 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %6, i32 0, i32 0
  %8 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %9, i32 0, i32 2
  %11 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %13 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %12, i32 0, i32 0
  %14 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %15 = ptrtoint %"struct.network<int>::edge"* %11 to i64
  %16 = ptrtoint %"struct.network<int>::edge"* %14 to i64
  %17 = sub i64 0, %16
  %18 = add i64 %15, %17
  %19 = sub i64 %15, %16
  %20 = sdiv exact i64 %18, 16
  invoke void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"* %5, %"struct.network<int>::edge"* %8, i64 %20)
          to label %21 unwind label %23

; <label>:21:                                     ; preds = %1
  %22 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %22) #3
  ret void

; <label>:23:                                     ; preds = %1
  %24 = landingpad { i8*, i32 }
          catch i8* null
  %25 = extractvalue { i8*, i32 } %24, 0
  store i8* %25, i8** %3, align 8
  %26 = extractvalue { i8*, i32 } %24, 1
  store i32 %26, i32* %4, align 4
  %27 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %27) #3
  br label %28

; <label>:28:                                     ; preds = %23
  %29 = load i8*, i8** %3, align 8
  call void @__clang_call_terminate(i8* %29) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt8_DestroyIPN7networkIiE4edgeEEvT_S4_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*) #0 comdat {
  %3 = alloca %"struct.network<int>::edge"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %3, align 8
  %6 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  call void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7networkIiE4edgeEEEvT_S6_(%"struct.network<int>::edge"* %5, %"struct.network<int>::edge"* %6)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Destroy_auxILb1EE9__destroyIPN7networkIiE4edgeEEEvT_S6_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*) #5 comdat align 2 {
  %3 = alloca %"struct.network<int>::edge"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"*, %"struct.network<int>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base.8"*
  %6 = alloca i64*
  %7 = alloca %"struct.network<int>::edge"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.73
  %11 = load i32, i32* @y.74
  %12 = sub i32 %10, 1579700991
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 1579700991
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -194255425, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %152
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -194255425, label %24
    i32 -1072617753, label %44
    i32 1800374389, label %81
    i32 -124816976, label %84
    i32 870709823, label %100
    i32 1420440256, label %135
    i32 -1290055730, label %136
    i32 -959339734, label %137
    i32 -1439484972, label %144
  ]

; <label>:23:                                     ; preds = %21
  br label %152

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -1072617753, i32 -959339734
  store i32 %43, i32* %20
  br label %152

; <label>:44:                                     ; preds = %21
  %45 = alloca %"struct.std::_Vector_base.8"*, align 8
  %46 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"** %46, %"struct.network<int>::edge"*** %7
  %47 = alloca i64, align 8
  store i64* %47, i64** %6
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %45, align 8
  %48 = load volatile %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %7
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %48, align 8
  %49 = load volatile i64*, i64** %6
  store i64 %2, i64* %49, align 8
  %50 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %45, align 8
  store %"struct.std::_Vector_base.8"* %50, %"struct.std::_Vector_base.8"** %5
  %51 = load volatile %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %7
  %52 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %51, align 8
  %53 = icmp ne %"struct.network<int>::edge"* %52, null
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.73
  %55 = load i32, i32* @y.74
  %56 = add i32 %54, -388756329
  %57 = sub i32 %56, 1
  %58 = sub i32 %57, -388756329
  %59 = sub i32 %54, 1
  %60 = mul i32 %54, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %55, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 1800374389, i32 -959339734
  store i32 %80, i32* %20
  br label %152

; <label>:81:                                     ; preds = %21
  %82 = load volatile i1, i1* %4
  %83 = select i1 %82, i32 -124816976, i32 -1290055730
  store i32 %83, i32* %20
  br label %152

; <label>:84:                                     ; preds = %21
  %85 = load i32, i32* @x.73
  %86 = load i32, i32* @y.74
  %87 = add i32 %85, -1746179830
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -1746179830
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = and i1 %93, %94
  %96 = xor i1 %93, %94
  %97 = or i1 %95, %96
  %98 = or i1 %93, %94
  %99 = select i1 %97, i32 870709823, i32 -1439484972
  store i32 %99, i32* %20
  br label %152

; <label>:100:                                    ; preds = %21
  %101 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %102 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %101, i32 0, i32 0
  %103 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %102 to %"class.std::allocator.9"*
  %104 = load volatile %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %7
  %105 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %104, align 8
  %106 = load volatile i64*, i64** %6
  %107 = load i64, i64* %106, align 8
  call void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.9"* dereferenceable(1) %103, %"struct.network<int>::edge"* %105, i64 %107)
  %108 = load i32, i32* @x.73
  %109 = load i32, i32* @y.74
  %110 = sub i32 %108, -1019781008
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -1019781008
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  %134 = select i1 %132, i32 1420440256, i32 -1439484972
  store i32 %134, i32* %20
  br label %152

; <label>:135:                                    ; preds = %21
  store i32 -1290055730, i32* %20
  br label %152

; <label>:136:                                    ; preds = %21
  ret void

; <label>:137:                                    ; preds = %21
  %138 = alloca %"struct.std::_Vector_base.8"*, align 8
  %139 = alloca %"struct.network<int>::edge"*, align 8
  %140 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %138, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %139, align 8
  store i64 %2, i64* %140, align 8
  %141 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %138, align 8
  %142 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %139, align 8
  %143 = icmp ne %"struct.network<int>::edge"* %142, null
  store i32 -1072617753, i32* %20
  br label %152

; <label>:144:                                    ; preds = %21
  %145 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5
  %146 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %145, i32 0, i32 0
  %147 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %146 to %"class.std::allocator.9"*
  %148 = load volatile %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %7
  %149 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %148, align 8
  %150 = load volatile i64*, i64** %6
  %151 = load i64, i64* %150, align 8
  call void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.9"* dereferenceable(1) %147, %"struct.network<int>::edge"* %149, i64 %151)
  store i32 870709823, i32* %20
  br label %152

; <label>:152:                                    ; preds = %144, %137, %135, %100, %84, %81, %44, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaIN7networkIiE4edgeEED2Ev(%"class.std::allocator.9"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE10deallocateERS3_PS2_m(%"class.std::allocator.9"* dereferenceable(1), %"struct.network<int>::edge"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.77
  %7 = load i32, i32* @y.78
  %8 = sub i32 %6, 2000543459
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 2000543459
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 974349222, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %60
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 974349222, label %20
    i32 -1143380818, label %28
    i32 -1843510818, label %51
    i32 1538611791, label %52
  ]

; <label>:19:                                     ; preds = %17
  br label %60

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1143380818, i32 1538611791
  store i32 %27, i32* %16
  br label %60

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.9"*, align 8
  %30 = alloca %"struct.network<int>::edge"*, align 8
  %31 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %29, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %30, align 8
  store i64 %2, i64* %31, align 8
  %32 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %29, align 8
  %33 = bitcast %"class.std::allocator.9"* %32 to %"class.__gnu_cxx::new_allocator.10"*
  %34 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %30, align 8
  %35 = load i64, i64* %31, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.10"* %33, %"struct.network<int>::edge"* %34, i64 %35)
  %36 = load i32, i32* @x.77
  %37 = load i32, i32* @y.78
  %38 = sub i32 %36, -720036384
  %39 = sub i32 %38, 1
  %40 = add i32 %39, -720036384
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = and i1 %44, %45
  %47 = xor i1 %44, %45
  %48 = or i1 %46, %47
  %49 = or i1 %44, %45
  %50 = select i1 %48, i32 -1843510818, i32 1538611791
  store i32 %50, i32* %16
  br label %60

; <label>:51:                                     ; preds = %17
  ret void

; <label>:52:                                     ; preds = %17
  %53 = alloca %"class.std::allocator.9"*, align 8
  %54 = alloca %"struct.network<int>::edge"*, align 8
  %55 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %53, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %54, align 8
  store i64 %2, i64* %55, align 8
  %56 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %53, align 8
  %57 = bitcast %"class.std::allocator.9"* %56 to %"class.__gnu_cxx::new_allocator.10"*
  %58 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %54, align 8
  %59 = load i64, i64* %55, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.10"* %57, %"struct.network<int>::edge"* %58, i64 %59)
  store i32 -1143380818, i32* %16
  br label %60

; <label>:60:                                     ; preds = %52, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE10deallocateEPS3_m(%"class.__gnu_cxx::new_allocator.10"*, %"struct.network<int>::edge"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %5 = alloca %"struct.network<int>::edge"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %4, align 8
  %8 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %5, align 8
  %9 = bitcast %"struct.network<int>::edge"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7networkIiE4edgeEED2Ev(%"class.std::allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEED2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.83
  %5 = load i32, i32* @y.84
  %6 = sub i32 %4, 125639988
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 125639988
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1706839054, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %48
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1706839054, label %18
    i32 547341214, label %26
    i32 -1541800219, label %44
    i32 -73804482, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %48

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 547341214, i32 -73804482
  store i32 %25, i32* %14
  br label %48

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  %28 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %27, align 8
  %29 = load i32, i32* @x.83
  %30 = load i32, i32* @y.84
  %31 = add i32 %29, 1093740321
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1093740321
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -1541800219, i32 -73804482
  store i32 %43, i32* %14
  br label %48

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %46, align 8
  %47 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %46, align 8
  store i32 547341214, i32* %14
  br label %48

; <label>:48:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"*, %"class.std::vector.2"*, i64) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca %"class.std::vector.2"**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.85
  %11 = load i32, i32* @y.86
  %12 = sub i32 %10, 308768108
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 308768108
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 -2115865810, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %138
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -2115865810, label %24
    i32 -1889157090, label %32
    i32 -2131376933, label %69
    i32 -783011952, label %72
    i32 494898073, label %87
    i32 -1972482061, label %121
    i32 893286221, label %122
    i32 -880903514, label %123
    i32 -235520354, label %130
  ]

; <label>:23:                                     ; preds = %21
  br label %138

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  %31 = select i1 %29, i32 -1889157090, i32 -880903514
  store i32 %31, i32* %20
  br label %138

; <label>:32:                                     ; preds = %21
  %33 = alloca %"struct.std::_Vector_base"*, align 8
  %34 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"** %34, %"class.std::vector.2"*** %7
  %35 = alloca i64, align 8
  store i64* %35, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %33, align 8
  %36 = load volatile %"class.std::vector.2"**, %"class.std::vector.2"*** %7
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %36, align 8
  %37 = load volatile i64*, i64** %6
  store i64 %2, i64* %37, align 8
  %38 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %33, align 8
  store %"struct.std::_Vector_base"* %38, %"struct.std::_Vector_base"** %5
  %39 = load volatile %"class.std::vector.2"**, %"class.std::vector.2"*** %7
  %40 = load %"class.std::vector.2"*, %"class.std::vector.2"** %39, align 8
  %41 = icmp ne %"class.std::vector.2"* %40, null
  store i1 %41, i1* %4
  %42 = load i32, i32* @x.85
  %43 = load i32, i32* @y.86
  %44 = add i32 %42, 1464533736
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, 1464533736
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = xor i1 %50, true
  %53 = xor i1 %51, true
  %54 = xor i1 true, true
  %55 = and i1 %52, true
  %56 = and i1 %50, %54
  %57 = and i1 %53, true
  %58 = and i1 %51, %54
  %59 = or i1 %55, %56
  %60 = or i1 %57, %58
  %61 = xor i1 %59, %60
  %62 = or i1 %52, %53
  %63 = xor i1 %62, true
  %64 = or i1 true, %54
  %65 = and i1 %63, %64
  %66 = or i1 %61, %65
  %67 = or i1 %50, %51
  %68 = select i1 %66, i32 -2131376933, i32 -880903514
  store i32 %68, i32* %20
  br label %138

; <label>:69:                                     ; preds = %21
  %70 = load volatile i1, i1* %4
  %71 = select i1 %70, i32 -783011952, i32 893286221
  store i32 %71, i32* %20
  br label %138

; <label>:72:                                     ; preds = %21
  %73 = load i32, i32* @x.85
  %74 = load i32, i32* @y.86
  %75 = sub i32 0, 1
  %76 = add i32 %73, %75
  %77 = sub i32 %73, 1
  %78 = mul i32 %73, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %74, 10
  %82 = and i1 %80, %81
  %83 = xor i1 %80, %81
  %84 = or i1 %82, %83
  %85 = or i1 %80, %81
  %86 = select i1 %84, i32 494898073, i32 -235520354
  store i32 %86, i32* %20
  br label %138

; <label>:87:                                     ; preds = %21
  %88 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %89 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %88, i32 0, i32 0
  %90 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %89 to %"class.std::allocator"*
  %91 = load volatile %"class.std::vector.2"**, %"class.std::vector.2"*** %7
  %92 = load %"class.std::vector.2"*, %"class.std::vector.2"** %91, align 8
  %93 = load volatile i64*, i64** %6
  %94 = load i64, i64* %93, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1) %90, %"class.std::vector.2"* %92, i64 %94)
  %95 = load i32, i32* @x.85
  %96 = load i32, i32* @y.86
  %97 = sub i32 0, 1
  %98 = add i32 %95, %97
  %99 = sub i32 %95, 1
  %100 = mul i32 %95, %98
  %101 = urem i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = icmp slt i32 %96, 10
  %104 = xor i1 %102, true
  %105 = xor i1 %103, true
  %106 = xor i1 true, true
  %107 = and i1 %104, true
  %108 = and i1 %102, %106
  %109 = and i1 %105, true
  %110 = and i1 %103, %106
  %111 = or i1 %107, %108
  %112 = or i1 %109, %110
  %113 = xor i1 %111, %112
  %114 = or i1 %104, %105
  %115 = xor i1 %114, true
  %116 = or i1 true, %106
  %117 = and i1 %115, %116
  %118 = or i1 %113, %117
  %119 = or i1 %102, %103
  %120 = select i1 %118, i32 -1972482061, i32 -235520354
  store i32 %120, i32* %20
  br label %138

; <label>:121:                                    ; preds = %21
  store i32 893286221, i32* %20
  br label %138

; <label>:122:                                    ; preds = %21
  ret void

; <label>:123:                                    ; preds = %21
  %124 = alloca %"struct.std::_Vector_base"*, align 8
  %125 = alloca %"class.std::vector.2"*, align 8
  %126 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %124, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %125, align 8
  store i64 %2, i64* %126, align 8
  %127 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %124, align 8
  %128 = load %"class.std::vector.2"*, %"class.std::vector.2"** %125, align 8
  %129 = icmp ne %"class.std::vector.2"* %128, null
  store i32 -1889157090, i32* %20
  br label %138

; <label>:130:                                    ; preds = %21
  %131 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %132 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %131, i32 0, i32 0
  %133 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %132 to %"class.std::allocator"*
  %134 = load volatile %"class.std::vector.2"**, %"class.std::vector.2"*** %7
  %135 = load %"class.std::vector.2"*, %"class.std::vector.2"** %134, align 8
  %136 = load volatile i64*, i64** %6
  %137 = load i64, i64* %136, align 8
  call void @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1) %133, %"class.std::vector.2"* %135, i64 %137)
  store i32 494898073, i32* %20
  br label %138

; <label>:138:                                    ; preds = %130, %123, %121, %87, %72, %69, %32, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implD2Ev(%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEED2Ev(%"class.std::allocator"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE10deallocateERS6_PS5_m(%"class.std::allocator"* dereferenceable(1), %"class.std::vector.2"*, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator"*, align 8
  %5 = alloca %"class.std::vector.2"*, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %4, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator"*, %"class.std::allocator"** %4, align 8
  %8 = bitcast %"class.std::allocator"* %7 to %"class.__gnu_cxx::new_allocator"*
  %9 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"* %8, %"class.std::vector.2"* %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE10deallocateEPS6_m(%"class.__gnu_cxx::new_allocator"*, %"class.std::vector.2"*, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %5 = alloca %"class.std::vector.2"*, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %4, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %4, align 8
  %8 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %9 = bitcast %"class.std::vector.2"* %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEED2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEED2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5tupleIJRiS0_EEC2ES0_S0_(%"class.std::tuple"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::tuple"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::tuple"*, %"class.std::tuple"** %4, align 8
  %8 = bitcast %"class.std::tuple"* %7 to %"struct.std::_Tuple_impl"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  call void @_ZNSt11_Tuple_implILm0EJRiS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl"* %8, i32* dereferenceable(4) %9, i32* dereferenceable(4) %10)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm0EJRiS0_EEC2ES0_S0_(%"struct.std::_Tuple_impl"*, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::_Tuple_impl"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %4, align 8
  %8 = bitcast %"struct.std::_Tuple_impl"* %7 to %"struct.std::_Tuple_impl.0"*
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt11_Tuple_implILm1EJRiEEC2ES0_(%"struct.std::_Tuple_impl.0"* %8, i32* dereferenceable(4) %9)
  %10 = bitcast %"struct.std::_Tuple_impl"* %7 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to %"struct.std::_Head_base.1"*
  %13 = load i32*, i32** %5, align 8
  call void @_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_(%"struct.std::_Head_base.1"* %12, i32* dereferenceable(4) %13)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Tuple_implILm1EJRiEEC2ES0_(%"struct.std::_Tuple_impl.0"*, i32* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  %4 = alloca i32*, align 8
  store %"struct.std::_Tuple_impl.0"* %0, %"struct.std::_Tuple_impl.0"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %3, align 8
  %6 = bitcast %"struct.std::_Tuple_impl.0"* %5 to %"struct.std::_Head_base"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_(%"struct.std::_Head_base"* %6, i32* dereferenceable(4) %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm0ERiLb0EEC2ES0_(%"struct.std::_Head_base.1"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.103
  %6 = load i32, i32* @y.104
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -178686925, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %78
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -178686925, label %18
    i32 -1862852563, label %38
    i32 -971440122, label %71
    i32 -450599777, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %78

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1862852563, i32 -450599777
  store i32 %37, i32* %14
  br label %78

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Head_base.1"*, align 8
  %40 = alloca i32*, align 8
  store %"struct.std::_Head_base.1"* %0, %"struct.std::_Head_base.1"** %39, align 8
  store i32* %1, i32** %40, align 8
  %41 = load %"struct.std::_Head_base.1"*, %"struct.std::_Head_base.1"** %39, align 8
  %42 = getelementptr inbounds %"struct.std::_Head_base.1", %"struct.std::_Head_base.1"* %41, i32 0, i32 0
  %43 = load i32*, i32** %40, align 8
  store i32* %43, i32** %42, align 8
  %44 = load i32, i32* @x.103
  %45 = load i32, i32* @y.104
  %46 = sub i32 %44, 458062002
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 458062002
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -971440122, i32 -450599777
  store i32 %70, i32* %14
  br label %78

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"struct.std::_Head_base.1"*, align 8
  %74 = alloca i32*, align 8
  store %"struct.std::_Head_base.1"* %0, %"struct.std::_Head_base.1"** %73, align 8
  store i32* %1, i32** %74, align 8
  %75 = load %"struct.std::_Head_base.1"*, %"struct.std::_Head_base.1"** %73, align 8
  %76 = getelementptr inbounds %"struct.std::_Head_base.1", %"struct.std::_Head_base.1"* %75, i32 0, i32 0
  %77 = load i32*, i32** %74, align 8
  store i32* %77, i32** %76, align 8
  store i32 -1862852563, i32* %14
  br label %78

; <label>:78:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt10_Head_baseILm1ERiLb0EEC2ES0_(%"struct.std::_Head_base"*, i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.105
  %6 = load i32, i32* @y.106
  %7 = add i32 %5, 1064932045
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1064932045
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 4251603, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %55
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 4251603, label %19
    i32 1402102789, label %27
    i32 617934307, label %48
    i32 1776033658, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %55

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1402102789, i32 1776033658
  store i32 %26, i32* %15
  br label %55

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base"*, align 8
  %29 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %28, align 8
  %31 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %30, i32 0, i32 0
  %32 = load i32*, i32** %29, align 8
  store i32* %32, i32** %31, align 8
  %33 = load i32, i32* @x.105
  %34 = load i32, i32* @y.106
  %35 = add i32 %33, -1153615888
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -1153615888
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  %47 = select i1 %45, i32 617934307, i32 1776033658
  store i32 %47, i32* %15
  br label %55

; <label>:48:                                     ; preds = %16
  ret void

; <label>:49:                                     ; preds = %16
  %50 = alloca %"struct.std::_Head_base"*, align 8
  %51 = alloca i32*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %50, align 8
  store i32* %1, i32** %51, align 8
  %52 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %50, align 8
  %53 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %52, i32 0, i32 0
  %54 = load i32*, i32** %51, align 8
  store i32* %54, i32** %53, align 8
  store i32 1402102789, i32* %15
  br label %55

; <label>:55:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"class.std::tuple"* @_ZSt4moveIRSt5tupleIJRiS1_EEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::tuple"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"class.std::tuple"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.107
  %6 = load i32, i32* @y.108
  %7 = add i32 %5, -205623121
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -205623121
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 231505915, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %49
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 231505915, label %19
    i32 -1572355227, label %27
    i32 -671260052, label %44
    i32 788592622, label %46
  ]

; <label>:18:                                     ; preds = %16
  br label %49

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1572355227, i32 788592622
  store i32 %26, i32* %15
  br label %49

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %28, align 8
  %29 = load %"class.std::tuple"*, %"class.std::tuple"** %28, align 8
  store %"class.std::tuple"* %29, %"class.std::tuple"** %2
  %30 = load i32, i32* @x.107
  %31 = load i32, i32* @y.108
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -671260052, i32 788592622
  store i32 %43, i32* %15
  br label %49

; <label>:44:                                     ; preds = %16
  %45 = load volatile %"class.std::tuple"*, %"class.std::tuple"** %2
  ret %"class.std::tuple"* %45

; <label>:46:                                     ; preds = %16
  %47 = alloca %"class.std::tuple"*, align 8
  store %"class.std::tuple"* %0, %"class.std::tuple"** %47, align 8
  %48 = load %"class.std::tuple"*, %"class.std::tuple"** %47, align 8
  store i32 -1572355227, i32* %15
  br label %49

; <label>:49:                                     ; preds = %46, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.std::_Tuple_impl"* @_ZNSt11_Tuple_implILm0EJRiS0_EEaSEOS1_(%"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"* dereferenceable(16)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.109
  %7 = load i32, i32* @y.110
  %8 = sub i32 %6, 1434856500
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1434856500
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -1841832241, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %87
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1841832241, label %20
    i32 -1521509594, label %28
    i32 -758458357, label %71
    i32 1694495983, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %87

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -1521509594, i32 1694495983
  store i32 %27, i32* %16
  br label %87

; <label>:28:                                     ; preds = %17
  %29 = alloca %"struct.std::_Tuple_impl"*, align 8
  %30 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %29, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %30, align 8
  %31 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %29, align 8
  store %"struct.std::_Tuple_impl"* %31, %"struct.std::_Tuple_impl"** %3
  %32 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %30, align 8
  %33 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %32) #3
  %34 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %33) #3
  %35 = load i32, i32* %34, align 4
  %36 = load volatile %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3
  %37 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %36) #3
  store i32 %35, i32* %37, align 4
  %38 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %30, align 8
  %39 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %38) #3
  %40 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZSt4moveIRSt11_Tuple_implILm1EJRiEEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::_Tuple_impl.0"* dereferenceable(8) %39) #3
  %41 = load volatile %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3
  %42 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %41) #3
  %43 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm1EJRiEEaSEOS1_(%"struct.std::_Tuple_impl.0"* %42, %"struct.std::_Tuple_impl.0"* dereferenceable(8) %40) #3
  %44 = load i32, i32* @x.109
  %45 = load i32, i32* @y.110
  %46 = sub i32 %44, -1372619898
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1372619898
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -758458357, i32 1694495983
  store i32 %70, i32* %16
  br label %87

; <label>:71:                                     ; preds = %17
  %72 = load volatile %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %3
  ret %"struct.std::_Tuple_impl"* %72

; <label>:73:                                     ; preds = %17
  %74 = alloca %"struct.std::_Tuple_impl"*, align 8
  %75 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %74, align 8
  store %"struct.std::_Tuple_impl"* %1, %"struct.std::_Tuple_impl"** %75, align 8
  %76 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %74, align 8
  %77 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %75, align 8
  %78 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %77) #3
  %79 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %78) #3
  %80 = load i32, i32* %79, align 4
  %81 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %76) #3
  store i32 %80, i32* %81, align 4
  %82 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %75, align 8
  %83 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %82) #3
  %84 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZSt4moveIRSt11_Tuple_implILm1EJRiEEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::_Tuple_impl.0"* dereferenceable(8) %83) #3
  %85 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16) %76) #3
  %86 = call dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm1EJRiEEaSEOS1_(%"struct.std::_Tuple_impl.0"* %85, %"struct.std::_Tuple_impl.0"* dereferenceable(8) %84) #3
  store i32 -1521509594, i32* %16
  br label %87

; <label>:87:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.111
  %6 = load i32, i32* @y.112
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 409914515, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 409914515, label %18
    i32 684274015, label %26
    i32 -709210467, label %44
    i32 -1342916522, label %46
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 684274015, i32 -1342916522
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca i32*, align 8
  store i32* %0, i32** %27, align 8
  %28 = load i32*, i32** %27, align 8
  store i32* %28, i32** %2
  %29 = load i32, i32* @x.111
  %30 = load i32, i32* @y.112
  %31 = sub i32 %29, 923569097
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 923569097
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 -709210467, i32 -1342916522
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  %45 = load volatile i32*, i32** %2
  ret i32* %45

; <label>:46:                                     ; preds = %15
  %47 = alloca i32*, align 8
  store i32* %0, i32** %47, align 8
  %48 = load i32*, i32** %47, align 8
  store i32 684274015, i32* %14
  br label %49

; <label>:49:                                     ; preds = %46, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_headERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to i8*
  %5 = getelementptr inbounds i8, i8* %4, i64 8
  %6 = bitcast i8* %5 to %"struct.std::_Head_base.1"*
  %7 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.1"* dereferenceable(8) %6) #3
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZSt4moveIRSt11_Tuple_implILm1EJRiEEEONSt16remove_referenceIT_E4typeEOS5_(%"struct.std::_Tuple_impl.0"* dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  store %"struct.std::_Tuple_impl.0"* %0, %"struct.std::_Tuple_impl.0"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %2, align 8
  ret %"struct.std::_Tuple_impl.0"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm0EJRiS0_EE7_M_tailERS1_(%"struct.std::_Tuple_impl"* dereferenceable(16)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Tuple_impl"*, align 8
  store %"struct.std::_Tuple_impl"* %0, %"struct.std::_Tuple_impl"** %2, align 8
  %3 = load %"struct.std::_Tuple_impl"*, %"struct.std::_Tuple_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Tuple_impl"* %3 to %"struct.std::_Tuple_impl.0"*
  ret %"struct.std::_Tuple_impl.0"* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.std::_Tuple_impl.0"* @_ZNSt11_Tuple_implILm1EJRiEEaSEOS1_(%"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"* dereferenceable(8)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  %4 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  store %"struct.std::_Tuple_impl.0"* %0, %"struct.std::_Tuple_impl.0"** %3, align 8
  store %"struct.std::_Tuple_impl.0"* %1, %"struct.std::_Tuple_impl.0"** %4, align 8
  %5 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %3, align 8
  %6 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %4, align 8
  %7 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJRiEE7_M_headERS1_(%"struct.std::_Tuple_impl.0"* dereferenceable(8) %6) #3
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %7) #3
  %9 = load i32, i32* %8, align 4
  %10 = call dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJRiEE7_M_headERS1_(%"struct.std::_Tuple_impl.0"* dereferenceable(8) %5) #3
  store i32 %9, i32* %10, align 4
  ret %"struct.std::_Tuple_impl.0"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm0ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base.1"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.121
  %6 = load i32, i32* @y.122
  %7 = add i32 %5, 140390370
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 140390370
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -984570685, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -984570685, label %19
    i32 -2077296861, label %27
    i32 1082161575, label %59
    i32 -564658685, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -2077296861, i32 -564658685
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Head_base.1"*, align 8
  store %"struct.std::_Head_base.1"* %0, %"struct.std::_Head_base.1"** %28, align 8
  %29 = load %"struct.std::_Head_base.1"*, %"struct.std::_Head_base.1"** %28, align 8
  %30 = getelementptr inbounds %"struct.std::_Head_base.1", %"struct.std::_Head_base.1"* %29, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  store i32* %31, i32** %2
  %32 = load i32, i32* @x.121
  %33 = load i32, i32* @y.122
  %34 = add i32 %32, -1310883587
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1310883587
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 true, true
  %45 = and i1 %42, true
  %46 = and i1 %40, %44
  %47 = and i1 %43, true
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 true, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 1082161575, i32 -564658685
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile i32*, i32** %2
  ret i32* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Head_base.1"*, align 8
  store %"struct.std::_Head_base.1"* %0, %"struct.std::_Head_base.1"** %62, align 8
  %63 = load %"struct.std::_Head_base.1"*, %"struct.std::_Head_base.1"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Head_base.1", %"struct.std::_Head_base.1"* %63, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  store i32 -2077296861, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt11_Tuple_implILm1EJRiEE7_M_headERS1_(%"struct.std::_Tuple_impl.0"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.123
  %6 = load i32, i32* @y.124
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -326985526, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %65
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -326985526, label %18
    i32 372733999, label %26
    i32 721850997, label %58
    i32 1537118003, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %65

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 372733999, i32 1537118003
  store i32 %25, i32* %14
  br label %65

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  store %"struct.std::_Tuple_impl.0"* %0, %"struct.std::_Tuple_impl.0"** %27, align 8
  %28 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %27, align 8
  %29 = bitcast %"struct.std::_Tuple_impl.0"* %28 to %"struct.std::_Head_base"*
  %30 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %29) #3
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.123
  %32 = load i32, i32* @y.124
  %33 = add i32 %31, -896510428
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -896510428
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 true, true
  %44 = and i1 %41, true
  %45 = and i1 %39, %43
  %46 = and i1 %42, true
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 true, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 721850997, i32 1537118003
  store i32 %57, i32* %14
  br label %65

; <label>:58:                                     ; preds = %15
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %15
  %61 = alloca %"struct.std::_Tuple_impl.0"*, align 8
  store %"struct.std::_Tuple_impl.0"* %0, %"struct.std::_Tuple_impl.0"** %61, align 8
  %62 = load %"struct.std::_Tuple_impl.0"*, %"struct.std::_Tuple_impl.0"** %61, align 8
  %63 = bitcast %"struct.std::_Tuple_impl.0"* %62 to %"struct.std::_Head_base"*
  %64 = call dereferenceable(4) i32* @_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8) %63) #3
  store i32 372733999, i32* %14
  br label %65

; <label>:65:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt10_Head_baseILm1ERiLb0EE7_M_headERS1_(%"struct.std::_Head_base"* dereferenceable(8)) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Head_base"*, align 8
  store %"struct.std::_Head_base"* %0, %"struct.std::_Head_base"** %2, align 8
  %3 = load %"struct.std::_Head_base"*, %"struct.std::_Head_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Head_base", %"struct.std::_Head_base"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEC2Ev(%"class.std::vector"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.127
  %7 = load i32, i32* @y.128
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = icmp slt i32 %7, 10
  %15 = xor i1 %13, true
  %16 = xor i1 %14, true
  %17 = xor i1 true, true
  %18 = and i1 %15, true
  %19 = and i1 %13, %17
  %20 = and i1 %16, true
  %21 = and i1 %14, %17
  %22 = or i1 %18, %19
  %23 = or i1 %20, %21
  %24 = xor i1 %22, %23
  %25 = or i1 %15, %16
  %26 = xor i1 %25, true
  %27 = or i1 true, %17
  %28 = and i1 %26, %27
  %29 = or i1 %24, %28
  %30 = or i1 %13, %14
  br i1 %29, label %31, label %50

; <label>:31:                                     ; preds = %5, %50
  %32 = load i32, i32* @x.127
  %33 = load i32, i32* @y.128
  %34 = sub i32 %32, -577090740
  %35 = sub i32 %34, 1
  %36 = add i32 %35, -577090740
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %31
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #8
  unreachable

; <label>:50:                                     ; preds = %31, %5
  br label %31
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2Ev(%"class.std::vector.3"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  invoke void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.4"* %4)
          to label %5 unwind label %47

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.129
  %7 = load i32, i32* @y.130
  %8 = add i32 %6, -649143438
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -649143438
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 true, true
  %19 = and i1 %16, true
  %20 = and i1 %14, %18
  %21 = and i1 %17, true
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 true, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %50

; <label>:32:                                     ; preds = %5, %50
  %33 = load i32, i32* @x.129
  %34 = load i32, i32* @y.130
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  br i1 %44, label %46, label %50

; <label>:46:                                     ; preds = %32
  ret void

; <label>:47:                                     ; preds = %1
  %48 = landingpad { i8*, i32 }
          catch i8* null
  %49 = extractvalue { i8*, i32 } %48, 0
  call void @__clang_call_terminate(i8* %49) #8
  unreachable

; <label>:50:                                     ; preds = %32, %5
  br label %32
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE6resizeEm(%"class.std::vector"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::vector"*
  %6 = alloca %"class.std::vector"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::vector"*, %"class.std::vector"** %6, align 8
  store %"class.std::vector"* %8, %"class.std::vector"** %5
  %9 = load i64, i64* %7, align 8
  store i64 %9, i64* %4
  %10 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %11 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %10) #3
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 -1853201251, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %154
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -1853201251, label %16
    i32 -22178499, label %21
    i32 -688841109, label %37
    i32 386573763, label %73
    i32 -709283609, label %74
    i32 -1062544440, label %80
    i32 1762171259, label %96
    i32 564892665, label %132
    i32 1526451469, label %133
    i32 1046997197, label %134
    i32 -1285971912, label %135
    i32 -1799643846, label %145
  ]

; <label>:15:                                     ; preds = %13
  br label %154

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -22178499, i32 -709283609
  store i32 %20, i32* %12
  br label %154

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.131
  %23 = load i32, i32* @y.132
  %24 = add i32 %22, 1247223445
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, 1247223445
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 -688841109, i32 -1285971912
  store i32 %36, i32* %12
  br label %154

; <label>:37:                                     ; preds = %13
  %38 = load i64, i64* %7, align 8
  %39 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %40 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %39) #3
  %41 = add i64 %38, -3451175225184053932
  %42 = sub i64 %41, %40
  %43 = sub i64 %42, -3451175225184053932
  %44 = sub i64 %38, %40
  %45 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"* %45, i64 %43)
  %46 = load i32, i32* @x.131
  %47 = load i32, i32* @y.132
  %48 = sub i32 %46, 1008701819
  %49 = sub i32 %48, 1
  %50 = add i32 %49, 1008701819
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 386573763, i32 -1285971912
  store i32 %72, i32* %12
  br label %154

; <label>:73:                                     ; preds = %13
  store i32 1046997197, i32* %12
  br label %154

; <label>:74:                                     ; preds = %13
  %75 = load i64, i64* %7, align 8
  %76 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %77 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %76) #3
  %78 = icmp ult i64 %75, %77
  %79 = select i1 %78, i32 -1062544440, i32 1526451469
  store i32 %79, i32* %12
  br label %154

; <label>:80:                                     ; preds = %13
  %81 = load i32, i32* @x.131
  %82 = load i32, i32* @y.132
  %83 = sub i32 %81, 1467224029
  %84 = sub i32 %83, 1
  %85 = add i32 %84, 1467224029
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  %95 = select i1 %93, i32 1762171259, i32 -1799643846
  store i32 %95, i32* %12
  br label %154

; <label>:96:                                     ; preds = %13
  %97 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %98 = bitcast %"class.std::vector"* %97 to %"struct.std::_Vector_base"*
  %99 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %98, i32 0, i32 0
  %100 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %99, i32 0, i32 0
  %101 = load %"class.std::vector.2"*, %"class.std::vector.2"** %100, align 8
  %102 = load i64, i64* %7, align 8
  %103 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %101, i64 %102
  %104 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %104, %"class.std::vector.2"* %103) #3
  %105 = load i32, i32* @x.131
  %106 = load i32, i32* @y.132
  %107 = sub i32 %105, -648357820
  %108 = sub i32 %107, 1
  %109 = add i32 %108, -648357820
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 564892665, i32 -1799643846
  store i32 %131, i32* %12
  br label %154

; <label>:132:                                    ; preds = %13
  store i32 1526451469, i32* %12
  br label %154

; <label>:133:                                    ; preds = %13
  store i32 1046997197, i32* %12
  br label %154

; <label>:134:                                    ; preds = %13
  ret void

; <label>:135:                                    ; preds = %13
  %136 = load i64, i64* %7, align 8
  %137 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %138 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %137) #3
  %139 = shl i64 %136, %138
  %140 = sub i64 %136, 6111546673156249794
  %141 = sub i64 %140, %138
  %142 = add i64 %141, 6111546673156249794
  %143 = sub i64 %136, %138
  %144 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"* %144, i64 %142)
  store i32 -688841109, i32* %12
  br label %154

; <label>:145:                                    ; preds = %13
  %146 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  %147 = bitcast %"class.std::vector"* %146 to %"struct.std::_Vector_base"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load %"class.std::vector.2"*, %"class.std::vector.2"** %149, align 8
  %151 = load i64, i64* %7, align 8
  %152 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %150, i64 %151
  %153 = load volatile %"class.std::vector"*, %"class.std::vector"** %5
  call void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"* %153, %"class.std::vector.2"* %152) #3
  store i32 1762171259, i32* %12
  br label %154

; <label>:154:                                    ; preds = %145, %135, %133, %132, %96, %80, %74, %73, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EEC2Ev(%"struct.std::_Vector_base"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %2, align 8
  %3 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %0, %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"*, %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %3 to %"class.std::allocator"*
  call void @_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEEC2Ev(%"class.std::allocator"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 0
  store %"class.std::vector.2"* null, %"class.std::vector.2"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 1
  store %"class.std::vector.2"* null, %"class.std::vector.2"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %3, i32 0, i32 2
  store %"class.std::vector.2"* null, %"class.std::vector.2"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaISt6vectorIN7networkIiE4edgeESaIS2_EEEC2Ev(%"class.std::allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.137
  %5 = load i32, i32* @y.138
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 1357037246, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %49
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 1357037246, label %17
    i32 1183454545, label %25
    i32 1095328145, label %44
    i32 318630779, label %45
  ]

; <label>:16:                                     ; preds = %14
  br label %49

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1183454545, i32 318630779
  store i32 %24, i32* %13
  br label %49

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %26, align 8
  %27 = load %"class.std::allocator"*, %"class.std::allocator"** %26, align 8
  %28 = bitcast %"class.std::allocator"* %27 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %28) #3
  %29 = load i32, i32* @x.137
  %30 = load i32, i32* @y.138
  %31 = add i32 %29, 1740516522
  %32 = sub i32 %31, 1
  %33 = sub i32 %32, 1740516522
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1095328145, i32 318630779
  store i32 %43, i32* %13
  br label %49

; <label>:44:                                     ; preds = %14
  ret void

; <label>:45:                                     ; preds = %14
  %46 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %46, align 8
  %47 = load %"class.std::allocator"*, %"class.std::allocator"** %46, align 8
  %48 = bitcast %"class.std::allocator"* %47 to %"class.__gnu_cxx::new_allocator"*
  call void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator"* %48) #3
  store i32 1183454545, i32* %13
  br label %49

; <label>:49:                                     ; preds = %45, %25, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEEC2Ev(%"class.__gnu_cxx::new_allocator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2Ev(%"struct.std::_Vector_base.4"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.5"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 0
  store i32* null, i32** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 1
  store i32* null, i32** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %3, i32 0, i32 2
  store i32* null, i32** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2Ev(%"class.std::allocator.5"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2Ev(%"class.__gnu_cxx::new_allocator.6"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.149
  %6 = load i32, i32* @y.150
  %7 = sub i32 %5, 997014859
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 997014859
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 362595012, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %127
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 362595012, label %19
    i32 -883645875, label %39
    i32 -1204219715, label %84
    i32 -893896072, label %86
  ]

; <label>:18:                                     ; preds = %16
  br label %127

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -883645875, i32 -893896072
  store i32 %38, i32* %15
  br label %127

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %40, align 8
  %41 = load %"class.std::vector"*, %"class.std::vector"** %40, align 8
  %42 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"class.std::vector.2"*, %"class.std::vector.2"** %44, align 8
  %46 = bitcast %"class.std::vector"* %41 to %"struct.std::_Vector_base"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"class.std::vector.2"*, %"class.std::vector.2"** %48, align 8
  %50 = ptrtoint %"class.std::vector.2"* %45 to i64
  %51 = ptrtoint %"class.std::vector.2"* %49 to i64
  %52 = add i64 %50, 1198462073204333713
  %53 = sub i64 %52, %51
  %54 = sub i64 %53, 1198462073204333713
  %55 = sub i64 %50, %51
  %56 = sdiv exact i64 %54, 24
  store i64 %56, i64* %2
  %57 = load i32, i32* @x.149
  %58 = load i32, i32* @y.150
  %59 = sub i32 %57, 1618640117
  %60 = sub i32 %59, 1
  %61 = add i32 %60, 1618640117
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = xor i1 %65, true
  %68 = xor i1 %66, true
  %69 = xor i1 false, true
  %70 = and i1 %67, false
  %71 = and i1 %65, %69
  %72 = and i1 %68, false
  %73 = and i1 %66, %69
  %74 = or i1 %70, %71
  %75 = or i1 %72, %73
  %76 = xor i1 %74, %75
  %77 = or i1 %67, %68
  %78 = xor i1 %77, true
  %79 = or i1 false, %69
  %80 = and i1 %78, %79
  %81 = or i1 %76, %80
  %82 = or i1 %65, %66
  %83 = select i1 %81, i32 -1204219715, i32 -893896072
  store i32 %83, i32* %15
  br label %127

; <label>:84:                                     ; preds = %16
  %85 = load volatile i64, i64* %2
  ret i64 %85

; <label>:86:                                     ; preds = %16
  %87 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %87, align 8
  %88 = load %"class.std::vector"*, %"class.std::vector"** %87, align 8
  %89 = bitcast %"class.std::vector"* %88 to %"struct.std::_Vector_base"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %89, i32 0, i32 0
  %91 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %90, i32 0, i32 1
  %92 = load %"class.std::vector.2"*, %"class.std::vector.2"** %91, align 8
  %93 = bitcast %"class.std::vector"* %88 to %"struct.std::_Vector_base"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %94, i32 0, i32 0
  %96 = load %"class.std::vector.2"*, %"class.std::vector.2"** %95, align 8
  %97 = ptrtoint %"class.std::vector.2"* %92 to i64
  %98 = ptrtoint %"class.std::vector.2"* %96 to i64
  %99 = shl i64 %97, %98
  %100 = shl i64 %97, %98
  %101 = sub i64 0, %97
  %102 = add i64 0, %101
  %103 = sub i64 0, %97
  %104 = add i64 %102, -1130407248948390972
  %105 = add i64 %104, %98
  %106 = sub i64 %105, -1130407248948390972
  %107 = add i64 %102, %98
  %108 = sub i64 0, %98
  %109 = add i64 %97, %108
  %110 = sub i64 %97, %98
  %111 = shl i64 %109, 24
  %112 = sub i64 %109, -3201453998054439617
  %113 = sub i64 %112, 24
  %114 = add i64 %113, -3201453998054439617
  %115 = sub i64 %109, 24
  %116 = mul i64 %114, 24
  %117 = shl i64 %109, 24
  %118 = shl i64 %109, 24
  %119 = add i64 0, -7627476588957323345
  %120 = sub i64 %119, %109
  %121 = sub i64 %120, -7627476588957323345
  %122 = sub i64 0, %109
  %123 = sub i64 0, 24
  %124 = sub i64 %121, %123
  %125 = add i64 %121, 24
  %126 = sdiv exact i64 %109, 24
  store i32 -883645875, i32* %15
  br label %127

; <label>:127:                                    ; preds = %86, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE17_M_default_appendEm(%"class.std::vector"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.151
  %4 = load i32, i32* @y.152
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %514

; <label>:28:                                     ; preds = %2, %514
  %29 = alloca %"class.std::vector"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca %"class.std::vector.2"*, align 8
  %34 = alloca %"class.std::vector.2"*, align 8
  %35 = alloca i8*
  %36 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %29, align 8
  store i64 %1, i64* %30, align 8
  %37 = load %"class.std::vector"*, %"class.std::vector"** %29, align 8
  %38 = load i64, i64* %30, align 8
  %39 = icmp ne i64 %38, 0
  %40 = load i32, i32* @x.151
  %41 = load i32, i32* @y.152
  %42 = sub i32 0, 1
  %43 = add i32 %40, %42
  %44 = sub i32 %40, 1
  %45 = mul i32 %40, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %41, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %514

; <label>:53:                                     ; preds = %28
  br i1 %39, label %54, label %474

; <label>:54:                                     ; preds = %53
  %55 = load i32, i32* @x.151
  %56 = load i32, i32* @y.152
  %57 = add i32 %55, 826729590
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 826729590
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = and i1 %63, %64
  %66 = xor i1 %63, %64
  %67 = or i1 %65, %66
  %68 = or i1 %63, %64
  br i1 %67, label %69, label %526

; <label>:69:                                     ; preds = %54, %526
  %70 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %71 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %70, i32 0, i32 0
  %72 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %71, i32 0, i32 2
  %73 = load %"class.std::vector.2"*, %"class.std::vector.2"** %72, align 8
  %74 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %75 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %74, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %75, i32 0, i32 1
  %77 = load %"class.std::vector.2"*, %"class.std::vector.2"** %76, align 8
  %78 = ptrtoint %"class.std::vector.2"* %73 to i64
  %79 = ptrtoint %"class.std::vector.2"* %77 to i64
  %80 = sub i64 %78, -8329945834368681836
  %81 = sub i64 %80, %79
  %82 = add i64 %81, -8329945834368681836
  %83 = sub i64 %78, %79
  %84 = sdiv exact i64 %82, 24
  %85 = load i64, i64* %30, align 8
  %86 = icmp uge i64 %84, %85
  %87 = load i32, i32* @x.151
  %88 = load i32, i32* @y.152
  %89 = add i32 %87, -1864565958
  %90 = sub i32 %89, 1
  %91 = sub i32 %90, -1864565958
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = and i1 %95, %96
  %98 = xor i1 %95, %96
  %99 = or i1 %97, %98
  %100 = or i1 %95, %96
  br i1 %99, label %101, label %526

; <label>:101:                                    ; preds = %69
  br i1 %86, label %102, label %114

; <label>:102:                                    ; preds = %101
  %103 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %104 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %103, i32 0, i32 0
  %105 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %104, i32 0, i32 1
  %106 = load %"class.std::vector.2"*, %"class.std::vector.2"** %105, align 8
  %107 = load i64, i64* %30, align 8
  %108 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %109 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %108) #3
  %110 = call %"class.std::vector.2"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7networkIiE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.2"* %106, i64 %107, %"class.std::allocator"* dereferenceable(1) %109)
  %111 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %112 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %112, i32 0, i32 1
  store %"class.std::vector.2"* %110, %"class.std::vector.2"** %113, align 8
  br label %431

; <label>:114:                                    ; preds = %101
  %115 = load i64, i64* %30, align 8
  %116 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector"* %37, i64 %115, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0))
  store i64 %116, i64* %31, align 8
  %117 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %37) #3
  store i64 %117, i64* %32, align 8
  %118 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %119 = load i64, i64* %31, align 8
  %120 = call %"class.std::vector.2"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"* %118, i64 %119)
  store %"class.std::vector.2"* %120, %"class.std::vector.2"** %33, align 8
  %121 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  store %"class.std::vector.2"* %121, %"class.std::vector.2"** %34, align 8
  %122 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %123 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %122, i32 0, i32 0
  %124 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %123, i32 0, i32 0
  %125 = load %"class.std::vector.2"*, %"class.std::vector.2"** %124, align 8
  %126 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %127 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %126, i32 0, i32 0
  %128 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %127, i32 0, i32 1
  %129 = load %"class.std::vector.2"*, %"class.std::vector.2"** %128, align 8
  %130 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %131 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %132 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %131) #3
  %133 = invoke %"class.std::vector.2"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7networkIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.2"* %125, %"class.std::vector.2"* %129, %"class.std::vector.2"* %130, %"class.std::allocator"* dereferenceable(1) %132)
          to label %134 unwind label %170

; <label>:134:                                    ; preds = %114
  %135 = load i32, i32* @x.151
  %136 = load i32, i32* @y.152
  %137 = sub i32 %135, 948581974
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 948581974
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  br i1 %147, label %149, label %577

; <label>:149:                                    ; preds = %134, %577
  store %"class.std::vector.2"* %133, %"class.std::vector.2"** %34, align 8
  %150 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %151 = load i64, i64* %30, align 8
  %152 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %153 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %152) #3
  %154 = load i32, i32* @x.151
  %155 = load i32, i32* @y.152
  %156 = sub i32 0, 1
  %157 = add i32 %154, %156
  %158 = sub i32 %154, 1
  %159 = mul i32 %154, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %155, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %577

; <label>:167:                                    ; preds = %149
  %168 = invoke %"class.std::vector.2"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7networkIiE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.2"* %150, i64 %151, %"class.std::allocator"* dereferenceable(1) %153)
          to label %169 unwind label %170

; <label>:169:                                    ; preds = %167
  store %"class.std::vector.2"* %168, %"class.std::vector.2"** %34, align 8
  br label %332

; <label>:170:                                    ; preds = %167, %114
  %171 = load i32, i32* @x.151
  %172 = load i32, i32* @y.152
  %173 = sub i32 %171, 1118375929
  %174 = sub i32 %173, 1
  %175 = add i32 %174, 1118375929
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %582

; <label>:185:                                    ; preds = %170, %582
  %186 = landingpad { i8*, i32 }
          catch i8* null
  %187 = extractvalue { i8*, i32 } %186, 0
  store i8* %187, i8** %35, align 8
  %188 = extractvalue { i8*, i32 } %186, 1
  store i32 %188, i32* %36, align 4
  %189 = load i32, i32* @x.151
  %190 = load i32, i32* @y.152
  %191 = add i32 %189, 1543373712
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, 1543373712
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  br i1 %201, label %203, label %582

; <label>:203:                                    ; preds = %185
  br label %204

; <label>:204:                                    ; preds = %203
  %205 = load i32, i32* @x.151
  %206 = load i32, i32* @y.152
  %207 = sub i32 0, 1
  %208 = add i32 %205, %207
  %209 = sub i32 %205, 1
  %210 = mul i32 %205, %208
  %211 = urem i32 %210, 2
  %212 = icmp eq i32 %211, 0
  %213 = icmp slt i32 %206, 10
  %214 = and i1 %212, %213
  %215 = xor i1 %212, %213
  %216 = or i1 %214, %215
  %217 = or i1 %212, %213
  br i1 %216, label %218, label %586

; <label>:218:                                    ; preds = %204, %586
  %219 = load i8*, i8** %35, align 8
  %220 = call i8* @__cxa_begin_catch(i8* %219) #3
  %221 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %222 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %223 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %224 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %223) #3
  %225 = load i32, i32* @x.151
  %226 = load i32, i32* @y.152
  %227 = sub i32 %225, -878013672
  %228 = sub i32 %227, 1
  %229 = add i32 %228, -878013672
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %586

; <label>:239:                                    ; preds = %218
  invoke void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"* %221, %"class.std::vector.2"* %222, %"class.std::allocator"* dereferenceable(1) %224)
          to label %240 unwind label %298

; <label>:240:                                    ; preds = %239
  %241 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %242 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %243 = load i64, i64* %31, align 8
  invoke void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %241, %"class.std::vector.2"* %242, i64 %243)
          to label %244 unwind label %298

; <label>:244:                                    ; preds = %240
  %245 = load i32, i32* @x.151
  %246 = load i32, i32* @y.152
  %247 = sub i32 0, 1
  %248 = add i32 %245, %247
  %249 = sub i32 %245, 1
  %250 = mul i32 %245, %248
  %251 = urem i32 %250, 2
  %252 = icmp eq i32 %251, 0
  %253 = icmp slt i32 %246, 10
  %254 = xor i1 %252, true
  %255 = xor i1 %253, true
  %256 = xor i1 false, true
  %257 = and i1 %254, false
  %258 = and i1 %252, %256
  %259 = and i1 %255, false
  %260 = and i1 %253, %256
  %261 = or i1 %257, %258
  %262 = or i1 %259, %260
  %263 = xor i1 %261, %262
  %264 = or i1 %254, %255
  %265 = xor i1 %264, true
  %266 = or i1 false, %256
  %267 = and i1 %265, %266
  %268 = or i1 %263, %267
  %269 = or i1 %252, %253
  br i1 %268, label %270, label %593

; <label>:270:                                    ; preds = %244, %593
  %271 = load i32, i32* @x.151
  %272 = load i32, i32* @y.152
  %273 = sub i32 %271, -1660267677
  %274 = sub i32 %273, 1
  %275 = add i32 %274, -1660267677
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = xor i1 %279, true
  %282 = xor i1 %280, true
  %283 = xor i1 true, true
  %284 = and i1 %281, true
  %285 = and i1 %279, %283
  %286 = and i1 %282, true
  %287 = and i1 %280, %283
  %288 = or i1 %284, %285
  %289 = or i1 %286, %287
  %290 = xor i1 %288, %289
  %291 = or i1 %281, %282
  %292 = xor i1 %291, true
  %293 = or i1 true, %283
  %294 = and i1 %292, %293
  %295 = or i1 %290, %294
  %296 = or i1 %279, %280
  br i1 %295, label %297, label %593

; <label>:297:                                    ; preds = %270
  invoke void @__cxa_rethrow() #12
          to label %513 unwind label %298

; <label>:298:                                    ; preds = %297, %240, %239
  %299 = load i32, i32* @x.151
  %300 = load i32, i32* @y.152
  %301 = sub i32 0, 1
  %302 = add i32 %299, %301
  %303 = sub i32 %299, 1
  %304 = mul i32 %299, %302
  %305 = urem i32 %304, 2
  %306 = icmp eq i32 %305, 0
  %307 = icmp slt i32 %300, 10
  %308 = and i1 %306, %307
  %309 = xor i1 %306, %307
  %310 = or i1 %308, %309
  %311 = or i1 %306, %307
  br i1 %310, label %312, label %594

; <label>:312:                                    ; preds = %298, %594
  %313 = landingpad { i8*, i32 }
          cleanup
  %314 = extractvalue { i8*, i32 } %313, 0
  store i8* %314, i8** %35, align 8
  %315 = extractvalue { i8*, i32 } %313, 1
  store i32 %315, i32* %36, align 4
  %316 = load i32, i32* @x.151
  %317 = load i32, i32* @y.152
  %318 = add i32 %316, -1751724599
  %319 = sub i32 %318, 1
  %320 = sub i32 %319, -1751724599
  %321 = sub i32 %316, 1
  %322 = mul i32 %316, %320
  %323 = urem i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = icmp slt i32 %317, 10
  %326 = and i1 %324, %325
  %327 = xor i1 %324, %325
  %328 = or i1 %326, %327
  %329 = or i1 %324, %325
  br i1 %328, label %330, label %594

; <label>:330:                                    ; preds = %312
  invoke void @__cxa_end_catch()
          to label %331 unwind label %510

; <label>:331:                                    ; preds = %330
  br label %475

; <label>:332:                                    ; preds = %169
  %333 = load i32, i32* @x.151
  %334 = load i32, i32* @y.152
  %335 = sub i32 %333, -926627555
  %336 = sub i32 %335, 1
  %337 = add i32 %336, -926627555
  %338 = sub i32 %333, 1
  %339 = mul i32 %333, %337
  %340 = urem i32 %339, 2
  %341 = icmp eq i32 %340, 0
  %342 = icmp slt i32 %334, 10
  %343 = xor i1 %341, true
  %344 = xor i1 %342, true
  %345 = xor i1 true, true
  %346 = and i1 %343, true
  %347 = and i1 %341, %345
  %348 = and i1 %344, true
  %349 = and i1 %342, %345
  %350 = or i1 %346, %347
  %351 = or i1 %348, %349
  %352 = xor i1 %350, %351
  %353 = or i1 %343, %344
  %354 = xor i1 %353, true
  %355 = or i1 true, %345
  %356 = and i1 %354, %355
  %357 = or i1 %352, %356
  %358 = or i1 %341, %342
  br i1 %357, label %359, label %598

; <label>:359:                                    ; preds = %332, %598
  %360 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %361 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %360, i32 0, i32 0
  %362 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %361, i32 0, i32 0
  %363 = load %"class.std::vector.2"*, %"class.std::vector.2"** %362, align 8
  %364 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %365 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %364, i32 0, i32 0
  %366 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %365, i32 0, i32 1
  %367 = load %"class.std::vector.2"*, %"class.std::vector.2"** %366, align 8
  %368 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %369 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %368) #3
  call void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"* %363, %"class.std::vector.2"* %367, %"class.std::allocator"* dereferenceable(1) %369)
  %370 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %371 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %372 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %371, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %372, i32 0, i32 0
  %374 = load %"class.std::vector.2"*, %"class.std::vector.2"** %373, align 8
  %375 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %376 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %375, i32 0, i32 0
  %377 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %376, i32 0, i32 2
  %378 = load %"class.std::vector.2"*, %"class.std::vector.2"** %377, align 8
  %379 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %380 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %379, i32 0, i32 0
  %381 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %380, i32 0, i32 0
  %382 = load %"class.std::vector.2"*, %"class.std::vector.2"** %381, align 8
  %383 = ptrtoint %"class.std::vector.2"* %378 to i64
  %384 = ptrtoint %"class.std::vector.2"* %382 to i64
  %385 = add i64 %383, -4340913376253631244
  %386 = sub i64 %385, %384
  %387 = sub i64 %386, -4340913376253631244
  %388 = sub i64 %383, %384
  %389 = sdiv exact i64 %387, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %370, %"class.std::vector.2"* %374, i64 %389)
  %390 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %391 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %392 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %391, i32 0, i32 0
  %393 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %392, i32 0, i32 0
  store %"class.std::vector.2"* %390, %"class.std::vector.2"** %393, align 8
  %394 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %395 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %396 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %395, i32 0, i32 0
  %397 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %396, i32 0, i32 1
  store %"class.std::vector.2"* %394, %"class.std::vector.2"** %397, align 8
  %398 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %399 = load i64, i64* %31, align 8
  %400 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %398, i64 %399
  %401 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %402 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %401, i32 0, i32 0
  %403 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %402, i32 0, i32 2
  store %"class.std::vector.2"* %400, %"class.std::vector.2"** %403, align 8
  %404 = load i32, i32* @x.151
  %405 = load i32, i32* @y.152
  %406 = add i32 %404, 75418779
  %407 = sub i32 %406, 1
  %408 = sub i32 %407, 75418779
  %409 = sub i32 %404, 1
  %410 = mul i32 %404, %408
  %411 = urem i32 %410, 2
  %412 = icmp eq i32 %411, 0
  %413 = icmp slt i32 %405, 10
  %414 = xor i1 %412, true
  %415 = xor i1 %413, true
  %416 = xor i1 true, true
  %417 = and i1 %414, true
  %418 = and i1 %412, %416
  %419 = and i1 %415, true
  %420 = and i1 %413, %416
  %421 = or i1 %417, %418
  %422 = or i1 %419, %420
  %423 = xor i1 %421, %422
  %424 = or i1 %414, %415
  %425 = xor i1 %424, true
  %426 = or i1 true, %416
  %427 = and i1 %425, %426
  %428 = or i1 %423, %427
  %429 = or i1 %412, %413
  br i1 %428, label %430, label %598

; <label>:430:                                    ; preds = %359
  br label %431

; <label>:431:                                    ; preds = %430, %102
  %432 = load i32, i32* @x.151
  %433 = load i32, i32* @y.152
  %434 = add i32 %432, -179193374
  %435 = sub i32 %434, 1
  %436 = sub i32 %435, -179193374
  %437 = sub i32 %432, 1
  %438 = mul i32 %432, %436
  %439 = urem i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = icmp slt i32 %433, 10
  %442 = and i1 %440, %441
  %443 = xor i1 %440, %441
  %444 = or i1 %442, %443
  %445 = or i1 %440, %441
  br i1 %444, label %446, label %657

; <label>:446:                                    ; preds = %431, %657
  %447 = load i32, i32* @x.151
  %448 = load i32, i32* @y.152
  %449 = add i32 %447, -1037266619
  %450 = sub i32 %449, 1
  %451 = sub i32 %450, -1037266619
  %452 = sub i32 %447, 1
  %453 = mul i32 %447, %451
  %454 = urem i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = icmp slt i32 %448, 10
  %457 = xor i1 %455, true
  %458 = xor i1 %456, true
  %459 = xor i1 false, true
  %460 = and i1 %457, false
  %461 = and i1 %455, %459
  %462 = and i1 %458, false
  %463 = and i1 %456, %459
  %464 = or i1 %460, %461
  %465 = or i1 %462, %463
  %466 = xor i1 %464, %465
  %467 = or i1 %457, %458
  %468 = xor i1 %467, true
  %469 = or i1 false, %459
  %470 = and i1 %468, %469
  %471 = or i1 %466, %470
  %472 = or i1 %455, %456
  br i1 %471, label %473, label %657

; <label>:473:                                    ; preds = %446
  br label %474

; <label>:474:                                    ; preds = %473, %53
  ret void

; <label>:475:                                    ; preds = %331
  %476 = load i32, i32* @x.151
  %477 = load i32, i32* @y.152
  %478 = sub i32 %476, 830898600
  %479 = sub i32 %478, 1
  %480 = add i32 %479, 830898600
  %481 = sub i32 %476, 1
  %482 = mul i32 %476, %480
  %483 = urem i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = icmp slt i32 %477, 10
  %486 = and i1 %484, %485
  %487 = xor i1 %484, %485
  %488 = or i1 %486, %487
  %489 = or i1 %484, %485
  br i1 %488, label %490, label %658

; <label>:490:                                    ; preds = %475, %658
  %491 = load i8*, i8** %35, align 8
  %492 = load i32, i32* %36, align 4
  %493 = insertvalue { i8*, i32 } undef, i8* %491, 0
  %494 = insertvalue { i8*, i32 } %493, i32 %492, 1
  %495 = load i32, i32* @x.151
  %496 = load i32, i32* @y.152
  %497 = add i32 %495, -1058064323
  %498 = sub i32 %497, 1
  %499 = sub i32 %498, -1058064323
  %500 = sub i32 %495, 1
  %501 = mul i32 %495, %499
  %502 = urem i32 %501, 2
  %503 = icmp eq i32 %502, 0
  %504 = icmp slt i32 %496, 10
  %505 = and i1 %503, %504
  %506 = xor i1 %503, %504
  %507 = or i1 %505, %506
  %508 = or i1 %503, %504
  br i1 %507, label %509, label %658

; <label>:509:                                    ; preds = %490
  resume { i8*, i32 } %494

; <label>:510:                                    ; preds = %330
  %511 = landingpad { i8*, i32 }
          catch i8* null
  %512 = extractvalue { i8*, i32 } %511, 0
  call void @__clang_call_terminate(i8* %512) #8
  unreachable

; <label>:513:                                    ; preds = %297
  unreachable

; <label>:514:                                    ; preds = %28, %2
  %515 = alloca %"class.std::vector"*, align 8
  %516 = alloca i64, align 8
  %517 = alloca i64, align 8
  %518 = alloca i64, align 8
  %519 = alloca %"class.std::vector.2"*, align 8
  %520 = alloca %"class.std::vector.2"*, align 8
  %521 = alloca i8*
  %522 = alloca i32
  store %"class.std::vector"* %0, %"class.std::vector"** %515, align 8
  store i64 %1, i64* %516, align 8
  %523 = load %"class.std::vector"*, %"class.std::vector"** %515, align 8
  %524 = load i64, i64* %516, align 8
  %525 = icmp ne i64 %524, 0
  br label %28

; <label>:526:                                    ; preds = %69, %54
  %527 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %528 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %527, i32 0, i32 0
  %529 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %528, i32 0, i32 2
  %530 = load %"class.std::vector.2"*, %"class.std::vector.2"** %529, align 8
  %531 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %532 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %531, i32 0, i32 0
  %533 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %532, i32 0, i32 1
  %534 = load %"class.std::vector.2"*, %"class.std::vector.2"** %533, align 8
  %535 = ptrtoint %"class.std::vector.2"* %530 to i64
  %536 = ptrtoint %"class.std::vector.2"* %534 to i64
  %537 = sub i64 %535, -8026102192022914730
  %538 = sub i64 %537, %536
  %539 = add i64 %538, -8026102192022914730
  %540 = sub i64 %535, %536
  %541 = mul i64 %539, %536
  %542 = sub i64 0, 6368336040993555076
  %543 = sub i64 %542, %535
  %544 = add i64 %543, 6368336040993555076
  %545 = sub i64 0, %535
  %546 = add i64 %544, -6064207931149954170
  %547 = add i64 %546, %536
  %548 = sub i64 %547, -6064207931149954170
  %549 = add i64 %544, %536
  %550 = add i64 %535, -8163723040575052819
  %551 = sub i64 %550, %536
  %552 = sub i64 %551, -8163723040575052819
  %553 = sub i64 %535, %536
  %554 = mul i64 %552, %536
  %555 = sub i64 0, 7349352898567884173
  %556 = sub i64 %555, %535
  %557 = add i64 %556, 7349352898567884173
  %558 = sub i64 0, %535
  %559 = sub i64 0, %536
  %560 = sub i64 %557, %559
  %561 = add i64 %557, %536
  %562 = shl i64 %535, %536
  %563 = add i64 %535, -2855856168023497127
  %564 = sub i64 %563, %536
  %565 = sub i64 %564, -2855856168023497127
  %566 = sub i64 %535, %536
  %567 = shl i64 %565, 24
  %568 = add i64 %565, 7669741875165097636
  %569 = sub i64 %568, 24
  %570 = sub i64 %569, 7669741875165097636
  %571 = sub i64 %565, 24
  %572 = mul i64 %570, 24
  %573 = shl i64 %565, 24
  %574 = sdiv exact i64 %565, 24
  %575 = load i64, i64* %30, align 8
  %576 = icmp uge i64 %574, %575
  br label %69

; <label>:577:                                    ; preds = %149, %134
  store %"class.std::vector.2"* %133, %"class.std::vector.2"** %34, align 8
  %578 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %579 = load i64, i64* %30, align 8
  %580 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %581 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %580) #3
  br label %149

; <label>:582:                                    ; preds = %185, %170
  %583 = landingpad { i8*, i32 }
          catch i8* null
  %584 = extractvalue { i8*, i32 } %583, 0
  store i8* %584, i8** %35, align 8
  %585 = extractvalue { i8*, i32 } %583, 1
  store i32 %585, i32* %36, align 4
  br label %185

; <label>:586:                                    ; preds = %218, %204
  %587 = load i8*, i8** %35, align 8
  %588 = call i8* @__cxa_begin_catch(i8* %587) #3
  %589 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %590 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %591 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %592 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %591) #3
  br label %218

; <label>:593:                                    ; preds = %270, %244
  br label %270

; <label>:594:                                    ; preds = %312, %298
  %595 = landingpad { i8*, i32 }
          cleanup
  %596 = extractvalue { i8*, i32 } %595, 0
  store i8* %596, i8** %35, align 8
  %597 = extractvalue { i8*, i32 } %595, 1
  store i32 %597, i32* %36, align 4
  br label %312

; <label>:598:                                    ; preds = %359, %332
  %599 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %600 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %599, i32 0, i32 0
  %601 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %600, i32 0, i32 0
  %602 = load %"class.std::vector.2"*, %"class.std::vector.2"** %601, align 8
  %603 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %604 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %603, i32 0, i32 0
  %605 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %604, i32 0, i32 1
  %606 = load %"class.std::vector.2"*, %"class.std::vector.2"** %605, align 8
  %607 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %608 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %607) #3
  call void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"* %602, %"class.std::vector.2"* %606, %"class.std::allocator"* dereferenceable(1) %608)
  %609 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %610 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %611 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %610, i32 0, i32 0
  %612 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %611, i32 0, i32 0
  %613 = load %"class.std::vector.2"*, %"class.std::vector.2"** %612, align 8
  %614 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %615 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %614, i32 0, i32 0
  %616 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %615, i32 0, i32 2
  %617 = load %"class.std::vector.2"*, %"class.std::vector.2"** %616, align 8
  %618 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %619 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %618, i32 0, i32 0
  %620 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %619, i32 0, i32 0
  %621 = load %"class.std::vector.2"*, %"class.std::vector.2"** %620, align 8
  %622 = ptrtoint %"class.std::vector.2"* %617 to i64
  %623 = ptrtoint %"class.std::vector.2"* %621 to i64
  %624 = shl i64 %622, %623
  %625 = sub i64 %622, -6286844632800403430
  %626 = sub i64 %625, %623
  %627 = add i64 %626, -6286844632800403430
  %628 = sub i64 %622, %623
  %629 = mul i64 %627, %623
  %630 = add i64 %622, -6775233604954831622
  %631 = sub i64 %630, %623
  %632 = sub i64 %631, -6775233604954831622
  %633 = sub i64 %622, %623
  %634 = shl i64 %632, 24
  %635 = shl i64 %632, 24
  %636 = sub i64 0, %632
  %637 = add i64 0, %636
  %638 = sub i64 0, %632
  %639 = sub i64 0, 24
  %640 = sub i64 %637, %639
  %641 = add i64 %637, 24
  %642 = sdiv exact i64 %632, 24
  call void @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE13_M_deallocateEPS5_m(%"struct.std::_Vector_base"* %609, %"class.std::vector.2"* %613, i64 %642)
  %643 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %644 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %645 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %644, i32 0, i32 0
  %646 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %645, i32 0, i32 0
  store %"class.std::vector.2"* %643, %"class.std::vector.2"** %646, align 8
  %647 = load %"class.std::vector.2"*, %"class.std::vector.2"** %34, align 8
  %648 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %649 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %648, i32 0, i32 0
  %650 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %649, i32 0, i32 1
  store %"class.std::vector.2"* %647, %"class.std::vector.2"** %650, align 8
  %651 = load %"class.std::vector.2"*, %"class.std::vector.2"** %33, align 8
  %652 = load i64, i64* %31, align 8
  %653 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %651, i64 %652
  %654 = bitcast %"class.std::vector"* %37 to %"struct.std::_Vector_base"*
  %655 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %654, i32 0, i32 0
  %656 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %655, i32 0, i32 2
  store %"class.std::vector.2"* %653, %"class.std::vector.2"** %656, align 8
  br label %359

; <label>:657:                                    ; preds = %446, %431
  br label %446

; <label>:658:                                    ; preds = %490, %475
  %659 = load i8*, i8** %35, align 8
  %660 = load i32, i32* %36, align 4
  %661 = insertvalue { i8*, i32 } undef, i8* %659, 0
  %662 = insertvalue { i8*, i32 } %661, i32 %660, 1
  br label %490
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE15_M_erase_at_endEPS4_(%"class.std::vector"*, %"class.std::vector.2"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %7 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load %"class.std::vector.2"*, %"class.std::vector.2"** %9, align 8
  %11 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %12 = call dereferenceable(1) %"class.std::allocator"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %11) #3
  invoke void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EES5_EvT_S7_RSaIT0_E(%"class.std::vector.2"* %6, %"class.std::vector.2"* %10, %"class.std::allocator"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %15 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %16, i32 0, i32 1
  store %"class.std::vector.2"* %14, %"class.std::vector.2"** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt27__uninitialized_default_n_aIPSt6vectorIN7networkIiE4edgeESaIS3_EEmS5_ET_S7_T0_RSaIT1_E(%"class.std::vector.2"*, i64, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %4 = alloca %"class.std::vector.2"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.155
  %8 = load i32, i32* @y.156
  %9 = sub i32 %7, -1075841201
  %10 = sub i32 %9, 1
  %11 = add i32 %10, -1075841201
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 1476863265, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %59
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 1476863265, label %21
    i32 -1602536309, label %29
    i32 -31808457, label %50
    i32 203449066, label %52
  ]

; <label>:20:                                     ; preds = %18
  br label %59

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1602536309, i32 203449066
  store i32 %28, i32* %17
  br label %59

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::vector.2"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %30, align 8
  store i64 %1, i64* %31, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %32, align 8
  %33 = load %"class.std::vector.2"*, %"class.std::vector.2"** %30, align 8
  %34 = load i64, i64* %31, align 8
  %35 = call %"class.std::vector.2"* @_ZSt25__uninitialized_default_nIPSt6vectorIN7networkIiE4edgeESaIS3_EEmET_S7_T0_(%"class.std::vector.2"* %33, i64 %34)
  store %"class.std::vector.2"* %35, %"class.std::vector.2"** %4
  %36 = load i32, i32* @x.155
  %37 = load i32, i32* @y.156
  %38 = sub i32 0, 1
  %39 = add i32 %36, %38
  %40 = sub i32 %36, 1
  %41 = mul i32 %36, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %37, 10
  %45 = and i1 %43, %44
  %46 = xor i1 %43, %44
  %47 = or i1 %45, %46
  %48 = or i1 %43, %44
  %49 = select i1 %47, i32 -31808457, i32 203449066
  store i32 %49, i32* %17
  br label %59

; <label>:50:                                     ; preds = %18
  %51 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %4
  ret %"class.std::vector.2"* %51

; <label>:52:                                     ; preds = %18
  %53 = alloca %"class.std::vector.2"*, align 8
  %54 = alloca i64, align 8
  %55 = alloca %"class.std::allocator"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %53, align 8
  store i64 %1, i64* %54, align 8
  store %"class.std::allocator"* %2, %"class.std::allocator"** %55, align 8
  %56 = load %"class.std::vector.2"*, %"class.std::vector.2"** %53, align 8
  %57 = load i64, i64* %54, align 8
  %58 = call %"class.std::vector.2"* @_ZSt25__uninitialized_default_nIPSt6vectorIN7networkIiE4edgeESaIS3_EEmET_S7_T0_(%"class.std::vector.2"* %56, i64 %57)
  store i32 -1602536309, i32* %17
  br label %59

; <label>:59:                                     ; preds = %52, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE12_M_check_lenEmPKc(%"class.std::vector"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i1
  %6 = alloca i1
  %7 = alloca i1
  %8 = alloca %"class.std::vector"*
  %9 = alloca i64*
  %10 = alloca i64*
  %11 = alloca i8**
  %12 = alloca i64*
  %13 = alloca i1
  %14 = alloca i1
  %15 = load i32, i32* @x.157
  %16 = load i32, i32* @y.158
  %17 = sub i32 %15, -11555954
  %18 = sub i32 %17, 1
  %19 = add i32 %18, -11555954
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  store i1 %23, i1* %14
  %24 = icmp slt i32 %16, 10
  store i1 %24, i1* %13
  %25 = alloca i32
  store i32 -1800901413, i32* %25
  %26 = alloca i64
  br label %27

; <label>:27:                                     ; preds = %3, %335
  %28 = load i32, i32* %25
  switch i32 %28, label %29 [
    i32 -1800901413, label %30
    i32 -1713794447, label %50
    i32 -1605736993, label %85
    i32 1706408057, label %88
    i32 1762120362, label %91
    i32 962817217, label %106
    i32 -552259575, label %153
    i32 -321700525, label %156
    i32 831153787, label %172
    i32 231905461, label %205
    i32 1976558157, label %208
    i32 587948657, label %224
    i32 -878418067, label %254
    i32 -2129939637, label %256
    i32 1624292404, label %259
    i32 -1427776880, label %261
    i32 -986767084, label %286
    i32 -1491008739, label %326
    i32 578266280, label %332
  ]

; <label>:29:                                     ; preds = %27
  br label %335

; <label>:30:                                     ; preds = %27
  %31 = load volatile i1, i1* %14
  %32 = load volatile i1, i1* %13
  %33 = xor i1 %31, true
  %34 = xor i1 %32, true
  %35 = xor i1 true, true
  %36 = and i1 %33, true
  %37 = and i1 %31, %35
  %38 = and i1 %34, true
  %39 = and i1 %32, %35
  %40 = or i1 %36, %37
  %41 = or i1 %38, %39
  %42 = xor i1 %40, %41
  %43 = or i1 %33, %34
  %44 = xor i1 %43, true
  %45 = or i1 true, %35
  %46 = and i1 %44, %45
  %47 = or i1 %42, %46
  %48 = or i1 %31, %32
  %49 = select i1 %47, i32 -1713794447, i32 -1427776880
  store i32 %49, i32* %25
  br label %335

; <label>:50:                                     ; preds = %27
  %51 = alloca %"class.std::vector"*, align 8
  %52 = alloca i64, align 8
  store i64* %52, i64** %12
  %53 = alloca i8*, align 8
  store i8** %53, i8*** %11
  %54 = alloca i64, align 8
  store i64* %54, i64** %10
  %55 = alloca i64, align 8
  store i64* %55, i64** %9
  store %"class.std::vector"* %0, %"class.std::vector"** %51, align 8
  %56 = load volatile i64*, i64** %12
  store i64 %1, i64* %56, align 8
  %57 = load volatile i8**, i8*** %11
  store i8* %2, i8** %57, align 8
  %58 = load %"class.std::vector"*, %"class.std::vector"** %51, align 8
  store %"class.std::vector"* %58, %"class.std::vector"** %8
  %59 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %60 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %59) #3
  %61 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %62 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %61) #3
  %63 = sub i64 %60, -7098604757701366397
  %64 = sub i64 %63, %62
  %65 = add i64 %64, -7098604757701366397
  %66 = sub i64 %60, %62
  %67 = load volatile i64*, i64** %12
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %65, %68
  store i1 %69, i1* %7
  %70 = load i32, i32* @x.157
  %71 = load i32, i32* @y.158
  %72 = add i32 %70, 1127917033
  %73 = sub i32 %72, 1
  %74 = sub i32 %73, 1127917033
  %75 = sub i32 %70, 1
  %76 = mul i32 %70, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %71, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 -1605736993, i32 -1427776880
  store i32 %84, i32* %25
  br label %335

; <label>:85:                                     ; preds = %27
  %86 = load volatile i1, i1* %7
  %87 = select i1 %86, i32 1706408057, i32 1762120362
  store i32 %87, i32* %25
  br label %335

; <label>:88:                                     ; preds = %27
  %89 = load volatile i8**, i8*** %11
  %90 = load i8*, i8** %89, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %90) #12
  unreachable

; <label>:91:                                     ; preds = %27
  %92 = load i32, i32* @x.157
  %93 = load i32, i32* @y.158
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  %105 = select i1 %103, i32 962817217, i32 -986767084
  store i32 %105, i32* %25
  br label %335

; <label>:106:                                    ; preds = %27
  %107 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %108 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %107) #3
  %109 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %110 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %109) #3
  %111 = load volatile i64*, i64** %9
  store i64 %110, i64* %111, align 8
  %112 = load volatile i64*, i64** %12
  %113 = load volatile i64*, i64** %9
  %114 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %113, i64* dereferenceable(8) %112)
  %115 = load i64, i64* %114, align 8
  %116 = sub i64 %108, -3923056278380972036
  %117 = add i64 %116, %115
  %118 = add i64 %117, -3923056278380972036
  %119 = add i64 %108, %115
  %120 = load volatile i64*, i64** %10
  store i64 %118, i64* %120, align 8
  %121 = load volatile i64*, i64** %10
  %122 = load i64, i64* %121, align 8
  %123 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %124 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %123) #3
  %125 = icmp ult i64 %122, %124
  store i1 %125, i1* %6
  %126 = load i32, i32* @x.157
  %127 = load i32, i32* @y.158
  %128 = sub i32 %126, 1726729921
  %129 = sub i32 %128, 1
  %130 = add i32 %129, 1726729921
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -552259575, i32 -986767084
  store i32 %152, i32* %25
  br label %335

; <label>:153:                                    ; preds = %27
  %154 = load volatile i1, i1* %6
  %155 = select i1 %154, i32 1976558157, i32 -321700525
  store i32 %155, i32* %25
  br label %335

; <label>:156:                                    ; preds = %27
  %157 = load i32, i32* @x.157
  %158 = load i32, i32* @y.158
  %159 = sub i32 %157, -1427399179
  %160 = sub i32 %159, 1
  %161 = add i32 %160, -1427399179
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  %171 = select i1 %169, i32 831153787, i32 -1491008739
  store i32 %171, i32* %25
  br label %335

; <label>:172:                                    ; preds = %27
  %173 = load volatile i64*, i64** %10
  %174 = load i64, i64* %173, align 8
  %175 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %176 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %175) #3
  %177 = icmp ugt i64 %174, %176
  store i1 %177, i1* %5
  %178 = load i32, i32* @x.157
  %179 = load i32, i32* @y.158
  %180 = sub i32 %178, -1902736193
  %181 = sub i32 %180, 1
  %182 = add i32 %181, -1902736193
  %183 = sub i32 %178, 1
  %184 = mul i32 %178, %182
  %185 = urem i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = icmp slt i32 %179, 10
  %188 = xor i1 %186, true
  %189 = xor i1 %187, true
  %190 = xor i1 true, true
  %191 = and i1 %188, true
  %192 = and i1 %186, %190
  %193 = and i1 %189, true
  %194 = and i1 %187, %190
  %195 = or i1 %191, %192
  %196 = or i1 %193, %194
  %197 = xor i1 %195, %196
  %198 = or i1 %188, %189
  %199 = xor i1 %198, true
  %200 = or i1 true, %190
  %201 = and i1 %199, %200
  %202 = or i1 %197, %201
  %203 = or i1 %186, %187
  %204 = select i1 %202, i32 231905461, i32 -1491008739
  store i32 %204, i32* %25
  br label %335

; <label>:205:                                    ; preds = %27
  %206 = load volatile i1, i1* %5
  %207 = select i1 %206, i32 1976558157, i32 -2129939637
  store i32 %207, i32* %25
  br label %335

; <label>:208:                                    ; preds = %27
  %209 = load i32, i32* @x.157
  %210 = load i32, i32* @y.158
  %211 = add i32 %209, -732235104
  %212 = sub i32 %211, 1
  %213 = sub i32 %212, -732235104
  %214 = sub i32 %209, 1
  %215 = mul i32 %209, %213
  %216 = urem i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = icmp slt i32 %210, 10
  %219 = and i1 %217, %218
  %220 = xor i1 %217, %218
  %221 = or i1 %219, %220
  %222 = or i1 %217, %218
  %223 = select i1 %221, i32 587948657, i32 578266280
  store i32 %223, i32* %25
  br label %335

; <label>:224:                                    ; preds = %27
  %225 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %226 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %225) #3
  store i64 %226, i64* %4
  %227 = load i32, i32* @x.157
  %228 = load i32, i32* @y.158
  %229 = add i32 %227, -433492292
  %230 = sub i32 %229, 1
  %231 = sub i32 %230, -433492292
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  %253 = select i1 %251, i32 -878418067, i32 578266280
  store i32 %253, i32* %25
  br label %335

; <label>:254:                                    ; preds = %27
  store i32 1624292404, i32* %25
  %255 = load volatile i64, i64* %4
  store i64 %255, i64* %26
  br label %335

; <label>:256:                                    ; preds = %27
  %257 = load volatile i64*, i64** %10
  %258 = load i64, i64* %257, align 8
  store i32 1624292404, i32* %25
  store i64 %258, i64* %26
  br label %335

; <label>:259:                                    ; preds = %27
  %260 = load i64, i64* %26
  ret i64 %260

; <label>:261:                                    ; preds = %27
  %262 = alloca %"class.std::vector"*, align 8
  %263 = alloca i64, align 8
  %264 = alloca i8*, align 8
  %265 = alloca i64, align 8
  %266 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %262, align 8
  store i64 %1, i64* %263, align 8
  store i8* %2, i8** %264, align 8
  %267 = load %"class.std::vector"*, %"class.std::vector"** %262, align 8
  %268 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %267) #3
  %269 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %267) #3
  %270 = shl i64 %268, %269
  %271 = shl i64 %268, %269
  %272 = shl i64 %268, %269
  %273 = sub i64 0, -1204981617619950785
  %274 = sub i64 %273, %268
  %275 = add i64 %274, -1204981617619950785
  %276 = sub i64 0, %268
  %277 = add i64 %275, 684721835628244666
  %278 = add i64 %277, %269
  %279 = sub i64 %278, 684721835628244666
  %280 = add i64 %275, %269
  %281 = sub i64 0, %269
  %282 = add i64 %268, %281
  %283 = sub i64 %268, %269
  %284 = load i64, i64* %263, align 8
  %285 = icmp ult i64 %282, %284
  store i32 -1713794447, i32* %25
  br label %335

; <label>:286:                                    ; preds = %27
  %287 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %288 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %287) #3
  %289 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %290 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %289) #3
  %291 = load volatile i64*, i64** %9
  store i64 %290, i64* %291, align 8
  %292 = load volatile i64*, i64** %12
  %293 = load volatile i64*, i64** %9
  %294 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %293, i64* dereferenceable(8) %292)
  %295 = load i64, i64* %294, align 8
  %296 = sub i64 0, 3105838708027072635
  %297 = sub i64 %296, %288
  %298 = add i64 %297, 3105838708027072635
  %299 = sub i64 0, %288
  %300 = add i64 %298, 8203573945074640834
  %301 = add i64 %300, %295
  %302 = sub i64 %301, 8203573945074640834
  %303 = add i64 %298, %295
  %304 = sub i64 %288, -6261917216716480790
  %305 = sub i64 %304, %295
  %306 = add i64 %305, -6261917216716480790
  %307 = sub i64 %288, %295
  %308 = mul i64 %306, %295
  %309 = sub i64 0, %288
  %310 = add i64 0, %309
  %311 = sub i64 0, %288
  %312 = add i64 %310, 5040254739046417767
  %313 = add i64 %312, %295
  %314 = sub i64 %313, 5040254739046417767
  %315 = add i64 %310, %295
  %316 = shl i64 %288, %295
  %317 = sub i64 0, %295
  %318 = sub i64 %288, %317
  %319 = add i64 %288, %295
  %320 = load volatile i64*, i64** %10
  store i64 %318, i64* %320, align 8
  %321 = load volatile i64*, i64** %10
  %322 = load i64, i64* %321, align 8
  %323 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %324 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %323) #3
  %325 = icmp ult i64 %322, %324
  store i32 962817217, i32* %25
  br label %335

; <label>:326:                                    ; preds = %27
  %327 = load volatile i64*, i64** %10
  %328 = load i64, i64* %327, align 8
  %329 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %330 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %329) #3
  %331 = icmp ugt i64 %328, %330
  store i32 831153787, i32* %25
  br label %335

; <label>:332:                                    ; preds = %27
  %333 = load volatile %"class.std::vector"*, %"class.std::vector"** %8
  %334 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"* %333) #3
  store i32 587948657, i32* %25
  br label %335

; <label>:335:                                    ; preds = %332, %326, %286, %261, %256, %254, %224, %208, %205, %172, %156, %153, %106, %91, %85, %50, %30, %29
  br label %27
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZNSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE11_M_allocateEm(%"struct.std::_Vector_base"*, i64) #0 comdat align 2 {
  %3 = alloca %"class.std::vector.2"*
  %4 = alloca i1
  %5 = alloca %"struct.std::_Vector_base"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.159
  %10 = load i32, i32* @y.160
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 1413467923, i32* %18
  %19 = alloca %"class.std::vector.2"*
  br label %20

; <label>:20:                                     ; preds = %2, %136
  %21 = load i32, i32* %18
  switch i32 %21, label %22 [
    i32 1413467923, label %23
    i32 214107294, label %31
    i32 -17923419, label %54
    i32 -1541593090, label %57
    i32 -947501347, label %85
    i32 -194203802, label %118
    i32 -1853107259, label %120
    i32 -1589744330, label %121
    i32 479902127, label %123
    i32 53777854, label %129
  ]

; <label>:22:                                     ; preds = %20
  br label %136

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 214107294, i32 479902127
  store i32 %30, i32* %18
  br label %136

; <label>:31:                                     ; preds = %20
  %32 = alloca %"struct.std::_Vector_base"*, align 8
  %33 = alloca i64, align 8
  store i64* %33, i64** %6
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %32, align 8
  %34 = load volatile i64*, i64** %6
  store i64 %1, i64* %34, align 8
  %35 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %32, align 8
  store %"struct.std::_Vector_base"* %35, %"struct.std::_Vector_base"** %5
  %36 = load volatile i64*, i64** %6
  %37 = load i64, i64* %36, align 8
  %38 = icmp ne i64 %37, 0
  store i1 %38, i1* %4
  %39 = load i32, i32* @x.159
  %40 = load i32, i32* @y.160
  %41 = add i32 %39, 1652340603
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 1652340603
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  %53 = select i1 %51, i32 -17923419, i32 479902127
  store i32 %53, i32* %18
  br label %136

; <label>:54:                                     ; preds = %20
  %55 = load volatile i1, i1* %4
  %56 = select i1 %55, i32 -1541593090, i32 -1853107259
  store i32 %56, i32* %18
  br label %136

; <label>:57:                                     ; preds = %20
  %58 = load i32, i32* @x.159
  %59 = load i32, i32* @y.160
  %60 = sub i32 %58, 402433490
  %61 = sub i32 %60, 1
  %62 = add i32 %61, 402433490
  %63 = sub i32 %58, 1
  %64 = mul i32 %58, %62
  %65 = urem i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = icmp slt i32 %59, 10
  %68 = xor i1 %66, true
  %69 = xor i1 %67, true
  %70 = xor i1 false, true
  %71 = and i1 %68, false
  %72 = and i1 %66, %70
  %73 = and i1 %69, false
  %74 = and i1 %67, %70
  %75 = or i1 %71, %72
  %76 = or i1 %73, %74
  %77 = xor i1 %75, %76
  %78 = or i1 %68, %69
  %79 = xor i1 %78, true
  %80 = or i1 false, %70
  %81 = and i1 %79, %80
  %82 = or i1 %77, %81
  %83 = or i1 %66, %67
  %84 = select i1 %82, i32 -947501347, i32 53777854
  store i32 %84, i32* %18
  br label %136

; <label>:85:                                     ; preds = %20
  %86 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %87 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %86, i32 0, i32 0
  %88 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %87 to %"class.std::allocator"*
  %89 = load volatile i64*, i64** %6
  %90 = load i64, i64* %89, align 8
  %91 = call %"class.std::vector.2"* @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1) %88, i64 %90)
  store %"class.std::vector.2"* %91, %"class.std::vector.2"** %3
  %92 = load i32, i32* @x.159
  %93 = load i32, i32* @y.160
  %94 = sub i32 0, 1
  %95 = add i32 %92, %94
  %96 = sub i32 %92, 1
  %97 = mul i32 %92, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %93, 10
  %101 = xor i1 %99, true
  %102 = xor i1 %100, true
  %103 = xor i1 false, true
  %104 = and i1 %101, false
  %105 = and i1 %99, %103
  %106 = and i1 %102, false
  %107 = and i1 %100, %103
  %108 = or i1 %104, %105
  %109 = or i1 %106, %107
  %110 = xor i1 %108, %109
  %111 = or i1 %101, %102
  %112 = xor i1 %111, true
  %113 = or i1 false, %103
  %114 = and i1 %112, %113
  %115 = or i1 %110, %114
  %116 = or i1 %99, %100
  %117 = select i1 %115, i32 -194203802, i32 53777854
  store i32 %117, i32* %18
  br label %136

; <label>:118:                                    ; preds = %20
  store i32 -1589744330, i32* %18
  %119 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %3
  store %"class.std::vector.2"* %119, %"class.std::vector.2"** %19
  br label %136

; <label>:120:                                    ; preds = %20
  store i32 -1589744330, i32* %18
  store %"class.std::vector.2"* null, %"class.std::vector.2"** %19
  br label %136

; <label>:121:                                    ; preds = %20
  %122 = load %"class.std::vector.2"*, %"class.std::vector.2"** %19
  ret %"class.std::vector.2"* %122

; <label>:123:                                    ; preds = %20
  %124 = alloca %"struct.std::_Vector_base"*, align 8
  %125 = alloca i64, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %124, align 8
  store i64 %1, i64* %125, align 8
  %126 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %124, align 8
  %127 = load i64, i64* %125, align 8
  %128 = icmp ne i64 %127, 0
  store i32 214107294, i32* %18
  br label %136

; <label>:129:                                    ; preds = %20
  %130 = load volatile %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %5
  %131 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %130, i32 0, i32 0
  %132 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %131 to %"class.std::allocator"*
  %133 = load volatile i64*, i64** %6
  %134 = load i64, i64* %133, align 8
  %135 = call %"class.std::vector.2"* @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1) %132, i64 %134)
  store i32 -947501347, i32* %18
  br label %136

; <label>:136:                                    ; preds = %129, %123, %120, %118, %85, %57, %54, %31, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt34__uninitialized_move_if_noexcept_aIPSt6vectorIN7networkIiE4edgeESaIS3_EES6_SaIS5_EET0_T_S9_S8_RT1_(%"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::vector.2"*, align 8
  %6 = alloca %"class.std::vector.2"*, align 8
  %7 = alloca %"class.std::vector.2"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %5, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %6, align 8
  store %"class.std::vector.2"* %2, %"class.std::vector.2"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %11 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %12 = call %"class.std::vector.2"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.2"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  store %"class.std::vector.2"* %12, %"class.std::vector.2"** %13, align 8
  %14 = load %"class.std::vector.2"*, %"class.std::vector.2"** %6, align 8
  %15 = call %"class.std::vector.2"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.2"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  store %"class.std::vector.2"* %15, %"class.std::vector.2"** %16, align 8
  %17 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %18 = load %"class.std::allocator"*, %"class.std::allocator"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %20 = load %"class.std::vector.2"*, %"class.std::vector.2"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %22 = load %"class.std::vector.2"*, %"class.std::vector.2"** %21, align 8
  %23 = call %"class.std::vector.2"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.2"* %20, %"class.std::vector.2"* %22, %"class.std::vector.2"* %17, %"class.std::allocator"* dereferenceable(1) %18)
  ret %"class.std::vector.2"* %23
}

declare void @__cxa_rethrow()

declare void @__cxa_end_catch()

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt25__uninitialized_default_nIPSt6vectorIN7networkIiE4edgeESaIS3_EEmET_S7_T0_(%"class.std::vector.2"*, i64) #0 comdat {
  %3 = alloca %"class.std::vector.2"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.163
  %7 = load i32, i32* @y.164
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -1300726292, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %69
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1300726292, label %19
    i32 496898459, label %27
    i32 -2008307496, label %60
    i32 -2028937617, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %69

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 496898459, i32 -2028937617
  store i32 %26, i32* %15
  br label %69

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.2"*, align 8
  %29 = alloca i64, align 8
  %30 = alloca i8, align 1
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %28, align 8
  store i64 %1, i64* %29, align 8
  store i8 1, i8* %30, align 1
  %31 = load %"class.std::vector.2"*, %"class.std::vector.2"** %28, align 8
  %32 = load i64, i64* %29, align 8
  %33 = call %"class.std::vector.2"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7networkIiE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.2"* %31, i64 %32)
  store %"class.std::vector.2"* %33, %"class.std::vector.2"** %3
  %34 = load i32, i32* @x.163
  %35 = load i32, i32* @y.164
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -2008307496, i32 -2028937617
  store i32 %59, i32* %15
  br label %69

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %3
  ret %"class.std::vector.2"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::vector.2"*, align 8
  %64 = alloca i64, align 8
  %65 = alloca i8, align 1
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %63, align 8
  store i64 %1, i64* %64, align 8
  store i8 1, i8* %65, align 1
  %66 = load %"class.std::vector.2"*, %"class.std::vector.2"** %63, align 8
  %67 = load i64, i64* %64, align 8
  %68 = call %"class.std::vector.2"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7networkIiE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.2"* %66, i64 %67)
  store i32 496898459, i32* %15
  br label %69

; <label>:69:                                     ; preds = %62, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZNSt27__uninitialized_default_n_1ILb0EE18__uninit_default_nIPSt6vectorIN7networkIiE4edgeESaIS5_EEmEET_S9_T0_(%"class.std::vector.2"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.2"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca %"class.std::vector.2"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %8 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  store %"class.std::vector.2"* %8, %"class.std::vector.2"** %5, align 8
  br label %9

; <label>:9:                                      ; preds = %16, %2
  %10 = load i64, i64* %4, align 8
  %11 = icmp ugt i64 %10, 0
  br i1 %11, label %12, label %140

; <label>:12:                                     ; preds = %9
  %13 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %14 = call %"class.std::vector.2"* @_ZSt11__addressofISt6vectorIN7networkIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.2"* dereferenceable(24) %13) #3
  invoke void @_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.2"* %14)
          to label %15 unwind label %24

; <label>:15:                                     ; preds = %12
  br label %16

; <label>:16:                                     ; preds = %15
  %17 = load i64, i64* %4, align 8
  %18 = add i64 %17, 8822053901655742197
  %19 = add i64 %18, -1
  %20 = sub i64 %19, 8822053901655742197
  %21 = add i64 %17, -1
  store i64 %20, i64* %4, align 8
  %22 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %23 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %22, i32 1
  store %"class.std::vector.2"* %23, %"class.std::vector.2"** %5, align 8
  br label %9

; <label>:24:                                     ; preds = %12
  %25 = load i32, i32* @x.165
  %26 = load i32, i32* @y.166
  %27 = add i32 %25, 199683344
  %28 = sub i32 %27, 1
  %29 = sub i32 %28, 199683344
  %30 = sub i32 %25, 1
  %31 = mul i32 %25, %29
  %32 = urem i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = icmp slt i32 %26, 10
  %35 = xor i1 %33, true
  %36 = xor i1 %34, true
  %37 = xor i1 true, true
  %38 = and i1 %35, true
  %39 = and i1 %33, %37
  %40 = and i1 %36, true
  %41 = and i1 %34, %37
  %42 = or i1 %38, %39
  %43 = or i1 %40, %41
  %44 = xor i1 %42, %43
  %45 = or i1 %35, %36
  %46 = xor i1 %45, true
  %47 = or i1 true, %37
  %48 = and i1 %46, %47
  %49 = or i1 %44, %48
  %50 = or i1 %33, %34
  br i1 %49, label %51, label %211

; <label>:51:                                     ; preds = %24, %211
  %52 = landingpad { i8*, i32 }
          catch i8* null
  %53 = extractvalue { i8*, i32 } %52, 0
  store i8* %53, i8** %6, align 8
  %54 = extractvalue { i8*, i32 } %52, 1
  store i32 %54, i32* %7, align 4
  %55 = load i32, i32* @x.165
  %56 = load i32, i32* @y.166
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  br i1 %78, label %80, label %211

; <label>:80:                                     ; preds = %51
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* @x.165
  %83 = load i32, i32* @y.166
  %84 = add i32 %82, -1778915205
  %85 = sub i32 %84, 1
  %86 = sub i32 %85, -1778915205
  %87 = sub i32 %82, 1
  %88 = mul i32 %82, %86
  %89 = urem i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = icmp slt i32 %83, 10
  %92 = xor i1 %90, true
  %93 = xor i1 %91, true
  %94 = xor i1 true, true
  %95 = and i1 %92, true
  %96 = and i1 %90, %94
  %97 = and i1 %93, true
  %98 = and i1 %91, %94
  %99 = or i1 %95, %96
  %100 = or i1 %97, %98
  %101 = xor i1 %99, %100
  %102 = or i1 %92, %93
  %103 = xor i1 %102, true
  %104 = or i1 true, %94
  %105 = and i1 %103, %104
  %106 = or i1 %101, %105
  %107 = or i1 %90, %91
  br i1 %106, label %108, label %215

; <label>:108:                                    ; preds = %81, %215
  %109 = load i8*, i8** %6, align 8
  %110 = call i8* @__cxa_begin_catch(i8* %109) #3
  %111 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %112 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  %113 = load i32, i32* @x.165
  %114 = load i32, i32* @y.166
  %115 = sub i32 0, 1
  %116 = add i32 %113, %115
  %117 = sub i32 %113, 1
  %118 = mul i32 %113, %116
  %119 = urem i32 %118, 2
  %120 = icmp eq i32 %119, 0
  %121 = icmp slt i32 %114, 10
  %122 = xor i1 %120, true
  %123 = xor i1 %121, true
  %124 = xor i1 true, true
  %125 = and i1 %122, true
  %126 = and i1 %120, %124
  %127 = and i1 %123, true
  %128 = and i1 %121, %124
  %129 = or i1 %125, %126
  %130 = or i1 %127, %128
  %131 = xor i1 %129, %130
  %132 = or i1 %122, %123
  %133 = xor i1 %132, true
  %134 = or i1 true, %124
  %135 = and i1 %133, %134
  %136 = or i1 %131, %135
  %137 = or i1 %120, %121
  br i1 %136, label %138, label %215

; <label>:138:                                    ; preds = %108
  invoke void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.2"* %111, %"class.std::vector.2"* %112)
          to label %139 unwind label %142

; <label>:139:                                    ; preds = %138
  invoke void @__cxa_rethrow() #12
          to label %210 unwind label %142

; <label>:140:                                    ; preds = %9
  %141 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  ret %"class.std::vector.2"* %141

; <label>:142:                                    ; preds = %139, %138
  %143 = landingpad { i8*, i32 }
          cleanup
  %144 = extractvalue { i8*, i32 } %143, 0
  store i8* %144, i8** %6, align 8
  %145 = extractvalue { i8*, i32 } %143, 1
  store i32 %145, i32* %7, align 4
  invoke void @__cxa_end_catch()
          to label %146 unwind label %207

; <label>:146:                                    ; preds = %142
  br label %202
                                                  ; No predecessors!
  %148 = load i32, i32* @x.165
  %149 = load i32, i32* @y.166
  %150 = add i32 %148, -638125257
  %151 = sub i32 %150, 1
  %152 = sub i32 %151, -638125257
  %153 = sub i32 %148, 1
  %154 = mul i32 %148, %152
  %155 = urem i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = icmp slt i32 %149, 10
  %158 = xor i1 %156, true
  %159 = xor i1 %157, true
  %160 = xor i1 true, true
  %161 = and i1 %158, true
  %162 = and i1 %156, %160
  %163 = and i1 %159, true
  %164 = and i1 %157, %160
  %165 = or i1 %161, %162
  %166 = or i1 %163, %164
  %167 = xor i1 %165, %166
  %168 = or i1 %158, %159
  %169 = xor i1 %168, true
  %170 = or i1 true, %160
  %171 = and i1 %169, %170
  %172 = or i1 %167, %171
  %173 = or i1 %156, %157
  br i1 %172, label %174, label %220

; <label>:174:                                    ; preds = %147, %220
  call void @llvm.trap()
  %175 = load i32, i32* @x.165
  %176 = load i32, i32* @y.166
  %177 = sub i32 %175, 504998341
  %178 = sub i32 %177, 1
  %179 = add i32 %178, 504998341
  %180 = sub i32 %175, 1
  %181 = mul i32 %175, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %176, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 false, true
  %188 = and i1 %185, false
  %189 = and i1 %183, %187
  %190 = and i1 %186, false
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 false, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %220

; <label>:201:                                    ; preds = %174
  unreachable

; <label>:202:                                    ; preds = %146
  %203 = load i8*, i8** %6, align 8
  %204 = load i32, i32* %7, align 4
  %205 = insertvalue { i8*, i32 } undef, i8* %203, 0
  %206 = insertvalue { i8*, i32 } %205, i32 %204, 1
  resume { i8*, i32 } %206

; <label>:207:                                    ; preds = %142
  %208 = landingpad { i8*, i32 }
          catch i8* null
  %209 = extractvalue { i8*, i32 } %208, 0
  call void @__clang_call_terminate(i8* %209) #8
  unreachable

; <label>:210:                                    ; preds = %139
  unreachable

; <label>:211:                                    ; preds = %51, %24
  %212 = landingpad { i8*, i32 }
          catch i8* null
  %213 = extractvalue { i8*, i32 } %212, 0
  store i8* %213, i8** %6, align 8
  %214 = extractvalue { i8*, i32 } %212, 1
  store i32 %214, i32* %7, align 4
  br label %51

; <label>:215:                                    ; preds = %108, %81
  %216 = load i8*, i8** %6, align 8
  %217 = call i8* @__cxa_begin_catch(i8* %216) #3
  %218 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %219 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  br label %108

; <label>:220:                                    ; preds = %174, %147
  call void @llvm.trap()
  br label %174
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJEEvPT_DpOT0_(%"class.std::vector.2"*) #5 comdat {
  %2 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %2, align 8
  %3 = load %"class.std::vector.2"*, %"class.std::vector.2"** %2, align 8
  %4 = bitcast %"class.std::vector.2"* %3 to i8*
  %5 = bitcast i8* %4 to %"class.std::vector.2"*
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2Ev(%"class.std::vector.2"* %5) #3
  ret void
}

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #8

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2Ev(%"class.std::vector.2"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %2, align 8
  %3 = load %"class.std::vector.2"*, %"class.std::vector.2"** %2, align 8
  %4 = bitcast %"class.std::vector.2"* %3 to %"struct.std::_Vector_base.8"*
  invoke void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.8"* %4)
          to label %5 unwind label %48

; <label>:5:                                      ; preds = %1
  %6 = load i32, i32* @x.169
  %7 = load i32, i32* @y.170
  %8 = add i32 %6, 2063080145
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 2063080145
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = icmp slt i32 %7, 10
  %16 = xor i1 %14, true
  %17 = xor i1 %15, true
  %18 = xor i1 false, true
  %19 = and i1 %16, false
  %20 = and i1 %14, %18
  %21 = and i1 %17, false
  %22 = and i1 %15, %18
  %23 = or i1 %19, %20
  %24 = or i1 %21, %22
  %25 = xor i1 %23, %24
  %26 = or i1 %16, %17
  %27 = xor i1 %26, true
  %28 = or i1 false, %18
  %29 = and i1 %27, %28
  %30 = or i1 %25, %29
  %31 = or i1 %14, %15
  br i1 %30, label %32, label %93

; <label>:32:                                     ; preds = %5, %93
  %33 = load i32, i32* @x.169
  %34 = load i32, i32* @y.170
  %35 = add i32 %33, 1123372624
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, 1123372624
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = and i1 %41, %42
  %44 = xor i1 %41, %42
  %45 = or i1 %43, %44
  %46 = or i1 %41, %42
  br i1 %45, label %47, label %93

; <label>:47:                                     ; preds = %32
  ret void

; <label>:48:                                     ; preds = %1
  %49 = load i32, i32* @x.169
  %50 = load i32, i32* @y.170
  %51 = add i32 %49, 1817285912
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, 1817285912
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  br i1 %73, label %75, label %94

; <label>:75:                                     ; preds = %48, %94
  %76 = landingpad { i8*, i32 }
          catch i8* null
  %77 = extractvalue { i8*, i32 } %76, 0
  call void @__clang_call_terminate(i8* %77) #8
  %78 = load i32, i32* @x.169
  %79 = load i32, i32* @y.170
  %80 = add i32 %78, 1395551999
  %81 = sub i32 %80, 1
  %82 = sub i32 %81, 1395551999
  %83 = sub i32 %78, 1
  %84 = mul i32 %78, %82
  %85 = urem i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = icmp slt i32 %79, 10
  %88 = and i1 %86, %87
  %89 = xor i1 %86, %87
  %90 = or i1 %88, %89
  %91 = or i1 %86, %87
  br i1 %90, label %92, label %94

; <label>:92:                                     ; preds = %75
  unreachable

; <label>:93:                                     ; preds = %32, %5
  br label %32

; <label>:94:                                     ; preds = %75, %48
  %95 = landingpad { i8*, i32 }
          catch i8* null
  %96 = extractvalue { i8*, i32 } %95, 0
  call void @__clang_call_terminate(i8* %96) #8
  br label %75
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2Ev(%"struct.std::_Vector_base.8"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %2, align 8
  %3 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %3, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %4)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2Ev(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %2, align 8
  %3 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %3 to %"class.std::allocator.9"*
  call void @_ZNSaIN7networkIiE4edgeEEC2Ev(%"class.std::allocator.9"* %4) #3
  %5 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %3, i32 0, i32 0
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %5, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %3, i32 0, i32 1
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %6, align 8
  %7 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %3, i32 0, i32 2
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %7, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7networkIiE4edgeEEC2Ev(%"class.std::allocator.9"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2Ev(%"class.__gnu_cxx::new_allocator.10"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE8max_sizeEv(%"class.std::vector"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector"*, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %2, align 8
  %3 = load %"class.std::vector"*, %"class.std::vector"** %2, align 8
  %4 = bitcast %"class.std::vector"* %3 to %"struct.std::_Vector_base"*
  %5 = call dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noreturn
declare void @_ZSt20__throw_length_errorPKc(i8*) #9

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca i64*, align 8
  %6 = alloca i64*, align 8
  %7 = alloca i64*, align 8
  store i64* %0, i64** %6, align 8
  store i64* %1, i64** %7, align 8
  %8 = load i64*, i64** %6, align 8
  %9 = load i64, i64* %8, align 8
  store i64 %9, i64* %4
  %10 = load i64*, i64** %7, align 8
  %11 = load i64, i64* %10, align 8
  store i64 %11, i64* %3
  %12 = alloca i32
  store i32 1536581794, i32* %12
  br label %13

; <label>:13:                                     ; preds = %2, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 1536581794, label %16
    i32 1514416994, label %21
    i32 -1903888296, label %23
    i32 -201357643, label %25
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %4
  %18 = load volatile i64, i64* %3
  %19 = icmp ult i64 %17, %18
  %20 = select i1 %19, i32 1514416994, i32 -1903888296
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  %22 = load i64*, i64** %7, align 8
  store i64* %22, i64** %5, align 8
  store i32 -201357643, i32* %12
  br label %27

; <label>:23:                                     ; preds = %13
  %24 = load i64*, i64** %6, align 8
  store i64* %24, i64** %5, align 8
  store i32 -201357643, i32* %12
  br label %27

; <label>:25:                                     ; preds = %13
  %26 = load i64*, i64** %5, align 8
  ret i64* %26

; <label>:27:                                     ; preds = %23, %21, %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8max_sizeERKS6_(%"class.std::allocator"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %2, align 8
  %3 = load %"class.std::allocator"*, %"class.std::allocator"** %2, align 8
  %4 = bitcast %"class.std::allocator"* %3 to %"class.__gnu_cxx::new_allocator"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator"* @_ZNKSt12_Vector_baseISt6vectorIN7networkIiE4edgeESaIS3_EESaIS5_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.185
  %6 = load i32, i32* @y.186
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -349712483, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -349712483, label %18
    i32 -804399710, label %26
    i32 1542278418, label %46
    i32 -1417516359, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -804399710, i32 -1417516359
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %27, align 8
  %28 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %28, i32 0, i32 0
  %30 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %29 to %"class.std::allocator"*
  store %"class.std::allocator"* %30, %"class.std::allocator"** %2
  %31 = load i32, i32* @x.185
  %32 = load i32, i32* @y.186
  %33 = add i32 %31, 1230470869
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1230470869
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1542278418, i32 -1417516359
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile %"class.std::allocator"*, %"class.std::allocator"** %2
  ret %"class.std::allocator"* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"struct.std::_Vector_base"*, align 8
  store %"struct.std::_Vector_base"* %0, %"struct.std::_Vector_base"** %49, align 8
  %50 = load %"struct.std::_Vector_base"*, %"struct.std::_Vector_base"** %49, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %50, i32 0, i32 0
  %52 = bitcast %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %51 to %"class.std::allocator"*
  store i32 -804399710, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.187
  %5 = load i32, i32* @y.188
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -892367758, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %59
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -892367758, label %17
    i32 -781649112, label %25
    i32 222784874, label %55
    i32 -58033786, label %56
  ]

; <label>:16:                                     ; preds = %14
  br label %59

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 -781649112, i32 -58033786
  store i32 %24, i32* %13
  br label %59

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %26, align 8
  %28 = load i32, i32* @x.187
  %29 = load i32, i32* @y.188
  %30 = add i32 %28, -1213513314
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -1213513314
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 true, true
  %41 = and i1 %38, true
  %42 = and i1 %36, %40
  %43 = and i1 %39, true
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 true, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  %54 = select i1 %52, i32 222784874, i32 -58033786
  store i32 %54, i32* %13
  br label %59

; <label>:55:                                     ; preds = %14
  ret i64 768614336404564650

; <label>:56:                                     ; preds = %14
  %57 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %57, align 8
  %58 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %57, align 8
  store i32 -781649112, i32* %13
  br label %59

; <label>:59:                                     ; preds = %56, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZNSt16allocator_traitsISaISt6vectorIN7networkIiE4edgeESaIS3_EEEE8allocateERS6_m(%"class.std::allocator"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator"* %0, %"class.std::allocator"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator"*, %"class.std::allocator"** %3, align 8
  %6 = bitcast %"class.std::allocator"* %5 to %"class.__gnu_cxx::new_allocator"*
  %7 = load i64, i64* %4, align 8
  %8 = call %"class.std::vector.2"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"* %6, i64 %7, i8* null)
  ret %"class.std::vector.2"* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZN9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i64*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.191
  %9 = load i32, i32* @y.192
  %10 = add i32 %8, -800663812
  %11 = sub i32 %10, 1
  %12 = sub i32 %11, -800663812
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1310162187, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %130
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1310162187, label %22
    i32 811937751, label %30
    i32 -684584339, label %67
    i32 720607171, label %70
    i32 -234166767, label %98
    i32 -816760269, label %114
    i32 1397038567, label %115
    i32 -934324682, label %121
    i32 -1286492335, label %129
  ]

; <label>:21:                                     ; preds = %19
  br label %130

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 811937751, i32 -934324682
  store i32 %29, i32* %18
  br label %130

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %5
  %33 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %34 = load volatile i64*, i64** %5
  store i64 %1, i64* %34, align 8
  store i8* %2, i8** %33, align 8
  %35 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %31, align 8
  %36 = load volatile i64*, i64** %5
  %37 = load i64, i64* %36, align 8
  %38 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %35) #3
  %39 = icmp ugt i64 %37, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.191
  %41 = load i32, i32* @y.192
  %42 = sub i32 %40, -1453252796
  %43 = sub i32 %42, 1
  %44 = add i32 %43, -1453252796
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -684584339, i32 -934324682
  store i32 %66, i32* %18
  br label %130

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 720607171, i32 1397038567
  store i32 %69, i32* %18
  br label %130

; <label>:70:                                     ; preds = %19
  %71 = load i32, i32* @x.191
  %72 = load i32, i32* @y.192
  %73 = add i32 %71, 865028819
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, 865028819
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = xor i1 %79, true
  %82 = xor i1 %80, true
  %83 = xor i1 false, true
  %84 = and i1 %81, false
  %85 = and i1 %79, %83
  %86 = and i1 %82, false
  %87 = and i1 %80, %83
  %88 = or i1 %84, %85
  %89 = or i1 %86, %87
  %90 = xor i1 %88, %89
  %91 = or i1 %81, %82
  %92 = xor i1 %91, true
  %93 = or i1 false, %83
  %94 = and i1 %92, %93
  %95 = or i1 %90, %94
  %96 = or i1 %79, %80
  %97 = select i1 %95, i32 -234166767, i32 -1286492335
  store i32 %97, i32* %18
  br label %130

; <label>:98:                                     ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  %99 = load i32, i32* @x.191
  %100 = load i32, i32* @y.192
  %101 = add i32 %99, 1047425445
  %102 = sub i32 %101, 1
  %103 = sub i32 %102, 1047425445
  %104 = sub i32 %99, 1
  %105 = mul i32 %99, %103
  %106 = urem i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = icmp slt i32 %100, 10
  %109 = and i1 %107, %108
  %110 = xor i1 %107, %108
  %111 = or i1 %109, %110
  %112 = or i1 %107, %108
  %113 = select i1 %111, i32 -816760269, i32 -1286492335
  store i32 %113, i32* %18
  br label %130

; <label>:114:                                    ; preds = %19
  unreachable

; <label>:115:                                    ; preds = %19
  %116 = load volatile i64*, i64** %5
  %117 = load i64, i64* %116, align 8
  %118 = mul i64 %117, 24
  %119 = call i8* @_Znwm(i64 %118)
  %120 = bitcast i8* %119 to %"class.std::vector.2"*
  ret %"class.std::vector.2"* %120

; <label>:121:                                    ; preds = %19
  %122 = alloca %"class.__gnu_cxx::new_allocator"*, align 8
  %123 = alloca i64, align 8
  %124 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator"* %0, %"class.__gnu_cxx::new_allocator"** %122, align 8
  store i64 %1, i64* %123, align 8
  store i8* %2, i8** %124, align 8
  %125 = load %"class.__gnu_cxx::new_allocator"*, %"class.__gnu_cxx::new_allocator"** %122, align 8
  %126 = load i64, i64* %123, align 8
  %127 = call i64 @_ZNK9__gnu_cxx13new_allocatorISt6vectorIN7networkIiE4edgeESaIS4_EEE8max_sizeEv(%"class.__gnu_cxx::new_allocator"* %125) #3
  %128 = icmp ugt i64 %126, %127
  store i32 811937751, i32* %18
  br label %130

; <label>:129:                                    ; preds = %19
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 -234166767, i32* %18
  br label %130

; <label>:130:                                    ; preds = %129, %121, %98, %70, %67, %30, %22, %21
  br label %19
}

; Function Attrs: noreturn
declare void @_ZSt17__throw_bad_allocv() #9

; Function Attrs: nobuiltin
declare noalias i8* @_Znwm(i64) #10

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_S6_ET0_T_SA_S9_RSaIT1_E(%"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::allocator"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::move_iterator", align 8
  %7 = alloca %"class.std::vector.2"*, align 8
  %8 = alloca %"class.std::allocator"*, align 8
  %9 = alloca %"class.std::move_iterator", align 8
  %10 = alloca %"class.std::move_iterator", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %6, i32 0, i32 0
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %12, align 8
  store %"class.std::vector.2"* %2, %"class.std::vector.2"** %7, align 8
  store %"class.std::allocator"* %3, %"class.std::allocator"** %8, align 8
  %13 = bitcast %"class.std::move_iterator"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %9, i32 0, i32 0
  %19 = load %"class.std::vector.2"*, %"class.std::vector.2"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %10, i32 0, i32 0
  %21 = load %"class.std::vector.2"*, %"class.std::vector.2"** %20, align 8
  %22 = call %"class.std::vector.2"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.2"* %19, %"class.std::vector.2"* %21, %"class.std::vector.2"* %17)
  ret %"class.std::vector.2"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt32__make_move_if_noexcept_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EESt13move_iteratorIS6_EET0_T_(%"class.std::vector.2"*) #0 comdat {
  %2 = alloca %"class.std::move_iterator", align 8
  %3 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  %4 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  call void @_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"* %2, %"class.std::vector.2"* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %2, i32 0, i32 0
  %6 = load %"class.std::vector.2"*, %"class.std::vector.2"** %5, align 8
  ret %"class.std::vector.2"* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZSt18uninitialized_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS4_EEES7_ET0_T_SA_S9_(%"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::vector.2"*) #0 comdat {
  %4 = alloca %"class.std::vector.2"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.197
  %8 = load i32, i32* @y.198
  %9 = add i32 %7, -509831918
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -509831918
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 2063917906, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %108
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 2063917906, label %21
    i32 -1990003440, label %41
    i32 -72670312, label %87
    i32 -402557568, label %89
  ]

; <label>:20:                                     ; preds = %18
  br label %108

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 false, true
  %27 = and i1 %24, false
  %28 = and i1 %22, %26
  %29 = and i1 %25, false
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 false, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1990003440, i32 -402557568
  store i32 %40, i32* %17
  br label %108

; <label>:41:                                     ; preds = %18
  %42 = alloca %"class.std::move_iterator", align 8
  %43 = alloca %"class.std::move_iterator", align 8
  %44 = alloca %"class.std::vector.2"*, align 8
  %45 = alloca i8, align 1
  %46 = alloca %"class.std::move_iterator", align 8
  %47 = alloca %"class.std::move_iterator", align 8
  %48 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %42, i32 0, i32 0
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %48, align 8
  %49 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %43, i32 0, i32 0
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %49, align 8
  store %"class.std::vector.2"* %2, %"class.std::vector.2"** %44, align 8
  store i8 1, i8* %45, align 1
  %50 = bitcast %"class.std::move_iterator"* %46 to i8*
  %51 = bitcast %"class.std::move_iterator"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %50, i8* %51, i64 8, i32 8, i1 false)
  %52 = bitcast %"class.std::move_iterator"* %47 to i8*
  %53 = bitcast %"class.std::move_iterator"* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %52, i8* %53, i64 8, i32 8, i1 false)
  %54 = load %"class.std::vector.2"*, %"class.std::vector.2"** %44, align 8
  %55 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %46, i32 0, i32 0
  %56 = load %"class.std::vector.2"*, %"class.std::vector.2"** %55, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %47, i32 0, i32 0
  %58 = load %"class.std::vector.2"*, %"class.std::vector.2"** %57, align 8
  %59 = call %"class.std::vector.2"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.2"* %56, %"class.std::vector.2"* %58, %"class.std::vector.2"* %54)
  store %"class.std::vector.2"* %59, %"class.std::vector.2"** %4
  %60 = load i32, i32* @x.197
  %61 = load i32, i32* @y.198
  %62 = add i32 %60, -2095356506
  %63 = sub i32 %62, 1
  %64 = sub i32 %63, -2095356506
  %65 = sub i32 %60, 1
  %66 = mul i32 %60, %64
  %67 = urem i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = icmp slt i32 %61, 10
  %70 = xor i1 %68, true
  %71 = xor i1 %69, true
  %72 = xor i1 true, true
  %73 = and i1 %70, true
  %74 = and i1 %68, %72
  %75 = and i1 %71, true
  %76 = and i1 %69, %72
  %77 = or i1 %73, %74
  %78 = or i1 %75, %76
  %79 = xor i1 %77, %78
  %80 = or i1 %70, %71
  %81 = xor i1 %80, true
  %82 = or i1 true, %72
  %83 = and i1 %81, %82
  %84 = or i1 %79, %83
  %85 = or i1 %68, %69
  %86 = select i1 %84, i32 -72670312, i32 -402557568
  store i32 %86, i32* %17
  br label %108

; <label>:87:                                     ; preds = %18
  %88 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %4
  ret %"class.std::vector.2"* %88

; <label>:89:                                     ; preds = %18
  %90 = alloca %"class.std::move_iterator", align 8
  %91 = alloca %"class.std::move_iterator", align 8
  %92 = alloca %"class.std::vector.2"*, align 8
  %93 = alloca i8, align 1
  %94 = alloca %"class.std::move_iterator", align 8
  %95 = alloca %"class.std::move_iterator", align 8
  %96 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %90, i32 0, i32 0
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %96, align 8
  %97 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %91, i32 0, i32 0
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %97, align 8
  store %"class.std::vector.2"* %2, %"class.std::vector.2"** %92, align 8
  store i8 1, i8* %93, align 1
  %98 = bitcast %"class.std::move_iterator"* %94 to i8*
  %99 = bitcast %"class.std::move_iterator"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %98, i8* %99, i64 8, i32 8, i1 false)
  %100 = bitcast %"class.std::move_iterator"* %95 to i8*
  %101 = bitcast %"class.std::move_iterator"* %91 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %100, i8* %101, i64 8, i32 8, i1 false)
  %102 = load %"class.std::vector.2"*, %"class.std::vector.2"** %92, align 8
  %103 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %94, i32 0, i32 0
  %104 = load %"class.std::vector.2"*, %"class.std::vector.2"** %103, align 8
  %105 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %95, i32 0, i32 0
  %106 = load %"class.std::vector.2"*, %"class.std::vector.2"** %105, align 8
  %107 = call %"class.std::vector.2"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.2"* %104, %"class.std::vector.2"* %106, %"class.std::vector.2"* %102)
  store i32 -1990003440, i32* %17
  br label %108

; <label>:108:                                    ; preds = %89, %41, %21, %20
  br label %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr %"class.std::vector.2"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS6_EEES9_EET0_T_SC_SB_(%"class.std::vector.2"*, %"class.std::vector.2"*, %"class.std::vector.2"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::move_iterator", align 8
  %5 = alloca %"class.std::move_iterator", align 8
  %6 = alloca %"class.std::vector.2"*, align 8
  %7 = alloca %"class.std::vector.2"*, align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %4, i32 0, i32 0
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %10, align 8
  %11 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %11, align 8
  store %"class.std::vector.2"* %2, %"class.std::vector.2"** %6, align 8
  %12 = load %"class.std::vector.2"*, %"class.std::vector.2"** %6, align 8
  store %"class.std::vector.2"* %12, %"class.std::vector.2"** %7, align 8
  br label %13

; <label>:13:                                     ; preds = %163, %3
  %14 = load i32, i32* @x.199
  %15 = load i32, i32* @y.200
  %16 = add i32 %14, 931568465
  %17 = sub i32 %16, 1
  %18 = sub i32 %17, 931568465
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = icmp slt i32 %15, 10
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  br i1 %38, label %40, label %302

; <label>:40:                                     ; preds = %13, %302
  %41 = load i32, i32* @x.199
  %42 = load i32, i32* @y.200
  %43 = add i32 %41, 780732478
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, 780732478
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  br i1 %53, label %55, label %302

; <label>:55:                                     ; preds = %40
  %56 = invoke zeroext i1 @_ZStneIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %4, %"class.std::move_iterator"* dereferenceable(8) %5)
          to label %57 unwind label %164

; <label>:57:                                     ; preds = %55
  br i1 %56, label %58, label %204

; <label>:58:                                     ; preds = %57
  %59 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %60 = call %"class.std::vector.2"* @_ZSt11__addressofISt6vectorIN7networkIiE4edgeESaIS3_EEEPT_RS6_(%"class.std::vector.2"* dereferenceable(24) %59) #3
  %61 = invoke dereferenceable(24) %"class.std::vector.2"* @_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator"* %4)
          to label %62 unwind label %164

; <label>:62:                                     ; preds = %58
  %63 = load i32, i32* @x.199
  %64 = load i32, i32* @y.200
  %65 = sub i32 %63, -1092441479
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1092441479
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 true, true
  %76 = and i1 %73, true
  %77 = and i1 %71, %75
  %78 = and i1 %74, true
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 true, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %303

; <label>:89:                                     ; preds = %62, %303
  %90 = load i32, i32* @x.199
  %91 = load i32, i32* @y.200
  %92 = sub i32 0, 1
  %93 = add i32 %90, %92
  %94 = sub i32 %90, 1
  %95 = mul i32 %90, %93
  %96 = urem i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = icmp slt i32 %91, 10
  %99 = and i1 %97, %98
  %100 = xor i1 %97, %98
  %101 = or i1 %99, %100
  %102 = or i1 %97, %98
  br i1 %101, label %103, label %303

; <label>:103:                                    ; preds = %89
  invoke void @_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.2"* %60, %"class.std::vector.2"* dereferenceable(24) %61)
          to label %104 unwind label %164

; <label>:104:                                    ; preds = %103
  br label %105

; <label>:105:                                    ; preds = %104
  %106 = invoke dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEppEv(%"class.std::move_iterator"* %4)
          to label %107 unwind label %164

; <label>:107:                                    ; preds = %105
  %108 = load i32, i32* @x.199
  %109 = load i32, i32* @y.200
  %110 = add i32 %108, -1949407717
  %111 = sub i32 %110, 1
  %112 = sub i32 %111, -1949407717
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = xor i1 %116, true
  %119 = xor i1 %117, true
  %120 = xor i1 false, true
  %121 = and i1 %118, false
  %122 = and i1 %116, %120
  %123 = and i1 %119, false
  %124 = and i1 %117, %120
  %125 = or i1 %121, %122
  %126 = or i1 %123, %124
  %127 = xor i1 %125, %126
  %128 = or i1 %118, %119
  %129 = xor i1 %128, true
  %130 = or i1 false, %120
  %131 = and i1 %129, %130
  %132 = or i1 %127, %131
  %133 = or i1 %116, %117
  br i1 %132, label %134, label %304

; <label>:134:                                    ; preds = %107, %304
  %135 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %136 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %135, i32 1
  store %"class.std::vector.2"* %136, %"class.std::vector.2"** %7, align 8
  %137 = load i32, i32* @x.199
  %138 = load i32, i32* @y.200
  %139 = sub i32 %137, 662102374
  %140 = sub i32 %139, 1
  %141 = add i32 %140, 662102374
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 false, true
  %150 = and i1 %147, false
  %151 = and i1 %145, %149
  %152 = and i1 %148, false
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 false, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  br i1 %161, label %163, label %304

; <label>:163:                                    ; preds = %134
  br label %13

; <label>:164:                                    ; preds = %105, %103, %58, %55
  %165 = landingpad { i8*, i32 }
          catch i8* null
  %166 = extractvalue { i8*, i32 } %165, 0
  store i8* %166, i8** %8, align 8
  %167 = extractvalue { i8*, i32 } %165, 1
  store i32 %167, i32* %9, align 4
  br label %168

; <label>:168:                                    ; preds = %164
  %169 = load i8*, i8** %8, align 8
  %170 = call i8* @__cxa_begin_catch(i8* %169) #3
  %171 = load %"class.std::vector.2"*, %"class.std::vector.2"** %6, align 8
  %172 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  invoke void @_ZSt8_DestroyIPSt6vectorIN7networkIiE4edgeESaIS3_EEEvT_S7_(%"class.std::vector.2"* %171, %"class.std::vector.2"* %172)
          to label %173 unwind label %206

; <label>:173:                                    ; preds = %168
  %174 = load i32, i32* @x.199
  %175 = load i32, i32* @y.200
  %176 = add i32 %174, -1799631719
  %177 = sub i32 %176, 1
  %178 = sub i32 %177, -1799631719
  %179 = sub i32 %174, 1
  %180 = mul i32 %174, %178
  %181 = urem i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = icmp slt i32 %175, 10
  %184 = and i1 %182, %183
  %185 = xor i1 %182, %183
  %186 = or i1 %184, %185
  %187 = or i1 %182, %183
  br i1 %186, label %188, label %307

; <label>:188:                                    ; preds = %173, %307
  %189 = load i32, i32* @x.199
  %190 = load i32, i32* @y.200
  %191 = add i32 %189, 213091363
  %192 = sub i32 %191, 1
  %193 = sub i32 %192, 213091363
  %194 = sub i32 %189, 1
  %195 = mul i32 %189, %193
  %196 = urem i32 %195, 2
  %197 = icmp eq i32 %196, 0
  %198 = icmp slt i32 %190, 10
  %199 = and i1 %197, %198
  %200 = xor i1 %197, %198
  %201 = or i1 %199, %200
  %202 = or i1 %197, %198
  br i1 %201, label %203, label %307

; <label>:203:                                    ; preds = %188
  invoke void @__cxa_rethrow() #12
          to label %301 unwind label %206

; <label>:204:                                    ; preds = %57
  %205 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  ret %"class.std::vector.2"* %205

; <label>:206:                                    ; preds = %203, %168
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %8, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %9, align 4
  invoke void @__cxa_end_catch()
          to label %210 unwind label %298

; <label>:210:                                    ; preds = %206
  br label %253
                                                  ; No predecessors!
  %212 = load i32, i32* @x.199
  %213 = load i32, i32* @y.200
  %214 = add i32 %212, 2043575246
  %215 = sub i32 %214, 1
  %216 = sub i32 %215, 2043575246
  %217 = sub i32 %212, 1
  %218 = mul i32 %212, %216
  %219 = urem i32 %218, 2
  %220 = icmp eq i32 %219, 0
  %221 = icmp slt i32 %213, 10
  %222 = xor i1 %220, true
  %223 = xor i1 %221, true
  %224 = xor i1 false, true
  %225 = and i1 %222, false
  %226 = and i1 %220, %224
  %227 = and i1 %223, false
  %228 = and i1 %221, %224
  %229 = or i1 %225, %226
  %230 = or i1 %227, %228
  %231 = xor i1 %229, %230
  %232 = or i1 %222, %223
  %233 = xor i1 %232, true
  %234 = or i1 false, %224
  %235 = and i1 %233, %234
  %236 = or i1 %231, %235
  %237 = or i1 %220, %221
  br i1 %236, label %238, label %308

; <label>:238:                                    ; preds = %211, %308
  call void @llvm.trap()
  %239 = load i32, i32* @x.199
  %240 = load i32, i32* @y.200
  %241 = sub i32 0, 1
  %242 = add i32 %239, %241
  %243 = sub i32 %239, 1
  %244 = mul i32 %239, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %240, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %308

; <label>:252:                                    ; preds = %238
  unreachable

; <label>:253:                                    ; preds = %210
  %254 = load i32, i32* @x.199
  %255 = load i32, i32* @y.200
  %256 = sub i32 0, 1
  %257 = add i32 %254, %256
  %258 = sub i32 %254, 1
  %259 = mul i32 %254, %257
  %260 = urem i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = icmp slt i32 %255, 10
  %263 = xor i1 %261, true
  %264 = xor i1 %262, true
  %265 = xor i1 false, true
  %266 = and i1 %263, false
  %267 = and i1 %261, %265
  %268 = and i1 %264, false
  %269 = and i1 %262, %265
  %270 = or i1 %266, %267
  %271 = or i1 %268, %269
  %272 = xor i1 %270, %271
  %273 = or i1 %263, %264
  %274 = xor i1 %273, true
  %275 = or i1 false, %265
  %276 = and i1 %274, %275
  %277 = or i1 %272, %276
  %278 = or i1 %261, %262
  br i1 %277, label %279, label %309

; <label>:279:                                    ; preds = %253, %309
  %280 = load i8*, i8** %8, align 8
  %281 = load i32, i32* %9, align 4
  %282 = insertvalue { i8*, i32 } undef, i8* %280, 0
  %283 = insertvalue { i8*, i32 } %282, i32 %281, 1
  %284 = load i32, i32* @x.199
  %285 = load i32, i32* @y.200
  %286 = sub i32 0, 1
  %287 = add i32 %284, %286
  %288 = sub i32 %284, 1
  %289 = mul i32 %284, %287
  %290 = urem i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = icmp slt i32 %285, 10
  %293 = and i1 %291, %292
  %294 = xor i1 %291, %292
  %295 = or i1 %293, %294
  %296 = or i1 %291, %292
  br i1 %295, label %297, label %309

; <label>:297:                                    ; preds = %279
  resume { i8*, i32 } %283

; <label>:298:                                    ; preds = %206
  %299 = landingpad { i8*, i32 }
          catch i8* null
  %300 = extractvalue { i8*, i32 } %299, 0
  call void @__clang_call_terminate(i8* %300) #8
  unreachable

; <label>:301:                                    ; preds = %203
  unreachable

; <label>:302:                                    ; preds = %40, %13
  br label %40

; <label>:303:                                    ; preds = %89, %62
  br label %89

; <label>:304:                                    ; preds = %134, %107
  %305 = load %"class.std::vector.2"*, %"class.std::vector.2"** %7, align 8
  %306 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %305, i32 1
  store %"class.std::vector.2"* %306, %"class.std::vector.2"** %7, align 8
  br label %134

; <label>:307:                                    ; preds = %188, %173
  br label %188

; <label>:308:                                    ; preds = %238, %211
  call void @llvm.trap()
  br label %238

; <label>:309:                                    ; preds = %279, %253
  %310 = load i8*, i8** %8, align 8
  %311 = load i32, i32* %9, align 4
  %312 = insertvalue { i8*, i32 } undef, i8* %310, 0
  %313 = insertvalue { i8*, i32 } %312, i32 %311, 1
  br label %279
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8) %5, %"class.std::move_iterator"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = or i1 %9, %11
  %13 = xor i1 %7, true
  ret i1 %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructISt6vectorIN7networkIiE4edgeESaIS3_EEJS5_EEvPT_DpOT0_(%"class.std::vector.2"*, %"class.std::vector.2"* dereferenceable(24)) #5 comdat {
  %3 = alloca %"class.std::vector.2"*, align 8
  %4 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %4, align 8
  %5 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %6 = bitcast %"class.std::vector.2"* %5 to i8*
  %7 = bitcast i8* %6 to %"class.std::vector.2"*
  %8 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %9 = call dereferenceable(24) %"class.std::vector.2"* @_ZSt7forwardISt6vectorIN7networkIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.2"* dereferenceable(24) %8) #3
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.2"* %7, %"class.std::vector.2"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.2"* @_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEdeEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.205
  %6 = load i32, i32* @y.206
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -215641720, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %77
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -215641720, label %18
    i32 -780675805, label %38
    i32 -871515366, label %70
    i32 1075588914, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %77

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -780675805, i32 1075588914
  store i32 %37, i32* %14
  br label %77

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %39, align 8
  %40 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %39, align 8
  %41 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %40, i32 0, i32 0
  %42 = load %"class.std::vector.2"*, %"class.std::vector.2"** %41, align 8
  store %"class.std::vector.2"* %42, %"class.std::vector.2"** %2
  %43 = load i32, i32* @x.205
  %44 = load i32, i32* @y.206
  %45 = sub i32 %43, 1455079253
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1455079253
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 true, true
  %56 = and i1 %53, true
  %57 = and i1 %51, %55
  %58 = and i1 %54, true
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 true, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -871515366, i32 1075588914
  store i32 %69, i32* %14
  br label %77

; <label>:70:                                     ; preds = %15
  %71 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %2
  ret %"class.std::vector.2"* %71

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %73, align 8
  %74 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %73, align 8
  %75 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %74, i32 0, i32 0
  %76 = load %"class.std::vector.2"*, %"class.std::vector.2"** %75, align 8
  store i32 -780675805, i32* %14
  br label %77

; <label>:77:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator"* @_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEppEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.207
  %6 = load i32, i32* @y.208
  %7 = sub i32 %5, -1056886239
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1056886239
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1891601928, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1891601928, label %19
    i32 -26815532, label %27
    i32 -1829145615, label %49
    i32 737451476, label %51
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -26815532, i32 737451476
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  store %"class.std::move_iterator"* %29, %"class.std::move_iterator"** %2
  %30 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  %31 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %30, i32 0, i32 0
  %32 = load %"class.std::vector.2"*, %"class.std::vector.2"** %31, align 8
  %33 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %32, i32 1
  store %"class.std::vector.2"* %33, %"class.std::vector.2"** %31, align 8
  %34 = load i32, i32* @x.207
  %35 = load i32, i32* @y.208
  %36 = add i32 %34, -2015762823
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -2015762823
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 -1829145615, i32 737451476
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  %50 = load volatile %"class.std::move_iterator"*, %"class.std::move_iterator"** %2
  ret %"class.std::move_iterator"* %50

; <label>:51:                                     ; preds = %16
  %52 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %52, align 8
  %53 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %52, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %53, i32 0, i32 0
  %55 = load %"class.std::vector.2"*, %"class.std::vector.2"** %54, align 8
  %56 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %55, i32 1
  store %"class.std::vector.2"* %56, %"class.std::vector.2"** %54, align 8
  store i32 -26815532, i32* %15
  br label %57

; <label>:57:                                     ; preds = %51, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPSt6vectorIN7networkIiE4edgeESaIS3_EEEbRKSt13move_iteratorIT_ESB_(%"class.std::move_iterator"* dereferenceable(8), %"class.std::move_iterator"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::move_iterator"* %1, %"class.std::move_iterator"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = call %"class.std::vector.2"* @_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %5)
  %7 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %4, align 8
  %8 = call %"class.std::vector.2"* @_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"* %7)
  %9 = icmp eq %"class.std::vector.2"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"class.std::vector.2"* @_ZNKSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEE4baseEv(%"class.std::move_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.211
  %6 = load i32, i32* @y.212
  %7 = add i32 %5, -964211927
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -964211927
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -217234906, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -217234906, label %19
    i32 451647772, label %27
    i32 -824564307, label %47
    i32 -906863013, label %49
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 451647772, i32 -906863013
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %28, align 8
  %29 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %28, align 8
  %30 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %29, i32 0, i32 0
  %31 = load %"class.std::vector.2"*, %"class.std::vector.2"** %30, align 8
  store %"class.std::vector.2"* %31, %"class.std::vector.2"** %2
  %32 = load i32, i32* @x.211
  %33 = load i32, i32* @y.212
  %34 = add i32 %32, -1646545613
  %35 = sub i32 %34, 1
  %36 = sub i32 %35, -1646545613
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 -824564307, i32 -906863013
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  %48 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %2
  ret %"class.std::vector.2"* %48

; <label>:49:                                     ; preds = %16
  %50 = alloca %"class.std::move_iterator"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %50, align 8
  %51 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %50, align 8
  %52 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %51, i32 0, i32 0
  %53 = load %"class.std::vector.2"*, %"class.std::vector.2"** %52, align 8
  store i32 451647772, i32* %15
  br label %54

; <label>:54:                                     ; preds = %49, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.2"* @_ZSt7forwardISt6vectorIN7networkIiE4edgeESaIS3_EEEOT_RNSt16remove_referenceIS6_E4typeE(%"class.std::vector.2"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %2, align 8
  %3 = load %"class.std::vector.2"*, %"class.std::vector.2"** %2, align 8
  ret %"class.std::vector.2"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEC2EOS4_(%"class.std::vector.2"*, %"class.std::vector.2"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::vector.2"*, align 8
  %4 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %4, align 8
  %5 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %6 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  %7 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  %8 = call dereferenceable(24) %"class.std::vector.2"* @_ZSt4moveIRSt6vectorIN7networkIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.2"* dereferenceable(24) %7) #3
  %9 = bitcast %"class.std::vector.2"* %8 to %"struct.std::_Vector_base.8"*
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.8"* %6, %"struct.std::_Vector_base.8"* dereferenceable(24) %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.2"* @_ZSt4moveIRSt6vectorIN7networkIiE4edgeESaIS3_EEEONSt16remove_referenceIT_E4typeEOS8_(%"class.std::vector.2"* dereferenceable(24)) #5 comdat {
  %2 = alloca %"class.std::vector.2"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.217
  %6 = load i32, i32* @y.218
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -794610229, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %73
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -794610229, label %18
    i32 -1266116327, label %38
    i32 1554354795, label %68
    i32 769403527, label %70
  ]

; <label>:17:                                     ; preds = %15
  br label %73

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1266116327, i32 769403527
  store i32 %37, i32* %14
  br label %73

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %39, align 8
  %40 = load %"class.std::vector.2"*, %"class.std::vector.2"** %39, align 8
  store %"class.std::vector.2"* %40, %"class.std::vector.2"** %2
  %41 = load i32, i32* @x.217
  %42 = load i32, i32* @y.218
  %43 = add i32 %41, -2017579115
  %44 = sub i32 %43, 1
  %45 = sub i32 %44, -2017579115
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = xor i1 %49, true
  %52 = xor i1 %50, true
  %53 = xor i1 false, true
  %54 = and i1 %51, false
  %55 = and i1 %49, %53
  %56 = and i1 %52, false
  %57 = and i1 %50, %53
  %58 = or i1 %54, %55
  %59 = or i1 %56, %57
  %60 = xor i1 %58, %59
  %61 = or i1 %51, %52
  %62 = xor i1 %61, true
  %63 = or i1 false, %53
  %64 = and i1 %62, %63
  %65 = or i1 %60, %64
  %66 = or i1 %49, %50
  %67 = select i1 %65, i32 1554354795, i32 769403527
  store i32 %67, i32* %14
  br label %73

; <label>:68:                                     ; preds = %15
  %69 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %2
  ret %"class.std::vector.2"* %69

; <label>:70:                                     ; preds = %15
  %71 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %71, align 8
  %72 = load %"class.std::vector.2"*, %"class.std::vector.2"** %71, align 8
  store i32 -1266116327, i32* %14
  br label %73

; <label>:73:                                     ; preds = %70, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EEC2EOS4_(%"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"* dereferenceable(24)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base.8"*, align 8
  %4 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %3, align 8
  store %"struct.std::_Vector_base.8"* %1, %"struct.std::_Vector_base.8"** %4, align 8
  %5 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %7) #3
  %9 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaIN7networkIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.9"* dereferenceable(1) %8) #3
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %6, %"class.std::allocator.9"* dereferenceable(1) %9) #3
  %10 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %11 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %11, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %10, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* dereferenceable(24) %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaIN7networkIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.9"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.221
  %6 = load i32, i32* @y.222
  %7 = add i32 %5, 802276971
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 802276971
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -640651813, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %62
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -640651813, label %19
    i32 1376919007, label %27
    i32 -286294960, label %57
    i32 1329566100, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %62

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1376919007, i32 1329566100
  store i32 %26, i32* %15
  br label %62

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %28, align 8
  %29 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %28, align 8
  store %"class.std::allocator.9"* %29, %"class.std::allocator.9"** %2
  %30 = load i32, i32* @x.221
  %31 = load i32, i32* @y.222
  %32 = add i32 %30, -1871437422
  %33 = sub i32 %32, 1
  %34 = sub i32 %33, -1871437422
  %35 = sub i32 %30, 1
  %36 = mul i32 %30, %34
  %37 = urem i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = icmp slt i32 %31, 10
  %40 = xor i1 %38, true
  %41 = xor i1 %39, true
  %42 = xor i1 false, true
  %43 = and i1 %40, false
  %44 = and i1 %38, %42
  %45 = and i1 %41, false
  %46 = and i1 %39, %42
  %47 = or i1 %43, %44
  %48 = or i1 %45, %46
  %49 = xor i1 %47, %48
  %50 = or i1 %40, %41
  %51 = xor i1 %50, true
  %52 = or i1 false, %42
  %53 = and i1 %51, %52
  %54 = or i1 %49, %53
  %55 = or i1 %38, %39
  %56 = select i1 %54, i32 -286294960, i32 1329566100
  store i32 %56, i32* %15
  br label %62

; <label>:57:                                     ; preds = %16
  %58 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %60, align 8
  %61 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %60, align 8
  store i32 1376919007, i32* %15
  br label %62

; <label>:62:                                     ; preds = %59, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_implC2EOS3_(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.223
  %6 = load i32, i32* @y.224
  %7 = add i32 %5, -1258808773
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -1258808773
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 279134646, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %74
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 279134646, label %19
    i32 998139166, label %39
    i32 497395912, label %63
    i32 1244517899, label %64
  ]

; <label>:18:                                     ; preds = %16
  br label %74

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 998139166, i32 1244517899
  store i32 %38, i32* %15
  br label %74

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  %41 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %40, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %41, align 8
  %42 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %40, align 8
  %43 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42 to %"class.std::allocator.9"*
  %44 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %41, align 8
  %45 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaIN7networkIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.9"* dereferenceable(1) %44) #3
  call void @_ZNSaIN7networkIiE4edgeEEC2ERKS2_(%"class.std::allocator.9"* %43, %"class.std::allocator.9"* dereferenceable(1) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42, i32 0, i32 0
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %46, align 8
  %47 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42, i32 0, i32 1
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %47, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42, i32 0, i32 2
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %48, align 8
  %49 = load i32, i32* @x.223
  %50 = load i32, i32* @y.224
  %51 = sub i32 0, 1
  %52 = add i32 %49, %51
  %53 = sub i32 %49, 1
  %54 = mul i32 %49, %52
  %55 = urem i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = icmp slt i32 %50, 10
  %58 = and i1 %56, %57
  %59 = xor i1 %56, %57
  %60 = or i1 %58, %59
  %61 = or i1 %56, %57
  %62 = select i1 %60, i32 497395912, i32 1244517899
  store i32 %62, i32* %15
  br label %74

; <label>:63:                                     ; preds = %16
  ret void

; <label>:64:                                     ; preds = %16
  %65 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  %66 = alloca %"class.std::allocator.9"*, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %65, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %66, align 8
  %67 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %65, align 8
  %68 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %67 to %"class.std::allocator.9"*
  %69 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %66, align 8
  %70 = call dereferenceable(1) %"class.std::allocator.9"* @_ZSt4moveIRSaIN7networkIiE4edgeEEEONSt16remove_referenceIT_E4typeEOS6_(%"class.std::allocator.9"* dereferenceable(1) %69) #3
  call void @_ZNSaIN7networkIiE4edgeEEC2ERKS2_(%"class.std::allocator.9"* %68, %"class.std::allocator.9"* dereferenceable(1) %70) #3
  %71 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %67, i32 0, i32 0
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %71, align 8
  %72 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %67, i32 0, i32 1
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %72, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %67, i32 0, i32 2
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %73, align 8
  store i32 998139166, i32* %15
  br label %74

; <label>:74:                                     ; preds = %64, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE12_Vector_impl12_M_swap_dataERS5_(%"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  %4 = alloca %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %0, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %3, align 8
  store %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %1, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %4, align 8
  %5 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  call void @_ZSt4swapIPN7networkIiE4edgeEEvRT_S5_(%"struct.network<int>::edge"** dereferenceable(8) %6, %"struct.network<int>::edge"** dereferenceable(8) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %5, i32 0, i32 1
  %10 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %10, i32 0, i32 1
  call void @_ZSt4swapIPN7networkIiE4edgeEEvRT_S5_(%"struct.network<int>::edge"** dereferenceable(8) %9, %"struct.network<int>::edge"** dereferenceable(8) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %5, i32 0, i32 2
  %13 = load %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"*, %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %13, i32 0, i32 2
  call void @_ZSt4swapIPN7networkIiE4edgeEEvRT_S5_(%"struct.network<int>::edge"** dereferenceable(8) %12, %"struct.network<int>::edge"** dereferenceable(8) %14) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIN7networkIiE4edgeEEC2ERKS2_(%"class.std::allocator.9"*, %"class.std::allocator.9"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.227
  %6 = load i32, i32* @y.228
  %7 = sub i32 %5, -675006247
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -675006247
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -401710624, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %57
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -401710624, label %19
    i32 1897269831, label %27
    i32 257883132, label %49
    i32 -1900538090, label %50
  ]

; <label>:18:                                     ; preds = %16
  br label %57

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1897269831, i32 -1900538090
  store i32 %26, i32* %15
  br label %57

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::allocator.9"*, align 8
  %29 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %28, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %29, align 8
  %30 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %28, align 8
  %31 = bitcast %"class.std::allocator.9"* %30 to %"class.__gnu_cxx::new_allocator.10"*
  %32 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %29, align 8
  %33 = bitcast %"class.std::allocator.9"* %32 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.10"* %31, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %33) #3
  %34 = load i32, i32* @x.227
  %35 = load i32, i32* @y.228
  %36 = add i32 %34, -906351786
  %37 = sub i32 %36, 1
  %38 = sub i32 %37, -906351786
  %39 = sub i32 %34, 1
  %40 = mul i32 %34, %38
  %41 = urem i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = icmp slt i32 %35, 10
  %44 = and i1 %42, %43
  %45 = xor i1 %42, %43
  %46 = or i1 %44, %45
  %47 = or i1 %42, %43
  %48 = select i1 %46, i32 257883132, i32 -1900538090
  store i32 %48, i32* %15
  br label %57

; <label>:49:                                     ; preds = %16
  ret void

; <label>:50:                                     ; preds = %16
  %51 = alloca %"class.std::allocator.9"*, align 8
  %52 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %51, align 8
  store %"class.std::allocator.9"* %1, %"class.std::allocator.9"** %52, align 8
  %53 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %51, align 8
  %54 = bitcast %"class.std::allocator.9"* %53 to %"class.__gnu_cxx::new_allocator.10"*
  %55 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %52, align 8
  %56 = bitcast %"class.std::allocator.9"* %55 to %"class.__gnu_cxx::new_allocator.10"*
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.10"* %54, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1) %56) #3
  store i32 1897269831, i32* %15
  br label %57

; <label>:57:                                     ; preds = %50, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEEC2ERKS4_(%"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.229
  %6 = load i32, i32* @y.230
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1476068688, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1476068688, label %18
    i32 -1990913871, label %38
    i32 -1407865065, label %57
    i32 -1467408947, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1990913871, i32 -1467408947
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %40 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %39, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %40, align 8
  %41 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %39, align 8
  %42 = load i32, i32* @x.229
  %43 = load i32, i32* @y.230
  %44 = add i32 %42, -742880236
  %45 = sub i32 %44, 1
  %46 = sub i32 %45, -742880236
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -1407865065, i32 -1467408947
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %60 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %59, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %1, %"class.__gnu_cxx::new_allocator.10"** %60, align 8
  %61 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %59, align 8
  store i32 -1990913871, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPN7networkIiE4edgeEEvRT_S5_(%"struct.network<int>::edge"** dereferenceable(8), %"struct.network<int>::edge"** dereferenceable(8)) #5 comdat {
  %3 = alloca %"struct.network<int>::edge"**, align 8
  %4 = alloca %"struct.network<int>::edge"**, align 8
  %5 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"** %0, %"struct.network<int>::edge"*** %3, align 8
  store %"struct.network<int>::edge"** %1, %"struct.network<int>::edge"*** %4, align 8
  %6 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %3, align 8
  %7 = call dereferenceable(8) %"struct.network<int>::edge"** @_ZSt4moveIRPN7networkIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.network<int>::edge"** dereferenceable(8) %6) #3
  %8 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7, align 8
  store %"struct.network<int>::edge"* %8, %"struct.network<int>::edge"** %5, align 8
  %9 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %4, align 8
  %10 = call dereferenceable(8) %"struct.network<int>::edge"** @_ZSt4moveIRPN7networkIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.network<int>::edge"** dereferenceable(8) %9) #3
  %11 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %10, align 8
  %12 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %3, align 8
  store %"struct.network<int>::edge"* %11, %"struct.network<int>::edge"** %12, align 8
  %13 = call dereferenceable(8) %"struct.network<int>::edge"** @_ZSt4moveIRPN7networkIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.network<int>::edge"** dereferenceable(8) %5) #3
  %14 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %15 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %4, align 8
  store %"struct.network<int>::edge"* %14, %"struct.network<int>::edge"** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.network<int>::edge"** @_ZSt4moveIRPN7networkIiE4edgeEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.network<int>::edge"** dereferenceable(8)) #5 comdat {
  %2 = alloca %"struct.network<int>::edge"**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.233
  %6 = load i32, i32* @y.234
  %7 = add i32 %5, 591092592
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 591092592
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1612600552, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1612600552, label %19
    i32 -1226443441, label %39
    i32 -801681551, label %56
    i32 18247683, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1226443441, i32 18247683
  store i32 %38, i32* %15
  br label %61

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.network<int>::edge"**, align 8
  store %"struct.network<int>::edge"** %0, %"struct.network<int>::edge"*** %40, align 8
  %41 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %40, align 8
  store %"struct.network<int>::edge"** %41, %"struct.network<int>::edge"*** %2
  %42 = load i32, i32* @x.233
  %43 = load i32, i32* @y.234
  %44 = sub i32 0, 1
  %45 = add i32 %42, %44
  %46 = sub i32 %42, 1
  %47 = mul i32 %42, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %43, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 -801681551, i32 18247683
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %2
  ret %"struct.network<int>::edge"** %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.network<int>::edge"**, align 8
  store %"struct.network<int>::edge"** %0, %"struct.network<int>::edge"*** %59, align 8
  %60 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %59, align 8
  store i32 -1226443441, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPSt6vectorIN7networkIiE4edgeESaIS3_EEEC2ES6_(%"class.std::move_iterator"*, %"class.std::vector.2"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator"*, align 8
  %4 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::move_iterator"* %0, %"class.std::move_iterator"** %3, align 8
  store %"class.std::vector.2"* %1, %"class.std::vector.2"** %4, align 8
  %5 = load %"class.std::move_iterator"*, %"class.std::move_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator", %"class.std::move_iterator"* %5, i32 0, i32 0
  %7 = load %"class.std::vector.2"*, %"class.std::vector.2"** %4, align 8
  store %"class.std::vector.2"* %7, %"class.std::vector.2"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector"* %0, %"class.std::vector"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector"*, %"class.std::vector"** %3, align 8
  %6 = bitcast %"class.std::vector"* %5 to %"struct.std::_Vector_base"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base", %"struct.std::_Vector_base"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl", %"struct.std::_Vector_base<std::vector<network<int>::edge, std::allocator<network<int>::edge> >, std::allocator<std::vector<network<int>::edge, std::allocator<network<int>::edge> > > >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"class.std::vector.2"*, %"class.std::vector.2"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"class.std::vector.2", %"class.std::vector.2"* %9, i64 %10
  ret %"class.std::vector.2"* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimRKiiEEEvDpOT_(%"class.std::vector.2"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %6 = alloca %"struct.network<int>::edge"*
  %7 = alloca %"struct.network<int>::edge"*
  %8 = alloca %"class.std::vector.2"*
  %9 = alloca %"class.std::vector.2"*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64*, align 8
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %9, align 8
  store i32* %1, i32** %10, align 8
  store i64* %2, i64** %11, align 8
  store i32* %3, i32** %12, align 8
  store i32* %4, i32** %13, align 8
  %14 = load %"class.std::vector.2"*, %"class.std::vector.2"** %9, align 8
  store %"class.std::vector.2"* %14, %"class.std::vector.2"** %8
  %15 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  %16 = bitcast %"class.std::vector.2"* %15 to %"struct.std::_Vector_base.8"*
  %17 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %17, i32 0, i32 1
  %19 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %18, align 8
  store %"struct.network<int>::edge"* %19, %"struct.network<int>::edge"** %7
  %20 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  %21 = bitcast %"class.std::vector.2"* %20 to %"struct.std::_Vector_base.8"*
  %22 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %21, i32 0, i32 0
  %23 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %22, i32 0, i32 2
  %24 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %23, align 8
  store %"struct.network<int>::edge"* %24, %"struct.network<int>::edge"** %6
  %25 = alloca i32
  store i32 -420948291, i32* %25
  br label %26

; <label>:26:                                     ; preds = %5, %69
  %27 = load i32, i32* %25
  switch i32 %27, label %28 [
    i32 -420948291, label %29
    i32 338874679, label %34
    i32 1121828689, label %58
    i32 1100598084, label %68
  ]

; <label>:28:                                     ; preds = %26
  br label %69

; <label>:29:                                     ; preds = %26
  %30 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7
  %31 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %6
  %32 = icmp ne %"struct.network<int>::edge"* %30, %31
  %33 = select i1 %32, i32 338874679, i32 1121828689
  store i32 %33, i32* %25
  br label %69

; <label>:34:                                     ; preds = %26
  %35 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  %36 = bitcast %"class.std::vector.2"* %35 to %"struct.std::_Vector_base.8"*
  %37 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %36, i32 0, i32 0
  %38 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %37 to %"class.std::allocator.9"*
  %39 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  %40 = bitcast %"class.std::vector.2"* %39 to %"struct.std::_Vector_base.8"*
  %41 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %41, i32 0, i32 1
  %43 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %42, align 8
  %44 = load i32*, i32** %10, align 8
  %45 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %44) #3
  %46 = load i64*, i64** %11, align 8
  %47 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %46) #3
  %48 = load i32*, i32** %12, align 8
  %49 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %48) #3
  %50 = load i32*, i32** %13, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %50) #3
  call void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimRKiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %38, %"struct.network<int>::edge"* %43, i32* dereferenceable(4) %45, i64* dereferenceable(8) %47, i32* dereferenceable(4) %49, i32* dereferenceable(4) %51)
  %52 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  %53 = bitcast %"class.std::vector.2"* %52 to %"struct.std::_Vector_base.8"*
  %54 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %54, i32 0, i32 1
  %56 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %55, align 8
  %57 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %56, i32 1
  store %"struct.network<int>::edge"* %57, %"struct.network<int>::edge"** %55, align 8
  store i32 1100598084, i32* %25
  br label %69

; <label>:58:                                     ; preds = %26
  %59 = load i32*, i32** %10, align 8
  %60 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %59) #3
  %61 = load i64*, i64** %11, align 8
  %62 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %61) #3
  %63 = load i32*, i32** %12, align 8
  %64 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %63) #3
  %65 = load i32*, i32** %13, align 8
  %66 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %65) #3
  %67 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %8
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimRKiiEEEvDpOT_(%"class.std::vector.2"* %67, i32* dereferenceable(4) %60, i64* dereferenceable(8) %62, i32* dereferenceable(4) %64, i32* dereferenceable(4) %66)
  store i32 1100598084, i32* %25
  br label %69

; <label>:68:                                     ; preds = %26
  ret void

; <label>:69:                                     ; preds = %58, %34, %29, %28
  br label %26
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.241
  %6 = load i32, i32* @y.242
  %7 = add i32 %5, -378423253
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -378423253
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 121126560, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %137
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 121126560, label %19
    i32 1996780487, label %39
    i32 1857111946, label %83
    i32 -2086033475, label %85
  ]

; <label>:18:                                     ; preds = %16
  br label %137

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1996780487, i32 -2086033475
  store i32 %38, i32* %15
  br label %137

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %40, align 8
  %41 = load %"class.std::vector.2"*, %"class.std::vector.2"** %40, align 8
  %42 = bitcast %"class.std::vector.2"* %41 to %"struct.std::_Vector_base.8"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %43, i32 0, i32 1
  %45 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %44, align 8
  %46 = bitcast %"class.std::vector.2"* %41 to %"struct.std::_Vector_base.8"*
  %47 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %46, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %47, i32 0, i32 0
  %49 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %48, align 8
  %50 = ptrtoint %"struct.network<int>::edge"* %45 to i64
  %51 = ptrtoint %"struct.network<int>::edge"* %49 to i64
  %52 = sub i64 0, %51
  %53 = add i64 %50, %52
  %54 = sub i64 %50, %51
  %55 = sdiv exact i64 %53, 16
  store i64 %55, i64* %2
  %56 = load i32, i32* @x.241
  %57 = load i32, i32* @y.242
  %58 = sub i32 %56, 1092374094
  %59 = sub i32 %58, 1
  %60 = add i32 %59, 1092374094
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 false, true
  %69 = and i1 %66, false
  %70 = and i1 %64, %68
  %71 = and i1 %67, false
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 false, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  %82 = select i1 %80, i32 1857111946, i32 -2086033475
  store i32 %82, i32* %15
  br label %137

; <label>:83:                                     ; preds = %16
  %84 = load volatile i64, i64* %2
  ret i64 %84

; <label>:85:                                     ; preds = %16
  %86 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %86, align 8
  %87 = load %"class.std::vector.2"*, %"class.std::vector.2"** %86, align 8
  %88 = bitcast %"class.std::vector.2"* %87 to %"struct.std::_Vector_base.8"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %89, i32 0, i32 1
  %91 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %90, align 8
  %92 = bitcast %"class.std::vector.2"* %87 to %"struct.std::_Vector_base.8"*
  %93 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %92, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %93, i32 0, i32 0
  %95 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %94, align 8
  %96 = ptrtoint %"struct.network<int>::edge"* %91 to i64
  %97 = ptrtoint %"struct.network<int>::edge"* %95 to i64
  %98 = add i64 %96, 5336334470625812315
  %99 = sub i64 %98, %97
  %100 = sub i64 %99, 5336334470625812315
  %101 = sub i64 %96, %97
  %102 = mul i64 %100, %97
  %103 = shl i64 %96, %97
  %104 = shl i64 %96, %97
  %105 = sub i64 0, %97
  %106 = add i64 %96, %105
  %107 = sub i64 %96, %97
  %108 = shl i64 %106, 16
  %109 = sub i64 %106, -8161146369134707189
  %110 = sub i64 %109, 16
  %111 = add i64 %110, -8161146369134707189
  %112 = sub i64 %106, 16
  %113 = mul i64 %111, 16
  %114 = shl i64 %106, 16
  %115 = sub i64 %106, -1008141696771687321
  %116 = sub i64 %115, 16
  %117 = add i64 %116, -1008141696771687321
  %118 = sub i64 %106, 16
  %119 = mul i64 %117, 16
  %120 = sub i64 0, 16
  %121 = add i64 %106, %120
  %122 = sub i64 %106, 16
  %123 = mul i64 %121, 16
  %124 = sub i64 0, 16
  %125 = add i64 %106, %124
  %126 = sub i64 %106, 16
  %127 = mul i64 %125, 16
  %128 = sub i64 0, 5365648802448902290
  %129 = sub i64 %128, %106
  %130 = add i64 %129, 5365648802448902290
  %131 = sub i64 0, %106
  %132 = add i64 %130, -6301354177837339667
  %133 = add i64 %132, 16
  %134 = sub i64 %133, -6301354177837339667
  %135 = add i64 %130, 16
  %136 = sdiv exact i64 %106, 16
  store i32 1996780487, i32* %15
  br label %137

; <label>:137:                                    ; preds = %85, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE12emplace_backIJRimiiEEEvDpOT_(%"class.std::vector.2"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %6 = alloca i1
  %7 = alloca %"class.std::vector.2"*
  %8 = alloca i32**
  %9 = alloca i32**
  %10 = alloca i64**
  %11 = alloca i32**
  %12 = alloca i1
  %13 = alloca i1
  %14 = load i32, i32* @x.243
  %15 = load i32, i32* @y.244
  %16 = sub i32 %14, -978533482
  %17 = sub i32 %16, 1
  %18 = add i32 %17, -978533482
  %19 = sub i32 %14, 1
  %20 = mul i32 %14, %18
  %21 = urem i32 %20, 2
  %22 = icmp eq i32 %21, 0
  store i1 %22, i1* %13
  %23 = icmp slt i32 %15, 10
  store i1 %23, i1* %12
  %24 = alloca i32
  store i32 -275123775, i32* %24
  br label %25

; <label>:25:                                     ; preds = %5, %146
  %26 = load i32, i32* %24
  switch i32 %26, label %27 [
    i32 -275123775, label %28
    i32 -249677421, label %48
    i32 -818404328, label %84
    i32 -503068840, label %87
    i32 -2065501007, label %115
    i32 310124401, label %129
    i32 942158527, label %130
  ]

; <label>:27:                                     ; preds = %25
  br label %146

; <label>:28:                                     ; preds = %25
  %29 = load volatile i1, i1* %13
  %30 = load volatile i1, i1* %12
  %31 = xor i1 %29, true
  %32 = xor i1 %30, true
  %33 = xor i1 true, true
  %34 = and i1 %31, true
  %35 = and i1 %29, %33
  %36 = and i1 %32, true
  %37 = and i1 %30, %33
  %38 = or i1 %34, %35
  %39 = or i1 %36, %37
  %40 = xor i1 %38, %39
  %41 = or i1 %31, %32
  %42 = xor i1 %41, true
  %43 = or i1 true, %33
  %44 = and i1 %42, %43
  %45 = or i1 %40, %44
  %46 = or i1 %29, %30
  %47 = select i1 %45, i32 -249677421, i32 942158527
  store i32 %47, i32* %24
  br label %146

; <label>:48:                                     ; preds = %25
  %49 = alloca %"class.std::vector.2"*, align 8
  %50 = alloca i32*, align 8
  store i32** %50, i32*** %11
  %51 = alloca i64*, align 8
  store i64** %51, i64*** %10
  %52 = alloca i32*, align 8
  store i32** %52, i32*** %9
  %53 = alloca i32*, align 8
  store i32** %53, i32*** %8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %49, align 8
  %54 = load volatile i32**, i32*** %11
  store i32* %1, i32** %54, align 8
  %55 = load volatile i64**, i64*** %10
  store i64* %2, i64** %55, align 8
  %56 = load volatile i32**, i32*** %9
  store i32* %3, i32** %56, align 8
  %57 = load volatile i32**, i32*** %8
  store i32* %4, i32** %57, align 8
  %58 = load %"class.std::vector.2"*, %"class.std::vector.2"** %49, align 8
  store %"class.std::vector.2"* %58, %"class.std::vector.2"** %7
  %59 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  %60 = bitcast %"class.std::vector.2"* %59 to %"struct.std::_Vector_base.8"*
  %61 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %60, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %61, i32 0, i32 1
  %63 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %62, align 8
  %64 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  %65 = bitcast %"class.std::vector.2"* %64 to %"struct.std::_Vector_base.8"*
  %66 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %65, i32 0, i32 0
  %67 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %66, i32 0, i32 2
  %68 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %67, align 8
  %69 = icmp ne %"struct.network<int>::edge"* %63, %68
  store i1 %69, i1* %6
  %70 = load i32, i32* @x.243
  %71 = load i32, i32* @y.244
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  %83 = select i1 %81, i32 -818404328, i32 942158527
  store i32 %83, i32* %24
  br label %146

; <label>:84:                                     ; preds = %25
  %85 = load volatile i1, i1* %6
  %86 = select i1 %85, i32 -503068840, i32 -2065501007
  store i32 %86, i32* %24
  br label %146

; <label>:87:                                     ; preds = %25
  %88 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  %89 = bitcast %"class.std::vector.2"* %88 to %"struct.std::_Vector_base.8"*
  %90 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %89, i32 0, i32 0
  %91 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %90 to %"class.std::allocator.9"*
  %92 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  %93 = bitcast %"class.std::vector.2"* %92 to %"struct.std::_Vector_base.8"*
  %94 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %94, i32 0, i32 1
  %96 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %95, align 8
  %97 = load volatile i32**, i32*** %11
  %98 = load i32*, i32** %97, align 8
  %99 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %98) #3
  %100 = load volatile i64**, i64*** %10
  %101 = load i64*, i64** %100, align 8
  %102 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %101) #3
  %103 = load volatile i32**, i32*** %9
  %104 = load i32*, i32** %103, align 8
  %105 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %104) #3
  %106 = load volatile i32**, i32*** %8
  %107 = load i32*, i32** %106, align 8
  %108 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %107) #3
  call void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %91, %"struct.network<int>::edge"* %96, i32* dereferenceable(4) %99, i64* dereferenceable(8) %102, i32* dereferenceable(4) %105, i32* dereferenceable(4) %108)
  %109 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  %110 = bitcast %"class.std::vector.2"* %109 to %"struct.std::_Vector_base.8"*
  %111 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %111, i32 0, i32 1
  %113 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %112, align 8
  %114 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %113, i32 1
  store %"struct.network<int>::edge"* %114, %"struct.network<int>::edge"** %112, align 8
  store i32 310124401, i32* %24
  br label %146

; <label>:115:                                    ; preds = %25
  %116 = load volatile i32**, i32*** %11
  %117 = load i32*, i32** %116, align 8
  %118 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %117) #3
  %119 = load volatile i64**, i64*** %10
  %120 = load i64*, i64** %119, align 8
  %121 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %120) #3
  %122 = load volatile i32**, i32*** %9
  %123 = load i32*, i32** %122, align 8
  %124 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %123) #3
  %125 = load volatile i32**, i32*** %8
  %126 = load i32*, i32** %125, align 8
  %127 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %126) #3
  %128 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %7
  call void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimiiEEEvDpOT_(%"class.std::vector.2"* %128, i32* dereferenceable(4) %118, i64* dereferenceable(8) %121, i32* dereferenceable(4) %124, i32* dereferenceable(4) %127)
  store i32 310124401, i32* %24
  br label %146

; <label>:129:                                    ; preds = %25
  ret void

; <label>:130:                                    ; preds = %25
  %131 = alloca %"class.std::vector.2"*, align 8
  %132 = alloca i32*, align 8
  %133 = alloca i64*, align 8
  %134 = alloca i32*, align 8
  %135 = alloca i32*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %131, align 8
  store i32* %1, i32** %132, align 8
  store i64* %2, i64** %133, align 8
  store i32* %3, i32** %134, align 8
  store i32* %4, i32** %135, align 8
  %136 = load %"class.std::vector.2"*, %"class.std::vector.2"** %131, align 8
  %137 = bitcast %"class.std::vector.2"* %136 to %"struct.std::_Vector_base.8"*
  %138 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %137, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %138, i32 0, i32 1
  %140 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %139, align 8
  %141 = bitcast %"class.std::vector.2"* %136 to %"struct.std::_Vector_base.8"*
  %142 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %141, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %142, i32 0, i32 2
  %144 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %143, align 8
  %145 = icmp ne %"struct.network<int>::edge"* %140, %144
  store i32 -249677421, i32* %24
  br label %146

; <label>:146:                                    ; preds = %130, %115, %87, %84, %48, %28, %27
  br label %25
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimRKiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1), %"struct.network<int>::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.245
  %10 = load i32, i32* @y.246
  %11 = sub i32 %9, 1362781321
  %12 = sub i32 %11, 1
  %13 = add i32 %12, 1362781321
  %14 = sub i32 %9, 1
  %15 = mul i32 %9, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %8
  %18 = icmp slt i32 %10, 10
  store i1 %18, i1* %7
  %19 = alloca i32
  store i32 958408481, i32* %19
  br label %20

; <label>:20:                                     ; preds = %6, %83
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 958408481, label %23
    i32 377807641, label %31
    i32 1294299826, label %64
    i32 854805, label %65
  ]

; <label>:22:                                     ; preds = %20
  br label %83

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %8
  %25 = load volatile i1, i1* %7
  %26 = and i1 %24, %25
  %27 = xor i1 %24, %25
  %28 = or i1 %26, %27
  %29 = or i1 %24, %25
  %30 = select i1 %28, i32 377807641, i32 854805
  store i32 %30, i32* %19
  br label %83

; <label>:31:                                     ; preds = %20
  %32 = alloca %"class.std::allocator.9"*, align 8
  %33 = alloca %"struct.network<int>::edge"*, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i64*, align 8
  %36 = alloca i32*, align 8
  %37 = alloca i32*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %32, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %33, align 8
  store i32* %2, i32** %34, align 8
  store i64* %3, i64** %35, align 8
  store i32* %4, i32** %36, align 8
  store i32* %5, i32** %37, align 8
  %38 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %32, align 8
  %39 = bitcast %"class.std::allocator.9"* %38 to %"class.__gnu_cxx::new_allocator.10"*
  %40 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %33, align 8
  %41 = load i32*, i32** %34, align 8
  %42 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %41) #3
  %43 = load i64*, i64** %35, align 8
  %44 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %43) #3
  %45 = load i32*, i32** %36, align 8
  %46 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %45) #3
  %47 = load i32*, i32** %37, align 8
  %48 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %47) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimRKiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %39, %"struct.network<int>::edge"* %40, i32* dereferenceable(4) %42, i64* dereferenceable(8) %44, i32* dereferenceable(4) %46, i32* dereferenceable(4) %48)
  %49 = load i32, i32* @x.245
  %50 = load i32, i32* @y.246
  %51 = add i32 %49, -1678425360
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -1678425360
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 1294299826, i32 854805
  store i32 %63, i32* %19
  br label %83

; <label>:64:                                     ; preds = %20
  ret void

; <label>:65:                                     ; preds = %20
  %66 = alloca %"class.std::allocator.9"*, align 8
  %67 = alloca %"struct.network<int>::edge"*, align 8
  %68 = alloca i32*, align 8
  %69 = alloca i64*, align 8
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %66, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %67, align 8
  store i32* %2, i32** %68, align 8
  store i64* %3, i64** %69, align 8
  store i32* %4, i32** %70, align 8
  store i32* %5, i32** %71, align 8
  %72 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %66, align 8
  %73 = bitcast %"class.std::allocator.9"* %72 to %"class.__gnu_cxx::new_allocator.10"*
  %74 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %67, align 8
  %75 = load i32*, i32** %68, align 8
  %76 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %75) #3
  %77 = load i64*, i64** %69, align 8
  %78 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %77) #3
  %79 = load i32*, i32** %70, align 8
  %80 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %79) #3
  %81 = load i32*, i32** %71, align 8
  %82 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %81) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimRKiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %73, %"struct.network<int>::edge"* %74, i32* dereferenceable(4) %76, i64* dereferenceable(8) %78, i32* dereferenceable(4) %80, i32* dereferenceable(4) %82)
  store i32 377807641, i32* %19
  br label %83

; <label>:83:                                     ; preds = %65, %31, %23, %22
  br label %20
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4)) #5 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimRKiiEEEvDpOT_(%"class.std::vector.2"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::vector.2"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.network<int>::edge"*, align 8
  %13 = alloca %"struct.network<int>::edge"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %16 = load %"class.std::vector.2"*, %"class.std::vector.2"** %6, align 8
  %17 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.2"* %16, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %17, i64* %11, align 8
  %18 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %19 = load i64, i64* %11, align 8
  %20 = call %"struct.network<int>::edge"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %18, i64 %19)
  store %"struct.network<int>::edge"* %20, %"struct.network<int>::edge"** %12, align 8
  %21 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  store %"struct.network<int>::edge"* %21, %"struct.network<int>::edge"** %13, align 8
  %22 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %23 to %"class.std::allocator.9"*
  %25 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %26 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %16) #3
  %27 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %25, i64 %26
  %28 = load i32*, i32** %7, align 8
  %29 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = load i32*, i32** %9, align 8
  %33 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %32) #3
  %34 = load i32*, i32** %10, align 8
  %35 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %34) #3
  invoke void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimRKiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %24, %"struct.network<int>::edge"* %27, i32* dereferenceable(4) %29, i64* dereferenceable(8) %31, i32* dereferenceable(4) %33, i32* dereferenceable(4) %35)
          to label %36 unwind label %106

; <label>:36:                                     ; preds = %5
  %37 = load i32, i32* @x.253
  %38 = load i32, i32* @y.254
  %39 = sub i32 %37, 346988621
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 346988621
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = xor i1 %45, true
  %48 = xor i1 %46, true
  %49 = xor i1 true, true
  %50 = and i1 %47, true
  %51 = and i1 %45, %49
  %52 = and i1 %48, true
  %53 = and i1 %46, %49
  %54 = or i1 %50, %51
  %55 = or i1 %52, %53
  %56 = xor i1 %54, %55
  %57 = or i1 %47, %48
  %58 = xor i1 %57, true
  %59 = or i1 true, %49
  %60 = and i1 %58, %59
  %61 = or i1 %56, %60
  %62 = or i1 %45, %46
  br i1 %61, label %63, label %277

; <label>:63:                                     ; preds = %36, %277
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %13, align 8
  %64 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %65 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %64, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %65, i32 0, i32 0
  %67 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %66, align 8
  %68 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %69 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %68, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %69, i32 0, i32 1
  %71 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %70, align 8
  %72 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %73 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %74 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %73) #3
  %75 = load i32, i32* @x.253
  %76 = load i32, i32* @y.254
  %77 = add i32 %75, -446146416
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -446146416
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = xor i1 %83, true
  %86 = xor i1 %84, true
  %87 = xor i1 true, true
  %88 = and i1 %85, true
  %89 = and i1 %83, %87
  %90 = and i1 %86, true
  %91 = and i1 %84, %87
  %92 = or i1 %88, %89
  %93 = or i1 %90, %91
  %94 = xor i1 %92, %93
  %95 = or i1 %85, %86
  %96 = xor i1 %95, true
  %97 = or i1 true, %87
  %98 = and i1 %96, %97
  %99 = or i1 %94, %98
  %100 = or i1 %83, %84
  br i1 %99, label %101, label %277

; <label>:101:                                    ; preds = %63
  %102 = invoke %"struct.network<int>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7networkIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.network<int>::edge"* %67, %"struct.network<int>::edge"* %71, %"struct.network<int>::edge"* %72, %"class.std::allocator.9"* dereferenceable(1) %74)
          to label %103 unwind label %106

; <label>:103:                                    ; preds = %101
  store %"struct.network<int>::edge"* %102, %"struct.network<int>::edge"** %13, align 8
  %104 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %105 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %104, i32 1
  store %"struct.network<int>::edge"* %105, %"struct.network<int>::edge"** %13, align 8
  br label %181

; <label>:106:                                    ; preds = %101, %5
  %107 = load i32, i32* @x.253
  %108 = load i32, i32* @y.254
  %109 = sub i32 %107, -1701841236
  %110 = sub i32 %109, 1
  %111 = add i32 %110, -1701841236
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %289

; <label>:121:                                    ; preds = %106, %289
  %122 = landingpad { i8*, i32 }
          catch i8* null
  %123 = extractvalue { i8*, i32 } %122, 0
  store i8* %123, i8** %14, align 8
  %124 = extractvalue { i8*, i32 } %122, 1
  store i32 %124, i32* %15, align 4
  %125 = load i32, i32* @x.253
  %126 = load i32, i32* @y.254
  %127 = add i32 %125, -733106108
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -733106108
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 false, true
  %138 = and i1 %135, false
  %139 = and i1 %133, %137
  %140 = and i1 %136, false
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 false, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %289

; <label>:151:                                    ; preds = %121
  br label %152

; <label>:152:                                    ; preds = %151
  %153 = load i8*, i8** %14, align 8
  %154 = call i8* @__cxa_begin_catch(i8* %153) #3
  %155 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %156 = icmp ne %"struct.network<int>::edge"* %155, null
  br i1 %156, label %169, label %157

; <label>:157:                                    ; preds = %152
  %158 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %159 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %158, i32 0, i32 0
  %160 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %159 to %"class.std::allocator.9"*
  %161 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %162 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %16) #3
  %163 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %161, i64 %162
  invoke void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.9"* dereferenceable(1) %160, %"struct.network<int>::edge"* %163)
          to label %164 unwind label %165

; <label>:164:                                    ; preds = %157
  br label %175

; <label>:165:                                    ; preds = %179, %175, %169, %157
  %166 = landingpad { i8*, i32 }
          cleanup
  %167 = extractvalue { i8*, i32 } %166, 0
  store i8* %167, i8** %14, align 8
  %168 = extractvalue { i8*, i32 } %166, 1
  store i32 %168, i32* %15, align 4
  invoke void @__cxa_end_catch()
          to label %180 unwind label %273

; <label>:169:                                    ; preds = %152
  %170 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %171 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %172 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %173 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %172) #3
  invoke void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"* %170, %"struct.network<int>::edge"* %171, %"class.std::allocator.9"* dereferenceable(1) %173)
          to label %174 unwind label %165

; <label>:174:                                    ; preds = %169
  br label %175

; <label>:175:                                    ; preds = %174, %164
  %176 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %177 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %178 = load i64, i64* %11, align 8
  invoke void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"* %176, %"struct.network<int>::edge"* %177, i64 %178)
          to label %179 unwind label %165

; <label>:179:                                    ; preds = %175
  invoke void @__cxa_rethrow() #12
          to label %276 unwind label %165

; <label>:180:                                    ; preds = %165
  br label %226

; <label>:181:                                    ; preds = %103
  %182 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %183 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %182, i32 0, i32 0
  %184 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %183, i32 0, i32 0
  %185 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %184, align 8
  %186 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %187 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %186, i32 0, i32 0
  %188 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %187, i32 0, i32 1
  %189 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %188, align 8
  %190 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %191 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %190) #3
  call void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"* %185, %"struct.network<int>::edge"* %189, %"class.std::allocator.9"* dereferenceable(1) %191)
  %192 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %193 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %194 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %193, i32 0, i32 0
  %195 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %194, i32 0, i32 0
  %196 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %195, align 8
  %197 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %198 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %197, i32 0, i32 0
  %199 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %198, i32 0, i32 2
  %200 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %199, align 8
  %201 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %202 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %201, i32 0, i32 0
  %203 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %202, i32 0, i32 0
  %204 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %203, align 8
  %205 = ptrtoint %"struct.network<int>::edge"* %200 to i64
  %206 = ptrtoint %"struct.network<int>::edge"* %204 to i64
  %207 = sub i64 %205, -2176086393195997079
  %208 = sub i64 %207, %206
  %209 = add i64 %208, -2176086393195997079
  %210 = sub i64 %205, %206
  %211 = sdiv exact i64 %209, 16
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"* %192, %"struct.network<int>::edge"* %196, i64 %211)
  %212 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %213 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %214 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %213, i32 0, i32 0
  %215 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %214, i32 0, i32 0
  store %"struct.network<int>::edge"* %212, %"struct.network<int>::edge"** %215, align 8
  %216 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %217 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %218 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %218, i32 0, i32 1
  store %"struct.network<int>::edge"* %216, %"struct.network<int>::edge"** %219, align 8
  %220 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %221 = load i64, i64* %11, align 8
  %222 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %220, i64 %221
  %223 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %224 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %223, i32 0, i32 0
  %225 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %224, i32 0, i32 2
  store %"struct.network<int>::edge"* %222, %"struct.network<int>::edge"** %225, align 8
  ret void

; <label>:226:                                    ; preds = %180
  %227 = load i32, i32* @x.253
  %228 = load i32, i32* @y.254
  %229 = sub i32 %227, -848369475
  %230 = sub i32 %229, 1
  %231 = add i32 %230, -848369475
  %232 = sub i32 %227, 1
  %233 = mul i32 %227, %231
  %234 = urem i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = icmp slt i32 %228, 10
  %237 = xor i1 %235, true
  %238 = xor i1 %236, true
  %239 = xor i1 true, true
  %240 = and i1 %237, true
  %241 = and i1 %235, %239
  %242 = and i1 %238, true
  %243 = and i1 %236, %239
  %244 = or i1 %240, %241
  %245 = or i1 %242, %243
  %246 = xor i1 %244, %245
  %247 = or i1 %237, %238
  %248 = xor i1 %247, true
  %249 = or i1 true, %239
  %250 = and i1 %248, %249
  %251 = or i1 %246, %250
  %252 = or i1 %235, %236
  br i1 %251, label %253, label %293

; <label>:253:                                    ; preds = %226, %293
  %254 = load i8*, i8** %14, align 8
  %255 = load i32, i32* %15, align 4
  %256 = insertvalue { i8*, i32 } undef, i8* %254, 0
  %257 = insertvalue { i8*, i32 } %256, i32 %255, 1
  %258 = load i32, i32* @x.253
  %259 = load i32, i32* @y.254
  %260 = add i32 %258, -1330512976
  %261 = sub i32 %260, 1
  %262 = sub i32 %261, -1330512976
  %263 = sub i32 %258, 1
  %264 = mul i32 %258, %262
  %265 = urem i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = icmp slt i32 %259, 10
  %268 = and i1 %266, %267
  %269 = xor i1 %266, %267
  %270 = or i1 %268, %269
  %271 = or i1 %266, %267
  br i1 %270, label %272, label %293

; <label>:272:                                    ; preds = %253
  resume { i8*, i32 } %257

; <label>:273:                                    ; preds = %165
  %274 = landingpad { i8*, i32 }
          catch i8* null
  %275 = extractvalue { i8*, i32 } %274, 0
  call void @__clang_call_terminate(i8* %275) #8
  unreachable

; <label>:276:                                    ; preds = %179
  unreachable

; <label>:277:                                    ; preds = %63, %36
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %13, align 8
  %278 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %279 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %278, i32 0, i32 0
  %280 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %279, i32 0, i32 0
  %281 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %280, align 8
  %282 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %283 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %282, i32 0, i32 0
  %284 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %283, i32 0, i32 1
  %285 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %284, align 8
  %286 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %287 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %288 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %287) #3
  br label %63

; <label>:289:                                    ; preds = %121, %106
  %290 = landingpad { i8*, i32 }
          catch i8* null
  %291 = extractvalue { i8*, i32 } %290, 0
  store i8* %291, i8** %14, align 8
  %292 = extractvalue { i8*, i32 } %290, 1
  store i32 %292, i32* %15, align 4
  br label %121

; <label>:293:                                    ; preds = %253, %226
  %294 = load i8*, i8** %14, align 8
  %295 = load i32, i32* %15, align 4
  %296 = insertvalue { i8*, i32 } undef, i8* %294, 0
  %297 = insertvalue { i8*, i32 } %296, i32 %295, 1
  br label %253
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimRKiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"*, %"struct.network<int>::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %7 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %8 = alloca %"struct.network<int>::edge"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %7, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %8, align 8
  store i32* %2, i32** %9, align 8
  store i64* %3, i64** %10, align 8
  store i32* %4, i32** %11, align 8
  store i32* %5, i32** %12, align 8
  %13 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %7, align 8
  %14 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  %15 = bitcast %"struct.network<int>::edge"* %14 to i8*
  %16 = bitcast i8* %15 to %"struct.network<int>::edge"*
  %17 = load i32*, i32** %9, align 8
  %18 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %17) #3
  %19 = load i32, i32* %18, align 4
  %20 = load i64*, i64** %10, align 8
  %21 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %20) #3
  %22 = load i64, i64* %21, align 8
  %23 = trunc i64 %22 to i32
  %24 = load i32*, i32** %11, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %24) #3
  %26 = load i32*, i32** %12, align 8
  %27 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %26) #3
  call void @_ZN7networkIiE4edgeC2EiiRKiS3_(%"struct.network<int>::edge"* %16, i32 %19, i32 %23, i32* dereferenceable(4) %25, i32* dereferenceable(4) %27)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN7networkIiE4edgeC2EiiRKiS3_(%"struct.network<int>::edge"*, i32, i32, i32* dereferenceable(4), i32* dereferenceable(4)) unnamed_addr #5 comdat align 2 {
  %6 = alloca %"struct.network<int>::edge"*, align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %6, align 8
  store i32 %1, i32* %7, align 4
  store i32 %2, i32* %8, align 4
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %11 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %6, align 8
  %12 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %11, i32 0, i32 0
  %13 = load i32, i32* %7, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %11, i32 0, i32 1
  %15 = load i32, i32* %8, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %11, i32 0, i32 2
  %17 = load i32*, i32** %9, align 8
  %18 = load i32, i32* %17, align 4
  store i32 %18, i32* %16, align 4
  %19 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %11, i32 0, i32 3
  %20 = load i32*, i32** %10, align 8
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %19, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.2"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca i1
  %7 = alloca i64
  %8 = alloca i64
  %9 = alloca %"class.std::vector.2"*
  %10 = alloca %"class.std::vector.2"*, align 8
  %11 = alloca i64, align 8
  %12 = alloca i8*, align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %10, align 8
  store i64 %1, i64* %11, align 8
  store i8* %2, i8** %12, align 8
  %15 = load %"class.std::vector.2"*, %"class.std::vector.2"** %10, align 8
  store %"class.std::vector.2"* %15, %"class.std::vector.2"** %9
  %16 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %17 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.2"* %16) #3
  %18 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %19 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %18) #3
  %20 = sub i64 0, %19
  %21 = add i64 %17, %20
  %22 = sub i64 %17, %19
  store i64 %21, i64* %8
  %23 = load i64, i64* %11, align 8
  store i64 %23, i64* %7
  %24 = alloca i32
  store i32 -858495727, i32* %24
  %25 = alloca i64
  br label %26

; <label>:26:                                     ; preds = %3, %192
  %27 = load i32, i32* %24
  switch i32 %27, label %28 [
    i32 -858495727, label %29
    i32 -1663499904, label %34
    i32 190434017, label %36
    i32 -989439796, label %52
    i32 -1373211729, label %82
    i32 402556048, label %85
    i32 1237112410, label %91
    i32 1232148527, label %94
    i32 -1786465154, label %110
    i32 1574201216, label %126
    i32 1743742832, label %128
    i32 -967446158, label %156
    i32 -1122776924, label %171
    i32 834240800, label %173
    i32 -1421306120, label %189
    i32 1559199445, label %191
  ]

; <label>:28:                                     ; preds = %26
  br label %192

; <label>:29:                                     ; preds = %26
  %30 = load volatile i64, i64* %8
  %31 = load volatile i64, i64* %7
  %32 = icmp ult i64 %30, %31
  %33 = select i1 %32, i32 -1663499904, i32 190434017
  store i32 %33, i32* %24
  br label %192

; <label>:34:                                     ; preds = %26
  %35 = load i8*, i8** %12, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %35) #12
  unreachable

; <label>:36:                                     ; preds = %26
  %37 = load i32, i32* @x.259
  %38 = load i32, i32* @y.260
  %39 = add i32 %37, -1650472471
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1650472471
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -989439796, i32 834240800
  store i32 %51, i32* %24
  br label %192

; <label>:52:                                     ; preds = %26
  %53 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %54 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %53) #3
  %55 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %56 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %55) #3
  store i64 %56, i64* %14, align 8
  %57 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %58 = load i64, i64* %57, align 8
  %59 = sub i64 %54, -2975989304664018664
  %60 = add i64 %59, %58
  %61 = add i64 %60, -2975989304664018664
  %62 = add i64 %54, %58
  store i64 %61, i64* %13, align 8
  %63 = load i64, i64* %13, align 8
  %64 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %65 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %64) #3
  %66 = icmp ult i64 %63, %65
  store i1 %66, i1* %6
  %67 = load i32, i32* @x.259
  %68 = load i32, i32* @y.260
  %69 = sub i32 %67, 1205906496
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1205906496
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 -1373211729, i32 834240800
  store i32 %81, i32* %24
  br label %192

; <label>:82:                                     ; preds = %26
  %83 = load volatile i1, i1* %6
  %84 = select i1 %83, i32 1237112410, i32 402556048
  store i32 %84, i32* %24
  br label %192

; <label>:85:                                     ; preds = %26
  %86 = load i64, i64* %13, align 8
  %87 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %88 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.2"* %87) #3
  %89 = icmp ugt i64 %86, %88
  %90 = select i1 %89, i32 1237112410, i32 1232148527
  store i32 %90, i32* %24
  br label %192

; <label>:91:                                     ; preds = %26
  %92 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %93 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.2"* %92) #3
  store i32 1743742832, i32* %24
  store i64 %93, i64* %25
  br label %192

; <label>:94:                                     ; preds = %26
  %95 = load i32, i32* @x.259
  %96 = load i32, i32* @y.260
  %97 = sub i32 %95, -504201150
  %98 = sub i32 %97, 1
  %99 = add i32 %98, -504201150
  %100 = sub i32 %95, 1
  %101 = mul i32 %95, %99
  %102 = urem i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = icmp slt i32 %96, 10
  %105 = and i1 %103, %104
  %106 = xor i1 %103, %104
  %107 = or i1 %105, %106
  %108 = or i1 %103, %104
  %109 = select i1 %107, i32 -1786465154, i32 -1421306120
  store i32 %109, i32* %24
  br label %192

; <label>:110:                                    ; preds = %26
  %111 = load i64, i64* %13, align 8
  store i64 %111, i64* %5
  %112 = load i32, i32* @x.259
  %113 = load i32, i32* @y.260
  %114 = sub i32 0, 1
  %115 = add i32 %112, %114
  %116 = sub i32 %112, 1
  %117 = mul i32 %112, %115
  %118 = urem i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = icmp slt i32 %113, 10
  %121 = and i1 %119, %120
  %122 = xor i1 %119, %120
  %123 = or i1 %121, %122
  %124 = or i1 %119, %120
  %125 = select i1 %123, i32 1574201216, i32 -1421306120
  store i32 %125, i32* %24
  br label %192

; <label>:126:                                    ; preds = %26
  store i32 1743742832, i32* %24
  %127 = load volatile i64, i64* %5
  store i64 %127, i64* %25
  br label %192

; <label>:128:                                    ; preds = %26
  %129 = load i64, i64* %25
  store i64 %129, i64* %4
  %130 = load i32, i32* @x.259
  %131 = load i32, i32* @y.260
  %132 = sub i32 0, 1
  %133 = add i32 %130, %132
  %134 = sub i32 %130, 1
  %135 = mul i32 %130, %133
  %136 = urem i32 %135, 2
  %137 = icmp eq i32 %136, 0
  %138 = icmp slt i32 %131, 10
  %139 = xor i1 %137, true
  %140 = xor i1 %138, true
  %141 = xor i1 false, true
  %142 = and i1 %139, false
  %143 = and i1 %137, %141
  %144 = and i1 %140, false
  %145 = and i1 %138, %141
  %146 = or i1 %142, %143
  %147 = or i1 %144, %145
  %148 = xor i1 %146, %147
  %149 = or i1 %139, %140
  %150 = xor i1 %149, true
  %151 = or i1 false, %141
  %152 = and i1 %150, %151
  %153 = or i1 %148, %152
  %154 = or i1 %137, %138
  %155 = select i1 %153, i32 -967446158, i32 1559199445
  store i32 %155, i32* %24
  br label %192

; <label>:156:                                    ; preds = %26
  %157 = load i32, i32* @x.259
  %158 = load i32, i32* @y.260
  %159 = sub i32 0, 1
  %160 = add i32 %157, %159
  %161 = sub i32 %157, 1
  %162 = mul i32 %157, %160
  %163 = urem i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = icmp slt i32 %158, 10
  %166 = and i1 %164, %165
  %167 = xor i1 %164, %165
  %168 = or i1 %166, %167
  %169 = or i1 %164, %165
  %170 = select i1 %168, i32 -1122776924, i32 1559199445
  store i32 %170, i32* %24
  br label %192

; <label>:171:                                    ; preds = %26
  %172 = load volatile i64, i64* %4
  ret i64 %172

; <label>:173:                                    ; preds = %26
  %174 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %175 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %174) #3
  %176 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %177 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %176) #3
  store i64 %177, i64* %14, align 8
  %178 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %14, i64* dereferenceable(8) %11)
  %179 = load i64, i64* %178, align 8
  %180 = shl i64 %175, %179
  %181 = sub i64 %175, 6306526891922968784
  %182 = add i64 %181, %179
  %183 = add i64 %182, 6306526891922968784
  %184 = add i64 %175, %179
  store i64 %183, i64* %13, align 8
  %185 = load i64, i64* %13, align 8
  %186 = load volatile %"class.std::vector.2"*, %"class.std::vector.2"** %9
  %187 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %186) #3
  %188 = icmp ult i64 %185, %187
  store i32 -989439796, i32* %24
  br label %192

; <label>:189:                                    ; preds = %26
  %190 = load i64, i64* %13, align 8
  store i32 -1786465154, i32* %24
  br label %192

; <label>:191:                                    ; preds = %26
  store i32 -967446158, i32* %24
  br label %192

; <label>:192:                                    ; preds = %191, %189, %173, %156, %128, %126, %110, %94, %91, %85, %82, %52, %36, %29, %28
  br label %26
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.8"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.8"*
  %5 = alloca %"struct.std::_Vector_base.8"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %5, align 8
  store %"struct.std::_Vector_base.8"* %7, %"struct.std::_Vector_base.8"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -773056014, i32* %9
  %10 = alloca %"struct.network<int>::edge"*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -773056014, label %14
    i32 1595947560, label %18
    i32 1761706457, label %24
    i32 1501006906, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 1595947560, i32 1761706457
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %20 to %"class.std::allocator.9"*
  %22 = load i64, i64* %6, align 8
  %23 = call %"struct.network<int>::edge"* @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8allocateERS3_m(%"class.std::allocator.9"* dereferenceable(1) %21, i64 %22)
  store i32 1501006906, i32* %9
  store %"struct.network<int>::edge"* %23, %"struct.network<int>::edge"** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1501006906, i32* %9
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %10
  ret %"struct.network<int>::edge"* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7networkIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"struct.network<int>::edge"*, align 8
  %6 = alloca %"struct.network<int>::edge"*, align 8
  %7 = alloca %"struct.network<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.9"*, align 8
  %9 = alloca %"class.std::move_iterator.12", align 8
  %10 = alloca %"class.std::move_iterator.12", align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %5, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %6, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %7, align 8
  store %"class.std::allocator.9"* %3, %"class.std::allocator.9"** %8, align 8
  %11 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %5, align 8
  %12 = call %"struct.network<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7networkIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.network<int>::edge"* %11)
  %13 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %9, i32 0, i32 0
  store %"struct.network<int>::edge"* %12, %"struct.network<int>::edge"** %13, align 8
  %14 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %6, align 8
  %15 = call %"struct.network<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7networkIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.network<int>::edge"* %14)
  %16 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %10, i32 0, i32 0
  store %"struct.network<int>::edge"* %15, %"struct.network<int>::edge"** %16, align 8
  %17 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7, align 8
  %18 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %8, align 8
  %19 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %9, i32 0, i32 0
  %20 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %19, align 8
  %21 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %10, i32 0, i32 0
  %22 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %21, align 8
  %23 = call %"struct.network<int>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7networkIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.network<int>::edge"* %20, %"struct.network<int>::edge"* %22, %"struct.network<int>::edge"* %17, %"class.std::allocator.9"* dereferenceable(1) %18)
  ret %"struct.network<int>::edge"* %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.9"* dereferenceable(1), %"struct.network<int>::edge"*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.9"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  %5 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %3, align 8
  %6 = bitcast %"class.std::allocator.9"* %5 to %"class.__gnu_cxx::new_allocator.10"*
  %7 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.10"* %6, %"struct.network<int>::edge"* %7)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE8max_sizeEv(%"class.std::vector.2"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.267
  %6 = load i32, i32* @y.268
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -1641554710, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %55
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -1641554710, label %18
    i32 1063633941, label %26
    i32 1738963697, label %47
    i32 1547882432, label %49
  ]

; <label>:17:                                     ; preds = %15
  br label %55

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1063633941, i32 1547882432
  store i32 %25, i32* %14
  br label %55

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %27, align 8
  %28 = load %"class.std::vector.2"*, %"class.std::vector.2"** %27, align 8
  %29 = bitcast %"class.std::vector.2"* %28 to %"struct.std::_Vector_base.8"*
  %30 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %29) #3
  %31 = call i64 @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.9"* dereferenceable(1) %30) #3
  store i64 %31, i64* %2
  %32 = load i32, i32* @x.267
  %33 = load i32, i32* @y.268
  %34 = sub i32 %32, 555376455
  %35 = sub i32 %34, 1
  %36 = add i32 %35, 555376455
  %37 = sub i32 %32, 1
  %38 = mul i32 %32, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %33, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1738963697, i32 1547882432
  store i32 %46, i32* %14
  br label %55

; <label>:47:                                     ; preds = %15
  %48 = load volatile i64, i64* %2
  ret i64 %48

; <label>:49:                                     ; preds = %15
  %50 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %50, align 8
  %51 = load %"class.std::vector.2"*, %"class.std::vector.2"** %50, align 8
  %52 = bitcast %"class.std::vector.2"* %51 to %"struct.std::_Vector_base.8"*
  %53 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %52) #3
  %54 = call i64 @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.9"* dereferenceable(1) %53) #3
  store i32 1063633941, i32* %14
  br label %55

; <label>:55:                                     ; preds = %49, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8max_sizeERKS3_(%"class.std::allocator.9"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %2, align 8
  %3 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %2, align 8
  %4 = bitcast %"class.std::allocator.9"* %3 to %"class.__gnu_cxx::new_allocator.10"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.9"* @_ZNKSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"*) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.9"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.271
  %6 = load i32, i32* @y.272
  %7 = sub i32 %5, -1300692695
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1300692695
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 266308321, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 266308321, label %19
    i32 -1395558311, label %39
    i32 -1030244246, label %59
    i32 -2127501732, label %61
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1395558311, i32 -2127501732
  store i32 %38, i32* %15
  br label %66

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %40, align 8
  %41 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %40, align 8
  %42 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %41, i32 0, i32 0
  %43 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42 to %"class.std::allocator.9"*
  store %"class.std::allocator.9"* %43, %"class.std::allocator.9"** %2
  %44 = load i32, i32* @x.271
  %45 = load i32, i32* @y.272
  %46 = sub i32 %44, 1787547668
  %47 = sub i32 %46, 1
  %48 = add i32 %47, 1787547668
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = and i1 %52, %53
  %55 = xor i1 %52, %53
  %56 = or i1 %54, %55
  %57 = or i1 %52, %53
  %58 = select i1 %56, i32 -1030244246, i32 -2127501732
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  %60 = load volatile %"class.std::allocator.9"*, %"class.std::allocator.9"** %2
  ret %"class.std::allocator.9"* %60

; <label>:61:                                     ; preds = %16
  %62 = alloca %"struct.std::_Vector_base.8"*, align 8
  store %"struct.std::_Vector_base.8"* %0, %"struct.std::_Vector_base.8"** %62, align 8
  %63 = load %"struct.std::_Vector_base.8"*, %"struct.std::_Vector_base.8"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %63, i32 0, i32 0
  %65 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %64 to %"class.std::allocator.9"*
  store i32 -1395558311, i32* %15
  br label %66

; <label>:66:                                     ; preds = %61, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %2, align 8
  ret i64 1152921504606846975
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE8allocateERS3_m(%"class.std::allocator.9"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"struct.network<int>::edge"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.275
  %7 = load i32, i32* @y.276
  %8 = sub i32 %6, 1245239663
  %9 = sub i32 %8, 1
  %10 = add i32 %9, 1245239663
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -603250935, i32* %16
  br label %17

; <label>:17:                                     ; preds = %2, %71
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -603250935, label %20
    i32 -418262655, label %28
    i32 44759049, label %62
    i32 -681404365, label %64
  ]

; <label>:19:                                     ; preds = %17
  br label %71

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -418262655, i32 -681404365
  store i32 %27, i32* %16
  br label %71

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::allocator.9"*, align 8
  %30 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %29, align 8
  store i64 %1, i64* %30, align 8
  %31 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %29, align 8
  %32 = bitcast %"class.std::allocator.9"* %31 to %"class.__gnu_cxx::new_allocator.10"*
  %33 = load i64, i64* %30, align 8
  %34 = call %"struct.network<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %32, i64 %33, i8* null)
  store %"struct.network<int>::edge"* %34, %"struct.network<int>::edge"** %3
  %35 = load i32, i32* @x.275
  %36 = load i32, i32* @y.276
  %37 = add i32 %35, 529041248
  %38 = sub i32 %37, 1
  %39 = sub i32 %38, 529041248
  %40 = sub i32 %35, 1
  %41 = mul i32 %35, %39
  %42 = urem i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = icmp slt i32 %36, 10
  %45 = xor i1 %43, true
  %46 = xor i1 %44, true
  %47 = xor i1 true, true
  %48 = and i1 %45, true
  %49 = and i1 %43, %47
  %50 = and i1 %46, true
  %51 = and i1 %44, %47
  %52 = or i1 %48, %49
  %53 = or i1 %50, %51
  %54 = xor i1 %52, %53
  %55 = or i1 %45, %46
  %56 = xor i1 %55, true
  %57 = or i1 true, %47
  %58 = and i1 %56, %57
  %59 = or i1 %54, %58
  %60 = or i1 %43, %44
  %61 = select i1 %59, i32 44759049, i32 -681404365
  store i32 %61, i32* %16
  br label %71

; <label>:62:                                     ; preds = %17
  %63 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %3
  ret %"struct.network<int>::edge"* %63

; <label>:64:                                     ; preds = %17
  %65 = alloca %"class.std::allocator.9"*, align 8
  %66 = alloca i64, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %65, align 8
  store i64 %1, i64* %66, align 8
  %67 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %65, align 8
  %68 = bitcast %"class.std::allocator.9"* %67 to %"class.__gnu_cxx::new_allocator.10"*
  %69 = load i64, i64* %66, align 8
  %70 = call %"struct.network<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"* %68, i64 %69, i8* null)
  store i32 -418262655, i32* %16
  br label %71

; <label>:71:                                     ; preds = %64, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.10"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE8max_sizeEv(%"class.__gnu_cxx::new_allocator.10"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -648010248, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -648010248, label %16
    i32 -500027517, label %21
    i32 173267367, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -500027517, i32 173267367
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 16
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to %"struct.network<int>::edge"*
  ret %"struct.network<int>::edge"* %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPN7networkIiE4edgeEES4_S3_ET0_T_S7_S6_RSaIT1_E(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"class.std::allocator.9"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.12", align 8
  %6 = alloca %"class.std::move_iterator.12", align 8
  %7 = alloca %"struct.network<int>::edge"*, align 8
  %8 = alloca %"class.std::allocator.9"*, align 8
  %9 = alloca %"class.std::move_iterator.12", align 8
  %10 = alloca %"class.std::move_iterator.12", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %5, i32 0, i32 0
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %6, i32 0, i32 0
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %12, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %7, align 8
  store %"class.std::allocator.9"* %3, %"class.std::allocator.9"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.12"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.12"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.12"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.12"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %9, i32 0, i32 0
  %19 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %10, i32 0, i32 0
  %21 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %20, align 8
  %22 = call %"struct.network<int>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7networkIiE4edgeEES4_ET0_T_S7_S6_(%"struct.network<int>::edge"* %19, %"struct.network<int>::edge"* %21, %"struct.network<int>::edge"* %17)
  ret %"struct.network<int>::edge"* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZSt32__make_move_if_noexcept_iteratorIPN7networkIiE4edgeESt13move_iteratorIS3_EET0_T_(%"struct.network<int>::edge"*) #0 comdat {
  %2 = alloca %"struct.network<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.281
  %6 = load i32, i32* @y.282
  %7 = add i32 %5, -14911465
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -14911465
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1756142904, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %68
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1756142904, label %19
    i32 179234576, label %39
    i32 316410403, label %60
    i32 57206276, label %62
  ]

; <label>:18:                                     ; preds = %16
  br label %68

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 179234576, i32 57206276
  store i32 %38, i32* %15
  br label %68

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.12", align 8
  %41 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %41, align 8
  %42 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %41, align 8
  call void @_ZNSt13move_iteratorIPN7networkIiE4edgeEEC2ES3_(%"class.std::move_iterator.12"* %40, %"struct.network<int>::edge"* %42)
  %43 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %40, i32 0, i32 0
  %44 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %43, align 8
  store %"struct.network<int>::edge"* %44, %"struct.network<int>::edge"** %2
  %45 = load i32, i32* @x.281
  %46 = load i32, i32* @y.282
  %47 = add i32 %45, -2041318914
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -2041318914
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  %59 = select i1 %57, i32 316410403, i32 57206276
  store i32 %59, i32* %15
  br label %68

; <label>:60:                                     ; preds = %16
  %61 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %2
  ret %"struct.network<int>::edge"* %61

; <label>:62:                                     ; preds = %16
  %63 = alloca %"class.std::move_iterator.12", align 8
  %64 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %64, align 8
  %65 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %64, align 8
  call void @_ZNSt13move_iteratorIPN7networkIiE4edgeEEC2ES3_(%"class.std::move_iterator.12"* %63, %"struct.network<int>::edge"* %65)
  %66 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %63, i32 0, i32 0
  %67 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %66, align 8
  store i32 179234576, i32* %15
  br label %68

; <label>:68:                                     ; preds = %62, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZSt18uninitialized_copyISt13move_iteratorIPN7networkIiE4edgeEES4_ET0_T_S7_S6_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"struct.network<int>::edge"*) #0 comdat {
  %4 = alloca %"struct.network<int>::edge"*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.283
  %8 = load i32, i32* @y.284
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -650233205, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %107
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -650233205, label %20
    i32 -708358586, label %40
    i32 1406975833, label %86
    i32 396585605, label %88
  ]

; <label>:19:                                     ; preds = %17
  br label %107

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 false, true
  %26 = and i1 %23, false
  %27 = and i1 %21, %25
  %28 = and i1 %24, false
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 false, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 -708358586, i32 396585605
  store i32 %39, i32* %16
  br label %107

; <label>:40:                                     ; preds = %17
  %41 = alloca %"class.std::move_iterator.12", align 8
  %42 = alloca %"class.std::move_iterator.12", align 8
  %43 = alloca %"struct.network<int>::edge"*, align 8
  %44 = alloca i8, align 1
  %45 = alloca %"class.std::move_iterator.12", align 8
  %46 = alloca %"class.std::move_iterator.12", align 8
  %47 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %41, i32 0, i32 0
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %47, align 8
  %48 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %42, i32 0, i32 0
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %48, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %43, align 8
  store i8 1, i8* %44, align 1
  %49 = bitcast %"class.std::move_iterator.12"* %45 to i8*
  %50 = bitcast %"class.std::move_iterator.12"* %41 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %49, i8* %50, i64 8, i32 8, i1 false)
  %51 = bitcast %"class.std::move_iterator.12"* %46 to i8*
  %52 = bitcast %"class.std::move_iterator.12"* %42 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 8, i32 8, i1 false)
  %53 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %43, align 8
  %54 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %45, i32 0, i32 0
  %55 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %54, align 8
  %56 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %46, i32 0, i32 0
  %57 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %56, align 8
  %58 = call %"struct.network<int>::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7networkIiE4edgeEES6_EET0_T_S9_S8_(%"struct.network<int>::edge"* %55, %"struct.network<int>::edge"* %57, %"struct.network<int>::edge"* %53)
  store %"struct.network<int>::edge"* %58, %"struct.network<int>::edge"** %4
  %59 = load i32, i32* @x.283
  %60 = load i32, i32* @y.284
  %61 = add i32 %59, 881830928
  %62 = sub i32 %61, 1
  %63 = sub i32 %62, 881830928
  %64 = sub i32 %59, 1
  %65 = mul i32 %59, %63
  %66 = urem i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = icmp slt i32 %60, 10
  %69 = xor i1 %67, true
  %70 = xor i1 %68, true
  %71 = xor i1 true, true
  %72 = and i1 %69, true
  %73 = and i1 %67, %71
  %74 = and i1 %70, true
  %75 = and i1 %68, %71
  %76 = or i1 %72, %73
  %77 = or i1 %74, %75
  %78 = xor i1 %76, %77
  %79 = or i1 %69, %70
  %80 = xor i1 %79, true
  %81 = or i1 true, %71
  %82 = and i1 %80, %81
  %83 = or i1 %78, %82
  %84 = or i1 %67, %68
  %85 = select i1 %83, i32 1406975833, i32 396585605
  store i32 %85, i32* %16
  br label %107

; <label>:86:                                     ; preds = %17
  %87 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4
  ret %"struct.network<int>::edge"* %87

; <label>:88:                                     ; preds = %17
  %89 = alloca %"class.std::move_iterator.12", align 8
  %90 = alloca %"class.std::move_iterator.12", align 8
  %91 = alloca %"struct.network<int>::edge"*, align 8
  %92 = alloca i8, align 1
  %93 = alloca %"class.std::move_iterator.12", align 8
  %94 = alloca %"class.std::move_iterator.12", align 8
  %95 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %89, i32 0, i32 0
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %95, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %90, i32 0, i32 0
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %96, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %91, align 8
  store i8 1, i8* %92, align 1
  %97 = bitcast %"class.std::move_iterator.12"* %93 to i8*
  %98 = bitcast %"class.std::move_iterator.12"* %89 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %97, i8* %98, i64 8, i32 8, i1 false)
  %99 = bitcast %"class.std::move_iterator.12"* %94 to i8*
  %100 = bitcast %"class.std::move_iterator.12"* %90 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %99, i8* %100, i64 8, i32 8, i1 false)
  %101 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %91, align 8
  %102 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %93, i32 0, i32 0
  %103 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %102, align 8
  %104 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %94, i32 0, i32 0
  %105 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %104, align 8
  %106 = call %"struct.network<int>::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7networkIiE4edgeEES6_EET0_T_S9_S8_(%"struct.network<int>::edge"* %103, %"struct.network<int>::edge"* %105, %"struct.network<int>::edge"* %101)
  store i32 -708358586, i32* %16
  br label %107

; <label>:107:                                    ; preds = %88, %40, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNSt20__uninitialized_copyILb0EE13__uninit_copyISt13move_iteratorIPN7networkIiE4edgeEES6_EET0_T_S9_S8_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"*, %"struct.network<int>::edge"*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.285
  %5 = load i32, i32* @y.286
  %6 = sub i32 %4, 497451322
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 497451322
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %360

; <label>:18:                                     ; preds = %3, %360
  %19 = alloca %"class.std::move_iterator.12", align 8
  %20 = alloca %"class.std::move_iterator.12", align 8
  %21 = alloca %"struct.network<int>::edge"*, align 8
  %22 = alloca %"struct.network<int>::edge"*, align 8
  %23 = alloca i8*
  %24 = alloca i32
  %25 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %19, i32 0, i32 0
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %25, align 8
  %26 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %20, i32 0, i32 0
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %26, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %21, align 8
  %27 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %21, align 8
  store %"struct.network<int>::edge"* %27, %"struct.network<int>::edge"** %22, align 8
  %28 = load i32, i32* @x.285
  %29 = load i32, i32* @y.286
  %30 = sub i32 0, 1
  %31 = add i32 %28, %30
  %32 = sub i32 %28, 1
  %33 = mul i32 %28, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %29, 10
  %37 = and i1 %35, %36
  %38 = xor i1 %35, %36
  %39 = or i1 %37, %38
  %40 = or i1 %35, %36
  br i1 %39, label %41, label %360

; <label>:41:                                     ; preds = %18
  br label %42

; <label>:42:                                     ; preds = %167, %41
  %43 = invoke zeroext i1 @_ZStneIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.12"* dereferenceable(8) %19, %"class.std::move_iterator.12"* dereferenceable(8) %20)
          to label %44 unwind label %168

; <label>:44:                                     ; preds = %42
  br i1 %43, label %45, label %219

; <label>:45:                                     ; preds = %44
  %46 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  %47 = call %"struct.network<int>::edge"* @_ZSt11__addressofIN7networkIiE4edgeEEPT_RS3_(%"struct.network<int>::edge"* dereferenceable(16) %46) #3
  %48 = invoke dereferenceable(16) %"struct.network<int>::edge"* @_ZNKSt13move_iteratorIPN7networkIiE4edgeEEdeEv(%"class.std::move_iterator.12"* %19)
          to label %49 unwind label %168

; <label>:49:                                     ; preds = %45
  %50 = load i32, i32* @x.285
  %51 = load i32, i32* @y.286
  %52 = add i32 %50, 1096660443
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 1096660443
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  br i1 %62, label %64, label %370

; <label>:64:                                     ; preds = %49, %370
  %65 = load i32, i32* @x.285
  %66 = load i32, i32* @y.286
  %67 = add i32 %65, -1714077052
  %68 = sub i32 %67, 1
  %69 = sub i32 %68, -1714077052
  %70 = sub i32 %65, 1
  %71 = mul i32 %65, %69
  %72 = urem i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = icmp slt i32 %66, 10
  %75 = and i1 %73, %74
  %76 = xor i1 %73, %74
  %77 = or i1 %75, %76
  %78 = or i1 %73, %74
  br i1 %77, label %79, label %370

; <label>:79:                                     ; preds = %64
  invoke void @_ZSt10_ConstructIN7networkIiE4edgeEJS2_EEvPT_DpOT0_(%"struct.network<int>::edge"* %47, %"struct.network<int>::edge"* dereferenceable(16) %48)
          to label %80 unwind label %168

; <label>:80:                                     ; preds = %79
  br label %81

; <label>:81:                                     ; preds = %80
  %82 = load i32, i32* @x.285
  %83 = load i32, i32* @y.286
  %84 = sub i32 0, 1
  %85 = add i32 %82, %84
  %86 = sub i32 %82, 1
  %87 = mul i32 %82, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %83, 10
  %91 = and i1 %89, %90
  %92 = xor i1 %89, %90
  %93 = or i1 %91, %92
  %94 = or i1 %89, %90
  br i1 %93, label %95, label %371

; <label>:95:                                     ; preds = %81, %371
  %96 = load i32, i32* @x.285
  %97 = load i32, i32* @y.286
  %98 = add i32 %96, 329741901
  %99 = sub i32 %98, 1
  %100 = sub i32 %99, 329741901
  %101 = sub i32 %96, 1
  %102 = mul i32 %96, %100
  %103 = urem i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = icmp slt i32 %97, 10
  %106 = xor i1 %104, true
  %107 = xor i1 %105, true
  %108 = xor i1 false, true
  %109 = and i1 %106, false
  %110 = and i1 %104, %108
  %111 = and i1 %107, false
  %112 = and i1 %105, %108
  %113 = or i1 %109, %110
  %114 = or i1 %111, %112
  %115 = xor i1 %113, %114
  %116 = or i1 %106, %107
  %117 = xor i1 %116, true
  %118 = or i1 false, %108
  %119 = and i1 %117, %118
  %120 = or i1 %115, %119
  %121 = or i1 %104, %105
  br i1 %120, label %122, label %371

; <label>:122:                                    ; preds = %95
  %123 = invoke dereferenceable(8) %"class.std::move_iterator.12"* @_ZNSt13move_iteratorIPN7networkIiE4edgeEEppEv(%"class.std::move_iterator.12"* %19)
          to label %124 unwind label %168

; <label>:124:                                    ; preds = %122
  %125 = load i32, i32* @x.285
  %126 = load i32, i32* @y.286
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %372

; <label>:150:                                    ; preds = %124, %372
  %151 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  %152 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %151, i32 1
  store %"struct.network<int>::edge"* %152, %"struct.network<int>::edge"** %22, align 8
  %153 = load i32, i32* @x.285
  %154 = load i32, i32* @y.286
  %155 = sub i32 %153, -1408706358
  %156 = sub i32 %155, 1
  %157 = add i32 %156, -1408706358
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = and i1 %161, %162
  %164 = xor i1 %161, %162
  %165 = or i1 %163, %164
  %166 = or i1 %161, %162
  br i1 %165, label %167, label %372

; <label>:167:                                    ; preds = %150
  br label %42

; <label>:168:                                    ; preds = %122, %79, %45, %42
  %169 = load i32, i32* @x.285
  %170 = load i32, i32* @y.286
  %171 = sub i32 0, 1
  %172 = add i32 %169, %171
  %173 = sub i32 %169, 1
  %174 = mul i32 %169, %172
  %175 = urem i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = icmp slt i32 %170, 10
  %178 = and i1 %176, %177
  %179 = xor i1 %176, %177
  %180 = or i1 %178, %179
  %181 = or i1 %176, %177
  br i1 %180, label %182, label %375

; <label>:182:                                    ; preds = %168, %375
  %183 = landingpad { i8*, i32 }
          catch i8* null
  %184 = extractvalue { i8*, i32 } %183, 0
  store i8* %184, i8** %23, align 8
  %185 = extractvalue { i8*, i32 } %183, 1
  store i32 %185, i32* %24, align 4
  %186 = load i32, i32* @x.285
  %187 = load i32, i32* @y.286
  %188 = add i32 %186, 602680807
  %189 = sub i32 %188, 1
  %190 = sub i32 %189, 602680807
  %191 = sub i32 %186, 1
  %192 = mul i32 %186, %190
  %193 = urem i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = icmp slt i32 %187, 10
  %196 = xor i1 %194, true
  %197 = xor i1 %195, true
  %198 = xor i1 true, true
  %199 = and i1 %196, true
  %200 = and i1 %194, %198
  %201 = and i1 %197, true
  %202 = and i1 %195, %198
  %203 = or i1 %199, %200
  %204 = or i1 %201, %202
  %205 = xor i1 %203, %204
  %206 = or i1 %196, %197
  %207 = xor i1 %206, true
  %208 = or i1 true, %198
  %209 = and i1 %207, %208
  %210 = or i1 %205, %209
  %211 = or i1 %194, %195
  br i1 %210, label %212, label %375

; <label>:212:                                    ; preds = %182
  br label %213

; <label>:213:                                    ; preds = %212
  %214 = load i8*, i8** %23, align 8
  %215 = call i8* @__cxa_begin_catch(i8* %214) #3
  %216 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %21, align 8
  %217 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  invoke void @_ZSt8_DestroyIPN7networkIiE4edgeEEvT_S4_(%"struct.network<int>::edge"* %216, %"struct.network<int>::edge"* %217)
          to label %218 unwind label %275

; <label>:218:                                    ; preds = %213
  invoke void @__cxa_rethrow() #12
          to label %359 unwind label %275

; <label>:219:                                    ; preds = %44
  %220 = load i32, i32* @x.285
  %221 = load i32, i32* @y.286
  %222 = sub i32 %220, 2050554563
  %223 = sub i32 %222, 1
  %224 = add i32 %223, 2050554563
  %225 = sub i32 %220, 1
  %226 = mul i32 %220, %224
  %227 = urem i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = icmp slt i32 %221, 10
  %230 = xor i1 %228, true
  %231 = xor i1 %229, true
  %232 = xor i1 true, true
  %233 = and i1 %230, true
  %234 = and i1 %228, %232
  %235 = and i1 %231, true
  %236 = and i1 %229, %232
  %237 = or i1 %233, %234
  %238 = or i1 %235, %236
  %239 = xor i1 %237, %238
  %240 = or i1 %230, %231
  %241 = xor i1 %240, true
  %242 = or i1 true, %232
  %243 = and i1 %241, %242
  %244 = or i1 %239, %243
  %245 = or i1 %228, %229
  br i1 %244, label %246, label %379

; <label>:246:                                    ; preds = %219, %379
  %247 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  %248 = load i32, i32* @x.285
  %249 = load i32, i32* @y.286
  %250 = add i32 %248, 1281518265
  %251 = sub i32 %250, 1
  %252 = sub i32 %251, 1281518265
  %253 = sub i32 %248, 1
  %254 = mul i32 %248, %252
  %255 = urem i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = icmp slt i32 %249, 10
  %258 = xor i1 %256, true
  %259 = xor i1 %257, true
  %260 = xor i1 false, true
  %261 = and i1 %258, false
  %262 = and i1 %256, %260
  %263 = and i1 %259, false
  %264 = and i1 %257, %260
  %265 = or i1 %261, %262
  %266 = or i1 %263, %264
  %267 = xor i1 %265, %266
  %268 = or i1 %258, %259
  %269 = xor i1 %268, true
  %270 = or i1 false, %260
  %271 = and i1 %269, %270
  %272 = or i1 %267, %271
  %273 = or i1 %256, %257
  br i1 %272, label %274, label %379

; <label>:274:                                    ; preds = %246
  ret %"struct.network<int>::edge"* %247

; <label>:275:                                    ; preds = %218, %213
  %276 = landingpad { i8*, i32 }
          cleanup
  %277 = extractvalue { i8*, i32 } %276, 0
  store i8* %277, i8** %23, align 8
  %278 = extractvalue { i8*, i32 } %276, 1
  store i32 %278, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %279 unwind label %315

; <label>:279:                                    ; preds = %275
  br label %281
                                                  ; No predecessors!
  call void @llvm.trap()
  unreachable

; <label>:281:                                    ; preds = %279
  %282 = load i32, i32* @x.285
  %283 = load i32, i32* @y.286
  %284 = add i32 %282, -73953079
  %285 = sub i32 %284, 1
  %286 = sub i32 %285, -73953079
  %287 = sub i32 %282, 1
  %288 = mul i32 %282, %286
  %289 = urem i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = icmp slt i32 %283, 10
  %292 = and i1 %290, %291
  %293 = xor i1 %290, %291
  %294 = or i1 %292, %293
  %295 = or i1 %290, %291
  br i1 %294, label %296, label %381

; <label>:296:                                    ; preds = %281, %381
  %297 = load i8*, i8** %23, align 8
  %298 = load i32, i32* %24, align 4
  %299 = insertvalue { i8*, i32 } undef, i8* %297, 0
  %300 = insertvalue { i8*, i32 } %299, i32 %298, 1
  %301 = load i32, i32* @x.285
  %302 = load i32, i32* @y.286
  %303 = sub i32 0, 1
  %304 = add i32 %301, %303
  %305 = sub i32 %301, 1
  %306 = mul i32 %301, %304
  %307 = urem i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = icmp slt i32 %302, 10
  %310 = and i1 %308, %309
  %311 = xor i1 %308, %309
  %312 = or i1 %310, %311
  %313 = or i1 %308, %309
  br i1 %312, label %314, label %381

; <label>:314:                                    ; preds = %296
  resume { i8*, i32 } %300

; <label>:315:                                    ; preds = %275
  %316 = load i32, i32* @x.285
  %317 = load i32, i32* @y.286
  %318 = sub i32 0, 1
  %319 = add i32 %316, %318
  %320 = sub i32 %316, 1
  %321 = mul i32 %316, %319
  %322 = urem i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = icmp slt i32 %317, 10
  %325 = and i1 %323, %324
  %326 = xor i1 %323, %324
  %327 = or i1 %325, %326
  %328 = or i1 %323, %324
  br i1 %327, label %329, label %386

; <label>:329:                                    ; preds = %315, %386
  %330 = landingpad { i8*, i32 }
          catch i8* null
  %331 = extractvalue { i8*, i32 } %330, 0
  call void @__clang_call_terminate(i8* %331) #8
  %332 = load i32, i32* @x.285
  %333 = load i32, i32* @y.286
  %334 = add i32 %332, 158366651
  %335 = sub i32 %334, 1
  %336 = sub i32 %335, 158366651
  %337 = sub i32 %332, 1
  %338 = mul i32 %332, %336
  %339 = urem i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = icmp slt i32 %333, 10
  %342 = xor i1 %340, true
  %343 = xor i1 %341, true
  %344 = xor i1 false, true
  %345 = and i1 %342, false
  %346 = and i1 %340, %344
  %347 = and i1 %343, false
  %348 = and i1 %341, %344
  %349 = or i1 %345, %346
  %350 = or i1 %347, %348
  %351 = xor i1 %349, %350
  %352 = or i1 %342, %343
  %353 = xor i1 %352, true
  %354 = or i1 false, %344
  %355 = and i1 %353, %354
  %356 = or i1 %351, %355
  %357 = or i1 %340, %341
  br i1 %356, label %358, label %386

; <label>:358:                                    ; preds = %329
  unreachable

; <label>:359:                                    ; preds = %218
  unreachable

; <label>:360:                                    ; preds = %18, %3
  %361 = alloca %"class.std::move_iterator.12", align 8
  %362 = alloca %"class.std::move_iterator.12", align 8
  %363 = alloca %"struct.network<int>::edge"*, align 8
  %364 = alloca %"struct.network<int>::edge"*, align 8
  %365 = alloca i8*
  %366 = alloca i32
  %367 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %361, i32 0, i32 0
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %367, align 8
  %368 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %362, i32 0, i32 0
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %368, align 8
  store %"struct.network<int>::edge"* %2, %"struct.network<int>::edge"** %363, align 8
  %369 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %363, align 8
  store %"struct.network<int>::edge"* %369, %"struct.network<int>::edge"** %364, align 8
  br label %18

; <label>:370:                                    ; preds = %64, %49
  br label %64

; <label>:371:                                    ; preds = %95, %81
  br label %95

; <label>:372:                                    ; preds = %150, %124
  %373 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  %374 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %373, i32 1
  store %"struct.network<int>::edge"* %374, %"struct.network<int>::edge"** %22, align 8
  br label %150

; <label>:375:                                    ; preds = %182, %168
  %376 = landingpad { i8*, i32 }
          catch i8* null
  %377 = extractvalue { i8*, i32 } %376, 0
  store i8* %377, i8** %23, align 8
  %378 = extractvalue { i8*, i32 } %376, 1
  store i32 %378, i32* %24, align 4
  br label %182

; <label>:379:                                    ; preds = %246, %219
  %380 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %22, align 8
  br label %246

; <label>:381:                                    ; preds = %296, %281
  %382 = load i8*, i8** %23, align 8
  %383 = load i32, i32* %24, align 4
  %384 = insertvalue { i8*, i32 } undef, i8* %382, 0
  %385 = insertvalue { i8*, i32 } %384, i32 %383, 1
  br label %296

; <label>:386:                                    ; preds = %329, %315
  %387 = landingpad { i8*, i32 }
          catch i8* null
  %388 = extractvalue { i8*, i32 } %387, 0
  call void @__clang_call_terminate(i8* %388) #8
  br label %329
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZStneIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.12"* dereferenceable(8), %"class.std::move_iterator.12"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.12"*, align 8
  %4 = alloca %"class.std::move_iterator.12"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %3, align 8
  store %"class.std::move_iterator.12"* %1, %"class.std::move_iterator.12"** %4, align 8
  %5 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %3, align 8
  %6 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %4, align 8
  %7 = call zeroext i1 @_ZSteqIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.12"* dereferenceable(8) %5, %"class.std::move_iterator.12"* dereferenceable(8) %6)
  %8 = xor i1 %7, true
  %9 = and i1 true, %8
  %10 = xor i1 true, true
  %11 = and i1 %7, %10
  %12 = xor i1 true, true
  %13 = and i1 %12, true
  %14 = and i1 true, %10
  %15 = or i1 %9, %11
  %16 = or i1 %13, %14
  %17 = xor i1 %15, %16
  %18 = xor i1 %7, true
  ret i1 %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt10_ConstructIN7networkIiE4edgeEJS2_EEvPT_DpOT0_(%"struct.network<int>::edge"*, %"struct.network<int>::edge"* dereferenceable(16)) #5 comdat {
  %3 = alloca %"struct.network<int>::edge"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %3, align 8
  %6 = bitcast %"struct.network<int>::edge"* %5 to i8*
  %7 = bitcast i8* %6 to %"struct.network<int>::edge"*
  %8 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  %9 = call dereferenceable(16) %"struct.network<int>::edge"* @_ZSt7forwardIN7networkIiE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.network<int>::edge"* dereferenceable(16) %8) #3
  %10 = bitcast %"struct.network<int>::edge"* %7 to i8*
  %11 = bitcast %"struct.network<int>::edge"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %10, i8* %11, i64 16, i32 4, i1 false)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZSt11__addressofIN7networkIiE4edgeEEPT_RS3_(%"struct.network<int>::edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %2, align 8
  %3 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %2, align 8
  %4 = bitcast %"struct.network<int>::edge"* %3 to i8*
  %5 = bitcast i8* %4 to %"struct.network<int>::edge"*
  ret %"struct.network<int>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.network<int>::edge"* @_ZNKSt13move_iteratorIPN7networkIiE4edgeEEdeEv(%"class.std::move_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.12"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %2, align 8
  %3 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %3, i32 0, i32 0
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  ret %"struct.network<int>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.std::move_iterator.12"* @_ZNSt13move_iteratorIPN7networkIiE4edgeEEppEv(%"class.std::move_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.12"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %2, align 8
  %3 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %3, i32 0, i32 0
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  %6 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %5, i32 1
  store %"struct.network<int>::edge"* %6, %"struct.network<int>::edge"** %4, align 8
  ret %"class.std::move_iterator.12"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZSteqIPN7networkIiE4edgeEEbRKSt13move_iteratorIT_ES8_(%"class.std::move_iterator.12"* dereferenceable(8), %"class.std::move_iterator.12"* dereferenceable(8)) #0 comdat {
  %3 = alloca %"class.std::move_iterator.12"*, align 8
  %4 = alloca %"class.std::move_iterator.12"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %3, align 8
  store %"class.std::move_iterator.12"* %1, %"class.std::move_iterator.12"** %4, align 8
  %5 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %3, align 8
  %6 = call %"struct.network<int>::edge"* @_ZNKSt13move_iteratorIPN7networkIiE4edgeEE4baseEv(%"class.std::move_iterator.12"* %5)
  %7 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %4, align 8
  %8 = call %"struct.network<int>::edge"* @_ZNKSt13move_iteratorIPN7networkIiE4edgeEE4baseEv(%"class.std::move_iterator.12"* %7)
  %9 = icmp eq %"struct.network<int>::edge"* %6, %8
  ret i1 %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNKSt13move_iteratorIPN7networkIiE4edgeEE4baseEv(%"class.std::move_iterator.12"*) #5 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.12"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %2, align 8
  %3 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %2, align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %3, i32 0, i32 0
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  ret %"struct.network<int>::edge"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.network<int>::edge"* @_ZSt7forwardIN7networkIiE4edgeEEOT_RNSt16remove_referenceIS3_E4typeE(%"struct.network<int>::edge"* dereferenceable(16)) #5 comdat {
  %2 = alloca %"struct.network<int>::edge"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.301
  %6 = load i32, i32* @y.302
  %7 = add i32 %5, -2049235270
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -2049235270
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1780969170, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %61
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1780969170, label %19
    i32 -1915787133, label %27
    i32 -1501560001, label %56
    i32 -648290795, label %58
  ]

; <label>:18:                                     ; preds = %16
  br label %61

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1915787133, i32 -648290795
  store i32 %26, i32* %15
  br label %61

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %28, align 8
  %29 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %28, align 8
  store %"struct.network<int>::edge"* %29, %"struct.network<int>::edge"** %2
  %30 = load i32, i32* @x.301
  %31 = load i32, i32* @y.302
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 true, true
  %42 = and i1 %39, true
  %43 = and i1 %37, %41
  %44 = and i1 %40, true
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 true, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  %55 = select i1 %53, i32 -1501560001, i32 -648290795
  store i32 %55, i32* %15
  br label %61

; <label>:56:                                     ; preds = %16
  %57 = load volatile %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %2
  ret %"struct.network<int>::edge"* %57

; <label>:58:                                     ; preds = %16
  %59 = alloca %"struct.network<int>::edge"*, align 8
  store %"struct.network<int>::edge"* %0, %"struct.network<int>::edge"** %59, align 8
  %60 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %59, align 8
  store i32 -1915787133, i32* %15
  br label %61

; <label>:61:                                     ; preds = %58, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPN7networkIiE4edgeEEC2ES3_(%"class.std::move_iterator.12"*, %"struct.network<int>::edge"*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.12"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"class.std::move_iterator.12"* %0, %"class.std::move_iterator.12"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  %5 = load %"class.std::move_iterator.12"*, %"class.std::move_iterator.12"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.12", %"class.std::move_iterator.12"* %5, i32 0, i32 0
  %7 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  store %"struct.network<int>::edge"* %7, %"struct.network<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE7destroyIS3_EEvPT_(%"class.__gnu_cxx::new_allocator.10"*, %"struct.network<int>::edge"*) #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %4 = alloca %"struct.network<int>::edge"*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %3, align 8
  %6 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1), %"struct.network<int>::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %7 = alloca %"class.std::allocator.9"*, align 8
  %8 = alloca %"struct.network<int>::edge"*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i64*, align 8
  %11 = alloca i32*, align 8
  %12 = alloca i32*, align 8
  store %"class.std::allocator.9"* %0, %"class.std::allocator.9"** %7, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %8, align 8
  store i32* %2, i32** %9, align 8
  store i64* %3, i64** %10, align 8
  store i32* %4, i32** %11, align 8
  store i32* %5, i32** %12, align 8
  %13 = load %"class.std::allocator.9"*, %"class.std::allocator.9"** %7, align 8
  %14 = bitcast %"class.std::allocator.9"* %13 to %"class.__gnu_cxx::new_allocator.10"*
  %15 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  %16 = load i32*, i32** %9, align 8
  %17 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %16) #3
  %18 = load i64*, i64** %10, align 8
  %19 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %18) #3
  %20 = load i32*, i32** %11, align 8
  %21 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %20) #3
  %22 = load i32*, i32** %12, align 8
  %23 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %22) #3
  call void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"* %14, %"struct.network<int>::edge"* %15, i32* dereferenceable(4) %17, i64* dereferenceable(8) %19, i32* dereferenceable(4) %21, i32* dereferenceable(4) %23)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE19_M_emplace_back_auxIJRimiiEEEvDpOT_(%"class.std::vector.2"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %6 = alloca %"class.std::vector.2"*, align 8
  %7 = alloca i32*, align 8
  %8 = alloca i64*, align 8
  %9 = alloca i32*, align 8
  %10 = alloca i32*, align 8
  %11 = alloca i64, align 8
  %12 = alloca %"struct.network<int>::edge"*, align 8
  %13 = alloca %"struct.network<int>::edge"*, align 8
  %14 = alloca i8*
  %15 = alloca i32
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %6, align 8
  store i32* %1, i32** %7, align 8
  store i64* %2, i64** %8, align 8
  store i32* %3, i32** %9, align 8
  store i32* %4, i32** %10, align 8
  %16 = load %"class.std::vector.2"*, %"class.std::vector.2"** %6, align 8
  %17 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE12_M_check_lenEmPKc(%"class.std::vector.2"* %16, i64 1, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i32 0, i32 0))
  store i64 %17, i64* %11, align 8
  %18 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %19 = load i64, i64* %11, align 8
  %20 = call %"struct.network<int>::edge"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE11_M_allocateEm(%"struct.std::_Vector_base.8"* %18, i64 %19)
  store %"struct.network<int>::edge"* %20, %"struct.network<int>::edge"** %12, align 8
  %21 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  store %"struct.network<int>::edge"* %21, %"struct.network<int>::edge"** %13, align 8
  %22 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %23 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %22, i32 0, i32 0
  %24 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %23 to %"class.std::allocator.9"*
  %25 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %26 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %16) #3
  %27 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %25, i64 %26
  %28 = load i32*, i32** %7, align 8
  %29 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %28) #3
  %30 = load i64*, i64** %8, align 8
  %31 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %30) #3
  %32 = load i32*, i32** %9, align 8
  %33 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %32) #3
  %34 = load i32*, i32** %10, align 8
  %35 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %34) #3
  invoke void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE9constructIS2_JRimiiEEEvRS3_PT_DpOT0_(%"class.std::allocator.9"* dereferenceable(1) %24, %"struct.network<int>::edge"* %27, i32* dereferenceable(4) %29, i64* dereferenceable(8) %31, i32* dereferenceable(4) %33, i32* dereferenceable(4) %35)
          to label %36 unwind label %52

; <label>:36:                                     ; preds = %5
  store %"struct.network<int>::edge"* null, %"struct.network<int>::edge"** %13, align 8
  %37 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %38 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %38, i32 0, i32 0
  %40 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %39, align 8
  %41 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %42 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %42, i32 0, i32 1
  %44 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %43, align 8
  %45 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %46 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %47 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %46) #3
  %48 = invoke %"struct.network<int>::edge"* @_ZSt34__uninitialized_move_if_noexcept_aIPN7networkIiE4edgeES3_SaIS2_EET0_T_S6_S5_RT1_(%"struct.network<int>::edge"* %40, %"struct.network<int>::edge"* %44, %"struct.network<int>::edge"* %45, %"class.std::allocator.9"* dereferenceable(1) %47)
          to label %49 unwind label %52

; <label>:49:                                     ; preds = %36
  store %"struct.network<int>::edge"* %48, %"struct.network<int>::edge"** %13, align 8
  %50 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %51 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %50, i32 1
  store %"struct.network<int>::edge"* %51, %"struct.network<int>::edge"** %13, align 8
  br label %156

; <label>:52:                                     ; preds = %36, %5
  %53 = landingpad { i8*, i32 }
          catch i8* null
  %54 = extractvalue { i8*, i32 } %53, 0
  store i8* %54, i8** %14, align 8
  %55 = extractvalue { i8*, i32 } %53, 1
  store i32 %55, i32* %15, align 4
  br label %56

; <label>:56:                                     ; preds = %52
  %57 = load i8*, i8** %14, align 8
  %58 = call i8* @__cxa_begin_catch(i8* %57) #3
  %59 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %60 = icmp ne %"struct.network<int>::edge"* %59, null
  br i1 %60, label %114, label %61

; <label>:61:                                     ; preds = %56
  %62 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %63 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %62, i32 0, i32 0
  %64 = bitcast %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %63 to %"class.std::allocator.9"*
  %65 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %66 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %16) #3
  %67 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %65, i64 %66
  invoke void @_ZNSt16allocator_traitsISaIN7networkIiE4edgeEEE7destroyIS2_EEvRS3_PT_(%"class.std::allocator.9"* dereferenceable(1) %64, %"struct.network<int>::edge"* %67)
          to label %68 unwind label %69

; <label>:68:                                     ; preds = %61
  br label %120

; <label>:69:                                     ; preds = %154, %120, %114, %61
  %70 = load i32, i32* @x.309
  %71 = load i32, i32* @y.310
  %72 = sub i32 0, 1
  %73 = add i32 %70, %72
  %74 = sub i32 %70, 1
  %75 = mul i32 %70, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %71, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %250

; <label>:83:                                     ; preds = %69, %250
  %84 = landingpad { i8*, i32 }
          cleanup
  %85 = extractvalue { i8*, i32 } %84, 0
  store i8* %85, i8** %14, align 8
  %86 = extractvalue { i8*, i32 } %84, 1
  store i32 %86, i32* %15, align 4
  %87 = load i32, i32* @x.309
  %88 = load i32, i32* @y.310
  %89 = sub i32 %87, 417972157
  %90 = sub i32 %89, 1
  %91 = add i32 %90, 417972157
  %92 = sub i32 %87, 1
  %93 = mul i32 %87, %91
  %94 = urem i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = icmp slt i32 %88, 10
  %97 = xor i1 %95, true
  %98 = xor i1 %96, true
  %99 = xor i1 true, true
  %100 = and i1 %97, true
  %101 = and i1 %95, %99
  %102 = and i1 %98, true
  %103 = and i1 %96, %99
  %104 = or i1 %100, %101
  %105 = or i1 %102, %103
  %106 = xor i1 %104, %105
  %107 = or i1 %97, %98
  %108 = xor i1 %107, true
  %109 = or i1 true, %99
  %110 = and i1 %108, %109
  %111 = or i1 %106, %110
  %112 = or i1 %95, %96
  br i1 %111, label %113, label %250

; <label>:113:                                    ; preds = %83
  invoke void @__cxa_end_catch()
          to label %155 unwind label %246

; <label>:114:                                    ; preds = %56
  %115 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %116 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %117 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %118 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %117) #3
  invoke void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"* %115, %"struct.network<int>::edge"* %116, %"class.std::allocator.9"* dereferenceable(1) %118)
          to label %119 unwind label %69

; <label>:119:                                    ; preds = %114
  br label %120

; <label>:120:                                    ; preds = %119, %68
  %121 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %122 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %123 = load i64, i64* %11, align 8
  invoke void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"* %121, %"struct.network<int>::edge"* %122, i64 %123)
          to label %124 unwind label %69

; <label>:124:                                    ; preds = %120
  %125 = load i32, i32* @x.309
  %126 = load i32, i32* @y.310
  %127 = add i32 %125, -1512483822
  %128 = sub i32 %127, 1
  %129 = sub i32 %128, -1512483822
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = and i1 %133, %134
  %136 = xor i1 %133, %134
  %137 = or i1 %135, %136
  %138 = or i1 %133, %134
  br i1 %137, label %139, label %254

; <label>:139:                                    ; preds = %124, %254
  %140 = load i32, i32* @x.309
  %141 = load i32, i32* @y.310
  %142 = sub i32 %140, -1389288903
  %143 = sub i32 %142, 1
  %144 = add i32 %143, -1389288903
  %145 = sub i32 %140, 1
  %146 = mul i32 %140, %144
  %147 = urem i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = icmp slt i32 %141, 10
  %150 = and i1 %148, %149
  %151 = xor i1 %148, %149
  %152 = or i1 %150, %151
  %153 = or i1 %148, %149
  br i1 %152, label %154, label %254

; <label>:154:                                    ; preds = %139
  invoke void @__cxa_rethrow() #12
          to label %249 unwind label %69

; <label>:155:                                    ; preds = %113
  br label %201

; <label>:156:                                    ; preds = %49
  %157 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %158 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %157, i32 0, i32 0
  %159 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %158, i32 0, i32 0
  %160 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %159, align 8
  %161 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %162 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %161, i32 0, i32 0
  %163 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %162, i32 0, i32 1
  %164 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %163, align 8
  %165 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %166 = call dereferenceable(1) %"class.std::allocator.9"* @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.8"* %165) #3
  call void @_ZSt8_DestroyIPN7networkIiE4edgeES2_EvT_S4_RSaIT0_E(%"struct.network<int>::edge"* %160, %"struct.network<int>::edge"* %164, %"class.std::allocator.9"* dereferenceable(1) %166)
  %167 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %168 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %169 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %168, i32 0, i32 0
  %170 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %169, i32 0, i32 0
  %171 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %170, align 8
  %172 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %173 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %172, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %173, i32 0, i32 2
  %175 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %174, align 8
  %176 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %177 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %177, i32 0, i32 0
  %179 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %178, align 8
  %180 = ptrtoint %"struct.network<int>::edge"* %175 to i64
  %181 = ptrtoint %"struct.network<int>::edge"* %179 to i64
  %182 = add i64 %180, 6873970229089511124
  %183 = sub i64 %182, %181
  %184 = sub i64 %183, 6873970229089511124
  %185 = sub i64 %180, %181
  %186 = sdiv exact i64 %184, 16
  call void @_ZNSt12_Vector_baseIN7networkIiE4edgeESaIS2_EE13_M_deallocateEPS2_m(%"struct.std::_Vector_base.8"* %167, %"struct.network<int>::edge"* %171, i64 %186)
  %187 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %188 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %189 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %188, i32 0, i32 0
  %190 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %189, i32 0, i32 0
  store %"struct.network<int>::edge"* %187, %"struct.network<int>::edge"** %190, align 8
  %191 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %13, align 8
  %192 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %193 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %192, i32 0, i32 0
  %194 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %193, i32 0, i32 1
  store %"struct.network<int>::edge"* %191, %"struct.network<int>::edge"** %194, align 8
  %195 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %12, align 8
  %196 = load i64, i64* %11, align 8
  %197 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %195, i64 %196
  %198 = bitcast %"class.std::vector.2"* %16 to %"struct.std::_Vector_base.8"*
  %199 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %198, i32 0, i32 0
  %200 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %199, i32 0, i32 2
  store %"struct.network<int>::edge"* %197, %"struct.network<int>::edge"** %200, align 8
  ret void

; <label>:201:                                    ; preds = %155
  %202 = load i32, i32* @x.309
  %203 = load i32, i32* @y.310
  %204 = sub i32 0, 1
  %205 = add i32 %202, %204
  %206 = sub i32 %202, 1
  %207 = mul i32 %202, %205
  %208 = urem i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = icmp slt i32 %203, 10
  %211 = xor i1 %209, true
  %212 = xor i1 %210, true
  %213 = xor i1 false, true
  %214 = and i1 %211, false
  %215 = and i1 %209, %213
  %216 = and i1 %212, false
  %217 = and i1 %210, %213
  %218 = or i1 %214, %215
  %219 = or i1 %216, %217
  %220 = xor i1 %218, %219
  %221 = or i1 %211, %212
  %222 = xor i1 %221, true
  %223 = or i1 false, %213
  %224 = and i1 %222, %223
  %225 = or i1 %220, %224
  %226 = or i1 %209, %210
  br i1 %225, label %227, label %255

; <label>:227:                                    ; preds = %201, %255
  %228 = load i8*, i8** %14, align 8
  %229 = load i32, i32* %15, align 4
  %230 = insertvalue { i8*, i32 } undef, i8* %228, 0
  %231 = insertvalue { i8*, i32 } %230, i32 %229, 1
  %232 = load i32, i32* @x.309
  %233 = load i32, i32* @y.310
  %234 = sub i32 0, 1
  %235 = add i32 %232, %234
  %236 = sub i32 %232, 1
  %237 = mul i32 %232, %235
  %238 = urem i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = icmp slt i32 %233, 10
  %241 = and i1 %239, %240
  %242 = xor i1 %239, %240
  %243 = or i1 %241, %242
  %244 = or i1 %239, %240
  br i1 %243, label %245, label %255

; <label>:245:                                    ; preds = %227
  resume { i8*, i32 } %231

; <label>:246:                                    ; preds = %113
  %247 = landingpad { i8*, i32 }
          catch i8* null
  %248 = extractvalue { i8*, i32 } %247, 0
  call void @__clang_call_terminate(i8* %248) #8
  unreachable

; <label>:249:                                    ; preds = %154
  unreachable

; <label>:250:                                    ; preds = %83, %69
  %251 = landingpad { i8*, i32 }
          cleanup
  %252 = extractvalue { i8*, i32 } %251, 0
  store i8* %252, i8** %14, align 8
  %253 = extractvalue { i8*, i32 } %251, 1
  store i32 %253, i32* %15, align 4
  br label %83

; <label>:254:                                    ; preds = %139, %124
  br label %139

; <label>:255:                                    ; preds = %227, %201
  %256 = load i8*, i8** %14, align 8
  %257 = load i32, i32* %15, align 4
  %258 = insertvalue { i8*, i32 } undef, i8* %256, 0
  %259 = insertvalue { i8*, i32 } %258, i32 %257, 1
  br label %227
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIN7networkIiE4edgeEE9constructIS3_JRimiiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.10"*, %"struct.network<int>::edge"*, i32* dereferenceable(4), i64* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4)) #0 comdat align 2 {
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.311
  %10 = load i32, i32* @y.312
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -189932271, i32* %18
  br label %19

; <label>:19:                                     ; preds = %6, %90
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -189932271, label %22
    i32 62363435, label %30
    i32 -1139192107, label %67
    i32 -1773229120, label %68
  ]

; <label>:21:                                     ; preds = %19
  br label %90

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 62363435, i32 -1773229120
  store i32 %29, i32* %18
  br label %90

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %32 = alloca %"struct.network<int>::edge"*, align 8
  %33 = alloca i32*, align 8
  %34 = alloca i64*, align 8
  %35 = alloca i32*, align 8
  %36 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %31, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %32, align 8
  store i32* %2, i32** %33, align 8
  store i64* %3, i64** %34, align 8
  store i32* %4, i32** %35, align 8
  store i32* %5, i32** %36, align 8
  %37 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %31, align 8
  %38 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %32, align 8
  %39 = bitcast %"struct.network<int>::edge"* %38 to i8*
  %40 = bitcast i8* %39 to %"struct.network<int>::edge"*
  %41 = load i32*, i32** %33, align 8
  %42 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %41) #3
  %43 = load i32, i32* %42, align 4
  %44 = load i64*, i64** %34, align 8
  %45 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %44) #3
  %46 = load i64, i64* %45, align 8
  %47 = trunc i64 %46 to i32
  %48 = load i32*, i32** %35, align 8
  %49 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %48) #3
  %50 = load i32*, i32** %36, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %50) #3
  call void @_ZN7networkIiE4edgeC2EiiRKiS3_(%"struct.network<int>::edge"* %40, i32 %43, i32 %47, i32* dereferenceable(4) %49, i32* dereferenceable(4) %51)
  %52 = load i32, i32* @x.311
  %53 = load i32, i32* @y.312
  %54 = sub i32 %52, 1769219271
  %55 = sub i32 %54, 1
  %56 = add i32 %55, 1769219271
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -1139192107, i32 -1773229120
  store i32 %66, i32* %18
  br label %90

; <label>:67:                                     ; preds = %19
  ret void

; <label>:68:                                     ; preds = %19
  %69 = alloca %"class.__gnu_cxx::new_allocator.10"*, align 8
  %70 = alloca %"struct.network<int>::edge"*, align 8
  %71 = alloca i32*, align 8
  %72 = alloca i64*, align 8
  %73 = alloca i32*, align 8
  %74 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.10"* %0, %"class.__gnu_cxx::new_allocator.10"** %69, align 8
  store %"struct.network<int>::edge"* %1, %"struct.network<int>::edge"** %70, align 8
  store i32* %2, i32** %71, align 8
  store i64* %3, i64** %72, align 8
  store i32* %4, i32** %73, align 8
  store i32* %5, i32** %74, align 8
  %75 = load %"class.__gnu_cxx::new_allocator.10"*, %"class.__gnu_cxx::new_allocator.10"** %69, align 8
  %76 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %70, align 8
  %77 = bitcast %"struct.network<int>::edge"* %76 to i8*
  %78 = bitcast i8* %77 to %"struct.network<int>::edge"*
  %79 = load i32*, i32** %71, align 8
  %80 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %79) #3
  %81 = load i32, i32* %80, align 4
  %82 = load i64*, i64** %72, align 8
  %83 = call dereferenceable(8) i64* @_ZSt7forwardImEOT_RNSt16remove_referenceIS0_E4typeE(i64* dereferenceable(8) %82) #3
  %84 = load i64, i64* %83, align 8
  %85 = trunc i64 %84 to i32
  %86 = load i32*, i32** %73, align 8
  %87 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %86) #3
  %88 = load i32*, i32** %74, align 8
  %89 = call dereferenceable(4) i32* @_ZSt7forwardIiEOT_RNSt16remove_referenceIS0_E4typeE(i32* dereferenceable(4) %88) #3
  call void @_ZN7networkIiE4edgeC2EiiRKiS3_(%"struct.network<int>::edge"* %78, i32 %81, i32 %85, i32* dereferenceable(4) %87, i32* dereferenceable(4) %89)
  store i32 62363435, i32* %18
  br label %90

; <label>:90:                                     ; preds = %68, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6resizeEm(%"class.std::vector.3"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca i64*
  %7 = alloca i1
  %8 = alloca i1
  %9 = load i32, i32* @x.313
  %10 = load i32, i32* @y.314
  %11 = sub i32 0, 1
  %12 = add i32 %9, %11
  %13 = sub i32 %9, 1
  %14 = mul i32 %9, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %8
  %17 = icmp slt i32 %10, 10
  store i1 %17, i1* %7
  %18 = alloca i32
  store i32 -2059133392, i32* %18
  br label %19

; <label>:19:                                     ; preds = %2, %212
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 -2059133392, label %22
    i32 -2100909152, label %30
    i32 -410369641, label %67
    i32 672007617, label %70
    i32 1360224194, label %80
    i32 46251, label %108
    i32 -1283119353, label %140
    i32 -1839368872, label %143
    i32 1094376085, label %153
    i32 1904860621, label %154
    i32 1100007195, label %170
    i32 -87818157, label %197
    i32 -1515530016, label %198
    i32 -675349728, label %205
    i32 -352294738, label %211
  ]

; <label>:21:                                     ; preds = %19
  br label %212

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %8
  %24 = load volatile i1, i1* %7
  %25 = and i1 %23, %24
  %26 = xor i1 %23, %24
  %27 = or i1 %25, %26
  %28 = or i1 %23, %24
  %29 = select i1 %27, i32 -2100909152, i32 -1515530016
  store i32 %29, i32* %18
  br label %212

; <label>:30:                                     ; preds = %19
  %31 = alloca %"class.std::vector.3"*, align 8
  %32 = alloca i64, align 8
  store i64* %32, i64** %6
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %31, align 8
  %33 = load volatile i64*, i64** %6
  store i64 %1, i64* %33, align 8
  %34 = load %"class.std::vector.3"*, %"class.std::vector.3"** %31, align 8
  store %"class.std::vector.3"* %34, %"class.std::vector.3"** %5
  %35 = load volatile i64*, i64** %6
  %36 = load i64, i64* %35, align 8
  %37 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %38 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %37) #3
  %39 = icmp ugt i64 %36, %38
  store i1 %39, i1* %4
  %40 = load i32, i32* @x.313
  %41 = load i32, i32* @y.314
  %42 = add i32 %40, 1149527017
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1149527017
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = xor i1 %48, true
  %51 = xor i1 %49, true
  %52 = xor i1 true, true
  %53 = and i1 %50, true
  %54 = and i1 %48, %52
  %55 = and i1 %51, true
  %56 = and i1 %49, %52
  %57 = or i1 %53, %54
  %58 = or i1 %55, %56
  %59 = xor i1 %57, %58
  %60 = or i1 %50, %51
  %61 = xor i1 %60, true
  %62 = or i1 true, %52
  %63 = and i1 %61, %62
  %64 = or i1 %59, %63
  %65 = or i1 %48, %49
  %66 = select i1 %64, i32 -410369641, i32 -1515530016
  store i32 %66, i32* %18
  br label %212

; <label>:67:                                     ; preds = %19
  %68 = load volatile i1, i1* %4
  %69 = select i1 %68, i32 672007617, i32 1360224194
  store i32 %69, i32* %18
  br label %212

; <label>:70:                                     ; preds = %19
  %71 = load volatile i64*, i64** %6
  %72 = load i64, i64* %71, align 8
  %73 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %74 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %73) #3
  %75 = sub i64 %72, 865232676675902569
  %76 = sub i64 %75, %74
  %77 = add i64 %76, 865232676675902569
  %78 = sub i64 %72, %74
  %79 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.3"* %79, i64 %77)
  store i32 1904860621, i32* %18
  br label %212

; <label>:80:                                     ; preds = %19
  %81 = load i32, i32* @x.313
  %82 = load i32, i32* @y.314
  %83 = add i32 %81, -2247840
  %84 = sub i32 %83, 1
  %85 = sub i32 %84, -2247840
  %86 = sub i32 %81, 1
  %87 = mul i32 %81, %85
  %88 = urem i32 %87, 2
  %89 = icmp eq i32 %88, 0
  %90 = icmp slt i32 %82, 10
  %91 = xor i1 %89, true
  %92 = xor i1 %90, true
  %93 = xor i1 true, true
  %94 = and i1 %91, true
  %95 = and i1 %89, %93
  %96 = and i1 %92, true
  %97 = and i1 %90, %93
  %98 = or i1 %94, %95
  %99 = or i1 %96, %97
  %100 = xor i1 %98, %99
  %101 = or i1 %91, %92
  %102 = xor i1 %101, true
  %103 = or i1 true, %93
  %104 = and i1 %102, %103
  %105 = or i1 %100, %104
  %106 = or i1 %89, %90
  %107 = select i1 %105, i32 46251, i32 -675349728
  store i32 %107, i32* %18
  br label %212

; <label>:108:                                    ; preds = %19
  %109 = load volatile i64*, i64** %6
  %110 = load i64, i64* %109, align 8
  %111 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %112 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %111) #3
  %113 = icmp ult i64 %110, %112
  store i1 %113, i1* %3
  %114 = load i32, i32* @x.313
  %115 = load i32, i32* @y.314
  %116 = sub i32 0, 1
  %117 = add i32 %114, %116
  %118 = sub i32 %114, 1
  %119 = mul i32 %114, %117
  %120 = urem i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = icmp slt i32 %115, 10
  %123 = xor i1 %121, true
  %124 = xor i1 %122, true
  %125 = xor i1 false, true
  %126 = and i1 %123, false
  %127 = and i1 %121, %125
  %128 = and i1 %124, false
  %129 = and i1 %122, %125
  %130 = or i1 %126, %127
  %131 = or i1 %128, %129
  %132 = xor i1 %130, %131
  %133 = or i1 %123, %124
  %134 = xor i1 %133, true
  %135 = or i1 false, %125
  %136 = and i1 %134, %135
  %137 = or i1 %132, %136
  %138 = or i1 %121, %122
  %139 = select i1 %137, i32 -1283119353, i32 -675349728
  store i32 %139, i32* %18
  br label %212

; <label>:140:                                    ; preds = %19
  %141 = load volatile i1, i1* %3
  %142 = select i1 %141, i32 -1839368872, i32 1094376085
  store i32 %142, i32* %18
  br label %212

; <label>:143:                                    ; preds = %19
  %144 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %145 = bitcast %"class.std::vector.3"* %144 to %"struct.std::_Vector_base.4"*
  %146 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %145, i32 0, i32 0
  %147 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %146, i32 0, i32 0
  %148 = load i32*, i32** %147, align 8
  %149 = load volatile i64*, i64** %6
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds i32, i32* %148, i64 %150
  %152 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.3"* %152, i32* %151) #3
  store i32 1094376085, i32* %18
  br label %212

; <label>:153:                                    ; preds = %19
  store i32 1904860621, i32* %18
  br label %212

; <label>:154:                                    ; preds = %19
  %155 = load i32, i32* @x.313
  %156 = load i32, i32* @y.314
  %157 = sub i32 %155, -22071042
  %158 = sub i32 %157, 1
  %159 = add i32 %158, -22071042
  %160 = sub i32 %155, 1
  %161 = mul i32 %155, %159
  %162 = urem i32 %161, 2
  %163 = icmp eq i32 %162, 0
  %164 = icmp slt i32 %156, 10
  %165 = and i1 %163, %164
  %166 = xor i1 %163, %164
  %167 = or i1 %165, %166
  %168 = or i1 %163, %164
  %169 = select i1 %167, i32 1100007195, i32 -352294738
  store i32 %169, i32* %18
  br label %212

; <label>:170:                                    ; preds = %19
  %171 = load i32, i32* @x.313
  %172 = load i32, i32* @y.314
  %173 = sub i32 0, 1
  %174 = add i32 %171, %173
  %175 = sub i32 %171, 1
  %176 = mul i32 %171, %174
  %177 = urem i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = icmp slt i32 %172, 10
  %180 = xor i1 %178, true
  %181 = xor i1 %179, true
  %182 = xor i1 false, true
  %183 = and i1 %180, false
  %184 = and i1 %178, %182
  %185 = and i1 %181, false
  %186 = and i1 %179, %182
  %187 = or i1 %183, %184
  %188 = or i1 %185, %186
  %189 = xor i1 %187, %188
  %190 = or i1 %180, %181
  %191 = xor i1 %190, true
  %192 = or i1 false, %182
  %193 = and i1 %191, %192
  %194 = or i1 %189, %193
  %195 = or i1 %178, %179
  %196 = select i1 %194, i32 -87818157, i32 -352294738
  store i32 %196, i32* %18
  br label %212

; <label>:197:                                    ; preds = %19
  ret void

; <label>:198:                                    ; preds = %19
  %199 = alloca %"class.std::vector.3"*, align 8
  %200 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %199, align 8
  store i64 %1, i64* %200, align 8
  %201 = load %"class.std::vector.3"*, %"class.std::vector.3"** %199, align 8
  %202 = load i64, i64* %200, align 8
  %203 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %201) #3
  %204 = icmp ugt i64 %202, %203
  store i32 -2100909152, i32* %18
  br label %212

; <label>:205:                                    ; preds = %19
  %206 = load volatile i64*, i64** %6
  %207 = load i64, i64* %206, align 8
  %208 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %209 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %208) #3
  %210 = icmp ult i64 %207, %209
  store i32 46251, i32* %18
  br label %212

; <label>:211:                                    ; preds = %19
  store i32 1100007195, i32* %18
  br label %212

; <label>:212:                                    ; preds = %211, %205, %198, %170, %154, %153, %143, %140, %108, %80, %70, %67, %30, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr zeroext i1 @_ZN7networkIiE10make_layerEv(%class.network*) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca i1, align 1
  %3 = alloca %class.network*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca %"class.std::queue", align 8
  %7 = alloca %"class.std::deque", align 8
  %8 = alloca i8*
  %9 = alloca i32
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::vector.2"*, align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %13 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %14 = alloca %"struct.network<int>::edge"*, align 8
  %15 = alloca i32
  store %class.network* %0, %class.network** %3, align 8
  %16 = load %class.network*, %class.network** %3, align 8
  %17 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 2
  %18 = call i64 @_ZNKSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EE4sizeEv(%"class.std::vector"* %17) #3
  %19 = trunc i64 %18 to i32
  store i32 %19, i32* %4, align 4
  store i32 0, i32* %5, align 4
  br label %20

; <label>:20:                                     ; preds = %34, %1
  %21 = load i32, i32* %5, align 4
  %22 = load i32, i32* %4, align 4
  %23 = icmp slt i32 %21, %22
  br i1 %23, label %24, label %39

; <label>:24:                                     ; preds = %20
  %25 = load i32, i32* %5, align 4
  %26 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %25, %27
  %29 = select i1 %28, i32 0, i32 -1
  %30 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %31 = load i32, i32* %5, align 4
  %32 = sext i32 %31 to i64
  %33 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %30, i64 %32) #3
  store i32 %29, i32* %33, align 4
  br label %34

; <label>:34:                                     ; preds = %24
  %35 = load i32, i32* %5, align 4
  %36 = sub i32 0, 1
  %37 = sub i32 %35, %36
  %38 = add nsw i32 %35, 1
  store i32 %37, i32* %5, align 4
  br label %20

; <label>:39:                                     ; preds = %20
  call void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"* %7)
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"* %6, %"class.std::deque"* dereferenceable(80) %7)
          to label %40 unwind label %213

; <label>:40:                                     ; preds = %39
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  %41 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 0
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRiEEEvDpOT_(%"class.std::queue"* %6, i32* dereferenceable(4) %41)
          to label %42 unwind label %217

; <label>:42:                                     ; preds = %40
  br label %43

; <label>:43:                                     ; preds = %369, %42
  %44 = invoke zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"* %6)
          to label %45 unwind label %217

; <label>:45:                                     ; preds = %43
  %46 = load i32, i32* @x.315
  %47 = load i32, i32* @y.316
  %48 = sub i32 %46, -1539286330
  %49 = sub i32 %48, 1
  %50 = add i32 %49, -1539286330
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = and i1 %54, %55
  %57 = xor i1 %54, %55
  %58 = or i1 %56, %57
  %59 = or i1 %54, %55
  br i1 %58, label %60, label %432

; <label>:60:                                     ; preds = %45, %432
  %61 = xor i1 %44, true
  %62 = and i1 true, %61
  %63 = xor i1 true, true
  %64 = and i1 %44, %63
  %65 = or i1 %62, %64
  %66 = xor i1 %44, true
  %67 = load i32, i32* @x.315
  %68 = load i32, i32* @y.316
  %69 = add i32 %67, 2108478027
  %70 = sub i32 %69, 1
  %71 = sub i32 %70, 2108478027
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  br i1 %79, label %81, label %432

; <label>:81:                                     ; preds = %60
  br i1 %65, label %82, label %370

; <label>:82:                                     ; preds = %81
  %83 = load i32, i32* @x.315
  %84 = load i32, i32* @y.316
  %85 = add i32 %83, -1220171370
  %86 = sub i32 %85, 1
  %87 = sub i32 %86, -1220171370
  %88 = sub i32 %83, 1
  %89 = mul i32 %83, %87
  %90 = urem i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = icmp slt i32 %84, 10
  %93 = xor i1 %91, true
  %94 = xor i1 %92, true
  %95 = xor i1 true, true
  %96 = and i1 %93, true
  %97 = and i1 %91, %95
  %98 = and i1 %94, true
  %99 = and i1 %92, %95
  %100 = or i1 %96, %97
  %101 = or i1 %98, %99
  %102 = xor i1 %100, %101
  %103 = or i1 %93, %94
  %104 = xor i1 %103, true
  %105 = or i1 true, %95
  %106 = and i1 %104, %105
  %107 = or i1 %102, %106
  %108 = or i1 %91, %92
  br i1 %107, label %109, label %452

; <label>:109:                                    ; preds = %82, %452
  %110 = load i32, i32* @x.315
  %111 = load i32, i32* @y.316
  %112 = sub i32 0, 1
  %113 = add i32 %110, %112
  %114 = sub i32 %110, 1
  %115 = mul i32 %110, %113
  %116 = urem i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = icmp slt i32 %111, 10
  %119 = and i1 %117, %118
  %120 = xor i1 %117, %118
  %121 = or i1 %119, %120
  %122 = or i1 %117, %118
  br i1 %121, label %123, label %452

; <label>:123:                                    ; preds = %109
  %124 = invoke dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"* %6)
          to label %125 unwind label %217

; <label>:125:                                    ; preds = %123
  %126 = load i32, i32* %124, align 4
  store i32 %126, i32* %10, align 4
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"* %6)
          to label %127 unwind label %217

; <label>:127:                                    ; preds = %125
  %128 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 2
  %129 = load i32, i32* %10, align 4
  %130 = sext i32 %129 to i64
  %131 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %128, i64 %130) #3
  store %"class.std::vector.2"* %131, %"class.std::vector.2"** %11, align 8
  %132 = load %"class.std::vector.2"*, %"class.std::vector.2"** %11, align 8
  %133 = call %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.2"* %132) #3
  %134 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %12, i32 0, i32 0
  store %"struct.network<int>::edge"* %133, %"struct.network<int>::edge"** %134, align 8
  %135 = load %"class.std::vector.2"*, %"class.std::vector.2"** %11, align 8
  %136 = call %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE3endEv(%"class.std::vector.2"* %135) #3
  %137 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %13, i32 0, i32 0
  store %"struct.network<int>::edge"* %136, %"struct.network<int>::edge"** %137, align 8
  br label %138

; <label>:138:                                    ; preds = %327, %127
  %139 = call zeroext i1 @_ZN9__gnu_cxxneIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %12, %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8) %13) #3
  br i1 %139, label %140, label %328

; <label>:140:                                    ; preds = %138
  %141 = call dereferenceable(16) %"struct.network<int>::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"* %12) #3
  store %"struct.network<int>::edge"* %141, %"struct.network<int>::edge"** %14, align 8
  %142 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %143 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %144 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %143, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = sext i32 %145 to i64
  %147 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %142, i64 %146) #3
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %150, label %254

; <label>:150:                                    ; preds = %140
  %151 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %152 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %151, i32 0, i32 2
  %153 = load i32, i32* %152, align 4
  %154 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %155 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %154, i32 0, i32 3
  %156 = load i32, i32* %155, align 4
  %157 = sub i32 0, %156
  %158 = add i32 %153, %157
  %159 = sub nsw i32 %153, %156
  %160 = icmp sgt i32 %158, 0
  br i1 %160, label %161, label %254

; <label>:161:                                    ; preds = %150
  %162 = load i32, i32* @x.315
  %163 = load i32, i32* @y.316
  %164 = sub i32 0, 1
  %165 = add i32 %162, %164
  %166 = sub i32 %162, 1
  %167 = mul i32 %162, %165
  %168 = urem i32 %167, 2
  %169 = icmp eq i32 %168, 0
  %170 = icmp slt i32 %163, 10
  %171 = and i1 %169, %170
  %172 = xor i1 %169, %170
  %173 = or i1 %171, %172
  %174 = or i1 %169, %170
  br i1 %173, label %175, label %453

; <label>:175:                                    ; preds = %161, %453
  %176 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %177 = load i32, i32* %10, align 4
  %178 = sext i32 %177 to i64
  %179 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %176, i64 %178) #3
  %180 = load i32, i32* %179, align 4
  %181 = sub i32 %180, -1520398781
  %182 = add i32 %181, 1
  %183 = add i32 %182, -1520398781
  %184 = add nsw i32 %180, 1
  %185 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %186 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %187 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %186, i32 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = sext i32 %188 to i64
  %190 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %185, i64 %189) #3
  store i32 %183, i32* %190, align 4
  %191 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %192 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %191, i32 0, i32 0
  %193 = load i32, i32* %192, align 4
  %194 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 1
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %193, %195
  %197 = load i32, i32* @x.315
  %198 = load i32, i32* @y.316
  %199 = add i32 %197, 656771241
  %200 = sub i32 %199, 1
  %201 = sub i32 %200, 656771241
  %202 = sub i32 %197, 1
  %203 = mul i32 %197, %201
  %204 = urem i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = icmp slt i32 %198, 10
  %207 = and i1 %205, %206
  %208 = xor i1 %205, %206
  %209 = or i1 %207, %208
  %210 = or i1 %205, %206
  br i1 %209, label %211, label %453

; <label>:211:                                    ; preds = %175
  br i1 %196, label %212, label %221

; <label>:212:                                    ; preds = %211
  store i1 true, i1* %2, align 1
  store i32 1, i32* %15, align 4
  br label %371

; <label>:213:                                    ; preds = %39
  %214 = landingpad { i8*, i32 }
          cleanup
  %215 = extractvalue { i8*, i32 } %214, 0
  store i8* %215, i8** %8, align 8
  %216 = extractvalue { i8*, i32 } %214, 1
  store i32 %216, i32* %9, align 4
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %7) #3
  br label %427

; <label>:217:                                    ; preds = %252, %125, %123, %43, %40
  %218 = landingpad { i8*, i32 }
          cleanup
  %219 = extractvalue { i8*, i32 } %218, 0
  store i8* %219, i8** %8, align 8
  %220 = extractvalue { i8*, i32 } %218, 1
  store i32 %220, i32* %9, align 4
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %6) #3
  br label %427

; <label>:221:                                    ; preds = %211
  %222 = load i32, i32* @x.315
  %223 = load i32, i32* @y.316
  %224 = sub i32 0, 1
  %225 = add i32 %222, %224
  %226 = sub i32 %222, 1
  %227 = mul i32 %222, %225
  %228 = urem i32 %227, 2
  %229 = icmp eq i32 %228, 0
  %230 = icmp slt i32 %223, 10
  %231 = and i1 %229, %230
  %232 = xor i1 %229, %230
  %233 = or i1 %231, %232
  %234 = or i1 %229, %230
  br i1 %233, label %235, label %499

; <label>:235:                                    ; preds = %221, %499
  %236 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %237 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %236, i32 0, i32 0
  %238 = load i32, i32* @x.315
  %239 = load i32, i32* @y.316
  %240 = add i32 %238, 430803457
  %241 = sub i32 %240, 1
  %242 = sub i32 %241, 430803457
  %243 = sub i32 %238, 1
  %244 = mul i32 %238, %242
  %245 = urem i32 %244, 2
  %246 = icmp eq i32 %245, 0
  %247 = icmp slt i32 %239, 10
  %248 = and i1 %246, %247
  %249 = xor i1 %246, %247
  %250 = or i1 %248, %249
  %251 = or i1 %246, %247
  br i1 %250, label %252, label %499

; <label>:252:                                    ; preds = %235
  invoke void @_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRKiEEEvDpOT_(%"class.std::queue"* %6, i32* dereferenceable(4) %237)
          to label %253 unwind label %217

; <label>:253:                                    ; preds = %252
  br label %254

; <label>:254:                                    ; preds = %253, %150, %140
  %255 = load i32, i32* @x.315
  %256 = load i32, i32* @y.316
  %257 = sub i32 0, 1
  %258 = add i32 %255, %257
  %259 = sub i32 %255, 1
  %260 = mul i32 %255, %258
  %261 = urem i32 %260, 2
  %262 = icmp eq i32 %261, 0
  %263 = icmp slt i32 %256, 10
  %264 = and i1 %262, %263
  %265 = xor i1 %262, %263
  %266 = or i1 %264, %265
  %267 = or i1 %262, %263
  br i1 %266, label %268, label %502

; <label>:268:                                    ; preds = %254, %502
  %269 = load i32, i32* @x.315
  %270 = load i32, i32* @y.316
  %271 = add i32 %269, 371271793
  %272 = sub i32 %271, 1
  %273 = sub i32 %272, 371271793
  %274 = sub i32 %269, 1
  %275 = mul i32 %269, %273
  %276 = urem i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = icmp slt i32 %270, 10
  %279 = and i1 %277, %278
  %280 = xor i1 %277, %278
  %281 = or i1 %279, %280
  %282 = or i1 %277, %278
  br i1 %281, label %283, label %502

; <label>:283:                                    ; preds = %268
  br label %284

; <label>:284:                                    ; preds = %283
  %285 = load i32, i32* @x.315
  %286 = load i32, i32* @y.316
  %287 = sub i32 %285, 1429538678
  %288 = sub i32 %287, 1
  %289 = add i32 %288, 1429538678
  %290 = sub i32 %285, 1
  %291 = mul i32 %285, %289
  %292 = urem i32 %291, 2
  %293 = icmp eq i32 %292, 0
  %294 = icmp slt i32 %286, 10
  %295 = xor i1 %293, true
  %296 = xor i1 %294, true
  %297 = xor i1 true, true
  %298 = and i1 %295, true
  %299 = and i1 %293, %297
  %300 = and i1 %296, true
  %301 = and i1 %294, %297
  %302 = or i1 %298, %299
  %303 = or i1 %300, %301
  %304 = xor i1 %302, %303
  %305 = or i1 %295, %296
  %306 = xor i1 %305, true
  %307 = or i1 true, %297
  %308 = and i1 %306, %307
  %309 = or i1 %304, %308
  %310 = or i1 %293, %294
  br i1 %309, label %311, label %503

; <label>:311:                                    ; preds = %284, %503
  %312 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %12) #3
  %313 = load i32, i32* @x.315
  %314 = load i32, i32* @y.316
  %315 = sub i32 %313, 42047155
  %316 = sub i32 %315, 1
  %317 = add i32 %316, 42047155
  %318 = sub i32 %313, 1
  %319 = mul i32 %313, %317
  %320 = urem i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = icmp slt i32 %314, 10
  %323 = and i1 %321, %322
  %324 = xor i1 %321, %322
  %325 = or i1 %323, %324
  %326 = or i1 %321, %322
  br i1 %325, label %327, label %503

; <label>:327:                                    ; preds = %311
  br label %138

; <label>:328:                                    ; preds = %138
  %329 = load i32, i32* @x.315
  %330 = load i32, i32* @y.316
  %331 = sub i32 0, 1
  %332 = add i32 %329, %331
  %333 = sub i32 %329, 1
  %334 = mul i32 %329, %332
  %335 = urem i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = icmp slt i32 %330, 10
  %338 = xor i1 %336, true
  %339 = xor i1 %337, true
  %340 = xor i1 false, true
  %341 = and i1 %338, false
  %342 = and i1 %336, %340
  %343 = and i1 %339, false
  %344 = and i1 %337, %340
  %345 = or i1 %341, %342
  %346 = or i1 %343, %344
  %347 = xor i1 %345, %346
  %348 = or i1 %338, %339
  %349 = xor i1 %348, true
  %350 = or i1 false, %340
  %351 = and i1 %349, %350
  %352 = or i1 %347, %351
  %353 = or i1 %336, %337
  br i1 %352, label %354, label %505

; <label>:354:                                    ; preds = %328, %505
  %355 = load i32, i32* @x.315
  %356 = load i32, i32* @y.316
  %357 = sub i32 %355, 1519040194
  %358 = sub i32 %357, 1
  %359 = add i32 %358, 1519040194
  %360 = sub i32 %355, 1
  %361 = mul i32 %355, %359
  %362 = urem i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = icmp slt i32 %356, 10
  %365 = and i1 %363, %364
  %366 = xor i1 %363, %364
  %367 = or i1 %365, %366
  %368 = or i1 %363, %364
  br i1 %367, label %369, label %505

; <label>:369:                                    ; preds = %354
  br label %43

; <label>:370:                                    ; preds = %81
  store i1 false, i1* %2, align 1
  store i32 1, i32* %15, align 4
  br label %371

; <label>:371:                                    ; preds = %370, %212
  %372 = load i32, i32* @x.315
  %373 = load i32, i32* @y.316
  %374 = add i32 %372, 1551645987
  %375 = sub i32 %374, 1
  %376 = sub i32 %375, 1551645987
  %377 = sub i32 %372, 1
  %378 = mul i32 %372, %376
  %379 = urem i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = icmp slt i32 %373, 10
  %382 = xor i1 %380, true
  %383 = xor i1 %381, true
  %384 = xor i1 true, true
  %385 = and i1 %382, true
  %386 = and i1 %380, %384
  %387 = and i1 %383, true
  %388 = and i1 %381, %384
  %389 = or i1 %385, %386
  %390 = or i1 %387, %388
  %391 = xor i1 %389, %390
  %392 = or i1 %382, %383
  %393 = xor i1 %392, true
  %394 = or i1 true, %384
  %395 = and i1 %393, %394
  %396 = or i1 %391, %395
  %397 = or i1 %380, %381
  br i1 %396, label %398, label %506

; <label>:398:                                    ; preds = %371, %506
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %6) #3
  %399 = load i1, i1* %2, align 1
  %400 = load i32, i32* @x.315
  %401 = load i32, i32* @y.316
  %402 = sub i32 %400, -1632744788
  %403 = sub i32 %402, 1
  %404 = add i32 %403, -1632744788
  %405 = sub i32 %400, 1
  %406 = mul i32 %400, %404
  %407 = urem i32 %406, 2
  %408 = icmp eq i32 %407, 0
  %409 = icmp slt i32 %401, 10
  %410 = xor i1 %408, true
  %411 = xor i1 %409, true
  %412 = xor i1 true, true
  %413 = and i1 %410, true
  %414 = and i1 %408, %412
  %415 = and i1 %411, true
  %416 = and i1 %409, %412
  %417 = or i1 %413, %414
  %418 = or i1 %415, %416
  %419 = xor i1 %417, %418
  %420 = or i1 %410, %411
  %421 = xor i1 %420, true
  %422 = or i1 true, %412
  %423 = and i1 %421, %422
  %424 = or i1 %419, %423
  %425 = or i1 %408, %409
  br i1 %424, label %426, label %506

; <label>:426:                                    ; preds = %398
  ret i1 %399

; <label>:427:                                    ; preds = %217, %213
  %428 = load i8*, i8** %8, align 8
  %429 = load i32, i32* %9, align 4
  %430 = insertvalue { i8*, i32 } undef, i8* %428, 0
  %431 = insertvalue { i8*, i32 } %430, i32 %429, 1
  resume { i8*, i32 } %431

; <label>:432:                                    ; preds = %60, %45
  %433 = shl i1 %44, true
  %434 = sub i1 false, true
  %435 = add i1 %44, %434
  %436 = sub i1 %44, true
  %437 = mul i1 %435, true
  %438 = add i1 false, true
  %439 = sub i1 %438, %44
  %440 = sub i1 %439, true
  %441 = sub i1 false, %44
  %442 = sub i1 %440, false
  %443 = add i1 %442, true
  %444 = add i1 %443, false
  %445 = add i1 %440, true
  %446 = xor i1 %44, true
  %447 = and i1 true, %446
  %448 = xor i1 true, true
  %449 = and i1 %44, %448
  %450 = or i1 %447, %449
  %451 = xor i1 %44, true
  br label %60

; <label>:452:                                    ; preds = %109, %82
  br label %109

; <label>:453:                                    ; preds = %175, %161
  %454 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %455 = load i32, i32* %10, align 4
  %456 = sext i32 %455 to i64
  %457 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %454, i64 %456) #3
  %458 = load i32, i32* %457, align 4
  %459 = sub i32 0, 1194150582
  %460 = sub i32 %459, %458
  %461 = add i32 %460, 1194150582
  %462 = sub i32 0, %458
  %463 = sub i32 0, 1
  %464 = sub i32 %461, %463
  %465 = add i32 %461, 1
  %466 = sub i32 %458, 1287289578
  %467 = sub i32 %466, 1
  %468 = add i32 %467, 1287289578
  %469 = sub i32 %458, 1
  %470 = mul i32 %468, 1
  %471 = sub i32 %458, 2050352832
  %472 = sub i32 %471, 1
  %473 = add i32 %472, 2050352832
  %474 = sub i32 %458, 1
  %475 = mul i32 %473, 1
  %476 = sub i32 0, %458
  %477 = add i32 0, %476
  %478 = sub i32 0, %458
  %479 = sub i32 0, %477
  %480 = sub i32 0, 1
  %481 = add i32 %479, %480
  %482 = sub i32 0, %481
  %483 = add i32 %477, 1
  %484 = sub i32 0, 1
  %485 = sub i32 %458, %484
  %486 = add nsw i32 %458, 1
  %487 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 3
  %488 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %489 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %488, i32 0, i32 0
  %490 = load i32, i32* %489, align 4
  %491 = sext i32 %490 to i64
  %492 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %487, i64 %491) #3
  store i32 %485, i32* %492, align 4
  %493 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %494 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %493, i32 0, i32 0
  %495 = load i32, i32* %494, align 4
  %496 = getelementptr inbounds %class.network, %class.network* %16, i32 0, i32 1
  %497 = load i32, i32* %496, align 4
  %498 = icmp eq i32 %495, %497
  br label %175

; <label>:499:                                    ; preds = %235, %221
  %500 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %501 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %500, i32 0, i32 0
  br label %235

; <label>:502:                                    ; preds = %268, %254
  br label %268

; <label>:503:                                    ; preds = %311, %284
  %504 = call dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"* %12) #3
  br label %311

; <label>:505:                                    ; preds = %354, %328
  br label %354

; <label>:506:                                    ; preds = %398, %371
  call void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"* %6) #3
  %507 = load i1, i1* %2, align 1
  br label %398
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE6assignEmRKi(%"class.std::vector.3"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::vector.3"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::vector.3"*, %"class.std::vector.3"** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  call void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.3"* %7, i64 %8, i32* dereferenceable(4) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32 @_ZN7networkIiE7augmentEiRKi(%class.network*, i32, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = alloca i32
  %7 = alloca i32
  %8 = alloca %class.network*
  %9 = alloca i32, align 4
  %10 = alloca %class.network*, align 8
  %11 = alloca i32, align 4
  %12 = alloca i32*, align 8
  %13 = alloca i32*, align 8
  %14 = alloca %"struct.network<int>::edge"*, align 8
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  store %class.network* %0, %class.network** %10, align 8
  store i32 %1, i32* %11, align 4
  store i32* %2, i32** %12, align 8
  %17 = load %class.network*, %class.network** %10, align 8
  store %class.network* %17, %class.network** %8
  %18 = load i32, i32* %11, align 4
  store i32 %18, i32* %7
  %19 = load volatile %class.network*, %class.network** %8
  %20 = getelementptr inbounds %class.network, %class.network* %19, i32 0, i32 1
  %21 = load i32, i32* %20, align 4
  store i32 %21, i32* %6
  %22 = alloca i32
  store i32 1515656336, i32* %22
  br label %23

; <label>:23:                                     ; preds = %3, %347
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1515656336, label %26
    i32 -694214192, label %31
    i32 -1314406668, label %34
    i32 -2138302136, label %40
    i32 -2038413112, label %52
    i32 -1387102563, label %78
    i32 1065856818, label %94
    i32 -712388300, label %133
    i32 737510165, label %136
    i32 -960386106, label %164
    i32 -1613280952, label %210
    i32 -2024576112, label %213
    i32 -1164647977, label %242
    i32 -320621151, label %243
    i32 -433333180, label %270
    i32 -1834249189, label %286
    i32 1964443990, label %287
    i32 -498070131, label %294
    i32 -1598291184, label %295
    i32 1609600017, label %297
    i32 -1425974353, label %321
    i32 1982096704, label %346
  ]

; <label>:25:                                     ; preds = %23
  br label %347

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32, i32* %7
  %28 = load volatile i32, i32* %6
  %29 = icmp eq i32 %27, %28
  %30 = select i1 %29, i32 -694214192, i32 -1314406668
  store i32 %30, i32* %22
  br label %347

; <label>:31:                                     ; preds = %23
  %32 = load i32*, i32** %12, align 8
  %33 = load i32, i32* %32, align 4
  store i32 %33, i32* %9, align 4
  store i32 -1598291184, i32* %22
  br label %347

; <label>:34:                                     ; preds = %23
  %35 = load volatile %class.network*, %class.network** %8
  %36 = getelementptr inbounds %class.network, %class.network* %35, i32 0, i32 4
  %37 = load i32, i32* %11, align 4
  %38 = sext i32 %37 to i64
  %39 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %36, i64 %38) #3
  store i32* %39, i32** %13, align 8
  store i32 -2138302136, i32* %22
  br label %347

; <label>:40:                                     ; preds = %23
  %41 = load i32*, i32** %13, align 8
  %42 = load i32, i32* %41, align 4
  %43 = sext i32 %42 to i64
  %44 = load volatile %class.network*, %class.network** %8
  %45 = getelementptr inbounds %class.network, %class.network* %44, i32 0, i32 2
  %46 = load i32, i32* %11, align 4
  %47 = sext i32 %46 to i64
  %48 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %45, i64 %47) #3
  %49 = call i64 @_ZNKSt6vectorIN7networkIiE4edgeESaIS2_EE4sizeEv(%"class.std::vector.2"* %48) #3
  %50 = icmp ult i64 %43, %49
  %51 = select i1 %50, i32 -2038413112, i32 -498070131
  store i32 %51, i32* %22
  br label %347

; <label>:52:                                     ; preds = %23
  %53 = load volatile %class.network*, %class.network** %8
  %54 = getelementptr inbounds %class.network, %class.network* %53, i32 0, i32 2
  %55 = load i32, i32* %11, align 4
  %56 = sext i32 %55 to i64
  %57 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %54, i64 %56) #3
  %58 = load i32*, i32** %13, align 8
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = call dereferenceable(16) %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEixEm(%"class.std::vector.2"* %57, i64 %60) #3
  store %"struct.network<int>::edge"* %61, %"struct.network<int>::edge"** %14, align 8
  %62 = load volatile %class.network*, %class.network** %8
  %63 = getelementptr inbounds %class.network, %class.network* %62, i32 0, i32 3
  %64 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %65 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %64, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %63, i64 %67) #3
  %69 = load i32, i32* %68, align 4
  %70 = load volatile %class.network*, %class.network** %8
  %71 = getelementptr inbounds %class.network, %class.network* %70, i32 0, i32 3
  %72 = load i32, i32* %11, align 4
  %73 = sext i32 %72 to i64
  %74 = call dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"* %71, i64 %73) #3
  %75 = load i32, i32* %74, align 4
  %76 = icmp sgt i32 %69, %75
  %77 = select i1 %76, i32 -1387102563, i32 -320621151
  store i32 %77, i32* %22
  br label %347

; <label>:78:                                     ; preds = %23
  %79 = load i32, i32* @x.319
  %80 = load i32, i32* @y.320
  %81 = sub i32 %79, 2104521342
  %82 = sub i32 %81, 1
  %83 = add i32 %82, 2104521342
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = and i1 %87, %88
  %90 = xor i1 %87, %88
  %91 = or i1 %89, %90
  %92 = or i1 %87, %88
  %93 = select i1 %91, i32 1065856818, i32 1609600017
  store i32 %93, i32* %22
  br label %347

; <label>:94:                                     ; preds = %23
  %95 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %96 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %95, i32 0, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %99 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %98, i32 0, i32 3
  %100 = load i32, i32* %99, align 4
  %101 = add i32 %97, -1377301532
  %102 = sub i32 %101, %100
  %103 = sub i32 %102, -1377301532
  %104 = sub nsw i32 %97, %100
  %105 = icmp sgt i32 %103, 0
  store i1 %105, i1* %5
  %106 = load i32, i32* @x.319
  %107 = load i32, i32* @y.320
  %108 = add i32 %106, 629004957
  %109 = sub i32 %108, 1
  %110 = sub i32 %109, 629004957
  %111 = sub i32 %106, 1
  %112 = mul i32 %106, %110
  %113 = urem i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = icmp slt i32 %107, 10
  %116 = xor i1 %114, true
  %117 = xor i1 %115, true
  %118 = xor i1 true, true
  %119 = and i1 %116, true
  %120 = and i1 %114, %118
  %121 = and i1 %117, true
  %122 = and i1 %115, %118
  %123 = or i1 %119, %120
  %124 = or i1 %121, %122
  %125 = xor i1 %123, %124
  %126 = or i1 %116, %117
  %127 = xor i1 %126, true
  %128 = or i1 true, %118
  %129 = and i1 %127, %128
  %130 = or i1 %125, %129
  %131 = or i1 %114, %115
  %132 = select i1 %130, i32 -712388300, i32 1609600017
  store i32 %132, i32* %22
  br label %347

; <label>:133:                                    ; preds = %23
  %134 = load volatile i1, i1* %5
  %135 = select i1 %134, i32 737510165, i32 -320621151
  store i32 %135, i32* %22
  br label %347

; <label>:136:                                    ; preds = %23
  %137 = load i32, i32* @x.319
  %138 = load i32, i32* @y.320
  %139 = sub i32 %137, -1048385288
  %140 = sub i32 %139, 1
  %141 = add i32 %140, -1048385288
  %142 = sub i32 %137, 1
  %143 = mul i32 %137, %141
  %144 = urem i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = icmp slt i32 %138, 10
  %147 = xor i1 %145, true
  %148 = xor i1 %146, true
  %149 = xor i1 true, true
  %150 = and i1 %147, true
  %151 = and i1 %145, %149
  %152 = and i1 %148, true
  %153 = and i1 %146, %149
  %154 = or i1 %150, %151
  %155 = or i1 %152, %153
  %156 = xor i1 %154, %155
  %157 = or i1 %147, %148
  %158 = xor i1 %157, true
  %159 = or i1 true, %149
  %160 = and i1 %158, %159
  %161 = or i1 %156, %160
  %162 = or i1 %145, %146
  %163 = select i1 %161, i32 -960386106, i32 -1425974353
  store i32 %163, i32* %22
  br label %347

; <label>:164:                                    ; preds = %23
  %165 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %166 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 4
  %168 = load i32*, i32** %12, align 8
  %169 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %170 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %169, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %173 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %172, i32 0, i32 3
  %174 = load i32, i32* %173, align 4
  %175 = sub i32 %171, 701472133
  %176 = sub i32 %175, %174
  %177 = add i32 %176, 701472133
  %178 = sub nsw i32 %171, %174
  store i32 %177, i32* %16, align 4
  %179 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %168, i32* dereferenceable(4) %16)
  %180 = load volatile %class.network*, %class.network** %8
  %181 = call i32 @_ZN7networkIiE7augmentEiRKi(%class.network* %180, i32 %167, i32* dereferenceable(4) %179)
  store i32 %181, i32* %15, align 4
  %182 = load i32, i32* %15, align 4
  %183 = icmp sgt i32 %182, 0
  store i1 %183, i1* %4
  %184 = load i32, i32* @x.319
  %185 = load i32, i32* @y.320
  %186 = sub i32 0, 1
  %187 = add i32 %184, %186
  %188 = sub i32 %184, 1
  %189 = mul i32 %184, %187
  %190 = urem i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = icmp slt i32 %185, 10
  %193 = xor i1 %191, true
  %194 = xor i1 %192, true
  %195 = xor i1 true, true
  %196 = and i1 %193, true
  %197 = and i1 %191, %195
  %198 = and i1 %194, true
  %199 = and i1 %192, %195
  %200 = or i1 %196, %197
  %201 = or i1 %198, %199
  %202 = xor i1 %200, %201
  %203 = or i1 %193, %194
  %204 = xor i1 %203, true
  %205 = or i1 true, %195
  %206 = and i1 %204, %205
  %207 = or i1 %202, %206
  %208 = or i1 %191, %192
  %209 = select i1 %207, i32 -1613280952, i32 -1425974353
  store i32 %209, i32* %22
  br label %347

; <label>:210:                                    ; preds = %23
  %211 = load volatile i1, i1* %4
  %212 = select i1 %211, i32 -2024576112, i32 -1164647977
  store i32 %212, i32* %22
  br label %347

; <label>:213:                                    ; preds = %23
  %214 = load i32, i32* %15, align 4
  %215 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %216 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %215, i32 0, i32 3
  %217 = load i32, i32* %216, align 4
  %218 = add i32 %217, -1600106114
  %219 = add i32 %218, %214
  %220 = sub i32 %219, -1600106114
  %221 = add nsw i32 %217, %214
  store i32 %220, i32* %216, align 4
  %222 = load i32, i32* %15, align 4
  %223 = load volatile %class.network*, %class.network** %8
  %224 = getelementptr inbounds %class.network, %class.network* %223, i32 0, i32 2
  %225 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %226 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %225, i32 0, i32 0
  %227 = load i32, i32* %226, align 4
  %228 = sext i32 %227 to i64
  %229 = call dereferenceable(24) %"class.std::vector.2"* @_ZNSt6vectorIS_IN7networkIiE4edgeESaIS2_EESaIS4_EEixEm(%"class.std::vector"* %224, i64 %228) #3
  %230 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %231 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %230, i32 0, i32 1
  %232 = load i32, i32* %231, align 4
  %233 = sext i32 %232 to i64
  %234 = call dereferenceable(16) %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEixEm(%"class.std::vector.2"* %229, i64 %233) #3
  %235 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %234, i32 0, i32 3
  %236 = load i32, i32* %235, align 4
  %237 = sub i32 %236, 1087751154
  %238 = sub i32 %237, %222
  %239 = add i32 %238, 1087751154
  %240 = sub nsw i32 %236, %222
  store i32 %239, i32* %235, align 4
  %241 = load i32, i32* %15, align 4
  store i32 %241, i32* %9, align 4
  store i32 -1598291184, i32* %22
  br label %347

; <label>:242:                                    ; preds = %23
  store i32 -320621151, i32* %22
  br label %347

; <label>:243:                                    ; preds = %23
  %244 = load i32, i32* @x.319
  %245 = load i32, i32* @y.320
  %246 = sub i32 0, 1
  %247 = add i32 %244, %246
  %248 = sub i32 %244, 1
  %249 = mul i32 %244, %247
  %250 = urem i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = icmp slt i32 %245, 10
  %253 = xor i1 %251, true
  %254 = xor i1 %252, true
  %255 = xor i1 false, true
  %256 = and i1 %253, false
  %257 = and i1 %251, %255
  %258 = and i1 %254, false
  %259 = and i1 %252, %255
  %260 = or i1 %256, %257
  %261 = or i1 %258, %259
  %262 = xor i1 %260, %261
  %263 = or i1 %253, %254
  %264 = xor i1 %263, true
  %265 = or i1 false, %255
  %266 = and i1 %264, %265
  %267 = or i1 %262, %266
  %268 = or i1 %251, %252
  %269 = select i1 %267, i32 -433333180, i32 1982096704
  store i32 %269, i32* %22
  br label %347

; <label>:270:                                    ; preds = %23
  %271 = load i32, i32* @x.319
  %272 = load i32, i32* @y.320
  %273 = add i32 %271, -1627720788
  %274 = sub i32 %273, 1
  %275 = sub i32 %274, -1627720788
  %276 = sub i32 %271, 1
  %277 = mul i32 %271, %275
  %278 = urem i32 %277, 2
  %279 = icmp eq i32 %278, 0
  %280 = icmp slt i32 %272, 10
  %281 = and i1 %279, %280
  %282 = xor i1 %279, %280
  %283 = or i1 %281, %282
  %284 = or i1 %279, %280
  %285 = select i1 %283, i32 -1834249189, i32 1982096704
  store i32 %285, i32* %22
  br label %347

; <label>:286:                                    ; preds = %23
  store i32 1964443990, i32* %22
  br label %347

; <label>:287:                                    ; preds = %23
  %288 = load i32*, i32** %13, align 8
  %289 = load i32, i32* %288, align 4
  %290 = sub i32 %289, 1347531873
  %291 = add i32 %290, 1
  %292 = add i32 %291, 1347531873
  %293 = add nsw i32 %289, 1
  store i32 %292, i32* %288, align 4
  store i32 -2138302136, i32* %22
  br label %347

; <label>:294:                                    ; preds = %23
  store i32 0, i32* %9, align 4
  store i32 -1598291184, i32* %22
  br label %347

; <label>:295:                                    ; preds = %23
  %296 = load i32, i32* %9, align 4
  ret i32 %296

; <label>:297:                                    ; preds = %23
  %298 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %299 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %298, i32 0, i32 2
  %300 = load i32, i32* %299, align 4
  %301 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %302 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %301, i32 0, i32 3
  %303 = load i32, i32* %302, align 4
  %304 = add i32 %300, 265664543
  %305 = sub i32 %304, %303
  %306 = sub i32 %305, 265664543
  %307 = sub i32 %300, %303
  %308 = mul i32 %306, %303
  %309 = sub i32 0, -626624380
  %310 = sub i32 %309, %300
  %311 = add i32 %310, -626624380
  %312 = sub i32 0, %300
  %313 = add i32 %311, -1910849732
  %314 = add i32 %313, %303
  %315 = sub i32 %314, -1910849732
  %316 = add i32 %311, %303
  %317 = sub i32 0, %303
  %318 = add i32 %300, %317
  %319 = sub nsw i32 %300, %303
  %320 = icmp sgt i32 %318, 0
  store i32 1065856818, i32* %22
  br label %347

; <label>:321:                                    ; preds = %23
  %322 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %323 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %322, i32 0, i32 0
  %324 = load i32, i32* %323, align 4
  %325 = load i32*, i32** %12, align 8
  %326 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %327 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %326, i32 0, i32 2
  %328 = load i32, i32* %327, align 4
  %329 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %14, align 8
  %330 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %329, i32 0, i32 3
  %331 = load i32, i32* %330, align 4
  %332 = add i32 %328, -1975596642
  %333 = sub i32 %332, %331
  %334 = sub i32 %333, -1975596642
  %335 = sub i32 %328, %331
  %336 = mul i32 %334, %331
  %337 = add i32 %328, -34031896
  %338 = sub i32 %337, %331
  %339 = sub i32 %338, -34031896
  %340 = sub nsw i32 %328, %331
  store i32 %339, i32* %16, align 4
  %341 = call dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4) %325, i32* dereferenceable(4) %16)
  %342 = load volatile %class.network*, %class.network** %8
  %343 = call i32 @_ZN7networkIiE7augmentEiRKi(%class.network* %342, i32 %324, i32* dereferenceable(4) %341)
  store i32 %343, i32* %15, align 4
  %344 = load i32, i32* %15, align 4
  %345 = icmp sgt i32 %344, 0
  store i32 -960386106, i32* %22
  br label %347

; <label>:346:                                    ; preds = %23
  store i32 -433333180, i32* %22
  br label %347

; <label>:347:                                    ; preds = %346, %321, %297, %294, %287, %286, %270, %243, %242, %213, %210, %164, %136, %133, %94, %78, %52, %40, %34, %31, %26, %25
  br label %23
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32 @_ZNSt14numeric_limitsIiE3maxEv() #5 comdat align 2 {
  ret i32 2147483647
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %5, i32 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %9 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %8, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %9, i32 0, i32 0
  %11 = load i32*, i32** %10, align 8
  %12 = ptrtoint i32* %7 to i64
  %13 = ptrtoint i32* %11 to i64
  %14 = add i64 %12, -2260924800012065551
  %15 = sub i64 %14, %13
  %16 = sub i64 %15, -2260924800012065551
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 4
  ret i64 %18
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE17_M_default_appendEm(%"class.std::vector.3"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.325
  %4 = load i32, i32* @y.326
  %5 = sub i32 %3, -1245299781
  %6 = sub i32 %5, 1
  %7 = add i32 %6, -1245299781
  %8 = sub i32 %3, 1
  %9 = mul i32 %3, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = icmp slt i32 %4, 10
  %13 = xor i1 %11, true
  %14 = xor i1 %12, true
  %15 = xor i1 false, true
  %16 = and i1 %13, false
  %17 = and i1 %11, %15
  %18 = and i1 %14, false
  %19 = and i1 %12, %15
  %20 = or i1 %16, %17
  %21 = or i1 %18, %19
  %22 = xor i1 %20, %21
  %23 = or i1 %13, %14
  %24 = xor i1 %23, true
  %25 = or i1 false, %15
  %26 = and i1 %24, %25
  %27 = or i1 %22, %26
  %28 = or i1 %11, %12
  br i1 %27, label %29, label %402

; <label>:29:                                     ; preds = %2, %402
  %30 = alloca %"class.std::vector.3"*, align 8
  %31 = alloca i64, align 8
  %32 = alloca i64, align 8
  %33 = alloca i64, align 8
  %34 = alloca i32*, align 8
  %35 = alloca i32*, align 8
  %36 = alloca i8*
  %37 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %30, align 8
  store i64 %1, i64* %31, align 8
  %38 = load %"class.std::vector.3"*, %"class.std::vector.3"** %30, align 8
  %39 = load i64, i64* %31, align 8
  %40 = icmp ne i64 %39, 0
  %41 = load i32, i32* @x.325
  %42 = load i32, i32* @y.326
  %43 = sub i32 0, 1
  %44 = add i32 %41, %43
  %45 = sub i32 %41, 1
  %46 = mul i32 %41, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %42, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %402

; <label>:54:                                     ; preds = %29
  br i1 %40, label %55, label %362

; <label>:55:                                     ; preds = %54
  %56 = load i32, i32* @x.325
  %57 = load i32, i32* @y.326
  %58 = add i32 %56, -1511189114
  %59 = sub i32 %58, 1
  %60 = sub i32 %59, -1511189114
  %61 = sub i32 %56, 1
  %62 = mul i32 %56, %60
  %63 = urem i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = icmp slt i32 %57, 10
  %66 = xor i1 %64, true
  %67 = xor i1 %65, true
  %68 = xor i1 true, true
  %69 = and i1 %66, true
  %70 = and i1 %64, %68
  %71 = and i1 %67, true
  %72 = and i1 %65, %68
  %73 = or i1 %69, %70
  %74 = or i1 %71, %72
  %75 = xor i1 %73, %74
  %76 = or i1 %66, %67
  %77 = xor i1 %76, true
  %78 = or i1 true, %68
  %79 = and i1 %77, %78
  %80 = or i1 %75, %79
  %81 = or i1 %64, %65
  br i1 %80, label %82, label %414

; <label>:82:                                     ; preds = %55, %414
  %83 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %84 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %83, i32 0, i32 0
  %85 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %84, i32 0, i32 2
  %86 = load i32*, i32** %85, align 8
  %87 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 1
  %90 = load i32*, i32** %89, align 8
  %91 = ptrtoint i32* %86 to i64
  %92 = ptrtoint i32* %90 to i64
  %93 = sub i64 %91, 8467595133918925448
  %94 = sub i64 %93, %92
  %95 = add i64 %94, 8467595133918925448
  %96 = sub i64 %91, %92
  %97 = sdiv exact i64 %95, 4
  %98 = load i64, i64* %31, align 8
  %99 = icmp uge i64 %97, %98
  %100 = load i32, i32* @x.325
  %101 = load i32, i32* @y.326
  %102 = sub i32 %100, 1998681123
  %103 = sub i32 %102, 1
  %104 = add i32 %103, 1998681123
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %414

; <label>:126:                                    ; preds = %82
  br i1 %99, label %127, label %139

; <label>:127:                                    ; preds = %126
  %128 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %129 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %129, i32 0, i32 1
  %131 = load i32*, i32** %130, align 8
  %132 = load i64, i64* %31, align 8
  %133 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %134 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %133) #3
  %135 = call i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %131, i64 %132, %"class.std::allocator.5"* dereferenceable(1) %134)
  %136 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %137 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %136, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %137, i32 0, i32 1
  store i32* %135, i32** %138, align 8
  br label %319

; <label>:139:                                    ; preds = %126
  %140 = load i64, i64* %31, align 8
  %141 = call i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.3"* %38, i64 %140, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i32 0, i32 0))
  store i64 %141, i64* %32, align 8
  %142 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %38) #3
  store i64 %142, i64* %33, align 8
  %143 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %144 = load i64, i64* %32, align 8
  %145 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %143, i64 %144)
  store i32* %145, i32** %34, align 8
  %146 = load i32*, i32** %34, align 8
  store i32* %146, i32** %35, align 8
  %147 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %148 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %147, i32 0, i32 0
  %149 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %148, i32 0, i32 0
  %150 = load i32*, i32** %149, align 8
  %151 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %152 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %151, i32 0, i32 0
  %153 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %152, i32 0, i32 1
  %154 = load i32*, i32** %153, align 8
  %155 = load i32*, i32** %34, align 8
  %156 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %157 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %156) #3
  %158 = invoke i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32* %150, i32* %154, i32* %155, %"class.std::allocator.5"* dereferenceable(1) %157)
          to label %159 unwind label %166

; <label>:159:                                    ; preds = %139
  store i32* %158, i32** %35, align 8
  %160 = load i32*, i32** %35, align 8
  %161 = load i64, i64* %31, align 8
  %162 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %163 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %162) #3
  %164 = invoke i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32* %160, i64 %161, %"class.std::allocator.5"* dereferenceable(1) %163)
          to label %165 unwind label %166

; <label>:165:                                    ; preds = %159
  store i32* %164, i32** %35, align 8
  br label %274

; <label>:166:                                    ; preds = %159, %139
  %167 = landingpad { i8*, i32 }
          catch i8* null
  %168 = extractvalue { i8*, i32 } %167, 0
  store i8* %168, i8** %36, align 8
  %169 = extractvalue { i8*, i32 } %167, 1
  store i32 %169, i32* %37, align 4
  br label %170

; <label>:170:                                    ; preds = %166
  %171 = load i32, i32* @x.325
  %172 = load i32, i32* @y.326
  %173 = sub i32 %171, -529332336
  %174 = sub i32 %173, 1
  %175 = add i32 %174, -529332336
  %176 = sub i32 %171, 1
  %177 = mul i32 %171, %175
  %178 = urem i32 %177, 2
  %179 = icmp eq i32 %178, 0
  %180 = icmp slt i32 %172, 10
  %181 = and i1 %179, %180
  %182 = xor i1 %179, %180
  %183 = or i1 %181, %182
  %184 = or i1 %179, %180
  br i1 %183, label %185, label %484

; <label>:185:                                    ; preds = %170, %484
  %186 = load i8*, i8** %36, align 8
  %187 = call i8* @__cxa_begin_catch(i8* %186) #3
  %188 = load i32*, i32** %34, align 8
  %189 = load i32*, i32** %35, align 8
  %190 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %191 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %190) #3
  %192 = load i32, i32* @x.325
  %193 = load i32, i32* @y.326
  %194 = sub i32 0, 1
  %195 = add i32 %192, %194
  %196 = sub i32 %192, 1
  %197 = mul i32 %192, %195
  %198 = urem i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = icmp slt i32 %193, 10
  %201 = and i1 %199, %200
  %202 = xor i1 %199, %200
  %203 = or i1 %201, %202
  %204 = or i1 %199, %200
  br i1 %203, label %205, label %484

; <label>:205:                                    ; preds = %185
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %188, i32* %189, %"class.std::allocator.5"* dereferenceable(1) %191)
          to label %206 unwind label %240

; <label>:206:                                    ; preds = %205
  %207 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %208 = load i32*, i32** %34, align 8
  %209 = load i64, i64* %32, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.4"* %207, i32* %208, i64 %209)
          to label %210 unwind label %240

; <label>:210:                                    ; preds = %206
  %211 = load i32, i32* @x.325
  %212 = load i32, i32* @y.326
  %213 = sub i32 0, 1
  %214 = add i32 %211, %213
  %215 = sub i32 %211, 1
  %216 = mul i32 %211, %214
  %217 = urem i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = icmp slt i32 %212, 10
  %220 = and i1 %218, %219
  %221 = xor i1 %218, %219
  %222 = or i1 %220, %221
  %223 = or i1 %218, %219
  br i1 %222, label %224, label %491

; <label>:224:                                    ; preds = %210, %491
  %225 = load i32, i32* @x.325
  %226 = load i32, i32* @y.326
  %227 = sub i32 %225, 999683476
  %228 = sub i32 %227, 1
  %229 = add i32 %228, 999683476
  %230 = sub i32 %225, 1
  %231 = mul i32 %225, %229
  %232 = urem i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = icmp slt i32 %226, 10
  %235 = and i1 %233, %234
  %236 = xor i1 %233, %234
  %237 = or i1 %235, %236
  %238 = or i1 %233, %234
  br i1 %237, label %239, label %491

; <label>:239:                                    ; preds = %224
  invoke void @__cxa_rethrow() #12
          to label %401 unwind label %240

; <label>:240:                                    ; preds = %239, %206, %205
  %241 = landingpad { i8*, i32 }
          cleanup
  %242 = extractvalue { i8*, i32 } %241, 0
  store i8* %242, i8** %36, align 8
  %243 = extractvalue { i8*, i32 } %241, 1
  store i32 %243, i32* %37, align 4
  invoke void @__cxa_end_catch()
          to label %244 unwind label %398

; <label>:244:                                    ; preds = %240
  %245 = load i32, i32* @x.325
  %246 = load i32, i32* @y.326
  %247 = add i32 %245, 1239804293
  %248 = sub i32 %247, 1
  %249 = sub i32 %248, 1239804293
  %250 = sub i32 %245, 1
  %251 = mul i32 %245, %249
  %252 = urem i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = icmp slt i32 %246, 10
  %255 = and i1 %253, %254
  %256 = xor i1 %253, %254
  %257 = or i1 %255, %256
  %258 = or i1 %253, %254
  br i1 %257, label %259, label %492

; <label>:259:                                    ; preds = %244, %492
  %260 = load i32, i32* @x.325
  %261 = load i32, i32* @y.326
  %262 = sub i32 0, 1
  %263 = add i32 %260, %262
  %264 = sub i32 %260, 1
  %265 = mul i32 %260, %263
  %266 = urem i32 %265, 2
  %267 = icmp eq i32 %266, 0
  %268 = icmp slt i32 %261, 10
  %269 = and i1 %267, %268
  %270 = xor i1 %267, %268
  %271 = or i1 %269, %270
  %272 = or i1 %267, %268
  br i1 %271, label %273, label %492

; <label>:273:                                    ; preds = %259
  br label %393

; <label>:274:                                    ; preds = %165
  %275 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %276 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %275, i32 0, i32 0
  %277 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %276, i32 0, i32 0
  %278 = load i32*, i32** %277, align 8
  %279 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %280 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %279, i32 0, i32 0
  %281 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %280, i32 0, i32 1
  %282 = load i32*, i32** %281, align 8
  %283 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %284 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %283) #3
  call void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %278, i32* %282, %"class.std::allocator.5"* dereferenceable(1) %284)
  %285 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %286 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %287 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %286, i32 0, i32 0
  %288 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %287, i32 0, i32 0
  %289 = load i32*, i32** %288, align 8
  %290 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %291 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %290, i32 0, i32 0
  %292 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %291, i32 0, i32 2
  %293 = load i32*, i32** %292, align 8
  %294 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %295 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %294, i32 0, i32 0
  %296 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %295, i32 0, i32 0
  %297 = load i32*, i32** %296, align 8
  %298 = ptrtoint i32* %293 to i64
  %299 = ptrtoint i32* %297 to i64
  %300 = add i64 %298, 7077633850013827732
  %301 = sub i64 %300, %299
  %302 = sub i64 %301, 7077633850013827732
  %303 = sub i64 %298, %299
  %304 = sdiv exact i64 %302, 4
  call void @_ZNSt12_Vector_baseIiSaIiEE13_M_deallocateEPim(%"struct.std::_Vector_base.4"* %285, i32* %289, i64 %304)
  %305 = load i32*, i32** %34, align 8
  %306 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %307 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %306, i32 0, i32 0
  %308 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %307, i32 0, i32 0
  store i32* %305, i32** %308, align 8
  %309 = load i32*, i32** %35, align 8
  %310 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %311 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %310, i32 0, i32 0
  %312 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %311, i32 0, i32 1
  store i32* %309, i32** %312, align 8
  %313 = load i32*, i32** %34, align 8
  %314 = load i64, i64* %32, align 8
  %315 = getelementptr inbounds i32, i32* %313, i64 %314
  %316 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %317 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %316, i32 0, i32 0
  %318 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %317, i32 0, i32 2
  store i32* %315, i32** %318, align 8
  br label %319

; <label>:319:                                    ; preds = %274, %127
  %320 = load i32, i32* @x.325
  %321 = load i32, i32* @y.326
  %322 = sub i32 %320, 1517807182
  %323 = sub i32 %322, 1
  %324 = add i32 %323, 1517807182
  %325 = sub i32 %320, 1
  %326 = mul i32 %320, %324
  %327 = urem i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = icmp slt i32 %321, 10
  %330 = and i1 %328, %329
  %331 = xor i1 %328, %329
  %332 = or i1 %330, %331
  %333 = or i1 %328, %329
  br i1 %332, label %334, label %493

; <label>:334:                                    ; preds = %319, %493
  %335 = load i32, i32* @x.325
  %336 = load i32, i32* @y.326
  %337 = add i32 %335, 1413652639
  %338 = sub i32 %337, 1
  %339 = sub i32 %338, 1413652639
  %340 = sub i32 %335, 1
  %341 = mul i32 %335, %339
  %342 = urem i32 %341, 2
  %343 = icmp eq i32 %342, 0
  %344 = icmp slt i32 %336, 10
  %345 = xor i1 %343, true
  %346 = xor i1 %344, true
  %347 = xor i1 false, true
  %348 = and i1 %345, false
  %349 = and i1 %343, %347
  %350 = and i1 %346, false
  %351 = and i1 %344, %347
  %352 = or i1 %348, %349
  %353 = or i1 %350, %351
  %354 = xor i1 %352, %353
  %355 = or i1 %345, %346
  %356 = xor i1 %355, true
  %357 = or i1 false, %347
  %358 = and i1 %356, %357
  %359 = or i1 %354, %358
  %360 = or i1 %343, %344
  br i1 %359, label %361, label %493

; <label>:361:                                    ; preds = %334
  br label %362

; <label>:362:                                    ; preds = %361, %54
  %363 = load i32, i32* @x.325
  %364 = load i32, i32* @y.326
  %365 = sub i32 %363, 1338861549
  %366 = sub i32 %365, 1
  %367 = add i32 %366, 1338861549
  %368 = sub i32 %363, 1
  %369 = mul i32 %363, %367
  %370 = urem i32 %369, 2
  %371 = icmp eq i32 %370, 0
  %372 = icmp slt i32 %364, 10
  %373 = and i1 %371, %372
  %374 = xor i1 %371, %372
  %375 = or i1 %373, %374
  %376 = or i1 %371, %372
  br i1 %375, label %377, label %494

; <label>:377:                                    ; preds = %362, %494
  %378 = load i32, i32* @x.325
  %379 = load i32, i32* @y.326
  %380 = sub i32 %378, -353000919
  %381 = sub i32 %380, 1
  %382 = add i32 %381, -353000919
  %383 = sub i32 %378, 1
  %384 = mul i32 %378, %382
  %385 = urem i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = icmp slt i32 %379, 10
  %388 = and i1 %386, %387
  %389 = xor i1 %386, %387
  %390 = or i1 %388, %389
  %391 = or i1 %386, %387
  br i1 %390, label %392, label %494

; <label>:392:                                    ; preds = %377
  ret void

; <label>:393:                                    ; preds = %273
  %394 = load i8*, i8** %36, align 8
  %395 = load i32, i32* %37, align 4
  %396 = insertvalue { i8*, i32 } undef, i8* %394, 0
  %397 = insertvalue { i8*, i32 } %396, i32 %395, 1
  resume { i8*, i32 } %397

; <label>:398:                                    ; preds = %240
  %399 = landingpad { i8*, i32 }
          catch i8* null
  %400 = extractvalue { i8*, i32 } %399, 0
  call void @__clang_call_terminate(i8* %400) #8
  unreachable

; <label>:401:                                    ; preds = %239
  unreachable

; <label>:402:                                    ; preds = %29, %2
  %403 = alloca %"class.std::vector.3"*, align 8
  %404 = alloca i64, align 8
  %405 = alloca i64, align 8
  %406 = alloca i64, align 8
  %407 = alloca i32*, align 8
  %408 = alloca i32*, align 8
  %409 = alloca i8*
  %410 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %403, align 8
  store i64 %1, i64* %404, align 8
  %411 = load %"class.std::vector.3"*, %"class.std::vector.3"** %403, align 8
  %412 = load i64, i64* %404, align 8
  %413 = icmp ne i64 %412, 0
  br label %29

; <label>:414:                                    ; preds = %82, %55
  %415 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %416 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %415, i32 0, i32 0
  %417 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %416, i32 0, i32 2
  %418 = load i32*, i32** %417, align 8
  %419 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %420 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %419, i32 0, i32 0
  %421 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %420, i32 0, i32 1
  %422 = load i32*, i32** %421, align 8
  %423 = ptrtoint i32* %418 to i64
  %424 = ptrtoint i32* %422 to i64
  %425 = add i64 0, 1520951217717943005
  %426 = sub i64 %425, %423
  %427 = sub i64 %426, 1520951217717943005
  %428 = sub i64 0, %423
  %429 = sub i64 %427, -7783123435293351835
  %430 = add i64 %429, %424
  %431 = add i64 %430, -7783123435293351835
  %432 = add i64 %427, %424
  %433 = sub i64 0, 7096611546396004413
  %434 = sub i64 %433, %423
  %435 = add i64 %434, 7096611546396004413
  %436 = sub i64 0, %423
  %437 = sub i64 %435, 3804065069685523488
  %438 = add i64 %437, %424
  %439 = add i64 %438, 3804065069685523488
  %440 = add i64 %435, %424
  %441 = add i64 0, 2085220432553464198
  %442 = sub i64 %441, %423
  %443 = sub i64 %442, 2085220432553464198
  %444 = sub i64 0, %423
  %445 = sub i64 0, %443
  %446 = sub i64 0, %424
  %447 = add i64 %445, %446
  %448 = sub i64 0, %447
  %449 = add i64 %443, %424
  %450 = add i64 %423, -1028392361565534954
  %451 = sub i64 %450, %424
  %452 = sub i64 %451, -1028392361565534954
  %453 = sub i64 %423, %424
  %454 = mul i64 %452, %424
  %455 = shl i64 %423, %424
  %456 = sub i64 0, 5533037143750705310
  %457 = sub i64 %456, %423
  %458 = add i64 %457, 5533037143750705310
  %459 = sub i64 0, %423
  %460 = add i64 %458, 1873256678302349195
  %461 = add i64 %460, %424
  %462 = sub i64 %461, 1873256678302349195
  %463 = add i64 %458, %424
  %464 = sub i64 0, 369045514774020266
  %465 = sub i64 %464, %423
  %466 = add i64 %465, 369045514774020266
  %467 = sub i64 0, %423
  %468 = sub i64 0, %424
  %469 = sub i64 %466, %468
  %470 = add i64 %466, %424
  %471 = shl i64 %423, %424
  %472 = sub i64 0, %424
  %473 = add i64 %423, %472
  %474 = sub i64 %423, %424
  %475 = shl i64 %473, 4
  %476 = sub i64 %473, 3731979747307096446
  %477 = sub i64 %476, 4
  %478 = add i64 %477, 3731979747307096446
  %479 = sub i64 %473, 4
  %480 = mul i64 %478, 4
  %481 = sdiv exact i64 %473, 4
  %482 = load i64, i64* %31, align 8
  %483 = icmp uge i64 %481, %482
  br label %82

; <label>:484:                                    ; preds = %185, %170
  %485 = load i8*, i8** %36, align 8
  %486 = call i8* @__cxa_begin_catch(i8* %485) #3
  %487 = load i32*, i32** %34, align 8
  %488 = load i32*, i32** %35, align 8
  %489 = bitcast %"class.std::vector.3"* %38 to %"struct.std::_Vector_base.4"*
  %490 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %489) #3
  br label %185

; <label>:491:                                    ; preds = %224, %210
  br label %224

; <label>:492:                                    ; preds = %259, %244
  br label %259

; <label>:493:                                    ; preds = %334, %319
  br label %334

; <label>:494:                                    ; preds = %377, %362
  br label %377
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.3"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::vector.3"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %6 = load i32*, i32** %4, align 8
  %7 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %8 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %8, i32 0, i32 1
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %11) #3
  invoke void @_ZSt8_DestroyIPiiEvT_S1_RSaIT0_E(i32* %6, i32* %10, %"class.std::allocator.5"* dereferenceable(1) %12)
          to label %13 unwind label %18

; <label>:13:                                     ; preds = %2
  %14 = load i32*, i32** %4, align 8
  %15 = bitcast %"class.std::vector.3"* %5 to %"struct.std::_Vector_base.4"*
  %16 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %16, i32 0, i32 1
  store i32* %14, i32** %17, align 8
  ret void

; <label>:18:                                     ; preds = %2
  %19 = landingpad { i8*, i32 }
          catch i8* null
  %20 = extractvalue { i8*, i32 } %19, 0
  call void @__clang_call_terminate(i8* %20) #8
  unreachable
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt27__uninitialized_default_n_aIPimiET_S1_T0_RSaIT1_E(i32*, i64, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = call i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32* %7, i64 %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE12_M_check_lenEmPKc(%"class.std::vector.3"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca %"class.std::vector.3"*
  %6 = alloca i64*
  %7 = alloca i64*
  %8 = alloca i8**
  %9 = alloca i64*
  %10 = alloca i1
  %11 = alloca i1
  %12 = load i32, i32* @x.331
  %13 = load i32, i32* @y.332
  %14 = sub i32 %12, 2000324607
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 2000324607
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  store i1 %20, i1* %11
  %21 = icmp slt i32 %13, 10
  store i1 %21, i1* %10
  %22 = alloca i32
  store i32 143434407, i32* %22
  %23 = alloca i64
  br label %24

; <label>:24:                                     ; preds = %3, %152
  %25 = load i32, i32* %22
  switch i32 %25, label %26 [
    i32 143434407, label %27
    i32 1475036601, label %35
    i32 -49668981, label %80
    i32 -176370405, label %83
    i32 801168538, label %86
    i32 354387151, label %107
    i32 -1676591276, label %114
    i32 1978803903, label %117
    i32 -614322741, label %120
    i32 -712601254, label %122
  ]

; <label>:26:                                     ; preds = %24
  br label %152

; <label>:27:                                     ; preds = %24
  %28 = load volatile i1, i1* %11
  %29 = load volatile i1, i1* %10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 1475036601, i32 -712601254
  store i32 %34, i32* %22
  br label %152

; <label>:35:                                     ; preds = %24
  %36 = alloca %"class.std::vector.3"*, align 8
  %37 = alloca i64, align 8
  store i64* %37, i64** %9
  %38 = alloca i8*, align 8
  store i8** %38, i8*** %8
  %39 = alloca i64, align 8
  store i64* %39, i64** %7
  %40 = alloca i64, align 8
  store i64* %40, i64** %6
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %36, align 8
  %41 = load volatile i64*, i64** %9
  store i64 %1, i64* %41, align 8
  %42 = load volatile i8**, i8*** %8
  store i8* %2, i8** %42, align 8
  %43 = load %"class.std::vector.3"*, %"class.std::vector.3"** %36, align 8
  store %"class.std::vector.3"* %43, %"class.std::vector.3"** %5
  %44 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %45 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.3"* %44) #3
  %46 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %47 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %46) #3
  %48 = sub i64 0, %47
  %49 = add i64 %45, %48
  %50 = sub i64 %45, %47
  %51 = load volatile i64*, i64** %9
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %49, %52
  store i1 %53, i1* %4
  %54 = load i32, i32* @x.331
  %55 = load i32, i32* @y.332
  %56 = sub i32 0, 1
  %57 = add i32 %54, %56
  %58 = sub i32 %54, 1
  %59 = mul i32 %54, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %55, 10
  %63 = xor i1 %61, true
  %64 = xor i1 %62, true
  %65 = xor i1 true, true
  %66 = and i1 %63, true
  %67 = and i1 %61, %65
  %68 = and i1 %64, true
  %69 = and i1 %62, %65
  %70 = or i1 %66, %67
  %71 = or i1 %68, %69
  %72 = xor i1 %70, %71
  %73 = or i1 %63, %64
  %74 = xor i1 %73, true
  %75 = or i1 true, %65
  %76 = and i1 %74, %75
  %77 = or i1 %72, %76
  %78 = or i1 %61, %62
  %79 = select i1 %77, i32 -49668981, i32 -712601254
  store i32 %79, i32* %22
  br label %152

; <label>:80:                                     ; preds = %24
  %81 = load volatile i1, i1* %4
  %82 = select i1 %81, i32 -176370405, i32 801168538
  store i32 %82, i32* %22
  br label %152

; <label>:83:                                     ; preds = %24
  %84 = load volatile i8**, i8*** %8
  %85 = load i8*, i8** %84, align 8
  call void @_ZSt20__throw_length_errorPKc(i8* %85) #12
  unreachable

; <label>:86:                                     ; preds = %24
  %87 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %88 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %87) #3
  %89 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %90 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %89) #3
  %91 = load volatile i64*, i64** %6
  store i64 %90, i64* %91, align 8
  %92 = load volatile i64*, i64** %9
  %93 = load volatile i64*, i64** %6
  %94 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %93, i64* dereferenceable(8) %92)
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %88, 7034642892010300765
  %97 = add i64 %96, %95
  %98 = sub i64 %97, 7034642892010300765
  %99 = add i64 %88, %95
  %100 = load volatile i64*, i64** %7
  store i64 %98, i64* %100, align 8
  %101 = load volatile i64*, i64** %7
  %102 = load i64, i64* %101, align 8
  %103 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %104 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %103) #3
  %105 = icmp ult i64 %102, %104
  %106 = select i1 %105, i32 -1676591276, i32 354387151
  store i32 %106, i32* %22
  br label %152

; <label>:107:                                    ; preds = %24
  %108 = load volatile i64*, i64** %7
  %109 = load i64, i64* %108, align 8
  %110 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %111 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.3"* %110) #3
  %112 = icmp ugt i64 %109, %111
  %113 = select i1 %112, i32 -1676591276, i32 1978803903
  store i32 %113, i32* %22
  br label %152

; <label>:114:                                    ; preds = %24
  %115 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %5
  %116 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.3"* %115) #3
  store i32 -614322741, i32* %22
  store i64 %116, i64* %23
  br label %152

; <label>:117:                                    ; preds = %24
  %118 = load volatile i64*, i64** %7
  %119 = load i64, i64* %118, align 8
  store i32 -614322741, i32* %22
  store i64 %119, i64* %23
  br label %152

; <label>:120:                                    ; preds = %24
  %121 = load i64, i64* %23
  ret i64 %121

; <label>:122:                                    ; preds = %24
  %123 = alloca %"class.std::vector.3"*, align 8
  %124 = alloca i64, align 8
  %125 = alloca i8*, align 8
  %126 = alloca i64, align 8
  %127 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %123, align 8
  store i64 %1, i64* %124, align 8
  store i8* %2, i8** %125, align 8
  %128 = load %"class.std::vector.3"*, %"class.std::vector.3"** %123, align 8
  %129 = call i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.3"* %128) #3
  %130 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %128) #3
  %131 = shl i64 %129, %130
  %132 = add i64 0, -6672450103356526397
  %133 = sub i64 %132, %129
  %134 = sub i64 %133, -6672450103356526397
  %135 = sub i64 0, %129
  %136 = sub i64 0, %134
  %137 = sub i64 0, %130
  %138 = add i64 %136, %137
  %139 = sub i64 0, %138
  %140 = add i64 %134, %130
  %141 = shl i64 %129, %130
  %142 = sub i64 0, %130
  %143 = add i64 %129, %142
  %144 = sub i64 %129, %130
  %145 = mul i64 %143, %130
  %146 = sub i64 %129, 8085144723108178512
  %147 = sub i64 %146, %130
  %148 = add i64 %147, 8085144723108178512
  %149 = sub i64 %129, %130
  %150 = load i64, i64* %124, align 8
  %151 = icmp ult i64 %148, %150
  store i32 1475036601, i32* %22
  br label %152

; <label>:152:                                    ; preds = %122, %117, %114, %107, %86, %80, %35, %27, %26
  br label %24
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca %"struct.std::_Vector_base.4"*
  %5 = alloca %"struct.std::_Vector_base.4"*, align 8
  %6 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %5, align 8
  store i64 %1, i64* %6, align 8
  %7 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %5, align 8
  store %"struct.std::_Vector_base.4"* %7, %"struct.std::_Vector_base.4"** %4
  %8 = load i64, i64* %6, align 8
  store i64 %8, i64* %3
  %9 = alloca i32
  store i32 -1149021572, i32* %9
  %10 = alloca i32*
  br label %11

; <label>:11:                                     ; preds = %2, %27
  %12 = load i32, i32* %9
  switch i32 %12, label %13 [
    i32 -1149021572, label %14
    i32 754366824, label %18
    i32 892042444, label %24
    i32 1827243195, label %25
  ]

; <label>:13:                                     ; preds = %11
  br label %27

; <label>:14:                                     ; preds = %11
  %15 = load volatile i64, i64* %3
  %16 = icmp ne i64 %15, 0
  %17 = select i1 %16, i32 754366824, i32 892042444
  store i32 %17, i32* %9
  br label %27

; <label>:18:                                     ; preds = %11
  %19 = load volatile %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4
  %20 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %19, i32 0, i32 0
  %21 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %20 to %"class.std::allocator.5"*
  %22 = load i64, i64* %6, align 8
  %23 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %21, i64 %22)
  store i32 1827243195, i32* %9
  store i32* %23, i32** %10
  br label %27

; <label>:24:                                     ; preds = %11
  store i32 1827243195, i32* %9
  store i32* null, i32** %10
  br label %27

; <label>:25:                                     ; preds = %11
  %26 = load i32*, i32** %10
  ret i32* %26

; <label>:27:                                     ; preds = %24, %18, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt34__uninitialized_move_if_noexcept_aIPiS0_SaIiEET0_T_S3_S2_RT1_(i32*, i32*, i32*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*
  %6 = alloca i1
  %7 = alloca i1
  %8 = load i32, i32* @x.335
  %9 = load i32, i32* @y.336
  %10 = sub i32 %8, -831658688
  %11 = sub i32 %10, 1
  %12 = add i32 %11, -831658688
  %13 = sub i32 %8, 1
  %14 = mul i32 %8, %12
  %15 = urem i32 %14, 2
  %16 = icmp eq i32 %15, 0
  store i1 %16, i1* %7
  %17 = icmp slt i32 %9, 10
  store i1 %17, i1* %6
  %18 = alloca i32
  store i32 1731200008, i32* %18
  br label %19

; <label>:19:                                     ; preds = %4, %99
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 1731200008, label %22
    i32 270574952, label %42
    i32 233183226, label %77
    i32 -580880373, label %79
  ]

; <label>:21:                                     ; preds = %19
  br label %99

; <label>:22:                                     ; preds = %19
  %23 = load volatile i1, i1* %7
  %24 = load volatile i1, i1* %6
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 true, true
  %28 = and i1 %25, true
  %29 = and i1 %23, %27
  %30 = and i1 %26, true
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 true, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  %41 = select i1 %39, i32 270574952, i32 -580880373
  store i32 %41, i32* %18
  br label %99

; <label>:42:                                     ; preds = %19
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i32*, align 8
  %46 = alloca %"class.std::allocator.5"*, align 8
  %47 = alloca %"class.std::move_iterator.13", align 8
  %48 = alloca %"class.std::move_iterator.13", align 8
  store i32* %0, i32** %43, align 8
  store i32* %1, i32** %44, align 8
  store i32* %2, i32** %45, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %46, align 8
  %49 = load i32*, i32** %43, align 8
  %50 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %49)
  %51 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %47, i32 0, i32 0
  store i32* %50, i32** %51, align 8
  %52 = load i32*, i32** %44, align 8
  %53 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %52)
  %54 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %48, i32 0, i32 0
  store i32* %53, i32** %54, align 8
  %55 = load i32*, i32** %45, align 8
  %56 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %46, align 8
  %57 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %47, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %48, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %58, i32* %60, i32* %55, %"class.std::allocator.5"* dereferenceable(1) %56)
  store i32* %61, i32** %5
  %62 = load i32, i32* @x.335
  %63 = load i32, i32* @y.336
  %64 = add i32 %62, 1790172392
  %65 = sub i32 %64, 1
  %66 = sub i32 %65, 1790172392
  %67 = sub i32 %62, 1
  %68 = mul i32 %62, %66
  %69 = urem i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = icmp slt i32 %63, 10
  %72 = and i1 %70, %71
  %73 = xor i1 %70, %71
  %74 = or i1 %72, %73
  %75 = or i1 %70, %71
  %76 = select i1 %74, i32 233183226, i32 -580880373
  store i32 %76, i32* %18
  br label %99

; <label>:77:                                     ; preds = %19
  %78 = load volatile i32*, i32** %5
  ret i32* %78

; <label>:79:                                     ; preds = %19
  %80 = alloca i32*, align 8
  %81 = alloca i32*, align 8
  %82 = alloca i32*, align 8
  %83 = alloca %"class.std::allocator.5"*, align 8
  %84 = alloca %"class.std::move_iterator.13", align 8
  %85 = alloca %"class.std::move_iterator.13", align 8
  store i32* %0, i32** %80, align 8
  store i32* %1, i32** %81, align 8
  store i32* %2, i32** %82, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %83, align 8
  %86 = load i32*, i32** %80, align 8
  %87 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %86)
  %88 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %84, i32 0, i32 0
  store i32* %87, i32** %88, align 8
  %89 = load i32*, i32** %81, align 8
  %90 = call i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32* %89)
  %91 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %85, i32 0, i32 0
  store i32* %90, i32** %91, align 8
  %92 = load i32*, i32** %82, align 8
  %93 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %83, align 8
  %94 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %84, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %85, i32 0, i32 0
  %97 = load i32*, i32** %96, align 8
  %98 = call i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32* %95, i32* %97, i32* %92, %"class.std::allocator.5"* dereferenceable(1) %93)
  store i32 270574952, i32* %18
  br label %99

; <label>:99:                                     ; preds = %79, %42, %22, %21
  br label %19
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt25__uninitialized_default_nIPimET_S1_T0_(i32*, i64) #0 comdat {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i8, align 1
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  store i8 1, i8* %5, align 1
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32* %6, i64 %7)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt27__uninitialized_default_n_1ILb1EE18__uninit_default_nIPimEET_S3_T0_(i32*, i64) #0 comdat align 2 {
  %3 = alloca i32*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  store i32* %0, i32** %3, align 8
  store i64 %1, i64* %4, align 8
  %6 = load i32*, i32** %3, align 8
  %7 = load i64, i64* %4, align 8
  store i32 0, i32* %5, align 4
  %8 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %6, i64 %7, i32* dereferenceable(4) %5)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %7)
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZSt10__fill_n_aIPimiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT1_EE7__valueET_E6__typeES4_T0_RKS3_(i32*, i64, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*
  %5 = alloca i64*
  %6 = alloca i32*
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.343
  %11 = load i32, i32* @y.344
  %12 = sub i32 0, 1
  %13 = add i32 %10, %12
  %14 = sub i32 %10, 1
  %15 = mul i32 %10, %13
  %16 = urem i32 %15, 2
  %17 = icmp eq i32 %16, 0
  store i1 %17, i1* %9
  %18 = icmp slt i32 %11, 10
  store i1 %18, i1* %8
  %19 = alloca i32
  store i32 123800327, i32* %19
  br label %20

; <label>:20:                                     ; preds = %3, %164
  %21 = load i32, i32* %19
  switch i32 %21, label %22 [
    i32 123800327, label %23
    i32 -1490604008, label %43
    i32 1506622963, label %81
    i32 -1121662774, label %82
    i32 -2131624539, label %87
    i32 -1552742389, label %92
    i32 -351773766, label %104
    i32 1789838754, label %132
    i32 -778213363, label %150
    i32 2086347220, label %152
    i32 1002691278, label %161
  ]

; <label>:22:                                     ; preds = %20
  br label %164

; <label>:23:                                     ; preds = %20
  %24 = load volatile i1, i1* %9
  %25 = load volatile i1, i1* %8
  %26 = xor i1 %24, true
  %27 = xor i1 %25, true
  %28 = xor i1 true, true
  %29 = and i1 %26, true
  %30 = and i1 %24, %28
  %31 = and i1 %27, true
  %32 = and i1 %25, %28
  %33 = or i1 %29, %30
  %34 = or i1 %31, %32
  %35 = xor i1 %33, %34
  %36 = or i1 %26, %27
  %37 = xor i1 %36, true
  %38 = or i1 true, %28
  %39 = and i1 %37, %38
  %40 = or i1 %35, %39
  %41 = or i1 %24, %25
  %42 = select i1 %40, i32 -1490604008, i32 2086347220
  store i32 %42, i32* %19
  br label %164

; <label>:43:                                     ; preds = %20
  %44 = alloca i32*, align 8
  store i32** %44, i32*** %7
  %45 = alloca i64, align 8
  %46 = alloca i32*, align 8
  %47 = alloca i32, align 4
  store i32* %47, i32** %6
  %48 = alloca i64, align 8
  store i64* %48, i64** %5
  %49 = load volatile i32**, i32*** %7
  store i32* %0, i32** %49, align 8
  store i64 %1, i64* %45, align 8
  store i32* %2, i32** %46, align 8
  %50 = load i32*, i32** %46, align 8
  %51 = load i32, i32* %50, align 4
  %52 = load volatile i32*, i32** %6
  store i32 %51, i32* %52, align 4
  %53 = load i64, i64* %45, align 8
  %54 = load volatile i64*, i64** %5
  store i64 %53, i64* %54, align 8
  %55 = load i32, i32* @x.343
  %56 = load i32, i32* @y.344
  %57 = sub i32 0, 1
  %58 = add i32 %55, %57
  %59 = sub i32 %55, 1
  %60 = mul i32 %55, %58
  %61 = urem i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = icmp slt i32 %56, 10
  %64 = xor i1 %62, true
  %65 = xor i1 %63, true
  %66 = xor i1 true, true
  %67 = and i1 %64, true
  %68 = and i1 %62, %66
  %69 = and i1 %65, true
  %70 = and i1 %63, %66
  %71 = or i1 %67, %68
  %72 = or i1 %69, %70
  %73 = xor i1 %71, %72
  %74 = or i1 %64, %65
  %75 = xor i1 %74, true
  %76 = or i1 true, %66
  %77 = and i1 %75, %76
  %78 = or i1 %73, %77
  %79 = or i1 %62, %63
  %80 = select i1 %78, i32 1506622963, i32 2086347220
  store i32 %80, i32* %19
  br label %164

; <label>:81:                                     ; preds = %20
  store i32 -1121662774, i32* %19
  br label %164

; <label>:82:                                     ; preds = %20
  %83 = load volatile i64*, i64** %5
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %84, 0
  %86 = select i1 %85, i32 -2131624539, i32 -351773766
  store i32 %86, i32* %19
  br label %164

; <label>:87:                                     ; preds = %20
  %88 = load volatile i32*, i32** %6
  %89 = load i32, i32* %88, align 4
  %90 = load volatile i32**, i32*** %7
  %91 = load i32*, i32** %90, align 8
  store i32 %89, i32* %91, align 4
  store i32 -1552742389, i32* %19
  br label %164

; <label>:92:                                     ; preds = %20
  %93 = load volatile i64*, i64** %5
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -3930415894396638237
  %96 = add i64 %95, -1
  %97 = sub i64 %96, -3930415894396638237
  %98 = add i64 %94, -1
  %99 = load volatile i64*, i64** %5
  store i64 %97, i64* %99, align 8
  %100 = load volatile i32**, i32*** %7
  %101 = load i32*, i32** %100, align 8
  %102 = getelementptr inbounds i32, i32* %101, i32 1
  %103 = load volatile i32**, i32*** %7
  store i32* %102, i32** %103, align 8
  store i32 -1121662774, i32* %19
  br label %164

; <label>:104:                                    ; preds = %20
  %105 = load i32, i32* @x.343
  %106 = load i32, i32* @y.344
  %107 = sub i32 %105, 241239911
  %108 = sub i32 %107, 1
  %109 = add i32 %108, 241239911
  %110 = sub i32 %105, 1
  %111 = mul i32 %105, %109
  %112 = urem i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = icmp slt i32 %106, 10
  %115 = xor i1 %113, true
  %116 = xor i1 %114, true
  %117 = xor i1 true, true
  %118 = and i1 %115, true
  %119 = and i1 %113, %117
  %120 = and i1 %116, true
  %121 = and i1 %114, %117
  %122 = or i1 %118, %119
  %123 = or i1 %120, %121
  %124 = xor i1 %122, %123
  %125 = or i1 %115, %116
  %126 = xor i1 %125, true
  %127 = or i1 true, %117
  %128 = and i1 %126, %127
  %129 = or i1 %124, %128
  %130 = or i1 %113, %114
  %131 = select i1 %129, i32 1789838754, i32 1002691278
  store i32 %131, i32* %19
  br label %164

; <label>:132:                                    ; preds = %20
  %133 = load volatile i32**, i32*** %7
  %134 = load i32*, i32** %133, align 8
  store i32* %134, i32** %4
  %135 = load i32, i32* @x.343
  %136 = load i32, i32* @y.344
  %137 = sub i32 %135, 1444377137
  %138 = sub i32 %137, 1
  %139 = add i32 %138, 1444377137
  %140 = sub i32 %135, 1
  %141 = mul i32 %135, %139
  %142 = urem i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = icmp slt i32 %136, 10
  %145 = and i1 %143, %144
  %146 = xor i1 %143, %144
  %147 = or i1 %145, %146
  %148 = or i1 %143, %144
  %149 = select i1 %147, i32 -778213363, i32 1002691278
  store i32 %149, i32* %19
  br label %164

; <label>:150:                                    ; preds = %20
  %151 = load volatile i32*, i32** %4
  ret i32* %151

; <label>:152:                                    ; preds = %20
  %153 = alloca i32*, align 8
  %154 = alloca i64, align 8
  %155 = alloca i32*, align 8
  %156 = alloca i32, align 4
  %157 = alloca i64, align 8
  store i32* %0, i32** %153, align 8
  store i64 %1, i64* %154, align 8
  store i32* %2, i32** %155, align 8
  %158 = load i32*, i32** %155, align 8
  %159 = load i32, i32* %158, align 4
  store i32 %159, i32* %156, align 4
  %160 = load i64, i64* %154, align 8
  store i64 %160, i64* %157, align 8
  store i32 -1490604008, i32* %19
  br label %164

; <label>:161:                                    ; preds = %20
  %162 = load volatile i32**, i32*** %7
  %163 = load i32*, i32** %162, align 8
  store i32 1789838754, i32* %19
  br label %164

; <label>:164:                                    ; preds = %161, %152, %132, %104, %92, %87, %82, %81, %43, %23, %22
  br label %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32*) #0 comdat {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  %4 = call i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32* %3)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIPiLb0EE7_S_baseES0_(i32*) #5 comdat align 2 {
  %2 = alloca i32*, align 8
  store i32* %0, i32** %2, align 8
  %3 = load i32*, i32** %2, align 8
  ret i32* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8max_sizeEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %2, align 8
  %3 = load %"class.std::vector.3"*, %"class.std::vector.3"** %2, align 8
  %4 = bitcast %"class.std::vector.3"* %3 to %"struct.std::_Vector_base.4"*
  %5 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %4) #3
  %6 = call i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1) %5) #3
  ret i64 %6
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt16allocator_traitsISaIiEE8max_sizeERKS0_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  %4 = bitcast %"class.std::allocator.5"* %3 to %"class.__gnu_cxx::new_allocator.6"*
  %5 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %4) #3
  ret i64 %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Vector_base.4"*, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %2, align 8
  %3 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %2, align 8
  ret i64 4611686018427387903
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"* %6, i64 %7, i8* null)
  ret i32* %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZN9__gnu_cxx13new_allocatorIiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.6"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.6"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -467857452, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %72
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -467857452, label %16
    i32 -1114153135, label %21
    i32 719183139, label %37
    i32 -1452326849, label %65
    i32 -487360899, label %66
    i32 -1410460007, label %71
  ]

; <label>:15:                                     ; preds = %13
  br label %72

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 -1114153135, i32 -487360899
  store i32 %20, i32* %12
  br label %72

; <label>:21:                                     ; preds = %13
  %22 = load i32, i32* @x.359
  %23 = load i32, i32* @y.360
  %24 = add i32 %22, -71368002
  %25 = sub i32 %24, 1
  %26 = sub i32 %25, -71368002
  %27 = sub i32 %22, 1
  %28 = mul i32 %22, %26
  %29 = urem i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = icmp slt i32 %23, 10
  %32 = and i1 %30, %31
  %33 = xor i1 %30, %31
  %34 = or i1 %32, %33
  %35 = or i1 %30, %31
  %36 = select i1 %34, i32 719183139, i32 -1410460007
  store i32 %36, i32* %12
  br label %72

; <label>:37:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  %38 = load i32, i32* @x.359
  %39 = load i32, i32* @y.360
  %40 = add i32 %38, 1516978973
  %41 = sub i32 %40, 1
  %42 = sub i32 %41, 1516978973
  %43 = sub i32 %38, 1
  %44 = mul i32 %38, %42
  %45 = urem i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = icmp slt i32 %39, 10
  %48 = xor i1 %46, true
  %49 = xor i1 %47, true
  %50 = xor i1 true, true
  %51 = and i1 %48, true
  %52 = and i1 %46, %50
  %53 = and i1 %49, true
  %54 = and i1 %47, %50
  %55 = or i1 %51, %52
  %56 = or i1 %53, %54
  %57 = xor i1 %55, %56
  %58 = or i1 %48, %49
  %59 = xor i1 %58, true
  %60 = or i1 true, %50
  %61 = and i1 %59, %60
  %62 = or i1 %57, %61
  %63 = or i1 %46, %47
  %64 = select i1 %62, i32 -1452326849, i32 -1410460007
  store i32 %64, i32* %12
  br label %72

; <label>:65:                                     ; preds = %13
  unreachable

; <label>:66:                                     ; preds = %13
  %67 = load i64, i64* %7, align 8
  %68 = mul i64 %67, 4
  %69 = call i8* @_Znwm(i64 %68)
  %70 = bitcast i8* %69 to i32*
  ret i32* %70

; <label>:71:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  store i32 719183139, i32* %12
  br label %72

; <label>:72:                                     ; preds = %71, %37, %21, %16, %15
  br label %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt22__uninitialized_copy_aISt13move_iteratorIPiES1_iET0_T_S4_S3_RSaIT1_E(i32*, i32*, i32*, %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca %"class.std::move_iterator.13", align 8
  %6 = alloca %"class.std::move_iterator.13", align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca %"class.std::move_iterator.13", align 8
  %10 = alloca %"class.std::move_iterator.13", align 8
  %11 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %5, i32 0, i32 0
  store i32* %0, i32** %11, align 8
  %12 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %6, i32 0, i32 0
  store i32* %1, i32** %12, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %13 = bitcast %"class.std::move_iterator.13"* %9 to i8*
  %14 = bitcast %"class.std::move_iterator.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = bitcast %"class.std::move_iterator.13"* %10 to i8*
  %16 = bitcast %"class.std::move_iterator.13"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %15, i8* %16, i64 8, i32 8, i1 false)
  %17 = load i32*, i32** %7, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %9, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %10, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = call i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %19, i32* %21, i32* %17)
  ret i32* %22
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt32__make_move_if_noexcept_iteratorIPiSt13move_iteratorIS0_EET0_T_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.13", align 8
  %3 = alloca i32*, align 8
  store i32* %0, i32** %3, align 8
  %4 = load i32*, i32** %3, align 8
  call void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.13"* %2, i32* %4)
  %5 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %2, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  ret i32* %6
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt18uninitialized_copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.365
  %8 = load i32, i32* @y.366
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 -1141850215, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %95
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -1141850215, label %20
    i32 1960546815, label %28
    i32 -241796388, label %74
    i32 -1504743079, label %76
  ]

; <label>:19:                                     ; preds = %17
  br label %95

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 1960546815, i32 -1504743079
  store i32 %27, i32* %16
  br label %95

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::move_iterator.13", align 8
  %30 = alloca %"class.std::move_iterator.13", align 8
  %31 = alloca i32*, align 8
  %32 = alloca i8, align 1
  %33 = alloca %"class.std::move_iterator.13", align 8
  %34 = alloca %"class.std::move_iterator.13", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %29, i32 0, i32 0
  store i32* %0, i32** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %30, i32 0, i32 0
  store i32* %1, i32** %36, align 8
  store i32* %2, i32** %31, align 8
  store i8 1, i8* %32, align 1
  %37 = bitcast %"class.std::move_iterator.13"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.13"* %29 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = bitcast %"class.std::move_iterator.13"* %34 to i8*
  %40 = bitcast %"class.std::move_iterator.13"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %39, i8* %40, i64 8, i32 8, i1 false)
  %41 = load i32*, i32** %31, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %33, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %34, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %43, i32* %45, i32* %41)
  store i32* %46, i32** %4
  %47 = load i32, i32* @x.365
  %48 = load i32, i32* @y.366
  %49 = add i32 %47, 436206989
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, 436206989
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 true, true
  %60 = and i1 %57, true
  %61 = and i1 %55, %59
  %62 = and i1 %58, true
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 true, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 -241796388, i32 -1504743079
  store i32 %73, i32* %16
  br label %95

; <label>:74:                                     ; preds = %17
  %75 = load volatile i32*, i32** %4
  ret i32* %75

; <label>:76:                                     ; preds = %17
  %77 = alloca %"class.std::move_iterator.13", align 8
  %78 = alloca %"class.std::move_iterator.13", align 8
  %79 = alloca i32*, align 8
  %80 = alloca i8, align 1
  %81 = alloca %"class.std::move_iterator.13", align 8
  %82 = alloca %"class.std::move_iterator.13", align 8
  %83 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %77, i32 0, i32 0
  store i32* %0, i32** %83, align 8
  %84 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %78, i32 0, i32 0
  store i32* %1, i32** %84, align 8
  store i32* %2, i32** %79, align 8
  store i8 1, i8* %80, align 1
  %85 = bitcast %"class.std::move_iterator.13"* %81 to i8*
  %86 = bitcast %"class.std::move_iterator.13"* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %85, i8* %86, i64 8, i32 8, i1 false)
  %87 = bitcast %"class.std::move_iterator.13"* %82 to i8*
  %88 = bitcast %"class.std::move_iterator.13"* %78 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %87, i8* %88, i64 8, i32 8, i1 false)
  %89 = load i32*, i32** %79, align 8
  %90 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %81, i32 0, i32 0
  %91 = load i32*, i32** %90, align 8
  %92 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %82, i32 0, i32 0
  %93 = load i32*, i32** %92, align 8
  %94 = call i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32* %91, i32* %93, i32* %89)
  store i32 1960546815, i32* %16
  br label %95

; <label>:95:                                     ; preds = %76, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt20__uninitialized_copyILb1EE13__uninit_copyISt13move_iteratorIPiES3_EET0_T_S6_S5_(i32*, i32*, i32*) #0 comdat align 2 {
  %4 = alloca %"class.std::move_iterator.13", align 8
  %5 = alloca %"class.std::move_iterator.13", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.std::move_iterator.13", align 8
  %8 = alloca %"class.std::move_iterator.13", align 8
  %9 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.std::move_iterator.13"* %7 to i8*
  %12 = bitcast %"class.std::move_iterator.13"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = bitcast %"class.std::move_iterator.13"* %8 to i8*
  %14 = bitcast %"class.std::move_iterator.13"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %13, i8* %14, i64 8, i32 8, i1 false)
  %15 = load i32*, i32** %6, align 8
  %16 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %7, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32* %17, i32* %19, i32* %15)
  ret i32* %20
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt4copyISt13move_iteratorIPiES1_ET0_T_S4_S3_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.369
  %8 = load i32, i32* @y.370
  %9 = sub i32 %7, 1203107929
  %10 = sub i32 %9, 1
  %11 = add i32 %10, 1203107929
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -2043679018, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %86
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -2043679018, label %21
    i32 -1580811514, label %29
    i32 327260012, label %64
    i32 -442268625, label %66
  ]

; <label>:20:                                     ; preds = %18
  br label %86

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = and i1 %22, %23
  %25 = xor i1 %22, %23
  %26 = or i1 %24, %25
  %27 = or i1 %22, %23
  %28 = select i1 %26, i32 -1580811514, i32 -442268625
  store i32 %28, i32* %17
  br label %86

; <label>:29:                                     ; preds = %18
  %30 = alloca %"class.std::move_iterator.13", align 8
  %31 = alloca %"class.std::move_iterator.13", align 8
  %32 = alloca i32*, align 8
  %33 = alloca %"class.std::move_iterator.13", align 8
  %34 = alloca %"class.std::move_iterator.13", align 8
  %35 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %30, i32 0, i32 0
  store i32* %0, i32** %35, align 8
  %36 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %31, i32 0, i32 0
  store i32* %1, i32** %36, align 8
  store i32* %2, i32** %32, align 8
  %37 = bitcast %"class.std::move_iterator.13"* %33 to i8*
  %38 = bitcast %"class.std::move_iterator.13"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %37, i8* %38, i64 8, i32 8, i1 false)
  %39 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %33, i32 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %40)
  %42 = bitcast %"class.std::move_iterator.13"* %34 to i8*
  %43 = bitcast %"class.std::move_iterator.13"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %42, i8* %43, i64 8, i32 8, i1 false)
  %44 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %34, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %45)
  %47 = load i32*, i32** %32, align 8
  %48 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %41, i32* %46, i32* %47)
  store i32* %48, i32** %4
  %49 = load i32, i32* @x.369
  %50 = load i32, i32* @y.370
  %51 = add i32 %49, -392114507
  %52 = sub i32 %51, 1
  %53 = sub i32 %52, -392114507
  %54 = sub i32 %49, 1
  %55 = mul i32 %49, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %50, 10
  %59 = and i1 %57, %58
  %60 = xor i1 %57, %58
  %61 = or i1 %59, %60
  %62 = or i1 %57, %58
  %63 = select i1 %61, i32 327260012, i32 -442268625
  store i32 %63, i32* %17
  br label %86

; <label>:64:                                     ; preds = %18
  %65 = load volatile i32*, i32** %4
  ret i32* %65

; <label>:66:                                     ; preds = %18
  %67 = alloca %"class.std::move_iterator.13", align 8
  %68 = alloca %"class.std::move_iterator.13", align 8
  %69 = alloca i32*, align 8
  %70 = alloca %"class.std::move_iterator.13", align 8
  %71 = alloca %"class.std::move_iterator.13", align 8
  %72 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %67, i32 0, i32 0
  store i32* %0, i32** %72, align 8
  %73 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %68, i32 0, i32 0
  store i32* %1, i32** %73, align 8
  store i32* %2, i32** %69, align 8
  %74 = bitcast %"class.std::move_iterator.13"* %70 to i8*
  %75 = bitcast %"class.std::move_iterator.13"* %67 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %74, i8* %75, i64 8, i32 8, i1 false)
  %76 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %70, i32 0, i32 0
  %77 = load i32*, i32** %76, align 8
  %78 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %77)
  %79 = bitcast %"class.std::move_iterator.13"* %71 to i8*
  %80 = bitcast %"class.std::move_iterator.13"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %79, i8* %80, i64 8, i32 8, i1 false)
  %81 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %71, i32 0, i32 0
  %82 = load i32*, i32** %81, align 8
  %83 = call i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32* %82)
  %84 = load i32*, i32** %69, align 8
  %85 = call i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32* %78, i32* %83, i32* %84)
  store i32 -1580811514, i32* %17
  br label %86

; <label>:86:                                     ; preds = %66, %29, %21, %20
  br label %18
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt14__copy_move_a2ILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.371
  %8 = load i32, i32* @y.372
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 522541471, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 522541471, label %20
    i32 -678875042, label %28
    i32 2065388728, label %66
    i32 1030905686, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -678875042, i32 1030905686
  store i32 %27, i32* %16
  br label %79

; <label>:28:                                     ; preds = %17
  %29 = alloca i32*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store i32* %0, i32** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load i32*, i32** %29, align 8
  %33 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %32)
  %34 = load i32*, i32** %30, align 8
  %35 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %34)
  %36 = load i32*, i32** %31, align 8
  %37 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %36)
  %38 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %33, i32* %35, i32* %37)
  store i32* %38, i32** %4
  %39 = load i32, i32* @x.371
  %40 = load i32, i32* @y.372
  %41 = sub i32 %39, 1696843374
  %42 = sub i32 %41, 1
  %43 = add i32 %42, 1696843374
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 true, true
  %52 = and i1 %49, true
  %53 = and i1 %47, %51
  %54 = and i1 %50, true
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 true, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 2065388728, i32 1030905686
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  %67 = load volatile i32*, i32** %4
  ret i32* %67

; <label>:68:                                     ; preds = %17
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  %71 = alloca i32*, align 8
  store i32* %0, i32** %69, align 8
  store i32* %1, i32** %70, align 8
  store i32* %2, i32** %71, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %72)
  %74 = load i32*, i32** %70, align 8
  %75 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %74)
  %76 = load i32*, i32** %71, align 8
  %77 = call i32* @_ZSt12__niter_baseIPiENSt11_Niter_baseIT_E13iterator_typeES2_(i32* %76)
  %78 = call i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32* %73, i32* %75, i32* %77)
  store i32 -678875042, i32* %16
  br label %79

; <label>:79:                                     ; preds = %68, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__miter_baseISt13move_iteratorIPiEENSt11_Miter_baseIT_E13iterator_typeES4_(i32*) #0 comdat {
  %2 = alloca %"class.std::move_iterator.13", align 8
  %3 = alloca %"class.std::move_iterator.13", align 8
  %4 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.std::move_iterator.13"* %3 to i8*
  %6 = bitcast %"class.std::move_iterator.13"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt13__copy_move_aILb1EPiS0_ET1_T0_S2_S1_(i32*, i32*, i32*) #0 comdat {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.375
  %8 = load i32, i32* @y.376
  %9 = add i32 %7, -727886346
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -727886346
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1286040537, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %76
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1286040537, label %21
    i32 -1477717669, label %41
    i32 -203193705, label %65
    i32 -16166308, label %67
  ]

; <label>:20:                                     ; preds = %18
  br label %76

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1477717669, i32 -16166308
  store i32 %40, i32* %17
  br label %76

; <label>:41:                                     ; preds = %18
  %42 = alloca i32*, align 8
  %43 = alloca i32*, align 8
  %44 = alloca i32*, align 8
  %45 = alloca i8, align 1
  store i32* %0, i32** %42, align 8
  store i32* %1, i32** %43, align 8
  store i32* %2, i32** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32*, i32** %42, align 8
  %47 = load i32*, i32** %43, align 8
  %48 = load i32*, i32** %44, align 8
  %49 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %46, i32* %47, i32* %48)
  store i32* %49, i32** %4
  %50 = load i32, i32* @x.375
  %51 = load i32, i32* @y.376
  %52 = add i32 %50, -658927849
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, -658927849
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -203193705, i32 -16166308
  store i32 %64, i32* %17
  br label %76

; <label>:65:                                     ; preds = %18
  %66 = load volatile i32*, i32** %4
  ret i32* %66

; <label>:67:                                     ; preds = %18
  %68 = alloca i32*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  %71 = alloca i8, align 1
  store i32* %0, i32** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  store i8 1, i8* %71, align 1
  %72 = load i32*, i32** %68, align 8
  %73 = load i32*, i32** %69, align 8
  %74 = load i32*, i32** %70, align 8
  %75 = call i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32* %72, i32* %73, i32* %74)
  store i32 -1477717669, i32* %17
  br label %76

; <label>:76:                                     ; preds = %67, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt11__copy_moveILb1ELb1ESt26random_access_iterator_tagE8__copy_mIiEEPT_PKS3_S6_S4_(i32*, i32*, i32*) #5 comdat align 2 {
  %4 = alloca i32*
  %5 = alloca i1
  %6 = alloca i64*
  %7 = alloca i32**
  %8 = alloca i32**
  %9 = alloca i1
  %10 = alloca i1
  %11 = load i32, i32* @x.377
  %12 = load i32, i32* @y.378
  %13 = sub i32 0, 1
  %14 = add i32 %11, %13
  %15 = sub i32 %11, 1
  %16 = mul i32 %11, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %10
  %19 = icmp slt i32 %12, 10
  store i1 %19, i1* %9
  %20 = alloca i32
  store i32 -52734722, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %224
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -52734722, label %24
    i32 944374162, label %44
    i32 -210301632, label %91
    i32 1998430608, label %94
    i32 -1880439509, label %104
    i32 176556091, label %119
    i32 -645860323, label %151
    i32 1126822239, label %153
    i32 2013168863, label %218
  ]

; <label>:23:                                     ; preds = %21
  br label %224

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %10
  %26 = load volatile i1, i1* %9
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 false, true
  %30 = and i1 %27, false
  %31 = and i1 %25, %29
  %32 = and i1 %28, false
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 false, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 944374162, i32 1126822239
  store i32 %43, i32* %20
  br label %224

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %8
  %46 = alloca i32*, align 8
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %7
  %48 = alloca i64, align 8
  store i64* %48, i64** %6
  %49 = load volatile i32**, i32*** %8
  store i32* %0, i32** %49, align 8
  store i32* %1, i32** %46, align 8
  %50 = load volatile i32**, i32*** %7
  store i32* %2, i32** %50, align 8
  %51 = load i32*, i32** %46, align 8
  %52 = load volatile i32**, i32*** %8
  %53 = load i32*, i32** %52, align 8
  %54 = ptrtoint i32* %51 to i64
  %55 = ptrtoint i32* %53 to i64
  %56 = sub i64 0, %55
  %57 = add i64 %54, %56
  %58 = sub i64 %54, %55
  %59 = sdiv exact i64 %57, 4
  %60 = load volatile i64*, i64** %6
  store i64 %59, i64* %60, align 8
  %61 = load volatile i64*, i64** %6
  %62 = load i64, i64* %61, align 8
  %63 = icmp ne i64 %62, 0
  store i1 %63, i1* %5
  %64 = load i32, i32* @x.377
  %65 = load i32, i32* @y.378
  %66 = add i32 %64, -2129253766
  %67 = sub i32 %66, 1
  %68 = sub i32 %67, -2129253766
  %69 = sub i32 %64, 1
  %70 = mul i32 %64, %68
  %71 = urem i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = icmp slt i32 %65, 10
  %74 = xor i1 %72, true
  %75 = xor i1 %73, true
  %76 = xor i1 true, true
  %77 = and i1 %74, true
  %78 = and i1 %72, %76
  %79 = and i1 %75, true
  %80 = and i1 %73, %76
  %81 = or i1 %77, %78
  %82 = or i1 %79, %80
  %83 = xor i1 %81, %82
  %84 = or i1 %74, %75
  %85 = xor i1 %84, true
  %86 = or i1 true, %76
  %87 = and i1 %85, %86
  %88 = or i1 %83, %87
  %89 = or i1 %72, %73
  %90 = select i1 %88, i32 -210301632, i32 1126822239
  store i32 %90, i32* %20
  br label %224

; <label>:91:                                     ; preds = %21
  %92 = load volatile i1, i1* %5
  %93 = select i1 %92, i32 1998430608, i32 -1880439509
  store i32 %93, i32* %20
  br label %224

; <label>:94:                                     ; preds = %21
  %95 = load volatile i32**, i32*** %7
  %96 = load i32*, i32** %95, align 8
  %97 = bitcast i32* %96 to i8*
  %98 = load volatile i32**, i32*** %8
  %99 = load i32*, i32** %98, align 8
  %100 = bitcast i32* %99 to i8*
  %101 = load volatile i64*, i64** %6
  %102 = load i64, i64* %101, align 8
  %103 = mul i64 4, %102
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %97, i8* %100, i64 %103, i32 4, i1 false)
  store i32 -1880439509, i32* %20
  br label %224

; <label>:104:                                    ; preds = %21
  %105 = load i32, i32* @x.377
  %106 = load i32, i32* @y.378
  %107 = sub i32 0, 1
  %108 = add i32 %105, %107
  %109 = sub i32 %105, 1
  %110 = mul i32 %105, %108
  %111 = urem i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = icmp slt i32 %106, 10
  %114 = and i1 %112, %113
  %115 = xor i1 %112, %113
  %116 = or i1 %114, %115
  %117 = or i1 %112, %113
  %118 = select i1 %116, i32 176556091, i32 2013168863
  store i32 %118, i32* %20
  br label %224

; <label>:119:                                    ; preds = %21
  %120 = load volatile i32**, i32*** %7
  %121 = load i32*, i32** %120, align 8
  %122 = load volatile i64*, i64** %6
  %123 = load i64, i64* %122, align 8
  %124 = getelementptr inbounds i32, i32* %121, i64 %123
  store i32* %124, i32** %4
  %125 = load i32, i32* @x.377
  %126 = load i32, i32* @y.378
  %127 = sub i32 0, 1
  %128 = add i32 %125, %127
  %129 = sub i32 %125, 1
  %130 = mul i32 %125, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %126, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 true, true
  %137 = and i1 %134, true
  %138 = and i1 %132, %136
  %139 = and i1 %135, true
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 true, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  %150 = select i1 %148, i32 -645860323, i32 2013168863
  store i32 %150, i32* %20
  br label %224

; <label>:151:                                    ; preds = %21
  %152 = load volatile i32*, i32** %4
  ret i32* %152

; <label>:153:                                    ; preds = %21
  %154 = alloca i32*, align 8
  %155 = alloca i32*, align 8
  %156 = alloca i32*, align 8
  %157 = alloca i64, align 8
  store i32* %0, i32** %154, align 8
  store i32* %1, i32** %155, align 8
  store i32* %2, i32** %156, align 8
  %158 = load i32*, i32** %155, align 8
  %159 = load i32*, i32** %154, align 8
  %160 = ptrtoint i32* %158 to i64
  %161 = ptrtoint i32* %159 to i64
  %162 = add i64 %160, 5953687307294554291
  %163 = sub i64 %162, %161
  %164 = sub i64 %163, 5953687307294554291
  %165 = sub i64 %160, %161
  %166 = mul i64 %164, %161
  %167 = add i64 0, -2101180064959865592
  %168 = sub i64 %167, %160
  %169 = sub i64 %168, -2101180064959865592
  %170 = sub i64 0, %160
  %171 = sub i64 0, %161
  %172 = sub i64 %169, %171
  %173 = add i64 %169, %161
  %174 = add i64 0, -4104385574473579100
  %175 = sub i64 %174, %160
  %176 = sub i64 %175, -4104385574473579100
  %177 = sub i64 0, %160
  %178 = sub i64 0, %176
  %179 = sub i64 0, %161
  %180 = add i64 %178, %179
  %181 = sub i64 0, %180
  %182 = add i64 %176, %161
  %183 = sub i64 %160, 8670410284870366735
  %184 = sub i64 %183, %161
  %185 = add i64 %184, 8670410284870366735
  %186 = sub i64 %160, %161
  %187 = mul i64 %185, %161
  %188 = sub i64 0, %161
  %189 = add i64 %160, %188
  %190 = sub i64 %160, %161
  %191 = sub i64 0, 4
  %192 = add i64 %189, %191
  %193 = sub i64 %189, 4
  %194 = mul i64 %192, 4
  %195 = add i64 %189, 8761522731646865733
  %196 = sub i64 %195, 4
  %197 = sub i64 %196, 8761522731646865733
  %198 = sub i64 %189, 4
  %199 = mul i64 %197, 4
  %200 = shl i64 %189, 4
  %201 = add i64 0, -1637761171626802123
  %202 = sub i64 %201, %189
  %203 = sub i64 %202, -1637761171626802123
  %204 = sub i64 0, %189
  %205 = sub i64 0, 4
  %206 = sub i64 %203, %205
  %207 = add i64 %203, 4
  %208 = add i64 0, -890155893277129420
  %209 = sub i64 %208, %189
  %210 = sub i64 %209, -890155893277129420
  %211 = sub i64 0, %189
  %212 = sub i64 0, 4
  %213 = sub i64 %210, %212
  %214 = add i64 %210, 4
  %215 = sdiv exact i64 %189, 4
  store i64 %215, i64* %157, align 8
  %216 = load i64, i64* %157, align 8
  %217 = icmp ne i64 %216, 0
  store i32 944374162, i32* %20
  br label %224

; <label>:218:                                    ; preds = %21
  %219 = load volatile i32**, i32*** %7
  %220 = load i32*, i32** %219, align 8
  %221 = load volatile i64*, i64** %6
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds i32, i32* %220, i64 %222
  store i32 176556091, i32* %20
  br label %224

; <label>:224:                                    ; preds = %218, %153, %119, %104, %94, %91, %44, %24, %23
  br label %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i32, i1) #11

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseISt13move_iteratorIPiELb1EE7_S_baseES2_(i32*) #0 comdat align 2 {
  %2 = alloca %"class.std::move_iterator.13", align 8
  %3 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.13"* %2)
  ret i32* %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNKSt13move_iteratorIPiE4baseEv(%"class.std::move_iterator.13"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.381
  %6 = load i32, i32* @y.382
  %7 = add i32 %5, -460842955
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -460842955
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1813164319, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %77
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1813164319, label %19
    i32 2007124520, label %39
    i32 -307541861, label %70
    i32 -2062493362, label %72
  ]

; <label>:18:                                     ; preds = %16
  br label %77

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 2007124520, i32 -2062493362
  store i32 %38, i32* %15
  br label %77

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::move_iterator.13"*, align 8
  store %"class.std::move_iterator.13"* %0, %"class.std::move_iterator.13"** %40, align 8
  %41 = load %"class.std::move_iterator.13"*, %"class.std::move_iterator.13"** %40, align 8
  %42 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %41, i32 0, i32 0
  %43 = load i32*, i32** %42, align 8
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.381
  %45 = load i32, i32* @y.382
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = xor i1 %51, true
  %54 = xor i1 %52, true
  %55 = xor i1 false, true
  %56 = and i1 %53, false
  %57 = and i1 %51, %55
  %58 = and i1 %54, false
  %59 = and i1 %52, %55
  %60 = or i1 %56, %57
  %61 = or i1 %58, %59
  %62 = xor i1 %60, %61
  %63 = or i1 %53, %54
  %64 = xor i1 %63, true
  %65 = or i1 false, %55
  %66 = and i1 %64, %65
  %67 = or i1 %62, %66
  %68 = or i1 %51, %52
  %69 = select i1 %67, i32 -307541861, i32 -2062493362
  store i32 %69, i32* %15
  br label %77

; <label>:70:                                     ; preds = %16
  %71 = load volatile i32*, i32** %2
  ret i32* %71

; <label>:72:                                     ; preds = %16
  %73 = alloca %"class.std::move_iterator.13"*, align 8
  store %"class.std::move_iterator.13"* %0, %"class.std::move_iterator.13"** %73, align 8
  %74 = load %"class.std::move_iterator.13"*, %"class.std::move_iterator.13"** %73, align 8
  %75 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %74, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  store i32 2007124520, i32* %15
  br label %77

; <label>:77:                                     ; preds = %72, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt13move_iteratorIPiEC2ES0_(%"class.std::move_iterator.13"*, i32*) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.std::move_iterator.13"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::move_iterator.13"* %0, %"class.std::move_iterator.13"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::move_iterator.13"*, %"class.std::move_iterator.13"** %3, align 8
  %6 = getelementptr inbounds %"class.std::move_iterator.13", %"class.std::move_iterator.13"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  store i32* %7, i32** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt6vectorIiSaIiEEixEm(%"class.std::vector.3"*, i64) #5 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.385
  %7 = load i32, i32* @y.386
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 1706293390, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %64
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1706293390, label %19
    i32 852103499, label %27
    i32 -449702176, label %52
    i32 583159730, label %54
  ]

; <label>:18:                                     ; preds = %16
  br label %64

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 852103499, i32 583159730
  store i32 %26, i32* %15
  br label %64

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::vector.3"*, align 8
  %29 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"class.std::vector.3"*, %"class.std::vector.3"** %28, align 8
  %31 = bitcast %"class.std::vector.3"* %30 to %"struct.std::_Vector_base.4"*
  %32 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %31, i32 0, i32 0
  %33 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %32, i32 0, i32 0
  %34 = load i32*, i32** %33, align 8
  %35 = load i64, i64* %29, align 8
  %36 = getelementptr inbounds i32, i32* %34, i64 %35
  store i32* %36, i32** %3
  %37 = load i32, i32* @x.385
  %38 = load i32, i32* @y.386
  %39 = sub i32 %37, 1296123202
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1296123202
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 -449702176, i32 583159730
  store i32 %51, i32* %15
  br label %64

; <label>:52:                                     ; preds = %16
  %53 = load volatile i32*, i32** %3
  ret i32* %53

; <label>:54:                                     ; preds = %16
  %55 = alloca %"class.std::vector.3"*, align 8
  %56 = alloca i64, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %55, align 8
  store i64 %1, i64* %56, align 8
  %57 = load %"class.std::vector.3"*, %"class.std::vector.3"** %55, align 8
  %58 = bitcast %"class.std::vector.3"* %57 to %"struct.std::_Vector_base.4"*
  %59 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %58, i32 0, i32 0
  %60 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %59, i32 0, i32 0
  %61 = load i32*, i32** %60, align 8
  %62 = load i64, i64* %56, align 8
  %63 = getelementptr inbounds i32, i32* %61, i64 %62
  store i32 852103499, i32* %15
  br label %64

; <label>:64:                                     ; preds = %54, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2Ev(%"class.std::deque"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.387
  %5 = load i32, i32* @y.388
  %6 = add i32 %4, 887952137
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 887952137
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -313760563, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %49
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -313760563, label %18
    i32 -417732210, label %26
    i32 1179823054, label %44
    i32 1326856176, label %45
  ]

; <label>:17:                                     ; preds = %15
  br label %49

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -417732210, i32 1326856176
  store i32 %25, i32* %14
  br label %49

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %27, align 8
  %28 = load %"class.std::deque"*, %"class.std::deque"** %27, align 8
  %29 = bitcast %"class.std::deque"* %28 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %29)
  %30 = load i32, i32* @x.387
  %31 = load i32, i32* @y.388
  %32 = sub i32 0, 1
  %33 = add i32 %30, %32
  %34 = sub i32 %30, 1
  %35 = mul i32 %30, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %31, 10
  %39 = and i1 %37, %38
  %40 = xor i1 %37, %38
  %41 = or i1 %39, %40
  %42 = or i1 %37, %38
  %43 = select i1 %41, i32 1179823054, i32 1326856176
  store i32 %43, i32* %14
  br label %49

; <label>:44:                                     ; preds = %15
  ret void

; <label>:45:                                     ; preds = %15
  %46 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %46, align 8
  %47 = load %"class.std::deque"*, %"class.std::deque"** %46, align 8
  %48 = bitcast %"class.std::deque"* %47 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"* %48)
  store i32 -417732210, i32* %14
  br label %49

; <label>:49:                                     ; preds = %45, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEEC2EOS2_(%"class.std::queue"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  call void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"* %6, %"class.std::deque"* dereferenceable(80) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"*) unnamed_addr #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.391
  %3 = load i32, i32* @y.392
  %4 = add i32 %2, -887381967
  %5 = sub i32 %4, 1
  %6 = sub i32 %5, -887381967
  %7 = sub i32 %2, 1
  %8 = mul i32 %2, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %3, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %91

; <label>:28:                                     ; preds = %1, %91
  %29 = alloca %"class.std::deque"*, align 8
  %30 = alloca %"struct.std::_Deque_iterator", align 8
  %31 = alloca %"struct.std::_Deque_iterator", align 8
  %32 = alloca i8*
  %33 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %29, align 8
  %34 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %30, %"class.std::deque"* %34) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %31, %"class.std::deque"* %34) #3
  %35 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  %36 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %35) #3
  %37 = load i32, i32* @x.391
  %38 = load i32, i32* @y.392
  %39 = sub i32 %37, 1672660244
  %40 = sub i32 %39, 1
  %41 = add i32 %40, 1672660244
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  br i1 %49, label %51, label %91

; <label>:51:                                     ; preds = %28
  invoke void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"* %34, %"struct.std::_Deque_iterator"* %30, %"struct.std::_Deque_iterator"* %31, %"class.std::allocator.5"* dereferenceable(1) %36)
          to label %52 unwind label %84

; <label>:52:                                     ; preds = %51
  %53 = load i32, i32* @x.391
  %54 = load i32, i32* @y.392
  %55 = add i32 %53, -838029571
  %56 = sub i32 %55, 1
  %57 = sub i32 %56, -838029571
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  br i1 %65, label %67, label %100

; <label>:67:                                     ; preds = %52, %100
  %68 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %68) #3
  %69 = load i32, i32* @x.391
  %70 = load i32, i32* @y.392
  %71 = add i32 %69, -1813271031
  %72 = sub i32 %71, 1
  %73 = sub i32 %72, -1813271031
  %74 = sub i32 %69, 1
  %75 = mul i32 %69, %73
  %76 = urem i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = icmp slt i32 %70, 10
  %79 = and i1 %77, %78
  %80 = xor i1 %77, %78
  %81 = or i1 %79, %80
  %82 = or i1 %77, %78
  br i1 %81, label %83, label %100

; <label>:83:                                     ; preds = %67
  ret void

; <label>:84:                                     ; preds = %51
  %85 = landingpad { i8*, i32 }
          catch i8* null
  %86 = extractvalue { i8*, i32 } %85, 0
  store i8* %86, i8** %32, align 8
  %87 = extractvalue { i8*, i32 } %85, 1
  store i32 %87, i32* %33, align 4
  %88 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %88) #3
  br label %89

; <label>:89:                                     ; preds = %84
  %90 = load i8*, i8** %32, align 8
  call void @__clang_call_terminate(i8* %90) #8
  unreachable

; <label>:91:                                     ; preds = %28, %1
  %92 = alloca %"class.std::deque"*, align 8
  %93 = alloca %"struct.std::_Deque_iterator", align 8
  %94 = alloca %"struct.std::_Deque_iterator", align 8
  %95 = alloca i8*
  %96 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %92, align 8
  %97 = load %"class.std::deque"*, %"class.std::deque"** %92, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %93, %"class.std::deque"* %97) #3
  call void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* sret %94, %"class.std::deque"* %97) #3
  %98 = bitcast %"class.std::deque"* %97 to %"class.std::_Deque_base"*
  %99 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %98) #3
  br label %28

; <label>:100:                                    ; preds = %67, %52
  %101 = bitcast %"class.std::deque"* %34 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"* %101) #3
  br label %67
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRiEEEvDpOT_(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca %"class.std::queue"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::queue"*, %"class.std::queue"** %3, align 8
  %6 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %5, i32 0, i32 0
  %7 = load i32*, i32** %4, align 8
  %8 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %7) #3
  call void @_ZNSt5dequeIiSaIiEE12emplace_backIJRiEEEvDpOT_(%"class.std::deque"* %6, i32* dereferenceable(4) %8)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5queueIiSt5dequeIiSaIiEEE5emptyEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.395
  %6 = load i32, i32* @y.396
  %7 = sub i32 %5, 1199474789
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1199474789
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 1631152328, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %78
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 1631152328, label %19
    i32 -1401952947, label %39
    i32 1807722164, label %71
    i32 -946308902, label %73
  ]

; <label>:18:                                     ; preds = %16
  br label %78

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1401952947, i32 -946308902
  store i32 %38, i32* %15
  br label %78

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %40, align 8
  %41 = load %"class.std::queue"*, %"class.std::queue"** %40, align 8
  %42 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %41, i32 0, i32 0
  %43 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %42) #3
  store i1 %43, i1* %2
  %44 = load i32, i32* @x.395
  %45 = load i32, i32* @y.396
  %46 = sub i32 %44, -1746361495
  %47 = sub i32 %46, 1
  %48 = add i32 %47, -1746361495
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 1807722164, i32 -946308902
  store i32 %70, i32* %15
  br label %78

; <label>:71:                                     ; preds = %16
  %72 = load volatile i1, i1* %2
  ret i1 %72

; <label>:73:                                     ; preds = %16
  %74 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %74, align 8
  %75 = load %"class.std::queue"*, %"class.std::queue"** %74, align 8
  %76 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %75, i32 0, i32 0
  %77 = call zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"* %76) #3
  store i32 -1401952947, i32* %15
  br label %78

; <label>:78:                                     ; preds = %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5queueIiSt5dequeIiSaIiEEE5frontEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.397
  %6 = load i32, i32* @y.398
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -305300719, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %53
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -305300719, label %18
    i32 1299505482, label %26
    i32 1377498364, label %46
    i32 1719257249, label %48
  ]

; <label>:17:                                     ; preds = %15
  br label %53

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1299505482, i32 1719257249
  store i32 %25, i32* %14
  br label %53

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %27, align 8
  %28 = load %"class.std::queue"*, %"class.std::queue"** %27, align 8
  %29 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %28, i32 0, i32 0
  %30 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %29) #3
  store i32* %30, i32** %2
  %31 = load i32, i32* @x.397
  %32 = load i32, i32* @y.398
  %33 = add i32 %31, -113780596
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, -113780596
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 1377498364, i32 1719257249
  store i32 %45, i32* %14
  br label %53

; <label>:46:                                     ; preds = %15
  %47 = load volatile i32*, i32** %2
  ret i32* %47

; <label>:48:                                     ; preds = %15
  %49 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %49, align 8
  %50 = load %"class.std::queue"*, %"class.std::queue"** %49, align 8
  %51 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %50, i32 0, i32 0
  %52 = call dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"* %51) #3
  store i32 1299505482, i32* %14
  br label %53

; <label>:53:                                     ; preds = %48, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE3popEv(%"class.std::queue"*) #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.399
  %5 = load i32, i32* @y.400
  %6 = add i32 %4, -982580428
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, -982580428
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -570798673, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %62
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -570798673, label %18
    i32 495074625, label %38
    i32 1656081976, label %57
    i32 1674863539, label %58
  ]

; <label>:17:                                     ; preds = %15
  br label %62

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 495074625, i32 1674863539
  store i32 %37, i32* %14
  br label %62

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %39, align 8
  %40 = load %"class.std::queue"*, %"class.std::queue"** %39, align 8
  %41 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %40, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %41) #3
  %42 = load i32, i32* @x.399
  %43 = load i32, i32* @y.400
  %44 = sub i32 %42, 1586831710
  %45 = sub i32 %44, 1
  %46 = add i32 %45, 1586831710
  %47 = sub i32 %42, 1
  %48 = mul i32 %42, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %43, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 1656081976, i32 1674863539
  store i32 %56, i32* %14
  br label %62

; <label>:57:                                     ; preds = %15
  ret void

; <label>:58:                                     ; preds = %15
  %59 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %59, align 8
  %60 = load %"class.std::queue"*, %"class.std::queue"** %59, align 8
  %61 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %60, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"* %61) #3
  store i32 495074625, i32* %14
  br label %62

; <label>:62:                                     ; preds = %58, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE5beginEv(%"class.std::vector.2"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  %4 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %5 = bitcast %"class.std::vector.2"* %4 to %"struct.std::_Vector_base.8"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.network<int>::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  ret %"struct.network<int>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EE3endEv(%"class.std::vector.2"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator", align 8
  %3 = alloca %"class.std::vector.2"*, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  %4 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %5 = bitcast %"class.std::vector.2"* %4 to %"struct.std::_Vector_base.8"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"* %2, %"struct.network<int>::edge"** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %2, i32 0, i32 0
  %9 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  ret %"struct.network<int>::edge"* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZN9__gnu_cxxneIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEEbRKNS_17__normal_iteratorIT_T0_EESD_(%"class.__gnu_cxx::__normal_iterator"* dereferenceable(8), %"class.__gnu_cxx::__normal_iterator"* dereferenceable(8)) #5 comdat {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %1, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = call dereferenceable(8) %"struct.network<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %5) #3
  %7 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %6, align 8
  %8 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %4, align 8
  %9 = call dereferenceable(8) %"struct.network<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"* %8) #3
  %10 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %9, align 8
  %11 = icmp ne %"struct.network<int>::edge"* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.network<int>::edge"* @_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEdeEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  %5 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %4, align 8
  ret %"struct.network<int>::edge"* %5
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEE7emplaceIJRKiEEEvDpOT_(%"class.std::queue"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.409
  %6 = load i32, i32* @y.410
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1778209998, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %67
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1778209998, label %18
    i32 -1158466669, label %26
    i32 -608984053, label %59
    i32 858374069, label %60
  ]

; <label>:17:                                     ; preds = %15
  br label %67

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1158466669, i32 858374069
  store i32 %25, i32* %14
  br label %67

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::queue"*, align 8
  %28 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %27, align 8
  store i32* %1, i32** %28, align 8
  %29 = load %"class.std::queue"*, %"class.std::queue"** %27, align 8
  %30 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %29, i32 0, i32 0
  %31 = load i32*, i32** %28, align 8
  %32 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %31) #3
  call void @_ZNSt5dequeIiSaIiEE12emplace_backIJRKiEEEvDpOT_(%"class.std::deque"* %30, i32* dereferenceable(4) %32)
  %33 = load i32, i32* @x.409
  %34 = load i32, i32* @y.410
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -608984053, i32 858374069
  store i32 %58, i32* %14
  br label %67

; <label>:59:                                     ; preds = %15
  ret void

; <label>:60:                                     ; preds = %15
  %61 = alloca %"class.std::queue"*, align 8
  %62 = alloca i32*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %61, align 8
  store i32* %1, i32** %62, align 8
  %63 = load %"class.std::queue"*, %"class.std::queue"** %61, align 8
  %64 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %63, i32 0, i32 0
  %65 = load i32*, i32** %62, align 8
  %66 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %65) #3
  call void @_ZNSt5dequeIiSaIiEE12emplace_backIJRKiEEEvDpOT_(%"class.std::deque"* %64, i32* dereferenceable(4) %66)
  store i32 -1158466669, i32* %14
  br label %67

; <label>:67:                                     ; preds = %60, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"class.__gnu_cxx::__normal_iterator"* @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEppEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.411
  %6 = load i32, i32* @y.412
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 572863239, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %68
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 572863239, label %18
    i32 -994210485, label %26
    i32 1651595999, label %60
    i32 500059564, label %62
  ]

; <label>:17:                                     ; preds = %15
  br label %68

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -994210485, i32 500059564
  store i32 %25, i32* %14
  br label %68

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  %28 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %27, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %28, %"class.__gnu_cxx::__normal_iterator"** %2
  %29 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  %30 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %29, i32 0, i32 0
  %31 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %30, align 8
  %32 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %31, i32 1
  store %"struct.network<int>::edge"* %32, %"struct.network<int>::edge"** %30, align 8
  %33 = load i32, i32* @x.411
  %34 = load i32, i32* @y.412
  %35 = add i32 %33, -55456193
  %36 = sub i32 %35, 1
  %37 = sub i32 %36, -55456193
  %38 = sub i32 %33, 1
  %39 = mul i32 %33, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %34, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 false, true
  %46 = and i1 %43, false
  %47 = and i1 %41, %45
  %48 = and i1 %44, false
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 false, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 1651595999, i32 500059564
  store i32 %59, i32* %14
  br label %68

; <label>:60:                                     ; preds = %15
  %61 = load volatile %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2
  ret %"class.__gnu_cxx::__normal_iterator"* %61

; <label>:62:                                     ; preds = %15
  %63 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %64 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %63, align 8
  %65 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %64, i32 0, i32 0
  %66 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %65, align 8
  %67 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %66, i32 1
  store %"struct.network<int>::edge"* %67, %"struct.network<int>::edge"** %65, align 8
  store i32 -994210485, i32* %14
  br label %68

; <label>:68:                                     ; preds = %62, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5queueIiSt5dequeIiSaIiEEED2Ev(%"class.std::queue"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::queue"*, align 8
  store %"class.std::queue"* %0, %"class.std::queue"** %2, align 8
  %3 = load %"class.std::queue"*, %"class.std::queue"** %2, align 8
  %4 = getelementptr inbounds %"class.std::queue", %"class.std::queue"* %3, i32 0, i32 0
  call void @_ZNSt5dequeIiSaIiEED2Ev(%"class.std::deque"* %4) #3
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2Ev(%"class.std::_Deque_base"*) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = load i32, i32* @x.415
  %3 = load i32, i32* @y.416
  %4 = sub i32 0, 1
  %5 = add i32 %2, %4
  %6 = sub i32 %2, 1
  %7 = mul i32 %2, %5
  %8 = urem i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = icmp slt i32 %3, 10
  %11 = and i1 %9, %10
  %12 = xor i1 %9, %10
  %13 = or i1 %11, %12
  %14 = or i1 %9, %10
  br i1 %13, label %15, label %45

; <label>:15:                                     ; preds = %1, %45
  %16 = alloca %"class.std::_Deque_base"*, align 8
  %17 = alloca i8*
  %18 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %16, align 8
  %19 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %16, align 8
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20)
  %21 = load i32, i32* @x.415
  %22 = load i32, i32* @y.416
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  br i1 %32, label %34, label %45

; <label>:34:                                     ; preds = %15
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %19, i64 0)
          to label %35 unwind label %36

; <label>:35:                                     ; preds = %34
  ret void

; <label>:36:                                     ; preds = %34
  %37 = landingpad { i8*, i32 }
          cleanup
  %38 = extractvalue { i8*, i32 } %37, 0
  store i8* %38, i8** %17, align 8
  %39 = extractvalue { i8*, i32 } %37, 1
  store i32 %39, i32* %18, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20) #3
  br label %40

; <label>:40:                                     ; preds = %36
  %41 = load i8*, i8** %17, align 8
  %42 = load i32, i32* %18, align 4
  %43 = insertvalue { i8*, i32 } undef, i8* %41, 0
  %44 = insertvalue { i8*, i32 } %43, i32 %42, 1
  resume { i8*, i32 } %44

; <label>:45:                                     ; preds = %15, %1
  %46 = alloca %"class.std::_Deque_base"*, align 8
  %47 = alloca i8*
  %48 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %46, align 8
  %49 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %46, align 8
  %50 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %49, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %50)
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.417
  %5 = load i32, i32* @y.418
  %6 = sub i32 %4, 1251613586
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 1251613586
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 1028626203, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %69
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1028626203, label %18
    i32 1726021364, label %26
    i32 -1770931039, label %60
    i32 2102633639, label %61
  ]

; <label>:17:                                     ; preds = %15
  br label %69

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 1726021364, i32 2102633639
  store i32 %25, i32* %14
  br label %69

; <label>:26:                                     ; preds = %15
  %27 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %28 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %27, align 8
  %29 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28 to %"class.std::allocator.5"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.5"* %29) #3
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 0
  store i32** null, i32*** %30, align 8
  %31 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 1
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %32) #3
  %33 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %33) #3
  %34 = load i32, i32* @x.417
  %35 = load i32, i32* @y.418
  %36 = sub i32 0, 1
  %37 = add i32 %34, %36
  %38 = sub i32 %34, 1
  %39 = mul i32 %34, %37
  %40 = urem i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = icmp slt i32 %35, 10
  %43 = xor i1 %41, true
  %44 = xor i1 %42, true
  %45 = xor i1 true, true
  %46 = and i1 %43, true
  %47 = and i1 %41, %45
  %48 = and i1 %44, true
  %49 = and i1 %42, %45
  %50 = or i1 %46, %47
  %51 = or i1 %48, %49
  %52 = xor i1 %50, %51
  %53 = or i1 %43, %44
  %54 = xor i1 %53, true
  %55 = or i1 true, %45
  %56 = and i1 %54, %55
  %57 = or i1 %52, %56
  %58 = or i1 %41, %42
  %59 = select i1 %57, i32 -1770931039, i32 2102633639
  store i32 %59, i32* %14
  br label %69

; <label>:60:                                     ; preds = %15
  ret void

; <label>:61:                                     ; preds = %15
  %62 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %62, align 8
  %63 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %62, align 8
  %64 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63 to %"class.std::allocator.5"*
  call void @_ZNSaIiEC2Ev(%"class.std::allocator.5"* %64) #3
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 0
  store i32** null, i32*** %65, align 8
  %66 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 1
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %67) #3
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %68) #3
  store i32 1726021364, i32* %14
  br label %69

; <label>:69:                                     ; preds = %61, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i32**, align 8
  %10 = alloca i8*
  %11 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i64 %1, i64* %4, align 8
  %12 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %13 = load i64, i64* %4, align 8
  %14 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %15 = udiv i64 %13, %14
  %16 = sub i64 0, %15
  %17 = sub i64 0, 1
  %18 = add i64 %16, %17
  %19 = sub i64 0, %18
  %20 = add i64 %15, 1
  store i64 %19, i64* %5, align 8
  store i64 8, i64* %6, align 8
  %21 = load i64, i64* %5, align 8
  %22 = sub i64 0, 2
  %23 = sub i64 %21, %22
  %24 = add i64 %21, 2
  store i64 %23, i64* %7, align 8
  %25 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %6, i64* dereferenceable(8) %7)
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %29, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %12, i64 %31)
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33, i32 0, i32 0
  store i32** %32, i32*** %34, align 8
  %35 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %35, i32 0, i32 0
  %37 = load i32**, i32*** %36, align 8
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = load i64, i64* %5, align 8
  %42 = sub i64 %40, -5395838655114941747
  %43 = sub i64 %42, %41
  %44 = add i64 %43, -5395838655114941747
  %45 = sub i64 %40, %41
  %46 = udiv i64 %44, 2
  %47 = getelementptr inbounds i32*, i32** %37, i64 %46
  store i32** %47, i32*** %8, align 8
  %48 = load i32**, i32*** %8, align 8
  %49 = load i64, i64* %5, align 8
  %50 = getelementptr inbounds i32*, i32** %48, i64 %49
  store i32** %50, i32*** %9, align 8
  %51 = load i32**, i32*** %8, align 8
  %52 = load i32**, i32*** %9, align 8
  invoke void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"* %12, i32** %51, i32** %52)
          to label %53 unwind label %54

; <label>:53:                                     ; preds = %2
  br label %130

; <label>:54:                                     ; preds = %2
  %55 = landingpad { i8*, i32 }
          catch i8* null
  %56 = extractvalue { i8*, i32 } %55, 0
  store i8* %56, i8** %10, align 8
  %57 = extractvalue { i8*, i32 } %55, 1
  store i32 %57, i32* %11, align 4
  br label %58

; <label>:58:                                     ; preds = %54
  %59 = load i8*, i8** %10, align 8
  %60 = call i8* @__cxa_begin_catch(i8* %59) #3
  %61 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %62 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %61, i32 0, i32 0
  %63 = load i32**, i32*** %62, align 8
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %12, i32** %63, i64 %66) #3
  %67 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %68 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %67, i32 0, i32 0
  store i32** null, i32*** %68, align 8
  %69 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %70 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %69, i32 0, i32 1
  store i64 0, i64* %70, align 8
  invoke void @__cxa_rethrow() #12
          to label %205 unwind label %71

; <label>:71:                                     ; preds = %58
  %72 = load i32, i32* @x.419
  %73 = load i32, i32* @y.420
  %74 = add i32 %72, 2085404472
  %75 = sub i32 %74, 1
  %76 = sub i32 %75, 2085404472
  %77 = sub i32 %72, 1
  %78 = mul i32 %72, %76
  %79 = urem i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = icmp slt i32 %73, 10
  %82 = xor i1 %80, true
  %83 = xor i1 %81, true
  %84 = xor i1 true, true
  %85 = and i1 %82, true
  %86 = and i1 %80, %84
  %87 = and i1 %83, true
  %88 = and i1 %81, %84
  %89 = or i1 %85, %86
  %90 = or i1 %87, %88
  %91 = xor i1 %89, %90
  %92 = or i1 %82, %83
  %93 = xor i1 %92, true
  %94 = or i1 true, %84
  %95 = and i1 %93, %94
  %96 = or i1 %91, %95
  %97 = or i1 %80, %81
  br i1 %96, label %98, label %206

; <label>:98:                                     ; preds = %71, %206
  %99 = landingpad { i8*, i32 }
          cleanup
  %100 = extractvalue { i8*, i32 } %99, 0
  store i8* %100, i8** %10, align 8
  %101 = extractvalue { i8*, i32 } %99, 1
  store i32 %101, i32* %11, align 4
  %102 = load i32, i32* @x.419
  %103 = load i32, i32* @y.420
  %104 = sub i32 %102, -1230014352
  %105 = sub i32 %104, 1
  %106 = add i32 %105, -1230014352
  %107 = sub i32 %102, 1
  %108 = mul i32 %102, %106
  %109 = urem i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = icmp slt i32 %103, 10
  %112 = xor i1 %110, true
  %113 = xor i1 %111, true
  %114 = xor i1 false, true
  %115 = and i1 %112, false
  %116 = and i1 %110, %114
  %117 = and i1 %113, false
  %118 = and i1 %111, %114
  %119 = or i1 %115, %116
  %120 = or i1 %117, %118
  %121 = xor i1 %119, %120
  %122 = or i1 %112, %113
  %123 = xor i1 %122, true
  %124 = or i1 false, %114
  %125 = and i1 %123, %124
  %126 = or i1 %121, %125
  %127 = or i1 %110, %111
  br i1 %126, label %128, label %206

; <label>:128:                                    ; preds = %98
  invoke void @__cxa_end_catch()
          to label %129 unwind label %202

; <label>:129:                                    ; preds = %128
  br label %156

; <label>:130:                                    ; preds = %53
  %131 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %132 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %131, i32 0, i32 2
  %133 = load i32**, i32*** %8, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %132, i32** %133) #3
  %134 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %134, i32 0, i32 3
  %136 = load i32**, i32*** %9, align 8
  %137 = getelementptr inbounds i32*, i32** %136, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %135, i32** %137) #3
  %138 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %139 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %138, i32 0, i32 2
  %140 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %139, i32 0, i32 1
  %141 = load i32*, i32** %140, align 8
  %142 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %143 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %142, i32 0, i32 2
  %144 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %143, i32 0, i32 0
  store i32* %141, i32** %144, align 8
  %145 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %146 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %145, i32 0, i32 3
  %147 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %146, i32 0, i32 1
  %148 = load i32*, i32** %147, align 8
  %149 = load i64, i64* %4, align 8
  %150 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %151 = urem i64 %149, %150
  %152 = getelementptr inbounds i32, i32* %148, i64 %151
  %153 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %12, i32 0, i32 0
  %154 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %153, i32 0, i32 3
  %155 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %154, i32 0, i32 0
  store i32* %152, i32** %155, align 8
  ret void

; <label>:156:                                    ; preds = %129
  %157 = load i32, i32* @x.419
  %158 = load i32, i32* @y.420
  %159 = sub i32 %157, -73331268
  %160 = sub i32 %159, 1
  %161 = add i32 %160, -73331268
  %162 = sub i32 %157, 1
  %163 = mul i32 %157, %161
  %164 = urem i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = icmp slt i32 %158, 10
  %167 = and i1 %165, %166
  %168 = xor i1 %165, %166
  %169 = or i1 %167, %168
  %170 = or i1 %165, %166
  br i1 %169, label %171, label %210

; <label>:171:                                    ; preds = %156, %210
  %172 = load i8*, i8** %10, align 8
  %173 = load i32, i32* %11, align 4
  %174 = insertvalue { i8*, i32 } undef, i8* %172, 0
  %175 = insertvalue { i8*, i32 } %174, i32 %173, 1
  %176 = load i32, i32* @x.419
  %177 = load i32, i32* @y.420
  %178 = sub i32 0, 1
  %179 = add i32 %176, %178
  %180 = sub i32 %176, 1
  %181 = mul i32 %176, %179
  %182 = urem i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = icmp slt i32 %177, 10
  %185 = xor i1 %183, true
  %186 = xor i1 %184, true
  %187 = xor i1 false, true
  %188 = and i1 %185, false
  %189 = and i1 %183, %187
  %190 = and i1 %186, false
  %191 = and i1 %184, %187
  %192 = or i1 %188, %189
  %193 = or i1 %190, %191
  %194 = xor i1 %192, %193
  %195 = or i1 %185, %186
  %196 = xor i1 %195, true
  %197 = or i1 false, %187
  %198 = and i1 %196, %197
  %199 = or i1 %194, %198
  %200 = or i1 %183, %184
  br i1 %199, label %201, label %210

; <label>:201:                                    ; preds = %171
  resume { i8*, i32 } %175

; <label>:202:                                    ; preds = %128
  %203 = landingpad { i8*, i32 }
          catch i8* null
  %204 = extractvalue { i8*, i32 } %203, 0
  call void @__clang_call_terminate(i8* %204) #8
  unreachable

; <label>:205:                                    ; preds = %58
  unreachable

; <label>:206:                                    ; preds = %98, %71
  %207 = landingpad { i8*, i32 }
          cleanup
  %208 = extractvalue { i8*, i32 } %207, 0
  store i8* %208, i8** %10, align 8
  %209 = extractvalue { i8*, i32 } %207, 1
  store i32 %209, i32* %11, align 4
  br label %98

; <label>:210:                                    ; preds = %171, %156
  %211 = load i8*, i8** %10, align 8
  %212 = load i32, i32* %11, align 4
  %213 = insertvalue { i8*, i32 } undef, i8* %211, 0
  %214 = insertvalue { i8*, i32 } %213, i32 %212, 1
  br label %171
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %3 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %2, align 8
  %4 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %3 to %"class.std::allocator.5"*
  call void @_ZNSaIiED2Ev(%"class.std::allocator.5"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.423
  %5 = load i32, i32* @y.424
  %6 = add i32 %4, 1644005392
  %7 = sub i32 %6, 1
  %8 = sub i32 %7, 1644005392
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %3
  %13 = icmp slt i32 %5, 10
  store i1 %13, i1* %2
  %14 = alloca i32
  store i32 -2010098161, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %80
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -2010098161, label %18
    i32 1207298736, label %38
    i32 1582085895, label %72
    i32 -840321254, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %80

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %3
  %20 = load volatile i1, i1* %2
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1207298736, i32 -840321254
  store i32 %37, i32* %14
  br label %80

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %39, align 8
  %40 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 0
  store i32* null, i32** %41, align 8
  %42 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 1
  store i32* null, i32** %42, align 8
  %43 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 2
  store i32* null, i32** %43, align 8
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %40, i32 0, i32 3
  store i32** null, i32*** %44, align 8
  %45 = load i32, i32* @x.423
  %46 = load i32, i32* @y.424
  %47 = sub i32 %45, -1272036555
  %48 = sub i32 %47, 1
  %49 = add i32 %48, -1272036555
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 1582085895, i32 -840321254
  store i32 %71, i32* %14
  br label %80

; <label>:72:                                     ; preds = %15
  ret void

; <label>:73:                                     ; preds = %15
  %74 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %74, align 8
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 0
  store i32* null, i32** %76, align 8
  %77 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 1
  store i32* null, i32** %77, align 8
  %78 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 2
  store i32* null, i32** %78, align 8
  %79 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 3
  store i32** null, i32*** %79, align 8
  store i32 1207298736, i32* %14
  br label %80

; <label>:80:                                     ; preds = %73, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZSt16__deque_buf_sizem(i64) #5 comdat {
  %2 = alloca i64
  %3 = alloca i64
  %4 = alloca i64, align 8
  store i64 %0, i64* %4, align 8
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3
  %6 = alloca i32
  store i32 -1445946223, i32* %6
  %7 = alloca i64
  br label %8

; <label>:8:                                      ; preds = %1, %66
  %9 = load i32, i32* %6
  switch i32 %9, label %10 [
    i32 -1445946223, label %11
    i32 -563621476, label %15
    i32 432990171, label %18
    i32 285398053, label %19
    i32 -359357701, label %35
    i32 133953122, label %63
    i32 -144703774, label %65
  ]

; <label>:10:                                     ; preds = %8
  br label %66

; <label>:11:                                     ; preds = %8
  %12 = load volatile i64, i64* %3
  %13 = icmp ult i64 %12, 512
  %14 = select i1 %13, i32 -563621476, i32 432990171
  store i32 %14, i32* %6
  br label %66

; <label>:15:                                     ; preds = %8
  %16 = load i64, i64* %4, align 8
  %17 = udiv i64 512, %16
  store i32 285398053, i32* %6
  store i64 %17, i64* %7
  br label %66

; <label>:18:                                     ; preds = %8
  store i32 285398053, i32* %6
  store i64 1, i64* %7
  br label %66

; <label>:19:                                     ; preds = %8
  %20 = load i64, i64* %7
  store i64 %20, i64* %2
  %21 = load i32, i32* @x.425
  %22 = load i32, i32* @y.426
  %23 = sub i32 0, 1
  %24 = add i32 %21, %23
  %25 = sub i32 %21, 1
  %26 = mul i32 %21, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %22, 10
  %30 = and i1 %28, %29
  %31 = xor i1 %28, %29
  %32 = or i1 %30, %31
  %33 = or i1 %28, %29
  %34 = select i1 %32, i32 -359357701, i32 -144703774
  store i32 %34, i32* %6
  br label %66

; <label>:35:                                     ; preds = %8
  %36 = load i32, i32* @x.425
  %37 = load i32, i32* @y.426
  %38 = sub i32 %36, 269152994
  %39 = sub i32 %38, 1
  %40 = add i32 %39, 269152994
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 133953122, i32 -144703774
  store i32 %62, i32* %6
  br label %66

; <label>:63:                                     ; preds = %8
  %64 = load volatile i64, i64* %2
  ret i64 %64

; <label>:65:                                     ; preds = %8
  store i32 -359357701, i32* %6
  br label %66

; <label>:66:                                     ; preds = %65, %35, %19, %18, %15, %11, %10
  br label %8
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"*, i64) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.427
  %4 = load i32, i32* @y.428
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = and i1 %10, %11
  %13 = xor i1 %10, %11
  %14 = or i1 %12, %13
  %15 = or i1 %10, %11
  br i1 %14, label %16, label %50

; <label>:16:                                     ; preds = %2, %50
  %17 = alloca %"class.std::_Deque_base"*, align 8
  %18 = alloca i64, align 8
  %19 = alloca %"class.std::allocator.14", align 1
  %20 = alloca i8*
  %21 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %17, align 8
  store i64 %1, i64* %18, align 8
  %22 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %17, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %19, %"class.std::_Deque_base"* %22) #3
  %23 = load i64, i64* %18, align 8
  %24 = load i32, i32* @x.427
  %25 = load i32, i32* @y.428
  %26 = add i32 %24, -636716547
  %27 = sub i32 %26, 1
  %28 = sub i32 %27, -636716547
  %29 = sub i32 %24, 1
  %30 = mul i32 %24, %28
  %31 = urem i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = icmp slt i32 %25, 10
  %34 = and i1 %32, %33
  %35 = xor i1 %32, %33
  %36 = or i1 %34, %35
  %37 = or i1 %32, %33
  br i1 %36, label %38, label %50

; <label>:38:                                     ; preds = %16
  %39 = invoke i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1) %19, i64 %23)
          to label %40 unwind label %41

; <label>:40:                                     ; preds = %38
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %19) #3
  ret i32** %39

; <label>:41:                                     ; preds = %38
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %20, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %21, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %19) #3
  br label %45

; <label>:45:                                     ; preds = %41
  %46 = load i8*, i8** %20, align 8
  %47 = load i32, i32* %21, align 4
  %48 = insertvalue { i8*, i32 } undef, i8* %46, 0
  %49 = insertvalue { i8*, i32 } %48, i32 %47, 1
  resume { i8*, i32 } %49

; <label>:50:                                     ; preds = %16, %2
  %51 = alloca %"class.std::_Deque_base"*, align 8
  %52 = alloca i64, align 8
  %53 = alloca %"class.std::allocator.14", align 1
  %54 = alloca i8*
  %55 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %51, align 8
  store i64 %1, i64* %52, align 8
  %56 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %51, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %53, %"class.std::_Deque_base"* %56) #3
  %57 = load i64, i64* %52, align 8
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE15_M_create_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = load i32, i32* @x.429
  %5 = load i32, i32* @y.430
  %6 = sub i32 %4, 897962398
  %7 = sub i32 %6, 1
  %8 = add i32 %7, 897962398
  %9 = sub i32 %4, 1
  %10 = mul i32 %4, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = icmp slt i32 %5, 10
  %14 = and i1 %12, %13
  %15 = xor i1 %12, %13
  %16 = or i1 %14, %15
  %17 = or i1 %12, %13
  br i1 %16, label %18, label %225

; <label>:18:                                     ; preds = %3, %225
  %19 = alloca %"class.std::_Deque_base"*, align 8
  %20 = alloca i32**, align 8
  %21 = alloca i32**, align 8
  %22 = alloca i32**, align 8
  %23 = alloca i8*
  %24 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %19, align 8
  store i32** %1, i32*** %20, align 8
  store i32** %2, i32*** %21, align 8
  %25 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %19, align 8
  %26 = load i32**, i32*** %20, align 8
  store i32** %26, i32*** %22, align 8
  %27 = load i32, i32* @x.429
  %28 = load i32, i32* @y.430
  %29 = sub i32 %27, 1246746169
  %30 = sub i32 %29, 1
  %31 = add i32 %30, 1246746169
  %32 = sub i32 %27, 1
  %33 = mul i32 %27, %31
  %34 = urem i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = icmp slt i32 %28, 10
  %37 = xor i1 %35, true
  %38 = xor i1 %36, true
  %39 = xor i1 true, true
  %40 = and i1 %37, true
  %41 = and i1 %35, %39
  %42 = and i1 %38, true
  %43 = and i1 %36, %39
  %44 = or i1 %40, %41
  %45 = or i1 %42, %43
  %46 = xor i1 %44, %45
  %47 = or i1 %37, %38
  %48 = xor i1 %47, true
  %49 = or i1 true, %39
  %50 = and i1 %48, %49
  %51 = or i1 %46, %50
  %52 = or i1 %35, %36
  br i1 %51, label %53, label %225

; <label>:53:                                     ; preds = %18
  br label %54

; <label>:54:                                     ; preds = %156, %53
  %55 = load i32, i32* @x.429
  %56 = load i32, i32* @y.430
  %57 = add i32 %55, 1205808044
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1205808044
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 false, true
  %68 = and i1 %65, false
  %69 = and i1 %63, %67
  %70 = and i1 %66, false
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 false, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %234

; <label>:81:                                     ; preds = %54, %234
  %82 = load i32**, i32*** %22, align 8
  %83 = load i32**, i32*** %21, align 8
  %84 = icmp ult i32** %82, %83
  %85 = load i32, i32* @x.429
  %86 = load i32, i32* @y.430
  %87 = sub i32 0, 1
  %88 = add i32 %85, %87
  %89 = sub i32 %85, 1
  %90 = mul i32 %85, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %86, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %234

; <label>:98:                                     ; preds = %81
  br i1 %84, label %99, label %168

; <label>:99:                                     ; preds = %98
  %100 = load i32, i32* @x.429
  %101 = load i32, i32* @y.430
  %102 = add i32 %100, 1556429870
  %103 = sub i32 %102, 1
  %104 = sub i32 %103, 1556429870
  %105 = sub i32 %100, 1
  %106 = mul i32 %100, %104
  %107 = urem i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = icmp slt i32 %101, 10
  %110 = xor i1 %108, true
  %111 = xor i1 %109, true
  %112 = xor i1 true, true
  %113 = and i1 %110, true
  %114 = and i1 %108, %112
  %115 = and i1 %111, true
  %116 = and i1 %109, %112
  %117 = or i1 %113, %114
  %118 = or i1 %115, %116
  %119 = xor i1 %117, %118
  %120 = or i1 %110, %111
  %121 = xor i1 %120, true
  %122 = or i1 true, %112
  %123 = and i1 %121, %122
  %124 = or i1 %119, %123
  %125 = or i1 %108, %109
  br i1 %124, label %126, label %238

; <label>:126:                                    ; preds = %99, %238
  %127 = load i32, i32* @x.429
  %128 = load i32, i32* @y.430
  %129 = sub i32 0, 1
  %130 = add i32 %127, %129
  %131 = sub i32 %127, 1
  %132 = mul i32 %127, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %128, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 true, true
  %139 = and i1 %136, true
  %140 = and i1 %134, %138
  %141 = and i1 %137, true
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 true, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  br i1 %150, label %152, label %238

; <label>:152:                                    ; preds = %126
  %153 = invoke i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %25)
          to label %154 unwind label %159

; <label>:154:                                    ; preds = %152
  %155 = load i32**, i32*** %22, align 8
  store i32* %153, i32** %155, align 8
  br label %156

; <label>:156:                                    ; preds = %154
  %157 = load i32**, i32*** %22, align 8
  %158 = getelementptr inbounds i32*, i32** %157, i32 1
  store i32** %158, i32*** %22, align 8
  br label %54

; <label>:159:                                    ; preds = %152
  %160 = landingpad { i8*, i32 }
          catch i8* null
  %161 = extractvalue { i8*, i32 } %160, 0
  store i8* %161, i8** %23, align 8
  %162 = extractvalue { i8*, i32 } %160, 1
  store i32 %162, i32* %24, align 4
  br label %163

; <label>:163:                                    ; preds = %159
  %164 = load i8*, i8** %23, align 8
  %165 = call i8* @__cxa_begin_catch(i8* %164) #3
  %166 = load i32**, i32*** %20, align 8
  %167 = load i32**, i32*** %22, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %25, i32** %166, i32** %167) #3
  invoke void @__cxa_rethrow() #12
          to label %183 unwind label %169

; <label>:168:                                    ; preds = %98
  br label %174

; <label>:169:                                    ; preds = %163
  %170 = landingpad { i8*, i32 }
          cleanup
  %171 = extractvalue { i8*, i32 } %170, 0
  store i8* %171, i8** %23, align 8
  %172 = extractvalue { i8*, i32 } %170, 1
  store i32 %172, i32* %24, align 4
  invoke void @__cxa_end_catch()
          to label %173 unwind label %180

; <label>:173:                                    ; preds = %169
  br label %175

; <label>:174:                                    ; preds = %168
  ret void

; <label>:175:                                    ; preds = %173
  %176 = load i8*, i8** %23, align 8
  %177 = load i32, i32* %24, align 4
  %178 = insertvalue { i8*, i32 } undef, i8* %176, 0
  %179 = insertvalue { i8*, i32 } %178, i32 %177, 1
  resume { i8*, i32 } %179

; <label>:180:                                    ; preds = %169
  %181 = landingpad { i8*, i32 }
          catch i8* null
  %182 = extractvalue { i8*, i32 } %181, 0
  call void @__clang_call_terminate(i8* %182) #8
  unreachable

; <label>:183:                                    ; preds = %163
  %184 = load i32, i32* @x.429
  %185 = load i32, i32* @y.430
  %186 = add i32 %184, 1224434760
  %187 = sub i32 %186, 1
  %188 = sub i32 %187, 1224434760
  %189 = sub i32 %184, 1
  %190 = mul i32 %184, %188
  %191 = urem i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = icmp slt i32 %185, 10
  %194 = and i1 %192, %193
  %195 = xor i1 %192, %193
  %196 = or i1 %194, %195
  %197 = or i1 %192, %193
  br i1 %196, label %198, label %239

; <label>:198:                                    ; preds = %183, %239
  %199 = load i32, i32* @x.429
  %200 = load i32, i32* @y.430
  %201 = sub i32 0, 1
  %202 = add i32 %199, %201
  %203 = sub i32 %199, 1
  %204 = mul i32 %199, %202
  %205 = urem i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = icmp slt i32 %200, 10
  %208 = xor i1 %206, true
  %209 = xor i1 %207, true
  %210 = xor i1 true, true
  %211 = and i1 %208, true
  %212 = and i1 %206, %210
  %213 = and i1 %209, true
  %214 = and i1 %207, %210
  %215 = or i1 %211, %212
  %216 = or i1 %213, %214
  %217 = xor i1 %215, %216
  %218 = or i1 %208, %209
  %219 = xor i1 %218, true
  %220 = or i1 true, %210
  %221 = and i1 %219, %220
  %222 = or i1 %217, %221
  %223 = or i1 %206, %207
  br i1 %222, label %224, label %239

; <label>:224:                                    ; preds = %198
  unreachable

; <label>:225:                                    ; preds = %18, %3
  %226 = alloca %"class.std::_Deque_base"*, align 8
  %227 = alloca i32**, align 8
  %228 = alloca i32**, align 8
  %229 = alloca i32**, align 8
  %230 = alloca i8*
  %231 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %226, align 8
  store i32** %1, i32*** %227, align 8
  store i32** %2, i32*** %228, align 8
  %232 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %226, align 8
  %233 = load i32**, i32*** %227, align 8
  store i32** %233, i32*** %229, align 8
  br label %18

; <label>:234:                                    ; preds = %81, %54
  %235 = load i32**, i32*** %22, align 8
  %236 = load i32**, i32*** %21, align 8
  %237 = icmp ult i32** %235, %236
  br label %81

; <label>:238:                                    ; preds = %126, %99
  br label %126

; <label>:239:                                    ; preds = %198, %183
  br label %198
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"*, i32**, i64) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.std::allocator.14", align 1
  %8 = alloca i8*
  %9 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  call void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* sret %7, %"class.std::_Deque_base"* %10) #3
  %11 = load i32**, i32*** %5, align 8
  %12 = load i64, i64* %6, align 8
  invoke void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.14"* dereferenceable(1) %7, i32** %11, i64 %12)
          to label %13 unwind label %55

; <label>:13:                                     ; preds = %3
  %14 = load i32, i32* @x.431
  %15 = load i32, i32* @y.432
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  br i1 %25, label %27, label %61

; <label>:27:                                     ; preds = %13, %61
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %7) #3
  %28 = load i32, i32* @x.431
  %29 = load i32, i32* @y.432
  %30 = sub i32 %28, 1922465783
  %31 = sub i32 %30, 1
  %32 = add i32 %31, 1922465783
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = xor i1 %36, true
  %39 = xor i1 %37, true
  %40 = xor i1 false, true
  %41 = and i1 %38, false
  %42 = and i1 %36, %40
  %43 = and i1 %39, false
  %44 = and i1 %37, %40
  %45 = or i1 %41, %42
  %46 = or i1 %43, %44
  %47 = xor i1 %45, %46
  %48 = or i1 %38, %39
  %49 = xor i1 %48, true
  %50 = or i1 false, %40
  %51 = and i1 %49, %50
  %52 = or i1 %47, %51
  %53 = or i1 %36, %37
  br i1 %52, label %54, label %61

; <label>:54:                                     ; preds = %27
  ret void

; <label>:55:                                     ; preds = %3
  %56 = landingpad { i8*, i32 }
          catch i8* null
  %57 = extractvalue { i8*, i32 } %56, 0
  store i8* %57, i8** %8, align 8
  %58 = extractvalue { i8*, i32 } %56, 1
  store i32 %58, i32* %9, align 4
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %7) #3
  br label %59

; <label>:59:                                     ; preds = %55
  %60 = load i8*, i8** %8, align 8
  call void @__clang_call_terminate(i8* %60) #8
  unreachable

; <label>:61:                                     ; preds = %27, %13
  call void @_ZNSaIPiED2Ev(%"class.std::allocator.14"* %7) #3
  br label %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"*, i32**) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca i32**, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store i32** %1, i32*** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = load i32**, i32*** %4, align 8
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  store i32** %6, i32*** %7, align 8
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32*, i32** %8, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  store i32* %9, i32** %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %12 = load i32*, i32** %11, align 8
  %13 = call i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #3
  %14 = getelementptr inbounds i32, i32* %12, i64 %13
  %15 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNKSt11_Deque_baseIiSaIiEE20_M_get_map_allocatorEv(%"class.std::allocator.14"* noalias sret, %"class.std::_Deque_base"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.435
  %6 = load i32, i32* @y.436
  %7 = sub i32 %5, 1726990902
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1726990902
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -42351656, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -42351656, label %19
    i32 -1945407869, label %39
    i32 1244781026, label %58
    i32 -1868877487, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1945407869, i32 -1868877487
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  %42 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %41) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.14"* %0, %"class.std::allocator.5"* dereferenceable(1) %42) #3
  %43 = load i32, i32* @x.435
  %44 = load i32, i32* @y.436
  %45 = sub i32 %43, 1573326810
  %46 = sub i32 %45, 1
  %47 = add i32 %46, 1573326810
  %48 = sub i32 %43, 1
  %49 = mul i32 %43, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %44, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 1244781026, i32 -1868877487
  store i32 %57, i32* %15
  br label %63

; <label>:58:                                     ; preds = %16
  ret void

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %60, align 8
  %61 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %60, align 8
  %62 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %61) #3
  call void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.14"* %0, %"class.std::allocator.5"* dereferenceable(1) %62) #3
  store i32 -1945407869, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZNSt16allocator_traitsISaIPiEE8allocateERS1_m(%"class.std::allocator.14"* dereferenceable(1), i64) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.14"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %3, align 8
  %6 = bitcast %"class.std::allocator.14"* %5 to %"class.__gnu_cxx::new_allocator.15"*
  %7 = load i64, i64* %4, align 8
  %8 = call i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"* %6, i64 %7, i8* null)
  ret i32** %8
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiED2Ev(%"class.std::allocator.14"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.std::allocator.14"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %2, align 8
  %3 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %2, align 8
  %4 = bitcast %"class.std::allocator.14"* %3 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.15"* %4) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNKSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIPiEC2IiEERKSaIT_E(%"class.std::allocator.14"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.443
  %6 = load i32, i32* @y.444
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -816326674, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %64
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -816326674, label %18
    i32 -1755404052, label %26
    i32 -1845457037, label %58
    i32 1480356323, label %59
  ]

; <label>:17:                                     ; preds = %15
  br label %64

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -1755404052, i32 1480356323
  store i32 %25, i32* %14
  br label %64

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::allocator.14"*, align 8
  %28 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %27, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %28, align 8
  %29 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %27, align 8
  %30 = bitcast %"class.std::allocator.14"* %29 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %30) #3
  %31 = load i32, i32* @x.443
  %32 = load i32, i32* @y.444
  %33 = add i32 %31, 1586239500
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 1586239500
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = xor i1 %39, true
  %42 = xor i1 %40, true
  %43 = xor i1 false, true
  %44 = and i1 %41, false
  %45 = and i1 %39, %43
  %46 = and i1 %42, false
  %47 = and i1 %40, %43
  %48 = or i1 %44, %45
  %49 = or i1 %46, %47
  %50 = xor i1 %48, %49
  %51 = or i1 %41, %42
  %52 = xor i1 %51, true
  %53 = or i1 false, %43
  %54 = and i1 %52, %53
  %55 = or i1 %50, %54
  %56 = or i1 %39, %40
  %57 = select i1 %55, i32 -1845457037, i32 1480356323
  store i32 %57, i32* %14
  br label %64

; <label>:58:                                     ; preds = %15
  ret void

; <label>:59:                                     ; preds = %15
  %60 = alloca %"class.std::allocator.14"*, align 8
  %61 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %60, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %61, align 8
  %62 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %60, align 8
  %63 = bitcast %"class.std::allocator.14"* %62 to %"class.__gnu_cxx::new_allocator.15"*
  call void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"* %63) #3
  store i32 -1755404052, i32* %14
  br label %64

; <label>:64:                                     ; preds = %59, %26, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiEC2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZN9__gnu_cxx13new_allocatorIPiE8allocateEmPKv(%"class.__gnu_cxx::new_allocator.15"*, i64, i8*) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %7 = alloca i64, align 8
  %8 = alloca i8*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %6, align 8
  store i64 %1, i64* %7, align 8
  store i8* %2, i8** %8, align 8
  %9 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %6, align 8
  %10 = load i64, i64* %7, align 8
  store i64 %10, i64* %5
  %11 = call i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"* %9) #3
  store i64 %11, i64* %4
  %12 = alloca i32
  store i32 -2038417119, i32* %12
  br label %13

; <label>:13:                                     ; preds = %3, %27
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 -2038417119, label %16
    i32 132581148, label %21
    i32 -525050765, label %22
  ]

; <label>:15:                                     ; preds = %13
  br label %27

; <label>:16:                                     ; preds = %13
  %17 = load volatile i64, i64* %5
  %18 = load volatile i64, i64* %4
  %19 = icmp ugt i64 %17, %18
  %20 = select i1 %19, i32 132581148, i32 -525050765
  store i32 %20, i32* %12
  br label %27

; <label>:21:                                     ; preds = %13
  call void @_ZSt17__throw_bad_allocv() #12
  unreachable

; <label>:22:                                     ; preds = %13
  %23 = load i64, i64* %7, align 8
  %24 = mul i64 %23, 8
  %25 = call i8* @_Znwm(i64 %24)
  %26 = bitcast i8* %25 to i32**
  ret i32** %26

; <label>:27:                                     ; preds = %16, %15
  br label %13
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNK9__gnu_cxx13new_allocatorIPiE8max_sizeEv(%"class.__gnu_cxx::new_allocator.15"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  %3 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %2, align 8
  ret i64 2305843009213693951
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiED2Ev(%"class.__gnu_cxx::new_allocator.15"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.451
  %5 = load i32, i32* @y.452
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 -1885305999, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %47
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 -1885305999, label %17
    i32 1012227918, label %25
    i32 -716199164, label %43
    i32 1678180829, label %44
  ]

; <label>:16:                                     ; preds = %14
  br label %47

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = and i1 %18, %19
  %21 = xor i1 %18, %19
  %22 = or i1 %20, %21
  %23 = or i1 %18, %19
  %24 = select i1 %22, i32 1012227918, i32 1678180829
  store i32 %24, i32* %13
  br label %47

; <label>:25:                                     ; preds = %14
  %26 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %26, align 8
  %27 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %26, align 8
  %28 = load i32, i32* @x.451
  %29 = load i32, i32* @y.452
  %30 = add i32 %28, -607180220
  %31 = sub i32 %30, 1
  %32 = sub i32 %31, -607180220
  %33 = sub i32 %28, 1
  %34 = mul i32 %28, %32
  %35 = urem i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = icmp slt i32 %29, 10
  %38 = and i1 %36, %37
  %39 = xor i1 %36, %37
  %40 = or i1 %38, %39
  %41 = or i1 %36, %37
  %42 = select i1 %40, i32 -716199164, i32 1678180829
  store i32 %42, i32* %13
  br label %47

; <label>:43:                                     ; preds = %14
  ret void

; <label>:44:                                     ; preds = %14
  %45 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %45, align 8
  %46 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %45, align 8
  store i32 1012227918, i32* %13
  br label %47

; <label>:47:                                     ; preds = %44, %25, %17, %16
  br label %14
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"*) #0 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  %6 = call i64 @_ZSt16__deque_buf_sizem(i64 4)
  %7 = call i32* @_ZNSt16allocator_traitsISaIiEE8allocateERS0_m(%"class.std::allocator.5"* dereferenceable(1) %5, i64 %6)
  ret i32* %7
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"*, i32**, i32**) #5 comdat align 2 {
  %4 = alloca %"class.std::_Deque_base"*
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  store %"class.std::_Deque_base"* %9, %"class.std::_Deque_base"** %4
  %10 = load i32**, i32*** %6, align 8
  store i32** %10, i32*** %8, align 8
  %11 = alloca i32
  store i32 -2042837366, i32* %11
  br label %12

; <label>:12:                                     ; preds = %3, %28
  %13 = load i32, i32* %11
  switch i32 %13, label %14 [
    i32 -2042837366, label %15
    i32 -1621694718, label %20
    i32 -1033186583, label %24
    i32 -2002365818, label %27
  ]

; <label>:14:                                     ; preds = %12
  br label %28

; <label>:15:                                     ; preds = %12
  %16 = load i32**, i32*** %8, align 8
  %17 = load i32**, i32*** %7, align 8
  %18 = icmp ult i32** %16, %17
  %19 = select i1 %18, i32 -1621694718, i32 -2002365818
  store i32 %19, i32* %11
  br label %28

; <label>:20:                                     ; preds = %12
  %21 = load i32**, i32*** %8, align 8
  %22 = load i32*, i32** %21, align 8
  %23 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %23, i32* %22) #3
  store i32 -1033186583, i32* %11
  br label %28

; <label>:24:                                     ; preds = %12
  %25 = load i32**, i32*** %8, align 8
  %26 = getelementptr inbounds i32*, i32** %25, i32 1
  store i32** %26, i32*** %8, align 8
  store i32 -2042837366, i32* %11
  br label %28

; <label>:27:                                     ; preds = %12
  ret void

; <label>:28:                                     ; preds = %24, %20, %15, %14
  br label %12
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"*, i32*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %6 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %5, i32 0, i32 0
  %7 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %6 to %"class.std::allocator.5"*
  %8 = load i32*, i32** %4, align 8
  %9 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %10 unwind label %54

; <label>:10:                                     ; preds = %2
  invoke void @_ZNSt16allocator_traitsISaIiEE10deallocateERS0_Pim(%"class.std::allocator.5"* dereferenceable(1) %7, i32* %8, i64 %9)
          to label %11 unwind label %54

; <label>:11:                                     ; preds = %10
  %12 = load i32, i32* @x.457
  %13 = load i32, i32* @y.458
  %14 = sub i32 %12, 1904446770
  %15 = sub i32 %14, 1
  %16 = add i32 %15, 1904446770
  %17 = sub i32 %12, 1
  %18 = mul i32 %12, %16
  %19 = urem i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = icmp slt i32 %13, 10
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  br i1 %36, label %38, label %99

; <label>:38:                                     ; preds = %11, %99
  %39 = load i32, i32* @x.457
  %40 = load i32, i32* @y.458
  %41 = add i32 %39, 106141868
  %42 = sub i32 %41, 1
  %43 = sub i32 %42, 106141868
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = and i1 %47, %48
  %50 = xor i1 %47, %48
  %51 = or i1 %49, %50
  %52 = or i1 %47, %48
  br i1 %51, label %53, label %99

; <label>:53:                                     ; preds = %38
  ret void

; <label>:54:                                     ; preds = %10, %2
  %55 = load i32, i32* @x.457
  %56 = load i32, i32* @y.458
  %57 = add i32 %55, 1662640129
  %58 = sub i32 %57, 1
  %59 = sub i32 %58, 1662640129
  %60 = sub i32 %55, 1
  %61 = mul i32 %55, %59
  %62 = urem i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = icmp slt i32 %56, 10
  %65 = xor i1 %63, true
  %66 = xor i1 %64, true
  %67 = xor i1 true, true
  %68 = and i1 %65, true
  %69 = and i1 %63, %67
  %70 = and i1 %66, true
  %71 = and i1 %64, %67
  %72 = or i1 %68, %69
  %73 = or i1 %70, %71
  %74 = xor i1 %72, %73
  %75 = or i1 %65, %66
  %76 = xor i1 %75, true
  %77 = or i1 true, %67
  %78 = and i1 %76, %77
  %79 = or i1 %74, %78
  %80 = or i1 %63, %64
  br i1 %79, label %81, label %100

; <label>:81:                                     ; preds = %54, %100
  %82 = landingpad { i8*, i32 }
          catch i8* null
  %83 = extractvalue { i8*, i32 } %82, 0
  call void @__clang_call_terminate(i8* %83) #8
  %84 = load i32, i32* @x.457
  %85 = load i32, i32* @y.458
  %86 = sub i32 %84, 446294829
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 446294829
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = and i1 %92, %93
  %95 = xor i1 %92, %93
  %96 = or i1 %94, %95
  %97 = or i1 %92, %93
  br i1 %96, label %98, label %100

; <label>:98:                                     ; preds = %81
  unreachable

; <label>:99:                                     ; preds = %38, %11
  br label %38

; <label>:100:                                    ; preds = %81, %54
  %101 = landingpad { i8*, i32 }
          catch i8* null
  %102 = extractvalue { i8*, i32 } %101, 0
  call void @__clang_call_terminate(i8* %102) #8
  br label %81
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIPiEE10deallocateERS1_PS0_m(%"class.std::allocator.14"* dereferenceable(1), i32**, i64) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.14"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.std::allocator.14"* %0, %"class.std::allocator.14"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.std::allocator.14"*, %"class.std::allocator.14"** %4, align 8
  %8 = bitcast %"class.std::allocator.14"* %7 to %"class.__gnu_cxx::new_allocator.15"*
  %9 = load i32**, i32*** %5, align 8
  %10 = load i64, i64* %6, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.15"* %8, i32** %9, i64 %10)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIPiE10deallocateEPS1_m(%"class.__gnu_cxx::new_allocator.15"*, i32**, i64) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.15"*, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i64, align 8
  store %"class.__gnu_cxx::new_allocator.15"* %0, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i64 %2, i64* %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.15"*, %"class.__gnu_cxx::new_allocator.15"** %4, align 8
  %8 = load i32**, i32*** %5, align 8
  %9 = bitcast i32** %8 to i8*
  call void @_ZdlPv(i8* %9) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNSt15_Deque_iteratorIiRiPiE14_S_buffer_sizeEv() #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %1 = invoke i64 @_ZSt16__deque_buf_sizem(i64 4)
          to label %2 unwind label %56

; <label>:2:                                      ; preds = %0
  %3 = load i32, i32* @x.463
  %4 = load i32, i32* @y.464
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 false, true
  %15 = and i1 %12, false
  %16 = and i1 %10, %14
  %17 = and i1 %13, false
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 false, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %59

; <label>:28:                                     ; preds = %2, %59
  %29 = load i32, i32* @x.463
  %30 = load i32, i32* @y.464
  %31 = sub i32 %29, 1055103758
  %32 = sub i32 %31, 1
  %33 = add i32 %32, 1055103758
  %34 = sub i32 %29, 1
  %35 = mul i32 %29, %33
  %36 = urem i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = icmp slt i32 %30, 10
  %39 = xor i1 %37, true
  %40 = xor i1 %38, true
  %41 = xor i1 false, true
  %42 = and i1 %39, false
  %43 = and i1 %37, %41
  %44 = and i1 %40, false
  %45 = and i1 %38, %41
  %46 = or i1 %42, %43
  %47 = or i1 %44, %45
  %48 = xor i1 %46, %47
  %49 = or i1 %39, %40
  %50 = xor i1 %49, true
  %51 = or i1 false, %41
  %52 = and i1 %50, %51
  %53 = or i1 %48, %52
  %54 = or i1 %37, %38
  br i1 %53, label %55, label %59

; <label>:55:                                     ; preds = %28
  ret i64 %1

; <label>:56:                                     ; preds = %0
  %57 = landingpad { i8*, i32 }
          catch i8* null
  %58 = extractvalue { i8*, i32 } %57, 0
  call void @__clang_call_terminate(i8* %58) #8
  unreachable

; <label>:59:                                     ; preds = %28, %2
  br label %28
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  ret %"class.std::deque"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEEC2EOS1_(%"class.std::deque"*, %"class.std::deque"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %4, align 8
  %5 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  %6 = bitcast %"class.std::deque"* %5 to %"class.std::_Deque_base"*
  %7 = load %"class.std::deque"*, %"class.std::deque"** %4, align 8
  %8 = call dereferenceable(80) %"class.std::deque"* @_ZSt4moveIRSt5dequeIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::deque"* dereferenceable(80) %7) #3
  %9 = bitcast %"class.std::deque"* %8 to %"class.std::_Deque_base"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"* %6, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.std::_Deque_base"*, align 8
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"struct.std::integral_constant", align 1
  %6 = alloca %"struct.__gnu_cxx::__allocator_always_compares_equal", align 1
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %3, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %4, align 8
  %7 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = call dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80) %8) #3
  %10 = bitcast %"struct.__gnu_cxx::__allocator_always_compares_equal"* %6 to %"struct.std::integral_constant"*
  call void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"* %7, %"class.std::_Deque_base"* dereferenceable(80) %9)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(80) %"class.std::_Deque_base"* @_ZSt4moveIRSt11_Deque_baseIiSaIiEEEONSt16remove_referenceIT_E4typeEOS5_(%"class.std::_Deque_base"* dereferenceable(80)) #5 comdat {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  ret %"class.std::_Deque_base"* %3
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEEC2EOS1_St17integral_constantIbLb1EE(%"class.std::_Deque_base"*, %"class.std::_Deque_base"* dereferenceable(80)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"struct.std::integral_constant", align 1
  %4 = alloca %"class.std::_Deque_base"*, align 8
  %5 = alloca %"class.std::_Deque_base"*, align 8
  %6 = alloca i8*
  %7 = alloca i32
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %4, align 8
  store %"class.std::_Deque_base"* %1, %"class.std::_Deque_base"** %5, align 8
  %8 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %4, align 8
  %9 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %10 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %11 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %10) #3
  %12 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.5"* dereferenceable(1) %11) #3
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9, %"class.std::allocator.5"* dereferenceable(1) %12) #3
  invoke void @_ZNSt11_Deque_baseIiSaIiEE17_M_initialize_mapEm(%"class.std::_Deque_base"* %8, i64 0)
          to label %13 unwind label %106

; <label>:13:                                     ; preds = %2
  %14 = load i32, i32* @x.473
  %15 = load i32, i32* @y.474
  %16 = sub i32 0, 1
  %17 = add i32 %14, %16
  %18 = sub i32 %14, 1
  %19 = mul i32 %14, %17
  %20 = urem i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = icmp slt i32 %15, 10
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  br i1 %37, label %39, label %157

; <label>:39:                                     ; preds = %13, %157
  %40 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %41 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %40, i32 0, i32 0
  %42 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %41, i32 0, i32 0
  %43 = load i32**, i32*** %42, align 8
  %44 = icmp ne i32** %43, null
  %45 = load i32, i32* @x.473
  %46 = load i32, i32* @y.474
  %47 = add i32 %45, -1156804362
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, -1156804362
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = and i1 %53, %54
  %56 = xor i1 %53, %54
  %57 = or i1 %55, %56
  %58 = or i1 %53, %54
  br i1 %57, label %59, label %157

; <label>:59:                                     ; preds = %39
  br i1 %44, label %60, label %110

; <label>:60:                                     ; preds = %59
  %61 = load i32, i32* @x.473
  %62 = load i32, i32* @y.474
  %63 = sub i32 %61, 1281880916
  %64 = sub i32 %63, 1
  %65 = add i32 %64, 1281880916
  %66 = sub i32 %61, 1
  %67 = mul i32 %61, %65
  %68 = urem i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = icmp slt i32 %62, 10
  %71 = xor i1 %69, true
  %72 = xor i1 %70, true
  %73 = xor i1 true, true
  %74 = and i1 %71, true
  %75 = and i1 %69, %73
  %76 = and i1 %72, true
  %77 = and i1 %70, %73
  %78 = or i1 %74, %75
  %79 = or i1 %76, %77
  %80 = xor i1 %78, %79
  %81 = or i1 %71, %72
  %82 = xor i1 %81, true
  %83 = or i1 true, %73
  %84 = and i1 %82, %83
  %85 = or i1 %80, %84
  %86 = or i1 %69, %70
  br i1 %85, label %87, label %163

; <label>:87:                                     ; preds = %60, %163
  %88 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %89 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %90 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %89, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %88, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %90) #3
  %91 = load i32, i32* @x.473
  %92 = load i32, i32* @y.474
  %93 = add i32 %91, -1316769845
  %94 = sub i32 %93, 1
  %95 = sub i32 %94, -1316769845
  %96 = sub i32 %91, 1
  %97 = mul i32 %91, %95
  %98 = urem i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = icmp slt i32 %92, 10
  %101 = and i1 %99, %100
  %102 = xor i1 %99, %100
  %103 = or i1 %101, %102
  %104 = or i1 %99, %100
  br i1 %103, label %105, label %163

; <label>:105:                                    ; preds = %87
  br label %110

; <label>:106:                                    ; preds = %2
  %107 = landingpad { i8*, i32 }
          cleanup
  %108 = extractvalue { i8*, i32 } %107, 0
  store i8* %108, i8** %6, align 8
  %109 = extractvalue { i8*, i32 } %107, 1
  store i32 %109, i32* %7, align 4
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %9) #3
  br label %152

; <label>:110:                                    ; preds = %105, %59
  %111 = load i32, i32* @x.473
  %112 = load i32, i32* @y.474
  %113 = sub i32 0, 1
  %114 = add i32 %111, %113
  %115 = sub i32 %111, 1
  %116 = mul i32 %111, %114
  %117 = urem i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = icmp slt i32 %112, 10
  %120 = and i1 %118, %119
  %121 = xor i1 %118, %119
  %122 = or i1 %120, %121
  %123 = or i1 %118, %119
  br i1 %122, label %124, label %167

; <label>:124:                                    ; preds = %110, %167
  %125 = load i32, i32* @x.473
  %126 = load i32, i32* @y.474
  %127 = sub i32 %125, 1273345497
  %128 = sub i32 %127, 1
  %129 = add i32 %128, 1273345497
  %130 = sub i32 %125, 1
  %131 = mul i32 %125, %129
  %132 = urem i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = icmp slt i32 %126, 10
  %135 = xor i1 %133, true
  %136 = xor i1 %134, true
  %137 = xor i1 true, true
  %138 = and i1 %135, true
  %139 = and i1 %133, %137
  %140 = and i1 %136, true
  %141 = and i1 %134, %137
  %142 = or i1 %138, %139
  %143 = or i1 %140, %141
  %144 = xor i1 %142, %143
  %145 = or i1 %135, %136
  %146 = xor i1 %145, true
  %147 = or i1 true, %137
  %148 = and i1 %146, %147
  %149 = or i1 %144, %148
  %150 = or i1 %133, %134
  br i1 %149, label %151, label %167

; <label>:151:                                    ; preds = %124
  ret void

; <label>:152:                                    ; preds = %106
  %153 = load i8*, i8** %6, align 8
  %154 = load i32, i32* %7, align 4
  %155 = insertvalue { i8*, i32 } undef, i8* %153, 0
  %156 = insertvalue { i8*, i32 } %155, i32 %154, 1
  resume { i8*, i32 } %156

; <label>:157:                                    ; preds = %39, %13
  %158 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %159 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %158, i32 0, i32 0
  %160 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %159, i32 0, i32 0
  %161 = load i32**, i32*** %160, align 8
  %162 = icmp ne i32** %161, null
  br label %39

; <label>:163:                                    ; preds = %87, %60
  %164 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %8, i32 0, i32 0
  %165 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %5, align 8
  %166 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %165, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %164, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80) %166) #3
  br label %87

; <label>:167:                                    ; preds = %124, %110
  br label %124
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.5"* dereferenceable(1)) #5 comdat {
  %2 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %2, align 8
  %3 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %2, align 8
  ret %"class.std::allocator.5"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"*) #5 comdat align 2 {
  %2 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %2, align 8
  %3 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %2, align 8
  %4 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %3, i32 0, i32 0
  %5 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %4 to %"class.std::allocator.5"*
  ret %"class.std::allocator.5"* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implC2EOS0_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5 to %"class.std::allocator.5"*
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = call dereferenceable(1) %"class.std::allocator.5"* @_ZSt4moveIRSaIiEEONSt16remove_referenceIT_E4typeEOS3_(%"class.std::allocator.5"* dereferenceable(1) %7) #3
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.5"* %6, %"class.std::allocator.5"* dereferenceable(1) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  store i32** null, i32*** %9, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2Ev(%"struct.std::_Deque_iterator"* %12) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_impl12_M_swap_dataERS2_(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* dereferenceable(80)) #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  %4 = alloca %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %0, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  store %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %1, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %5 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %7, i32 0, i32 2
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %8) #3
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %10 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 3
  call void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32) %9, %"struct.std::_Deque_iterator"* dereferenceable(32) %11) #3
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 0
  %13 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %13, i32 0, i32 0
  call void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8) %12, i32*** dereferenceable(8) %14) #3
  %15 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 1
  %16 = load %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"*, %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"** %4, align 8
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  call void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8) %15, i64* dereferenceable(8) %17) #3
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSaIiEC2ERKS_(%"class.std::allocator.5"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.483
  %6 = load i32, i32* @y.484
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1791868517, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %79
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1791868517, label %18
    i32 -322325480, label %38
    i32 -20368067, label %71
    i32 -490118439, label %72
  ]

; <label>:17:                                     ; preds = %15
  br label %79

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 false, true
  %24 = and i1 %21, false
  %25 = and i1 %19, %23
  %26 = and i1 %22, false
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 false, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -322325480, i32 -490118439
  store i32 %37, i32* %14
  br label %79

; <label>:38:                                     ; preds = %15
  %39 = alloca %"class.std::allocator.5"*, align 8
  %40 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %39, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %40, align 8
  %41 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %39, align 8
  %42 = bitcast %"class.std::allocator.5"* %41 to %"class.__gnu_cxx::new_allocator.6"*
  %43 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  %44 = bitcast %"class.std::allocator.5"* %43 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.6"* %42, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %44) #3
  %45 = load i32, i32* @x.483
  %46 = load i32, i32* @y.484
  %47 = sub i32 0, 1
  %48 = add i32 %45, %47
  %49 = sub i32 %45, 1
  %50 = mul i32 %45, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %46, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 true, true
  %57 = and i1 %54, true
  %58 = and i1 %52, %56
  %59 = and i1 %55, true
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 true, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -20368067, i32 -490118439
  store i32 %70, i32* %14
  br label %79

; <label>:71:                                     ; preds = %15
  ret void

; <label>:72:                                     ; preds = %15
  %73 = alloca %"class.std::allocator.5"*, align 8
  %74 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %73, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %74, align 8
  %75 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %73, align 8
  %76 = bitcast %"class.std::allocator.5"* %75 to %"class.__gnu_cxx::new_allocator.6"*
  %77 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %74, align 8
  %78 = bitcast %"class.std::allocator.5"* %77 to %"class.__gnu_cxx::new_allocator.6"*
  call void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.6"* %76, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1) %78) #3
  store i32 -322325480, i32* %14
  br label %79

; <label>:79:                                     ; preds = %72, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiEC2ERKS1_(%"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %1, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %5 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %3, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapISt15_Deque_iteratorIiRiPiEEvRT_S5_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.487
  %6 = load i32, i32* @y.488
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1584206187, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1584206187, label %18
    i32 1413397698, label %38
    i32 -1526485759, label %68
    i32 -675768999, label %69
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 1413397698, i32 -675768999
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Deque_iterator"*, align 8
  %40 = alloca %"struct.std::_Deque_iterator"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %39, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %40, align 8
  %42 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %39, align 8
  %43 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %42) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %41, %"struct.std::_Deque_iterator"* dereferenceable(32) %43) #3
  %44 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %45 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %44) #3
  %46 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %39, align 8
  %47 = bitcast %"struct.std::_Deque_iterator"* %46 to i8*
  %48 = bitcast %"struct.std::_Deque_iterator"* %45 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %47, i8* %48, i64 32, i32 8, i1 false)
  %49 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %41) #3
  %50 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %40, align 8
  %51 = bitcast %"struct.std::_Deque_iterator"* %50 to i8*
  %52 = bitcast %"struct.std::_Deque_iterator"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %51, i8* %52, i64 32, i32 8, i1 false)
  %53 = load i32, i32* @x.487
  %54 = load i32, i32* @y.488
  %55 = sub i32 %53, -1912433360
  %56 = sub i32 %55, 1
  %57 = add i32 %56, -1912433360
  %58 = sub i32 %53, 1
  %59 = mul i32 %53, %57
  %60 = urem i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = icmp slt i32 %54, 10
  %63 = and i1 %61, %62
  %64 = xor i1 %61, %62
  %65 = or i1 %63, %64
  %66 = or i1 %61, %62
  %67 = select i1 %65, i32 -1526485759, i32 -675768999
  store i32 %67, i32* %14
  br label %84

; <label>:68:                                     ; preds = %15
  ret void

; <label>:69:                                     ; preds = %15
  %70 = alloca %"struct.std::_Deque_iterator"*, align 8
  %71 = alloca %"struct.std::_Deque_iterator"*, align 8
  %72 = alloca %"struct.std::_Deque_iterator", align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %70, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %71, align 8
  %73 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %74 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %73) #3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %72, %"struct.std::_Deque_iterator"* dereferenceable(32) %74) #3
  %75 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %76 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %75) #3
  %77 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %70, align 8
  %78 = bitcast %"struct.std::_Deque_iterator"* %77 to i8*
  %79 = bitcast %"struct.std::_Deque_iterator"* %76 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %78, i8* %79, i64 32, i32 8, i1 false)
  %80 = call dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32) %72) #3
  %81 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %71, align 8
  %82 = bitcast %"struct.std::_Deque_iterator"* %81 to i8*
  %83 = bitcast %"struct.std::_Deque_iterator"* %80 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %82, i8* %83, i64 32, i32 8, i1 false)
  store i32 1413397698, i32* %14
  br label %84

; <label>:84:                                     ; preds = %69, %38, %18, %17
  br label %15
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPPiEvRT_S3_(i32*** dereferenceable(8), i32*** dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.489
  %6 = load i32, i32* @y.490
  %7 = add i32 %5, 1688446713
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 1688446713
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1363340436, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %71
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1363340436, label %19
    i32 805296923, label %27
    i32 1495227108, label %56
    i32 487864758, label %57
  ]

; <label>:18:                                     ; preds = %16
  br label %71

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 805296923, i32 487864758
  store i32 %26, i32* %15
  br label %71

; <label>:27:                                     ; preds = %16
  %28 = alloca i32***, align 8
  %29 = alloca i32***, align 8
  %30 = alloca i32**, align 8
  store i32*** %0, i32**** %28, align 8
  store i32*** %1, i32**** %29, align 8
  %31 = load i32***, i32**** %28, align 8
  %32 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %31) #3
  %33 = load i32**, i32*** %32, align 8
  store i32** %33, i32*** %30, align 8
  %34 = load i32***, i32**** %29, align 8
  %35 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %34) #3
  %36 = load i32**, i32*** %35, align 8
  %37 = load i32***, i32**** %28, align 8
  store i32** %36, i32*** %37, align 8
  %38 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %30) #3
  %39 = load i32**, i32*** %38, align 8
  %40 = load i32***, i32**** %29, align 8
  store i32** %39, i32*** %40, align 8
  %41 = load i32, i32* @x.489
  %42 = load i32, i32* @y.490
  %43 = sub i32 %41, -1193986295
  %44 = sub i32 %43, 1
  %45 = add i32 %44, -1193986295
  %46 = sub i32 %41, 1
  %47 = mul i32 %41, %45
  %48 = urem i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = icmp slt i32 %42, 10
  %51 = and i1 %49, %50
  %52 = xor i1 %49, %50
  %53 = or i1 %51, %52
  %54 = or i1 %49, %50
  %55 = select i1 %53, i32 1495227108, i32 487864758
  store i32 %55, i32* %15
  br label %71

; <label>:56:                                     ; preds = %16
  ret void

; <label>:57:                                     ; preds = %16
  %58 = alloca i32***, align 8
  %59 = alloca i32***, align 8
  %60 = alloca i32**, align 8
  store i32*** %0, i32**** %58, align 8
  store i32*** %1, i32**** %59, align 8
  %61 = load i32***, i32**** %58, align 8
  %62 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %61) #3
  %63 = load i32**, i32*** %62, align 8
  store i32** %63, i32*** %60, align 8
  %64 = load i32***, i32**** %59, align 8
  %65 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %64) #3
  %66 = load i32**, i32*** %65, align 8
  %67 = load i32***, i32**** %58, align 8
  store i32** %66, i32*** %67, align 8
  %68 = call dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8) %60) #3
  %69 = load i32**, i32*** %68, align 8
  %70 = load i32***, i32**** %59, align 8
  store i32** %69, i32*** %70, align 8
  store i32 805296923, i32* %15
  br label %71

; <label>:71:                                     ; preds = %57, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapImEvRT_S1_(i64* dereferenceable(8), i64* dereferenceable(8)) #5 comdat {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.491
  %6 = load i32, i32* @y.492
  %7 = sub i32 %5, -1359342384
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1359342384
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1248299607, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %94
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1248299607, label %19
    i32 -1075000266, label %39
    i32 870197347, label %79
    i32 -283178721, label %80
  ]

; <label>:18:                                     ; preds = %16
  br label %94

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1075000266, i32 -283178721
  store i32 %38, i32* %15
  br label %94

; <label>:39:                                     ; preds = %16
  %40 = alloca i64*, align 8
  %41 = alloca i64*, align 8
  %42 = alloca i64, align 8
  store i64* %0, i64** %40, align 8
  store i64* %1, i64** %41, align 8
  %43 = load i64*, i64** %40, align 8
  %44 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %43) #3
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = load i64*, i64** %41, align 8
  %47 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %46) #3
  %48 = load i64, i64* %47, align 8
  %49 = load i64*, i64** %40, align 8
  store i64 %48, i64* %49, align 8
  %50 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %42) #3
  %51 = load i64, i64* %50, align 8
  %52 = load i64*, i64** %41, align 8
  store i64 %51, i64* %52, align 8
  %53 = load i32, i32* @x.491
  %54 = load i32, i32* @y.492
  %55 = sub i32 0, 1
  %56 = add i32 %53, %55
  %57 = sub i32 %53, 1
  %58 = mul i32 %53, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %54, 10
  %62 = xor i1 %60, true
  %63 = xor i1 %61, true
  %64 = xor i1 true, true
  %65 = and i1 %62, true
  %66 = and i1 %60, %64
  %67 = and i1 %63, true
  %68 = and i1 %61, %64
  %69 = or i1 %65, %66
  %70 = or i1 %67, %68
  %71 = xor i1 %69, %70
  %72 = or i1 %62, %63
  %73 = xor i1 %72, true
  %74 = or i1 true, %64
  %75 = and i1 %73, %74
  %76 = or i1 %71, %75
  %77 = or i1 %60, %61
  %78 = select i1 %76, i32 870197347, i32 -283178721
  store i32 %78, i32* %15
  br label %94

; <label>:79:                                     ; preds = %16
  ret void

; <label>:80:                                     ; preds = %16
  %81 = alloca i64*, align 8
  %82 = alloca i64*, align 8
  %83 = alloca i64, align 8
  store i64* %0, i64** %81, align 8
  store i64* %1, i64** %82, align 8
  %84 = load i64*, i64** %81, align 8
  %85 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %84) #3
  %86 = load i64, i64* %85, align 8
  store i64 %86, i64* %83, align 8
  %87 = load i64*, i64** %82, align 8
  %88 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %87) #3
  %89 = load i64, i64* %88, align 8
  %90 = load i64*, i64** %81, align 8
  store i64 %89, i64* %90, align 8
  %91 = call dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8) %83) #3
  %92 = load i64, i64* %91, align 8
  %93 = load i64*, i64** %82, align 8
  store i64 %92, i64* %93, align 8
  store i32 -1075000266, i32* %15
  br label %94

; <label>:94:                                     ; preds = %80, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(32) %"struct.std::_Deque_iterator"* @_ZSt4moveIRSt15_Deque_iteratorIiRiPiEEONSt16remove_referenceIT_E4typeEOS6_(%"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  ret %"struct.std::_Deque_iterator"* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"* dereferenceable(32)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %8 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %7, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  store i32* %9, i32** %6, align 8
  %10 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 1
  %11 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 1
  %13 = load i32*, i32** %12, align 8
  store i32* %13, i32** %10, align 8
  %14 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 2
  %15 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %16 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %15, i32 0, i32 2
  %17 = load i32*, i32** %16, align 8
  store i32* %17, i32** %14, align 8
  %18 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 3
  %19 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %20 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %19, i32 0, i32 3
  %21 = load i32**, i32*** %20, align 8
  store i32** %21, i32*** %18, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32*** @_ZSt4moveIRPPiEONSt16remove_referenceIT_E4typeEOS4_(i32*** dereferenceable(8)) #5 comdat {
  %2 = alloca i32***, align 8
  store i32*** %0, i32**** %2, align 8
  %3 = load i32***, i32**** %2, align 8
  ret i32*** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i64* @_ZSt4moveIRmEONSt16remove_referenceIT_E4typeEOS2_(i64* dereferenceable(8)) #5 comdat {
  %2 = alloca i64*, align 8
  store i64* %0, i64** %2, align 8
  %3 = load i64*, i64** %2, align 8
  ret i64* %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE15_M_destroy_dataESt15_Deque_iteratorIiRiPiES5_RKS0_(%"class.std::deque"*, %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"*, %"class.std::allocator.5"* dereferenceable(1)) #5 comdat align 2 {
  %5 = alloca %"class.std::deque"*, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %5, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %6, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %5, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.503
  %6 = load i32, i32* @y.504
  %7 = add i32 %5, 667480741
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 667480741
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1170870602, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %54
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1170870602, label %19
    i32 -1708436185, label %27
    i32 1149107106, label %47
    i32 1068584255, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %54

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1708436185, i32 1068584255
  store i32 %26, i32* %15
  br label %54

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.503
  %34 = load i32, i32* @y.504
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = and i1 %40, %41
  %43 = xor i1 %40, %41
  %44 = or i1 %42, %43
  %45 = or i1 %40, %41
  %46 = select i1 %44, i32 1149107106, i32 1068584255
  store i32 %46, i32* %15
  br label %54

; <label>:47:                                     ; preds = %16
  ret void

; <label>:48:                                     ; preds = %16
  %49 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %49, align 8
  %50 = load %"class.std::deque"*, %"class.std::deque"** %49, align 8
  %51 = bitcast %"class.std::deque"* %50 to %"class.std::_Deque_base"*
  %52 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %51, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %52, i32 0, i32 2
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %53) #3
  store i32 -1708436185, i32* %15
  br label %54

; <label>:54:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE3endEv(%"struct.std::_Deque_iterator"* noalias sret, %"class.std::deque"*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.505
  %6 = load i32, i32* @y.506
  %7 = add i32 %5, -654817548
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, -654817548
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1689965066, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %66
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1689965066, label %19
    i32 -1778798324, label %27
    i32 -87240914, label %59
    i32 -1285858304, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %66

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 -1778798324, i32 -1285858304
  store i32 %26, i32* %15
  br label %66

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %28, align 8
  %29 = load %"class.std::deque"*, %"class.std::deque"** %28, align 8
  %30 = bitcast %"class.std::deque"* %29 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %32) #3
  %33 = load i32, i32* @x.505
  %34 = load i32, i32* @y.506
  %35 = sub i32 0, 1
  %36 = add i32 %33, %35
  %37 = sub i32 %33, 1
  %38 = mul i32 %33, %36
  %39 = urem i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp slt i32 %34, 10
  %42 = xor i1 %40, true
  %43 = xor i1 %41, true
  %44 = xor i1 false, true
  %45 = and i1 %42, false
  %46 = and i1 %40, %44
  %47 = and i1 %43, false
  %48 = and i1 %41, %44
  %49 = or i1 %45, %46
  %50 = or i1 %47, %48
  %51 = xor i1 %49, %50
  %52 = or i1 %42, %43
  %53 = xor i1 %52, true
  %54 = or i1 false, %44
  %55 = and i1 %53, %54
  %56 = or i1 %51, %55
  %57 = or i1 %40, %41
  %58 = select i1 %56, i32 -87240914, i32 -1285858304
  store i32 %58, i32* %15
  br label %66

; <label>:59:                                     ; preds = %16
  ret void

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %1, %"class.std::deque"** %61, align 8
  %62 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  %63 = bitcast %"class.std::deque"* %62 to %"class.std::_Deque_base"*
  %64 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %63, i32 0, i32 0
  %65 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %64, i32 0, i32 3
  call void @_ZNSt15_Deque_iteratorIiRiPiEC2ERKS2_(%"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"* dereferenceable(32) %65) #3
  store i32 -1778798324, i32* %15
  br label %66

; <label>:66:                                     ; preds = %60, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt11_Deque_baseIiSaIiEED2Ev(%"class.std::_Deque_base"*) unnamed_addr #5 comdat align 2 {
  %2 = alloca i1
  %3 = alloca %"class.std::_Deque_base"*
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.507
  %7 = load i32, i32* @y.508
  %8 = sub i32 0, 1
  %9 = add i32 %6, %8
  %10 = sub i32 %6, 1
  %11 = mul i32 %6, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %5
  %14 = icmp slt i32 %7, 10
  store i1 %14, i1* %4
  %15 = alloca i32
  store i32 -230789779, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %186
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -230789779, label %19
    i32 1726426396, label %39
    i32 1774127911, label %73
    i32 -1594609732, label %76
    i32 -991966586, label %104
    i32 -1705642071, label %153
    i32 1118158286, label %154
    i32 -393883495, label %157
    i32 -1160854019, label %164
  ]

; <label>:18:                                     ; preds = %16
  br label %186

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %5
  %21 = load volatile i1, i1* %4
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1726426396, i32 -393883495
  store i32 %38, i32* %15
  br label %186

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %40, align 8
  %41 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %40, align 8
  store %"class.std::_Deque_base"* %41, %"class.std::_Deque_base"** %3
  %42 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 0
  %45 = load i32**, i32*** %44, align 8
  %46 = icmp ne i32** %45, null
  store i1 %46, i1* %2
  %47 = load i32, i32* @x.507
  %48 = load i32, i32* @y.508
  %49 = sub i32 0, 1
  %50 = add i32 %47, %49
  %51 = sub i32 %47, 1
  %52 = mul i32 %47, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %48, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 false, true
  %59 = and i1 %56, false
  %60 = and i1 %54, %58
  %61 = and i1 %57, false
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 false, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 1774127911, i32 -393883495
  store i32 %72, i32* %15
  br label %186

; <label>:73:                                     ; preds = %16
  %74 = load volatile i1, i1* %2
  %75 = select i1 %74, i32 -1594609732, i32 1118158286
  store i32 %75, i32* %15
  br label %186

; <label>:76:                                     ; preds = %16
  %77 = load i32, i32* @x.507
  %78 = load i32, i32* @y.508
  %79 = add i32 %77, -2013532244
  %80 = sub i32 %79, 1
  %81 = sub i32 %80, -2013532244
  %82 = sub i32 %77, 1
  %83 = mul i32 %77, %81
  %84 = urem i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = icmp slt i32 %78, 10
  %87 = xor i1 %85, true
  %88 = xor i1 %86, true
  %89 = xor i1 true, true
  %90 = and i1 %87, true
  %91 = and i1 %85, %89
  %92 = and i1 %88, true
  %93 = and i1 %86, %89
  %94 = or i1 %90, %91
  %95 = or i1 %92, %93
  %96 = xor i1 %94, %95
  %97 = or i1 %87, %88
  %98 = xor i1 %97, true
  %99 = or i1 true, %89
  %100 = and i1 %98, %99
  %101 = or i1 %96, %100
  %102 = or i1 %85, %86
  %103 = select i1 %101, i32 -991966586, i32 -1160854019
  store i32 %103, i32* %15
  br label %186

; <label>:104:                                    ; preds = %16
  %105 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %106 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %106, i32 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 3
  %109 = load i32**, i32*** %108, align 8
  %110 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %111 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %110, i32 0, i32 0
  %112 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %111, i32 0, i32 3
  %113 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %112, i32 0, i32 3
  %114 = load i32**, i32*** %113, align 8
  %115 = getelementptr inbounds i32*, i32** %114, i64 1
  %116 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %116, i32** %109, i32** %115) #3
  %117 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %118 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %117, i32 0, i32 0
  %119 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %118, i32 0, i32 0
  %120 = load i32**, i32*** %119, align 8
  %121 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %122 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %121, i32 0, i32 0
  %123 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %122, i32 0, i32 1
  %124 = load i64, i64* %123, align 8
  %125 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %125, i32** %120, i64 %124) #3
  %126 = load i32, i32* @x.507
  %127 = load i32, i32* @y.508
  %128 = add i32 %126, -731174367
  %129 = sub i32 %128, 1
  %130 = sub i32 %129, -731174367
  %131 = sub i32 %126, 1
  %132 = mul i32 %126, %130
  %133 = urem i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = icmp slt i32 %127, 10
  %136 = xor i1 %134, true
  %137 = xor i1 %135, true
  %138 = xor i1 false, true
  %139 = and i1 %136, false
  %140 = and i1 %134, %138
  %141 = and i1 %137, false
  %142 = and i1 %135, %138
  %143 = or i1 %139, %140
  %144 = or i1 %141, %142
  %145 = xor i1 %143, %144
  %146 = or i1 %136, %137
  %147 = xor i1 %146, true
  %148 = or i1 false, %138
  %149 = and i1 %147, %148
  %150 = or i1 %145, %149
  %151 = or i1 %134, %135
  %152 = select i1 %150, i32 -1705642071, i32 -1160854019
  store i32 %152, i32* %15
  br label %186

; <label>:153:                                    ; preds = %16
  store i32 1118158286, i32* %15
  br label %186

; <label>:154:                                    ; preds = %16
  %155 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %156 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %155, i32 0, i32 0
  call void @_ZNSt11_Deque_baseIiSaIiEE11_Deque_implD2Ev(%"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %156) #3
  ret void

; <label>:157:                                    ; preds = %16
  %158 = alloca %"class.std::_Deque_base"*, align 8
  store %"class.std::_Deque_base"* %0, %"class.std::_Deque_base"** %158, align 8
  %159 = load %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %158, align 8
  %160 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %159, i32 0, i32 0
  %161 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %160, i32 0, i32 0
  %162 = load i32**, i32*** %161, align 8
  %163 = icmp ne i32** %162, null
  store i32 1726426396, i32* %15
  br label %186

; <label>:164:                                    ; preds = %16
  %165 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %166 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %165, i32 0, i32 0
  %167 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %166, i32 0, i32 2
  %168 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %167, i32 0, i32 3
  %169 = load i32**, i32*** %168, align 8
  %170 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %171 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %170, i32 0, i32 0
  %172 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %171, i32 0, i32 3
  %173 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %172, i32 0, i32 3
  %174 = load i32**, i32*** %173, align 8
  %175 = getelementptr inbounds i32*, i32** %174, i64 1
  %176 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE16_M_destroy_nodesEPPiS3_(%"class.std::_Deque_base"* %176, i32** %169, i32** %175) #3
  %177 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %178 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %177, i32 0, i32 0
  %179 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %178, i32 0, i32 0
  %180 = load i32**, i32*** %179, align 8
  %181 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  %182 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %181, i32 0, i32 0
  %183 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %182, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = load volatile %"class.std::_Deque_base"*, %"class.std::_Deque_base"** %3
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %185, i32** %180, i64 %184) #3
  store i32 -991966586, i32* %15
  br label %186

; <label>:186:                                    ; preds = %164, %157, %153, %104, %76, %73, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE12emplace_backIJRiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 -1057108607, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %92
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 -1057108607, label %26
    i32 -1432547921, label %31
    i32 708776542, label %51
    i32 -707289780, label %67
    i32 -2012368407, label %86
    i32 1789043458, label %87
    i32 1206686200, label %88
  ]

; <label>:25:                                     ; preds = %23
  br label %92

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 -1432547921, i32 708776542
  store i32 %30, i32* %22
  br label %92

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.5"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %42) #3
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %43)
  %44 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %45 = bitcast %"class.std::deque"* %44 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds i32, i32* %49, i32 1
  store i32* %50, i32** %48, align 8
  store i32 1789043458, i32* %22
  br label %92

; <label>:51:                                     ; preds = %23
  %52 = load i32, i32* @x.509
  %53 = load i32, i32* @y.510
  %54 = add i32 %52, -1257755904
  %55 = sub i32 %54, 1
  %56 = sub i32 %55, -1257755904
  %57 = sub i32 %52, 1
  %58 = mul i32 %52, %56
  %59 = urem i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = icmp slt i32 %53, 10
  %62 = and i1 %60, %61
  %63 = xor i1 %60, %61
  %64 = or i1 %62, %63
  %65 = or i1 %60, %61
  %66 = select i1 %64, i32 -707289780, i32 1206686200
  store i32 %66, i32* %22
  br label %92

; <label>:67:                                     ; preds = %23
  %68 = load i32*, i32** %7, align 8
  %69 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %68) #3
  %70 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRiEEEvDpOT_(%"class.std::deque"* %70, i32* dereferenceable(4) %69)
  %71 = load i32, i32* @x.509
  %72 = load i32, i32* @y.510
  %73 = add i32 %71, -896826440
  %74 = sub i32 %73, 1
  %75 = sub i32 %74, -896826440
  %76 = sub i32 %71, 1
  %77 = mul i32 %71, %75
  %78 = urem i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = icmp slt i32 %72, 10
  %81 = and i1 %79, %80
  %82 = xor i1 %79, %80
  %83 = or i1 %81, %82
  %84 = or i1 %79, %80
  %85 = select i1 %83, i32 -2012368407, i32 1206686200
  store i32 %85, i32* %22
  br label %92

; <label>:86:                                     ; preds = %23
  store i32 1789043458, i32* %22
  br label %92

; <label>:87:                                     ; preds = %23
  ret void

; <label>:88:                                     ; preds = %23
  %89 = load i32*, i32** %7, align 8
  %90 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %89) #3
  %91 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRiEEEvDpOT_(%"class.std::deque"* %91, i32* dereferenceable(4) %90)
  store i32 -707289780, i32* %22
  br label %92

; <label>:92:                                     ; preds = %88, %86, %67, %51, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = alloca %"class.std::deque"*, align 8
  %4 = alloca i32*, align 8
  %5 = alloca i8*
  %6 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %3, align 8
  store i32* %1, i32** %4, align 8
  %7 = load %"class.std::deque"*, %"class.std::deque"** %3, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %7, i64 1)
  %8 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %9 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %8)
  %10 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 3
  %14 = load i32**, i32*** %13, align 8
  %15 = getelementptr inbounds i32*, i32** %14, i64 1
  store i32* %9, i32** %15, align 8
  %16 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17 to %"class.std::allocator.5"*
  %19 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %20 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %19, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %20, i32 0, i32 3
  %22 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %21, i32 0, i32 0
  %23 = load i32*, i32** %22, align 8
  %24 = load i32*, i32** %4, align 8
  %25 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %24) #3
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %18, i32* %23, i32* dereferenceable(4) %25)
          to label %26 unwind label %45

; <label>:26:                                     ; preds = %2
  %27 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %28 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %27, i32 0, i32 0
  %29 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %28, i32 0, i32 3
  %30 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %31 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %30, i32 0, i32 0
  %32 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %31, i32 0, i32 3
  %33 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %32, i32 0, i32 3
  %34 = load i32**, i32*** %33, align 8
  %35 = getelementptr inbounds i32*, i32** %34, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %29, i32** %35) #3
  %36 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %42 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %41, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %42, i32 0, i32 3
  %44 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %43, i32 0, i32 0
  store i32* %40, i32** %44, align 8
  br label %65

; <label>:45:                                     ; preds = %2
  %46 = landingpad { i8*, i32 }
          catch i8* null
  %47 = extractvalue { i8*, i32 } %46, 0
  store i8* %47, i8** %5, align 8
  %48 = extractvalue { i8*, i32 } %46, 1
  store i32 %48, i32* %6, align 4
  br label %49

; <label>:49:                                     ; preds = %45
  %50 = load i8*, i8** %5, align 8
  %51 = call i8* @__cxa_begin_catch(i8* %50) #3
  %52 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %53 = bitcast %"class.std::deque"* %7 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 3
  %56 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %55, i32 0, i32 3
  %57 = load i32**, i32*** %56, align 8
  %58 = getelementptr inbounds i32*, i32** %57, i64 1
  %59 = load i32*, i32** %58, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %52, i32* %59) #3
  invoke void @__cxa_rethrow() #12
          to label %74 unwind label %60

; <label>:60:                                     ; preds = %49
  %61 = landingpad { i8*, i32 }
          cleanup
  %62 = extractvalue { i8*, i32 } %61, 0
  store i8* %62, i8** %5, align 8
  %63 = extractvalue { i8*, i32 } %61, 1
  store i32 %63, i32* %6, align 4
  invoke void @__cxa_end_catch()
          to label %64 unwind label %71

; <label>:64:                                     ; preds = %60
  br label %66

; <label>:65:                                     ; preds = %26
  ret void

; <label>:66:                                     ; preds = %64
  %67 = load i8*, i8** %5, align 8
  %68 = load i32, i32* %6, align 4
  %69 = insertvalue { i8*, i32 } undef, i8* %67, 0
  %70 = insertvalue { i8*, i32 } %69, i32 %68, 1
  resume { i8*, i32 } %70

; <label>:71:                                     ; preds = %60
  %72 = landingpad { i8*, i32 }
          catch i8* null
  %73 = extractvalue { i8*, i32 } %72, 0
  call void @__clang_call_terminate(i8* %73) #8
  unreachable

; <label>:74:                                     ; preds = %49
  %75 = load i32, i32* @x.513
  %76 = load i32, i32* @y.514
  %77 = add i32 %75, -1812303864
  %78 = sub i32 %77, 1
  %79 = sub i32 %78, -1812303864
  %80 = sub i32 %75, 1
  %81 = mul i32 %75, %79
  %82 = urem i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = icmp slt i32 %76, 10
  %85 = and i1 %83, %84
  %86 = xor i1 %83, %84
  %87 = or i1 %85, %86
  %88 = or i1 %83, %84
  br i1 %87, label %89, label %105

; <label>:89:                                     ; preds = %74, %105
  %90 = load i32, i32* @x.513
  %91 = load i32, i32* @y.514
  %92 = sub i32 %90, 824256206
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 824256206
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %105

; <label>:104:                                    ; preds = %89
  unreachable

; <label>:105:                                    ; preds = %89, %74
  br label %89
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.515
  %7 = load i32, i32* @y.516
  %8 = add i32 %6, 1488478598
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, 1488478598
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 -871821766, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %78
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 -871821766, label %20
    i32 193316040, label %28
    i32 -1991056464, label %66
    i32 -686251378, label %67
  ]

; <label>:19:                                     ; preds = %17
  br label %78

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 193316040, i32 -686251378
  store i32 %27, i32* %16
  br label %78

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  store i32* %1, i32** %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %29, align 8
  %33 = load i32*, i32** %30, align 8
  %34 = bitcast i32* %33 to i8*
  %35 = bitcast i8* %34 to i32*
  %36 = load i32*, i32** %31, align 8
  %37 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %36) #3
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %35, align 4
  %39 = load i32, i32* @x.515
  %40 = load i32, i32* @y.516
  %41 = sub i32 %39, -437339323
  %42 = sub i32 %41, 1
  %43 = add i32 %42, -437339323
  %44 = sub i32 %39, 1
  %45 = mul i32 %39, %43
  %46 = urem i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = icmp slt i32 %40, 10
  %49 = xor i1 %47, true
  %50 = xor i1 %48, true
  %51 = xor i1 false, true
  %52 = and i1 %49, false
  %53 = and i1 %47, %51
  %54 = and i1 %50, false
  %55 = and i1 %48, %51
  %56 = or i1 %52, %53
  %57 = or i1 %54, %55
  %58 = xor i1 %56, %57
  %59 = or i1 %49, %50
  %60 = xor i1 %59, true
  %61 = or i1 false, %51
  %62 = and i1 %60, %61
  %63 = or i1 %58, %62
  %64 = or i1 %47, %48
  %65 = select i1 %63, i32 -1991056464, i32 -686251378
  store i32 %65, i32* %16
  br label %78

; <label>:66:                                     ; preds = %17
  ret void

; <label>:67:                                     ; preds = %17
  %68 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %69 = alloca i32*, align 8
  %70 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %68, align 8
  store i32* %1, i32** %69, align 8
  store i32* %2, i32** %70, align 8
  %71 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %68, align 8
  %72 = load i32*, i32** %69, align 8
  %73 = bitcast i32* %72 to i8*
  %74 = bitcast i8* %73 to i32*
  %75 = load i32*, i32** %70, align 8
  %76 = call dereferenceable(4) i32* @_ZSt7forwardIRiEOT_RNSt16remove_referenceIS1_E4typeE(i32* dereferenceable(4) %75) #3
  %77 = load i32, i32* %76, align 4
  store i32 %77, i32* %74, align 4
  store i32 193316040, i32* %16
  br label %78

; <label>:78:                                     ; preds = %67, %28, %20, %19
  br label %17
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"*, i64) #0 comdat align 2 {
  %3 = alloca i64
  %4 = alloca i64
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i64, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i64 %1, i64* %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load i64, i64* %7, align 8
  %10 = add i64 %9, -162887418696990707
  %11 = add i64 %10, 1
  %12 = sub i64 %11, -162887418696990707
  %13 = add i64 %9, 1
  store i64 %12, i64* %4
  %14 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %15 = bitcast %"class.std::deque"* %14 to %"class.std::_Deque_base"*
  %16 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %15, i32 0, i32 0
  %17 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %16, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %20 = bitcast %"class.std::deque"* %19 to %"class.std::_Deque_base"*
  %21 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %20, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %21, i32 0, i32 3
  %23 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %22, i32 0, i32 3
  %24 = load i32**, i32*** %23, align 8
  %25 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %26 = bitcast %"class.std::deque"* %25 to %"class.std::_Deque_base"*
  %27 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %26, i32 0, i32 0
  %28 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %27, i32 0, i32 0
  %29 = load i32**, i32*** %28, align 8
  %30 = ptrtoint i32** %24 to i64
  %31 = ptrtoint i32** %29 to i64
  %32 = sub i64 %30, 14934575336619722
  %33 = sub i64 %32, %31
  %34 = add i64 %33, 14934575336619722
  %35 = sub i64 %30, %31
  %36 = sdiv exact i64 %34, 8
  %37 = sub i64 0, %36
  %38 = add i64 %18, %37
  %39 = sub i64 %18, %36
  store i64 %38, i64* %3
  %40 = alloca i32
  store i32 -1013879465, i32* %40
  br label %41

; <label>:41:                                     ; preds = %2, %111
  %42 = load i32, i32* %40
  switch i32 %42, label %43 [
    i32 -1013879465, label %44
    i32 -1063646760, label %49
    i32 279902306, label %76
    i32 -1473801355, label %106
    i32 -1973167694, label %107
    i32 199739200, label %108
  ]

; <label>:43:                                     ; preds = %41
  br label %111

; <label>:44:                                     ; preds = %41
  %45 = load volatile i64, i64* %4
  %46 = load volatile i64, i64* %3
  %47 = icmp ugt i64 %45, %46
  %48 = select i1 %47, i32 -1063646760, i32 -1973167694
  store i32 %48, i32* %40
  br label %111

; <label>:49:                                     ; preds = %41
  %50 = load i32, i32* @x.517
  %51 = load i32, i32* @y.518
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 279902306, i32 199739200
  store i32 %75, i32* %40
  br label %111

; <label>:76:                                     ; preds = %41
  %77 = load i64, i64* %7, align 8
  %78 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %78, i64 %77, i1 zeroext false)
  %79 = load i32, i32* @x.517
  %80 = load i32, i32* @y.518
  %81 = add i32 %79, -1005618060
  %82 = sub i32 %81, 1
  %83 = sub i32 %82, -1005618060
  %84 = sub i32 %79, 1
  %85 = mul i32 %79, %83
  %86 = urem i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = icmp slt i32 %80, 10
  %89 = xor i1 %87, true
  %90 = xor i1 %88, true
  %91 = xor i1 false, true
  %92 = and i1 %89, false
  %93 = and i1 %87, %91
  %94 = and i1 %90, false
  %95 = and i1 %88, %91
  %96 = or i1 %92, %93
  %97 = or i1 %94, %95
  %98 = xor i1 %96, %97
  %99 = or i1 %89, %90
  %100 = xor i1 %99, true
  %101 = or i1 false, %91
  %102 = and i1 %100, %101
  %103 = or i1 %98, %102
  %104 = or i1 %87, %88
  %105 = select i1 %103, i32 -1473801355, i32 199739200
  store i32 %105, i32* %40
  br label %111

; <label>:106:                                    ; preds = %41
  store i32 -1973167694, i32* %40
  br label %111

; <label>:107:                                    ; preds = %41
  ret void

; <label>:108:                                    ; preds = %41
  %109 = load i64, i64* %7, align 8
  %110 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"* %110, i64 %109, i1 zeroext false)
  store i32 279902306, i32* %40
  br label %111

; <label>:111:                                    ; preds = %108, %106, %76, %49, %44, %43
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE17_M_reallocate_mapEmb(%"class.std::deque"*, i64, i1 zeroext) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**
  %6 = alloca i32**
  %7 = alloca i1
  %8 = alloca %"class.std::deque"*
  %9 = alloca i32***
  %10 = alloca i64*
  %11 = alloca i32***
  %12 = alloca i64*
  %13 = alloca i64*
  %14 = alloca i8*
  %15 = alloca i64*
  %16 = alloca i1
  %17 = alloca i1
  %18 = load i32, i32* @x.519
  %19 = load i32, i32* @y.520
  %20 = sub i32 0, 1
  %21 = add i32 %18, %20
  %22 = sub i32 %18, 1
  %23 = mul i32 %18, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  store i1 %25, i1* %17
  %26 = icmp slt i32 %19, 10
  store i1 %26, i1* %16
  %27 = alloca i32
  store i32 779861657, i32* %27
  %28 = alloca i64
  %29 = alloca i64
  br label %30

; <label>:30:                                     ; preds = %3, %655
  %31 = load i32, i32* %27
  switch i32 %31, label %32 [
    i32 779861657, label %33
    i32 1366966598, label %53
    i32 -1954844652, label %123
    i32 -1379615846, label %126
    i32 1061074155, label %149
    i32 1545085614, label %152
    i32 22445652, label %180
    i32 1024923637, label %208
    i32 -1772163251, label %209
    i32 774637559, label %224
    i32 -1549750662, label %241
    i32 -1426006019, label %257
    i32 -1067495562, label %303
    i32 -1852264044, label %304
    i32 1736359152, label %305
    i32 -1117469987, label %351
    i32 223230769, label %354
    i32 -1576562380, label %355
    i32 -420392780, label %384
    i32 1588567483, label %456
    i32 1603879477, label %457
    i32 -33339385, label %474
    i32 1358269922, label %589
    i32 -864971473, label %590
    i32 1010089138, label %610
  ]

; <label>:32:                                     ; preds = %30
  br label %655

; <label>:33:                                     ; preds = %30
  %34 = load volatile i1, i1* %17
  %35 = load volatile i1, i1* %16
  %36 = xor i1 %34, true
  %37 = xor i1 %35, true
  %38 = xor i1 true, true
  %39 = and i1 %36, true
  %40 = and i1 %34, %38
  %41 = and i1 %37, true
  %42 = and i1 %35, %38
  %43 = or i1 %39, %40
  %44 = or i1 %41, %42
  %45 = xor i1 %43, %44
  %46 = or i1 %36, %37
  %47 = xor i1 %46, true
  %48 = or i1 true, %38
  %49 = and i1 %47, %48
  %50 = or i1 %45, %49
  %51 = or i1 %34, %35
  %52 = select i1 %50, i32 1366966598, i32 -33339385
  store i32 %52, i32* %27
  br label %655

; <label>:53:                                     ; preds = %30
  %54 = alloca %"class.std::deque"*, align 8
  %55 = alloca i64, align 8
  store i64* %55, i64** %15
  %56 = alloca i8, align 1
  store i8* %56, i8** %14
  %57 = alloca i64, align 8
  store i64* %57, i64** %13
  %58 = alloca i64, align 8
  store i64* %58, i64** %12
  %59 = alloca i32**, align 8
  store i32*** %59, i32**** %11
  %60 = alloca i64, align 8
  store i64* %60, i64** %10
  %61 = alloca i32**, align 8
  store i32*** %61, i32**** %9
  store %"class.std::deque"* %0, %"class.std::deque"** %54, align 8
  %62 = load volatile i64*, i64** %15
  store i64 %1, i64* %62, align 8
  %63 = zext i1 %2 to i8
  %64 = load volatile i8*, i8** %14
  store i8 %63, i8* %64, align 1
  %65 = load %"class.std::deque"*, %"class.std::deque"** %54, align 8
  store %"class.std::deque"* %65, %"class.std::deque"** %8
  %66 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %67 = bitcast %"class.std::deque"* %66 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 3
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 3
  %71 = load i32**, i32*** %70, align 8
  %72 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %73 = bitcast %"class.std::deque"* %72 to %"class.std::_Deque_base"*
  %74 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %73, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %74, i32 0, i32 2
  %76 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %75, i32 0, i32 3
  %77 = load i32**, i32*** %76, align 8
  %78 = ptrtoint i32** %71 to i64
  %79 = ptrtoint i32** %77 to i64
  %80 = sub i64 0, %79
  %81 = add i64 %78, %80
  %82 = sub i64 %78, %79
  %83 = sdiv exact i64 %81, 8
  %84 = sub i64 %83, 7722977028613977696
  %85 = add i64 %84, 1
  %86 = add i64 %85, 7722977028613977696
  %87 = add nsw i64 %83, 1
  %88 = load volatile i64*, i64** %13
  store i64 %86, i64* %88, align 8
  %89 = load volatile i64*, i64** %13
  %90 = load i64, i64* %89, align 8
  %91 = load volatile i64*, i64** %15
  %92 = load i64, i64* %91, align 8
  %93 = sub i64 0, %90
  %94 = sub i64 0, %92
  %95 = add i64 %93, %94
  %96 = sub i64 0, %95
  %97 = add i64 %90, %92
  %98 = load volatile i64*, i64** %12
  store i64 %96, i64* %98, align 8
  %99 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %100 = bitcast %"class.std::deque"* %99 to %"class.std::_Deque_base"*
  %101 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %100, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %101, i32 0, i32 1
  %103 = load i64, i64* %102, align 8
  %104 = load volatile i64*, i64** %12
  %105 = load i64, i64* %104, align 8
  %106 = mul i64 2, %105
  %107 = icmp ugt i64 %103, %106
  store i1 %107, i1* %7
  %108 = load i32, i32* @x.519
  %109 = load i32, i32* @y.520
  %110 = sub i32 %108, -1570396543
  %111 = sub i32 %110, 1
  %112 = add i32 %111, -1570396543
  %113 = sub i32 %108, 1
  %114 = mul i32 %108, %112
  %115 = urem i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = icmp slt i32 %109, 10
  %118 = and i1 %116, %117
  %119 = xor i1 %116, %117
  %120 = or i1 %118, %119
  %121 = or i1 %116, %117
  %122 = select i1 %120, i32 -1954844652, i32 -33339385
  store i32 %122, i32* %27
  br label %655

; <label>:123:                                    ; preds = %30
  %124 = load volatile i1, i1* %7
  %125 = select i1 %124, i32 -1379615846, i32 1736359152
  store i32 %125, i32* %27
  br label %655

; <label>:126:                                    ; preds = %30
  %127 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %128 = bitcast %"class.std::deque"* %127 to %"class.std::_Deque_base"*
  %129 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %128, i32 0, i32 0
  %130 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %129, i32 0, i32 0
  %131 = load i32**, i32*** %130, align 8
  %132 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %133 = bitcast %"class.std::deque"* %132 to %"class.std::_Deque_base"*
  %134 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %133, i32 0, i32 0
  %135 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %134, i32 0, i32 1
  %136 = load i64, i64* %135, align 8
  %137 = load volatile i64*, i64** %12
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %136, -7988053052380126800
  %140 = sub i64 %139, %138
  %141 = sub i64 %140, -7988053052380126800
  %142 = sub i64 %136, %138
  %143 = udiv i64 %141, 2
  %144 = getelementptr inbounds i32*, i32** %131, i64 %143
  store i32** %144, i32*** %6
  %145 = load volatile i8*, i8** %14
  %146 = load i8, i8* %145, align 1
  %147 = trunc i8 %146 to i1
  %148 = select i1 %147, i32 1061074155, i32 1545085614
  store i32 %148, i32* %27
  br label %655

; <label>:149:                                    ; preds = %30
  %150 = load volatile i64*, i64** %15
  %151 = load i64, i64* %150, align 8
  store i32 -1772163251, i32* %27
  store i64 %151, i64* %28
  br label %655

; <label>:152:                                    ; preds = %30
  %153 = load i32, i32* @x.519
  %154 = load i32, i32* @y.520
  %155 = sub i32 %153, 514212498
  %156 = sub i32 %155, 1
  %157 = add i32 %156, 514212498
  %158 = sub i32 %153, 1
  %159 = mul i32 %153, %157
  %160 = urem i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = icmp slt i32 %154, 10
  %163 = xor i1 %161, true
  %164 = xor i1 %162, true
  %165 = xor i1 true, true
  %166 = and i1 %163, true
  %167 = and i1 %161, %165
  %168 = and i1 %164, true
  %169 = and i1 %162, %165
  %170 = or i1 %166, %167
  %171 = or i1 %168, %169
  %172 = xor i1 %170, %171
  %173 = or i1 %163, %164
  %174 = xor i1 %173, true
  %175 = or i1 true, %165
  %176 = and i1 %174, %175
  %177 = or i1 %172, %176
  %178 = or i1 %161, %162
  %179 = select i1 %177, i32 22445652, i32 1358269922
  store i32 %179, i32* %27
  br label %655

; <label>:180:                                    ; preds = %30
  %181 = load i32, i32* @x.519
  %182 = load i32, i32* @y.520
  %183 = sub i32 %181, 584539350
  %184 = sub i32 %183, 1
  %185 = add i32 %184, 584539350
  %186 = sub i32 %181, 1
  %187 = mul i32 %181, %185
  %188 = urem i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = icmp slt i32 %182, 10
  %191 = xor i1 %189, true
  %192 = xor i1 %190, true
  %193 = xor i1 true, true
  %194 = and i1 %191, true
  %195 = and i1 %189, %193
  %196 = and i1 %192, true
  %197 = and i1 %190, %193
  %198 = or i1 %194, %195
  %199 = or i1 %196, %197
  %200 = xor i1 %198, %199
  %201 = or i1 %191, %192
  %202 = xor i1 %201, true
  %203 = or i1 true, %193
  %204 = and i1 %202, %203
  %205 = or i1 %200, %204
  %206 = or i1 %189, %190
  %207 = select i1 %205, i32 1024923637, i32 1358269922
  store i32 %207, i32* %27
  br label %655

; <label>:208:                                    ; preds = %30
  store i32 -1772163251, i32* %27
  store i64 0, i64* %28
  br label %655

; <label>:209:                                    ; preds = %30
  %210 = load i64, i64* %28
  %211 = load volatile i32**, i32*** %6
  %212 = getelementptr inbounds i32*, i32** %211, i64 %210
  %213 = load volatile i32***, i32**** %11
  store i32** %212, i32*** %213, align 8
  %214 = load volatile i32***, i32**** %11
  %215 = load i32**, i32*** %214, align 8
  %216 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %217 = bitcast %"class.std::deque"* %216 to %"class.std::_Deque_base"*
  %218 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %217, i32 0, i32 0
  %219 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %218, i32 0, i32 2
  %220 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %219, i32 0, i32 3
  %221 = load i32**, i32*** %220, align 8
  %222 = icmp ult i32** %215, %221
  %223 = select i1 %222, i32 774637559, i32 -1549750662
  store i32 %223, i32* %27
  br label %655

; <label>:224:                                    ; preds = %30
  %225 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %226 = bitcast %"class.std::deque"* %225 to %"class.std::_Deque_base"*
  %227 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %226, i32 0, i32 0
  %228 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %227, i32 0, i32 2
  %229 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %228, i32 0, i32 3
  %230 = load i32**, i32*** %229, align 8
  %231 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %232 = bitcast %"class.std::deque"* %231 to %"class.std::_Deque_base"*
  %233 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %232, i32 0, i32 0
  %234 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %233, i32 0, i32 3
  %235 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %234, i32 0, i32 3
  %236 = load i32**, i32*** %235, align 8
  %237 = getelementptr inbounds i32*, i32** %236, i64 1
  %238 = load volatile i32***, i32**** %11
  %239 = load i32**, i32*** %238, align 8
  %240 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %230, i32** %237, i32** %239)
  store i32 -1852264044, i32* %27
  br label %655

; <label>:241:                                    ; preds = %30
  %242 = load i32, i32* @x.519
  %243 = load i32, i32* @y.520
  %244 = sub i32 %242, -541092663
  %245 = sub i32 %244, 1
  %246 = add i32 %245, -541092663
  %247 = sub i32 %242, 1
  %248 = mul i32 %242, %246
  %249 = urem i32 %248, 2
  %250 = icmp eq i32 %249, 0
  %251 = icmp slt i32 %243, 10
  %252 = and i1 %250, %251
  %253 = xor i1 %250, %251
  %254 = or i1 %252, %253
  %255 = or i1 %250, %251
  %256 = select i1 %254, i32 -1426006019, i32 -864971473
  store i32 %256, i32* %27
  br label %655

; <label>:257:                                    ; preds = %30
  %258 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %259 = bitcast %"class.std::deque"* %258 to %"class.std::_Deque_base"*
  %260 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %259, i32 0, i32 0
  %261 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %260, i32 0, i32 2
  %262 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %261, i32 0, i32 3
  %263 = load i32**, i32*** %262, align 8
  %264 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %265 = bitcast %"class.std::deque"* %264 to %"class.std::_Deque_base"*
  %266 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %265, i32 0, i32 0
  %267 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %266, i32 0, i32 3
  %268 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %267, i32 0, i32 3
  %269 = load i32**, i32*** %268, align 8
  %270 = getelementptr inbounds i32*, i32** %269, i64 1
  %271 = load volatile i32***, i32**** %11
  %272 = load i32**, i32*** %271, align 8
  %273 = load volatile i64*, i64** %13
  %274 = load i64, i64* %273, align 8
  %275 = getelementptr inbounds i32*, i32** %272, i64 %274
  %276 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %263, i32** %270, i32** %275)
  %277 = load i32, i32* @x.519
  %278 = load i32, i32* @y.520
  %279 = sub i32 0, 1
  %280 = add i32 %277, %279
  %281 = sub i32 %277, 1
  %282 = mul i32 %277, %280
  %283 = urem i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = icmp slt i32 %278, 10
  %286 = xor i1 %284, true
  %287 = xor i1 %285, true
  %288 = xor i1 false, true
  %289 = and i1 %286, false
  %290 = and i1 %284, %288
  %291 = and i1 %287, false
  %292 = and i1 %285, %288
  %293 = or i1 %289, %290
  %294 = or i1 %291, %292
  %295 = xor i1 %293, %294
  %296 = or i1 %286, %287
  %297 = xor i1 %296, true
  %298 = or i1 false, %288
  %299 = and i1 %297, %298
  %300 = or i1 %295, %299
  %301 = or i1 %284, %285
  %302 = select i1 %300, i32 -1067495562, i32 -864971473
  store i32 %302, i32* %27
  br label %655

; <label>:303:                                    ; preds = %30
  store i32 -1852264044, i32* %27
  br label %655

; <label>:304:                                    ; preds = %30
  store i32 1603879477, i32* %27
  br label %655

; <label>:305:                                    ; preds = %30
  %306 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %307 = bitcast %"class.std::deque"* %306 to %"class.std::_Deque_base"*
  %308 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %307, i32 0, i32 0
  %309 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %308, i32 0, i32 1
  %310 = load i64, i64* %309, align 8
  %311 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %312 = bitcast %"class.std::deque"* %311 to %"class.std::_Deque_base"*
  %313 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %312, i32 0, i32 0
  %314 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %313, i32 0, i32 1
  %315 = load volatile i64*, i64** %15
  %316 = call dereferenceable(8) i64* @_ZSt3maxImERKT_S2_S2_(i64* dereferenceable(8) %314, i64* dereferenceable(8) %315)
  %317 = load i64, i64* %316, align 8
  %318 = sub i64 0, %310
  %319 = sub i64 0, %317
  %320 = add i64 %318, %319
  %321 = sub i64 0, %320
  %322 = add i64 %310, %317
  %323 = sub i64 0, %321
  %324 = sub i64 0, 2
  %325 = add i64 %323, %324
  %326 = sub i64 0, %325
  %327 = add i64 %321, 2
  %328 = load volatile i64*, i64** %10
  store i64 %326, i64* %328, align 8
  %329 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %330 = bitcast %"class.std::deque"* %329 to %"class.std::_Deque_base"*
  %331 = load volatile i64*, i64** %10
  %332 = load i64, i64* %331, align 8
  %333 = call i32** @_ZNSt11_Deque_baseIiSaIiEE15_M_allocate_mapEm(%"class.std::_Deque_base"* %330, i64 %332)
  %334 = load volatile i32***, i32**** %9
  store i32** %333, i32*** %334, align 8
  %335 = load volatile i32***, i32**** %9
  %336 = load i32**, i32*** %335, align 8
  %337 = load volatile i64*, i64** %10
  %338 = load i64, i64* %337, align 8
  %339 = load volatile i64*, i64** %12
  %340 = load i64, i64* %339, align 8
  %341 = sub i64 %338, 2859102423882818963
  %342 = sub i64 %341, %340
  %343 = add i64 %342, 2859102423882818963
  %344 = sub i64 %338, %340
  %345 = udiv i64 %343, 2
  %346 = getelementptr inbounds i32*, i32** %336, i64 %345
  store i32** %346, i32*** %5
  %347 = load volatile i8*, i8** %14
  %348 = load i8, i8* %347, align 1
  %349 = trunc i8 %348 to i1
  %350 = select i1 %349, i32 -1117469987, i32 223230769
  store i32 %350, i32* %27
  br label %655

; <label>:351:                                    ; preds = %30
  %352 = load volatile i64*, i64** %15
  %353 = load i64, i64* %352, align 8
  store i32 -1576562380, i32* %27
  store i64 %353, i64* %29
  br label %655

; <label>:354:                                    ; preds = %30
  store i32 -1576562380, i32* %27
  store i64 0, i64* %29
  br label %655

; <label>:355:                                    ; preds = %30
  %356 = load i64, i64* %29
  store i64 %356, i64* %4
  %357 = load i32, i32* @x.519
  %358 = load i32, i32* @y.520
  %359 = add i32 %357, -295361869
  %360 = sub i32 %359, 1
  %361 = sub i32 %360, -295361869
  %362 = sub i32 %357, 1
  %363 = mul i32 %357, %361
  %364 = urem i32 %363, 2
  %365 = icmp eq i32 %364, 0
  %366 = icmp slt i32 %358, 10
  %367 = xor i1 %365, true
  %368 = xor i1 %366, true
  %369 = xor i1 true, true
  %370 = and i1 %367, true
  %371 = and i1 %365, %369
  %372 = and i1 %368, true
  %373 = and i1 %366, %369
  %374 = or i1 %370, %371
  %375 = or i1 %372, %373
  %376 = xor i1 %374, %375
  %377 = or i1 %367, %368
  %378 = xor i1 %377, true
  %379 = or i1 true, %369
  %380 = and i1 %378, %379
  %381 = or i1 %376, %380
  %382 = or i1 %365, %366
  %383 = select i1 %381, i32 -420392780, i32 1010089138
  store i32 %383, i32* %27
  br label %655

; <label>:384:                                    ; preds = %30
  %385 = load volatile i32**, i32*** %5
  %386 = load volatile i64, i64* %4
  %387 = getelementptr inbounds i32*, i32** %385, i64 %386
  %388 = load volatile i32***, i32**** %11
  store i32** %387, i32*** %388, align 8
  %389 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %390 = bitcast %"class.std::deque"* %389 to %"class.std::_Deque_base"*
  %391 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %390, i32 0, i32 0
  %392 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %391, i32 0, i32 2
  %393 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %392, i32 0, i32 3
  %394 = load i32**, i32*** %393, align 8
  %395 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %396 = bitcast %"class.std::deque"* %395 to %"class.std::_Deque_base"*
  %397 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %396, i32 0, i32 0
  %398 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %397, i32 0, i32 3
  %399 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %398, i32 0, i32 3
  %400 = load i32**, i32*** %399, align 8
  %401 = getelementptr inbounds i32*, i32** %400, i64 1
  %402 = load volatile i32***, i32**** %11
  %403 = load i32**, i32*** %402, align 8
  %404 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %394, i32** %401, i32** %403)
  %405 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %406 = bitcast %"class.std::deque"* %405 to %"class.std::_Deque_base"*
  %407 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %408 = bitcast %"class.std::deque"* %407 to %"class.std::_Deque_base"*
  %409 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %408, i32 0, i32 0
  %410 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %409, i32 0, i32 0
  %411 = load i32**, i32*** %410, align 8
  %412 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %413 = bitcast %"class.std::deque"* %412 to %"class.std::_Deque_base"*
  %414 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %413, i32 0, i32 0
  %415 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %414, i32 0, i32 1
  %416 = load i64, i64* %415, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %406, i32** %411, i64 %416) #3
  %417 = load volatile i32***, i32**** %9
  %418 = load i32**, i32*** %417, align 8
  %419 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %420 = bitcast %"class.std::deque"* %419 to %"class.std::_Deque_base"*
  %421 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %420, i32 0, i32 0
  %422 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %421, i32 0, i32 0
  store i32** %418, i32*** %422, align 8
  %423 = load volatile i64*, i64** %10
  %424 = load i64, i64* %423, align 8
  %425 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %426 = bitcast %"class.std::deque"* %425 to %"class.std::_Deque_base"*
  %427 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %426, i32 0, i32 0
  %428 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %427, i32 0, i32 1
  store i64 %424, i64* %428, align 8
  %429 = load i32, i32* @x.519
  %430 = load i32, i32* @y.520
  %431 = add i32 %429, 1015874787
  %432 = sub i32 %431, 1
  %433 = sub i32 %432, 1015874787
  %434 = sub i32 %429, 1
  %435 = mul i32 %429, %433
  %436 = urem i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = icmp slt i32 %430, 10
  %439 = xor i1 %437, true
  %440 = xor i1 %438, true
  %441 = xor i1 true, true
  %442 = and i1 %439, true
  %443 = and i1 %437, %441
  %444 = and i1 %440, true
  %445 = and i1 %438, %441
  %446 = or i1 %442, %443
  %447 = or i1 %444, %445
  %448 = xor i1 %446, %447
  %449 = or i1 %439, %440
  %450 = xor i1 %449, true
  %451 = or i1 true, %441
  %452 = and i1 %450, %451
  %453 = or i1 %448, %452
  %454 = or i1 %437, %438
  %455 = select i1 %453, i32 1588567483, i32 1010089138
  store i32 %455, i32* %27
  br label %655

; <label>:456:                                    ; preds = %30
  store i32 1603879477, i32* %27
  br label %655

; <label>:457:                                    ; preds = %30
  %458 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %459 = bitcast %"class.std::deque"* %458 to %"class.std::_Deque_base"*
  %460 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %459, i32 0, i32 0
  %461 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %460, i32 0, i32 2
  %462 = load volatile i32***, i32**** %11
  %463 = load i32**, i32*** %462, align 8
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %461, i32** %463) #3
  %464 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %465 = bitcast %"class.std::deque"* %464 to %"class.std::_Deque_base"*
  %466 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %465, i32 0, i32 0
  %467 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %466, i32 0, i32 3
  %468 = load volatile i32***, i32**** %11
  %469 = load i32**, i32*** %468, align 8
  %470 = load volatile i64*, i64** %13
  %471 = load i64, i64* %470, align 8
  %472 = getelementptr inbounds i32*, i32** %469, i64 %471
  %473 = getelementptr inbounds i32*, i32** %472, i64 -1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %467, i32** %473) #3
  ret void

; <label>:474:                                    ; preds = %30
  %475 = alloca %"class.std::deque"*, align 8
  %476 = alloca i64, align 8
  %477 = alloca i8, align 1
  %478 = alloca i64, align 8
  %479 = alloca i64, align 8
  %480 = alloca i32**, align 8
  %481 = alloca i64, align 8
  %482 = alloca i32**, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %475, align 8
  store i64 %1, i64* %476, align 8
  %483 = zext i1 %2 to i8
  store i8 %483, i8* %477, align 1
  %484 = load %"class.std::deque"*, %"class.std::deque"** %475, align 8
  %485 = bitcast %"class.std::deque"* %484 to %"class.std::_Deque_base"*
  %486 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %485, i32 0, i32 0
  %487 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %486, i32 0, i32 3
  %488 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %487, i32 0, i32 3
  %489 = load i32**, i32*** %488, align 8
  %490 = bitcast %"class.std::deque"* %484 to %"class.std::_Deque_base"*
  %491 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %490, i32 0, i32 0
  %492 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %491, i32 0, i32 2
  %493 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %492, i32 0, i32 3
  %494 = load i32**, i32*** %493, align 8
  %495 = ptrtoint i32** %489 to i64
  %496 = ptrtoint i32** %494 to i64
  %497 = add i64 %495, 4216913653196826257
  %498 = sub i64 %497, %496
  %499 = sub i64 %498, 4216913653196826257
  %500 = sub i64 %495, %496
  %501 = mul i64 %499, %496
  %502 = sub i64 %495, -575097645619657241
  %503 = sub i64 %502, %496
  %504 = add i64 %503, -575097645619657241
  %505 = sub i64 %495, %496
  %506 = mul i64 %504, %496
  %507 = sub i64 0, %495
  %508 = add i64 0, %507
  %509 = sub i64 0, %495
  %510 = sub i64 %508, -8475714057501222241
  %511 = add i64 %510, %496
  %512 = add i64 %511, -8475714057501222241
  %513 = add i64 %508, %496
  %514 = sub i64 %495, 247240040364674429
  %515 = sub i64 %514, %496
  %516 = add i64 %515, 247240040364674429
  %517 = sub i64 %495, %496
  %518 = mul i64 %516, %496
  %519 = add i64 %495, -6557742415982037743
  %520 = sub i64 %519, %496
  %521 = sub i64 %520, -6557742415982037743
  %522 = sub i64 %495, %496
  %523 = mul i64 %521, %496
  %524 = add i64 %495, -7324234954262728283
  %525 = sub i64 %524, %496
  %526 = sub i64 %525, -7324234954262728283
  %527 = sub i64 %495, %496
  %528 = shl i64 %526, 8
  %529 = shl i64 %526, 8
  %530 = add i64 0, 9095864453693734422
  %531 = sub i64 %530, %526
  %532 = sub i64 %531, 9095864453693734422
  %533 = sub i64 0, %526
  %534 = add i64 %532, -51376325733766097
  %535 = add i64 %534, 8
  %536 = sub i64 %535, -51376325733766097
  %537 = add i64 %532, 8
  %538 = sdiv exact i64 %526, 8
  %539 = add i64 0, -8960700217121216875
  %540 = sub i64 %539, %538
  %541 = sub i64 %540, -8960700217121216875
  %542 = sub i64 0, %538
  %543 = add i64 %541, 3995775266704516121
  %544 = add i64 %543, 1
  %545 = sub i64 %544, 3995775266704516121
  %546 = add i64 %541, 1
  %547 = sub i64 0, 1
  %548 = add i64 %538, %547
  %549 = sub i64 %538, 1
  %550 = mul i64 %548, 1
  %551 = sub i64 0, %538
  %552 = sub i64 0, 1
  %553 = add i64 %551, %552
  %554 = sub i64 0, %553
  %555 = add nsw i64 %538, 1
  store i64 %554, i64* %478, align 8
  %556 = load i64, i64* %478, align 8
  %557 = load i64, i64* %476, align 8
  %558 = sub i64 0, 2784068373380995797
  %559 = sub i64 %558, %556
  %560 = add i64 %559, 2784068373380995797
  %561 = sub i64 0, %556
  %562 = sub i64 0, %557
  %563 = sub i64 %560, %562
  %564 = add i64 %560, %557
  %565 = sub i64 0, %557
  %566 = add i64 %556, %565
  %567 = sub i64 %556, %557
  %568 = mul i64 %566, %557
  %569 = sub i64 %556, -552375773674256525
  %570 = add i64 %569, %557
  %571 = add i64 %570, -552375773674256525
  %572 = add i64 %556, %557
  store i64 %571, i64* %479, align 8
  %573 = bitcast %"class.std::deque"* %484 to %"class.std::_Deque_base"*
  %574 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %573, i32 0, i32 0
  %575 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %574, i32 0, i32 1
  %576 = load i64, i64* %575, align 8
  %577 = load i64, i64* %479, align 8
  %578 = shl i64 2, %577
  %579 = sub i64 0, %577
  %580 = add i64 2, %579
  %581 = sub i64 2, %577
  %582 = mul i64 %580, %577
  %583 = sub i64 0, %577
  %584 = add i64 2, %583
  %585 = sub i64 2, %577
  %586 = mul i64 %584, %577
  %587 = mul i64 2, %577
  %588 = icmp ugt i64 %576, %587
  store i32 1366966598, i32* %27
  br label %655

; <label>:589:                                    ; preds = %30
  store i32 22445652, i32* %27
  br label %655

; <label>:590:                                    ; preds = %30
  %591 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %592 = bitcast %"class.std::deque"* %591 to %"class.std::_Deque_base"*
  %593 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %592, i32 0, i32 0
  %594 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %593, i32 0, i32 2
  %595 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %594, i32 0, i32 3
  %596 = load i32**, i32*** %595, align 8
  %597 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %598 = bitcast %"class.std::deque"* %597 to %"class.std::_Deque_base"*
  %599 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %598, i32 0, i32 0
  %600 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %599, i32 0, i32 3
  %601 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %600, i32 0, i32 3
  %602 = load i32**, i32*** %601, align 8
  %603 = getelementptr inbounds i32*, i32** %602, i64 1
  %604 = load volatile i32***, i32**** %11
  %605 = load i32**, i32*** %604, align 8
  %606 = load volatile i64*, i64** %13
  %607 = load i64, i64* %606, align 8
  %608 = getelementptr inbounds i32*, i32** %605, i64 %607
  %609 = call i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32** %596, i32** %603, i32** %608)
  store i32 -1426006019, i32* %27
  br label %655

; <label>:610:                                    ; preds = %30
  %611 = load volatile i32**, i32*** %5
  %612 = load volatile i64, i64* %4
  %613 = getelementptr inbounds i32*, i32** %611, i64 %612
  %614 = load volatile i32***, i32**** %11
  store i32** %613, i32*** %614, align 8
  %615 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %616 = bitcast %"class.std::deque"* %615 to %"class.std::_Deque_base"*
  %617 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %616, i32 0, i32 0
  %618 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %617, i32 0, i32 2
  %619 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %618, i32 0, i32 3
  %620 = load i32**, i32*** %619, align 8
  %621 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %622 = bitcast %"class.std::deque"* %621 to %"class.std::_Deque_base"*
  %623 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %622, i32 0, i32 0
  %624 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %623, i32 0, i32 3
  %625 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %624, i32 0, i32 3
  %626 = load i32**, i32*** %625, align 8
  %627 = getelementptr inbounds i32*, i32** %626, i64 1
  %628 = load volatile i32***, i32**** %11
  %629 = load i32**, i32*** %628, align 8
  %630 = call i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32** %620, i32** %627, i32** %629)
  %631 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %632 = bitcast %"class.std::deque"* %631 to %"class.std::_Deque_base"*
  %633 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %634 = bitcast %"class.std::deque"* %633 to %"class.std::_Deque_base"*
  %635 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %634, i32 0, i32 0
  %636 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %635, i32 0, i32 0
  %637 = load i32**, i32*** %636, align 8
  %638 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %639 = bitcast %"class.std::deque"* %638 to %"class.std::_Deque_base"*
  %640 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %639, i32 0, i32 0
  %641 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %640, i32 0, i32 1
  %642 = load i64, i64* %641, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE17_M_deallocate_mapEPPim(%"class.std::_Deque_base"* %632, i32** %637, i64 %642) #3
  %643 = load volatile i32***, i32**** %9
  %644 = load i32**, i32*** %643, align 8
  %645 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %646 = bitcast %"class.std::deque"* %645 to %"class.std::_Deque_base"*
  %647 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %646, i32 0, i32 0
  %648 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %647, i32 0, i32 0
  store i32** %644, i32*** %648, align 8
  %649 = load volatile i64*, i64** %10
  %650 = load i64, i64* %649, align 8
  %651 = load volatile %"class.std::deque"*, %"class.std::deque"** %8
  %652 = bitcast %"class.std::deque"* %651 to %"class.std::_Deque_base"*
  %653 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %652, i32 0, i32 0
  %654 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %653, i32 0, i32 1
  store i64 %650, i64* %654, align 8
  store i32 -420392780, i32* %27
  br label %655

; <label>:655:                                    ; preds = %610, %590, %589, %474, %456, %384, %355, %354, %351, %305, %304, %303, %257, %241, %224, %209, %208, %180, %152, %149, %126, %123, %53, %33, %32
  br label %30
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt4copyIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13copy_backwardIPPiS1_ET0_T_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %11)
  ret i32** %12
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt14__copy_move_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.525
  %8 = load i32, i32* @y.526
  %9 = sub i32 0, 1
  %10 = add i32 %7, %9
  %11 = sub i32 %7, 1
  %12 = mul i32 %7, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %6
  %15 = icmp slt i32 %8, 10
  store i1 %15, i1* %5
  %16 = alloca i32
  store i32 180341338, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %79
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 180341338, label %20
    i32 1668201120, label %40
    i32 -1636101109, label %66
    i32 1828639508, label %68
  ]

; <label>:19:                                     ; preds = %17
  br label %79

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %6
  %22 = load volatile i1, i1* %5
  %23 = xor i1 %21, true
  %24 = xor i1 %22, true
  %25 = xor i1 true, true
  %26 = and i1 %23, true
  %27 = and i1 %21, %25
  %28 = and i1 %24, true
  %29 = and i1 %22, %25
  %30 = or i1 %26, %27
  %31 = or i1 %28, %29
  %32 = xor i1 %30, %31
  %33 = or i1 %23, %24
  %34 = xor i1 %33, true
  %35 = or i1 true, %25
  %36 = and i1 %34, %35
  %37 = or i1 %32, %36
  %38 = or i1 %21, %22
  %39 = select i1 %37, i32 1668201120, i32 1828639508
  store i32 %39, i32* %16
  br label %79

; <label>:40:                                     ; preds = %17
  %41 = alloca i32**, align 8
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  store i32** %0, i32*** %41, align 8
  store i32** %1, i32*** %42, align 8
  store i32** %2, i32*** %43, align 8
  %44 = load i32**, i32*** %41, align 8
  %45 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %44)
  %46 = load i32**, i32*** %42, align 8
  %47 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %46)
  %48 = load i32**, i32*** %43, align 8
  %49 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %48)
  %50 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %45, i32** %47, i32** %49)
  store i32** %50, i32*** %4
  %51 = load i32, i32* @x.525
  %52 = load i32, i32* @y.526
  %53 = add i32 %51, -1907300001
  %54 = sub i32 %53, 1
  %55 = sub i32 %54, -1907300001
  %56 = sub i32 %51, 1
  %57 = mul i32 %51, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %52, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1636101109, i32 1828639508
  store i32 %65, i32* %16
  br label %79

; <label>:66:                                     ; preds = %17
  %67 = load volatile i32**, i32*** %4
  ret i32** %67

; <label>:68:                                     ; preds = %17
  %69 = alloca i32**, align 8
  %70 = alloca i32**, align 8
  %71 = alloca i32**, align 8
  store i32** %0, i32*** %69, align 8
  store i32** %1, i32*** %70, align 8
  store i32** %2, i32*** %71, align 8
  %72 = load i32**, i32*** %69, align 8
  %73 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %72)
  %74 = load i32**, i32*** %70, align 8
  %75 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %74)
  %76 = load i32**, i32*** %71, align 8
  %77 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %76)
  %78 = call i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %73, i32** %75, i32** %77)
  store i32 1668201120, i32* %16
  br label %79

; <label>:79:                                     ; preds = %68, %40, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZSt12__miter_baseIPPiENSt11_Miter_baseIT_E13iterator_typeES3_(i32**) #5 comdat {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.527
  %6 = load i32, i32* @y.528
  %7 = add i32 %5, 277670552
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 277670552
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -128724582, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %52
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -128724582, label %19
    i32 241725780, label %27
    i32 564297829, label %46
    i32 107563171, label %48
  ]

; <label>:18:                                     ; preds = %16
  br label %52

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 241725780, i32 107563171
  store i32 %26, i32* %15
  br label %52

; <label>:27:                                     ; preds = %16
  %28 = alloca i32**, align 8
  store i32** %0, i32*** %28, align 8
  %29 = load i32**, i32*** %28, align 8
  %30 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %29)
  store i32** %30, i32*** %2
  %31 = load i32, i32* @x.527
  %32 = load i32, i32* @y.528
  %33 = add i32 %31, 767168377
  %34 = sub i32 %33, 1
  %35 = sub i32 %34, 767168377
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 564297829, i32 107563171
  store i32 %45, i32* %15
  br label %52

; <label>:46:                                     ; preds = %16
  %47 = load volatile i32**, i32*** %2
  ret i32** %47

; <label>:48:                                     ; preds = %16
  %49 = alloca i32**, align 8
  store i32** %0, i32*** %49, align 8
  %50 = load i32**, i32*** %49, align 8
  %51 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %50)
  store i32 241725780, i32* %15
  br label %52

; <label>:52:                                     ; preds = %48, %27, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt13__copy_move_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i8, align 1
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32**, i32*** %4, align 8
  %9 = load i32**, i32*** %5, align 8
  %10 = load i32**, i32*** %6, align 8
  %11 = call i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32** %8, i32** %9, i32** %10)
  ret i32** %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32**) #0 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  %4 = call i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32** %3)
  ret i32** %4
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt11__copy_moveILb0ELb1ESt26random_access_iterator_tagE8__copy_mIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i32**
  %5 = alloca i64
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i32**, align 8
  %9 = alloca i64, align 8
  store i32** %0, i32*** %6, align 8
  store i32** %1, i32*** %7, align 8
  store i32** %2, i32*** %8, align 8
  %10 = load i32**, i32*** %7, align 8
  %11 = load i32**, i32*** %6, align 8
  %12 = ptrtoint i32** %10 to i64
  %13 = ptrtoint i32** %11 to i64
  %14 = sub i64 %12, 4266679890712934545
  %15 = sub i64 %14, %13
  %16 = add i64 %15, 4266679890712934545
  %17 = sub i64 %12, %13
  %18 = sdiv exact i64 %16, 8
  store i64 %18, i64* %9, align 8
  %19 = load i64, i64* %9, align 8
  store i64 %19, i64* %5
  %20 = alloca i32
  store i32 -1534779157, i32* %20
  br label %21

; <label>:21:                                     ; preds = %3, %100
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 -1534779157, label %24
    i32 1450183555, label %28
    i32 -1277170840, label %35
    i32 -1580053038, label %63
    i32 1270944072, label %94
    i32 -1943961844, label %96
  ]

; <label>:23:                                     ; preds = %21
  br label %100

; <label>:24:                                     ; preds = %21
  %25 = load volatile i64, i64* %5
  %26 = icmp ne i64 %25, 0
  %27 = select i1 %26, i32 1450183555, i32 -1277170840
  store i32 %27, i32* %20
  br label %100

; <label>:28:                                     ; preds = %21
  %29 = load i32**, i32*** %8, align 8
  %30 = bitcast i32** %29 to i8*
  %31 = load i32**, i32*** %6, align 8
  %32 = bitcast i32** %31 to i8*
  %33 = load i64, i64* %9, align 8
  %34 = mul i64 8, %33
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %30, i8* %32, i64 %34, i32 8, i1 false)
  store i32 -1277170840, i32* %20
  br label %100

; <label>:35:                                     ; preds = %21
  %36 = load i32, i32* @x.533
  %37 = load i32, i32* @y.534
  %38 = add i32 %36, 1756816853
  %39 = sub i32 %38, 1
  %40 = sub i32 %39, 1756816853
  %41 = sub i32 %36, 1
  %42 = mul i32 %36, %40
  %43 = urem i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = icmp slt i32 %37, 10
  %46 = xor i1 %44, true
  %47 = xor i1 %45, true
  %48 = xor i1 false, true
  %49 = and i1 %46, false
  %50 = and i1 %44, %48
  %51 = and i1 %47, false
  %52 = and i1 %45, %48
  %53 = or i1 %49, %50
  %54 = or i1 %51, %52
  %55 = xor i1 %53, %54
  %56 = or i1 %46, %47
  %57 = xor i1 %56, true
  %58 = or i1 false, %48
  %59 = and i1 %57, %58
  %60 = or i1 %55, %59
  %61 = or i1 %44, %45
  %62 = select i1 %60, i32 -1580053038, i32 -1943961844
  store i32 %62, i32* %20
  br label %100

; <label>:63:                                     ; preds = %21
  %64 = load i32**, i32*** %8, align 8
  %65 = load i64, i64* %9, align 8
  %66 = getelementptr inbounds i32*, i32** %64, i64 %65
  store i32** %66, i32*** %4
  %67 = load i32, i32* @x.533
  %68 = load i32, i32* @y.534
  %69 = sub i32 %67, -1989507612
  %70 = sub i32 %69, 1
  %71 = add i32 %70, -1989507612
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = xor i1 %75, true
  %78 = xor i1 %76, true
  %79 = xor i1 true, true
  %80 = and i1 %77, true
  %81 = and i1 %75, %79
  %82 = and i1 %78, true
  %83 = and i1 %76, %79
  %84 = or i1 %80, %81
  %85 = or i1 %82, %83
  %86 = xor i1 %84, %85
  %87 = or i1 %77, %78
  %88 = xor i1 %87, true
  %89 = or i1 true, %79
  %90 = and i1 %88, %89
  %91 = or i1 %86, %90
  %92 = or i1 %75, %76
  %93 = select i1 %91, i32 1270944072, i32 -1943961844
  store i32 %93, i32* %20
  br label %100

; <label>:94:                                     ; preds = %21
  %95 = load volatile i32**, i32*** %4
  ret i32** %95

; <label>:96:                                     ; preds = %21
  %97 = load i32**, i32*** %8, align 8
  %98 = load i64, i64* %9, align 8
  %99 = getelementptr inbounds i32*, i32** %97, i64 %98
  store i32 -1580053038, i32* %20
  br label %100

; <label>:100:                                    ; preds = %96, %63, %35, %28, %24, %23
  br label %21
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt10_Iter_baseIPPiLb0EE7_S_baseES1_(i32**) #5 comdat align 2 {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt23__copy_move_backward_a2ILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**, align 8
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  store i32** %0, i32*** %4, align 8
  store i32** %1, i32*** %5, align 8
  store i32** %2, i32*** %6, align 8
  %7 = load i32**, i32*** %4, align 8
  %8 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %7)
  %9 = load i32**, i32*** %5, align 8
  %10 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %9)
  %11 = load i32**, i32*** %6, align 8
  %12 = call i32** @_ZSt12__niter_baseIPPiENSt11_Niter_baseIT_E13iterator_typeES3_(i32** %11)
  %13 = call i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32** %8, i32** %10, i32** %12)
  ret i32** %13
}

; Function Attrs: noinline uwtable
define linkonce_odr i32** @_ZSt22__copy_move_backward_aILb0EPPiS1_ET1_T0_S3_S2_(i32**, i32**, i32**) #0 comdat {
  %4 = alloca i32**
  %5 = alloca i1
  %6 = alloca i1
  %7 = load i32, i32* @x.539
  %8 = load i32, i32* @y.540
  %9 = add i32 %7, -1288843392
  %10 = sub i32 %9, 1
  %11 = sub i32 %10, -1288843392
  %12 = sub i32 %7, 1
  %13 = mul i32 %7, %11
  %14 = urem i32 %13, 2
  %15 = icmp eq i32 %14, 0
  store i1 %15, i1* %6
  %16 = icmp slt i32 %8, 10
  store i1 %16, i1* %5
  %17 = alloca i32
  store i32 -1682172859, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %87
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -1682172859, label %21
    i32 -1467875020, label %41
    i32 -259477146, label %76
    i32 -49919458, label %78
  ]

; <label>:20:                                     ; preds = %18
  br label %87

; <label>:21:                                     ; preds = %18
  %22 = load volatile i1, i1* %6
  %23 = load volatile i1, i1* %5
  %24 = xor i1 %22, true
  %25 = xor i1 %23, true
  %26 = xor i1 true, true
  %27 = and i1 %24, true
  %28 = and i1 %22, %26
  %29 = and i1 %25, true
  %30 = and i1 %23, %26
  %31 = or i1 %27, %28
  %32 = or i1 %29, %30
  %33 = xor i1 %31, %32
  %34 = or i1 %24, %25
  %35 = xor i1 %34, true
  %36 = or i1 true, %26
  %37 = and i1 %35, %36
  %38 = or i1 %33, %37
  %39 = or i1 %22, %23
  %40 = select i1 %38, i32 -1467875020, i32 -49919458
  store i32 %40, i32* %17
  br label %87

; <label>:41:                                     ; preds = %18
  %42 = alloca i32**, align 8
  %43 = alloca i32**, align 8
  %44 = alloca i32**, align 8
  %45 = alloca i8, align 1
  store i32** %0, i32*** %42, align 8
  store i32** %1, i32*** %43, align 8
  store i32** %2, i32*** %44, align 8
  store i8 1, i8* %45, align 1
  %46 = load i32**, i32*** %42, align 8
  %47 = load i32**, i32*** %43, align 8
  %48 = load i32**, i32*** %44, align 8
  %49 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %46, i32** %47, i32** %48)
  store i32** %49, i32*** %4
  %50 = load i32, i32* @x.539
  %51 = load i32, i32* @y.540
  %52 = sub i32 0, 1
  %53 = add i32 %50, %52
  %54 = sub i32 %50, 1
  %55 = mul i32 %50, %53
  %56 = urem i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = icmp slt i32 %51, 10
  %59 = xor i1 %57, true
  %60 = xor i1 %58, true
  %61 = xor i1 false, true
  %62 = and i1 %59, false
  %63 = and i1 %57, %61
  %64 = and i1 %60, false
  %65 = and i1 %58, %61
  %66 = or i1 %62, %63
  %67 = or i1 %64, %65
  %68 = xor i1 %66, %67
  %69 = or i1 %59, %60
  %70 = xor i1 %69, true
  %71 = or i1 false, %61
  %72 = and i1 %70, %71
  %73 = or i1 %68, %72
  %74 = or i1 %57, %58
  %75 = select i1 %73, i32 -259477146, i32 -49919458
  store i32 %75, i32* %17
  br label %87

; <label>:76:                                     ; preds = %18
  %77 = load volatile i32**, i32*** %4
  ret i32** %77

; <label>:78:                                     ; preds = %18
  %79 = alloca i32**, align 8
  %80 = alloca i32**, align 8
  %81 = alloca i32**, align 8
  %82 = alloca i8, align 1
  store i32** %0, i32*** %79, align 8
  store i32** %1, i32*** %80, align 8
  store i32** %2, i32*** %81, align 8
  store i8 1, i8* %82, align 1
  %83 = load i32**, i32*** %79, align 8
  %84 = load i32**, i32*** %80, align 8
  %85 = load i32**, i32*** %81, align 8
  %86 = call i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32** %83, i32** %84, i32** %85)
  store i32 -1467875020, i32* %17
  br label %87

; <label>:87:                                     ; preds = %78, %41, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32** @_ZNSt20__copy_move_backwardILb0ELb1ESt26random_access_iterator_tagE13__copy_move_bIPiEEPT_PKS4_S7_S5_(i32**, i32**, i32**) #5 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i32**, align 8
  %6 = alloca i32**, align 8
  %7 = alloca i32**, align 8
  %8 = alloca i64, align 8
  store i32** %0, i32*** %5, align 8
  store i32** %1, i32*** %6, align 8
  store i32** %2, i32*** %7, align 8
  %9 = load i32**, i32*** %6, align 8
  %10 = load i32**, i32*** %5, align 8
  %11 = ptrtoint i32** %9 to i64
  %12 = ptrtoint i32** %10 to i64
  %13 = sub i64 0, %12
  %14 = add i64 %11, %13
  %15 = sub i64 %11, %12
  %16 = sdiv exact i64 %14, 8
  store i64 %16, i64* %8, align 8
  %17 = load i64, i64* %8, align 8
  store i64 %17, i64* %4
  %18 = alloca i32
  store i32 527359905, i32* %18
  br label %19

; <label>:19:                                     ; preds = %3, %47
  %20 = load i32, i32* %18
  switch i32 %20, label %21 [
    i32 527359905, label %22
    i32 -1647692661, label %26
    i32 1682083945, label %39
  ]

; <label>:21:                                     ; preds = %19
  br label %47

; <label>:22:                                     ; preds = %19
  %23 = load volatile i64, i64* %4
  %24 = icmp ne i64 %23, 0
  %25 = select i1 %24, i32 -1647692661, i32 1682083945
  store i32 %25, i32* %18
  br label %47

; <label>:26:                                     ; preds = %19
  %27 = load i32**, i32*** %7, align 8
  %28 = load i64, i64* %8, align 8
  %29 = add i64 0, -4242115176445450184
  %30 = sub i64 %29, %28
  %31 = sub i64 %30, -4242115176445450184
  %32 = sub i64 0, %28
  %33 = getelementptr inbounds i32*, i32** %27, i64 %31
  %34 = bitcast i32** %33 to i8*
  %35 = load i32**, i32*** %5, align 8
  %36 = bitcast i32** %35 to i8*
  %37 = load i64, i64* %8, align 8
  %38 = mul i64 8, %37
  call void @llvm.memmove.p0i8.p0i8.i64(i8* %34, i8* %36, i64 %38, i32 8, i1 false)
  store i32 1682083945, i32* %18
  br label %47

; <label>:39:                                     ; preds = %19
  %40 = load i32**, i32*** %7, align 8
  %41 = load i64, i64* %8, align 8
  %42 = add i64 0, 8131273137242364593
  %43 = sub i64 %42, %41
  %44 = sub i64 %43, 8131273137242364593
  %45 = sub i64 0, %41
  %46 = getelementptr inbounds i32*, i32** %40, i64 %44
  ret i32** %46

; <label>:47:                                     ; preds = %26, %22, %21
  br label %19
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZNKSt5dequeIiSaIiEE5emptyEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 3
  %7 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %8 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %7, i32 0, i32 0
  %9 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %8, i32 0, i32 2
  %10 = call zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32) %6, %"struct.std::_Deque_iterator"* dereferenceable(32) %9) #3
  ret i1 %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr zeroext i1 @_ZSteqIiRiPiEbRKSt15_Deque_iteratorIT_T0_T1_ES8_(%"struct.std::_Deque_iterator"* dereferenceable(32), %"struct.std::_Deque_iterator"* dereferenceable(32)) #5 comdat {
  %3 = alloca %"struct.std::_Deque_iterator"*, align 8
  %4 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %3, align 8
  store %"struct.std::_Deque_iterator"* %1, %"struct.std::_Deque_iterator"** %4, align 8
  %5 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %3, align 8
  %6 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %5, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %4, align 8
  %9 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %8, i32 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = icmp eq i32* %7, %10
  ret i1 %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNSt5dequeIiSaIiEE5frontEv(%"class.std::deque"*) #5 comdat align 2 {
  %2 = alloca i32*
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.547
  %6 = load i32, i32* @y.548
  %7 = sub i32 %5, -1662736420
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -1662736420
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 401898354, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %65
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 401898354, label %19
    i32 -1799760236, label %39
    i32 -1598417895, label %58
    i32 1930199735, label %60
  ]

; <label>:18:                                     ; preds = %16
  br label %65

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1799760236, i32 1930199735
  store i32 %38, i32* %15
  br label %65

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.std::deque"*, align 8
  %41 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %40, align 8
  %42 = load %"class.std::deque"*, %"class.std::deque"** %40, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %41, %"class.std::deque"* %42) #3
  %43 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %41) #3
  store i32* %43, i32** %2
  %44 = load i32, i32* @x.547
  %45 = load i32, i32* @y.548
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -1598417895, i32 1930199735
  store i32 %57, i32* %15
  br label %65

; <label>:58:                                     ; preds = %16
  %59 = load volatile i32*, i32** %2
  ret i32* %59

; <label>:60:                                     ; preds = %16
  %61 = alloca %"class.std::deque"*, align 8
  %62 = alloca %"struct.std::_Deque_iterator", align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %61, align 8
  %63 = load %"class.std::deque"*, %"class.std::deque"** %61, align 8
  call void @_ZNSt5dequeIiSaIiEE5beginEv(%"struct.std::_Deque_iterator"* sret %62, %"class.std::deque"* %63) #3
  %64 = call dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"* %62) #3
  store i32 -1799760236, i32* %15
  br label %65

; <label>:65:                                     ; preds = %60, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZNKSt15_Deque_iteratorIiRiPiEdeEv(%"struct.std::_Deque_iterator"*) #5 comdat align 2 {
  %2 = alloca %"struct.std::_Deque_iterator"*, align 8
  store %"struct.std::_Deque_iterator"* %0, %"struct.std::_Deque_iterator"** %2, align 8
  %3 = load %"struct.std::_Deque_iterator"*, %"struct.std::_Deque_iterator"** %2, align 8
  %4 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %3, i32 0, i32 0
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE9pop_frontEv(%"class.std::deque"*) #5 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %2, align 8
  %3 = load %"class.std::deque"*, %"class.std::deque"** %2, align 8
  %4 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %5 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %4, i32 0, i32 0
  %6 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %5, i32 0, i32 2
  %7 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %6, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %10 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %9, i32 0, i32 0
  %11 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %10, i32 0, i32 2
  %12 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %11, i32 0, i32 2
  %13 = load i32*, i32** %12, align 8
  %14 = getelementptr inbounds i32, i32* %13, i64 -1
  %15 = icmp ne i32* %8, %14
  br i1 %15, label %16, label %62

; <label>:16:                                     ; preds = %1
  %17 = load i32, i32* @x.551
  %18 = load i32, i32* @y.552
  %19 = add i32 %17, -1488613783
  %20 = sub i32 %19, 1
  %21 = sub i32 %20, -1488613783
  %22 = sub i32 %17, 1
  %23 = mul i32 %17, %21
  %24 = urem i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = icmp slt i32 %18, 10
  %27 = and i1 %25, %26
  %28 = xor i1 %25, %26
  %29 = or i1 %27, %28
  %30 = or i1 %25, %26
  br i1 %29, label %31, label %151

; <label>:31:                                     ; preds = %16, %151
  %32 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %33 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %32, i32 0, i32 0
  %34 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %33 to %"class.std::allocator.5"*
  %35 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %36 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %35, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %36, i32 0, i32 2
  %38 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %37, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = load i32, i32* @x.551
  %41 = load i32, i32* @y.552
  %42 = add i32 %40, 1994311911
  %43 = sub i32 %42, 1
  %44 = sub i32 %43, 1994311911
  %45 = sub i32 %40, 1
  %46 = mul i32 %40, %44
  %47 = urem i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = icmp slt i32 %41, 10
  %50 = and i1 %48, %49
  %51 = xor i1 %48, %49
  %52 = or i1 %50, %51
  %53 = or i1 %48, %49
  br i1 %52, label %54, label %151

; <label>:54:                                     ; preds = %31
  invoke void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %34, i32* %39)
          to label %55 unwind label %148

; <label>:55:                                     ; preds = %54
  %56 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = getelementptr inbounds i32, i32* %60, i32 1
  store i32* %61, i32** %59, align 8
  br label %106

; <label>:62:                                     ; preds = %1
  %63 = load i32, i32* @x.551
  %64 = load i32, i32* @y.552
  %65 = sub i32 %63, -1122453316
  %66 = sub i32 %65, 1
  %67 = add i32 %66, -1122453316
  %68 = sub i32 %63, 1
  %69 = mul i32 %63, %67
  %70 = urem i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = icmp slt i32 %64, 10
  %73 = xor i1 %71, true
  %74 = xor i1 %72, true
  %75 = xor i1 false, true
  %76 = and i1 %73, false
  %77 = and i1 %71, %75
  %78 = and i1 %74, false
  %79 = and i1 %72, %75
  %80 = or i1 %76, %77
  %81 = or i1 %78, %79
  %82 = xor i1 %80, %81
  %83 = or i1 %73, %74
  %84 = xor i1 %83, true
  %85 = or i1 false, %75
  %86 = and i1 %84, %85
  %87 = or i1 %82, %86
  %88 = or i1 %71, %72
  br i1 %87, label %89, label %160

; <label>:89:                                     ; preds = %62, %160
  %90 = load i32, i32* @x.551
  %91 = load i32, i32* @y.552
  %92 = sub i32 %90, 1675328817
  %93 = sub i32 %92, 1
  %94 = add i32 %93, 1675328817
  %95 = sub i32 %90, 1
  %96 = mul i32 %90, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %91, 10
  %100 = and i1 %98, %99
  %101 = xor i1 %98, %99
  %102 = or i1 %100, %101
  %103 = or i1 %98, %99
  br i1 %102, label %104, label %160

; <label>:104:                                    ; preds = %89
  invoke void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"* %3)
          to label %105 unwind label %148

; <label>:105:                                    ; preds = %104
  br label %106

; <label>:106:                                    ; preds = %105, %55
  %107 = load i32, i32* @x.551
  %108 = load i32, i32* @y.552
  %109 = sub i32 %107, 1115480660
  %110 = sub i32 %109, 1
  %111 = add i32 %110, 1115480660
  %112 = sub i32 %107, 1
  %113 = mul i32 %107, %111
  %114 = urem i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = icmp slt i32 %108, 10
  %117 = and i1 %115, %116
  %118 = xor i1 %115, %116
  %119 = or i1 %117, %118
  %120 = or i1 %115, %116
  br i1 %119, label %121, label %161

; <label>:121:                                    ; preds = %106, %161
  %122 = load i32, i32* @x.551
  %123 = load i32, i32* @y.552
  %124 = sub i32 0, 1
  %125 = add i32 %122, %124
  %126 = sub i32 %122, 1
  %127 = mul i32 %122, %125
  %128 = urem i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = icmp slt i32 %123, 10
  %131 = xor i1 %129, true
  %132 = xor i1 %130, true
  %133 = xor i1 true, true
  %134 = and i1 %131, true
  %135 = and i1 %129, %133
  %136 = and i1 %132, true
  %137 = and i1 %130, %133
  %138 = or i1 %134, %135
  %139 = or i1 %136, %137
  %140 = xor i1 %138, %139
  %141 = or i1 %131, %132
  %142 = xor i1 %141, true
  %143 = or i1 true, %133
  %144 = and i1 %142, %143
  %145 = or i1 %140, %144
  %146 = or i1 %129, %130
  br i1 %145, label %147, label %161

; <label>:147:                                    ; preds = %121
  ret void

; <label>:148:                                    ; preds = %104, %54
  %149 = landingpad { i8*, i32 }
          catch i8* null
  %150 = extractvalue { i8*, i32 } %149, 0
  call void @__clang_call_terminate(i8* %150) #8
  unreachable

; <label>:151:                                    ; preds = %31, %16
  %152 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %153 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %152, i32 0, i32 0
  %154 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %153 to %"class.std::allocator.5"*
  %155 = bitcast %"class.std::deque"* %3 to %"class.std::_Deque_base"*
  %156 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %155, i32 0, i32 0
  %157 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %156, i32 0, i32 2
  %158 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %157, i32 0, i32 0
  %159 = load i32*, i32** %158, align 8
  br label %31

; <label>:160:                                    ; preds = %89, %62
  br label %89

; <label>:161:                                    ; preds = %121, %106
  br label %121
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1), i32*) #0 comdat align 2 {
  %3 = alloca %"class.std::allocator.5"*, align 8
  %4 = alloca i32*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %3, align 8
  store i32* %1, i32** %4, align 8
  %5 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %3, align 8
  %6 = bitcast %"class.std::allocator.5"* %5 to %"class.__gnu_cxx::new_allocator.6"*
  %7 = load i32*, i32** %4, align 8
  call void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.6"* %6, i32* %7)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_pop_front_auxEv(%"class.std::deque"*) #0 comdat align 2 {
  %2 = alloca i1
  %3 = alloca i1
  %4 = load i32, i32* @x.555
  %5 = load i32, i32* @y.556
  %6 = sub i32 0, 1
  %7 = add i32 %4, %6
  %8 = sub i32 %4, 1
  %9 = mul i32 %4, %7
  %10 = urem i32 %9, 2
  %11 = icmp eq i32 %10, 0
  store i1 %11, i1* %3
  %12 = icmp slt i32 %5, 10
  store i1 %12, i1* %2
  %13 = alloca i32
  store i32 2043126787, i32* %13
  br label %14

; <label>:14:                                     ; preds = %1, %120
  %15 = load i32, i32* %13
  switch i32 %15, label %16 [
    i32 2043126787, label %17
    i32 -1548496556, label %37
    i32 661034865, label %85
    i32 72973348, label %86
  ]

; <label>:16:                                     ; preds = %14
  br label %120

; <label>:17:                                     ; preds = %14
  %18 = load volatile i1, i1* %3
  %19 = load volatile i1, i1* %2
  %20 = xor i1 %18, true
  %21 = xor i1 %19, true
  %22 = xor i1 false, true
  %23 = and i1 %20, false
  %24 = and i1 %18, %22
  %25 = and i1 %21, false
  %26 = and i1 %19, %22
  %27 = or i1 %23, %24
  %28 = or i1 %25, %26
  %29 = xor i1 %27, %28
  %30 = or i1 %20, %21
  %31 = xor i1 %30, true
  %32 = or i1 false, %22
  %33 = and i1 %31, %32
  %34 = or i1 %29, %33
  %35 = or i1 %18, %19
  %36 = select i1 %34, i32 -1548496556, i32 72973348
  store i32 %36, i32* %13
  br label %120

; <label>:37:                                     ; preds = %14
  %38 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %38, align 8
  %39 = load %"class.std::deque"*, %"class.std::deque"** %38, align 8
  %40 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %41 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %40) #3
  %42 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43, i32 0, i32 2
  %45 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %44, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %41, i32* %46)
  %47 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %48 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %49 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %48, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %49, i32 0, i32 2
  %51 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %50, i32 0, i32 1
  %52 = load i32*, i32** %51, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %47, i32* %52) #3
  %53 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %54 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %53, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %54, i32 0, i32 2
  %56 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %57 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %56, i32 0, i32 0
  %58 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %57, i32 0, i32 2
  %59 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %58, i32 0, i32 3
  %60 = load i32**, i32*** %59, align 8
  %61 = getelementptr inbounds i32*, i32** %60, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %55, i32** %61) #3
  %62 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %63 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %62, i32 0, i32 0
  %64 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %63, i32 0, i32 2
  %65 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %64, i32 0, i32 1
  %66 = load i32*, i32** %65, align 8
  %67 = bitcast %"class.std::deque"* %39 to %"class.std::_Deque_base"*
  %68 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %67, i32 0, i32 0
  %69 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %68, i32 0, i32 2
  %70 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %69, i32 0, i32 0
  store i32* %66, i32** %70, align 8
  %71 = load i32, i32* @x.555
  %72 = load i32, i32* @y.556
  %73 = sub i32 0, 1
  %74 = add i32 %71, %73
  %75 = sub i32 %71, 1
  %76 = mul i32 %71, %74
  %77 = urem i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = icmp slt i32 %72, 10
  %80 = and i1 %78, %79
  %81 = xor i1 %78, %79
  %82 = or i1 %80, %81
  %83 = or i1 %78, %79
  %84 = select i1 %82, i32 661034865, i32 72973348
  store i32 %84, i32* %13
  br label %120

; <label>:85:                                     ; preds = %14
  ret void

; <label>:86:                                     ; preds = %14
  %87 = alloca %"class.std::deque"*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %87, align 8
  %88 = load %"class.std::deque"*, %"class.std::deque"** %87, align 8
  %89 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %90 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt11_Deque_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"class.std::_Deque_base"* %89) #3
  %91 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %92 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %91, i32 0, i32 0
  %93 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %92, i32 0, i32 2
  %94 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %93, i32 0, i32 0
  %95 = load i32*, i32** %94, align 8
  call void @_ZNSt16allocator_traitsISaIiEE7destroyIiEEvRS0_PT_(%"class.std::allocator.5"* dereferenceable(1) %90, i32* %95)
  %96 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %97 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %98 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %97, i32 0, i32 0
  %99 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %98, i32 0, i32 2
  %100 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %99, i32 0, i32 1
  %101 = load i32*, i32** %100, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %96, i32* %101) #3
  %102 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %103 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %102, i32 0, i32 0
  %104 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %103, i32 0, i32 2
  %105 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %106 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %106, i32 0, i32 2
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 3
  %109 = load i32**, i32*** %108, align 8
  %110 = getelementptr inbounds i32*, i32** %109, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %104, i32** %110) #3
  %111 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %112 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %111, i32 0, i32 0
  %113 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %112, i32 0, i32 2
  %114 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %113, i32 0, i32 1
  %115 = load i32*, i32** %114, align 8
  %116 = bitcast %"class.std::deque"* %88 to %"class.std::_Deque_base"*
  %117 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %116, i32 0, i32 0
  %118 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %117, i32 0, i32 2
  %119 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %118, i32 0, i32 0
  store i32* %115, i32** %119, align 8
  store i32 -1548496556, i32* %13
  br label %120

; <label>:120:                                    ; preds = %86, %37, %17, %16
  br label %14
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE7destroyIiEEvPT_(%"class.__gnu_cxx::new_allocator.6"*, i32*) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.557
  %6 = load i32, i32* @y.558
  %7 = sub i32 %5, -641653613
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -641653613
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -876050819, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %51
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -876050819, label %19
    i32 328028034, label %27
    i32 532304981, label %46
    i32 270156308, label %47
  ]

; <label>:18:                                     ; preds = %16
  br label %51

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 328028034, i32 270156308
  store i32 %26, i32* %15
  br label %51

; <label>:27:                                     ; preds = %16
  %28 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %29 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  store i32* %1, i32** %29, align 8
  %30 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %28, align 8
  %31 = load i32, i32* @x.557
  %32 = load i32, i32* @y.558
  %33 = sub i32 %31, -1176919834
  %34 = sub i32 %33, 1
  %35 = add i32 %34, -1176919834
  %36 = sub i32 %31, 1
  %37 = mul i32 %31, %35
  %38 = urem i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = icmp slt i32 %32, 10
  %41 = and i1 %39, %40
  %42 = xor i1 %39, %40
  %43 = or i1 %41, %42
  %44 = or i1 %39, %40
  %45 = select i1 %43, i32 532304981, i32 270156308
  store i32 %45, i32* %15
  br label %51

; <label>:46:                                     ; preds = %16
  ret void

; <label>:47:                                     ; preds = %16
  %48 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %49 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %48, align 8
  store i32* %1, i32** %49, align 8
  %50 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %48, align 8
  store i32 328028034, i32* %15
  br label %51

; <label>:51:                                     ; preds = %47, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEEC2ERKS4_(%"class.__gnu_cxx::__normal_iterator"*, %"struct.network<int>::edge"** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  %4 = alloca %"struct.network<int>::edge"**, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  store %"struct.network<int>::edge"** %1, %"struct.network<int>::edge"*** %4, align 8
  %5 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %3, align 8
  %6 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %5, i32 0, i32 0
  %7 = load %"struct.network<int>::edge"**, %"struct.network<int>::edge"*** %4, align 8
  %8 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %7, align 8
  store %"struct.network<int>::edge"* %8, %"struct.network<int>::edge"** %6, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) %"struct.network<int>::edge"** @_ZNK9__gnu_cxx17__normal_iteratorIPN7networkIiE4edgeESt6vectorIS3_SaIS3_EEE4baseEv(%"class.__gnu_cxx::__normal_iterator"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator"*, align 8
  store %"class.__gnu_cxx::__normal_iterator"* %0, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %3 = load %"class.__gnu_cxx::__normal_iterator"*, %"class.__gnu_cxx::__normal_iterator"** %2, align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator", %"class.__gnu_cxx::__normal_iterator"* %3, i32 0, i32 0
  ret %"struct.network<int>::edge"** %4
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE12emplace_backIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 {
  %3 = alloca i32*
  %4 = alloca i32*
  %5 = alloca %"class.std::deque"*
  %6 = alloca %"class.std::deque"*, align 8
  %7 = alloca i32*, align 8
  store %"class.std::deque"* %0, %"class.std::deque"** %6, align 8
  store i32* %1, i32** %7, align 8
  %8 = load %"class.std::deque"*, %"class.std::deque"** %6, align 8
  store %"class.std::deque"* %8, %"class.std::deque"** %5
  %9 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %10 = bitcast %"class.std::deque"* %9 to %"class.std::_Deque_base"*
  %11 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %10, i32 0, i32 0
  %12 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %11, i32 0, i32 3
  %13 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %12, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  store i32* %14, i32** %4
  %15 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %16 = bitcast %"class.std::deque"* %15 to %"class.std::_Deque_base"*
  %17 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %16, i32 0, i32 0
  %18 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %17, i32 0, i32 3
  %19 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %18, i32 0, i32 2
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds i32, i32* %20, i64 -1
  store i32* %21, i32** %3
  %22 = alloca i32
  store i32 1815277834, i32* %22
  br label %23

; <label>:23:                                     ; preds = %2, %56
  %24 = load i32, i32* %22
  switch i32 %24, label %25 [
    i32 1815277834, label %26
    i32 1023355111, label %31
    i32 1413888427, label %51
    i32 1034160601, label %55
  ]

; <label>:25:                                     ; preds = %23
  br label %56

; <label>:26:                                     ; preds = %23
  %27 = load volatile i32*, i32** %4
  %28 = load volatile i32*, i32** %3
  %29 = icmp ne i32* %27, %28
  %30 = select i1 %29, i32 1023355111, i32 1413888427
  store i32 %30, i32* %22
  br label %56

; <label>:31:                                     ; preds = %23
  %32 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %33 = bitcast %"class.std::deque"* %32 to %"class.std::_Deque_base"*
  %34 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %33, i32 0, i32 0
  %35 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %34 to %"class.std::allocator.5"*
  %36 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %37 = bitcast %"class.std::deque"* %36 to %"class.std::_Deque_base"*
  %38 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %37, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %38, i32 0, i32 3
  %40 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %39, i32 0, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = load i32*, i32** %7, align 8
  %43 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %42) #3
  call void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %35, i32* %41, i32* dereferenceable(4) %43)
  %44 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  %45 = bitcast %"class.std::deque"* %44 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = getelementptr inbounds i32, i32* %49, i32 1
  store i32* %50, i32** %48, align 8
  store i32 1034160601, i32* %22
  br label %56

; <label>:51:                                     ; preds = %23
  %52 = load i32*, i32** %7, align 8
  %53 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %52) #3
  %54 = load volatile %"class.std::deque"*, %"class.std::deque"** %5
  call void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"* %54, i32* dereferenceable(4) %53)
  store i32 1034160601, i32* %22
  br label %56

; <label>:55:                                     ; preds = %23
  ret void

; <label>:56:                                     ; preds = %51, %31, %26, %25
  br label %23
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1), i32*, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca %"class.std::allocator.5"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.std::allocator.5"* %0, %"class.std::allocator.5"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %4, align 8
  %8 = bitcast %"class.std::allocator.5"* %7 to %"class.__gnu_cxx::new_allocator.6"*
  %9 = load i32*, i32** %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %10) #3
  call void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"* %8, i32* %9, i32* dereferenceable(4) %11)
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt5dequeIiSaIiEE16_M_push_back_auxIJRKiEEEvDpOT_(%"class.std::deque"*, i32* dereferenceable(4)) #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = load i32, i32* @x.567
  %4 = load i32, i32* @y.568
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i32 %4, 10
  %12 = xor i1 %10, true
  %13 = xor i1 %11, true
  %14 = xor i1 true, true
  %15 = and i1 %12, true
  %16 = and i1 %10, %14
  %17 = and i1 %13, true
  %18 = and i1 %11, %14
  %19 = or i1 %15, %16
  %20 = or i1 %17, %18
  %21 = xor i1 %19, %20
  %22 = or i1 %12, %13
  %23 = xor i1 %22, true
  %24 = or i1 true, %14
  %25 = and i1 %23, %24
  %26 = or i1 %21, %25
  %27 = or i1 %10, %11
  br i1 %26, label %28, label %168

; <label>:28:                                     ; preds = %2, %168
  %29 = alloca %"class.std::deque"*, align 8
  %30 = alloca i32*, align 8
  %31 = alloca i8*
  %32 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %29, align 8
  store i32* %1, i32** %30, align 8
  %33 = load %"class.std::deque"*, %"class.std::deque"** %29, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %33, i64 1)
  %34 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %35 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %34)
  %36 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %37 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %36, i32 0, i32 0
  %38 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %37, i32 0, i32 3
  %39 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %38, i32 0, i32 3
  %40 = load i32**, i32*** %39, align 8
  %41 = getelementptr inbounds i32*, i32** %40, i64 1
  store i32* %35, i32** %41, align 8
  %42 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %43 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %42, i32 0, i32 0
  %44 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %43 to %"class.std::allocator.5"*
  %45 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %46 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %45, i32 0, i32 0
  %47 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %46, i32 0, i32 3
  %48 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %47, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = load i32*, i32** %30, align 8
  %51 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %50) #3
  %52 = load i32, i32* @x.567
  %53 = load i32, i32* @y.568
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = xor i1 %59, true
  %62 = xor i1 %60, true
  %63 = xor i1 false, true
  %64 = and i1 %61, false
  %65 = and i1 %59, %63
  %66 = and i1 %62, false
  %67 = and i1 %60, %63
  %68 = or i1 %64, %65
  %69 = or i1 %66, %67
  %70 = xor i1 %68, %69
  %71 = or i1 %61, %62
  %72 = xor i1 %71, true
  %73 = or i1 false, %63
  %74 = and i1 %72, %73
  %75 = or i1 %70, %74
  %76 = or i1 %59, %60
  br i1 %75, label %77, label %168

; <label>:77:                                     ; preds = %28
  invoke void @_ZNSt16allocator_traitsISaIiEE9constructIiJRKiEEEvRS0_PT_DpOT0_(%"class.std::allocator.5"* dereferenceable(1) %44, i32* %49, i32* dereferenceable(4) %51)
          to label %78 unwind label %97

; <label>:78:                                     ; preds = %77
  %79 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %80 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %79, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %80, i32 0, i32 3
  %82 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %83 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %82, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %83, i32 0, i32 3
  %85 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %84, i32 0, i32 3
  %86 = load i32**, i32*** %85, align 8
  %87 = getelementptr inbounds i32*, i32** %86, i64 1
  call void @_ZNSt15_Deque_iteratorIiRiPiE11_M_set_nodeEPS1_(%"struct.std::_Deque_iterator"* %81, i32** %87) #3
  %88 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %89 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %89, i32 0, i32 3
  %91 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %90, i32 0, i32 1
  %92 = load i32*, i32** %91, align 8
  %93 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %94 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %93, i32 0, i32 0
  %95 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %94, i32 0, i32 3
  %96 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %95, i32 0, i32 0
  store i32* %92, i32** %96, align 8
  br label %117

; <label>:97:                                     ; preds = %77
  %98 = landingpad { i8*, i32 }
          catch i8* null
  %99 = extractvalue { i8*, i32 } %98, 0
  store i8* %99, i8** %31, align 8
  %100 = extractvalue { i8*, i32 } %98, 1
  store i32 %100, i32* %32, align 4
  br label %101

; <label>:101:                                    ; preds = %97
  %102 = load i8*, i8** %31, align 8
  %103 = call i8* @__cxa_begin_catch(i8* %102) #3
  %104 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %105 = bitcast %"class.std::deque"* %33 to %"class.std::_Deque_base"*
  %106 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %105, i32 0, i32 0
  %107 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %106, i32 0, i32 3
  %108 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %107, i32 0, i32 3
  %109 = load i32**, i32*** %108, align 8
  %110 = getelementptr inbounds i32*, i32** %109, i64 1
  %111 = load i32*, i32** %110, align 8
  call void @_ZNSt11_Deque_baseIiSaIiEE18_M_deallocate_nodeEPi(%"class.std::_Deque_base"* %104, i32* %111) #3
  invoke void @__cxa_rethrow() #12
          to label %167 unwind label %112

; <label>:112:                                    ; preds = %101
  %113 = landingpad { i8*, i32 }
          cleanup
  %114 = extractvalue { i8*, i32 } %113, 0
  store i8* %114, i8** %31, align 8
  %115 = extractvalue { i8*, i32 } %113, 1
  store i32 %115, i32* %32, align 4
  invoke void @__cxa_end_catch()
          to label %116 unwind label %123

; <label>:116:                                    ; preds = %112
  br label %118

; <label>:117:                                    ; preds = %78
  ret void

; <label>:118:                                    ; preds = %116
  %119 = load i8*, i8** %31, align 8
  %120 = load i32, i32* %32, align 4
  %121 = insertvalue { i8*, i32 } undef, i8* %119, 0
  %122 = insertvalue { i8*, i32 } %121, i32 %120, 1
  resume { i8*, i32 } %122

; <label>:123:                                    ; preds = %112
  %124 = load i32, i32* @x.567
  %125 = load i32, i32* @y.568
  %126 = sub i32 %124, 2070707709
  %127 = sub i32 %126, 1
  %128 = add i32 %127, 2070707709
  %129 = sub i32 %124, 1
  %130 = mul i32 %124, %128
  %131 = urem i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = icmp slt i32 %125, 10
  %134 = xor i1 %132, true
  %135 = xor i1 %133, true
  %136 = xor i1 false, true
  %137 = and i1 %134, false
  %138 = and i1 %132, %136
  %139 = and i1 %135, false
  %140 = and i1 %133, %136
  %141 = or i1 %137, %138
  %142 = or i1 %139, %140
  %143 = xor i1 %141, %142
  %144 = or i1 %134, %135
  %145 = xor i1 %144, true
  %146 = or i1 false, %136
  %147 = and i1 %145, %146
  %148 = or i1 %143, %147
  %149 = or i1 %132, %133
  br i1 %148, label %150, label %192

; <label>:150:                                    ; preds = %123, %192
  %151 = landingpad { i8*, i32 }
          catch i8* null
  %152 = extractvalue { i8*, i32 } %151, 0
  call void @__clang_call_terminate(i8* %152) #8
  %153 = load i32, i32* @x.567
  %154 = load i32, i32* @y.568
  %155 = sub i32 0, 1
  %156 = add i32 %153, %155
  %157 = sub i32 %153, 1
  %158 = mul i32 %153, %156
  %159 = urem i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = icmp slt i32 %154, 10
  %162 = and i1 %160, %161
  %163 = xor i1 %160, %161
  %164 = or i1 %162, %163
  %165 = or i1 %160, %161
  br i1 %164, label %166, label %192

; <label>:166:                                    ; preds = %150
  unreachable

; <label>:167:                                    ; preds = %101
  unreachable

; <label>:168:                                    ; preds = %28, %2
  %169 = alloca %"class.std::deque"*, align 8
  %170 = alloca i32*, align 8
  %171 = alloca i8*
  %172 = alloca i32
  store %"class.std::deque"* %0, %"class.std::deque"** %169, align 8
  store i32* %1, i32** %170, align 8
  %173 = load %"class.std::deque"*, %"class.std::deque"** %169, align 8
  call void @_ZNSt5dequeIiSaIiEE22_M_reserve_map_at_backEm(%"class.std::deque"* %173, i64 1)
  %174 = bitcast %"class.std::deque"* %173 to %"class.std::_Deque_base"*
  %175 = call i32* @_ZNSt11_Deque_baseIiSaIiEE16_M_allocate_nodeEv(%"class.std::_Deque_base"* %174)
  %176 = bitcast %"class.std::deque"* %173 to %"class.std::_Deque_base"*
  %177 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %176, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %177, i32 0, i32 3
  %179 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %178, i32 0, i32 3
  %180 = load i32**, i32*** %179, align 8
  %181 = getelementptr inbounds i32*, i32** %180, i64 1
  store i32* %175, i32** %181, align 8
  %182 = bitcast %"class.std::deque"* %173 to %"class.std::_Deque_base"*
  %183 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %182, i32 0, i32 0
  %184 = bitcast %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %183 to %"class.std::allocator.5"*
  %185 = bitcast %"class.std::deque"* %173 to %"class.std::_Deque_base"*
  %186 = getelementptr inbounds %"class.std::_Deque_base", %"class.std::_Deque_base"* %185, i32 0, i32 0
  %187 = getelementptr inbounds %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl", %"struct.std::_Deque_base<int, std::allocator<int> >::_Deque_impl"* %186, i32 0, i32 3
  %188 = getelementptr inbounds %"struct.std::_Deque_iterator", %"struct.std::_Deque_iterator"* %187, i32 0, i32 0
  %189 = load i32*, i32** %188, align 8
  %190 = load i32*, i32** %170, align 8
  %191 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %190) #3
  br label %28

; <label>:192:                                    ; preds = %150, %123
  %193 = landingpad { i8*, i32 }
          catch i8* null
  %194 = extractvalue { i8*, i32 } %193, 0
  call void @__clang_call_terminate(i8* %194) #8
  br label %150
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx13new_allocatorIiE9constructIiJRKiEEEvPT_DpOT0_(%"class.__gnu_cxx::new_allocator.6"*, i32*, i32* dereferenceable(4)) #5 comdat align 2 {
  %4 = alloca %"class.__gnu_cxx::new_allocator.6"*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  store %"class.__gnu_cxx::new_allocator.6"* %0, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load %"class.__gnu_cxx::new_allocator.6"*, %"class.__gnu_cxx::new_allocator.6"** %4, align 8
  %8 = load i32*, i32** %5, align 8
  %9 = bitcast i32* %8 to i8*
  %10 = bitcast i8* %9 to i32*
  %11 = load i32*, i32** %6, align 8
  %12 = call dereferenceable(4) i32* @_ZSt7forwardIRKiEOT_RNSt16remove_referenceIS2_E4typeE(i32* dereferenceable(4) %11) #3
  %13 = load i32, i32* %12, align 4
  store i32 %13, i32* %10, align 4
  ret void
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE14_M_fill_assignEmRKi(%"class.std::vector.3"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i64
  %5 = alloca i64
  %6 = alloca %"class.std::vector.3"*
  %7 = alloca %"class.std::vector.3"*, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32*, align 8
  %10 = alloca %"class.std::vector.3", align 8
  %11 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %12 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %7, align 8
  store i64 %1, i64* %8, align 8
  store i32* %2, i32** %9, align 8
  %13 = load %"class.std::vector.3"*, %"class.std::vector.3"** %7, align 8
  store %"class.std::vector.3"* %13, %"class.std::vector.3"** %6
  %14 = load i64, i64* %8, align 8
  store i64 %14, i64* %5
  %15 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %16 = call i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.3"* %15) #3
  store i64 %16, i64* %4
  %17 = alloca i32
  store i32 -526955301, i32* %17
  br label %18

; <label>:18:                                     ; preds = %3, %169
  %19 = load i32, i32* %17
  switch i32 %19, label %20 [
    i32 -526955301, label %21
    i32 2005283124, label %26
    i32 -1073280889, label %37
    i32 637002798, label %43
    i32 -682052577, label %58
    i32 -2064359215, label %117
    i32 1359552627, label %118
    i32 -1284594055, label %128
    i32 1613705865, label %129
    i32 1120941069, label %130
  ]

; <label>:20:                                     ; preds = %18
  br label %169

; <label>:21:                                     ; preds = %18
  %22 = load volatile i64, i64* %5
  %23 = load volatile i64, i64* %4
  %24 = icmp ugt i64 %22, %23
  %25 = select i1 %24, i32 2005283124, i32 -1073280889
  store i32 %25, i32* %17
  br label %169

; <label>:26:                                     ; preds = %18
  %27 = load i64, i64* %8, align 8
  %28 = load i32*, i32** %9, align 8
  %29 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %30 = bitcast %"class.std::vector.3"* %29 to %"struct.std::_Vector_base.4"*
  %31 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %30) #3
  call void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.3"* %10, i64 %27, i32* dereferenceable(4) %28, %"class.std::allocator.5"* dereferenceable(1) %31)
  %32 = bitcast %"class.std::vector.3"* %10 to %"struct.std::_Vector_base.4"*
  %33 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %32, i32 0, i32 0
  %34 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %35 = bitcast %"class.std::vector.3"* %34 to %"struct.std::_Vector_base.4"*
  %36 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %35, i32 0, i32 0
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24) %36) #3
  call void @_ZNSt6vectorIiSaIiEED2Ev(%"class.std::vector.3"* %10) #3
  store i32 1613705865, i32* %17
  br label %169

; <label>:37:                                     ; preds = %18
  %38 = load i64, i64* %8, align 8
  %39 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %40 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %39) #3
  %41 = icmp ugt i64 %38, %40
  %42 = select i1 %41, i32 637002798, i32 1359552627
  store i32 %42, i32* %17
  br label %169

; <label>:43:                                     ; preds = %18
  %44 = load i32, i32* @x.571
  %45 = load i32, i32* @y.572
  %46 = sub i32 0, 1
  %47 = add i32 %44, %46
  %48 = sub i32 %44, 1
  %49 = mul i32 %44, %47
  %50 = urem i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = icmp slt i32 %45, 10
  %53 = and i1 %51, %52
  %54 = xor i1 %51, %52
  %55 = or i1 %53, %54
  %56 = or i1 %51, %52
  %57 = select i1 %55, i32 -682052577, i32 1120941069
  store i32 %57, i32* %17
  br label %169

; <label>:58:                                     ; preds = %18
  %59 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %60 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.3"* %59) #3
  %61 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %11, i32 0, i32 0
  store i32* %60, i32** %61, align 8
  %62 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %63 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.3"* %62) #3
  %64 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %12, i32 0, i32 0
  store i32* %63, i32** %64, align 8
  %65 = load i32*, i32** %9, align 8
  %66 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %11, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %12, i32 0, i32 0
  %69 = load i32*, i32** %68, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %67, i32* %69, i32* dereferenceable(4) %65)
  %70 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %71 = bitcast %"class.std::vector.3"* %70 to %"struct.std::_Vector_base.4"*
  %72 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %71, i32 0, i32 0
  %73 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72, i32 0, i32 1
  %74 = load i32*, i32** %73, align 8
  %75 = load i64, i64* %8, align 8
  %76 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %77 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %76) #3
  %78 = add i64 %75, -8796601122574637829
  %79 = sub i64 %78, %77
  %80 = sub i64 %79, -8796601122574637829
  %81 = sub i64 %75, %77
  %82 = load i32*, i32** %9, align 8
  %83 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %84 = bitcast %"class.std::vector.3"* %83 to %"struct.std::_Vector_base.4"*
  %85 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %84) #3
  %86 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %74, i64 %80, i32* dereferenceable(4) %82, %"class.std::allocator.5"* dereferenceable(1) %85)
  %87 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %88 = bitcast %"class.std::vector.3"* %87 to %"struct.std::_Vector_base.4"*
  %89 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %88, i32 0, i32 0
  %90 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %89, i32 0, i32 1
  store i32* %86, i32** %90, align 8
  %91 = load i32, i32* @x.571
  %92 = load i32, i32* @y.572
  %93 = sub i32 0, 1
  %94 = add i32 %91, %93
  %95 = sub i32 %91, 1
  %96 = mul i32 %91, %94
  %97 = urem i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = icmp slt i32 %92, 10
  %100 = xor i1 %98, true
  %101 = xor i1 %99, true
  %102 = xor i1 true, true
  %103 = and i1 %100, true
  %104 = and i1 %98, %102
  %105 = and i1 %101, true
  %106 = and i1 %99, %102
  %107 = or i1 %103, %104
  %108 = or i1 %105, %106
  %109 = xor i1 %107, %108
  %110 = or i1 %100, %101
  %111 = xor i1 %110, true
  %112 = or i1 true, %102
  %113 = and i1 %111, %112
  %114 = or i1 %109, %113
  %115 = or i1 %98, %99
  %116 = select i1 %114, i32 -2064359215, i32 1120941069
  store i32 %116, i32* %17
  br label %169

; <label>:117:                                    ; preds = %18
  store i32 -1284594055, i32* %17
  br label %169

; <label>:118:                                    ; preds = %18
  %119 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %120 = bitcast %"class.std::vector.3"* %119 to %"struct.std::_Vector_base.4"*
  %121 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %120, i32 0, i32 0
  %122 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %121, i32 0, i32 0
  %123 = load i32*, i32** %122, align 8
  %124 = load i64, i64* %8, align 8
  %125 = load i32*, i32** %9, align 8
  %126 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %123, i64 %124, i32* dereferenceable(4) %125)
  %127 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  call void @_ZNSt6vectorIiSaIiEE15_M_erase_at_endEPi(%"class.std::vector.3"* %127, i32* %126) #3
  store i32 -1284594055, i32* %17
  br label %169

; <label>:128:                                    ; preds = %18
  store i32 1613705865, i32* %17
  br label %169

; <label>:129:                                    ; preds = %18
  ret void

; <label>:130:                                    ; preds = %18
  %131 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %132 = call i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.3"* %131) #3
  %133 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %11, i32 0, i32 0
  store i32* %132, i32** %133, align 8
  %134 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %135 = call i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.3"* %134) #3
  %136 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %12, i32 0, i32 0
  store i32* %135, i32** %136, align 8
  %137 = load i32*, i32** %9, align 8
  %138 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %11, i32 0, i32 0
  %139 = load i32*, i32** %138, align 8
  %140 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %12, i32 0, i32 0
  %141 = load i32*, i32** %140, align 8
  call void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32* %139, i32* %141, i32* dereferenceable(4) %137)
  %142 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %143 = bitcast %"class.std::vector.3"* %142 to %"struct.std::_Vector_base.4"*
  %144 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %143, i32 0, i32 0
  %145 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %144, i32 0, i32 1
  %146 = load i32*, i32** %145, align 8
  %147 = load i64, i64* %8, align 8
  %148 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %149 = call i64 @_ZNKSt6vectorIiSaIiEE4sizeEv(%"class.std::vector.3"* %148) #3
  %150 = shl i64 %147, %149
  %151 = sub i64 %147, 9217733363829519328
  %152 = sub i64 %151, %149
  %153 = add i64 %152, 9217733363829519328
  %154 = sub i64 %147, %149
  %155 = mul i64 %153, %149
  %156 = sub i64 %147, 3506300001620594775
  %157 = sub i64 %156, %149
  %158 = add i64 %157, 3506300001620594775
  %159 = sub i64 %147, %149
  %160 = load i32*, i32** %9, align 8
  %161 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %162 = bitcast %"class.std::vector.3"* %161 to %"struct.std::_Vector_base.4"*
  %163 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %162) #3
  %164 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %146, i64 %158, i32* dereferenceable(4) %160, %"class.std::allocator.5"* dereferenceable(1) %163)
  %165 = load volatile %"class.std::vector.3"*, %"class.std::vector.3"** %6
  %166 = bitcast %"class.std::vector.3"* %165 to %"struct.std::_Vector_base.4"*
  %167 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %166, i32 0, i32 0
  %168 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %167, i32 0, i32 1
  store i32* %164, i32** %168, align 8
  store i32 -682052577, i32* %17
  br label %169

; <label>:169:                                    ; preds = %130, %128, %118, %117, %58, %43, %37, %26, %21, %20
  br label %18
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i64 @_ZNKSt6vectorIiSaIiEE8capacityEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca i64
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.573
  %6 = load i32, i32* @y.574
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 1193541057, i32* %14
  br label %15

; <label>:15:                                     ; preds = %1, %113
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 1193541057, label %18
    i32 -348402180, label %26
    i32 -897611995, label %71
    i32 -1258122375, label %73
  ]

; <label>:17:                                     ; preds = %15
  br label %113

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = and i1 %19, %20
  %22 = xor i1 %19, %20
  %23 = or i1 %21, %22
  %24 = or i1 %19, %20
  %25 = select i1 %23, i32 -348402180, i32 -1258122375
  store i32 %25, i32* %14
  br label %113

; <label>:26:                                     ; preds = %15
  %27 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %27, align 8
  %28 = load %"class.std::vector.3"*, %"class.std::vector.3"** %27, align 8
  %29 = bitcast %"class.std::vector.3"* %28 to %"struct.std::_Vector_base.4"*
  %30 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %29, i32 0, i32 0
  %31 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %30, i32 0, i32 2
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %"class.std::vector.3"* %28 to %"struct.std::_Vector_base.4"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = ptrtoint i32* %32 to i64
  %38 = ptrtoint i32* %36 to i64
  %39 = add i64 %37, -274677594571584862
  %40 = sub i64 %39, %38
  %41 = sub i64 %40, -274677594571584862
  %42 = sub i64 %37, %38
  %43 = sdiv exact i64 %41, 4
  store i64 %43, i64* %2
  %44 = load i32, i32* @x.573
  %45 = load i32, i32* @y.574
  %46 = add i32 %44, 1578484306
  %47 = sub i32 %46, 1
  %48 = sub i32 %47, 1578484306
  %49 = sub i32 %44, 1
  %50 = mul i32 %44, %48
  %51 = urem i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = icmp slt i32 %45, 10
  %54 = xor i1 %52, true
  %55 = xor i1 %53, true
  %56 = xor i1 false, true
  %57 = and i1 %54, false
  %58 = and i1 %52, %56
  %59 = and i1 %55, false
  %60 = and i1 %53, %56
  %61 = or i1 %57, %58
  %62 = or i1 %59, %60
  %63 = xor i1 %61, %62
  %64 = or i1 %54, %55
  %65 = xor i1 %64, true
  %66 = or i1 false, %56
  %67 = and i1 %65, %66
  %68 = or i1 %63, %67
  %69 = or i1 %52, %53
  %70 = select i1 %68, i32 -897611995, i32 -1258122375
  store i32 %70, i32* %14
  br label %113

; <label>:71:                                     ; preds = %15
  %72 = load volatile i64, i64* %2
  ret i64 %72

; <label>:73:                                     ; preds = %15
  %74 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %74, align 8
  %75 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %76 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %77 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %76, i32 0, i32 0
  %78 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %77, i32 0, i32 2
  %79 = load i32*, i32** %78, align 8
  %80 = bitcast %"class.std::vector.3"* %75 to %"struct.std::_Vector_base.4"*
  %81 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %80, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  %83 = load i32*, i32** %82, align 8
  %84 = ptrtoint i32* %79 to i64
  %85 = ptrtoint i32* %83 to i64
  %86 = shl i64 %84, %85
  %87 = shl i64 %84, %85
  %88 = sub i64 %84, 4296589884216497674
  %89 = sub i64 %88, %85
  %90 = add i64 %89, 4296589884216497674
  %91 = sub i64 %84, %85
  %92 = mul i64 %90, %85
  %93 = shl i64 %84, %85
  %94 = add i64 %84, -1475198226718008722
  %95 = sub i64 %94, %85
  %96 = sub i64 %95, -1475198226718008722
  %97 = sub i64 %84, %85
  %98 = shl i64 %96, 4
  %99 = sub i64 %96, 9112062812654058348
  %100 = sub i64 %99, 4
  %101 = add i64 %100, 9112062812654058348
  %102 = sub i64 %96, 4
  %103 = mul i64 %101, 4
  %104 = sub i64 0, %96
  %105 = add i64 0, %104
  %106 = sub i64 0, %96
  %107 = sub i64 0, %105
  %108 = sub i64 0, 4
  %109 = add i64 %107, %108
  %110 = sub i64 0, %109
  %111 = add i64 %105, 4
  %112 = sdiv exact i64 %96, 4
  store i32 -348402180, i32* %14
  br label %113

; <label>:113:                                    ; preds = %73, %26, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEEC2EmRKiRKS0_(%"class.std::vector.3"*, i64, i32* dereferenceable(4), %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %5 = alloca %"class.std::vector.3"*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  %9 = alloca i8*
  %10 = alloca i32
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %11 = load %"class.std::vector.3"*, %"class.std::vector.3"** %5, align 8
  %12 = bitcast %"class.std::vector.3"* %11 to %"struct.std::_Vector_base.4"*
  %13 = load i64, i64* %6, align 8
  %14 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %8, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.4"* %12, i64 %13, %"class.std::allocator.5"* dereferenceable(1) %14)
  %15 = load i64, i64* %6, align 8
  %16 = load i32*, i32** %7, align 8
  invoke void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.3"* %11, i64 %15, i32* dereferenceable(4) %16)
          to label %17 unwind label %18

; <label>:17:                                     ; preds = %4
  ret void

; <label>:18:                                     ; preds = %4
  %19 = landingpad { i8*, i32 }
          cleanup
  %20 = extractvalue { i8*, i32 } %19, 0
  store i8* %20, i8** %9, align 8
  %21 = extractvalue { i8*, i32 } %19, 1
  store i32 %21, i32* %10, align 4
  %22 = bitcast %"class.std::vector.3"* %11 to %"struct.std::_Vector_base.4"*
  call void @_ZNSt12_Vector_baseIiSaIiEED2Ev(%"struct.std::_Vector_base.4"* %22) #3
  br label %23

; <label>:23:                                     ; preds = %18
  %24 = load i8*, i8** %9, align 8
  %25 = load i32, i32* %10, align 4
  %26 = insertvalue { i8*, i32 } undef, i8* %24, 0
  %27 = insertvalue { i8*, i32 } %26, i32 %25, 1
  resume { i8*, i32 } %27
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_impl12_M_swap_dataERS2_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* dereferenceable(24)) #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.577
  %6 = load i32, i32* @y.578
  %7 = add i32 %5, 480603082
  %8 = sub i32 %7, 1
  %9 = sub i32 %8, 480603082
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -635983709, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %80
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -635983709, label %19
    i32 1071395699, label %39
    i32 -1661830584, label %66
    i32 -1428701289, label %67
  ]

; <label>:18:                                     ; preds = %16
  br label %80

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 true, true
  %25 = and i1 %22, true
  %26 = and i1 %20, %24
  %27 = and i1 %23, true
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 true, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1071395699, i32 -1428701289
  store i32 %38, i32* %15
  br label %80

; <label>:39:                                     ; preds = %16
  %40 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %41 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %40, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %41, align 8
  %42 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %40, align 8
  %43 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 0
  %44 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %41, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %44, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %43, i32** dereferenceable(8) %45) #3
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 1
  %47 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %41, align 8
  %48 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %47, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %46, i32** dereferenceable(8) %48) #3
  %49 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %42, i32 0, i32 2
  %50 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %41, align 8
  %51 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %50, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %49, i32** dereferenceable(8) %51) #3
  %52 = load i32, i32* @x.577
  %53 = load i32, i32* @y.578
  %54 = sub i32 0, 1
  %55 = add i32 %52, %54
  %56 = sub i32 %52, 1
  %57 = mul i32 %52, %55
  %58 = urem i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = icmp slt i32 %53, 10
  %61 = and i1 %59, %60
  %62 = xor i1 %59, %60
  %63 = or i1 %61, %62
  %64 = or i1 %59, %60
  %65 = select i1 %63, i32 -1661830584, i32 -1428701289
  store i32 %65, i32* %15
  br label %80

; <label>:66:                                     ; preds = %16
  ret void

; <label>:67:                                     ; preds = %16
  %68 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %69 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %68, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %1, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  %70 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %68, align 8
  %71 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 0
  %72 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  %73 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %72, i32 0, i32 0
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %71, i32** dereferenceable(8) %73) #3
  %74 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 1
  %75 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  %76 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %75, i32 0, i32 1
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %74, i32** dereferenceable(8) %76) #3
  %77 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %70, i32 0, i32 2
  %78 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %69, align 8
  %79 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 2
  call void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8) %77, i32** dereferenceable(8) %79) #3
  store i32 1071395699, i32* %15
  br label %80

; <label>:80:                                     ; preds = %67, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZSt4fillIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEiEvT_S7_RKT0_(i32*, i32*, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %5 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %6 = alloca i32*, align 8
  %7 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %8 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %9 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %4, i32 0, i32 0
  store i32* %0, i32** %9, align 8
  %10 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %5, i32 0, i32 0
  store i32* %1, i32** %10, align 8
  store i32* %2, i32** %6, align 8
  %11 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %7 to i8*
  %12 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %11, i8* %12, i64 8, i32 8, i1 false)
  %13 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %7, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %14)
  %16 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %8 to i8*
  %17 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %5 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %16, i8* %17, i64 8, i32 8, i1 false)
  %18 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %8, i32 0, i32 0
  %19 = load i32*, i32** %18, align 8
  %20 = call i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32* %19)
  %21 = load i32*, i32** %6, align 8
  call void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32* %15, i32* %20, i32* dereferenceable(4) %21)
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE5beginEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 0
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.17"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt6vectorIiSaIiEE3endEv(%"class.std::vector.3"*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %3 = alloca %"class.std::vector.3"*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %3, align 8
  %4 = load %"class.std::vector.3"*, %"class.std::vector.3"** %3, align 8
  %5 = bitcast %"class.std::vector.3"* %4 to %"struct.std::_Vector_base.4"*
  %6 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %5, i32 0, i32 0
  %7 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %6, i32 0, i32 1
  call void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.17"* %2, i32** dereferenceable(8) %7) #3
  %8 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %2, i32 0, i32 0
  %9 = load i32*, i32** %8, align 8
  ret i32* %9
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32*, i64, i32* dereferenceable(4), %"class.std::allocator.5"* dereferenceable(1)) #0 comdat {
  %5 = alloca i32*, align 8
  %6 = alloca i64, align 8
  %7 = alloca i32*, align 8
  %8 = alloca %"class.std::allocator.5"*, align 8
  store i32* %0, i32** %5, align 8
  store i64 %1, i64* %6, align 8
  store i32* %2, i32** %7, align 8
  store %"class.std::allocator.5"* %3, %"class.std::allocator.5"** %8, align 8
  %9 = load i32*, i32** %5, align 8
  %10 = load i64, i64* %6, align 8
  %11 = load i32*, i32** %7, align 8
  %12 = call i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32* %9, i64 %10, i32* dereferenceable(4) %11)
  ret i32* %12
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEEC2EmRKS0_(%"struct.std::_Vector_base.4"*, i64, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #0 comdat align 2 personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %4 = alloca %"struct.std::_Vector_base.4"*, align 8
  %5 = alloca i64, align 8
  %6 = alloca %"class.std::allocator.5"*, align 8
  %7 = alloca i8*
  %8 = alloca i32
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %4, align 8
  store i64 %1, i64* %5, align 8
  store %"class.std::allocator.5"* %2, %"class.std::allocator.5"** %6, align 8
  %9 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %4, align 8
  %10 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %9, i32 0, i32 0
  %11 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %6, align 8
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10, %"class.std::allocator.5"* dereferenceable(1) %11) #3
  %12 = load i64, i64* %5, align 8
  invoke void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.4"* %9, i64 %12)
          to label %13 unwind label %14

; <label>:13:                                     ; preds = %3
  ret void

; <label>:14:                                     ; preds = %3
  %15 = load i32, i32* @x.587
  %16 = load i32, i32* @y.588
  %17 = add i32 %15, 634723188
  %18 = sub i32 %17, 1
  %19 = sub i32 %18, 634723188
  %20 = sub i32 %15, 1
  %21 = mul i32 %15, %19
  %22 = urem i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = icmp slt i32 %16, 10
  %25 = xor i1 %23, true
  %26 = xor i1 %24, true
  %27 = xor i1 false, true
  %28 = and i1 %25, false
  %29 = and i1 %23, %27
  %30 = and i1 %26, false
  %31 = and i1 %24, %27
  %32 = or i1 %28, %29
  %33 = or i1 %30, %31
  %34 = xor i1 %32, %33
  %35 = or i1 %25, %26
  %36 = xor i1 %35, true
  %37 = or i1 false, %27
  %38 = and i1 %36, %37
  %39 = or i1 %34, %38
  %40 = or i1 %23, %24
  br i1 %39, label %41, label %77

; <label>:41:                                     ; preds = %14, %77
  %42 = landingpad { i8*, i32 }
          cleanup
  %43 = extractvalue { i8*, i32 } %42, 0
  store i8* %43, i8** %7, align 8
  %44 = extractvalue { i8*, i32 } %42, 1
  store i32 %44, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  %45 = load i32, i32* @x.587
  %46 = load i32, i32* @y.588
  %47 = add i32 %45, 107675781
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 107675781
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  br i1 %69, label %71, label %77

; <label>:71:                                     ; preds = %41
  br label %72

; <label>:72:                                     ; preds = %71
  %73 = load i8*, i8** %7, align 8
  %74 = load i32, i32* %8, align 4
  %75 = insertvalue { i8*, i32 } undef, i8* %73, 0
  %76 = insertvalue { i8*, i32 } %75, i32 %74, 1
  resume { i8*, i32 } %76

; <label>:77:                                     ; preds = %41, %14
  %78 = landingpad { i8*, i32 }
          cleanup
  %79 = extractvalue { i8*, i32 } %78, 0
  store i8* %79, i8** %7, align 8
  %80 = extractvalue { i8*, i32 } %78, 1
  store i32 %80, i32* %8, align 4
  call void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implD2Ev(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %10) #3
  br label %41
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt6vectorIiSaIiEE18_M_fill_initializeEmRKi(%"class.std::vector.3"*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i1
  %5 = alloca i1
  %6 = load i32, i32* @x.589
  %7 = load i32, i32* @y.590
  %8 = add i32 %6, -96463932
  %9 = sub i32 %8, 1
  %10 = sub i32 %9, -96463932
  %11 = sub i32 %6, 1
  %12 = mul i32 %6, %10
  %13 = urem i32 %12, 2
  %14 = icmp eq i32 %13, 0
  store i1 %14, i1* %5
  %15 = icmp slt i32 %7, 10
  store i1 %15, i1* %4
  %16 = alloca i32
  store i32 248143047, i32* %16
  br label %17

; <label>:17:                                     ; preds = %3, %90
  %18 = load i32, i32* %16
  switch i32 %18, label %19 [
    i32 248143047, label %20
    i32 -290334271, label %28
    i32 -953448146, label %72
    i32 2078585757, label %73
  ]

; <label>:19:                                     ; preds = %17
  br label %90

; <label>:20:                                     ; preds = %17
  %21 = load volatile i1, i1* %5
  %22 = load volatile i1, i1* %4
  %23 = and i1 %21, %22
  %24 = xor i1 %21, %22
  %25 = or i1 %23, %24
  %26 = or i1 %21, %22
  %27 = select i1 %25, i32 -290334271, i32 2078585757
  store i32 %27, i32* %16
  br label %90

; <label>:28:                                     ; preds = %17
  %29 = alloca %"class.std::vector.3"*, align 8
  %30 = alloca i64, align 8
  %31 = alloca i32*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %29, align 8
  store i64 %1, i64* %30, align 8
  store i32* %2, i32** %31, align 8
  %32 = load %"class.std::vector.3"*, %"class.std::vector.3"** %29, align 8
  %33 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %34 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %33, i32 0, i32 0
  %35 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %34, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = load i64, i64* %30, align 8
  %38 = load i32*, i32** %31, align 8
  %39 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %40 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %39) #3
  %41 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %36, i64 %37, i32* dereferenceable(4) %38, %"class.std::allocator.5"* dereferenceable(1) %40)
  %42 = bitcast %"class.std::vector.3"* %32 to %"struct.std::_Vector_base.4"*
  %43 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %42, i32 0, i32 0
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %43, i32 0, i32 1
  store i32* %41, i32** %44, align 8
  %45 = load i32, i32* @x.589
  %46 = load i32, i32* @y.590
  %47 = add i32 %45, 95375369
  %48 = sub i32 %47, 1
  %49 = sub i32 %48, 95375369
  %50 = sub i32 %45, 1
  %51 = mul i32 %45, %49
  %52 = urem i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = icmp slt i32 %46, 10
  %55 = xor i1 %53, true
  %56 = xor i1 %54, true
  %57 = xor i1 false, true
  %58 = and i1 %55, false
  %59 = and i1 %53, %57
  %60 = and i1 %56, false
  %61 = and i1 %54, %57
  %62 = or i1 %58, %59
  %63 = or i1 %60, %61
  %64 = xor i1 %62, %63
  %65 = or i1 %55, %56
  %66 = xor i1 %65, true
  %67 = or i1 false, %57
  %68 = and i1 %66, %67
  %69 = or i1 %64, %68
  %70 = or i1 %53, %54
  %71 = select i1 %69, i32 -953448146, i32 2078585757
  store i32 %71, i32* %16
  br label %90

; <label>:72:                                     ; preds = %17
  ret void

; <label>:73:                                     ; preds = %17
  %74 = alloca %"class.std::vector.3"*, align 8
  %75 = alloca i64, align 8
  %76 = alloca i32*, align 8
  store %"class.std::vector.3"* %0, %"class.std::vector.3"** %74, align 8
  store i64 %1, i64* %75, align 8
  store i32* %2, i32** %76, align 8
  %77 = load %"class.std::vector.3"*, %"class.std::vector.3"** %74, align 8
  %78 = bitcast %"class.std::vector.3"* %77 to %"struct.std::_Vector_base.4"*
  %79 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %80 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %79, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = load i64, i64* %75, align 8
  %83 = load i32*, i32** %76, align 8
  %84 = bitcast %"class.std::vector.3"* %77 to %"struct.std::_Vector_base.4"*
  %85 = call dereferenceable(1) %"class.std::allocator.5"* @_ZNSt12_Vector_baseIiSaIiEE19_M_get_Tp_allocatorEv(%"struct.std::_Vector_base.4"* %84) #3
  %86 = call i32* @_ZSt24__uninitialized_fill_n_aIPimiiET_S1_T0_RKT1_RSaIT2_E(i32* %81, i64 %82, i32* dereferenceable(4) %83, %"class.std::allocator.5"* dereferenceable(1) %85)
  %87 = bitcast %"class.std::vector.3"* %77 to %"struct.std::_Vector_base.4"*
  %88 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %87, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 1
  store i32* %86, i32** %89, align 8
  store i32 -290334271, i32* %16
  br label %90

; <label>:90:                                     ; preds = %73, %28, %20, %19
  br label %17
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE12_Vector_implC2ERKS0_(%"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"class.std::allocator.5"* dereferenceable(1)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.591
  %6 = load i32, i32* @y.592
  %7 = sub i32 0, 1
  %8 = add i32 %5, %7
  %9 = sub i32 %5, 1
  %10 = mul i32 %5, %8
  %11 = urem i32 %10, 2
  %12 = icmp eq i32 %11, 0
  store i1 %12, i1* %4
  %13 = icmp slt i32 %6, 10
  store i1 %13, i1* %3
  %14 = alloca i32
  store i32 -918829602, i32* %14
  br label %15

; <label>:15:                                     ; preds = %2, %84
  %16 = load i32, i32* %14
  switch i32 %16, label %17 [
    i32 -918829602, label %18
    i32 -1787328765, label %38
    i32 1798770317, label %74
    i32 762540828, label %75
  ]

; <label>:17:                                     ; preds = %15
  br label %84

; <label>:18:                                     ; preds = %15
  %19 = load volatile i1, i1* %4
  %20 = load volatile i1, i1* %3
  %21 = xor i1 %19, true
  %22 = xor i1 %20, true
  %23 = xor i1 true, true
  %24 = and i1 %21, true
  %25 = and i1 %19, %23
  %26 = and i1 %22, true
  %27 = and i1 %20, %23
  %28 = or i1 %24, %25
  %29 = or i1 %26, %27
  %30 = xor i1 %28, %29
  %31 = or i1 %21, %22
  %32 = xor i1 %31, true
  %33 = or i1 true, %23
  %34 = and i1 %32, %33
  %35 = or i1 %30, %34
  %36 = or i1 %19, %20
  %37 = select i1 %35, i32 -1787328765, i32 762540828
  store i32 %37, i32* %14
  br label %84

; <label>:38:                                     ; preds = %15
  %39 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %40 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %40, align 8
  %41 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %39, align 8
  %42 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41 to %"class.std::allocator.5"*
  %43 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %40, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.5"* %42, %"class.std::allocator.5"* dereferenceable(1) %43) #3
  %44 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 0
  store i32* null, i32** %44, align 8
  %45 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 1
  store i32* null, i32** %45, align 8
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %41, i32 0, i32 2
  store i32* null, i32** %46, align 8
  %47 = load i32, i32* @x.591
  %48 = load i32, i32* @y.592
  %49 = sub i32 %47, -303546062
  %50 = sub i32 %49, 1
  %51 = add i32 %50, -303546062
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 1798770317, i32 762540828
  store i32 %73, i32* %14
  br label %84

; <label>:74:                                     ; preds = %15
  ret void

; <label>:75:                                     ; preds = %15
  %76 = alloca %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, align 8
  %77 = alloca %"class.std::allocator.5"*, align 8
  store %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %0, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %76, align 8
  store %"class.std::allocator.5"* %1, %"class.std::allocator.5"** %77, align 8
  %78 = load %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"*, %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"** %76, align 8
  %79 = bitcast %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78 to %"class.std::allocator.5"*
  %80 = load %"class.std::allocator.5"*, %"class.std::allocator.5"** %77, align 8
  call void @_ZNSaIiEC2ERKS_(%"class.std::allocator.5"* %79, %"class.std::allocator.5"* dereferenceable(1) %80) #3
  %81 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 0
  store i32* null, i32** %81, align 8
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 1
  store i32* null, i32** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %78, i32 0, i32 2
  store i32* null, i32** %83, align 8
  store i32 -1787328765, i32* %14
  br label %84

; <label>:84:                                     ; preds = %75, %38, %18, %17
  br label %15
}

; Function Attrs: noinline uwtable
define linkonce_odr void @_ZNSt12_Vector_baseIiSaIiEE17_M_create_storageEm(%"struct.std::_Vector_base.4"*, i64) #0 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.593
  %6 = load i32, i32* @y.594
  %7 = sub i32 %5, 2131933441
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 2131933441
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -183387726, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %95
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -183387726, label %19
    i32 1949631842, label %27
    i32 507137826, label %74
    i32 -990408836, label %75
  ]

; <label>:18:                                     ; preds = %16
  br label %95

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = and i1 %20, %21
  %23 = xor i1 %20, %21
  %24 = or i1 %22, %23
  %25 = or i1 %20, %21
  %26 = select i1 %24, i32 1949631842, i32 -990408836
  store i32 %26, i32* %15
  br label %95

; <label>:27:                                     ; preds = %16
  %28 = alloca %"struct.std::_Vector_base.4"*, align 8
  %29 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %28, align 8
  store i64 %1, i64* %29, align 8
  %30 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %28, align 8
  %31 = load i64, i64* %29, align 8
  %32 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %30, i64 %31)
  %33 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %34 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %33, i32 0, i32 0
  store i32* %32, i32** %34, align 8
  %35 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %36 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %35, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %39 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %38, i32 0, i32 1
  store i32* %37, i32** %39, align 8
  %40 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %41 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %40, i32 0, i32 0
  %42 = load i32*, i32** %41, align 8
  %43 = load i64, i64* %29, align 8
  %44 = getelementptr inbounds i32, i32* %42, i64 %43
  %45 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %30, i32 0, i32 0
  %46 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %45, i32 0, i32 2
  store i32* %44, i32** %46, align 8
  %47 = load i32, i32* @x.593
  %48 = load i32, i32* @y.594
  %49 = add i32 %47, -349660006
  %50 = sub i32 %49, 1
  %51 = sub i32 %50, -349660006
  %52 = sub i32 %47, 1
  %53 = mul i32 %47, %51
  %54 = urem i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = icmp slt i32 %48, 10
  %57 = xor i1 %55, true
  %58 = xor i1 %56, true
  %59 = xor i1 false, true
  %60 = and i1 %57, false
  %61 = and i1 %55, %59
  %62 = and i1 %58, false
  %63 = and i1 %56, %59
  %64 = or i1 %60, %61
  %65 = or i1 %62, %63
  %66 = xor i1 %64, %65
  %67 = or i1 %57, %58
  %68 = xor i1 %67, true
  %69 = or i1 false, %59
  %70 = and i1 %68, %69
  %71 = or i1 %66, %70
  %72 = or i1 %55, %56
  %73 = select i1 %71, i32 507137826, i32 -990408836
  store i32 %73, i32* %15
  br label %95

; <label>:74:                                     ; preds = %16
  ret void

; <label>:75:                                     ; preds = %16
  %76 = alloca %"struct.std::_Vector_base.4"*, align 8
  %77 = alloca i64, align 8
  store %"struct.std::_Vector_base.4"* %0, %"struct.std::_Vector_base.4"** %76, align 8
  store i64 %1, i64* %77, align 8
  %78 = load %"struct.std::_Vector_base.4"*, %"struct.std::_Vector_base.4"** %76, align 8
  %79 = load i64, i64* %77, align 8
  %80 = call i32* @_ZNSt12_Vector_baseIiSaIiEE11_M_allocateEm(%"struct.std::_Vector_base.4"* %78, i64 %79)
  %81 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %82 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %81, i32 0, i32 0
  store i32* %80, i32** %82, align 8
  %83 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %83, i32 0, i32 0
  %85 = load i32*, i32** %84, align 8
  %86 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %87 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %86, i32 0, i32 1
  store i32* %85, i32** %87, align 8
  %88 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %89 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %88, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = load i64, i64* %77, align 8
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = getelementptr inbounds %"struct.std::_Vector_base.4", %"struct.std::_Vector_base.4"* %78, i32 0, i32 0
  %94 = getelementptr inbounds %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl", %"struct.std::_Vector_base<int, std::allocator<int> >::_Vector_impl"* %93, i32 0, i32 2
  store i32* %92, i32** %94, align 8
  store i32 1949631842, i32* %15
  br label %95

; <label>:95:                                     ; preds = %75, %27, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt4swapIPiEvRT_S2_(i32** dereferenceable(8), i32** dereferenceable(8)) #5 comdat {
  %3 = alloca i32**, align 8
  %4 = alloca i32**, align 8
  %5 = alloca i32*, align 8
  store i32** %0, i32*** %3, align 8
  store i32** %1, i32*** %4, align 8
  %6 = load i32**, i32*** %3, align 8
  %7 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %6) #3
  %8 = load i32*, i32** %7, align 8
  store i32* %8, i32** %5, align 8
  %9 = load i32**, i32*** %4, align 8
  %10 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %9) #3
  %11 = load i32*, i32** %10, align 8
  %12 = load i32**, i32*** %3, align 8
  store i32* %11, i32** %12, align 8
  %13 = call dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8) %5) #3
  %14 = load i32*, i32** %13, align 8
  %15 = load i32**, i32*** %4, align 8
  store i32* %14, i32** %15, align 8
  ret void
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZSt4moveIRPiEONSt16remove_referenceIT_E4typeEOS3_(i32** dereferenceable(8)) #5 comdat {
  %2 = alloca i32**, align 8
  store i32** %0, i32*** %2, align 8
  %3 = load i32**, i32*** %2, align 8
  ret i32** %3
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZSt8__fill_aIPiiEN9__gnu_cxx11__enable_ifIXsr11__is_scalarIT0_EE7__valueEvE6__typeET_S6_RKS3_(i32*, i32*, i32* dereferenceable(4)) #5 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i32*, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i32, align 4
  store i32* %0, i32** %4, align 8
  store i32* %1, i32** %5, align 8
  store i32* %2, i32** %6, align 8
  %8 = load i32*, i32** %6, align 8
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %7, align 4
  %10 = alloca i32
  store i32 812266324, i32* %10
  br label %11

; <label>:11:                                     ; preds = %3, %120
  %12 = load i32, i32* %10
  switch i32 %12, label %13 [
    i32 812266324, label %14
    i32 -2123529666, label %19
    i32 767448040, label %47
    i32 -1704976251, label %65
    i32 876075327, label %66
    i32 1652769146, label %82
    i32 1039695072, label %112
    i32 573846427, label %113
    i32 1651542801, label %114
    i32 1248815548, label %117
  ]

; <label>:13:                                     ; preds = %11
  br label %120

; <label>:14:                                     ; preds = %11
  %15 = load i32*, i32** %4, align 8
  %16 = load i32*, i32** %5, align 8
  %17 = icmp ne i32* %15, %16
  %18 = select i1 %17, i32 -2123529666, i32 573846427
  store i32 %18, i32* %10
  br label %120

; <label>:19:                                     ; preds = %11
  %20 = load i32, i32* @x.599
  %21 = load i32, i32* @y.600
  %22 = add i32 %20, 2102979771
  %23 = sub i32 %22, 1
  %24 = sub i32 %23, 2102979771
  %25 = sub i32 %20, 1
  %26 = mul i32 %20, %24
  %27 = urem i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = icmp slt i32 %21, 10
  %30 = xor i1 %28, true
  %31 = xor i1 %29, true
  %32 = xor i1 false, true
  %33 = and i1 %30, false
  %34 = and i1 %28, %32
  %35 = and i1 %31, false
  %36 = and i1 %29, %32
  %37 = or i1 %33, %34
  %38 = or i1 %35, %36
  %39 = xor i1 %37, %38
  %40 = or i1 %30, %31
  %41 = xor i1 %40, true
  %42 = or i1 false, %32
  %43 = and i1 %41, %42
  %44 = or i1 %39, %43
  %45 = or i1 %28, %29
  %46 = select i1 %44, i32 767448040, i32 1651542801
  store i32 %46, i32* %10
  br label %120

; <label>:47:                                     ; preds = %11
  %48 = load i32, i32* %7, align 4
  %49 = load i32*, i32** %4, align 8
  store i32 %48, i32* %49, align 4
  %50 = load i32, i32* @x.599
  %51 = load i32, i32* @y.600
  %52 = add i32 %50, 620637461
  %53 = sub i32 %52, 1
  %54 = sub i32 %53, 620637461
  %55 = sub i32 %50, 1
  %56 = mul i32 %50, %54
  %57 = urem i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = icmp slt i32 %51, 10
  %60 = and i1 %58, %59
  %61 = xor i1 %58, %59
  %62 = or i1 %60, %61
  %63 = or i1 %58, %59
  %64 = select i1 %62, i32 -1704976251, i32 1651542801
  store i32 %64, i32* %10
  br label %120

; <label>:65:                                     ; preds = %11
  store i32 876075327, i32* %10
  br label %120

; <label>:66:                                     ; preds = %11
  %67 = load i32, i32* @x.599
  %68 = load i32, i32* @y.600
  %69 = sub i32 %67, 1535757377
  %70 = sub i32 %69, 1
  %71 = add i32 %70, 1535757377
  %72 = sub i32 %67, 1
  %73 = mul i32 %67, %71
  %74 = urem i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = icmp slt i32 %68, 10
  %77 = and i1 %75, %76
  %78 = xor i1 %75, %76
  %79 = or i1 %77, %78
  %80 = or i1 %75, %76
  %81 = select i1 %79, i32 1652769146, i32 1248815548
  store i32 %81, i32* %10
  br label %120

; <label>:82:                                     ; preds = %11
  %83 = load i32*, i32** %4, align 8
  %84 = getelementptr inbounds i32, i32* %83, i32 1
  store i32* %84, i32** %4, align 8
  %85 = load i32, i32* @x.599
  %86 = load i32, i32* @y.600
  %87 = add i32 %85, -165579877
  %88 = sub i32 %87, 1
  %89 = sub i32 %88, -165579877
  %90 = sub i32 %85, 1
  %91 = mul i32 %85, %89
  %92 = urem i32 %91, 2
  %93 = icmp eq i32 %92, 0
  %94 = icmp slt i32 %86, 10
  %95 = xor i1 %93, true
  %96 = xor i1 %94, true
  %97 = xor i1 true, true
  %98 = and i1 %95, true
  %99 = and i1 %93, %97
  %100 = and i1 %96, true
  %101 = and i1 %94, %97
  %102 = or i1 %98, %99
  %103 = or i1 %100, %101
  %104 = xor i1 %102, %103
  %105 = or i1 %95, %96
  %106 = xor i1 %105, true
  %107 = or i1 true, %97
  %108 = and i1 %106, %107
  %109 = or i1 %104, %108
  %110 = or i1 %93, %94
  %111 = select i1 %109, i32 1039695072, i32 1248815548
  store i32 %111, i32* %10
  br label %120

; <label>:112:                                    ; preds = %11
  store i32 812266324, i32* %10
  br label %120

; <label>:113:                                    ; preds = %11
  ret void

; <label>:114:                                    ; preds = %11
  %115 = load i32, i32* %7, align 4
  %116 = load i32*, i32** %4, align 8
  store i32 %115, i32* %116, align 4
  store i32 767448040, i32* %10
  br label %120

; <label>:117:                                    ; preds = %11
  %118 = load i32*, i32** %4, align 8
  %119 = getelementptr inbounds i32, i32* %118, i32 1
  store i32* %119, i32** %4, align 8
  store i32 1652769146, i32* %10
  br label %120

; <label>:120:                                    ; preds = %117, %114, %112, %82, %66, %65, %47, %19, %14, %13
  br label %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt12__niter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEEENSt11_Niter_baseIT_E13iterator_typeES8_(i32*) #0 comdat {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %3 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %4 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %2, i32 0, i32 0
  store i32* %0, i32** %4, align 8
  %5 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %3 to i8*
  %6 = bitcast %"class.__gnu_cxx::__normal_iterator.17"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* %5, i8* %6, i64 8, i32 8, i1 false)
  %7 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %3, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = call i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32* %8)
  ret i32* %9
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr i32* @_ZNSt10_Iter_baseIN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEELb1EE7_S_baseES6_(i32*) #5 comdat align 2 {
  %2 = alloca %"class.__gnu_cxx::__normal_iterator.17", align 8
  %3 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %2, i32 0, i32 0
  store i32* %0, i32** %3, align 8
  %4 = call dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.17"* %2) #3
  %5 = load i32*, i32** %4, align 8
  ret i32* %5
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(8) i32** @_ZNK9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEE4baseEv(%"class.__gnu_cxx::__normal_iterator.17"*) #5 comdat align 2 {
  %2 = alloca i32**
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.605
  %6 = load i32, i32* @y.606
  %7 = sub i32 %5, -620318909
  %8 = sub i32 %7, 1
  %9 = add i32 %8, -620318909
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 -1574489587, i32* %15
  br label %16

; <label>:16:                                     ; preds = %1, %63
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 -1574489587, label %19
    i32 1618271762, label %39
    i32 -112305647, label %57
    i32 1027697755, label %59
  ]

; <label>:18:                                     ; preds = %16
  br label %63

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 1618271762, i32 1027697755
  store i32 %38, i32* %15
  br label %63

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.17"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.17"* %0, %"class.__gnu_cxx::__normal_iterator.17"** %40, align 8
  %41 = load %"class.__gnu_cxx::__normal_iterator.17"*, %"class.__gnu_cxx::__normal_iterator.17"** %40, align 8
  %42 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %41, i32 0, i32 0
  store i32** %42, i32*** %2
  %43 = load i32, i32* @x.605
  %44 = load i32, i32* @y.606
  %45 = sub i32 0, 1
  %46 = add i32 %43, %45
  %47 = sub i32 %43, 1
  %48 = mul i32 %43, %46
  %49 = urem i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = icmp slt i32 %44, 10
  %52 = and i1 %50, %51
  %53 = xor i1 %50, %51
  %54 = or i1 %52, %53
  %55 = or i1 %50, %51
  %56 = select i1 %54, i32 -112305647, i32 1027697755
  store i32 %56, i32* %15
  br label %63

; <label>:57:                                     ; preds = %16
  %58 = load volatile i32**, i32*** %2
  ret i32** %58

; <label>:59:                                     ; preds = %16
  %60 = alloca %"class.__gnu_cxx::__normal_iterator.17"*, align 8
  store %"class.__gnu_cxx::__normal_iterator.17"* %0, %"class.__gnu_cxx::__normal_iterator.17"** %60, align 8
  %61 = load %"class.__gnu_cxx::__normal_iterator.17"*, %"class.__gnu_cxx::__normal_iterator.17"** %60, align 8
  %62 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %61, i32 0, i32 0
  store i32 1618271762, i32* %15
  br label %63

; <label>:63:                                     ; preds = %59, %39, %19, %18
  br label %16
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr void @_ZN9__gnu_cxx17__normal_iteratorIPiSt6vectorIiSaIiEEEC2ERKS1_(%"class.__gnu_cxx::__normal_iterator.17"*, i32** dereferenceable(8)) unnamed_addr #5 comdat align 2 {
  %3 = alloca i1
  %4 = alloca i1
  %5 = load i32, i32* @x.607
  %6 = load i32, i32* @y.608
  %7 = sub i32 %5, 1076134407
  %8 = sub i32 %7, 1
  %9 = add i32 %8, 1076134407
  %10 = sub i32 %5, 1
  %11 = mul i32 %5, %9
  %12 = urem i32 %11, 2
  %13 = icmp eq i32 %12, 0
  store i1 %13, i1* %4
  %14 = icmp slt i32 %6, 10
  store i1 %14, i1* %3
  %15 = alloca i32
  store i32 2144417046, i32* %15
  br label %16

; <label>:16:                                     ; preds = %2, %81
  %17 = load i32, i32* %15
  switch i32 %17, label %18 [
    i32 2144417046, label %19
    i32 -1425118258, label %39
    i32 -392378400, label %73
    i32 1864656274, label %74
  ]

; <label>:18:                                     ; preds = %16
  br label %81

; <label>:19:                                     ; preds = %16
  %20 = load volatile i1, i1* %4
  %21 = load volatile i1, i1* %3
  %22 = xor i1 %20, true
  %23 = xor i1 %21, true
  %24 = xor i1 false, true
  %25 = and i1 %22, false
  %26 = and i1 %20, %24
  %27 = and i1 %23, false
  %28 = and i1 %21, %24
  %29 = or i1 %25, %26
  %30 = or i1 %27, %28
  %31 = xor i1 %29, %30
  %32 = or i1 %22, %23
  %33 = xor i1 %32, true
  %34 = or i1 false, %24
  %35 = and i1 %33, %34
  %36 = or i1 %31, %35
  %37 = or i1 %20, %21
  %38 = select i1 %36, i32 -1425118258, i32 1864656274
  store i32 %38, i32* %15
  br label %81

; <label>:39:                                     ; preds = %16
  %40 = alloca %"class.__gnu_cxx::__normal_iterator.17"*, align 8
  %41 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.17"* %0, %"class.__gnu_cxx::__normal_iterator.17"** %40, align 8
  store i32** %1, i32*** %41, align 8
  %42 = load %"class.__gnu_cxx::__normal_iterator.17"*, %"class.__gnu_cxx::__normal_iterator.17"** %40, align 8
  %43 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %42, i32 0, i32 0
  %44 = load i32**, i32*** %41, align 8
  %45 = load i32*, i32** %44, align 8
  store i32* %45, i32** %43, align 8
  %46 = load i32, i32* @x.607
  %47 = load i32, i32* @y.608
  %48 = add i32 %46, 1118268060
  %49 = sub i32 %48, 1
  %50 = sub i32 %49, 1118268060
  %51 = sub i32 %46, 1
  %52 = mul i32 %46, %50
  %53 = urem i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = icmp slt i32 %47, 10
  %56 = xor i1 %54, true
  %57 = xor i1 %55, true
  %58 = xor i1 true, true
  %59 = and i1 %56, true
  %60 = and i1 %54, %58
  %61 = and i1 %57, true
  %62 = and i1 %55, %58
  %63 = or i1 %59, %60
  %64 = or i1 %61, %62
  %65 = xor i1 %63, %64
  %66 = or i1 %56, %57
  %67 = xor i1 %66, true
  %68 = or i1 true, %58
  %69 = and i1 %67, %68
  %70 = or i1 %65, %69
  %71 = or i1 %54, %55
  %72 = select i1 %70, i32 -392378400, i32 1864656274
  store i32 %72, i32* %15
  br label %81

; <label>:73:                                     ; preds = %16
  ret void

; <label>:74:                                     ; preds = %16
  %75 = alloca %"class.__gnu_cxx::__normal_iterator.17"*, align 8
  %76 = alloca i32**, align 8
  store %"class.__gnu_cxx::__normal_iterator.17"* %0, %"class.__gnu_cxx::__normal_iterator.17"** %75, align 8
  store i32** %1, i32*** %76, align 8
  %77 = load %"class.__gnu_cxx::__normal_iterator.17"*, %"class.__gnu_cxx::__normal_iterator.17"** %75, align 8
  %78 = getelementptr inbounds %"class.__gnu_cxx::__normal_iterator.17", %"class.__gnu_cxx::__normal_iterator.17"* %77, i32 0, i32 0
  %79 = load i32**, i32*** %76, align 8
  %80 = load i32*, i32** %79, align 8
  store i32* %80, i32** %78, align 8
  store i32 -1425118258, i32* %15
  br label %81

; <label>:81:                                     ; preds = %74, %39, %19, %18
  br label %16
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZSt20uninitialized_fill_nIPimiET_S1_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  %7 = alloca i8, align 1
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  store i8 1, i8* %7, align 1
  %8 = load i32*, i32** %4, align 8
  %9 = load i64, i64* %5, align 8
  %10 = load i32*, i32** %6, align 8
  %11 = call i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32* %8, i64 %9, i32* dereferenceable(4) %10)
  ret i32* %11
}

; Function Attrs: noinline uwtable
define linkonce_odr i32* @_ZNSt22__uninitialized_fill_nILb1EE15__uninit_fill_nIPimiEET_S3_T0_RKT1_(i32*, i64, i32* dereferenceable(4)) #0 comdat align 2 {
  %4 = alloca i32*, align 8
  %5 = alloca i64, align 8
  %6 = alloca i32*, align 8
  store i32* %0, i32** %4, align 8
  store i64 %1, i64* %5, align 8
  store i32* %2, i32** %6, align 8
  %7 = load i32*, i32** %4, align 8
  %8 = load i64, i64* %5, align 8
  %9 = load i32*, i32** %6, align 8
  %10 = call i32* @_ZSt6fill_nIPimiET_S1_T0_RKT1_(i32* %7, i64 %8, i32* dereferenceable(4) %9)
  ret i32* %10
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(16) %"struct.network<int>::edge"* @_ZNSt6vectorIN7networkIiE4edgeESaIS2_EEixEm(%"class.std::vector.2"*, i64) #5 comdat align 2 {
  %3 = alloca %"class.std::vector.2"*, align 8
  %4 = alloca i64, align 8
  store %"class.std::vector.2"* %0, %"class.std::vector.2"** %3, align 8
  store i64 %1, i64* %4, align 8
  %5 = load %"class.std::vector.2"*, %"class.std::vector.2"** %3, align 8
  %6 = bitcast %"class.std::vector.2"* %5 to %"struct.std::_Vector_base.8"*
  %7 = getelementptr inbounds %"struct.std::_Vector_base.8", %"struct.std::_Vector_base.8"* %6, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl", %"struct.std::_Vector_base<network<int>::edge, std::allocator<network<int>::edge> >::_Vector_impl"* %7, i32 0, i32 0
  %9 = load %"struct.network<int>::edge"*, %"struct.network<int>::edge"** %8, align 8
  %10 = load i64, i64* %4, align 8
  %11 = getelementptr inbounds %"struct.network<int>::edge", %"struct.network<int>::edge"* %9, i64 %10
  ret %"struct.network<int>::edge"* %11
}

; Function Attrs: noinline nounwind uwtable
define linkonce_odr dereferenceable(4) i32* @_ZSt3minIiERKT_S2_S2_(i32* dereferenceable(4), i32* dereferenceable(4)) #5 comdat {
  %3 = alloca i32*
  %4 = alloca i1
  %5 = alloca i32**
  %6 = alloca i32**
  %7 = alloca i32**
  %8 = alloca i1
  %9 = alloca i1
  %10 = load i32, i32* @x.615
  %11 = load i32, i32* @y.616
  %12 = sub i32 %10, 2059472216
  %13 = sub i32 %12, 1
  %14 = add i32 %13, 2059472216
  %15 = sub i32 %10, 1
  %16 = mul i32 %10, %14
  %17 = urem i32 %16, 2
  %18 = icmp eq i32 %17, 0
  store i1 %18, i1* %9
  %19 = icmp slt i32 %11, 10
  store i1 %19, i1* %8
  %20 = alloca i32
  store i32 702144490, i32* %20
  br label %21

; <label>:21:                                     ; preds = %2, %143
  %22 = load i32, i32* %20
  switch i32 %22, label %23 [
    i32 702144490, label %24
    i32 -208452902, label %44
    i32 -247906663, label %72
    i32 1134628469, label %75
    i32 793971916, label %79
    i32 1162788779, label %83
    i32 68935098, label %111
    i32 645679136, label %129
    i32 75146439, label %131
    i32 1485680562, label %140
  ]

; <label>:23:                                     ; preds = %21
  br label %143

; <label>:24:                                     ; preds = %21
  %25 = load volatile i1, i1* %9
  %26 = load volatile i1, i1* %8
  %27 = xor i1 %25, true
  %28 = xor i1 %26, true
  %29 = xor i1 true, true
  %30 = and i1 %27, true
  %31 = and i1 %25, %29
  %32 = and i1 %28, true
  %33 = and i1 %26, %29
  %34 = or i1 %30, %31
  %35 = or i1 %32, %33
  %36 = xor i1 %34, %35
  %37 = or i1 %27, %28
  %38 = xor i1 %37, true
  %39 = or i1 true, %29
  %40 = and i1 %38, %39
  %41 = or i1 %36, %40
  %42 = or i1 %25, %26
  %43 = select i1 %41, i32 -208452902, i32 75146439
  store i32 %43, i32* %20
  br label %143

; <label>:44:                                     ; preds = %21
  %45 = alloca i32*, align 8
  store i32** %45, i32*** %7
  %46 = alloca i32*, align 8
  store i32** %46, i32*** %6
  %47 = alloca i32*, align 8
  store i32** %47, i32*** %5
  %48 = load volatile i32**, i32*** %6
  store i32* %0, i32** %48, align 8
  %49 = load volatile i32**, i32*** %5
  store i32* %1, i32** %49, align 8
  %50 = load volatile i32**, i32*** %5
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %51, align 4
  %53 = load volatile i32**, i32*** %6
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %52, %55
  store i1 %56, i1* %4
  %57 = load i32, i32* @x.615
  %58 = load i32, i32* @y.616
  %59 = add i32 %57, 296767070
  %60 = sub i32 %59, 1
  %61 = sub i32 %60, 296767070
  %62 = sub i32 %57, 1
  %63 = mul i32 %57, %61
  %64 = urem i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = icmp slt i32 %58, 10
  %67 = and i1 %65, %66
  %68 = xor i1 %65, %66
  %69 = or i1 %67, %68
  %70 = or i1 %65, %66
  %71 = select i1 %69, i32 -247906663, i32 75146439
  store i32 %71, i32* %20
  br label %143

; <label>:72:                                     ; preds = %21
  %73 = load volatile i1, i1* %4
  %74 = select i1 %73, i32 1134628469, i32 793971916
  store i32 %74, i32* %20
  br label %143

; <label>:75:                                     ; preds = %21
  %76 = load volatile i32**, i32*** %5
  %77 = load i32*, i32** %76, align 8
  %78 = load volatile i32**, i32*** %7
  store i32* %77, i32** %78, align 8
  store i32 1162788779, i32* %20
  br label %143

; <label>:79:                                     ; preds = %21
  %80 = load volatile i32**, i32*** %6
  %81 = load i32*, i32** %80, align 8
  %82 = load volatile i32**, i32*** %7
  store i32* %81, i32** %82, align 8
  store i32 1162788779, i32* %20
  br label %143

; <label>:83:                                     ; preds = %21
  %84 = load i32, i32* @x.615
  %85 = load i32, i32* @y.616
  %86 = sub i32 %84, 289712062
  %87 = sub i32 %86, 1
  %88 = add i32 %87, 289712062
  %89 = sub i32 %84, 1
  %90 = mul i32 %84, %88
  %91 = urem i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = icmp slt i32 %85, 10
  %94 = xor i1 %92, true
  %95 = xor i1 %93, true
  %96 = xor i1 false, true
  %97 = and i1 %94, false
  %98 = and i1 %92, %96
  %99 = and i1 %95, false
  %100 = and i1 %93, %96
  %101 = or i1 %97, %98
  %102 = or i1 %99, %100
  %103 = xor i1 %101, %102
  %104 = or i1 %94, %95
  %105 = xor i1 %104, true
  %106 = or i1 false, %96
  %107 = and i1 %105, %106
  %108 = or i1 %103, %107
  %109 = or i1 %92, %93
  %110 = select i1 %108, i32 68935098, i32 1485680562
  store i32 %110, i32* %20
  br label %143

; <label>:111:                                    ; preds = %21
  %112 = load volatile i32**, i32*** %7
  %113 = load i32*, i32** %112, align 8
  store i32* %113, i32** %3
  %114 = load i32, i32* @x.615
  %115 = load i32, i32* @y.616
  %116 = add i32 %114, -677946065
  %117 = sub i32 %116, 1
  %118 = sub i32 %117, -677946065
  %119 = sub i32 %114, 1
  %120 = mul i32 %114, %118
  %121 = urem i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = icmp slt i32 %115, 10
  %124 = and i1 %122, %123
  %125 = xor i1 %122, %123
  %126 = or i1 %124, %125
  %127 = or i1 %122, %123
  %128 = select i1 %126, i32 645679136, i32 1485680562
  store i32 %128, i32* %20
  br label %143

; <label>:129:                                    ; preds = %21
  %130 = load volatile i32*, i32** %3
  ret i32* %130

; <label>:131:                                    ; preds = %21
  %132 = alloca i32*, align 8
  %133 = alloca i32*, align 8
  %134 = alloca i32*, align 8
  store i32* %0, i32** %133, align 8
  store i32* %1, i32** %134, align 8
  %135 = load i32*, i32** %134, align 8
  %136 = load i32, i32* %135, align 4
  %137 = load i32*, i32** %133, align 8
  %138 = load i32, i32* %137, align 4
  %139 = icmp slt i32 %136, %138
  store i32 -208452902, i32* %20
  br label %143

; <label>:140:                                    ; preds = %21
  %141 = load volatile i32**, i32*** %7
  %142 = load i32*, i32** %141, align 8
  store i32 68935098, i32* %20
  br label %143

; <label>:143:                                    ; preds = %140, %131, %111, %83, %79, %75, %72, %44, %24, %23
  br label %21
}

; Function Attrs: noinline uwtable
define internal void @_GLOBAL__sub_I_s590941669.cpp() #0 section ".text.startup" {
  %1 = alloca i1
  %2 = alloca i1
  %3 = load i32, i32* @x.617
  %4 = load i32, i32* @y.618
  %5 = sub i32 0, 1
  %6 = add i32 %3, %5
  %7 = sub i32 %3, 1
  %8 = mul i32 %3, %6
  %9 = urem i32 %8, 2
  %10 = icmp eq i32 %9, 0
  store i1 %10, i1* %2
  %11 = icmp slt i32 %4, 10
  store i1 %11, i1* %1
  %12 = alloca i32
  store i32 992804564, i32* %12
  br label %13

; <label>:13:                                     ; preds = %0, %54
  %14 = load i32, i32* %12
  switch i32 %14, label %15 [
    i32 992804564, label %16
    i32 -1138294125, label %36
    i32 658911714, label %52
    i32 -1918314934, label %53
  ]

; <label>:15:                                     ; preds = %13
  br label %54

; <label>:16:                                     ; preds = %13
  %17 = load volatile i1, i1* %2
  %18 = load volatile i1, i1* %1
  %19 = xor i1 %17, true
  %20 = xor i1 %18, true
  %21 = xor i1 true, true
  %22 = and i1 %19, true
  %23 = and i1 %17, %21
  %24 = and i1 %20, true
  %25 = and i1 %18, %21
  %26 = or i1 %22, %23
  %27 = or i1 %24, %25
  %28 = xor i1 %26, %27
  %29 = or i1 %19, %20
  %30 = xor i1 %29, true
  %31 = or i1 true, %21
  %32 = and i1 %30, %31
  %33 = or i1 %28, %32
  %34 = or i1 %17, %18
  %35 = select i1 %33, i32 -1138294125, i32 -1918314934
  store i32 %35, i32* %12
  br label %54

; <label>:36:                                     ; preds = %13
  call void @__cxx_global_var_init()
  %37 = load i32, i32* @x.617
  %38 = load i32, i32* @y.618
  %39 = add i32 %37, -1139913380
  %40 = sub i32 %39, 1
  %41 = sub i32 %40, -1139913380
  %42 = sub i32 %37, 1
  %43 = mul i32 %37, %41
  %44 = urem i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = icmp slt i32 %38, 10
  %47 = and i1 %45, %46
  %48 = xor i1 %45, %46
  %49 = or i1 %47, %48
  %50 = or i1 %45, %46
  %51 = select i1 %49, i32 658911714, i32 -1918314934
  store i32 %51, i32* %12
  br label %54

; <label>:52:                                     ; preds = %13
  ret void

; <label>:53:                                     ; preds = %13
  call void @__cxx_global_var_init()
  store i32 -1138294125, i32* %12
  br label %54

; <label>:54:                                     ; preds = %53, %36, %16, %15
  br label %13
}

attributes #0 = { noinline uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }
attributes #4 = { noinline norecurse uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noinline noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nounwind }
attributes #12 = { noreturn }

!llvm.ident = !{!0}

!0 = !{!"Obfuscator-LLVM clang version 4.0.1  (based on Obfuscator-LLVM 4.0.1)"}
